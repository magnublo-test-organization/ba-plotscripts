<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201030 11:49:45.105" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 11:49:45.670" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 11:49:45.678" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 11:49:46.645" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 11:49:45.669" endtime="20201030 11:49:46.645"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 11:49:46.648" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 11:49:46.646" endtime="20201030 11:49:46.648"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:45.667" endtime="20201030 11:49:46.649"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:49:46.651" endtime="20201030 11:49:46.835"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:46.650" endtime="20201030 11:49:46.835"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:46.848" endtime="20201030 11:49:46.874"></status>
</kw>
<msg timestamp="20201030 11:49:46.875" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:46.846" endtime="20201030 11:49:46.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:46.877" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:46.876" endtime="20201030 11:49:46.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:49:46.880" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:49:46.878" endtime="20201030 11:49:46.881"></status>
</kw>
<status status="FAIL" starttime="20201030 11:49:46.844" endtime="20201030 11:49:46.881"></status>
</kw>
<status status="FAIL" starttime="20201030 11:49:46.842" endtime="20201030 11:49:46.882"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:46.841" endtime="20201030 11:49:46.882"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:49:46.887" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:49:46.885" endtime="20201030 11:49:46.887"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:46.883" endtime="20201030 11:49:46.888"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:46.840" endtime="20201030 11:49:46.888"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:46.839" endtime="20201030 11:49:46.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:46.889" endtime="20201030 11:49:46.890"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:46.837" endtime="20201030 11:49:46.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:46.891" endtime="20201030 11:49:46.893"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:46.836" endtime="20201030 11:49:46.894"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:45.665" endtime="20201030 11:49:46.894"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:49:46.900" endtime="20201030 11:49:46.919"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:46.898" endtime="20201030 11:49:46.920"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:46.934" endtime="20201030 11:49:46.957"></status>
</kw>
<msg timestamp="20201030 11:49:46.958" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:46.932" endtime="20201030 11:49:46.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:46.961" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:46.959" endtime="20201030 11:49:46.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:49:46.964" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:49:46.962" endtime="20201030 11:49:46.965"></status>
</kw>
<status status="FAIL" starttime="20201030 11:49:46.929" endtime="20201030 11:49:46.965"></status>
</kw>
<status status="FAIL" starttime="20201030 11:49:46.927" endtime="20201030 11:49:46.966"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:46.925" endtime="20201030 11:49:46.966"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:49:46.970" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:49:46.969" endtime="20201030 11:49:46.971"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:46.967" endtime="20201030 11:49:46.971"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:46.924" endtime="20201030 11:49:46.971"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:46.923" endtime="20201030 11:49:46.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:46.972" endtime="20201030 11:49:46.973"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:46.922" endtime="20201030 11:49:46.974"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:46.921" endtime="20201030 11:49:46.974"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:46.897" endtime="20201030 11:49:46.974"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:46.983" endtime="20201030 11:49:46.996"></status>
</kw>
<msg timestamp="20201030 11:49:46.996" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:46.981" endtime="20201030 11:49:46.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:46.999" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:46.997" endtime="20201030 11:49:46.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:47.000" endtime="20201030 11:49:47.002"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:46.977" endtime="20201030 11:49:47.002"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:46.975" endtime="20201030 11:49:47.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:49:47.007" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201030 11:49:47.006" endtime="20201030 11:49:47.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:49:47.010" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201030 11:49:47.009" endtime="20201030 11:49:47.010"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:47.004" endtime="20201030 11:49:47.011"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:49:46.894" endtime="20201030 11:49:47.012" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 11:49:45.217" endtime="20201030 11:49:47.015"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 11:49:47.071" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 11:49:47.080" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 11:49:48.141" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 11:49:47.070" endtime="20201030 11:49:48.143"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 11:49:48.148" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 11:49:48.145" endtime="20201030 11:49:48.149"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:47.068" endtime="20201030 11:49:48.150"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:49:48.154" endtime="20201030 11:49:48.378"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:48.151" endtime="20201030 11:49:48.379"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:48.391" endtime="20201030 11:49:48.416"></status>
</kw>
<msg timestamp="20201030 11:49:48.417" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:48.390" endtime="20201030 11:49:48.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:48.419" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:48.418" endtime="20201030 11:49:48.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:49:48.422" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:49:48.420" endtime="20201030 11:49:48.423"></status>
</kw>
<status status="FAIL" starttime="20201030 11:49:48.387" endtime="20201030 11:49:48.423"></status>
</kw>
<status status="FAIL" starttime="20201030 11:49:48.385" endtime="20201030 11:49:48.424"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:48.384" endtime="20201030 11:49:48.424"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:49:48.428" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:49:48.427" endtime="20201030 11:49:48.428"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:48.425" endtime="20201030 11:49:48.429"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:48.383" endtime="20201030 11:49:48.429"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:48.382" endtime="20201030 11:49:48.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:48.430" endtime="20201030 11:49:48.431"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:48.381" endtime="20201030 11:49:48.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:48.432" endtime="20201030 11:49:48.434"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:48.379" endtime="20201030 11:49:48.434"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:47.067" endtime="20201030 11:49:48.435"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:49:48.442" endtime="20201030 11:49:48.461"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:48.439" endtime="20201030 11:49:48.462"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:48.475" endtime="20201030 11:49:48.496"></status>
</kw>
<msg timestamp="20201030 11:49:48.497" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:48.473" endtime="20201030 11:49:48.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:48.499" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:48.498" endtime="20201030 11:49:48.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:49:48.502" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:49:48.500" endtime="20201030 11:49:48.503"></status>
</kw>
<status status="FAIL" starttime="20201030 11:49:48.470" endtime="20201030 11:49:48.503"></status>
</kw>
<status status="FAIL" starttime="20201030 11:49:48.468" endtime="20201030 11:49:48.504"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:48.467" endtime="20201030 11:49:48.504"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:49:48.508" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:49:48.507" endtime="20201030 11:49:48.508"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:48.505" endtime="20201030 11:49:48.508"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:48.466" endtime="20201030 11:49:48.509"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:48.465" endtime="20201030 11:49:48.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:48.510" endtime="20201030 11:49:48.511"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:48.464" endtime="20201030 11:49:48.512"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:48.462" endtime="20201030 11:49:48.512"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:48.438" endtime="20201030 11:49:48.512"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:48.521" endtime="20201030 11:49:48.536"></status>
</kw>
<msg timestamp="20201030 11:49:48.536" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:48.520" endtime="20201030 11:49:48.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:48.539" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:48.538" endtime="20201030 11:49:48.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:48.540" endtime="20201030 11:49:48.542"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:48.517" endtime="20201030 11:49:48.542"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:48.515" endtime="20201030 11:49:48.543"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:48.549" endtime="20201030 11:49:48.823"></status>
</kw>
<msg timestamp="20201030 11:49:48.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069675236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069679889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:49:48.548" endtime="20201030 11:49:48.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:48.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069675236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069679889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:49:48.826" endtime="20201030 11:49:48.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:48.831" endtime="20201030 11:49:48.833"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:48.545" endtime="20201030 11:49:48.833"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:48.543" endtime="20201030 11:49:48.834"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:49:48.837" level="INFO">${RESULT} = [{'diff': 4.652999999993357e-06}, {'diff': 6.972000000007861e-06}, {'diff': 7.027999999992263e-06}, {'diff': 1.0346999999993889e-05}, {'diff': 1.108400000000842e-05}, {'diff': 9.55600000000778e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:49:48.834" endtime="20201030 11:49:48.838"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:49:48.841" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.652999999993357e-06, 6.972000000007861e-06, 7.027999999992263e-06, 1.0346999999993889e-05, 1.108400000000842e-05, 9.55600000000778e-06, 9.152999999997857e-06, 7.651999999996884e-06, 8.0689...</msg>
<status status="PASS" starttime="20201030 11:49:48.838" endtime="20201030 11:49:48.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:49:48.845" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:49:48.844" endtime="20201030 11:49:48.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:49:48.847" level="INFO">VALUE: [4.652999999993357e-06, 6.972000000007861e-06, 7.027999999992263e-06, 1.0346999999993889e-05, 1.108400000000842e-05, 9.55600000000778e-06, 9.152999999997857e-06, 7.651999999996884e-06, 8.068999999999438e-06, 1.0777000000003478e-05, 7.777999999999952e-06, 1.0388999999999537e-05, 7.291999999992083e-06, 1.0472999999996957e-05, 4.985999999998492e-06, 9.180999999996997e-06, 1.0527999999995763e-05, 8.34800000000524e-06, 7.401999999989695e-06, 1.0957999999991475e-05, 8.207999999995663e-06, 6.278000000012329e-06, 1.0722000000004672e-05, 5.9589999999998255e-06, 7.416000000010081e-06]</msg>
<status status="PASS" starttime="20201030 11:49:48.846" endtime="20201030 11:49:48.848"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:48.842" endtime="20201030 11:49:48.848"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:48.514" endtime="20201030 11:49:48.849"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:48.514" endtime="20201030 11:49:48.849"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:48.856" endtime="20201030 11:49:48.870"></status>
</kw>
<msg timestamp="20201030 11:49:48.870" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:48.855" endtime="20201030 11:49:48.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:48.873" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:48.871" endtime="20201030 11:49:48.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:48.874" endtime="20201030 11:49:48.876"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:48.852" endtime="20201030 11:49:48.877"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:48.851" endtime="20201030 11:49:48.877"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:48.884" endtime="20201030 11:49:49.177"></status>
</kw>
<msg timestamp="20201030 11:49:49.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069675236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069679889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:49:48.882" endtime="20201030 11:49:49.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:49.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069675236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069679889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:49:49.181" endtime="20201030 11:49:49.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:49.190" endtime="20201030 11:49:49.191"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:48.880" endtime="20201030 11:49:49.192"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:48.878" endtime="20201030 11:49:49.192"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:49:49.196" level="INFO">${RESULT} = [{'diff': 4.652999999993357e-06}, {'diff': 6.972000000007861e-06}, {'diff': 7.027999999992263e-06}, {'diff': 1.0346999999993889e-05}, {'diff': 1.108400000000842e-05}, {'diff': 9.55600000000778e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:49:49.193" endtime="20201030 11:49:49.196"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:49:49.201" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.652999999993357e-06, 6.972000000007861e-06, 7.027999999992263e-06, 1.0346999999993889e-05, 1.108400000000842e-05, 9.55600000000778e-06, 9.152999999997857e-06, 7.651999999996884e-06, 8.0689...</msg>
<status status="PASS" starttime="20201030 11:49:49.197" endtime="20201030 11:49:49.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:49:49.205" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:49:49.204" endtime="20201030 11:49:49.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:49:49.207" level="INFO">VALUE: [4.652999999993357e-06, 6.972000000007861e-06, 7.027999999992263e-06, 1.0346999999993889e-05, 1.108400000000842e-05, 9.55600000000778e-06, 9.152999999997857e-06, 7.651999999996884e-06, 8.068999999999438e-06, 1.0777000000003478e-05, 7.777999999999952e-06, 1.0388999999999537e-05, 7.291999999992083e-06, 1.0472999999996957e-05, 4.985999999998492e-06, 9.180999999996997e-06, 1.0527999999995763e-05, 8.34800000000524e-06, 7.401999999989695e-06, 1.0957999999991475e-05, 8.207999999995663e-06, 6.278000000012329e-06, 1.0722000000004672e-05, 5.9589999999998255e-06, 7.416000000010081e-06, 0.323654152, 8.40200000001845e-06, 7.152999999981979e-06, 9.207999999982786e-06, 8.027999999993263e-06, 9.709000000024393e-06, 1.0277000000002978e-05, 9.180999999969242e-06, 9.90299999997779e-06, 7.527999999978885e-06, 8.139000000018104e-06, 9.541000000001798e-06, 8.222000000002172e-06, 6.985999999986614e-06, 1.0903000000006546e-05, 7.028000000020018e-06, 6.971999999993983e-06, 1.094399999995721e-05, 1.0347000000021644e-05, 6.264000000033576e-06, 6.5839999999761645e-06, 4.834000000009109e-06, 9.583000000035202e-06, 9.582999999979691e-06, 7.903000000031302e-06]</msg>
<status status="PASS" starttime="20201030 11:49:49.206" endtime="20201030 11:49:49.209"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:49.202" endtime="20201030 11:49:49.209"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:48.850" endtime="20201030 11:49:49.210"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:48.849" endtime="20201030 11:49:49.210"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:49.218" endtime="20201030 11:49:49.231"></status>
</kw>
<msg timestamp="20201030 11:49:49.232" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:49.216" endtime="20201030 11:49:49.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:49.234" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:49.233" endtime="20201030 11:49:49.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:49.235" endtime="20201030 11:49:49.237"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:49.213" endtime="20201030 11:49:49.237"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:49.212" endtime="20201030 11:49:49.238"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:49.245" endtime="20201030 11:49:49.549"></status>
</kw>
<msg timestamp="20201030 11:49:49.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069862972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.069872819, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:49:49.243" endtime="20201030 11:49:49.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:49.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069862972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.069872819, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:49:49.554" endtime="20201030 11:49:49.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:49.564" endtime="20201030 11:49:49.565"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:49.240" endtime="20201030 11:49:49.566"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:49.239" endtime="20201030 11:49:49.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:49:49.570" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 7.291999999992083e-06}, {'diff': 1.0472999999996957e-05}, {'diff': 4.985999999998492e-06}, {'diff': 9.180999999996997e-06}, {'diff': 1.0527999999995763e-05}, {'diff': 8.34800000...</msg>
<status status="PASS" starttime="20201030 11:49:49.567" endtime="20201030 11:49:49.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:49:49.576" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 7.291999999992083e-06, 1.0472999999996957e-05, 4.985999999998492e-06, 9.180999999996997e-06, 1.0527999999995763e-05, 8.34800000000524e-06, 7.401999999989695e-06, 1.0957999999991475e-05, 8...</msg>
<status status="PASS" starttime="20201030 11:49:49.572" endtime="20201030 11:49:49.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:49:49.581" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:49:49.580" endtime="20201030 11:49:49.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:49:49.583" level="INFO">VALUE: [0, 7.291999999992083e-06, 1.0472999999996957e-05, 4.985999999998492e-06, 9.180999999996997e-06, 1.0527999999995763e-05, 8.34800000000524e-06, 7.401999999989695e-06, 1.0957999999991475e-05, 8.207999999995663e-06, 6.278000000012329e-06, 1.0722000000004672e-05, 5.9589999999998255e-06, 7.416000000010081e-06, 0.323654152, 8.40200000001845e-06, 7.152999999981979e-06, 9.207999999982786e-06, 8.027999999993263e-06, 9.709000000024393e-06, 1.0277000000002978e-05, 9.180999999969242e-06, 9.90299999997779e-06, 7.527999999978885e-06, 8.139000000018104e-06, 9.541000000001798e-06, 8.222000000002172e-06, 6.985999999986614e-06, 1.0903000000006546e-05, 7.028000000020018e-06, 6.971999999993983e-06, 1.094399999995721e-05, 1.0347000000021644e-05, 6.264000000033576e-06, 6.5839999999761645e-06, 4.834000000009109e-06, 9.583000000035202e-06, 9.582999999979691e-06, 7.903000000031302e-06, 0.350783264, 8.459000000016204e-06, 4.8329999999818796e-06, 9.833000000014636e-06, 6.651999999940372e-06, 8.069000000054949e-06, 6.500000000020378e-06, 7.832999999957124e-06, 9.596999999916811e-06, 1.13470000000504e-05, 5.04099999998342e-06, 8.805999999972336e-06, 6.445000000021572e-06, 5.694999999916739e-06, 7.124999999996717e-06, 8.584000000033676e-06, 9.555999999966147e-06, 1.0653000000027113e-05, 1.1083999999939032e-05, 6.264000000033576e-06, 7.1670000000301215e-06, 8.875000000019284e-06, 9.90299999992228e-06, 5.472000000006361e-06, 6.5690000000673265e-06]</msg>
<status status="PASS" starttime="20201030 11:49:49.582" endtime="20201030 11:49:49.583"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:49.577" endtime="20201030 11:49:49.584"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:49.211" endtime="20201030 11:49:49.584"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:49.210" endtime="20201030 11:49:49.585"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:49.593" endtime="20201030 11:49:49.607"></status>
</kw>
<msg timestamp="20201030 11:49:49.607" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:49.591" endtime="20201030 11:49:49.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:49.610" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:49.608" endtime="20201030 11:49:49.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:49.611" endtime="20201030 11:49:49.612"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:49.588" endtime="20201030 11:49:49.613"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:49.587" endtime="20201030 11:49:49.613"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:49.620" endtime="20201030 11:49:49.927"></status>
</kw>
<msg timestamp="20201030 11:49:49.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.393923097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.393929111, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:49:49.618" endtime="20201030 11:49:49.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:49.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.393923097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.393929111, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:49:49.932" endtime="20201030 11:49:49.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:49.942" endtime="20201030 11:49:49.943"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:49.616" endtime="20201030 11:49:49.944"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:49.614" endtime="20201030 11:49:49.944"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:49:49.949" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 8.222000000002172e-06}, {'diff': 6.985999999986614e-06}, {'diff': 1.0903000000006546e-05}, {'diff': 7.028000000020018e-06}, {'diff': 6.971999999993983e-06}, {'diff': 1.094399999...</msg>
<status status="PASS" starttime="20201030 11:49:49.945" endtime="20201030 11:49:49.949"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:49:49.953" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 8.222000000002172e-06, 6.985999999986614e-06, 1.0903000000006546e-05, 7.028000000020018e-06, 6.971999999993983e-06, 1.094399999995721e-05, 1.0347000000021644e-05, 6.264000000033576e-06, 6...</msg>
<status status="PASS" starttime="20201030 11:49:49.950" endtime="20201030 11:49:49.954"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:49:49.958" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:49:49.957" endtime="20201030 11:49:49.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:49:49.960" level="INFO">VALUE: [0, 8.222000000002172e-06, 6.985999999986614e-06, 1.0903000000006546e-05, 7.028000000020018e-06, 6.971999999993983e-06, 1.094399999995721e-05, 1.0347000000021644e-05, 6.264000000033576e-06, 6.5839999999761645e-06, 4.834000000009109e-06, 9.583000000035202e-06, 9.582999999979691e-06, 7.903000000031302e-06, 0.350783264, 8.459000000016204e-06, 4.8329999999818796e-06, 9.833000000014636e-06, 6.651999999940372e-06, 8.069000000054949e-06, 6.500000000020378e-06, 7.832999999957124e-06, 9.596999999916811e-06, 1.13470000000504e-05, 5.04099999998342e-06, 8.805999999972336e-06, 6.445000000021572e-06, 5.694999999916739e-06, 7.124999999996717e-06, 8.584000000033676e-06, 9.555999999966147e-06, 1.0653000000027113e-05, 1.1083999999939032e-05, 6.264000000033576e-06, 7.1670000000301215e-06, 8.875000000019284e-06, 9.90299999992228e-06, 5.472000000006361e-06, 6.5690000000673265e-06, 0.3646696519999999, 8.082999999992069e-06, 8.999999999925734e-06, 5.070000000051422e-06, 6.722000000181083e-06, 8.972000000051494e-06, 9.652999999998357e-06, 8.153000000010735e-06, 9.152999999928468e-06, 7.708000000050674e-06, 8.875000000019284e-06, 8.37500000017144e-06, 9.98600000001737e-06, 7.45900000009847e-06, 5.707999999993163e-06, 8.736000000064692e-06, 8.707999999968408e-06, 5.709000000075903e-06, 7.929999999989334e-06, 9.903000000033302e-06, 1.147199999995685e-05, 5.221999999971416e-06, 7.666999999988988e-06, 9.195000000072895e-06, 9.417000000011555e-06]</msg>
<status status="PASS" starttime="20201030 11:49:49.959" endtime="20201030 11:49:49.961"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:49.955" endtime="20201030 11:49:49.961"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:49.585" endtime="20201030 11:49:49.962"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:49.585" endtime="20201030 11:49:49.962"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:49.971" endtime="20201030 11:49:49.984"></status>
</kw>
<msg timestamp="20201030 11:49:49.985" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:49.968" endtime="20201030 11:49:49.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:49.987" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:49.986" endtime="20201030 11:49:49.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:49.989" endtime="20201030 11:49:49.990"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:49.966" endtime="20201030 11:49:49.991"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:49.964" endtime="20201030 11:49:49.991"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:49.998" endtime="20201030 11:49:50.300"></status>
</kw>
<msg timestamp="20201030 11:49:50.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.745101014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.745111083, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:49:49.996" endtime="20201030 11:49:50.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:50.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.745101014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.745111083, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:49:50.305" endtime="20201030 11:49:50.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:50.315" endtime="20201030 11:49:50.317"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:49.994" endtime="20201030 11:49:50.317"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:49.992" endtime="20201030 11:49:50.317"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:49:50.322" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 6.445000000021572e-06}, {'diff': 5.694999999916739e-06}, {'diff': 7.124999999996717e-06}, {'diff': 8.584000000033676e-06}, {'diff': 9.555999999966147e-06}, {'diff': 1.0653000000...</msg>
<status status="PASS" starttime="20201030 11:49:50.318" endtime="20201030 11:49:50.322"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:49:50.327" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 6.445000000021572e-06, 5.694999999916739e-06, 7.124999999996717e-06, 8.584000000033676e-06, 9.555999999966147e-06, 1.0653000000027113e-05, 1.1083999999939032e-05, 6.264000000033576e-06, 7...</msg>
<status status="PASS" starttime="20201030 11:49:50.323" endtime="20201030 11:49:50.328"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:49:50.332" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:49:50.331" endtime="20201030 11:49:50.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:49:50.334" level="INFO">VALUE: [0, 6.445000000021572e-06, 5.694999999916739e-06, 7.124999999996717e-06, 8.584000000033676e-06, 9.555999999966147e-06, 1.0653000000027113e-05, 1.1083999999939032e-05, 6.264000000033576e-06, 7.1670000000301215e-06, 8.875000000019284e-06, 9.90299999992228e-06, 5.472000000006361e-06, 6.5690000000673265e-06, 0.3646696519999999, 8.082999999992069e-06, 8.999999999925734e-06, 5.070000000051422e-06, 6.722000000181083e-06, 8.972000000051494e-06, 9.652999999998357e-06, 8.153000000010735e-06, 9.152999999928468e-06, 7.708000000050674e-06, 8.875000000019284e-06, 8.37500000017144e-06, 9.98600000001737e-06, 7.45900000009847e-06, 5.707999999993163e-06, 8.736000000064692e-06, 8.707999999968408e-06, 5.709000000075903e-06, 7.929999999989334e-06, 9.903000000033302e-06, 1.147199999995685e-05, 5.221999999971416e-06, 7.666999999988988e-06, 9.195000000072895e-06, 9.417000000011555e-06, 0.36758929100000004, 7.957999999863574e-06, 1.1152000000125284e-05, 6.833000000039391e-06, 8.277999999917185e-06, 9.389000000137315e-06, 6.083000000156602e-06, 7.264000000173354e-06, 1.127799999989243e-05, 5.041000000094442e-06, 5.221999999971416e-06, 6.084000000017298e-06, 8.72200000001655e-06, 6.264000000033576e-06, 7.2779999999994516e-06, 1.0208999999816726e-05, 6.582999999782402e-06, 6.527999999894618e-06, 7.847000000005266e-06, 7.791999999895438e-06, 5.9160000001057256e-06, 7.666999999988988e-06, 6.6389999999749705e-06, 6.736000000007181e-06, 1.0832999999932369e-05]</msg>
<status status="PASS" starttime="20201030 11:49:50.333" endtime="20201030 11:49:50.335"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:50.328" endtime="20201030 11:49:50.335"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:49.963" endtime="20201030 11:49:50.336"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:49.962" endtime="20201030 11:49:50.336"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:50.344" endtime="20201030 11:49:50.358"></status>
</kw>
<msg timestamp="20201030 11:49:50.359" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:50.342" endtime="20201030 11:49:50.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:50.361" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:50.360" endtime="20201030 11:49:50.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:50.362" endtime="20201030 11:49:50.364"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:50.339" endtime="20201030 11:49:50.365"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:50.338" endtime="20201030 11:49:50.365"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:50.371" endtime="20201030 11:49:50.675"></status>
</kw>
<msg timestamp="20201030 11:49:50.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.110159708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.110165889, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:49:50.370" endtime="20201030 11:49:50.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:50.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.110159708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.110165889, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:49:50.680" endtime="20201030 11:49:50.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:50.690" endtime="20201030 11:49:50.691"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:50.367" endtime="20201030 11:49:50.692"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:50.366" endtime="20201030 11:49:50.693"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:49:50.697" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 9.98600000001737e-06}, {'diff': 7.45900000009847e-06}, {'diff': 5.707999999993163e-06}, {'diff': 8.736000000064692e-06}, {'diff': 8.707999999968408e-06}, {'diff': 5.709000000075...</msg>
<status status="PASS" starttime="20201030 11:49:50.693" endtime="20201030 11:49:50.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:49:50.704" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 9.98600000001737e-06, 7.45900000009847e-06, 5.707999999993163e-06, 8.736000000064692e-06, 8.707999999968408e-06, 5.709000000075903e-06, 7.929999999989334e-06, 9.903000000033302e-06, 1.147...</msg>
<status status="PASS" starttime="20201030 11:49:50.698" endtime="20201030 11:49:50.704"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:49:50.708" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:49:50.707" endtime="20201030 11:49:50.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:49:50.711" level="INFO">VALUE: [0, 9.98600000001737e-06, 7.45900000009847e-06, 5.707999999993163e-06, 8.736000000064692e-06, 8.707999999968408e-06, 5.709000000075903e-06, 7.929999999989334e-06, 9.903000000033302e-06, 1.147199999995685e-05, 5.221999999971416e-06, 7.666999999988988e-06, 9.195000000072895e-06, 9.417000000011555e-06, 0.36758929100000004, 7.957999999863574e-06, 1.1152000000125284e-05, 6.833000000039391e-06, 8.277999999917185e-06, 9.389000000137315e-06, 6.083000000156602e-06, 7.264000000173354e-06, 1.127799999989243e-05, 5.041000000094442e-06, 5.221999999971416e-06, 6.084000000017298e-06, 8.72200000001655e-06, 6.264000000033576e-06, 7.2779999999994516e-06, 1.0208999999816726e-05, 6.582999999782402e-06, 6.527999999894618e-06, 7.847000000005266e-06, 7.791999999895438e-06, 5.9160000001057256e-06, 7.666999999988988e-06, 6.6389999999749705e-06, 6.736000000007181e-06, 1.0832999999932369e-05, 0.362768875, 5.472000000006361e-06, 1.1027999999857485e-05, 8.02799999988224e-06, 5.778000000011829e-06, 8.02799999988224e-06, 7.77800000006934e-06, 8.417000000093822e-06, 8.763999999938932e-06, 5.597999999995551e-06, 7.568999999874038e-06, 6.750000000055323e-06, 7.319000000061138e-06, 9.375000000089173e-06, 9.277999999834918e-06, 9.028000000022018e-06, 1.1583000000037202e-05, 6.180000000188812e-06, 8.388000000136842e-06, 7.45800000001573e-06, 7.7769999999866e-06, 5.763999999963687e-06, 7.58400000000492e-06, 7.499999999938112e-06, 9.193999999990154e-06]</msg>
<status status="PASS" starttime="20201030 11:49:50.709" endtime="20201030 11:49:50.711"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:50.705" endtime="20201030 11:49:50.712"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:50.336" endtime="20201030 11:49:50.712"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:50.336" endtime="20201030 11:49:50.712"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:50.720" endtime="20201030 11:49:50.735"></status>
</kw>
<msg timestamp="20201030 11:49:50.736" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:50.719" endtime="20201030 11:49:50.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:50.738" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:50.737" endtime="20201030 11:49:50.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:50.739" endtime="20201030 11:49:50.741"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:50.716" endtime="20201030 11:49:50.741"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:50.715" endtime="20201030 11:49:50.742"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:50.748" endtime="20201030 11:49:51.052"></status>
</kw>
<msg timestamp="20201030 11:49:51.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.478138903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.478146056, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:49:50.747" endtime="20201030 11:49:51.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:51.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.478138903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.478146056, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:49:51.057" endtime="20201030 11:49:51.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:51.067" endtime="20201030 11:49:51.069"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:50.744" endtime="20201030 11:49:51.070"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:50.742" endtime="20201030 11:49:51.070"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:49:51.075" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 8.72200000001655e-06}, {'diff': 6.264000000033576e-06}, {'diff': 7.2779999999994516e-06}, {'diff': 1.0208999999816726e-05}, {'diff': 6.582999999782402e-06}, {'diff': 6.527999999...</msg>
<status status="PASS" starttime="20201030 11:49:51.071" endtime="20201030 11:49:51.075"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:49:51.080" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 8.72200000001655e-06, 6.264000000033576e-06, 7.2779999999994516e-06, 1.0208999999816726e-05, 6.582999999782402e-06, 6.527999999894618e-06, 7.847000000005266e-06, 7.791999999895438e-06, 5....</msg>
<status status="PASS" starttime="20201030 11:49:51.076" endtime="20201030 11:49:51.080"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:49:51.085" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:49:51.084" endtime="20201030 11:49:51.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:49:51.087" level="INFO">VALUE: [0, 8.72200000001655e-06, 6.264000000033576e-06, 7.2779999999994516e-06, 1.0208999999816726e-05, 6.582999999782402e-06, 6.527999999894618e-06, 7.847000000005266e-06, 7.791999999895438e-06, 5.9160000001057256e-06, 7.666999999988988e-06, 6.6389999999749705e-06, 6.736000000007181e-06, 1.0832999999932369e-05, 0.362768875, 5.472000000006361e-06, 1.1027999999857485e-05, 8.02799999988224e-06, 5.778000000011829e-06, 8.02799999988224e-06, 7.77800000006934e-06, 8.417000000093822e-06, 8.763999999938932e-06, 5.597999999995551e-06, 7.568999999874038e-06, 6.750000000055323e-06, 7.319000000061138e-06, 9.375000000089173e-06, 9.277999999834918e-06, 9.028000000022018e-06, 1.1583000000037202e-05, 6.180000000188812e-06, 8.388000000136842e-06, 7.45800000001573e-06, 7.7769999999866e-06, 5.763999999963687e-06, 7.58400000000492e-06, 7.499999999938112e-06, 9.193999999990154e-06, 0.36366725, 6.707999999910896e-06, 5.028000000351085e-06, 1.0166000000033648e-05, 8.959000000086093e-06, 7.596999999748277e-06, 8.12500000035854e-06, 5.416999999674488e-06, 8.347000000075155e-06, 9.014000000195921e-06, 1.0582999999897424e-05, 7.416999999954044e-06, 1.0472000000039117e-05, 8.62499999998434e-06, 1.0526999999704856e-05, 8.207999999676474e-06, 8.693999999920266e-06, 8.62499999998434e-06, 6.124999999634895e-06, 5.666000000292826e-06, 1.0278000000418785e-05, 1.0000000000065512e-05, 9.597999999666484e-06, 1.1166000000173426e-05, 1.115299999998598e-05]</msg>
<status status="PASS" starttime="20201030 11:49:51.086" endtime="20201030 11:49:51.088"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:51.081" endtime="20201030 11:49:51.088"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:50.713" endtime="20201030 11:49:51.089"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:50.713" endtime="20201030 11:49:51.089"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:51.098" endtime="20201030 11:49:51.111"></status>
</kw>
<msg timestamp="20201030 11:49:51.112" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:51.096" endtime="20201030 11:49:51.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:51.114" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:51.113" endtime="20201030 11:49:51.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:51.115" endtime="20201030 11:49:51.117"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:51.092" endtime="20201030 11:49:51.117"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:51.091" endtime="20201030 11:49:51.118"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:51.124" endtime="20201030 11:49:51.429"></status>
</kw>
<msg timestamp="20201030 11:49:51.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.841286208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.841296681, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:49:51.123" endtime="20201030 11:49:51.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:51.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.841286208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.841296681, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:49:51.434" endtime="20201030 11:49:51.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:51.443" endtime="20201030 11:49:51.445"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:51.120" endtime="20201030 11:49:51.446"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:51.119" endtime="20201030 11:49:51.446"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:49:51.450" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 7.319000000061138e-06}, {'diff': 9.375000000089173e-06}, {'diff': 9.277999999834918e-06}, {'diff': 9.028000000022018e-06}, {'diff': 1.1583000000037202e-05}, {'diff': 6.180000000...</msg>
<status status="PASS" starttime="20201030 11:49:51.447" endtime="20201030 11:49:51.451"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:49:51.456" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 7.319000000061138e-06, 9.375000000089173e-06, 9.277999999834918e-06, 9.028000000022018e-06, 1.1583000000037202e-05, 6.180000000188812e-06, 8.388000000136842e-06, 7.45800000001573e-06, 7.7...</msg>
<status status="PASS" starttime="20201030 11:49:51.451" endtime="20201030 11:49:51.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:49:51.460" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:49:51.459" endtime="20201030 11:49:51.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:49:51.463" level="INFO">VALUE: [0, 7.319000000061138e-06, 9.375000000089173e-06, 9.277999999834918e-06, 9.028000000022018e-06, 1.1583000000037202e-05, 6.180000000188812e-06, 8.388000000136842e-06, 7.45800000001573e-06, 7.7769999999866e-06, 5.763999999963687e-06, 7.58400000000492e-06, 7.499999999938112e-06, 9.193999999990154e-06, 0.36366725, 6.707999999910896e-06, 5.028000000351085e-06, 1.0166000000033648e-05, 8.959000000086093e-06, 7.596999999748277e-06, 8.12500000035854e-06, 5.416999999674488e-06, 8.347000000075155e-06, 9.014000000195921e-06, 1.0582999999897424e-05, 7.416999999954044e-06, 1.0472000000039117e-05, 8.62499999998434e-06, 1.0526999999704856e-05, 8.207999999676474e-06, 8.693999999920266e-06, 8.62499999998434e-06, 6.124999999634895e-06, 5.666000000292826e-06, 1.0278000000418785e-05, 1.0000000000065512e-05, 9.597999999666484e-06, 1.1166000000173426e-05, 1.115299999998598e-05, 0.366714875, 6.082999999712513e-06, 1.0000000000065512e-05, 8.81900000004876e-06, 7.818999999908982e-06, 1.0125000000194007e-05, 8.402999999823635e-06, 4.917000000048688e-06, 1.030499999998824e-05, 5.4579999999582185e-06, 9.527000000009167e-06, 5.902999999918279e-06, 6.194999999653561e-06, 6.402999999988168e-06, 8.403000000267724e-06, 8.847999999783696e-06, 6.957999999723796e-06, 6.319000000143404e-06, 6.903000000058057e-06, 9.888999999763115e-06, 6.9859999998200806e-06, 7.709000000133415e-06, 8.52799999995213e-06, 7.23600000007707e-06, 1.0097999999736373e-05]</msg>
<status status="PASS" starttime="20201030 11:49:51.461" endtime="20201030 11:49:51.463"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:51.457" endtime="20201030 11:49:51.464"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:51.090" endtime="20201030 11:49:51.464"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:51.089" endtime="20201030 11:49:51.464"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:51.472" endtime="20201030 11:49:51.487"></status>
</kw>
<msg timestamp="20201030 11:49:51.487" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:51.470" endtime="20201030 11:49:51.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:51.490" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:51.488" endtime="20201030 11:49:51.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:51.491" endtime="20201030 11:49:51.492"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:51.468" endtime="20201030 11:49:51.493"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:51.466" endtime="20201030 11:49:51.493"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:51.500" endtime="20201030 11:49:51.810"></status>
</kw>
<msg timestamp="20201030 11:49:51.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.20535, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.205357639, 'source': 'DUT_IC', 'event': 'RISING...</msg>
<status status="PASS" starttime="20201030 11:49:51.498" endtime="20201030 11:49:51.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:51.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.20535, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.205357639, 'source': 'DUT_IC', 'event': 'RISING...</msg>
<status status="PASS" starttime="20201030 11:49:51.815" endtime="20201030 11:49:51.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:51.825" endtime="20201030 11:49:51.827"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:51.496" endtime="20201030 11:49:51.827"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:51.494" endtime="20201030 11:49:51.828"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:49:51.832" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.0472000000039117e-05}, {'diff': 8.62499999998434e-06}, {'diff': 1.0526999999704856e-05}, {'diff': 8.207999999676474e-06}, {'diff': 8.693999999920266e-06}, {'diff': 8.624999999...</msg>
<status status="PASS" starttime="20201030 11:49:51.828" endtime="20201030 11:49:51.832"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:49:51.837" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.0472000000039117e-05, 8.62499999998434e-06, 1.0526999999704856e-05, 8.207999999676474e-06, 8.693999999920266e-06, 8.62499999998434e-06, 6.124999999634895e-06, 5.666000000292826e-06, 1.0...</msg>
<status status="PASS" starttime="20201030 11:49:51.833" endtime="20201030 11:49:51.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:49:51.842" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:49:51.841" endtime="20201030 11:49:51.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:49:51.845" level="INFO">VALUE: [0, 1.0472000000039117e-05, 8.62499999998434e-06, 1.0526999999704856e-05, 8.207999999676474e-06, 8.693999999920266e-06, 8.62499999998434e-06, 6.124999999634895e-06, 5.666000000292826e-06, 1.0278000000418785e-05, 1.0000000000065512e-05, 9.597999999666484e-06, 1.1166000000173426e-05, 1.115299999998598e-05, 0.366714875, 6.082999999712513e-06, 1.0000000000065512e-05, 8.81900000004876e-06, 7.818999999908982e-06, 1.0125000000194007e-05, 8.402999999823635e-06, 4.917000000048688e-06, 1.030499999998824e-05, 5.4579999999582185e-06, 9.527000000009167e-06, 5.902999999918279e-06, 6.194999999653561e-06, 6.402999999988168e-06, 8.403000000267724e-06, 8.847999999783696e-06, 6.957999999723796e-06, 6.319000000143404e-06, 6.903000000058057e-06, 9.888999999763115e-06, 6.9859999998200806e-06, 7.709000000133415e-06, 8.52799999995213e-06, 7.23600000007707e-06, 1.0097999999736373e-05, 0.36495384799999986, 7.861999999914104e-06, 8.165999999754092e-06, 9.888000000124464e-06, 9.26299999992608e-06, 8.902999999893524e-06, 8.958999999642003e-06, 9.208999999898992e-06, 8.221999999946661e-06, 9.568999999931549e-06, 6.332999999969502e-06, 7.388999999857759e-06, 1.065299999991609e-05, 7.68100000003713e-06, 9.582999999757646e-06, 8.333000000249058e-06, 7.083999999935031e-06, 9.208000000260341e-06, 9.402999999963413e-06, 6.333000000413591e-06, 4.832999999759835e-06, 1.020799999995603e-05, 9.66699999960241e-06, 5.722000000041305e-06, 4.333999999772686e-06]</msg>
<status status="PASS" starttime="20201030 11:49:51.843" endtime="20201030 11:49:51.845"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:51.839" endtime="20201030 11:49:51.846"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:51.465" endtime="20201030 11:49:51.846"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:51.465" endtime="20201030 11:49:51.846"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:51.854" endtime="20201030 11:49:51.868"></status>
</kw>
<msg timestamp="20201030 11:49:51.869" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:51.853" endtime="20201030 11:49:51.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:51.871" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:51.870" endtime="20201030 11:49:51.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:51.872" endtime="20201030 11:49:51.874"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:51.850" endtime="20201030 11:49:51.874"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:51.848" endtime="20201030 11:49:51.875"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:51.882" endtime="20201030 11:49:52.198"></status>
</kw>
<msg timestamp="20201030 11:49:52.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.572479125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.572488111, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:49:51.881" endtime="20201030 11:49:52.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:52.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.572479125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.572488111, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:49:52.203" endtime="20201030 11:49:52.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:52.212" endtime="20201030 11:49:52.214"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:51.877" endtime="20201030 11:49:52.215"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:51.875" endtime="20201030 11:49:52.215"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:49:52.219" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 6.194999999653561e-06}, {'diff': 6.402999999988168e-06}, {'diff': 8.403000000267724e-06}, {'diff': 8.847999999783696e-06}, {'diff': 6.957999999723796e-06}, {'diff': 6.3190000001...</msg>
<status status="PASS" starttime="20201030 11:49:52.216" endtime="20201030 11:49:52.220"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:49:52.224" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 6.194999999653561e-06, 6.402999999988168e-06, 8.403000000267724e-06, 8.847999999783696e-06, 6.957999999723796e-06, 6.319000000143404e-06, 6.903000000058057e-06, 9.888999999763115e-06, 6.9...</msg>
<status status="PASS" starttime="20201030 11:49:52.220" endtime="20201030 11:49:52.224"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:49:52.229" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:49:52.227" endtime="20201030 11:49:52.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:49:52.232" level="INFO">VALUE: [0, 6.194999999653561e-06, 6.402999999988168e-06, 8.403000000267724e-06, 8.847999999783696e-06, 6.957999999723796e-06, 6.319000000143404e-06, 6.903000000058057e-06, 9.888999999763115e-06, 6.9859999998200806e-06, 7.709000000133415e-06, 8.52799999995213e-06, 7.23600000007707e-06, 1.0097999999736373e-05, 0.36495384799999986, 7.861999999914104e-06, 8.165999999754092e-06, 9.888000000124464e-06, 9.26299999992608e-06, 8.902999999893524e-06, 8.958999999642003e-06, 9.208999999898992e-06, 8.221999999946661e-06, 9.568999999931549e-06, 6.332999999969502e-06, 7.388999999857759e-06, 1.065299999991609e-05, 7.68100000003713e-06, 9.582999999757646e-06, 8.333000000249058e-06, 7.083999999935031e-06, 9.208000000260341e-06, 9.402999999963413e-06, 6.333000000413591e-06, 4.832999999759835e-06, 1.020799999995603e-05, 9.66699999960241e-06, 5.722000000041305e-06, 4.333999999772686e-06, 0.37266252700000013, 1.0167000000116388e-05, 7.1390000000448595e-06, 6.777999999929563e-06, 7.027000000103811e-06, 1.1889000000042671e-05, 7.58400000000492e-06, 1.0236000000052314e-05, 7.973000000216501e-06, 4.179999999909256e-06, 9.152999999706424e-06, 6.374999999891884e-06, 9.361000000041031e-06, 1.0096999999653633e-05, 8.707999999746363e-06, 4.901999999695761e-06, 8.958000000003352e-06, 5.722000000041305e-06, 7.944000000037477e-06, 7.903000000197835e-06, 7.874999999657462e-06, 6.9580000001678854e-06, 6.721999999736994e-06, 8.02800000032633e-06, 7.388999999857759e-06]</msg>
<status status="PASS" starttime="20201030 11:49:52.230" endtime="20201030 11:49:52.232"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:52.225" endtime="20201030 11:49:52.233"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:51.847" endtime="20201030 11:49:52.233"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:51.847" endtime="20201030 11:49:52.233"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:52.241" endtime="20201030 11:49:52.256"></status>
</kw>
<msg timestamp="20201030 11:49:52.256" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:52.240" endtime="20201030 11:49:52.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:52.259" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:52.257" endtime="20201030 11:49:52.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:52.260" endtime="20201030 11:49:52.262"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:52.237" endtime="20201030 11:49:52.262"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:52.235" endtime="20201030 11:49:52.263"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:52.269" endtime="20201030 11:49:52.585"></status>
</kw>
<msg timestamp="20201030 11:49:52.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.937825611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.937831514, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:49:52.267" endtime="20201030 11:49:52.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:52.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.937825611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.937831514, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:49:52.590" endtime="20201030 11:49:52.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:52.600" endtime="20201030 11:49:52.602"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:52.265" endtime="20201030 11:49:52.602"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:52.263" endtime="20201030 11:49:52.603"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:49:52.607" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.065299999991609e-05}, {'diff': 7.68100000003713e-06}, {'diff': 9.582999999757646e-06}, {'diff': 8.333000000249058e-06}, {'diff': 7.083999999935031e-06}, {'diff': 9.20800000026...</msg>
<status status="PASS" starttime="20201030 11:49:52.603" endtime="20201030 11:49:52.607"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:49:52.612" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.065299999991609e-05, 7.68100000003713e-06, 9.582999999757646e-06, 8.333000000249058e-06, 7.083999999935031e-06, 9.208000000260341e-06, 9.402999999963413e-06, 6.333000000413591e-06, 4.83...</msg>
<status status="PASS" starttime="20201030 11:49:52.608" endtime="20201030 11:49:52.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:49:52.617" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:49:52.616" endtime="20201030 11:49:52.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:49:52.619" level="INFO">VALUE: [0, 1.065299999991609e-05, 7.68100000003713e-06, 9.582999999757646e-06, 8.333000000249058e-06, 7.083999999935031e-06, 9.208000000260341e-06, 9.402999999963413e-06, 6.333000000413591e-06, 4.832999999759835e-06, 1.020799999995603e-05, 9.66699999960241e-06, 5.722000000041305e-06, 4.333999999772686e-06, 0.37266252700000013, 1.0167000000116388e-05, 7.1390000000448595e-06, 6.777999999929563e-06, 7.027000000103811e-06, 1.1889000000042671e-05, 7.58400000000492e-06, 1.0236000000052314e-05, 7.973000000216501e-06, 4.179999999909256e-06, 9.152999999706424e-06, 6.374999999891884e-06, 9.361000000041031e-06, 1.0096999999653633e-05, 8.707999999746363e-06, 4.901999999695761e-06, 8.958000000003352e-06, 5.722000000041305e-06, 7.944000000037477e-06, 7.903000000197835e-06, 7.874999999657462e-06, 6.9580000001678854e-06, 6.721999999736994e-06, 8.02800000032633e-06, 7.388999999857759e-06, 0.3759679029999998, 6.152999999731179e-06, 1.0361000000180809e-05, 8.764000000383021e-06, 6.485999999750192e-06, 7.819999999991722e-06, 9.222000000086439e-06, 8.97199999982945e-06, 6.88899999978787e-06, 7.0549999997560064e-06, 6.028000000046774e-06, 1.0028000000161796e-05, 7.1939999997105986e-06, 7.4580000002377744e-06, 9.777999999904807e-06, 8.02799999988224e-06, 7.903000000197835e-06, 7.526999999729611e-06, 6.125000000078984e-06, 8.889000000067426e-06, 8.347000000075155e-06, 7.569999999734733e-06, 6.040999999790131e-06, 9.583000000201736e-06, 7.222000000250972e-06]</msg>
<status status="PASS" starttime="20201030 11:49:52.618" endtime="20201030 11:49:52.620"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:52.613" endtime="20201030 11:49:52.620"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:52.234" endtime="20201030 11:49:52.621"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:52.234" endtime="20201030 11:49:52.621"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:52.629" endtime="20201030 11:49:52.642"></status>
</kw>
<msg timestamp="20201030 11:49:52.643" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:52.627" endtime="20201030 11:49:52.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:52.645" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:52.644" endtime="20201030 11:49:52.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:52.646" endtime="20201030 11:49:52.648"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:52.624" endtime="20201030 11:49:52.649"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:52.623" endtime="20201030 11:49:52.649"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:52.656" endtime="20201030 11:49:52.974"></status>
</kw>
<msg timestamp="20201030 11:49:52.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.31088, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.310887653, 'source': 'DUT_IC', 'event': 'RISING...</msg>
<status status="PASS" starttime="20201030 11:49:52.654" endtime="20201030 11:49:52.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:52.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.31088, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.310887653, 'source': 'DUT_IC', 'event': 'RISING...</msg>
<status status="PASS" starttime="20201030 11:49:52.979" endtime="20201030 11:49:52.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:52.989" endtime="20201030 11:49:52.991"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:52.652" endtime="20201030 11:49:52.991"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:52.650" endtime="20201030 11:49:52.992"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:49:52.996" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 9.361000000041031e-06}, {'diff': 1.0096999999653633e-05}, {'diff': 8.707999999746363e-06}, {'diff': 4.901999999695761e-06}, {'diff': 8.958000000003352e-06}, {'diff': 5.722000000...</msg>
<status status="PASS" starttime="20201030 11:49:52.992" endtime="20201030 11:49:52.996"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:49:53.001" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 9.361000000041031e-06, 1.0096999999653633e-05, 8.707999999746363e-06, 4.901999999695761e-06, 8.958000000003352e-06, 5.722000000041305e-06, 7.944000000037477e-06, 7.903000000197835e-06, 7....</msg>
<status status="PASS" starttime="20201030 11:49:52.997" endtime="20201030 11:49:53.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:49:53.005" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:49:53.004" endtime="20201030 11:49:53.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:49:53.008" level="INFO">VALUE: [0, 9.361000000041031e-06, 1.0096999999653633e-05, 8.707999999746363e-06, 4.901999999695761e-06, 8.958000000003352e-06, 5.722000000041305e-06, 7.944000000037477e-06, 7.903000000197835e-06, 7.874999999657462e-06, 6.9580000001678854e-06, 6.721999999736994e-06, 8.02800000032633e-06, 7.388999999857759e-06, 0.3759679029999998, 6.152999999731179e-06, 1.0361000000180809e-05, 8.764000000383021e-06, 6.485999999750192e-06, 7.819999999991722e-06, 9.222000000086439e-06, 8.97199999982945e-06, 6.88899999978787e-06, 7.0549999997560064e-06, 6.028000000046774e-06, 1.0028000000161796e-05, 7.1939999997105986e-06, 7.4580000002377744e-06, 9.777999999904807e-06, 8.02799999988224e-06, 7.903000000197835e-06, 7.526999999729611e-06, 6.125000000078984e-06, 8.889000000067426e-06, 8.347000000075155e-06, 7.569999999734733e-06, 6.040999999790131e-06, 9.583000000201736e-06, 7.222000000250972e-06, 0.37786244499999944, 6.09800000006544e-06, 1.040300000010319e-05, 6.153000000175268e-06, 7.833000000623258e-06, 5.8340000004264425e-06, 8.110999999644264e-06, 7.513999999986254e-06, 8.762999999412102e-06, 6.903000000058057e-06, 9.902999999589213e-06, 9.138999999436237e-06, 7.709000000133415e-06, 4.208000000005541e-06, 7.221999999806883e-06, 1.0333999999723176e-05, 8.207999999676474e-06, 8.709000000273193e-06, 1.040300000010319e-05, 8.139000000184637e-06, 6.416999999814266e-06, 9.277999999390829e-06, 7.847000000005266e-06, 1.0084000000354365e-05, 7.749999999973056e-06]</msg>
<status status="PASS" starttime="20201030 11:49:53.006" endtime="20201030 11:49:53.008"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:53.002" endtime="20201030 11:49:53.009"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:52.622" endtime="20201030 11:49:53.009"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:52.621" endtime="20201030 11:49:53.009"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:53.018" endtime="20201030 11:49:53.033"></status>
</kw>
<msg timestamp="20201030 11:49:53.033" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:53.016" endtime="20201030 11:49:53.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:53.036" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:53.034" endtime="20201030 11:49:53.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:53.037" endtime="20201030 11:49:53.038"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:53.013" endtime="20201030 11:49:53.039"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:53.011" endtime="20201030 11:49:53.039"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:53.046" endtime="20201030 11:49:53.360"></status>
</kw>
<msg timestamp="20201030 11:49:53.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.687232597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.687242931, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:49:53.044" endtime="20201030 11:49:53.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:53.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.687232597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.687242931, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:49:53.365" endtime="20201030 11:49:53.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:53.375" endtime="20201030 11:49:53.376"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:53.042" endtime="20201030 11:49:53.377"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:53.040" endtime="20201030 11:49:53.377"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:49:53.381" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 7.1939999997105986e-06}, {'diff': 7.4580000002377744e-06}, {'diff': 9.777999999904807e-06}, {'diff': 8.02799999988224e-06}, {'diff': 7.903000000197835e-06}, {'diff': 7.526999999...</msg>
<status status="PASS" starttime="20201030 11:49:53.378" endtime="20201030 11:49:53.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:49:53.387" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 7.1939999997105986e-06, 7.4580000002377744e-06, 9.777999999904807e-06, 8.02799999988224e-06, 7.903000000197835e-06, 7.526999999729611e-06, 6.125000000078984e-06, 8.889000000067426e-06, 8....</msg>
<status status="PASS" starttime="20201030 11:49:53.382" endtime="20201030 11:49:53.387"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:49:53.391" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:49:53.390" endtime="20201030 11:49:53.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:49:53.394" level="INFO">VALUE: [0, 7.1939999997105986e-06, 7.4580000002377744e-06, 9.777999999904807e-06, 8.02799999988224e-06, 7.903000000197835e-06, 7.526999999729611e-06, 6.125000000078984e-06, 8.889000000067426e-06, 8.347000000075155e-06, 7.569999999734733e-06, 6.040999999790131e-06, 9.583000000201736e-06, 7.222000000250972e-06, 0.37786244499999944, 6.09800000006544e-06, 1.040300000010319e-05, 6.153000000175268e-06, 7.833000000623258e-06, 5.8340000004264425e-06, 8.110999999644264e-06, 7.513999999986254e-06, 8.762999999412102e-06, 6.903000000058057e-06, 9.902999999589213e-06, 9.138999999436237e-06, 7.709000000133415e-06, 4.208000000005541e-06, 7.221999999806883e-06, 1.0333999999723176e-05, 8.207999999676474e-06, 8.709000000273193e-06, 1.040300000010319e-05, 8.139000000184637e-06, 6.416999999814266e-06, 9.277999999390829e-06, 7.847000000005266e-06, 1.0084000000354365e-05, 7.749999999973056e-06, 0.377312431, 1.0985999999491014e-05, 7.472000000063872e-06, 1.065200000027744e-05, 8.402999999823635e-06, 9.943999999428854e-06, 8.402999999823635e-06, 8.459000000016204e-06, 4.582999999946935e-06, 1.0277999999530607e-05, 8.041000000069687e-06, 4.972000000158516e-06, 8.77799999976503e-06, 1.0708000000470008e-05, 8.818999999604671e-06, 9.4170000002336e-06, 5.833000000343702e-06, 9.764000000522799e-06, 5.4729999998670564e-06, 7.513999999986254e-06, 6.2080000002850966e-06, 8.889000000067426e-06, 9.083000000131847e-06, 8.832999999874858e-06, 1.0346999999910622e-05]</msg>
<status status="PASS" starttime="20201030 11:49:53.392" endtime="20201030 11:49:53.394"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:53.388" endtime="20201030 11:49:53.395"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:53.010" endtime="20201030 11:49:53.395"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:53.010" endtime="20201030 11:49:53.395"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:53.403" endtime="20201030 11:49:53.418"></status>
</kw>
<msg timestamp="20201030 11:49:53.418" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:53.402" endtime="20201030 11:49:53.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:53.421" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:53.419" endtime="20201030 11:49:53.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:53.422" endtime="20201030 11:49:53.423"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:53.399" endtime="20201030 11:49:53.424"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:53.397" endtime="20201030 11:49:53.424"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:53.431" endtime="20201030 11:49:53.748"></status>
</kw>
<msg timestamp="20201030 11:49:53.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.065481542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.065487569, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:49:53.429" endtime="20201030 11:49:53.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:53.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.065481542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.065487569, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:49:53.753" endtime="20201030 11:49:53.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:53.763" endtime="20201030 11:49:53.764"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:53.427" endtime="20201030 11:49:53.765"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:53.425" endtime="20201030 11:49:53.765"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:49:53.770" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 7.709000000133415e-06}, {'diff': 4.208000000005541e-06}, {'diff': 7.221999999806883e-06}, {'diff': 1.0333999999723176e-05}, {'diff': 8.207999999676474e-06}, {'diff': 8.709000000...</msg>
<status status="PASS" starttime="20201030 11:49:53.766" endtime="20201030 11:49:53.770"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:49:53.775" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 7.709000000133415e-06, 4.208000000005541e-06, 7.221999999806883e-06, 1.0333999999723176e-05, 8.207999999676474e-06, 8.709000000273193e-06, 1.040300000010319e-05, 8.139000000184637e-06, 6....</msg>
<status status="PASS" starttime="20201030 11:49:53.771" endtime="20201030 11:49:53.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:49:53.780" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:49:53.779" endtime="20201030 11:49:53.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:49:53.782" level="INFO">VALUE: [0, 7.709000000133415e-06, 4.208000000005541e-06, 7.221999999806883e-06, 1.0333999999723176e-05, 8.207999999676474e-06, 8.709000000273193e-06, 1.040300000010319e-05, 8.139000000184637e-06, 6.416999999814266e-06, 9.277999999390829e-06, 7.847000000005266e-06, 1.0084000000354365e-05, 7.749999999973056e-06, 0.377312431, 1.0985999999491014e-05, 7.472000000063872e-06, 1.065200000027744e-05, 8.402999999823635e-06, 9.943999999428854e-06, 8.402999999823635e-06, 8.459000000016204e-06, 4.582999999946935e-06, 1.0277999999530607e-05, 8.041000000069687e-06, 4.972000000158516e-06, 8.77799999976503e-06, 1.0708000000470008e-05, 8.818999999604671e-06, 9.4170000002336e-06, 5.833000000343702e-06, 9.764000000522799e-06, 5.4729999998670564e-06, 7.513999999986254e-06, 6.2080000002850966e-06, 8.889000000067426e-06, 9.083000000131847e-06, 8.832999999874858e-06, 1.0346999999910622e-05, 0.3748244300000003, 6.9169999994400655e-06, 5.347000000099911e-06, 8.527000000313478e-06, 9.16699999997661e-06, 4.889000000396493e-06, 8.72300000054338e-06, 1.0542000000057783e-05, 9.846999999396644e-06, 7.861000000275453e-06, 9.791000000092254e-06, 5.778000000233874e-06, 7.83299999973508e-06, 6.458000000542086e-06, 8.514000000126032e-06, 5.903000000806458e-06, 7.416999999954044e-06, 8.347999999713807e-06, 8.457999999933463e-06, 8.320000000061611e-06, 9.957999999699041e-06, 9.80600000044518e-06, 8.250000000487034e-06, 8.97299999991219e-06, 1.0152999999846202e-05]</msg>
<status status="PASS" starttime="20201030 11:49:53.781" endtime="20201030 11:49:53.783"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:53.776" endtime="20201030 11:49:53.783"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:53.396" endtime="20201030 11:49:53.784"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:53.396" endtime="20201030 11:49:53.784"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:53.792" endtime="20201030 11:49:53.806"></status>
</kw>
<msg timestamp="20201030 11:49:53.806" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:53.790" endtime="20201030 11:49:53.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:53.809" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:53.807" endtime="20201030 11:49:53.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:53.810" endtime="20201030 11:49:53.811"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:53.788" endtime="20201030 11:49:53.812"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:53.786" endtime="20201030 11:49:53.812"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:53.819" endtime="20201030 11:49:54.137"></status>
</kw>
<msg timestamp="20201030 11:49:54.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.443198736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.443206514, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:49:53.817" endtime="20201030 11:49:54.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:54.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.443198736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.443206514, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:49:54.142" endtime="20201030 11:49:54.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:54.152" endtime="20201030 11:49:54.153"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:53.815" endtime="20201030 11:49:54.154"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:53.813" endtime="20201030 11:49:54.154"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:49:54.159" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 8.77799999976503e-06}, {'diff': 1.0708000000470008e-05}, {'diff': 8.818999999604671e-06}, {'diff': 9.4170000002336e-06}, {'diff': 5.833000000343702e-06}, {'diff': 9.764000000522...</msg>
<status status="PASS" starttime="20201030 11:49:54.155" endtime="20201030 11:49:54.159"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:49:54.163" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 8.77799999976503e-06, 1.0708000000470008e-05, 8.818999999604671e-06, 9.4170000002336e-06, 5.833000000343702e-06, 9.764000000522799e-06, 5.4729999998670564e-06, 7.513999999986254e-06, 6.20...</msg>
<status status="PASS" starttime="20201030 11:49:54.160" endtime="20201030 11:49:54.164"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:49:54.168" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:49:54.167" endtime="20201030 11:49:54.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:49:54.170" level="INFO">VALUE: [0, 8.77799999976503e-06, 1.0708000000470008e-05, 8.818999999604671e-06, 9.4170000002336e-06, 5.833000000343702e-06, 9.764000000522799e-06, 5.4729999998670564e-06, 7.513999999986254e-06, 6.2080000002850966e-06, 8.889000000067426e-06, 9.083000000131847e-06, 8.832999999874858e-06, 1.0346999999910622e-05, 0.3748244300000003, 6.9169999994400655e-06, 5.347000000099911e-06, 8.527000000313478e-06, 9.16699999997661e-06, 4.889000000396493e-06, 8.72300000054338e-06, 1.0542000000057783e-05, 9.846999999396644e-06, 7.861000000275453e-06, 9.791000000092254e-06, 5.778000000233874e-06, 7.83299999973508e-06, 6.458000000542086e-06, 8.514000000126032e-06, 5.903000000806458e-06, 7.416999999954044e-06, 8.347999999713807e-06, 8.457999999933463e-06, 8.320000000061611e-06, 9.957999999699041e-06, 9.80600000044518e-06, 8.250000000487034e-06, 8.97299999991219e-06, 1.0152999999846202e-05, 0.37711891700000066, 6.9580000001678854e-06, 8.097000000262256e-06, 6.83300000048348e-06, 8.792000000035216e-06, 9.472000000343428e-06, 7.73599999970287e-06, 6.19500000009765e-06, 9.388999999693226e-06, 1.0875000000076795e-05, 7.874999999657462e-06, 8.708000000190452e-06, 7.402000000489295e-06, 7.013000000277714e-06, 1.0443999999942832e-05, 9.847000000284822e-06, 1.0278000000418785e-05, 5.638999999391103e-06, 6.166000000362715e-06, 6.153000000175268e-06, 9.598000000110574e-06, 9.833000000014636e-06, 6.263999999589487e-06, 9.416999999345421e-06, 6.903000000058057e-06]</msg>
<status status="PASS" starttime="20201030 11:49:54.169" endtime="20201030 11:49:54.171"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:54.164" endtime="20201030 11:49:54.171"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:53.785" endtime="20201030 11:49:54.172"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:53.784" endtime="20201030 11:49:54.172"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:54.181" endtime="20201030 11:49:54.195"></status>
</kw>
<msg timestamp="20201030 11:49:54.195" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:54.179" endtime="20201030 11:49:54.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:54.198" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:54.196" endtime="20201030 11:49:54.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:54.199" endtime="20201030 11:49:54.200"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:54.176" endtime="20201030 11:49:54.201"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:54.174" endtime="20201030 11:49:54.201"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:54.208" endtime="20201030 11:49:54.528"></status>
</kw>
<msg timestamp="20201030 11:49:54.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.818427875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.818433667, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:49:54.206" endtime="20201030 11:49:54.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:54.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.818427875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.818433667, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:49:54.538" endtime="20201030 11:49:54.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:54.560" endtime="20201030 11:49:54.563"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:54.204" endtime="20201030 11:49:54.564"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:54.202" endtime="20201030 11:49:54.565"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:49:54.574" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 7.83299999973508e-06}, {'diff': 6.458000000542086e-06}, {'diff': 8.514000000126032e-06}, {'diff': 5.903000000806458e-06}, {'diff': 7.416999999954044e-06}, {'diff': 8.34799999971...</msg>
<status status="PASS" starttime="20201030 11:49:54.567" endtime="20201030 11:49:54.575"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:49:54.586" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 7.83299999973508e-06, 6.458000000542086e-06, 8.514000000126032e-06, 5.903000000806458e-06, 7.416999999954044e-06, 8.347999999713807e-06, 8.457999999933463e-06, 8.320000000061611e-06, 9.95...</msg>
<status status="PASS" starttime="20201030 11:49:54.576" endtime="20201030 11:49:54.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:49:54.596" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:49:54.594" endtime="20201030 11:49:54.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:49:54.601" level="INFO">VALUE: [0, 7.83299999973508e-06, 6.458000000542086e-06, 8.514000000126032e-06, 5.903000000806458e-06, 7.416999999954044e-06, 8.347999999713807e-06, 8.457999999933463e-06, 8.320000000061611e-06, 9.957999999699041e-06, 9.80600000044518e-06, 8.250000000487034e-06, 8.97299999991219e-06, 1.0152999999846202e-05, 0.37711891700000066, 6.9580000001678854e-06, 8.097000000262256e-06, 6.83300000048348e-06, 8.792000000035216e-06, 9.472000000343428e-06, 7.73599999970287e-06, 6.19500000009765e-06, 9.388999999693226e-06, 1.0875000000076795e-05, 7.874999999657462e-06, 8.708000000190452e-06, 7.402000000489295e-06, 7.013000000277714e-06, 1.0443999999942832e-05, 9.847000000284822e-06, 1.0278000000418785e-05, 5.638999999391103e-06, 6.166000000362715e-06, 6.153000000175268e-06, 9.598000000110574e-06, 9.833000000014636e-06, 6.263999999589487e-06, 9.416999999345421e-06, 6.903000000058057e-06, 0.37830873600000015, 9.527999999647818e-06, 9.473000000426168e-06, 9.888999999319026e-06, 8.096999999374077e-06, 6.4439999993837205e-06, 6.277999999859674e-06, 8.81900000049285e-06, 8.693999999920266e-06, 1.0332999999640435e-05, 1.001399999989161e-05, 6.0270000004081226e-06, 8.792000000035216e-06, 9.583000000645825e-06, 8.08399999918663e-06, 8.320000000061611e-06, 8.0269999997995e-06, 8.889000000067426e-06, 7.722000000320861e-06, 7.639000000558838e-06, 7.028000000630641e-06, 6.652000000606506e-06, 6.596999999608499e-06, 7.791999999895438e-06, 6.223000000638024e-06]</msg>
<status status="PASS" starttime="20201030 11:49:54.598" endtime="20201030 11:49:54.602"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:54.589" endtime="20201030 11:49:54.603"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:54.173" endtime="20201030 11:49:54.604"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:54.172" endtime="20201030 11:49:54.605"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:54.621" endtime="20201030 11:49:54.635"></status>
</kw>
<msg timestamp="20201030 11:49:54.635" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:54.617" endtime="20201030 11:49:54.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:54.638" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:54.636" endtime="20201030 11:49:54.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:54.639" endtime="20201030 11:49:54.641"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:54.612" endtime="20201030 11:49:54.641"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:54.609" endtime="20201030 11:49:54.641"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:54.648" endtime="20201030 11:49:54.964"></status>
</kw>
<msg timestamp="20201030 11:49:54.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.195940472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.195947431, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:49:54.646" endtime="20201030 11:49:54.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:54.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.195940472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.195947431, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:49:54.969" endtime="20201030 11:49:54.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:54.978" endtime="20201030 11:49:54.980"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:54.644" endtime="20201030 11:49:54.981"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:54.642" endtime="20201030 11:49:54.981"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:49:54.986" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 7.402000000489295e-06}, {'diff': 7.013000000277714e-06}, {'diff': 1.0443999999942832e-05}, {'diff': 9.847000000284822e-06}, {'diff': 1.0278000000418785e-05}, {'diff': 5.63899999...</msg>
<status status="PASS" starttime="20201030 11:49:54.982" endtime="20201030 11:49:54.986"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:49:54.991" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 7.402000000489295e-06, 7.013000000277714e-06, 1.0443999999942832e-05, 9.847000000284822e-06, 1.0278000000418785e-05, 5.638999999391103e-06, 6.166000000362715e-06, 6.153000000175268e-06, 9...</msg>
<status status="PASS" starttime="20201030 11:49:54.987" endtime="20201030 11:49:54.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:49:54.995" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:49:54.994" endtime="20201030 11:49:54.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:49:54.998" level="INFO">VALUE: [0, 7.402000000489295e-06, 7.013000000277714e-06, 1.0443999999942832e-05, 9.847000000284822e-06, 1.0278000000418785e-05, 5.638999999391103e-06, 6.166000000362715e-06, 6.153000000175268e-06, 9.598000000110574e-06, 9.833000000014636e-06, 6.263999999589487e-06, 9.416999999345421e-06, 6.903000000058057e-06, 0.37830873600000015, 9.527999999647818e-06, 9.473000000426168e-06, 9.888999999319026e-06, 8.096999999374077e-06, 6.4439999993837205e-06, 6.277999999859674e-06, 8.81900000049285e-06, 8.693999999920266e-06, 1.0332999999640435e-05, 1.001399999989161e-05, 6.0270000004081226e-06, 8.792000000035216e-06, 9.583000000645825e-06, 8.08399999918663e-06, 8.320000000061611e-06, 8.0269999997995e-06, 8.889000000067426e-06, 7.722000000320861e-06, 7.639000000558838e-06, 7.028000000630641e-06, 6.652000000606506e-06, 6.596999999608499e-06, 7.791999999895438e-06, 6.223000000638024e-06, 0.4297513049999999, 6.528000000116663e-06, 9.903000000477391e-06, 1.0027000000079056e-05, 6.597000000496678e-06, 6.847000000753667e-06, 9.777999999904807e-06, 8.986999999294198e-06, 7.805000000082885e-06, 9.028000000022018e-06, 9.097000000402033e-06, 6.652999999801068e-06, 8.223000000029401e-06, 5.082999999572735e-06, 7.77700000043069e-06, 5.444000000132121e-06, 7.445000000494417e-06, 6.568999999956304e-06, 6.680999999453263e-06, 7.528000000256441e-06, 1.0527999999787596e-05, 8.333000000249058e-06, 8.151999999483905e-06, 6.473000000006834e-06, 6.847999999948229e-06]</msg>
<status status="PASS" starttime="20201030 11:49:54.996" endtime="20201030 11:49:54.998"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:54.992" endtime="20201030 11:49:54.999"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:54.606" endtime="20201030 11:49:54.999"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:54.605" endtime="20201030 11:49:54.999"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:55.008" endtime="20201030 11:49:55.021"></status>
</kw>
<msg timestamp="20201030 11:49:55.022" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:55.006" endtime="20201030 11:49:55.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:55.024" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:55.023" endtime="20201030 11:49:55.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:55.025" endtime="20201030 11:49:55.027"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:55.003" endtime="20201030 11:49:55.027"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:55.002" endtime="20201030 11:49:55.028"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:55.035" endtime="20201030 11:49:55.353"></status>
</kw>
<msg timestamp="20201030 11:49:55.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.574637333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.574646222, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:49:55.034" endtime="20201030 11:49:55.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:55.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.574637333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.574646222, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:49:55.364" endtime="20201030 11:49:55.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:55.386" endtime="20201030 11:49:55.389"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:55.030" endtime="20201030 11:49:55.390"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:55.028" endtime="20201030 11:49:55.391"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:49:55.401" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 8.792000000035216e-06}, {'diff': 9.583000000645825e-06}, {'diff': 8.08399999918663e-06}, {'diff': 8.320000000061611e-06}, {'diff': 8.0269999997995e-06}, {'diff': 8.8890000000674...</msg>
<status status="PASS" starttime="20201030 11:49:55.393" endtime="20201030 11:49:55.401"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:49:55.411" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 8.792000000035216e-06, 9.583000000645825e-06, 8.08399999918663e-06, 8.320000000061611e-06, 8.0269999997995e-06, 8.889000000067426e-06, 7.722000000320861e-06, 7.639000000558838e-06, 7.0280...</msg>
<status status="PASS" starttime="20201030 11:49:55.403" endtime="20201030 11:49:55.412"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:49:55.421" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:49:55.418" endtime="20201030 11:49:55.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:49:55.427" level="INFO">VALUE: [0, 8.792000000035216e-06, 9.583000000645825e-06, 8.08399999918663e-06, 8.320000000061611e-06, 8.0269999997995e-06, 8.889000000067426e-06, 7.722000000320861e-06, 7.639000000558838e-06, 7.028000000630641e-06, 6.652000000606506e-06, 6.596999999608499e-06, 7.791999999895438e-06, 6.223000000638024e-06, 0.4297513049999999, 6.528000000116663e-06, 9.903000000477391e-06, 1.0027000000079056e-05, 6.597000000496678e-06, 6.847000000753667e-06, 9.777999999904807e-06, 8.986999999294198e-06, 7.805000000082885e-06, 9.028000000022018e-06, 9.097000000402033e-06, 6.652999999801068e-06, 8.223000000029401e-06, 5.082999999572735e-06, 7.77700000043069e-06, 5.444000000132121e-06, 7.445000000494417e-06, 6.568999999956304e-06, 6.680999999453263e-06, 7.528000000256441e-06, 1.0527999999787596e-05, 8.333000000249058e-06, 8.151999999483905e-06, 6.473000000006834e-06, 6.847999999948229e-06, 0.3756778609999998, 9.459000000155982e-06, 9.582999999757646e-06, 7.957999999419485e-06, 6.8469999998654885e-06, 6.0279999996026845e-06, 8.277999999251051e-06, 9.26400000000882e-06, 1.1541999999309382e-05, 4.597000000217122e-06, 7.625000000288651e-06, 5.832999999455524e-06, 1.1028000000301574e-05, 8.166999999836833e-06, 9.47199999945525e-06, 5.1389999997653035e-06, 5.360999999481919e-06, 8.054999999451695e-06, 8.27800000013923e-06, 1.040300000010319e-05, 6.0969999999827e-06, 8.096999999374077e-06, 9.915999999776659e-06, 8.958999999642003e-06, 9.22300000016918e-06]</msg>
<status status="PASS" starttime="20201030 11:49:55.424" endtime="20201030 11:49:55.428"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:55.413" endtime="20201030 11:49:55.429"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:55.000" endtime="20201030 11:49:55.429"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:55.000" endtime="20201030 11:49:55.429"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:55.437" endtime="20201030 11:49:55.452"></status>
</kw>
<msg timestamp="20201030 11:49:55.452" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:55.436" endtime="20201030 11:49:55.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:55.455" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:55.453" endtime="20201030 11:49:55.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:55.456" endtime="20201030 11:49:55.457"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:55.433" endtime="20201030 11:49:55.458"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:55.431" endtime="20201030 11:49:55.458"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:55.465" endtime="20201030 11:49:55.769"></status>
</kw>
<msg timestamp="20201030 11:49:55.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.004786306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 6.004795458, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:49:55.463" endtime="20201030 11:49:55.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:55.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.004786306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 6.004795458, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:49:55.774" endtime="20201030 11:49:55.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:55.783" endtime="20201030 11:49:55.785"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:55.461" endtime="20201030 11:49:55.786"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:55.459" endtime="20201030 11:49:55.786"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:49:55.790" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 8.223000000029401e-06}, {'diff': 5.082999999572735e-06}, {'diff': 7.77700000043069e-06}, {'diff': 5.444000000132121e-06}, {'diff': 7.445000000494417e-06}, {'diff': 6.56899999995...</msg>
<status status="PASS" starttime="20201030 11:49:55.787" endtime="20201030 11:49:55.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:49:55.796" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 8.223000000029401e-06, 5.082999999572735e-06, 7.77700000043069e-06, 5.444000000132121e-06, 7.445000000494417e-06, 6.568999999956304e-06, 6.680999999453263e-06, 7.528000000256441e-06, 1.05...</msg>
<status status="PASS" starttime="20201030 11:49:55.791" endtime="20201030 11:49:55.796"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:49:55.800" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:49:55.799" endtime="20201030 11:49:55.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:49:55.803" level="INFO">VALUE: [0, 8.223000000029401e-06, 5.082999999572735e-06, 7.77700000043069e-06, 5.444000000132121e-06, 7.445000000494417e-06, 6.568999999956304e-06, 6.680999999453263e-06, 7.528000000256441e-06, 1.0527999999787596e-05, 8.333000000249058e-06, 8.151999999483905e-06, 6.473000000006834e-06, 6.847999999948229e-06, 0.3756778609999998, 9.459000000155982e-06, 9.582999999757646e-06, 7.957999999419485e-06, 6.8469999998654885e-06, 6.0279999996026845e-06, 8.277999999251051e-06, 9.26400000000882e-06, 1.1541999999309382e-05, 4.597000000217122e-06, 7.625000000288651e-06, 5.832999999455524e-06, 1.1028000000301574e-05, 8.166999999836833e-06, 9.47199999945525e-06, 5.1389999997653035e-06, 5.360999999481919e-06, 8.054999999451695e-06, 8.27800000013923e-06, 1.040300000010319e-05, 6.0969999999827e-06, 8.096999999374077e-06, 9.915999999776659e-06, 8.958999999642003e-06, 9.22300000016918e-06, 0.4201620559999997, 7.457999999793685e-06, 8.0269999997995e-06, 8.610999999270064e-06, 8.77799999976503e-06, 7.806000000165625e-06, 8.792000000035216e-06, 6.83300000048348e-06, 8.153000000454824e-06, 8.082999999992069e-06, 9.624999999680028e-06, 7.347999999574029e-06, 7.708000000050674e-06, 8.139000000184637e-06, 1.0319000000258427e-05, 8.583000000506047e-06, 8.153000000454824e-06, 1.11940000007138e-05, 5.59800000043964e-06, 9.680000000678035e-06, 7.73599999970287e-06, 8.068999999721882e-06, 9.028000000022018e-06, 7.541999999638449e-06, 6.444000000271899e-06]</msg>
<status status="PASS" starttime="20201030 11:49:55.801" endtime="20201030 11:49:55.803"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:55.797" endtime="20201030 11:49:55.804"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:55.430" endtime="20201030 11:49:55.804"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:55.430" endtime="20201030 11:49:55.804"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:55.812" endtime="20201030 11:49:55.827"></status>
</kw>
<msg timestamp="20201030 11:49:55.827" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:55.811" endtime="20201030 11:49:55.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:55.830" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:55.829" endtime="20201030 11:49:55.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:55.831" endtime="20201030 11:49:55.833"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:55.808" endtime="20201030 11:49:55.833"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:55.806" endtime="20201030 11:49:55.834"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:55.840" endtime="20201030 11:49:56.150"></status>
</kw>
<msg timestamp="20201030 11:49:56.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.380860125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 6.380864958, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:49:55.838" endtime="20201030 11:49:56.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:56.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.380860125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 6.380864958, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:49:56.156" endtime="20201030 11:49:56.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:56.166" endtime="20201030 11:49:56.167"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:55.836" endtime="20201030 11:49:56.168"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:55.834" endtime="20201030 11:49:56.168"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:49:56.173" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.1028000000301574e-05}, {'diff': 8.166999999836833e-06}, {'diff': 9.47199999945525e-06}, {'diff': 5.1389999997653035e-06}, {'diff': 5.360999999481919e-06}, {'diff': 8.054999999...</msg>
<status status="PASS" starttime="20201030 11:49:56.169" endtime="20201030 11:49:56.173"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:49:56.177" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.1028000000301574e-05, 8.166999999836833e-06, 9.47199999945525e-06, 5.1389999997653035e-06, 5.360999999481919e-06, 8.054999999451695e-06, 8.27800000013923e-06, 1.040300000010319e-05, 6.0...</msg>
<status status="PASS" starttime="20201030 11:49:56.174" endtime="20201030 11:49:56.178"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:49:56.182" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:49:56.181" endtime="20201030 11:49:56.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:49:56.184" level="INFO">VALUE: [0, 1.1028000000301574e-05, 8.166999999836833e-06, 9.47199999945525e-06, 5.1389999997653035e-06, 5.360999999481919e-06, 8.054999999451695e-06, 8.27800000013923e-06, 1.040300000010319e-05, 6.0969999999827e-06, 8.096999999374077e-06, 9.915999999776659e-06, 8.958999999642003e-06, 9.22300000016918e-06, 0.4201620559999997, 7.457999999793685e-06, 8.0269999997995e-06, 8.610999999270064e-06, 8.77799999976503e-06, 7.806000000165625e-06, 8.792000000035216e-06, 6.83300000048348e-06, 8.153000000454824e-06, 8.082999999992069e-06, 9.624999999680028e-06, 7.347999999574029e-06, 7.708000000050674e-06, 8.139000000184637e-06, 1.0319000000258427e-05, 8.583000000506047e-06, 8.153000000454824e-06, 1.11940000007138e-05, 5.59800000043964e-06, 9.680000000678035e-06, 7.73599999970287e-06, 8.068999999721882e-06, 9.028000000022018e-06, 7.541999999638449e-06, 6.444000000271899e-06, 0.36468440300000005, 8.333000000249058e-06, 9.931000000129586e-06, 7.708000000050674e-06, 7.3890000003018486e-06, 9.180999999358619e-06, 1.040300000010319e-05, 1.115299999998598e-05, 5.5549999995463395e-06, 8.318999999978871e-06, 1.0152999999846202e-05, 8.27800000013923e-06, 4.4030000001527014e-06, 7.48599999944588e-06, 9.638999999950215e-06, 6.527000000033922e-06, 8.457999999933463e-06, 8.708000000190452e-06, 8.528000000396219e-06, 8.514000000126032e-06, 5.569999999899267e-06, 8.792000000035216e-06, 5.9160000001057256e-06, 5.681000000201664e-06, 7.874999999657462e-06]</msg>
<status status="PASS" starttime="20201030 11:49:56.183" endtime="20201030 11:49:56.185"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:56.179" endtime="20201030 11:49:56.185"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:55.805" endtime="20201030 11:49:56.186"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:55.805" endtime="20201030 11:49:56.186"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:48.513" endtime="20201030 11:49:56.186"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:49:48.435" endtime="20201030 11:49:56.187" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:49:56.194" endtime="20201030 11:49:56.214"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:56.193" endtime="20201030 11:49:56.214"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:56.228" endtime="20201030 11:49:56.249"></status>
</kw>
<msg timestamp="20201030 11:49:56.250" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:56.227" endtime="20201030 11:49:56.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:56.252" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:56.251" endtime="20201030 11:49:56.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:49:56.255" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:49:56.253" endtime="20201030 11:49:56.256"></status>
</kw>
<status status="FAIL" starttime="20201030 11:49:56.224" endtime="20201030 11:49:56.256"></status>
</kw>
<status status="FAIL" starttime="20201030 11:49:56.222" endtime="20201030 11:49:56.257"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:56.220" endtime="20201030 11:49:56.257"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:49:56.261" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:49:56.260" endtime="20201030 11:49:56.261"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:56.258" endtime="20201030 11:49:56.262"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:56.220" endtime="20201030 11:49:56.262"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:56.219" endtime="20201030 11:49:56.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:56.263" endtime="20201030 11:49:56.264"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:56.217" endtime="20201030 11:49:56.265"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:56.215" endtime="20201030 11:49:56.265"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:56.191" endtime="20201030 11:49:56.266"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:56.275" endtime="20201030 11:49:56.290"></status>
</kw>
<msg timestamp="20201030 11:49:56.291" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:56.273" endtime="20201030 11:49:56.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:56.293" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:56.292" endtime="20201030 11:49:56.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:56.294" endtime="20201030 11:49:56.296"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:56.271" endtime="20201030 11:49:56.296"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:56.269" endtime="20201030 11:49:56.297"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:56.304" endtime="20201030 11:49:56.587"></status>
</kw>
<msg timestamp="20201030 11:49:56.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069978514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.06998025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:49:56.303" endtime="20201030 11:49:56.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:56.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069978514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.06998025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:49:56.591" endtime="20201030 11:49:56.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:56.599" endtime="20201030 11:49:56.601"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:56.299" endtime="20201030 11:49:56.602"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:56.297" endtime="20201030 11:49:56.602"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:49:56.606" level="INFO">${RESULT} = [{'diff': 1.7359999999883025e-06}, {'diff': 1.7769999999944774e-06}, {'diff': 1.7360000000021802e-06}, {'diff': 1.7360000000021802e-06}, {'diff': 1.7219999999956714e-06}, {'diff': 1.7499999999948113e-...</msg>
<status status="PASS" starttime="20201030 11:49:56.603" endtime="20201030 11:49:56.606"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:49:56.610" level="INFO">${OVERHEAD} = {'diff': [1.7359999999883025e-06, 1.7769999999944774e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7219999999956714e-06, 1.7499999999948113e-06, 1.7360000000021802e-06, 1.7219999999956714e-06...</msg>
<status status="PASS" starttime="20201030 11:49:56.607" endtime="20201030 11:49:56.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:49:56.614" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:49:56.613" endtime="20201030 11:49:56.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:49:56.617" level="INFO">VALUE: [1.7359999999883025e-06, 1.7769999999944774e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7219999999956714e-06, 1.7499999999948113e-06, 1.7360000000021802e-06, 1.7219999999956714e-06, 1.7360000000021802e-06, 1.7499999999948113e-06, 1.7370000000016539e-06, 1.7360000000021802e-06, 1.76400000000132e-06, 1.7360000000021802e-06, 1.750000000008689e-06, 1.7359999999883025e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7370000000016539e-06, 1.7360000000021802e-06, 1.7359999999883025e-06, 1.7360000000021802e-06, 1.7219999999956714e-06, 1.7499999999948113e-06, 1.750000000008689e-06, 1.7360000000021802e-06, 1.750000000008689e-06, 1.7360000000021802e-06, 1.7370000000016539e-06, 1.7219999999956714e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7499999999948113e-06, 1.7499999999948113e-06, 1.7360000000021802e-06, 1.7220000000095492e-06, 1.777999999993951e-06, 1.7499999999948113e-06, 1.750000000008689e-06, 1.7499999999948113e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.750000000008689e-06, 1.7360000000021802e-06, 1.6949999999960053e-06]</msg>
<status status="PASS" starttime="20201030 11:49:56.616" endtime="20201030 11:49:56.617"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:56.611" endtime="20201030 11:49:56.618"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:56.268" endtime="20201030 11:49:56.618"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:56.267" endtime="20201030 11:49:56.619"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:56.627" endtime="20201030 11:49:56.643"></status>
</kw>
<msg timestamp="20201030 11:49:56.643" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:56.625" endtime="20201030 11:49:56.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:56.646" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:56.645" endtime="20201030 11:49:56.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:56.647" endtime="20201030 11:49:56.649"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:56.623" endtime="20201030 11:49:56.649"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:56.621" endtime="20201030 11:49:56.650"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:56.656" endtime="20201030 11:49:56.960"></status>
</kw>
<msg timestamp="20201030 11:49:56.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070188444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070190194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:49:56.654" endtime="20201030 11:49:56.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:56.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070188444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070190194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:49:56.965" endtime="20201030 11:49:56.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:56.974" endtime="20201030 11:49:56.976"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:56.652" endtime="20201030 11:49:56.976"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:56.650" endtime="20201030 11:49:56.977"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:49:56.981" level="INFO">${RESULT} = [{'diff': 1.7499999999948113e-06}, {'diff': 1.7499999999948113e-06}, {'diff': 1.7360000000021802e-06}, {'diff': 1.7220000000095492e-06}, {'diff': 1.777999999993951e-06}, {'diff': 1.7499999999948113e-0...</msg>
<status status="PASS" starttime="20201030 11:49:56.978" endtime="20201030 11:49:56.981"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:49:56.986" level="INFO">${OVERHEAD} = {'diff': [1.7499999999948113e-06, 1.7499999999948113e-06, 1.7360000000021802e-06, 1.7220000000095492e-06, 1.777999999993951e-06, 1.7499999999948113e-06, 1.750000000008689e-06, 1.7499999999948113e-06, ...</msg>
<status status="PASS" starttime="20201030 11:49:56.982" endtime="20201030 11:49:56.987"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:49:56.991" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:49:56.990" endtime="20201030 11:49:56.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:49:56.993" level="INFO">VALUE: [1.7499999999948113e-06, 1.7499999999948113e-06, 1.7360000000021802e-06, 1.7220000000095492e-06, 1.777999999993951e-06, 1.7499999999948113e-06, 1.750000000008689e-06, 1.7499999999948113e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.750000000008689e-06, 1.7360000000021802e-06, 1.6949999999960053e-06, 1.6809999999756187e-06, 1.7360000000299358e-06, 1.7500000000225668e-06, 1.7360000000299358e-06, 1.7499999999670557e-06, 1.7360000000299358e-06, 1.7370000000016539e-06, 1.7629999999879686e-06, 1.7360000000299358e-06, 1.7769999999805997e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7220000000373048e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7219999999817936e-06, 1.7230000000090229e-06, 1.7360000000299358e-06, 1.7079999999891626e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7370000000016539e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7370000000016539e-06, 1.7359999999744247e-06, 1.7219999999817936e-06, 1.7220000000373048e-06, 1.7780000000078289e-06, 1.7640000000151979e-06, 1.7360000000299358e-06, 1.7499999999670557e-06, 1.7219999999817936e-06, 1.7359999999744247e-06, 1.7360000000299358e-06, 1.7779999999523177e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7219999999817936e-06, 1.7360000000299358e-06, 1.7359999999744247e-06, 1.7219999999817936e-06, 1.7360000000299358e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7499999999670557e-06, 1.7359999999744247e-06]</msg>
<status status="PASS" starttime="20201030 11:49:56.992" endtime="20201030 11:49:56.994"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:56.987" endtime="20201030 11:49:56.995"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:56.620" endtime="20201030 11:49:56.995"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:56.619" endtime="20201030 11:49:56.995"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:57.003" endtime="20201030 11:49:57.019"></status>
</kw>
<msg timestamp="20201030 11:49:57.019" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:57.002" endtime="20201030 11:49:57.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:57.021" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:57.020" endtime="20201030 11:49:57.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:57.023" endtime="20201030 11:49:57.024"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:56.999" endtime="20201030 11:49:57.025"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:56.997" endtime="20201030 11:49:57.025"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:57.031" endtime="20201030 11:49:57.331"></status>
</kw>
<msg timestamp="20201030 11:49:57.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.412794333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.412796069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:49:57.030" endtime="20201030 11:49:57.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:57.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.412794333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.412796069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:49:57.336" endtime="20201030 11:49:57.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:57.346" endtime="20201030 11:49:57.347"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:57.027" endtime="20201030 11:49:57.348"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:57.026" endtime="20201030 11:49:57.349"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:49:57.353" level="INFO">${RESULT} = [{'diff': 1.7359999999744247e-06}, {'diff': 1.7360000000299358e-06}, {'diff': 1.7779999999523177e-06}, {'diff': 1.7359999999744247e-06}, {'diff': 1.7359999999744247e-06}, {'diff': 1.7219999999817936e-...</msg>
<status status="PASS" starttime="20201030 11:49:57.349" endtime="20201030 11:49:57.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:49:57.360" level="INFO">${OVERHEAD} = {'diff': [1.7359999999744247e-06, 1.7360000000299358e-06, 1.7779999999523177e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7219999999817936e-06, 1.7360000000299358e-06, 1.7359999999744247e-06...</msg>
<status status="PASS" starttime="20201030 11:49:57.354" endtime="20201030 11:49:57.361"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:49:57.364" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:49:57.363" endtime="20201030 11:49:57.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:49:57.367" level="INFO">VALUE: [1.7359999999744247e-06, 1.7360000000299358e-06, 1.7779999999523177e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7219999999817936e-06, 1.7360000000299358e-06, 1.7359999999744247e-06, 1.7219999999817936e-06, 1.7360000000299358e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7499999999670557e-06, 1.7359999999744247e-06, 1.7230000000090229e-06, 1.7500000000225668e-06, 1.7219999999262825e-06, 1.7079999999891626e-06, 1.736000000085447e-06, 1.7909999999732307e-06, 1.7770000000361108e-06, 1.7359999999744247e-06, 1.6940000000520428e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7220000000373048e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7499999999115445e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7219999999262825e-06, 1.736000000085447e-06, 1.7369999999461427e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.736000000085447e-06, 1.7500000000225668e-06, 1.737000000057165e-06, 1.7359999999744247e-06, 1.6950000000237608e-06, 1.7359999999744247e-06, 1.736000000085447e-06, 1.7079999999891626e-06, 1.7219999999262825e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.737000000057165e-06, 1.7770000000361108e-06, 1.7500000000225668e-06, 1.736000000085447e-06, 1.7369999999461427e-06, 1.7359999999744247e-06, 1.6940000000520428e-06, 1.736000000085447e-06, 1.7919999999449487e-06, 1.7369999999461427e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7500000000225668e-06]</msg>
<status status="PASS" starttime="20201030 11:49:57.366" endtime="20201030 11:49:57.368"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:57.361" endtime="20201030 11:49:57.368"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:56.996" endtime="20201030 11:49:57.369"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:56.996" endtime="20201030 11:49:57.369"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:57.377" endtime="20201030 11:49:57.392"></status>
</kw>
<msg timestamp="20201030 11:49:57.393" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:57.375" endtime="20201030 11:49:57.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:57.395" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:57.394" endtime="20201030 11:49:57.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:57.396" endtime="20201030 11:49:57.398"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:57.373" endtime="20201030 11:49:57.398"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:57.371" endtime="20201030 11:49:57.399"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:57.405" endtime="20201030 11:49:57.713"></status>
</kw>
<msg timestamp="20201030 11:49:57.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.779359819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.779361556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:49:57.404" endtime="20201030 11:49:57.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:57.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.779359819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.779361556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:49:57.718" endtime="20201030 11:49:57.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:57.728" endtime="20201030 11:49:57.729"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:57.401" endtime="20201030 11:49:57.730"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:57.399" endtime="20201030 11:49:57.730"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:49:57.735" level="INFO">${RESULT} = [{'diff': 1.737000000057165e-06}, {'diff': 1.7770000000361108e-06}, {'diff': 1.7500000000225668e-06}, {'diff': 1.736000000085447e-06}, {'diff': 1.7369999999461427e-06}, {'diff': 1.7359999999744247e-06...</msg>
<status status="PASS" starttime="20201030 11:49:57.731" endtime="20201030 11:49:57.735"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:49:57.739" level="INFO">${OVERHEAD} = {'diff': [1.737000000057165e-06, 1.7770000000361108e-06, 1.7500000000225668e-06, 1.736000000085447e-06, 1.7369999999461427e-06, 1.7359999999744247e-06, 1.6940000000520428e-06, 1.736000000085447e-06, 1...</msg>
<status status="PASS" starttime="20201030 11:49:57.736" endtime="20201030 11:49:57.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:49:57.743" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:49:57.742" endtime="20201030 11:49:57.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:49:57.746" level="INFO">VALUE: [1.737000000057165e-06, 1.7770000000361108e-06, 1.7500000000225668e-06, 1.736000000085447e-06, 1.7369999999461427e-06, 1.7359999999744247e-06, 1.6940000000520428e-06, 1.736000000085447e-06, 1.7919999999449487e-06, 1.7369999999461427e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7219999999262825e-06, 1.6670000000384988e-06, 1.764000000070709e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7639999998486644e-06, 1.7499999998005222e-06, 1.6940000000520428e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7219999999262825e-06, 1.7219999999262825e-06, 1.7500000000225668e-06, 1.7629999999879686e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7219999999262825e-06, 1.7499999998005222e-06, 1.7629999999879686e-06, 1.708000000100185e-06, 1.7359999999744247e-06, 1.7219999999262825e-06, 1.7230000000090229e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.6519999999076163e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7779999998968066e-06, 1.681000000086641e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7230000000090229e-06, 1.722000000148327e-06, 1.7219999999262825e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7639999998486644e-06, 1.722000000148327e-06, 1.7919999999449487e-06, 1.7359999999744247e-06, 1.7360000001964693e-06, 1.737000000057165e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7780000001188512e-06]</msg>
<status status="PASS" starttime="20201030 11:49:57.745" endtime="20201030 11:49:57.747"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:57.740" endtime="20201030 11:49:57.747"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:57.370" endtime="20201030 11:49:57.748"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:57.369" endtime="20201030 11:49:57.748"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:57.757" endtime="20201030 11:49:57.771"></status>
</kw>
<msg timestamp="20201030 11:49:57.772" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:57.755" endtime="20201030 11:49:57.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:57.774" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:57.773" endtime="20201030 11:49:57.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:57.775" endtime="20201030 11:49:57.777"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:57.752" endtime="20201030 11:49:57.777"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:57.750" endtime="20201030 11:49:57.778"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:57.784" endtime="20201030 11:49:58.088"></status>
</kw>
<msg timestamp="20201030 11:49:58.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.142029708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.142031431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:49:57.783" endtime="20201030 11:49:58.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:58.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.142029708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.142031431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:49:58.093" endtime="20201030 11:49:58.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:58.103" endtime="20201030 11:49:58.104"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:57.780" endtime="20201030 11:49:58.105"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:57.778" endtime="20201030 11:49:58.105"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:49:58.110" level="INFO">${RESULT} = [{'diff': 1.7230000000090229e-06}, {'diff': 1.722000000148327e-06}, {'diff': 1.7219999999262825e-06}, {'diff': 1.7359999999744247e-06}, {'diff': 1.7359999999744247e-06}, {'diff': 1.7639999998486644e-0...</msg>
<status status="PASS" starttime="20201030 11:49:58.106" endtime="20201030 11:49:58.110"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:49:58.115" level="INFO">${OVERHEAD} = {'diff': [1.7230000000090229e-06, 1.722000000148327e-06, 1.7219999999262825e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7639999998486644e-06, 1.722000000148327e-06, 1.7919999999449487e-06, ...</msg>
<status status="PASS" starttime="20201030 11:49:58.111" endtime="20201030 11:49:58.115"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:49:58.119" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:49:58.118" endtime="20201030 11:49:58.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:49:58.122" level="INFO">VALUE: [1.7230000000090229e-06, 1.722000000148327e-06, 1.7219999999262825e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7639999998486644e-06, 1.722000000148327e-06, 1.7919999999449487e-06, 1.7359999999744247e-06, 1.7360000001964693e-06, 1.737000000057165e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7780000001188512e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.737000000057165e-06, 1.7500000000225668e-06, 1.7079999998781403e-06, 1.7359999999744247e-06, 1.7219999999262825e-06, 1.7919999999449487e-06, 1.7360000001964693e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.737000000057165e-06, 1.7360000001964693e-06, 1.6800000000039006e-06, 1.7219999999262825e-06, 1.764000000070709e-06, 1.7780000001188512e-06, 1.7359999999744247e-06, 1.7360000001964693e-06, 1.722000000148327e-06, 1.764000000070709e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7230000000090229e-06, 1.6529999999903566e-06, 1.7219999999262825e-06, 1.7359999999744247e-06, 1.7230000000090229e-06, 1.7360000001964693e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.764000000070709e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7219999999262825e-06, 1.7359999999744247e-06, 1.708000000100185e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7369999998351204e-06, 1.7230000000090229e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7360000001964693e-06, 1.7230000000090229e-06]</msg>
<status status="PASS" starttime="20201030 11:49:58.120" endtime="20201030 11:49:58.123"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:58.116" endtime="20201030 11:49:58.123"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:57.749" endtime="20201030 11:49:58.124"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:57.748" endtime="20201030 11:49:58.124"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:58.132" endtime="20201030 11:49:58.147"></status>
</kw>
<msg timestamp="20201030 11:49:58.147" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:58.130" endtime="20201030 11:49:58.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:58.149" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:58.148" endtime="20201030 11:49:58.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:58.151" endtime="20201030 11:49:58.152"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:58.128" endtime="20201030 11:49:58.153"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:58.126" endtime="20201030 11:49:58.153"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:58.160" endtime="20201030 11:49:58.452"></status>
</kw>
<msg timestamp="20201030 11:49:58.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.511141917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.511143653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:49:58.158" endtime="20201030 11:49:58.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:58.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.511141917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.511143653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:49:58.457" endtime="20201030 11:49:58.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:58.467" endtime="20201030 11:49:58.469"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:58.155" endtime="20201030 11:49:58.469"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:58.154" endtime="20201030 11:49:58.470"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:49:58.474" level="INFO">${RESULT} = [{'diff': 1.7359999999744247e-06}, {'diff': 1.7359999999744247e-06}, {'diff': 1.7219999999262825e-06}, {'diff': 1.7359999999744247e-06}, {'diff': 1.708000000100185e-06}, {'diff': 1.7359999999744247e-0...</msg>
<status status="PASS" starttime="20201030 11:49:58.470" endtime="20201030 11:49:58.474"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:49:58.480" level="INFO">${OVERHEAD} = {'diff': [1.7359999999744247e-06, 1.7359999999744247e-06, 1.7219999999262825e-06, 1.7359999999744247e-06, 1.708000000100185e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06,...</msg>
<status status="PASS" starttime="20201030 11:49:58.475" endtime="20201030 11:49:58.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:49:58.484" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:49:58.483" endtime="20201030 11:49:58.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:49:58.486" level="INFO">VALUE: [1.7359999999744247e-06, 1.7359999999744247e-06, 1.7219999999262825e-06, 1.7359999999744247e-06, 1.708000000100185e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7369999998351204e-06, 1.7230000000090229e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7360000001964693e-06, 1.7230000000090229e-06, 1.7359999999744247e-06, 1.7219999999262825e-06, 1.7230000000090229e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7780000001188512e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.708000000100185e-06, 1.7219999999262825e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7770000000361108e-06, 1.7359999999744247e-06, 1.7219999999262825e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7360000001964693e-06, 1.7219999999262825e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7089999999608807e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7770000000361108e-06, 1.7499999998005222e-06, 1.7359999999744247e-06, 1.708000000100185e-06, 1.7359999999744247e-06, 1.6809999998645964e-06, 1.7500000000225668e-06, 1.7369999998351204e-06, 1.7360000001964693e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.6800000000039006e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.722000000148327e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7079999998781403e-06, 1.7639999998486644e-06, 1.7359999999744247e-06]</msg>
<status status="PASS" starttime="20201030 11:49:58.485" endtime="20201030 11:49:58.487"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:58.480" endtime="20201030 11:49:58.488"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:58.125" endtime="20201030 11:49:58.488"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:58.124" endtime="20201030 11:49:58.488"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:58.496" endtime="20201030 11:49:58.511"></status>
</kw>
<msg timestamp="20201030 11:49:58.511" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:58.494" endtime="20201030 11:49:58.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:58.514" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:58.512" endtime="20201030 11:49:58.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:58.515" endtime="20201030 11:49:58.516"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:58.492" endtime="20201030 11:49:58.517"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:58.490" endtime="20201030 11:49:58.517"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:58.525" endtime="20201030 11:49:58.827"></status>
</kw>
<msg timestamp="20201030 11:49:58.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.875236792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.875238528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:49:58.522" endtime="20201030 11:49:58.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:58.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.875236792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.875238528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:49:58.832" endtime="20201030 11:49:58.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:58.842" endtime="20201030 11:49:58.844"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:58.520" endtime="20201030 11:49:58.844"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:58.518" endtime="20201030 11:49:58.845"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:49:58.849" level="INFO">${RESULT} = [{'diff': 1.7359999999744247e-06}, {'diff': 1.7500000000225668e-06}, {'diff': 1.6800000000039006e-06}, {'diff': 1.7359999999744247e-06}, {'diff': 1.7500000000225668e-06}, {'diff': 1.7359999999744247e-...</msg>
<status status="PASS" starttime="20201030 11:49:58.846" endtime="20201030 11:49:58.849"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:49:58.854" level="INFO">${OVERHEAD} = {'diff': [1.7359999999744247e-06, 1.7500000000225668e-06, 1.6800000000039006e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.722000000148327e-06,...</msg>
<status status="PASS" starttime="20201030 11:49:58.850" endtime="20201030 11:49:58.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:49:58.858" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:49:58.857" endtime="20201030 11:49:58.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:49:58.861" level="INFO">VALUE: [1.7359999999744247e-06, 1.7500000000225668e-06, 1.6800000000039006e-06, 1.7359999999744247e-06, 1.7500000000225668e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.722000000148327e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7359999999744247e-06, 1.7079999998781403e-06, 1.7639999998486644e-06, 1.7359999999744247e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.8050000001323951e-06, 1.7770000000361108e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7219999999262825e-06, 1.7500000000225668e-06, 1.7360000001964693e-06, 1.7219999999262825e-06, 1.73599999975238e-06, 1.6949999999127385e-06, 1.7360000001964693e-06, 1.7770000000361108e-06, 1.7230000000090229e-06, 1.73599999975238e-06, 1.7770000000361108e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7219999999262825e-06, 1.7219999999262825e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.7369999998351204e-06, 1.7219999999262825e-06, 1.7360000001964693e-06, 1.7219999999262825e-06, 1.7639999998486644e-06, 1.7360000001964693e-06, 1.6809999996425518e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7219999999262825e-06, 1.7370000002792096e-06, 1.7360000001964693e-06, 1.7219999999262825e-06]</msg>
<status status="PASS" starttime="20201030 11:49:58.859" endtime="20201030 11:49:58.861"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:58.855" endtime="20201030 11:49:58.862"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:58.489" endtime="20201030 11:49:58.862"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:58.489" endtime="20201030 11:49:58.863"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:58.871" endtime="20201030 11:49:58.887"></status>
</kw>
<msg timestamp="20201030 11:49:58.887" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:58.870" endtime="20201030 11:49:58.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:58.890" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:58.889" endtime="20201030 11:49:58.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:58.891" endtime="20201030 11:49:58.893"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:58.867" endtime="20201030 11:49:58.893"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:58.865" endtime="20201030 11:49:58.894"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:58.900" endtime="20201030 11:49:59.213"></status>
</kw>
<msg timestamp="20201030 11:49:59.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.229556069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.229557806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:49:58.899" endtime="20201030 11:49:59.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:59.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.229556069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.229557806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:49:59.218" endtime="20201030 11:49:59.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:59.227" endtime="20201030 11:49:59.229"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:58.896" endtime="20201030 11:49:59.230"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:58.894" endtime="20201030 11:49:59.230"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:49:59.234" level="INFO">${RESULT} = [{'diff': 1.7369999998351204e-06}, {'diff': 1.7219999999262825e-06}, {'diff': 1.7360000001964693e-06}, {'diff': 1.7219999999262825e-06}, {'diff': 1.7639999998486644e-06}, {'diff': 1.7360000001964693e-...</msg>
<status status="PASS" starttime="20201030 11:49:59.231" endtime="20201030 11:49:59.234"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:49:59.240" level="INFO">${OVERHEAD} = {'diff': [1.7369999998351204e-06, 1.7219999999262825e-06, 1.7360000001964693e-06, 1.7219999999262825e-06, 1.7639999998486644e-06, 1.7360000001964693e-06, 1.6809999996425518e-06, 1.7500000000225668e-06...</msg>
<status status="PASS" starttime="20201030 11:49:59.235" endtime="20201030 11:49:59.240"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:49:59.244" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:49:59.243" endtime="20201030 11:49:59.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:49:59.246" level="INFO">VALUE: [1.7369999998351204e-06, 1.7219999999262825e-06, 1.7360000001964693e-06, 1.7219999999262825e-06, 1.7639999998486644e-06, 1.7360000001964693e-06, 1.6809999996425518e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7219999999262825e-06, 1.7370000002792096e-06, 1.7360000001964693e-06, 1.7219999999262825e-06, 1.7360000001964693e-06, 1.666000000177803e-06, 1.7360000001964693e-06, 1.7219999999262825e-06, 1.7780000001188512e-06, 1.7360000001964693e-06, 1.6800000000039006e-06, 1.681000000086641e-06, 1.777999999674762e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7219999999262825e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7230000000090229e-06, 1.7360000001964693e-06, 1.7780000001188512e-06, 1.7360000001964693e-06, 1.7639999998486644e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7639999998486644e-06, 1.73599999975238e-06, 1.7369999998351204e-06, 1.7500000000225668e-06, 1.7909999998622084e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7369999998351204e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7780000001188512e-06, 1.7360000001964693e-06, 1.7090000001829253e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7090000001829253e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7219999999262825e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7230000000090229e-06, 1.7360000001964693e-06, 1.7360000001964693e-06]</msg>
<status status="PASS" starttime="20201030 11:49:59.245" endtime="20201030 11:49:59.247"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:59.241" endtime="20201030 11:49:59.248"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:58.863" endtime="20201030 11:49:59.248"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:58.863" endtime="20201030 11:49:59.248"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:59.256" endtime="20201030 11:49:59.271"></status>
</kw>
<msg timestamp="20201030 11:49:59.272" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:59.255" endtime="20201030 11:49:59.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:59.274" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:59.273" endtime="20201030 11:49:59.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:59.275" endtime="20201030 11:49:59.277"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:59.252" endtime="20201030 11:49:59.277"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:59.250" endtime="20201030 11:49:59.278"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:59.284" endtime="20201030 11:49:59.605"></status>
</kw>
<msg timestamp="20201030 11:49:59.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.593968972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.593970681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:49:59.283" endtime="20201030 11:49:59.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:59.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.593968972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.593970681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:49:59.610" endtime="20201030 11:49:59.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:59.620" endtime="20201030 11:49:59.621"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:59.280" endtime="20201030 11:49:59.622"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:59.278" endtime="20201030 11:49:59.622"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:49:59.627" level="INFO">${RESULT} = [{'diff': 1.7090000001829253e-06}, {'diff': 1.7360000001964693e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.7090000001829253e-06}, {'diff': 1.7360000001964693e-06}, {'diff': 1.73599999975238e-06},...</msg>
<status status="PASS" starttime="20201030 11:49:59.623" endtime="20201030 11:49:59.628"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:49:59.632" level="INFO">${OVERHEAD} = {'diff': [1.7090000001829253e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7090000001829253e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7219999999262825e-06, 1....</msg>
<status status="PASS" starttime="20201030 11:49:59.629" endtime="20201030 11:49:59.633"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:49:59.636" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:49:59.635" endtime="20201030 11:49:59.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:49:59.639" level="INFO">VALUE: [1.7090000001829253e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7090000001829253e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7219999999262825e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7230000000090229e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7230000000090229e-06, 1.7369999998351204e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7640000002927536e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7369999998351204e-06, 1.7090000001829253e-06, 1.7639999998486644e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7370000002792096e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.6800000000039006e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7640000002927536e-06, 1.7780000001188512e-06, 1.6939999998299982e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.7919999999449487e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7499999995784776e-06, 1.7499999995784776e-06, 1.73599999975238e-06, 1.6949999999127385e-06, 1.73599999975238e-06, 1.7639999998486644e-06, 1.7230000000090229e-06]</msg>
<status status="PASS" starttime="20201030 11:49:59.637" endtime="20201030 11:49:59.640"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:59.633" endtime="20201030 11:49:59.640"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:59.249" endtime="20201030 11:49:59.641"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:59.249" endtime="20201030 11:49:59.641"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:59.649" endtime="20201030 11:49:59.664"></status>
</kw>
<msg timestamp="20201030 11:49:59.664" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:59.647" endtime="20201030 11:49:59.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:59.667" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:59.665" endtime="20201030 11:49:59.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:59.668" endtime="20201030 11:49:59.670"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:59.645" endtime="20201030 11:49:59.670"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:59.643" endtime="20201030 11:49:59.671"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:59.678" endtime="20201030 11:49:59.987"></status>
</kw>
<msg timestamp="20201030 11:49:59.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.967928222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.967929958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:49:59.676" endtime="20201030 11:49:59.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:00.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.967928222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.967929958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:49:59.992" endtime="20201030 11:50:00.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:00.002" endtime="20201030 11:50:00.004"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:59.673" endtime="20201030 11:50:00.004"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:59.671" endtime="20201030 11:50:00.005"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:00.009" level="INFO">${RESULT} = [{'diff': 1.7360000001964693e-06}, {'diff': 1.7500000000225668e-06}, {'diff': 1.7919999999449487e-06}, {'diff': 1.7360000001964693e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.7360000001964693e-06...</msg>
<status status="PASS" starttime="20201030 11:50:00.006" endtime="20201030 11:50:00.009"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:00.014" level="INFO">${OVERHEAD} = {'diff': [1.7360000001964693e-06, 1.7500000000225668e-06, 1.7919999999449487e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7499999995784776e-06, ...</msg>
<status status="PASS" starttime="20201030 11:50:00.010" endtime="20201030 11:50:00.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:00.019" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:00.017" endtime="20201030 11:50:00.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:00.021" level="INFO">VALUE: [1.7360000001964693e-06, 1.7500000000225668e-06, 1.7919999999449487e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7499999995784776e-06, 1.7499999995784776e-06, 1.73599999975238e-06, 1.6949999999127385e-06, 1.73599999975238e-06, 1.7639999998486644e-06, 1.7230000000090229e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7219999999262825e-06, 1.7780000001188512e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7360000001964693e-06, 1.7219999999262825e-06, 1.73599999975238e-06, 1.7780000001188512e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.681000000086641e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7639999998486644e-06, 1.73599999975238e-06, 1.7369999998351204e-06, 1.7500000000225668e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7770000000361108e-06, 1.7219999999262825e-06, 1.73599999975238e-06, 1.7370000002792096e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7219999999262825e-06, 1.6939999998299982e-06, 1.7369999998351204e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7770000000361108e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7230000000090229e-06, 1.7219999999262825e-06, 1.7500000000225668e-06, 1.7220000003703717e-06, 1.7360000001964693e-06, 1.7369999998351204e-06, 1.7770000000361108e-06]</msg>
<status status="PASS" starttime="20201030 11:50:00.020" endtime="20201030 11:50:00.022"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:00.015" endtime="20201030 11:50:00.023"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:59.642" endtime="20201030 11:50:00.023"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:59.641" endtime="20201030 11:50:00.023"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:00.031" endtime="20201030 11:50:00.047"></status>
</kw>
<msg timestamp="20201030 11:50:00.047" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:00.030" endtime="20201030 11:50:00.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:00.049" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:00.048" endtime="20201030 11:50:00.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:00.051" endtime="20201030 11:50:00.052"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:00.027" endtime="20201030 11:50:00.053"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:00.025" endtime="20201030 11:50:00.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:00.060" endtime="20201030 11:50:00.369"></status>
</kw>
<msg timestamp="20201030 11:50:00.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.350581431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.350583125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:00.058" endtime="20201030 11:50:00.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:00.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.350581431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.350583125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:00.374" endtime="20201030 11:50:00.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:00.384" endtime="20201030 11:50:00.385"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:00.055" endtime="20201030 11:50:00.386"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:00.054" endtime="20201030 11:50:00.386"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:00.391" level="INFO">${RESULT} = [{'diff': 1.6939999998299982e-06}, {'diff': 1.7369999998351204e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.7770000000361108e-06}, {'diff': 1.7360000001964693e-06},...</msg>
<status status="PASS" starttime="20201030 11:50:00.387" endtime="20201030 11:50:00.391"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:00.396" level="INFO">${OVERHEAD} = {'diff': [1.6939999998299982e-06, 1.7369999998351204e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7770000000361108e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7230000000090229e-06, 1.72...</msg>
<status status="PASS" starttime="20201030 11:50:00.392" endtime="20201030 11:50:00.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:00.400" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:00.399" endtime="20201030 11:50:00.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:00.403" level="INFO">VALUE: [1.6939999998299982e-06, 1.7369999998351204e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7770000000361108e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7230000000090229e-06, 1.7219999999262825e-06, 1.7500000000225668e-06, 1.7220000003703717e-06, 1.7360000001964693e-06, 1.7369999998351204e-06, 1.7770000000361108e-06, 1.73599999975238e-06, 1.666000000177803e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7360000001964693e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.7090000001829253e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7499999995784776e-06, 1.7219999999262825e-06, 1.7360000001964693e-06, 1.7500000000225668e-06, 1.6939999998299982e-06, 1.7230000000090229e-06, 1.7500000000225668e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7369999998351204e-06, 1.7500000000225668e-06, 1.6800000000039006e-06, 1.7219999999262825e-06, 1.73599999975238e-06, 1.7369999998351204e-06, 1.681000000086641e-06, 1.7640000002927536e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7780000001188512e-06, 1.7360000001964693e-06, 1.7919999999449487e-06, 1.6809999996425518e-06, 1.7360000001964693e-06, 1.73599999975238e-06, 1.7370000002792096e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7780000001188512e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.6950000003568277e-06, 1.7499999995784776e-06, 1.7500000000225668e-06, 1.7219999999262825e-06, 1.7230000000090229e-06, 1.6949999999127385e-06, 1.73599999975238e-06, 1.7219999999262825e-06]</msg>
<status status="PASS" starttime="20201030 11:50:00.401" endtime="20201030 11:50:00.404"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:00.397" endtime="20201030 11:50:00.404"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:00.024" endtime="20201030 11:50:00.405"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:00.024" endtime="20201030 11:50:00.405"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:00.413" endtime="20201030 11:50:00.428"></status>
</kw>
<msg timestamp="20201030 11:50:00.429" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:00.411" endtime="20201030 11:50:00.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:00.431" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:00.430" endtime="20201030 11:50:00.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:00.432" endtime="20201030 11:50:00.434"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:00.409" endtime="20201030 11:50:00.434"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:00.407" endtime="20201030 11:50:00.435"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:00.441" endtime="20201030 11:50:00.764"></status>
</kw>
<msg timestamp="20201030 11:50:00.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.723034306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.723036042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:00.439" endtime="20201030 11:50:00.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:00.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.723034306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.723036042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:00.769" endtime="20201030 11:50:00.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:00.779" endtime="20201030 11:50:00.781"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:00.437" endtime="20201030 11:50:00.781"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:00.435" endtime="20201030 11:50:00.782"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:00.786" level="INFO">${RESULT} = [{'diff': 1.73599999975238e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.7360000001964693e-06}, {'diff': 1.7780000001188512e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.73599999975238e-06}, {'d...</msg>
<status status="PASS" starttime="20201030 11:50:00.782" endtime="20201030 11:50:00.786"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:00.791" level="INFO">${OVERHEAD} = {'diff': [1.73599999975238e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7780000001188512e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.6950000003568277e-06, 1.7499999995784776e-06, 1.7500...</msg>
<status status="PASS" starttime="20201030 11:50:00.787" endtime="20201030 11:50:00.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:00.795" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:00.794" endtime="20201030 11:50:00.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:00.797" level="INFO">VALUE: [1.73599999975238e-06, 1.73599999975238e-06, 1.7360000001964693e-06, 1.7780000001188512e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.6950000003568277e-06, 1.7499999995784776e-06, 1.7500000000225668e-06, 1.7219999999262825e-06, 1.7230000000090229e-06, 1.6949999999127385e-06, 1.73599999975238e-06, 1.7219999999262825e-06, 1.7640000002927536e-06, 1.7220000003703717e-06, 1.6670000002605434e-06, 1.6799999995598114e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.777999999674762e-06, 1.7369999998351204e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7640000002927536e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7220000003703717e-06, 1.7500000000225668e-06, 1.777999999674762e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7360000006405585e-06, 1.7219999994821933e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7360000006405585e-06, 1.7500000000225668e-06, 1.7219999994821933e-06, 1.6939999998299982e-06, 1.7220000003703717e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7219999994821933e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7369999998351204e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7500000000225668e-06]</msg>
<status status="PASS" starttime="20201030 11:50:00.796" endtime="20201030 11:50:00.798"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:00.791" endtime="20201030 11:50:00.799"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:00.406" endtime="20201030 11:50:00.799"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:00.405" endtime="20201030 11:50:00.799"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:00.808" endtime="20201030 11:50:00.823"></status>
</kw>
<msg timestamp="20201030 11:50:00.824" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:00.806" endtime="20201030 11:50:00.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:00.826" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:00.825" endtime="20201030 11:50:00.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:00.827" endtime="20201030 11:50:00.829"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:00.803" endtime="20201030 11:50:00.829"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:00.801" endtime="20201030 11:50:00.830"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:00.836" endtime="20201030 11:50:01.150"></status>
</kw>
<msg timestamp="20201030 11:50:01.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.095658167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.095659903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:00.835" endtime="20201030 11:50:01.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:01.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.095658167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.095659903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:01.155" endtime="20201030 11:50:01.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:01.165" endtime="20201030 11:50:01.167"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:00.832" endtime="20201030 11:50:01.168"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:00.830" endtime="20201030 11:50:01.168"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:01.172" level="INFO">${RESULT} = [{'diff': 1.73599999975238e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.7360000006405585e-06}, {'diff': 1.7219999994821933e-06}, {'diff': 1.7360000006405585e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:50:01.169" endtime="20201030 11:50:01.172"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:01.177" level="INFO">${OVERHEAD} = {'diff': [1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7219999994821933e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.735999...</msg>
<status status="PASS" starttime="20201030 11:50:01.173" endtime="20201030 11:50:01.178"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:01.182" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:01.181" endtime="20201030 11:50:01.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:01.184" level="INFO">VALUE: [1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7219999994821933e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7369999998351204e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7499999991343884e-06, 1.7360000006405585e-06, 1.7219999994821933e-06, 1.7640000002927536e-06, 1.6939999998299982e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.7500000000225668e-06, 1.7369999998351204e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.777999999674762e-06, 1.7499999991343884e-06, 1.7369999998351204e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.777999999674762e-06, 1.7640000002927536e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7220000003703717e-06, 1.7369999998351204e-06, 1.7220000003703717e-06, 1.7500000000225668e-06, 1.7219999994821933e-06, 1.7360000006405585e-06, 1.723000000453112e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.7360000006405585e-06, 1.723000000453112e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7640000002927536e-06]</msg>
<status status="PASS" starttime="20201030 11:50:01.183" endtime="20201030 11:50:01.185"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:01.178" endtime="20201030 11:50:01.186"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:00.800" endtime="20201030 11:50:01.186"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:00.800" endtime="20201030 11:50:01.186"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:01.194" endtime="20201030 11:50:01.210"></status>
</kw>
<msg timestamp="20201030 11:50:01.210" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:01.192" endtime="20201030 11:50:01.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:01.213" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:01.211" endtime="20201030 11:50:01.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:01.214" endtime="20201030 11:50:01.215"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:01.190" endtime="20201030 11:50:01.216"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:01.188" endtime="20201030 11:50:01.216"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:01.223" endtime="20201030 11:50:01.546"></status>
</kw>
<msg timestamp="20201030 11:50:01.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.480753333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.480755069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:01.222" endtime="20201030 11:50:01.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:01.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.480753333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.480755069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:01.551" endtime="20201030 11:50:01.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:01.561" endtime="20201030 11:50:01.563"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:01.219" endtime="20201030 11:50:01.563"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:01.217" endtime="20201030 11:50:01.564"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:01.568" level="INFO">${RESULT} = [{'diff': 1.73599999975238e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.7360000006405585e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.7220000003703717e-06}, {'diff': 1.7360000006405585e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:50:01.564" endtime="20201030 11:50:01.568"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:01.573" level="INFO">${OVERHEAD} = {'diff': [1.73599999975238e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.7360000006405585e-06, 1.723000000453112e-06, 1.7360000006405585e-06, 1.735...</msg>
<status status="PASS" starttime="20201030 11:50:01.569" endtime="20201030 11:50:01.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:01.577" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:01.576" endtime="20201030 11:50:01.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:01.580" level="INFO">VALUE: [1.73599999975238e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.7360000006405585e-06, 1.723000000453112e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7640000002927536e-06, 1.7220000003703717e-06, 1.7229999995649337e-06, 1.73599999975238e-06, 1.7229999995649337e-06, 1.7770000004802e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7640000002927536e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7219999994821933e-06, 1.7500000000225668e-06, 1.7369999998351204e-06, 1.7639999994045752e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.7500000000225668e-06, 1.7220000003703717e-06, 1.73599999975238e-06, 1.6939999998299982e-06, 1.7360000006405585e-06, 1.7639999994045752e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7630000002100132e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.7500000000225668e-06, 1.7360000006405585e-06, 1.7500000000225668e-06, 1.7220000003703717e-06, 1.7640000002927536e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7219999994821933e-06, 1.73599999975238e-06, 1.6949999999127385e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7369999998351204e-06, 1.7369999998351204e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7500000000225668e-06, 1.7360000006405585e-06]</msg>
<status status="PASS" starttime="20201030 11:50:01.579" endtime="20201030 11:50:01.581"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:01.574" endtime="20201030 11:50:01.581"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:01.187" endtime="20201030 11:50:01.582"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:01.186" endtime="20201030 11:50:01.582"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:01.590" endtime="20201030 11:50:01.605"></status>
</kw>
<msg timestamp="20201030 11:50:01.606" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:01.588" endtime="20201030 11:50:01.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:01.608" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:01.607" endtime="20201030 11:50:01.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:01.609" endtime="20201030 11:50:01.611"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:01.586" endtime="20201030 11:50:01.611"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:01.584" endtime="20201030 11:50:01.612"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:01.618" endtime="20201030 11:50:01.960"></status>
</kw>
<msg timestamp="20201030 11:50:01.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.855900903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.855902639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:01.616" endtime="20201030 11:50:01.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:01.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.855900903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.855902639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:01.965" endtime="20201030 11:50:01.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:01.974" endtime="20201030 11:50:01.976"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:01.614" endtime="20201030 11:50:01.977"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:01.612" endtime="20201030 11:50:01.977"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:01.981" level="INFO">${RESULT} = [{'diff': 1.73599999975238e-06}, {'diff': 1.7360000006405585e-06}, {'diff': 1.7219999994821933e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.6949999999127385e-06}, {'diff': 1.73599999975238e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:50:01.978" endtime="20201030 11:50:01.981"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:01.986" level="INFO">${OVERHEAD} = {'diff': [1.73599999975238e-06, 1.7360000006405585e-06, 1.7219999994821933e-06, 1.73599999975238e-06, 1.6949999999127385e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7369999998351204e-06, 1.7369...</msg>
<status status="PASS" starttime="20201030 11:50:01.982" endtime="20201030 11:50:01.986"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:01.990" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:01.989" endtime="20201030 11:50:01.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:01.992" level="INFO">VALUE: [1.73599999975238e-06, 1.7360000006405585e-06, 1.7219999994821933e-06, 1.73599999975238e-06, 1.6949999999127385e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7369999998351204e-06, 1.7369999998351204e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7500000000225668e-06, 1.7360000006405585e-06, 1.7770000004802e-06, 1.7770000004802e-06, 1.7360000006405585e-06, 1.723000000453112e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7919999999449487e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7229999995649337e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7640000002927536e-06, 1.7369999998351204e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.6939999998299982e-06, 1.7369999998351204e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.777999999674762e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.7500000000225668e-06, 1.6670000002605434e-06, 1.73599999975238e-06, 1.7219999994821933e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7369999998351204e-06, 1.73599999975238e-06, 1.6809999996425518e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7229999995649337e-06, 1.7639999994045752e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7219999994821933e-06, 1.6670000002605434e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06]</msg>
<status status="PASS" starttime="20201030 11:50:01.991" endtime="20201030 11:50:01.993"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:01.987" endtime="20201030 11:50:01.994"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:01.583" endtime="20201030 11:50:01.994"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:01.582" endtime="20201030 11:50:01.994"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:02.003" endtime="20201030 11:50:02.018"></status>
</kw>
<msg timestamp="20201030 11:50:02.018" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:02.001" endtime="20201030 11:50:02.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:02.021" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:02.019" endtime="20201030 11:50:02.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:02.022" endtime="20201030 11:50:02.023"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:01.998" endtime="20201030 11:50:02.024"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:01.996" endtime="20201030 11:50:02.024"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:02.031" endtime="20201030 11:50:02.347"></status>
</kw>
<msg timestamp="20201030 11:50:02.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.241670611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.241672292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:02.029" endtime="20201030 11:50:02.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:02.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.241670611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.241672292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:02.352" endtime="20201030 11:50:02.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:02.363" endtime="20201030 11:50:02.364"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:02.027" endtime="20201030 11:50:02.365"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:02.025" endtime="20201030 11:50:02.365"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:02.370" level="INFO">${RESULT} = [{'diff': 1.6809999996425518e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.7500000000225668e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.7229999995649337e-06}, {'diff': 1.7639999994045752e-06},...</msg>
<status status="PASS" starttime="20201030 11:50:02.366" endtime="20201030 11:50:02.370"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:02.375" level="INFO">${OVERHEAD} = {'diff': [1.6809999996425518e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7229999995649337e-06, 1.7639999994045752e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7359...</msg>
<status status="PASS" starttime="20201030 11:50:02.371" endtime="20201030 11:50:02.376"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:02.380" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:02.379" endtime="20201030 11:50:02.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:02.383" level="INFO">VALUE: [1.6809999996425518e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7229999995649337e-06, 1.7639999994045752e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7219999994821933e-06, 1.6670000002605434e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.777999999674762e-06, 1.666000000177803e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.8050000001323951e-06, 1.7229999995649337e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7360000006405585e-06, 1.7360000006405585e-06, 1.723000000453112e-06, 1.7360000006405585e-06, 1.7500000000225668e-06, 1.777999999674762e-06, 1.73599999975238e-06, 1.7370000007232989e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7360000006405585e-06, 1.7220000003703717e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7360000006405585e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.723000000453112e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7780000005629404e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.7220000003703717e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7780000005629404e-06, 1.7219999994821933e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7640000002927536e-06, 1.73599999975238e-06, 1.7500000000225668e-06]</msg>
<status status="PASS" starttime="20201030 11:50:02.381" endtime="20201030 11:50:02.383"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:02.376" endtime="20201030 11:50:02.384"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:01.995" endtime="20201030 11:50:02.384"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:01.995" endtime="20201030 11:50:02.385"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:02.393" endtime="20201030 11:50:02.409"></status>
</kw>
<msg timestamp="20201030 11:50:02.409" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:02.391" endtime="20201030 11:50:02.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:02.411" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:02.410" endtime="20201030 11:50:02.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:02.413" endtime="20201030 11:50:02.414"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:02.389" endtime="20201030 11:50:02.415"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:02.387" endtime="20201030 11:50:02.415"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:02.422" endtime="20201030 11:50:02.755"></status>
</kw>
<msg timestamp="20201030 11:50:02.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.644912153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.644913875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:02.421" endtime="20201030 11:50:02.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:02.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.644912153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.644913875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:02.760" endtime="20201030 11:50:02.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:02.770" endtime="20201030 11:50:02.772"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:02.418" endtime="20201030 11:50:02.772"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:02.416" endtime="20201030 11:50:02.773"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:02.777" level="INFO">${RESULT} = [{'diff': 1.7220000003703717e-06}, {'diff': 1.7500000000225668e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.7500000000225668e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.73599999975238e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:50:02.774" endtime="20201030 11:50:02.777"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:02.783" level="INFO">${OVERHEAD} = {'diff': [1.7220000003703717e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7780000005629404e-06, 1.72...</msg>
<status status="PASS" starttime="20201030 11:50:02.778" endtime="20201030 11:50:02.783"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:02.787" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:02.786" endtime="20201030 11:50:02.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:02.790" level="INFO">VALUE: [1.7220000003703717e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7780000005629404e-06, 1.7219999994821933e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7640000002927536e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7219999994821933e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7370000007232989e-06, 1.7360000006405585e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.777999999674762e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.777999999674762e-06, 1.7770000004802e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7780000005629404e-06, 1.7219999994821933e-06, 1.7360000006405585e-06, 1.7220000003703717e-06, 1.6949999999127385e-06, 1.7500000000225668e-06, 1.7360000006405585e-06, 1.7220000003703717e-06, 1.7360000006405585e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7630000002100132e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7769999995920216e-06, 1.7640000002927536e-06, 1.6799999995598114e-06, 1.73599999975238e-06, 1.7369999998351204e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7360000006405585e-06, 1.7909999998622084e-06, 1.7909999998622084e-06, 1.7639999994045752e-06, 1.6800000004479898e-06, 1.7500000000225668e-06]</msg>
<status status="PASS" starttime="20201030 11:50:02.789" endtime="20201030 11:50:02.791"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:02.784" endtime="20201030 11:50:02.791"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:02.385" endtime="20201030 11:50:02.792"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:02.385" endtime="20201030 11:50:02.792"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:02.800" endtime="20201030 11:50:02.816"></status>
</kw>
<msg timestamp="20201030 11:50:02.816" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:02.799" endtime="20201030 11:50:02.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:02.819" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:02.817" endtime="20201030 11:50:02.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:02.820" endtime="20201030 11:50:02.822"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:02.796" endtime="20201030 11:50:02.822"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:02.794" endtime="20201030 11:50:02.823"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:02.831" endtime="20201030 11:50:03.151"></status>
</kw>
<msg timestamp="20201030 11:50:03.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.0249805, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.024982236, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:50:02.829" endtime="20201030 11:50:03.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:03.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.0249805, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.024982236, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:50:03.156" endtime="20201030 11:50:03.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:03.167" endtime="20201030 11:50:03.168"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:02.825" endtime="20201030 11:50:03.169"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:02.824" endtime="20201030 11:50:03.169"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:03.174" level="INFO">${RESULT} = [{'diff': 1.73599999975238e-06}, {'diff': 1.7769999995920216e-06}, {'diff': 1.7640000002927536e-06}, {'diff': 1.6799999995598114e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.7369999998351204e-06},...</msg>
<status status="PASS" starttime="20201030 11:50:03.170" endtime="20201030 11:50:03.174"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:03.179" level="INFO">${OVERHEAD} = {'diff': [1.73599999975238e-06, 1.7769999995920216e-06, 1.7640000002927536e-06, 1.6799999995598114e-06, 1.73599999975238e-06, 1.7369999998351204e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.73...</msg>
<status status="PASS" starttime="20201030 11:50:03.175" endtime="20201030 11:50:03.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:03.183" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:03.182" endtime="20201030 11:50:03.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:03.186" level="INFO">VALUE: [1.73599999975238e-06, 1.7769999995920216e-06, 1.7640000002927536e-06, 1.6799999995598114e-06, 1.73599999975238e-06, 1.7369999998351204e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7360000006405585e-06, 1.7909999998622084e-06, 1.7909999998622084e-06, 1.7639999994045752e-06, 1.6800000004479898e-06, 1.7500000000225668e-06, 1.723000000453112e-06, 1.7360000006405585e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7369999998351204e-06, 1.708000000100185e-06, 1.7079999992120065e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7360000006405585e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.723000000453112e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7370000007232989e-06, 1.6799999995598114e-06, 1.7220000003703717e-06, 1.7360000006405585e-06, 1.7360000006405585e-06, 1.7369999998351204e-06, 1.73599999975238e-06, 1.6949999999127385e-06, 1.73599999975238e-06, 1.7640000002927536e-06, 1.7369999998351204e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7370000007232989e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.6529999999903566e-06, 1.7500000000225668e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7919999999449487e-06, 1.7369999998351204e-06, 1.7630000002100132e-06, 1.7500000000225668e-06]</msg>
<status status="PASS" starttime="20201030 11:50:03.184" endtime="20201030 11:50:03.187"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:03.180" endtime="20201030 11:50:03.188"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:02.793" endtime="20201030 11:50:03.188"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:02.792" endtime="20201030 11:50:03.188"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:03.197" endtime="20201030 11:50:03.212"></status>
</kw>
<msg timestamp="20201030 11:50:03.213" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:03.195" endtime="20201030 11:50:03.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:03.215" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:03.214" endtime="20201030 11:50:03.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:03.217" endtime="20201030 11:50:03.218"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:03.192" endtime="20201030 11:50:03.219"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:03.191" endtime="20201030 11:50:03.219"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:03.226" endtime="20201030 11:50:03.547"></status>
</kw>
<msg timestamp="20201030 11:50:03.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.421439819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.421441556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:03.224" endtime="20201030 11:50:03.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:03.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.421439819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.421441556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:03.552" endtime="20201030 11:50:03.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:03.562" endtime="20201030 11:50:03.563"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:03.222" endtime="20201030 11:50:03.564"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:03.220" endtime="20201030 11:50:03.564"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:03.569" level="INFO">${RESULT} = [{'diff': 1.7370000007232989e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.7500000000225668e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.6529999999903566e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:50:03.565" endtime="20201030 11:50:03.569"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:03.574" level="INFO">${OVERHEAD} = {'diff': [1.7370000007232989e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.6529999999903566e-06, 1.7500000000225668e-06, 1.7360000006405585e-06, 1.73...</msg>
<status status="PASS" starttime="20201030 11:50:03.570" endtime="20201030 11:50:03.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:03.578" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:03.577" endtime="20201030 11:50:03.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:03.581" level="INFO">VALUE: [1.7370000007232989e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.6529999999903566e-06, 1.7500000000225668e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7919999999449487e-06, 1.7369999998351204e-06, 1.7630000002100132e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.7219999994821933e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7219999994821933e-06, 1.7360000006405585e-06, 1.7780000005629404e-06, 1.7500000000225668e-06, 1.7360000006405585e-06, 1.7780000005629404e-06, 1.7089999992947469e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7220000003703717e-06, 1.73599999975238e-06, 1.723000000453112e-06, 1.7229999995649337e-06, 1.723000000453112e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7369999998351204e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7360000006405585e-06, 1.7780000005629404e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.7219999994821933e-06, 1.7369999998351204e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7370000007232989e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.7780000005629404e-06, 1.7229999995649337e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7640000002927536e-06]</msg>
<status status="PASS" starttime="20201030 11:50:03.579" endtime="20201030 11:50:03.581"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:03.575" endtime="20201030 11:50:03.582"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:03.189" endtime="20201030 11:50:03.582"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:03.189" endtime="20201030 11:50:03.583"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:03.590" endtime="20201030 11:50:03.605"></status>
</kw>
<msg timestamp="20201030 11:50:03.606" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:03.589" endtime="20201030 11:50:03.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:03.608" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:03.607" endtime="20201030 11:50:03.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:03.609" endtime="20201030 11:50:03.611"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:03.586" endtime="20201030 11:50:03.611"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:03.585" endtime="20201030 11:50:03.612"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:03.618" endtime="20201030 11:50:03.938"></status>
</kw>
<msg timestamp="20201030 11:50:03.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.807722375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.807724111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:03.616" endtime="20201030 11:50:03.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:03.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.807722375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.807724111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:03.942" endtime="20201030 11:50:03.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:03.952" endtime="20201030 11:50:03.954"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:03.614" endtime="20201030 11:50:03.954"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:03.612" endtime="20201030 11:50:03.955"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:03.959" level="INFO">${RESULT} = [{'diff': 1.73599999975238e-06}, {'diff': 1.7500000000225668e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.73599999975238e-06}, {'diff': 1.7370000007232989e-06}, {'d...</msg>
<status status="PASS" starttime="20201030 11:50:03.956" endtime="20201030 11:50:03.959"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:03.964" level="INFO">${OVERHEAD} = {'diff': [1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7370000007232989e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.722000...</msg>
<status status="PASS" starttime="20201030 11:50:03.960" endtime="20201030 11:50:03.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:03.968" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:03.967" endtime="20201030 11:50:03.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:03.970" level="INFO">VALUE: [1.73599999975238e-06, 1.7500000000225668e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7370000007232989e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.7780000005629404e-06, 1.7229999995649337e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7640000002927536e-06, 1.6949999999127385e-06, 1.7090000001829253e-06, 1.695000000800917e-06, 1.73599999975238e-06, 1.7229999995649337e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7220000003703717e-06, 1.6799999995598114e-06, 1.7500000000225668e-06, 1.7369999998351204e-06, 1.7919999999449487e-06, 1.7219999994821933e-06, 1.7220000003703717e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7360000006405585e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7090000001829253e-06, 1.73599999975238e-06, 1.7639999994045752e-06, 1.73599999975238e-06, 1.777999999674762e-06, 1.7360000006405585e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7219999994821933e-06, 1.73599999975238e-06, 1.73599999975238e-06, 1.7369999998351204e-06, 1.73599999975238e-06, 1.7220000003703717e-06, 1.6939999998299982e-06, 1.6939999998299982e-06, 1.7090000001829253e-06, 1.7500000000225668e-06, 1.6659999992896246e-06, 1.73599999975238e-06, 1.7500000000225668e-06, 1.7220000003703717e-06, 1.73599999975238e-06, 1.7220000003703717e-06]</msg>
<status status="PASS" starttime="20201030 11:50:03.969" endtime="20201030 11:50:03.971"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:03.965" endtime="20201030 11:50:03.972"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:03.583" endtime="20201030 11:50:03.972"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:03.583" endtime="20201030 11:50:03.972"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:56.266" endtime="20201030 11:50:03.972"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:49:56.189" endtime="20201030 11:50:03.973" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:03.980" endtime="20201030 11:50:04.000"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:03.979" endtime="20201030 11:50:04.001"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:04.016" endtime="20201030 11:50:04.040"></status>
</kw>
<msg timestamp="20201030 11:50:04.040" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:04.015" endtime="20201030 11:50:04.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:04.043" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:04.041" endtime="20201030 11:50:04.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:04.045" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:50:04.044" endtime="20201030 11:50:04.046"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:04.012" endtime="20201030 11:50:04.046"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:04.010" endtime="20201030 11:50:04.047"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.009" endtime="20201030 11:50:04.047"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:50:04.051" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:50:04.050" endtime="20201030 11:50:04.051"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.048" endtime="20201030 11:50:04.052"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.008" endtime="20201030 11:50:04.052"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.007" endtime="20201030 11:50:04.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:04.053" endtime="20201030 11:50:04.054"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.003" endtime="20201030 11:50:04.055"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.001" endtime="20201030 11:50:04.055"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:03.978" endtime="20201030 11:50:04.055"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:04.064" endtime="20201030 11:50:04.085"></status>
</kw>
<msg timestamp="20201030 11:50:04.086" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:04.063" endtime="20201030 11:50:04.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:04.088" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:04.087" endtime="20201030 11:50:04.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:04.089" endtime="20201030 11:50:04.091"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.060" endtime="20201030 11:50:04.092"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.058" endtime="20201030 11:50:04.092"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:04.094" endtime="20201030 11:50:04.096"></status>
</kw>
<msg timestamp="20201030 11:50:04.096" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 11:50:04.093" endtime="20201030 11:50:04.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:04.100" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 11:50:04.099" endtime="20201030 11:50:04.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:04.103" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 11:50:04.101" endtime="20201030 11:50:04.104"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.097" endtime="20201030 11:50:04.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:04.108" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 11:50:04.107" endtime="20201030 11:50:04.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:04.110" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 11:50:04.109" endtime="20201030 11:50:04.111"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.105" endtime="20201030 11:50:04.111"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:04.117" endtime="20201030 11:50:04.405"></status>
</kw>
<msg timestamp="20201030 11:50:04.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073943792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073972917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:04.116" endtime="20201030 11:50:04.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:04.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073943792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073972917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:04.409" endtime="20201030 11:50:04.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:04.417" endtime="20201030 11:50:04.419"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.113" endtime="20201030 11:50:04.420"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.112" endtime="20201030 11:50:04.420"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:04.424" level="INFO">${RESULT} = [{'diff': 2.912500000000484e-05}, {'diff': 7.443999999995343e-06}, {'diff': 7.472000000008361e-06}, {'diff': 7.444999999994817e-06}, {'diff': 7.443999999995343e-06}, {'diff': 7.458000000001852e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:50:04.421" endtime="20201030 11:50:04.424"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:04.428" level="INFO">${OVERHEAD} = {'diff': [2.912500000000484e-05, 7.443999999995343e-06, 7.472000000008361e-06, 7.444999999994817e-06, 7.443999999995343e-06, 7.458000000001852e-06, 7.458999999987448e-06, 7.486000000000992e-06, 7.4860...</msg>
<status status="PASS" starttime="20201030 11:50:04.425" endtime="20201030 11:50:04.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:04.433" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201030 11:50:04.432" endtime="20201030 11:50:04.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:04.436" level="INFO">VALUE: [2.912500000000484e-05, 7.443999999995343e-06, 7.472000000008361e-06, 7.444999999994817e-06, 7.443999999995343e-06, 7.458000000001852e-06, 7.458999999987448e-06, 7.486000000000992e-06, 7.486000000000992e-06, 7.526999999993289e-06, 7.486000000000992e-06, 7.471999999994483e-06, 7.443999999995343e-06, 7.471999999994483e-06, 7.471999999994483e-06, 7.444999999994817e-06, 7.443999999995343e-06, 7.471999999994483e-06, 7.443999999995343e-06, 7.458000000001852e-06, 7.445000000008695e-06, 7.458000000001852e-06, 7.458000000001852e-06, 7.472999999993957e-06, 7.444000000009221e-06, 7.444999999994817e-06, 7.459000000001326e-06, 7.471999999994483e-06, 7.5280000000066405e-06, 7.458000000001852e-06, 7.458000000001852e-06, 7.4730000000078345e-06, 7.458000000001852e-06, 7.4730000000078345e-06, 7.459000000001326e-06, 7.458000000001852e-06, 7.459000000001326e-06, 7.486000000000992e-06, 7.500000000007501e-06, 7.459000000001326e-06, 7.430000000002712e-06, 7.459000000001326e-06, 7.457999999987974e-06, 7.471999999994483e-06, 7.444999999994817e-06, 7.458000000001852e-06, 7.444999999994817e-06, 7.472999999993957e-06, 7.457999999987974e-06, 7.471999999994483e-06]</msg>
<status status="PASS" starttime="20201030 11:50:04.434" endtime="20201030 11:50:04.436"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.429" endtime="20201030 11:50:04.437"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.056" endtime="20201030 11:50:04.437"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:50:03.975" endtime="20201030 11:50:04.438" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:04.445" endtime="20201030 11:50:04.465"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.444" endtime="20201030 11:50:04.465"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:04.478" endtime="20201030 11:50:04.501"></status>
</kw>
<msg timestamp="20201030 11:50:04.501" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:04.477" endtime="20201030 11:50:04.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:04.504" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:04.502" endtime="20201030 11:50:04.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:04.507" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:50:04.505" endtime="20201030 11:50:04.507"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:04.474" endtime="20201030 11:50:04.508"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:04.472" endtime="20201030 11:50:04.508"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.470" endtime="20201030 11:50:04.509"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:50:04.512" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:50:04.512" endtime="20201030 11:50:04.513"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.510" endtime="20201030 11:50:04.513"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.470" endtime="20201030 11:50:04.513"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.469" endtime="20201030 11:50:04.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:04.514" endtime="20201030 11:50:04.515"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.467" endtime="20201030 11:50:04.516"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.466" endtime="20201030 11:50:04.516"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.442" endtime="20201030 11:50:04.517"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:04.527" endtime="20201030 11:50:04.584"></status>
</kw>
<msg timestamp="20201030 11:50:04.584" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:04.524" endtime="20201030 11:50:04.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:04.587" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:04.586" endtime="20201030 11:50:04.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:04.588" endtime="20201030 11:50:04.590"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.521" endtime="20201030 11:50:04.590"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.519" endtime="20201030 11:50:04.591"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:04.593" endtime="20201030 11:50:04.595"></status>
</kw>
<msg timestamp="20201030 11:50:04.595" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 11:50:04.592" endtime="20201030 11:50:04.596"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:04.599" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 11:50:04.598" endtime="20201030 11:50:04.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:04.601" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 11:50:04.600" endtime="20201030 11:50:04.602"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.596" endtime="20201030 11:50:04.602"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:04.606" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 11:50:04.605" endtime="20201030 11:50:04.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:04.608" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 11:50:04.607" endtime="20201030 11:50:04.608"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.603" endtime="20201030 11:50:04.609"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:04.615" endtime="20201030 11:50:04.904"></status>
</kw>
<msg timestamp="20201030 11:50:04.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072393319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072419444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:04.614" endtime="20201030 11:50:04.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:04.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072393319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072419444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:04.908" endtime="20201030 11:50:04.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:04.916" endtime="20201030 11:50:04.918"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.611" endtime="20201030 11:50:04.918"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.609" endtime="20201030 11:50:04.919"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:04.923" level="INFO">${RESULT} = [{'diff': 2.612500000000184e-05}, {'diff': 2.6235999999998927e-05}, {'diff': 2.6235999999998927e-05}, {'diff': 2.6250000000005436e-05}, {'diff': 2.6249999999991558e-05}, {'diff': 2.6250000000005436e-0...</msg>
<status status="PASS" starttime="20201030 11:50:04.920" endtime="20201030 11:50:04.923"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:04.928" level="INFO">${OVERHEAD} = {'diff': [2.612500000000184e-05, 2.6235999999998927e-05, 2.6235999999998927e-05, 2.6250000000005436e-05, 2.6249999999991558e-05, 2.6250000000005436e-05, 2.6249999999991558e-05, 2.6319999999996346e-05,...</msg>
<status status="PASS" starttime="20201030 11:50:04.924" endtime="20201030 11:50:04.928"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:04.932" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201030 11:50:04.931" endtime="20201030 11:50:04.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:04.935" level="INFO">VALUE: [2.612500000000184e-05, 2.6235999999998927e-05, 2.6235999999998927e-05, 2.6250000000005436e-05, 2.6249999999991558e-05, 2.6250000000005436e-05, 2.6249999999991558e-05, 2.6319999999996346e-05, 2.6250000000005436e-05, 2.6278000000004575e-05, 2.6263999999998067e-05, 2.6193999999993278e-05, 2.6249999999991558e-05, 2.6235999999998927e-05, 2.6250000000005436e-05, 2.630500000000424e-05, 2.6263999999998067e-05, 2.6194999999992752e-05, 2.6249999999991558e-05, 2.6278000000004575e-05, 2.622300000000577e-05, 2.620899999999926e-05, 2.6250000000005436e-05, 2.6235999999998927e-05, 2.616599999999414e-05, 2.6263999999998067e-05, 2.6250000000005436e-05, 2.6263999999998067e-05, 2.6235999999998927e-05, 2.6222000000006296e-05, 2.6263999999998067e-05, 2.6235999999998927e-05, 2.6250000000005436e-05, 2.6320000000010224e-05, 2.630500000000424e-05, 2.6249999999991558e-05, 2.6277000000005102e-05, 2.6235999999998927e-05, 2.6264000000011944e-05, 2.630500000000424e-05, 2.6250000000005436e-05, 2.6250000000005436e-05, 2.6263999999998067e-05, 2.6250000000005436e-05, 2.6250000000005436e-05, 2.6250000000005436e-05, 2.6290999999997733e-05, 2.6263999999998067e-05, 2.622299999999189e-05, 2.6249999999991558e-05]</msg>
<status status="PASS" starttime="20201030 11:50:04.933" endtime="20201030 11:50:04.935"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.929" endtime="20201030 11:50:04.936"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.517" endtime="20201030 11:50:04.936"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:50:04.440" endtime="20201030 11:50:04.937" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:04.944" endtime="20201030 11:50:04.963"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.943" endtime="20201030 11:50:04.964"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:04.977" endtime="20201030 11:50:04.999"></status>
</kw>
<msg timestamp="20201030 11:50:04.999" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:04.975" endtime="20201030 11:50:04.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:05.002" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:05.000" endtime="20201030 11:50:05.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:05.005" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:50:05.003" endtime="20201030 11:50:05.005"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:04.973" endtime="20201030 11:50:05.006"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:04.971" endtime="20201030 11:50:05.006"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.969" endtime="20201030 11:50:05.007"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:50:05.010" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:50:05.010" endtime="20201030 11:50:05.011"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:05.007" endtime="20201030 11:50:05.012"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.968" endtime="20201030 11:50:05.012"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.968" endtime="20201030 11:50:05.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:05.013" endtime="20201030 11:50:05.015"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.966" endtime="20201030 11:50:05.015"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.965" endtime="20201030 11:50:05.016"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.941" endtime="20201030 11:50:05.016"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:05.025" endtime="20201030 11:50:05.178"></status>
</kw>
<msg timestamp="20201030 11:50:05.178" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:05.023" endtime="20201030 11:50:05.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:05.181" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:05.179" endtime="20201030 11:50:05.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:05.182" endtime="20201030 11:50:05.183"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:05.021" endtime="20201030 11:50:05.184"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:05.018" endtime="20201030 11:50:05.185"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:05.187" endtime="20201030 11:50:05.188"></status>
</kw>
<msg timestamp="20201030 11:50:05.189" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 11:50:05.185" endtime="20201030 11:50:05.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:05.193" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 11:50:05.192" endtime="20201030 11:50:05.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:05.195" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 11:50:05.194" endtime="20201030 11:50:05.195"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:05.190" endtime="20201030 11:50:05.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:05.200" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 11:50:05.199" endtime="20201030 11:50:05.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:05.201" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 11:50:05.201" endtime="20201030 11:50:05.202"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:05.196" endtime="20201030 11:50:05.202"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:05.209" endtime="20201030 11:50:05.501"></status>
</kw>
<msg timestamp="20201030 11:50:05.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073155875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073205069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:05.207" endtime="20201030 11:50:05.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:05.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073155875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073205069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:05.505" endtime="20201030 11:50:05.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:05.513" endtime="20201030 11:50:05.515"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:05.205" endtime="20201030 11:50:05.515"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:05.203" endtime="20201030 11:50:05.516"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:05.521" level="INFO">${RESULT} = [{'diff': 4.91940000000024e-05}, {'diff': 4.908300000000532e-05}, {'diff': 4.904199999999914e-05}, {'diff': 4.905500000000618e-05}, {'diff': 4.909799999999742e-05}, {'diff': 4.908299999999144e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:50:05.516" endtime="20201030 11:50:05.521"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:05.525" level="INFO">${OVERHEAD} = {'diff': [4.91940000000024e-05, 4.908300000000532e-05, 4.904199999999914e-05, 4.905500000000618e-05, 4.909799999999742e-05, 4.908299999999144e-05, 4.905600000000565e-05, 4.908300000000532e-05, 4.90969...</msg>
<status status="PASS" starttime="20201030 11:50:05.522" endtime="20201030 11:50:05.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:05.529" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201030 11:50:05.528" endtime="20201030 11:50:05.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:05.532" level="INFO">VALUE: [4.91940000000024e-05, 4.908300000000532e-05, 4.904199999999914e-05, 4.905500000000618e-05, 4.909799999999742e-05, 4.908299999999144e-05, 4.905600000000565e-05, 4.908300000000532e-05, 4.909699999999795e-05, 4.911100000000446e-05, 4.911099999999058e-05, 4.908400000000479e-05, 4.906899999999881e-05, 4.908299999999144e-05, 4.908299999999144e-05, 4.906899999999881e-05, 4.908400000000479e-05, 4.9014e-05, 4.908300000000532e-05, 4.908300000000532e-05, 4.908400000000479e-05, 4.907000000001216e-05, 4.905599999999177e-05, 4.908299999997756e-05, 4.906899999998493e-05, 4.909699999999795e-05, 4.904199999999914e-05, 4.907000000001216e-05, 4.909699999999795e-05, 4.908300000000532e-05, 4.908300000000532e-05, 4.909799999999742e-05, 4.9139000000003596e-05, 4.908400000000479e-05, 4.90549999999923e-05, 4.9069000000012686e-05, 4.908300000000532e-05, 4.904099999999967e-05, 4.907000000001216e-05, 4.901400000001388e-05, 4.9111000000018334e-05, 4.908300000000532e-05, 4.908299999997756e-05, 4.902700000000704e-05, 4.908400000000479e-05, 4.902800000000651e-05, 4.907000000001216e-05, 4.908300000000532e-05, 4.904099999999967e-05, 4.898600000000086e-05]</msg>
<status status="PASS" starttime="20201030 11:50:05.530" endtime="20201030 11:50:05.532"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:05.525" endtime="20201030 11:50:05.533"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:05.017" endtime="20201030 11:50:05.533"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:50:04.939" endtime="20201030 11:50:05.534" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:05.541" endtime="20201030 11:50:05.561"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:05.540" endtime="20201030 11:50:05.561"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:05.575" endtime="20201030 11:50:05.598"></status>
</kw>
<msg timestamp="20201030 11:50:05.599" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:05.573" endtime="20201030 11:50:05.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:05.601" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:05.600" endtime="20201030 11:50:05.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:05.604" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:50:05.602" endtime="20201030 11:50:05.604"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:05.570" endtime="20201030 11:50:05.605"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:05.568" endtime="20201030 11:50:05.606"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:05.566" endtime="20201030 11:50:05.606"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:50:05.610" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:50:05.609" endtime="20201030 11:50:05.610"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:05.607" endtime="20201030 11:50:05.610"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:05.566" endtime="20201030 11:50:05.610"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:05.565" endtime="20201030 11:50:05.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:05.611" endtime="20201030 11:50:05.613"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:05.564" endtime="20201030 11:50:05.613"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:05.562" endtime="20201030 11:50:05.614"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:05.539" endtime="20201030 11:50:05.614"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:05.623" endtime="20201030 11:50:05.649"></status>
</kw>
<msg timestamp="20201030 11:50:05.650" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:05.621" endtime="20201030 11:50:05.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:05.655" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:05.652" endtime="20201030 11:50:05.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:05.657" endtime="20201030 11:50:05.660"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:05.619" endtime="20201030 11:50:05.661"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:05.616" endtime="20201030 11:50:05.662"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:05.667" endtime="20201030 11:50:05.671"></status>
</kw>
<msg timestamp="20201030 11:50:05.672" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 11:50:05.665" endtime="20201030 11:50:05.672"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:05.680" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 11:50:05.678" endtime="20201030 11:50:05.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:05.684" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 11:50:05.682" endtime="20201030 11:50:05.685"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:05.673" endtime="20201030 11:50:05.686"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:05.694" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 11:50:05.692" endtime="20201030 11:50:05.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:05.698" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 11:50:05.696" endtime="20201030 11:50:05.699"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:05.687" endtime="20201030 11:50:05.700"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:05.715" endtime="20201030 11:50:06.000"></status>
</kw>
<msg timestamp="20201030 11:50:06.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071809917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071811069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:05.712" endtime="20201030 11:50:06.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:06.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071809917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071811069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:06.004" endtime="20201030 11:50:06.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:06.013" endtime="20201030 11:50:06.014"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:05.704" endtime="20201030 11:50:06.015"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:05.701" endtime="20201030 11:50:06.015"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:06.019" level="INFO">${RESULT} = [{'diff': 1.1520000000042607e-06}, {'diff': 1.1390000000111034e-06}, {'diff': 1.1530000000037344e-06}, {'diff': 1.096999999991577e-06}, {'diff': 1.1389999999972256e-06}, {'diff': 1.1530000000037344e-0...</msg>
<status status="PASS" starttime="20201030 11:50:06.016" endtime="20201030 11:50:06.019"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:06.023" level="INFO">${OVERHEAD} = {'diff': [1.1520000000042607e-06, 1.1390000000111034e-06, 1.1530000000037344e-06, 1.096999999991577e-06, 1.1389999999972256e-06, 1.1530000000037344e-06, 1.1389999999972256e-06, 1.1389999999972256e-06,...</msg>
<status status="PASS" starttime="20201030 11:50:06.020" endtime="20201030 11:50:06.023"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:06.028" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201030 11:50:06.027" endtime="20201030 11:50:06.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:06.030" level="INFO">VALUE: [1.1520000000042607e-06, 1.1390000000111034e-06, 1.1530000000037344e-06, 1.096999999991577e-06, 1.1389999999972256e-06, 1.1530000000037344e-06, 1.1389999999972256e-06, 1.1389999999972256e-06, 1.1390000000111034e-06, 1.1249999999907168e-06, 1.1530000000037344e-06, 1.1389999999972256e-06, 1.1389999999972256e-06, 1.1530000000037344e-06, 1.1109999999980857e-06, 1.1530000000037344e-06, 1.0979999999910506e-06, 1.1389999999972256e-06, 1.1249999999907168e-06, 1.1250000000045945e-06, 1.1249999999907168e-06, 1.1810000000028742e-06, 1.1250000000045945e-06, 1.1250000000045945e-06, 1.1250000000045945e-06, 1.1530000000037344e-06, 1.1389999999972256e-06, 1.1530000000037344e-06, 1.1669999999963654e-06, 1.1250000000045945e-06, 1.1389999999972256e-06, 1.1529999999898566e-06, 1.1390000000111034e-06, 1.1389999999972256e-06, 1.1389999999972256e-06, 1.1389999999972256e-06, 1.0689999999924371e-06, 1.1389999999972256e-06, 1.1250000000045945e-06, 1.1390000000111034e-06, 1.0980000000049284e-06, 1.1249999999907168e-06, 1.1389999999972256e-06, 1.1800000000034006e-06, 1.1250000000045945e-06, 1.1109999999980857e-06, 1.1530000000037344e-06, 1.137999999997752e-06, 1.1659999999968917e-06, 1.1390000000111034e-06]</msg>
<status status="PASS" starttime="20201030 11:50:06.029" endtime="20201030 11:50:06.030"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.024" endtime="20201030 11:50:06.031"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:05.615" endtime="20201030 11:50:06.032"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:50:05.536" endtime="20201030 11:50:06.033" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:06.040" endtime="20201030 11:50:06.059"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.038" endtime="20201030 11:50:06.060"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:06.074" endtime="20201030 11:50:06.097"></status>
</kw>
<msg timestamp="20201030 11:50:06.097" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:06.072" endtime="20201030 11:50:06.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:06.100" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:06.099" endtime="20201030 11:50:06.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:06.103" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:50:06.101" endtime="20201030 11:50:06.103"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:06.070" endtime="20201030 11:50:06.104"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:06.067" endtime="20201030 11:50:06.104"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.066" endtime="20201030 11:50:06.105"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:50:06.108" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:50:06.108" endtime="20201030 11:50:06.109"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.106" endtime="20201030 11:50:06.109"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.065" endtime="20201030 11:50:06.109"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.064" endtime="20201030 11:50:06.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:06.110" endtime="20201030 11:50:06.112"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.063" endtime="20201030 11:50:06.112"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.061" endtime="20201030 11:50:06.112"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.037" endtime="20201030 11:50:06.113"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:06.122" endtime="20201030 11:50:06.180"></status>
</kw>
<msg timestamp="20201030 11:50:06.181" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:06.120" endtime="20201030 11:50:06.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:06.183" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:06.182" endtime="20201030 11:50:06.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:06.184" endtime="20201030 11:50:06.186"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.117" endtime="20201030 11:50:06.186"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.115" endtime="20201030 11:50:06.187"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:06.190" endtime="20201030 11:50:06.192"></status>
</kw>
<msg timestamp="20201030 11:50:06.193" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 11:50:06.188" endtime="20201030 11:50:06.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:06.197" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 11:50:06.196" endtime="20201030 11:50:06.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:06.199" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 11:50:06.198" endtime="20201030 11:50:06.199"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.193" endtime="20201030 11:50:06.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:06.203" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 11:50:06.202" endtime="20201030 11:50:06.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:06.205" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 11:50:06.204" endtime="20201030 11:50:06.206"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.200" endtime="20201030 11:50:06.206"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:06.212" endtime="20201030 11:50:06.502"></status>
</kw>
<msg timestamp="20201030 11:50:06.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072953569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072962042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:06.211" endtime="20201030 11:50:06.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:06.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072953569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072962042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:06.506" endtime="20201030 11:50:06.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:06.514" endtime="20201030 11:50:06.516"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.208" endtime="20201030 11:50:06.516"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.207" endtime="20201030 11:50:06.516"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:06.520" level="INFO">${RESULT} = [{'diff': 8.473000000008835e-06}, {'diff': 8.541000000000798e-06}, {'diff': 8.417000000010555e-06}, {'diff': 8.5000000000085e-06}, {'diff': 8.458000000002852e-06}, {'diff': 8.486000000001992e-06}, {'d...</msg>
<status status="PASS" starttime="20201030 11:50:06.517" endtime="20201030 11:50:06.521"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:06.525" level="INFO">${OVERHEAD} = {'diff': [8.473000000008835e-06, 8.541000000000798e-06, 8.417000000010555e-06, 8.5000000000085e-06, 8.458000000002852e-06, 8.486000000001992e-06, 8.486000000001992e-06, 8.486000000001992e-06, 8.431000...</msg>
<status status="PASS" starttime="20201030 11:50:06.521" endtime="20201030 11:50:06.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:06.530" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201030 11:50:06.529" endtime="20201030 11:50:06.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:06.532" level="INFO">VALUE: [8.473000000008835e-06, 8.541000000000798e-06, 8.417000000010555e-06, 8.5000000000085e-06, 8.458000000002852e-06, 8.486000000001992e-06, 8.486000000001992e-06, 8.486000000001992e-06, 8.431000000003186e-06, 8.472000000009361e-06, 8.487000000001466e-06, 8.513999999987254e-06, 8.486000000001992e-06, 8.499999999994623e-06, 8.471999999995483e-06, 8.486000000001992e-06, 8.486000000001992e-06, 8.471999999995483e-06, 8.499999999994623e-06, 8.486999999987588e-06, 8.514000000001132e-06, 8.485999999988114e-06, 8.443999999996343e-06, 8.527999999993763e-06, 8.416999999996677e-06, 8.471999999995483e-06, 8.430999999989308e-06, 8.499999999994623e-06, 8.486000000001992e-06, 8.555000000007307e-06, 8.499999999994623e-06, 8.514000000001132e-06, 8.514000000001132e-06, 8.527999999993763e-06, 8.486000000001992e-06, 8.415999999997203e-06, 8.430000000003712e-06, 8.487000000001466e-06, 8.472000000009361e-06, 8.486000000001992e-06, 8.486000000001992e-06, 8.486000000001992e-06, 8.471999999995483e-06, 8.487000000001466e-06, 8.486000000001992e-06, 8.513999999987254e-06, 8.485999999988114e-06, 8.514000000001132e-06, 8.5000000000085e-06, 8.514000000001132e-06]</msg>
<status status="PASS" starttime="20201030 11:50:06.531" endtime="20201030 11:50:06.533"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.526" endtime="20201030 11:50:06.533"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.114" endtime="20201030 11:50:06.534"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:50:06.034" endtime="20201030 11:50:06.535" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:06.542" endtime="20201030 11:50:06.561"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.541" endtime="20201030 11:50:06.562"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:06.575" endtime="20201030 11:50:06.596"></status>
</kw>
<msg timestamp="20201030 11:50:06.597" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:06.573" endtime="20201030 11:50:06.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:06.599" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:06.598" endtime="20201030 11:50:06.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:06.602" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:50:06.600" endtime="20201030 11:50:06.602"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:06.571" endtime="20201030 11:50:06.603"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:06.568" endtime="20201030 11:50:06.604"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.567" endtime="20201030 11:50:06.604"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:50:06.608" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:50:06.607" endtime="20201030 11:50:06.608"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.605" endtime="20201030 11:50:06.608"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.566" endtime="20201030 11:50:06.608"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.566" endtime="20201030 11:50:06.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:06.609" endtime="20201030 11:50:06.611"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.564" endtime="20201030 11:50:06.611"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.563" endtime="20201030 11:50:06.612"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.539" endtime="20201030 11:50:06.612"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:06.624" endtime="20201030 11:50:06.779"></status>
</kw>
<msg timestamp="20201030 11:50:06.779" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:06.623" endtime="20201030 11:50:06.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:06.782" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:06.780" endtime="20201030 11:50:06.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:06.783" endtime="20201030 11:50:06.785"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.620" endtime="20201030 11:50:06.785"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.615" endtime="20201030 11:50:06.785"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:06.788" endtime="20201030 11:50:06.790"></status>
</kw>
<msg timestamp="20201030 11:50:06.790" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 11:50:06.786" endtime="20201030 11:50:06.790"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:06.794" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 11:50:06.793" endtime="20201030 11:50:06.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:06.796" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 11:50:06.795" endtime="20201030 11:50:06.796"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.791" endtime="20201030 11:50:06.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:06.801" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 11:50:06.800" endtime="20201030 11:50:06.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:06.803" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 11:50:06.802" endtime="20201030 11:50:06.803"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.798" endtime="20201030 11:50:06.804"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:06.810" endtime="20201030 11:50:07.102"></status>
</kw>
<msg timestamp="20201030 11:50:07.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075035667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075051653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:06.808" endtime="20201030 11:50:07.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:07.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075035667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075051653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:07.106" endtime="20201030 11:50:07.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:07.114" endtime="20201030 11:50:07.116"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.806" endtime="20201030 11:50:07.116"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.804" endtime="20201030 11:50:07.117"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:07.121" level="INFO">${RESULT} = [{'diff': 1.5985999999995615e-05}, {'diff': 1.594499999998944e-05}, {'diff': 1.6000000000002124e-05}, {'diff': 1.5986000000009493e-05}, {'diff': 1.6013999999994755e-05}, {'diff': 1.5999999999988246e-0...</msg>
<status status="PASS" starttime="20201030 11:50:07.117" endtime="20201030 11:50:07.121"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:07.126" level="INFO">${OVERHEAD} = {'diff': [1.5985999999995615e-05, 1.594499999998944e-05, 1.6000000000002124e-05, 1.5986000000009493e-05, 1.6013999999994755e-05, 1.5999999999988246e-05, 1.593099999999681e-05, 1.5944000000003844e-05, ...</msg>
<status status="PASS" starttime="20201030 11:50:07.122" endtime="20201030 11:50:07.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:07.130" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201030 11:50:07.129" endtime="20201030 11:50:07.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:07.133" level="INFO">VALUE: [1.5985999999995615e-05, 1.594499999998944e-05, 1.6000000000002124e-05, 1.5986000000009493e-05, 1.6013999999994755e-05, 1.5999999999988246e-05, 1.593099999999681e-05, 1.5944000000003844e-05, 1.5985999999995615e-05, 1.5999999999988246e-05, 1.5985999999995615e-05, 1.5972000000002984e-05, 1.5985999999995615e-05, 1.5985999999995615e-05, 1.6056000000000403e-05, 1.5971999999989106e-05, 1.594499999998944e-05, 1.6000000000002124e-05, 1.5972000000002984e-05, 1.5985999999995615e-05, 1.6000000000016e-05, 1.5985999999995615e-05, 1.5985999999995615e-05, 1.606900000000744e-05, 1.5985999999995615e-05, 1.5985999999995615e-05, 1.5973000000002457e-05, 1.5959000000009826e-05, 1.5985999999995615e-05, 1.5972000000002984e-05, 1.5999999999988246e-05, 1.5985999999995615e-05, 1.6000000000016e-05, 1.5985999999995615e-05, 1.5985999999995615e-05, 1.5985999999995615e-05, 1.5985999999995615e-05, 1.598699999999509e-05, 1.5985999999995615e-05, 1.6000000000016e-05, 1.5985999999995615e-05, 1.5985999999995615e-05, 1.6041999999993894e-05, 1.6028000000001263e-05, 1.5973000000002457e-05, 1.5985999999995615e-05, 1.6000000000016e-05, 1.5985999999995615e-05, 1.5957999999982597e-05, 1.593099999999681e-05]</msg>
<status status="PASS" starttime="20201030 11:50:07.131" endtime="20201030 11:50:07.133"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:07.127" endtime="20201030 11:50:07.134"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.613" endtime="20201030 11:50:07.134"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:50:06.536" endtime="20201030 11:50:07.135" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:07.149" endtime="20201030 11:50:07.170"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:07.146" endtime="20201030 11:50:07.171"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:07.198" endtime="20201030 11:50:07.228"></status>
</kw>
<msg timestamp="20201030 11:50:07.229" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:07.195" endtime="20201030 11:50:07.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:07.235" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:07.232" endtime="20201030 11:50:07.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:07.241" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:50:07.237" endtime="20201030 11:50:07.242"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:07.190" endtime="20201030 11:50:07.242"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:07.185" endtime="20201030 11:50:07.243"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:07.182" endtime="20201030 11:50:07.243"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:50:07.247" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:50:07.246" endtime="20201030 11:50:07.247"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:07.244" endtime="20201030 11:50:07.247"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:07.180" endtime="20201030 11:50:07.248"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:07.179" endtime="20201030 11:50:07.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:07.249" endtime="20201030 11:50:07.250"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:07.176" endtime="20201030 11:50:07.251"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:07.173" endtime="20201030 11:50:07.251"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:07.143" endtime="20201030 11:50:07.251"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 11:50:07.255" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 11:50:07.264" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 11:50:08.244" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 11:50:07.254" endtime="20201030 11:50:08.245"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 11:50:08.247" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 11:50:08.246" endtime="20201030 11:50:08.247"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:07.252" endtime="20201030 11:50:08.248"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:08.252" endtime="20201030 11:50:08.271"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:08.250" endtime="20201030 11:50:08.272"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:08.280" endtime="20201030 11:50:10.349"></status>
</kw>
<msg timestamp="20201030 11:50:10.350" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['\n', 'main(): This is RIOT! (Version: 2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; '], 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:08.279" endtime="20201030 11:50:10.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:10.356" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['\n', 'main(): This is RIOT! (Version: 2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; '], 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:10.353" endtime="20201030 11:50:10.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:10.362" level="FAIL">'Timeout' does not contain 'Success'</msg>
<status status="FAIL" starttime="20201030 11:50:10.358" endtime="20201030 11:50:10.363"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:08.276" endtime="20201030 11:50:10.364"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:08.274" endtime="20201030 11:50:10.366"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:08.272" endtime="20201030 11:50:10.367"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:08.250" endtime="20201030 11:50:10.367"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:08.249" endtime="20201030 11:50:10.368"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="FAIL" starttime="20201030 11:50:07.138" endtime="20201030 11:50:10.370" critical="yes">'Timeout' does not contain 'Success'</status>
</test>
<status status="FAIL" starttime="20201030 11:49:47.024" endtime="20201030 11:50:10.390"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 11:50:10.512" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 11:50:10.521" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 11:50:11.490" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 11:50:10.511" endtime="20201030 11:50:11.491"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 11:50:11.493" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 11:50:11.492" endtime="20201030 11:50:11.493"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:10.510" endtime="20201030 11:50:11.494"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:11.496" endtime="20201030 11:50:11.679"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:11.495" endtime="20201030 11:50:11.680"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:11.692" endtime="20201030 11:50:11.718"></status>
</kw>
<msg timestamp="20201030 11:50:11.718" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:11.690" endtime="20201030 11:50:11.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:11.721" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:11.719" endtime="20201030 11:50:11.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:11.724" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:50:11.722" endtime="20201030 11:50:11.724"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:11.688" endtime="20201030 11:50:11.725"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:11.686" endtime="20201030 11:50:11.725"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:11.684" endtime="20201030 11:50:11.725"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:50:11.729" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:50:11.728" endtime="20201030 11:50:11.730"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:11.726" endtime="20201030 11:50:11.730"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:11.684" endtime="20201030 11:50:11.730"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:11.683" endtime="20201030 11:50:11.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:11.731" endtime="20201030 11:50:11.733"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:11.682" endtime="20201030 11:50:11.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:11.734" endtime="20201030 11:50:11.736"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:11.680" endtime="20201030 11:50:11.736"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:10.508" endtime="20201030 11:50:11.736"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:11.742" endtime="20201030 11:50:11.762"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:11.741" endtime="20201030 11:50:11.762"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:11.775" endtime="20201030 11:50:11.798"></status>
</kw>
<msg timestamp="20201030 11:50:11.799" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:11.773" endtime="20201030 11:50:11.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:11.801" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:11.800" endtime="20201030 11:50:11.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:11.804" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:50:11.802" endtime="20201030 11:50:11.805"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:11.771" endtime="20201030 11:50:11.805"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:11.769" endtime="20201030 11:50:11.806"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:11.767" endtime="20201030 11:50:11.806"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:50:11.811" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:50:11.810" endtime="20201030 11:50:11.811"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:11.807" endtime="20201030 11:50:11.811"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:11.767" endtime="20201030 11:50:11.812"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:11.766" endtime="20201030 11:50:11.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:11.813" endtime="20201030 11:50:11.814"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:11.765" endtime="20201030 11:50:11.814"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:11.763" endtime="20201030 11:50:11.815"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:11.739" endtime="20201030 11:50:11.815"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:11.825" endtime="20201030 11:50:11.843"></status>
</kw>
<msg timestamp="20201030 11:50:11.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:11.824" endtime="20201030 11:50:11.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:11.846" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:11.844" endtime="20201030 11:50:11.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:11.847" endtime="20201030 11:50:11.848"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:11.821" endtime="20201030 11:50:11.849"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:11.819" endtime="20201030 11:50:11.850"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:11.856" endtime="20201030 11:50:12.161"></status>
</kw>
<msg timestamp="20201030 11:50:12.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073026708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073055625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:11.855" endtime="20201030 11:50:12.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:12.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073026708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073055625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:12.165" endtime="20201030 11:50:12.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:12.173" endtime="20201030 11:50:12.174"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:11.852" endtime="20201030 11:50:12.175"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:11.851" endtime="20201030 11:50:12.175"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:12.179" level="INFO">${RESULT} = [{'diff': 2.89170000000033e-05}, {'diff': 2.2219999999961715e-06}, {'diff': 2.26400000000182e-06}, {'diff': 2.7499999999958114e-06}, {'diff': 2.26400000000182e-06}, {'diff': 2.1939999999970317e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:50:12.176" endtime="20201030 11:50:12.180"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:12.184" level="INFO">${ACCURACY} = {'diff': [2.89170000000033e-05, 2.2219999999961715e-06, 2.26400000000182e-06, 2.7499999999958114e-06, 2.26400000000182e-06, 2.1939999999970317e-06, 2.76400000000232e-06, 2.7630000000028465e-06, 2.7780...</msg>
<status status="PASS" starttime="20201030 11:50:12.180" endtime="20201030 11:50:12.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:12.189" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201030 11:50:12.188" endtime="20201030 11:50:12.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:12.191" level="INFO">VALUE: [2.89170000000033e-05, 2.2219999999961715e-06, 2.26400000000182e-06, 2.7499999999958114e-06, 2.26400000000182e-06, 2.1939999999970317e-06, 2.76400000000232e-06, 2.7630000000028465e-06, 2.778000000008829e-06, 2.7499999999958114e-06, 2.2499999999953113e-06, 2.76400000000232e-06, 2.2499999999953113e-06, 2.7769999999954775e-06, 2.1810000000038743e-06, 3.2630000000033466e-06, 2.2499999999953113e-06, 2.278000000008329e-06, 2.7639999999884424e-06, 2.7499999999958114e-06, 2.2499999999953113e-06, 3.2499999999963114e-06, 2.26400000000182e-06, 2.26400000000182e-06, 2.277999999994451e-06, 2.278000000008329e-06, 2.26400000000182e-06, 2.2639999999879423e-06, 2.7499999999958114e-06, 2.76400000000232e-06, 2.7630000000028465e-06, 3.2769999999959776e-06, 2.76400000000232e-06, 2.76400000000232e-06, 2.2360000000026803e-06, 2.6939999999975317e-06, 2.79200000000146e-06, 2.2639999999879423e-06, 2.2629999999884687e-06, 2.26400000000182e-06, 2.76400000000232e-06, 2.76400000000232e-06, 2.76400000000232e-06, 2.76400000000232e-06, 2.2639999999879423e-06, 2.26400000000182e-06, 2.2770000000088553e-06, 2.278000000008329e-06, 2.7499999999958114e-06, 2.778000000008829e-06]</msg>
<status status="PASS" starttime="20201030 11:50:12.190" endtime="20201030 11:50:12.192"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.185" endtime="20201030 11:50:12.192"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:12.196" endtime="20201030 11:50:12.215"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.194" endtime="20201030 11:50:12.215"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.193" endtime="20201030 11:50:12.216"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:11.817" endtime="20201030 11:50:12.216"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:11.817" endtime="20201030 11:50:12.216"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:12.225" endtime="20201030 11:50:12.242"></status>
</kw>
<msg timestamp="20201030 11:50:12.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:12.223" endtime="20201030 11:50:12.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:12.245" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:12.243" endtime="20201030 11:50:12.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:12.246" endtime="20201030 11:50:12.248"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.221" endtime="20201030 11:50:12.248"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.219" endtime="20201030 11:50:12.249"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:12.255" endtime="20201030 11:50:12.539"></status>
</kw>
<msg timestamp="20201030 11:50:12.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019231153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019234403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:12.254" endtime="20201030 11:50:12.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:12.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019231153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019234403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:12.543" endtime="20201030 11:50:12.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:12.551" endtime="20201030 11:50:12.554"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.251" endtime="20201030 11:50:12.555"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.249" endtime="20201030 11:50:12.555"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:12.559" level="INFO">${RESULT} = [{'diff': 3.249999999999781e-06}, {'diff': 3.763999999999851e-06}, {'diff': 3.249999999999781e-06}, {'diff': 3.2639999999993508e-06}, {'diff': 3.750000000000281e-06}, {'diff': 3.763999999999851e-06}, ...</msg>
<status status="PASS" starttime="20201030 11:50:12.556" endtime="20201030 11:50:12.559"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:12.563" level="INFO">${ACCURACY} = {'diff': [3.249999999999781e-06, 3.763999999999851e-06, 3.249999999999781e-06, 3.2639999999993508e-06, 3.750000000000281e-06, 3.763999999999851e-06, 3.750000000000281e-06, 3.763999999999851e-06, 3.264...</msg>
<status status="PASS" starttime="20201030 11:50:12.560" endtime="20201030 11:50:12.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:12.567" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201030 11:50:12.566" endtime="20201030 11:50:12.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:12.570" level="INFO">VALUE: [3.249999999999781e-06, 3.763999999999851e-06, 3.249999999999781e-06, 3.2639999999993508e-06, 3.750000000000281e-06, 3.763999999999851e-06, 3.750000000000281e-06, 3.763999999999851e-06, 3.26400000000282e-06, 3.262999999999877e-06, 3.249999999999781e-06, 3.750000000000281e-06, 3.30600000000153e-06, 3.763999999999851e-06, 3.249999999999781e-06, 3.763999999999851e-06, 3.763999999999851e-06, 3.7499999999968114e-06, 3.2779999999989207e-06, 3.736000000000711e-06, 3.26400000000282e-06, 3.7499999999968114e-06, 3.262999999999877e-06, 3.2639999999993508e-06, 3.763999999999851e-06, 3.763999999999851e-06, 3.736000000000711e-06, 3.262999999999877e-06, 3.27800000000239e-06, 3.7779999999994207e-06, 3.763999999999851e-06, 3.222000000000641e-06, 3.262999999999877e-06, 3.763999999999851e-06, 3.27800000000239e-06, 3.7370000000001846e-06, 3.2230000000001147e-06, 3.763999999999851e-06, 3.763999999999851e-06, 4.264000000000351e-06, 3.776999999999947e-06, 3.222000000000641e-06, 3.2639999999993508e-06, 4.291000000000017e-06, 3.7919999999989906e-06, 3.7499999999968114e-06, 3.27800000000239e-06, 3.2639999999993508e-06, 3.2639999999993508e-06, 3.7779999999994207e-06]</msg>
<status status="PASS" starttime="20201030 11:50:12.569" endtime="20201030 11:50:12.570"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.564" endtime="20201030 11:50:12.571"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:12.574" endtime="20201030 11:50:12.594"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.573" endtime="20201030 11:50:12.594"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.572" endtime="20201030 11:50:12.594"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.217" endtime="20201030 11:50:12.595"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.217" endtime="20201030 11:50:12.595"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:12.604" endtime="20201030 11:50:12.622"></status>
</kw>
<msg timestamp="20201030 11:50:12.623" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:12.602" endtime="20201030 11:50:12.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:12.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:12.624" endtime="20201030 11:50:12.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:12.626" endtime="20201030 11:50:12.628"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.599" endtime="20201030 11:50:12.628"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.597" endtime="20201030 11:50:12.629"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:12.635" endtime="20201030 11:50:12.917"></status>
</kw>
<msg timestamp="20201030 11:50:12.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020781597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020785847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:12.634" endtime="20201030 11:50:12.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:12.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020781597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020785847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:12.921" endtime="20201030 11:50:12.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:12.929" endtime="20201030 11:50:12.931"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.631" endtime="20201030 11:50:12.931"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.629" endtime="20201030 11:50:12.932"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:12.935" level="INFO">${RESULT} = [{'diff': 4.250000000000781e-06}, {'diff': 4.264000000000351e-06}, {'diff': 4.764000000000851e-06}, {'diff': 4.764000000000851e-06}, {'diff': 4.276999999996978e-06}, {'diff': 4.7499999999978115e-06}, ...</msg>
<status status="PASS" starttime="20201030 11:50:12.932" endtime="20201030 11:50:12.936"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:12.940" level="INFO">${ACCURACY} = {'diff': [4.250000000000781e-06, 4.264000000000351e-06, 4.764000000000851e-06, 4.764000000000851e-06, 4.276999999996978e-06, 4.7499999999978115e-06, 4.332999999998727e-06, 4.735999999998242e-06, 4.750...</msg>
<status status="PASS" starttime="20201030 11:50:12.936" endtime="20201030 11:50:12.940"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:12.944" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201030 11:50:12.943" endtime="20201030 11:50:12.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:12.946" level="INFO">VALUE: [4.250000000000781e-06, 4.264000000000351e-06, 4.764000000000851e-06, 4.764000000000851e-06, 4.276999999996978e-06, 4.7499999999978115e-06, 4.332999999998727e-06, 4.735999999998242e-06, 4.750000000001281e-06, 4.681000000002905e-06, 4.7499999999978115e-06, 5.221999999999172e-06, 5.319000000000157e-06, 4.764000000000851e-06, 4.776999999997478e-06, 4.264000000000351e-06, 5.264000000001351e-06, 4.764000000000851e-06, 4.264000000000351e-06, 4.762999999997908e-06, 4.7639999999973814e-06, 4.264000000000351e-06, 4.764000000000851e-06, 4.735999999998242e-06, 4.207999999998602e-06, 4.750000000001281e-06, 4.764000000000851e-06, 5.262999999998408e-06, 4.7499999999978115e-06, 4.263999999996881e-06, 4.709000000002045e-06, 4.750000000001281e-06, 4.763000000001377e-06, 4.277999999999921e-06, 4.680999999999436e-06, 4.2499999999973115e-06, 4.277999999999921e-06, 4.736000000001711e-06, 4.764000000000851e-06, 4.750000000001281e-06, 4.7499999999978115e-06, 5.264000000001351e-06, 4.722000000002141e-06, 5.290999999997548e-06, 4.264000000000351e-06, 4.250000000000781e-06, 4.264000000000351e-06, 4.236000000001211e-06, 5.2639999999978815e-06, 4.764000000000851e-06]</msg>
<status status="PASS" starttime="20201030 11:50:12.945" endtime="20201030 11:50:12.947"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.940" endtime="20201030 11:50:12.948"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:12.952" endtime="20201030 11:50:12.971"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.950" endtime="20201030 11:50:12.972"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.949" endtime="20201030 11:50:12.972"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.596" endtime="20201030 11:50:12.972"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.595" endtime="20201030 11:50:12.972"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:12.981" endtime="20201030 11:50:12.999"></status>
</kw>
<msg timestamp="20201030 11:50:12.999" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:12.980" endtime="20201030 11:50:12.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:13.002" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:13.000" endtime="20201030 11:50:13.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:13.003" endtime="20201030 11:50:13.004"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.977" endtime="20201030 11:50:13.005"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.975" endtime="20201030 11:50:13.005"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:13.012" endtime="20201030 11:50:13.298"></status>
</kw>
<msg timestamp="20201030 11:50:13.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019652569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019658333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:13.010" endtime="20201030 11:50:13.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:13.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019652569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019658333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:13.302" endtime="20201030 11:50:13.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:13.310" endtime="20201030 11:50:13.312"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.007" endtime="20201030 11:50:13.312"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.006" endtime="20201030 11:50:13.313"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:13.316" level="INFO">${RESULT} = [{'diff': 5.7639999999983815e-06}, {'diff': 5.776999999998478e-06}, {'diff': 5.7779999999979514e-06}, {'diff': 5.721999999999672e-06}, {'diff': 5.290999999997548e-06}, {'diff': 5.694000000000532e-06},...</msg>
<status status="PASS" starttime="20201030 11:50:13.313" endtime="20201030 11:50:13.317"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:13.321" level="INFO">${ACCURACY} = {'diff': [5.7639999999983815e-06, 5.776999999998478e-06, 5.7779999999979514e-06, 5.721999999999672e-06, 5.290999999997548e-06, 5.694000000000532e-06, 5.764000000001851e-06, 5.7639999999983815e-06, 5.7...</msg>
<status status="PASS" starttime="20201030 11:50:13.317" endtime="20201030 11:50:13.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:13.326" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201030 11:50:13.325" endtime="20201030 11:50:13.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:13.328" level="INFO">VALUE: [5.7639999999983815e-06, 5.776999999998478e-06, 5.7779999999979514e-06, 5.721999999999672e-06, 5.290999999997548e-06, 5.694000000000532e-06, 5.764000000001851e-06, 5.7639999999983815e-06, 5.792000000000991e-06, 5.764000000001851e-06, 5.7639999999983815e-06, 5.2499999999983116e-06, 5.749999999998812e-06, 5.235999999998742e-06, 5.292000000000491e-06, 5.764000000001851e-06, 5.2499999999983116e-06, 5.749999999998812e-06, 5.749999999998812e-06, 5.749999999998812e-06, 5.2499999999983116e-06, 5.750000000002281e-06, 5.292000000000491e-06, 5.264000000001351e-06, 5.277999999997451e-06, 5.264000000001351e-06, 5.207999999999602e-06, 5.264000000001351e-06, 5.250000000001781e-06, 5.264000000001351e-06, 5.277000000001447e-06, 5.2639999999978815e-06, 5.749999999998812e-06, 5.7779999999979514e-06, 5.819000000000657e-06, 5.2639999999978815e-06, 5.250000000001781e-06, 6.2639999999988816e-06, 5.764000000001851e-06, 5.776999999998478e-06, 5.235999999998742e-06, 5.2639999999978815e-06, 5.292000000000491e-06, 5.264000000001351e-06, 5.749999999998812e-06, 5.250000000001781e-06, 5.264000000001351e-06, 5.762999999998908e-06, 5.2499999999983116e-06, 5.2639999999978815e-06]</msg>
<status status="PASS" starttime="20201030 11:50:13.327" endtime="20201030 11:50:13.329"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.322" endtime="20201030 11:50:13.329"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:13.333" endtime="20201030 11:50:13.352"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.331" endtime="20201030 11:50:13.353"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.330" endtime="20201030 11:50:13.353"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.973" endtime="20201030 11:50:13.354"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.973" endtime="20201030 11:50:13.354"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:13.362" endtime="20201030 11:50:13.379"></status>
</kw>
<msg timestamp="20201030 11:50:13.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:13.361" endtime="20201030 11:50:13.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:13.382" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:13.380" endtime="20201030 11:50:13.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:13.383" endtime="20201030 11:50:13.384"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.358" endtime="20201030 11:50:13.385"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.356" endtime="20201030 11:50:13.385"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:13.392" endtime="20201030 11:50:13.680"></status>
</kw>
<msg timestamp="20201030 11:50:13.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019194278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019200556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:13.390" endtime="20201030 11:50:13.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:13.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019194278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019200556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:13.684" endtime="20201030 11:50:13.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:13.693" endtime="20201030 11:50:13.694"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.388" endtime="20201030 11:50:13.695"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.386" endtime="20201030 11:50:13.695"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:13.699" level="INFO">${RESULT} = [{'diff': 6.278000000001921e-06}, {'diff': 6.764000000002851e-06}, {'diff': 6.763999999999382e-06}, {'diff': 6.249999999999312e-06}, {'diff': 6.763999999999382e-06}, {'diff': 6.2639999999988816e-06}, ...</msg>
<status status="PASS" starttime="20201030 11:50:13.696" endtime="20201030 11:50:13.700"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:13.704" level="INFO">${ACCURACY} = {'diff': [6.278000000001921e-06, 6.764000000002851e-06, 6.763999999999382e-06, 6.249999999999312e-06, 6.763999999999382e-06, 6.2639999999988816e-06, 7.263999999999882e-06, 6.763999999999382e-06, 6.763...</msg>
<status status="PASS" starttime="20201030 11:50:13.701" endtime="20201030 11:50:13.704"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:13.708" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201030 11:50:13.707" endtime="20201030 11:50:13.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:13.711" level="INFO">VALUE: [6.278000000001921e-06, 6.764000000002851e-06, 6.763999999999382e-06, 6.249999999999312e-06, 6.763999999999382e-06, 6.2639999999988816e-06, 7.263999999999882e-06, 6.763999999999382e-06, 6.763999999999382e-06, 6.2639999999988816e-06, 6.292000000001491e-06, 6.763999999999382e-06, 6.749999999999812e-06, 6.764000000002851e-06, 6.208000000000602e-06, 6.249999999999312e-06, 6.7779999999989515e-06, 6.262999999999408e-06, 6.264000000002351e-06, 6.2779999999984515e-06, 6.2639999999988816e-06, 6.763999999999382e-06, 6.762999999999908e-06, 6.2639999999988816e-06, 6.750000000003281e-06, 6.2639999999988816e-06, 6.778000000002421e-06, 6.7779999999989515e-06, 6.818999999998188e-06, 6.2639999999988816e-06, 6.7779999999989515e-06, 6.306000000001061e-06, 6.749999999999812e-06, 6.764000000002851e-06, 6.249999999999312e-06, 6.2779999999984515e-06, 6.806000000001561e-06, 6.249999999999312e-06, 6.290999999998548e-06, 6.278000000001921e-06, 6.250000000002781e-06, 6.763999999999382e-06, 6.2779999999984515e-06, 6.262999999999408e-06, 6.278000000001921e-06, 6.250000000002781e-06, 6.708000000001102e-06, 6.805999999998091e-06, 6.333000000000727e-06, 6.277000000002447e-06]</msg>
<status status="PASS" starttime="20201030 11:50:13.710" endtime="20201030 11:50:13.712"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.705" endtime="20201030 11:50:13.712"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:13.716" endtime="20201030 11:50:13.736"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.715" endtime="20201030 11:50:13.736"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.713" endtime="20201030 11:50:13.736"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.355" endtime="20201030 11:50:13.737"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.354" endtime="20201030 11:50:13.737"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:13.746" endtime="20201030 11:50:13.764"></status>
</kw>
<msg timestamp="20201030 11:50:13.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:13.744" endtime="20201030 11:50:13.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:13.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:13.766" endtime="20201030 11:50:13.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:13.768" endtime="20201030 11:50:13.770"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.742" endtime="20201030 11:50:13.771"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.739" endtime="20201030 11:50:13.771"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:13.778" endtime="20201030 11:50:14.064"></status>
</kw>
<msg timestamp="20201030 11:50:14.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020694986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020702778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:13.776" endtime="20201030 11:50:14.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:14.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020694986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020702778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:14.068" endtime="20201030 11:50:14.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:14.076" endtime="20201030 11:50:14.079"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.774" endtime="20201030 11:50:14.081"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.772" endtime="20201030 11:50:14.081"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:14.085" level="INFO">${RESULT} = [{'diff': 7.792000000002991e-06}, {'diff': 8.221999999998703e-06}, {'diff': 7.263999999999882e-06}, {'diff': 7.222000000001172e-06}, {'diff': 7.2779999999994516e-06}, {'diff': 7.263999999999882e-06}, ...</msg>
<status status="PASS" starttime="20201030 11:50:14.082" endtime="20201030 11:50:14.086"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:14.090" level="INFO">${ACCURACY} = {'diff': [7.792000000002991e-06, 8.221999999998703e-06, 7.263999999999882e-06, 7.222000000001172e-06, 7.2779999999994516e-06, 7.263999999999882e-06, 7.263999999999882e-06, 7.263999999999882e-06, 7.292...</msg>
<status status="PASS" starttime="20201030 11:50:14.086" endtime="20201030 11:50:14.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:14.094" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201030 11:50:14.093" endtime="20201030 11:50:14.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:14.097" level="INFO">VALUE: [7.792000000002991e-06, 8.221999999998703e-06, 7.263999999999882e-06, 7.222000000001172e-06, 7.2779999999994516e-06, 7.263999999999882e-06, 7.263999999999882e-06, 7.263999999999882e-06, 7.292000000002491e-06, 7.777999999999952e-06, 7.764000000000382e-06, 7.764000000000382e-06, 7.722000000001672e-06, 7.763000000000908e-06, 8.250000000001312e-06, 7.263999999999882e-06, 7.750000000000812e-06, 7.764000000000382e-06, 7.250000000000312e-06, 7.263999999999882e-06, 7.764000000000382e-06, 7.263999999999882e-06, 7.764000000000382e-06, 7.263999999999882e-06, 7.750000000000812e-06, 7.777999999999952e-06, 7.276999999999978e-06, 7.764000000000382e-06, 7.750000000000812e-06, 7.764000000000382e-06, 7.764000000000382e-06, 7.777999999999952e-06, 7.737000000000716e-06, 7.736000000001242e-06, 7.764000000000382e-06, 7.777999999999952e-06, 8.264000000000882e-06, 7.680999999998966e-06, 7.750000000000812e-06, 7.347000000001297e-06, 7.292000000002491e-06, 7.193999999998563e-06, 7.763000000000908e-06, 7.708000000002102e-06, 7.263999999999882e-06, 7.263999999999882e-06, 7.777999999999952e-06, 7.250000000000312e-06, 7.2079999999981326e-06, 7.764000000000382e-06]</msg>
<status status="PASS" starttime="20201030 11:50:14.095" endtime="20201030 11:50:14.099"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.091" endtime="20201030 11:50:14.100"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:14.104" endtime="20201030 11:50:14.125"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.102" endtime="20201030 11:50:14.127"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.101" endtime="20201030 11:50:14.128"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.738" endtime="20201030 11:50:14.129"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.737" endtime="20201030 11:50:14.129"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:14.151" endtime="20201030 11:50:14.174"></status>
</kw>
<msg timestamp="20201030 11:50:14.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:14.147" endtime="20201030 11:50:14.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:14.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:14.177" endtime="20201030 11:50:14.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:14.183" endtime="20201030 11:50:14.186"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.141" endtime="20201030 11:50:14.188"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.135" endtime="20201030 11:50:14.189"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:14.203" endtime="20201030 11:50:14.491"></status>
</kw>
<msg timestamp="20201030 11:50:14.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03899775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039006528, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:14.200" endtime="20201030 11:50:14.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:14.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03899775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039006528, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:14.495" endtime="20201030 11:50:14.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:14.504" endtime="20201030 11:50:14.506"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.194" endtime="20201030 11:50:14.506"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.190" endtime="20201030 11:50:14.507"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:14.511" level="INFO">${RESULT} = [{'diff': 8.778000000000952e-06}, {'diff': 8.264000000000882e-06}, {'diff': 8.236000000001742e-06}, {'diff': 8.264000000000882e-06}, {'diff': 9.264000000001882e-06}, {'diff': 8.278000000000452e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:50:14.507" endtime="20201030 11:50:14.511"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:14.516" level="INFO">${ACCURACY} = {'diff': [8.778000000000952e-06, 8.264000000000882e-06, 8.236000000001742e-06, 8.264000000000882e-06, 9.264000000001882e-06, 8.278000000000452e-06, 8.764000000001382e-06, 8.792000000000522e-06, 8.7640...</msg>
<status status="PASS" starttime="20201030 11:50:14.512" endtime="20201030 11:50:14.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:14.520" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201030 11:50:14.519" endtime="20201030 11:50:14.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:14.523" level="INFO">VALUE: [8.778000000000952e-06, 8.264000000000882e-06, 8.236000000001742e-06, 8.264000000000882e-06, 9.264000000001882e-06, 8.278000000000452e-06, 8.764000000001382e-06, 8.792000000000522e-06, 8.764000000001382e-06, 8.264000000000882e-06, 8.778000000000952e-06, 8.264000000000882e-06, 8.764000000001382e-06, 8.264000000000882e-06, 8.693999999996593e-06, 8.264000000000882e-06, 8.263000000001408e-06, 8.763999999994443e-06, 8.792000000000522e-06, 8.764000000001382e-06, 8.750000000001812e-06, 8.250000000001312e-06, 8.222000000002172e-06, 8.250000000001312e-06, 8.264000000000882e-06, 8.236000000001742e-06, 9.249999999995373e-06, 8.763999999994443e-06, 8.264000000000882e-06, 8.250000000001312e-06, 8.764000000001382e-06, 8.249999999994373e-06, 8.750000000001812e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.277000000000978e-06, 8.278000000000452e-06, 8.278000000000452e-06, 8.778000000000952e-06, 8.763999999994443e-06, 8.764000000001382e-06, 9.278000000001452e-06, 8.763000000001908e-06, 8.264000000000882e-06, 8.763999999994443e-06, 8.264000000000882e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.722000000002672e-06, 8.764000000001382e-06]</msg>
<status status="PASS" starttime="20201030 11:50:14.522" endtime="20201030 11:50:14.524"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.517" endtime="20201030 11:50:14.524"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:14.528" endtime="20201030 11:50:14.548"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.526" endtime="20201030 11:50:14.548"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.525" endtime="20201030 11:50:14.549"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.131" endtime="20201030 11:50:14.549"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.130" endtime="20201030 11:50:14.549"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:14.558" endtime="20201030 11:50:14.576"></status>
</kw>
<msg timestamp="20201030 11:50:14.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:14.556" endtime="20201030 11:50:14.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:14.579" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:14.578" endtime="20201030 11:50:14.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:14.580" endtime="20201030 11:50:14.582"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.554" endtime="20201030 11:50:14.582"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.551" endtime="20201030 11:50:14.583"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:14.590" endtime="20201030 11:50:14.875"></status>
</kw>
<msg timestamp="20201030 11:50:14.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019979556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019988819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:14.588" endtime="20201030 11:50:14.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:14.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019979556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019988819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:14.879" endtime="20201030 11:50:14.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:14.887" endtime="20201030 11:50:14.889"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.585" endtime="20201030 11:50:14.890"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.584" endtime="20201030 11:50:14.890"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:14.894" level="INFO">${RESULT} = [{'diff': 9.263000000002408e-06}, {'diff': 9.264000000001882e-06}, {'diff': 9.778000000001952e-06}, {'diff': 9.762999999999439e-06}, {'diff': 1.0263999999999412e-05}, {'diff': 9.735999999999773e-06}, ...</msg>
<status status="PASS" starttime="20201030 11:50:14.891" endtime="20201030 11:50:14.894"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:14.898" level="INFO">${ACCURACY} = {'diff': [9.263000000002408e-06, 9.264000000001882e-06, 9.778000000001952e-06, 9.762999999999439e-06, 1.0263999999999412e-05, 9.735999999999773e-06, 9.708000000000633e-06, 9.277999999997982e-06, 9.750...</msg>
<status status="PASS" starttime="20201030 11:50:14.895" endtime="20201030 11:50:14.899"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:14.903" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201030 11:50:14.902" endtime="20201030 11:50:14.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:14.906" level="INFO">VALUE: [9.263000000002408e-06, 9.264000000001882e-06, 9.778000000001952e-06, 9.762999999999439e-06, 1.0263999999999412e-05, 9.735999999999773e-06, 9.708000000000633e-06, 9.277999999997982e-06, 9.750000000002812e-06, 9.764000000002382e-06, 9.819000000001188e-06, 9.749999999999343e-06, 9.778000000001952e-06, 9.749999999999343e-06, 9.763999999998912e-06, 9.278000000001452e-06, 9.250000000002312e-06, 9.764000000002382e-06, 9.763999999998912e-06, 9.778000000001952e-06, 9.778000000001952e-06, 1.0195000000001037e-05, 9.305000000001118e-06, 1.0249999999999843e-05, 9.777999999998482e-06, 9.263999999998412e-06, 9.249999999998842e-06, 9.763999999998912e-06, 9.263999999998412e-06, 9.749999999999343e-06, 9.250000000002312e-06, 9.292000000001022e-06, 9.764000000002382e-06, 9.750000000002812e-06, 9.278000000001452e-06, 9.264000000001882e-06, 9.263999999998412e-06, 9.263999999998412e-06, 9.778000000001952e-06, 9.764000000002382e-06, 9.277999999997982e-06, 9.805000000001618e-06, 9.776999999999009e-06, 9.764000000002382e-06, 9.763999999998912e-06, 9.778000000001952e-06, 1.0290999999999079e-05, 9.749999999999343e-06, 9.763999999998912e-06, 9.778000000001952e-06]</msg>
<status status="PASS" starttime="20201030 11:50:14.904" endtime="20201030 11:50:14.906"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.899" endtime="20201030 11:50:14.907"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:14.911" endtime="20201030 11:50:14.930"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.909" endtime="20201030 11:50:14.931"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.908" endtime="20201030 11:50:14.931"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.550" endtime="20201030 11:50:14.931"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.549" endtime="20201030 11:50:14.931"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:14.940" endtime="20201030 11:50:14.959"></status>
</kw>
<msg timestamp="20201030 11:50:14.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:14.939" endtime="20201030 11:50:14.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:14.962" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:14.960" endtime="20201030 11:50:14.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:14.963" endtime="20201030 11:50:14.965"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.936" endtime="20201030 11:50:14.965"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.934" endtime="20201030 11:50:14.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:14.972" endtime="20201030 11:50:15.257"></status>
</kw>
<msg timestamp="20201030 11:50:15.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02077375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020784042, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:14.971" endtime="20201030 11:50:15.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:15.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02077375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020784042, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:15.262" endtime="20201030 11:50:15.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:15.270" endtime="20201030 11:50:15.272"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.968" endtime="20201030 11:50:15.272"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.966" endtime="20201030 11:50:15.273"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:15.277" level="INFO">${RESULT} = [{'diff': 1.0291999999998552e-05}, {'diff': 1.0763999999999913e-05}, {'diff': 1.0763999999999913e-05}, {'diff': 1.0750000000000343e-05}, {'diff': 1.0778000000002952e-05}, {'diff': 1.0278000000002452e-...</msg>
<status status="PASS" starttime="20201030 11:50:15.274" endtime="20201030 11:50:15.277"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:15.281" level="INFO">${ACCURACY} = {'diff': [1.0291999999998552e-05, 1.0763999999999913e-05, 1.0763999999999913e-05, 1.0750000000000343e-05, 1.0778000000002952e-05, 1.0278000000002452e-05, 1.0264000000002882e-05, 1.0277999999998982e-05...</msg>
<status status="PASS" starttime="20201030 11:50:15.278" endtime="20201030 11:50:15.281"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:15.286" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201030 11:50:15.285" endtime="20201030 11:50:15.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:15.289" level="INFO">VALUE: [1.0291999999998552e-05, 1.0763999999999913e-05, 1.0763999999999913e-05, 1.0750000000000343e-05, 1.0778000000002952e-05, 1.0278000000002452e-05, 1.0264000000002882e-05, 1.0277999999998982e-05, 1.0777000000000009e-05, 1.0264000000002882e-05, 1.0264000000002882e-05, 1.0750000000000343e-05, 1.0763999999999913e-05, 1.0263999999999412e-05, 1.0763999999999913e-05, 1.0277999999998982e-05, 1.0763999999999913e-05, 1.0777999999999482e-05, 1.0195000000001037e-05, 1.0277999999998982e-05, 1.0763999999999913e-05, 1.0278000000002452e-05, 1.0277000000002978e-05, 1.1277999999999982e-05, 1.0763999999999913e-05, 1.0249999999999843e-05, 1.0750000000000343e-05, 1.0805999999998622e-05, 1.0277999999998982e-05, 1.0291999999998552e-05, 1.0249999999999843e-05, 1.0249999999999843e-05, 1.0750000000000343e-05, 1.0263999999999412e-05, 1.0805000000002618e-05, 1.0277999999998982e-05, 1.0249999999999843e-05, 1.0207999999997663e-05, 1.0791999999999052e-05, 1.0236000000000273e-05, 1.0722000000001203e-05, 1.0777999999999482e-05, 1.0263999999999412e-05, 1.1291999999999552e-05, 1.0777999999999482e-05, 1.0736000000000773e-05, 1.0763999999999913e-05, 1.0777999999999482e-05, 1.0763000000000439e-05, 1.0722000000001203e-05]</msg>
<status status="PASS" starttime="20201030 11:50:15.287" endtime="20201030 11:50:15.290"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.282" endtime="20201030 11:50:15.291"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:15.295" endtime="20201030 11:50:15.314"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.293" endtime="20201030 11:50:15.314"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.292" endtime="20201030 11:50:15.315"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.932" endtime="20201030 11:50:15.315"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.932" endtime="20201030 11:50:15.315"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:15.324" endtime="20201030 11:50:15.342"></status>
</kw>
<msg timestamp="20201030 11:50:15.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:15.323" endtime="20201030 11:50:15.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:15.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:15.343" endtime="20201030 11:50:15.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:15.346" endtime="20201030 11:50:15.347"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.320" endtime="20201030 11:50:15.348"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.318" endtime="20201030 11:50:15.348"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:15.355" endtime="20201030 11:50:15.641"></status>
</kw>
<msg timestamp="20201030 11:50:15.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020009167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020021361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:15.353" endtime="20201030 11:50:15.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:15.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020009167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020021361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:15.645" endtime="20201030 11:50:15.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:15.654" endtime="20201030 11:50:15.656"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.351" endtime="20201030 11:50:15.656"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.349" endtime="20201030 11:50:15.657"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:15.661" level="INFO">${RESULT} = [{'diff': 1.2194000000000094e-05}, {'diff': 1.1805000000000149e-05}, {'diff': 1.1236000000001273e-05}, {'diff': 1.1277999999999982e-05}, {'diff': 1.1764000000000913e-05}, {'diff': 1.1306000000002592e-...</msg>
<status status="PASS" starttime="20201030 11:50:15.657" endtime="20201030 11:50:15.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:15.666" level="INFO">${ACCURACY} = {'diff': [1.2194000000000094e-05, 1.1805000000000149e-05, 1.1236000000001273e-05, 1.1277999999999982e-05, 1.1764000000000913e-05, 1.1306000000002592e-05, 1.1764000000000913e-05, 1.1778000000000483e-05...</msg>
<status status="PASS" starttime="20201030 11:50:15.662" endtime="20201030 11:50:15.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:15.671" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201030 11:50:15.670" endtime="20201030 11:50:15.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:15.673" level="INFO">VALUE: [1.2194000000000094e-05, 1.1805000000000149e-05, 1.1236000000001273e-05, 1.1277999999999982e-05, 1.1764000000000913e-05, 1.1306000000002592e-05, 1.1764000000000913e-05, 1.1778000000000483e-05, 1.1264000000000413e-05, 1.1764000000000913e-05, 1.1680999999999497e-05, 1.1264000000000413e-05, 1.1236000000001273e-05, 1.1332999999998788e-05, 1.1805000000000149e-05, 1.1763999999997443e-05, 1.1249999999997373e-05, 1.1791000000000579e-05, 1.1236000000001273e-05, 1.1707999999999164e-05, 1.1764000000000913e-05, 1.1832999999999289e-05, 1.1764000000000913e-05, 1.1264000000000413e-05, 1.1250000000000843e-05, 1.1236000000001273e-05, 1.1264000000000413e-05, 1.1805000000000149e-05, 1.1750000000001343e-05, 1.1777000000001009e-05, 1.1750000000001343e-05, 1.127699999999704e-05, 1.1277999999999982e-05, 1.2223000000002177e-05, 1.1777999999997013e-05, 1.1778000000000483e-05, 1.1250000000000843e-05, 1.1264000000000413e-05, 1.1736000000001773e-05, 1.1777000000001009e-05, 1.1291000000000079e-05, 1.2250000000001843e-05, 1.1263999999996943e-05, 1.1707999999999164e-05, 1.1264000000000413e-05, 1.2264000000001413e-05, 1.1264000000000413e-05, 1.226299999999847e-05, 1.1777999999997013e-05, 1.1264000000000413e-05]</msg>
<status status="PASS" starttime="20201030 11:50:15.672" endtime="20201030 11:50:15.674"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.667" endtime="20201030 11:50:15.675"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:15.678" endtime="20201030 11:50:15.698"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.677" endtime="20201030 11:50:15.698"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.676" endtime="20201030 11:50:15.699"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.316" endtime="20201030 11:50:15.699"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.316" endtime="20201030 11:50:15.699"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:15.708" endtime="20201030 11:50:15.725"></status>
</kw>
<msg timestamp="20201030 11:50:15.725" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:15.706" endtime="20201030 11:50:15.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:15.728" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:15.726" endtime="20201030 11:50:15.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:15.729" endtime="20201030 11:50:15.731"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.704" endtime="20201030 11:50:15.731"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.702" endtime="20201030 11:50:15.731"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:15.738" endtime="20201030 11:50:16.025"></status>
</kw>
<msg timestamp="20201030 11:50:16.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019937681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019950417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:15.737" endtime="20201030 11:50:16.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:16.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019937681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019950417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:16.029" endtime="20201030 11:50:16.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:16.038" endtime="20201030 11:50:16.039"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.734" endtime="20201030 11:50:16.040"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.732" endtime="20201030 11:50:16.040"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:16.044" level="INFO">${RESULT} = [{'diff': 1.2736000000002773e-05}, {'diff': 1.2263999999997943e-05}, {'diff': 1.2846999999999859e-05}, {'diff': 1.2277999999997513e-05}, {'diff': 1.2749999999998873e-05}, {'diff': 1.2263999999997943e-...</msg>
<status status="PASS" starttime="20201030 11:50:16.041" endtime="20201030 11:50:16.045"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:16.049" level="INFO">${ACCURACY} = {'diff': [1.2736000000002773e-05, 1.2263999999997943e-05, 1.2846999999999859e-05, 1.2277999999997513e-05, 1.2749999999998873e-05, 1.2263999999997943e-05, 1.2278000000000983e-05, 1.2277000000001509e-05...</msg>
<status status="PASS" starttime="20201030 11:50:16.045" endtime="20201030 11:50:16.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:16.053" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201030 11:50:16.052" endtime="20201030 11:50:16.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:16.056" level="INFO">VALUE: [1.2736000000002773e-05, 1.2263999999997943e-05, 1.2846999999999859e-05, 1.2277999999997513e-05, 1.2749999999998873e-05, 1.2263999999997943e-05, 1.2278000000000983e-05, 1.2277000000001509e-05, 1.2264000000001413e-05, 1.2249999999998373e-05, 1.2263999999997943e-05, 1.2708999999999637e-05, 1.2750000000002343e-05, 1.2264000000001413e-05, 1.2764000000001913e-05, 1.2777999999998013e-05, 1.2764000000001913e-05, 1.2764000000001913e-05, 1.2278000000000983e-05, 1.2763999999998443e-05, 1.2735999999999303e-05, 1.2264000000001413e-05, 1.2250000000001843e-05, 1.2194999999999567e-05, 1.2264000000001413e-05, 1.2264000000001413e-05, 1.2264000000001413e-05, 1.2249999999998373e-05, 1.2763000000002439e-05, 1.3264000000002413e-05, 1.2777999999998013e-05, 1.2249999999998373e-05, 1.2764000000001913e-05, 1.2250000000001843e-05, 1.2778000000001483e-05, 1.3249999999999373e-05, 1.2264000000001413e-05, 1.2749999999998873e-05, 1.2750000000002343e-05, 1.2221999999999233e-05, 1.2778000000001483e-05, 1.2221999999999233e-05, 1.2263999999997943e-05, 1.2277999999997513e-05, 1.2249999999998373e-05, 1.2222999999998707e-05, 1.2778000000001483e-05, 1.2778000000001483e-05, 1.2277999999997513e-05, 1.2736000000002773e-05]</msg>
<status status="PASS" starttime="20201030 11:50:16.054" endtime="20201030 11:50:16.057"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.050" endtime="20201030 11:50:16.057"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:16.061" endtime="20201030 11:50:16.080"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.059" endtime="20201030 11:50:16.081"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.058" endtime="20201030 11:50:16.081"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.700" endtime="20201030 11:50:16.082"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.700" endtime="20201030 11:50:16.082"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:16.091" endtime="20201030 11:50:16.108"></status>
</kw>
<msg timestamp="20201030 11:50:16.108" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:16.089" endtime="20201030 11:50:16.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:16.111" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:16.109" endtime="20201030 11:50:16.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:16.112" endtime="20201030 11:50:16.113"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.086" endtime="20201030 11:50:16.114"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.084" endtime="20201030 11:50:16.114"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:16.121" endtime="20201030 11:50:16.407"></status>
</kw>
<msg timestamp="20201030 11:50:16.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020872833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020886097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:16.120" endtime="20201030 11:50:16.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:16.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020872833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020886097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:16.411" endtime="20201030 11:50:16.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:16.419" endtime="20201030 11:50:16.421"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.117" endtime="20201030 11:50:16.422"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.115" endtime="20201030 11:50:16.422"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:16.426" level="INFO">${RESULT} = [{'diff': 1.3263999999998943e-05}, {'diff': 1.3763999999999443e-05}, {'diff': 1.3249999999999373e-05}, {'diff': 1.3764000000002913e-05}, {'diff': 1.376299999999997e-05}, {'diff': 1.3263999999998943e-0...</msg>
<status status="PASS" starttime="20201030 11:50:16.423" endtime="20201030 11:50:16.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:16.430" level="INFO">${ACCURACY} = {'diff': [1.3263999999998943e-05, 1.3763999999999443e-05, 1.3249999999999373e-05, 1.3764000000002913e-05, 1.376299999999997e-05, 1.3263999999998943e-05, 1.3778000000002483e-05, 1.3777999999999013e-05,...</msg>
<status status="PASS" starttime="20201030 11:50:16.427" endtime="20201030 11:50:16.431"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:16.435" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201030 11:50:16.434" endtime="20201030 11:50:16.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:16.438" level="INFO">VALUE: [1.3263999999998943e-05, 1.3763999999999443e-05, 1.3249999999999373e-05, 1.3764000000002913e-05, 1.376299999999997e-05, 1.3263999999998943e-05, 1.3778000000002483e-05, 1.3777999999999013e-05, 1.3763999999999443e-05, 1.3749999999999873e-05, 1.3264000000002413e-05, 1.3764000000002913e-05, 1.376299999999997e-05, 1.3778000000002483e-05, 1.3736000000000304e-05, 1.3263999999998943e-05, 1.380499999999868e-05, 1.3806000000001623e-05, 1.3264000000002413e-05, 1.3278000000001983e-05, 1.3222000000000234e-05, 1.3777999999999013e-05, 1.3306000000001122e-05, 1.3763999999999443e-05, 1.3763999999999443e-05, 1.3679999999998554e-05, 1.3263999999998943e-05, 1.3763999999999443e-05, 1.3749999999999873e-05, 1.3263999999998943e-05, 1.3763999999999443e-05, 1.4263999999999943e-05, 1.3277999999998513e-05, 1.3249999999999373e-05, 1.3736000000000304e-05, 1.3763999999999443e-05, 1.3749999999999873e-05, 1.3791999999998583e-05, 1.3194000000001094e-05, 1.4263999999999943e-05, 1.3708000000001164e-05, 1.3763999999999443e-05, 1.3763999999999443e-05, 1.3777999999999013e-05, 1.3763999999999443e-05, 1.3736999999999777e-05, 1.3263999999998943e-05, 1.3235999999999803e-05, 1.3292000000001553e-05, 1.3278000000001983e-05]</msg>
<status status="PASS" starttime="20201030 11:50:16.436" endtime="20201030 11:50:16.439"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.431" endtime="20201030 11:50:16.440"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:16.444" endtime="20201030 11:50:16.463"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.442" endtime="20201030 11:50:16.464"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.441" endtime="20201030 11:50:16.464"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.083" endtime="20201030 11:50:16.464"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.082" endtime="20201030 11:50:16.464"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:16.473" endtime="20201030 11:50:16.491"></status>
</kw>
<msg timestamp="20201030 11:50:16.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:16.472" endtime="20201030 11:50:16.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:16.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:16.492" endtime="20201030 11:50:16.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:16.495" endtime="20201030 11:50:16.497"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.469" endtime="20201030 11:50:16.497"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.467" endtime="20201030 11:50:16.498"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:16.505" endtime="20201030 11:50:16.791"></status>
</kw>
<msg timestamp="20201030 11:50:16.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019923764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019938444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:16.503" endtime="20201030 11:50:16.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:16.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019923764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019938444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:16.795" endtime="20201030 11:50:16.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:16.804" endtime="20201030 11:50:16.805"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.501" endtime="20201030 11:50:16.806"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.499" endtime="20201030 11:50:16.806"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:16.810" level="INFO">${RESULT} = [{'diff': 1.4679999999999555e-05}, {'diff': 1.4250000000000373e-05}, {'diff': 1.4764000000000443e-05}, {'diff': 1.4263999999999943e-05}, {'diff': 1.4277999999999513e-05}, {'diff': 1.4263999999999943e-...</msg>
<status status="PASS" starttime="20201030 11:50:16.807" endtime="20201030 11:50:16.811"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:16.816" level="INFO">${ACCURACY} = {'diff': [1.4679999999999555e-05, 1.4250000000000373e-05, 1.4764000000000443e-05, 1.4263999999999943e-05, 1.4277999999999513e-05, 1.4263999999999943e-05, 1.4263999999999943e-05, 1.4263999999999943e-05...</msg>
<status status="PASS" starttime="20201030 11:50:16.811" endtime="20201030 11:50:16.816"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:16.820" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201030 11:50:16.819" endtime="20201030 11:50:16.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:16.823" level="INFO">VALUE: [1.4679999999999555e-05, 1.4250000000000373e-05, 1.4764000000000443e-05, 1.4263999999999943e-05, 1.4277999999999513e-05, 1.4263999999999943e-05, 1.4263999999999943e-05, 1.4263999999999943e-05, 1.4277999999999513e-05, 1.4750000000000874e-05, 1.4735999999997834e-05, 1.481899999999925e-05, 1.4207999999998194e-05, 1.429099999999961e-05, 1.4263999999999943e-05, 1.483299999999882e-05, 1.4778000000000013e-05, 1.4750000000000874e-05, 1.5250000000001374e-05, 1.5264000000000943e-05, 1.429099999999961e-05, 1.4764000000000443e-05, 1.4278000000002983e-05, 1.4778000000000013e-05, 1.4764000000000443e-05, 1.4250000000000373e-05, 1.4722000000001734e-05, 1.4749999999997404e-05, 1.5250000000001374e-05, 1.4764000000000443e-05, 1.4778000000000013e-05, 1.4263999999999943e-05, 1.4750000000000874e-05, 1.4749999999997404e-05, 1.5264000000000943e-05, 1.427700000000004e-05, 1.4749999999997404e-05, 1.4277999999999513e-05, 1.4263999999999943e-05, 1.4763999999996974e-05, 1.427699999999657e-05, 1.4250000000000373e-05, 1.4750000000000874e-05, 1.426300000000047e-05, 1.4763999999996974e-05, 1.4778000000000013e-05, 1.4250000000000373e-05, 1.4764000000000443e-05, 1.4263999999999943e-05, 1.5292000000000083e-05]</msg>
<status status="PASS" starttime="20201030 11:50:16.821" endtime="20201030 11:50:16.824"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.817" endtime="20201030 11:50:16.824"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:16.828" endtime="20201030 11:50:16.847"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.826" endtime="20201030 11:50:16.848"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.825" endtime="20201030 11:50:16.848"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.465" endtime="20201030 11:50:16.849"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.465" endtime="20201030 11:50:16.849"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:16.858" endtime="20201030 11:50:16.876"></status>
</kw>
<msg timestamp="20201030 11:50:16.876" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:16.856" endtime="20201030 11:50:16.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:16.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:16.877" endtime="20201030 11:50:16.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:16.880" endtime="20201030 11:50:16.881"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.854" endtime="20201030 11:50:16.882"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.851" endtime="20201030 11:50:16.882"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:16.889" endtime="20201030 11:50:17.177"></status>
</kw>
<msg timestamp="20201030 11:50:17.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019946736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019963028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:16.887" endtime="20201030 11:50:17.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:17.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019946736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019963028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:17.182" endtime="20201030 11:50:17.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:17.190" endtime="20201030 11:50:17.192"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.885" endtime="20201030 11:50:17.193"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.883" endtime="20201030 11:50:17.193"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:17.197" level="INFO">${RESULT} = [{'diff': 1.6292000000001083e-05}, {'diff': 1.5249999999997904e-05}, {'diff': 1.5264000000000943e-05}, {'diff': 1.5264000000000943e-05}, {'diff': 1.5735999999998834e-05}, {'diff': 1.57629999999985e-05...</msg>
<status status="PASS" starttime="20201030 11:50:17.194" endtime="20201030 11:50:17.197"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:17.201" level="INFO">${ACCURACY} = {'diff': [1.6292000000001083e-05, 1.5249999999997904e-05, 1.5264000000000943e-05, 1.5264000000000943e-05, 1.5735999999998834e-05, 1.57629999999985e-05, 1.5264000000000943e-05, 1.583299999999982e-05, 1...</msg>
<status status="PASS" starttime="20201030 11:50:17.198" endtime="20201030 11:50:17.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:17.206" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201030 11:50:17.205" endtime="20201030 11:50:17.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:17.209" level="INFO">VALUE: [1.6292000000001083e-05, 1.5249999999997904e-05, 1.5264000000000943e-05, 1.5264000000000943e-05, 1.5735999999998834e-05, 1.57629999999985e-05, 1.5264000000000943e-05, 1.583299999999982e-05, 1.5777999999997544e-05, 1.5749999999998404e-05, 1.5777999999997544e-05, 1.5263999999997474e-05, 1.5778000000001013e-05, 1.5750000000001874e-05, 1.5805999999996684e-05, 1.5763999999997974e-05, 1.57629999999985e-05, 1.629100000000161e-05, 1.5764000000001444e-05, 1.5763999999997974e-05, 1.5264000000000943e-05, 1.5278000000000513e-05, 1.5764000000001444e-05, 1.5764000000001444e-05, 1.577699999999807e-05, 1.6263999999998474e-05, 1.5263999999997474e-05, 1.5249999999997904e-05, 1.5264000000000943e-05, 1.5180000000000055e-05, 1.5763999999997974e-05, 1.5777999999997544e-05, 1.5764000000001444e-05, 1.5278000000000513e-05, 1.6249999999998904e-05, 1.6249999999998904e-05, 1.5749999999998404e-05, 1.5249999999997904e-05, 1.5278000000000513e-05, 1.5277999999997044e-05, 1.6235999999999334e-05, 1.526300000000147e-05, 1.5750000000001874e-05, 1.6262999999999e-05, 1.5722999999998738e-05, 1.581900000000025e-05, 1.5750000000001874e-05, 1.5764000000001444e-05, 1.5764000000001444e-05, 1.5264000000000943e-05]</msg>
<status status="PASS" starttime="20201030 11:50:17.207" endtime="20201030 11:50:17.209"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.202" endtime="20201030 11:50:17.210"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:17.214" endtime="20201030 11:50:17.233"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.212" endtime="20201030 11:50:17.234"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.211" endtime="20201030 11:50:17.234"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.850" endtime="20201030 11:50:17.234"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.849" endtime="20201030 11:50:17.234"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:17.243" endtime="20201030 11:50:17.262"></status>
</kw>
<msg timestamp="20201030 11:50:17.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:17.242" endtime="20201030 11:50:17.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:17.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:17.264" endtime="20201030 11:50:17.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:17.266" endtime="20201030 11:50:17.268"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.239" endtime="20201030 11:50:17.268"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.237" endtime="20201030 11:50:17.269"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:17.276" endtime="20201030 11:50:17.562"></status>
</kw>
<msg timestamp="20201030 11:50:17.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020785931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020802681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:17.274" endtime="20201030 11:50:17.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:17.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020785931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020802681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:17.566" endtime="20201030 11:50:17.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:17.574" endtime="20201030 11:50:17.576"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.271" endtime="20201030 11:50:17.577"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.270" endtime="20201030 11:50:17.577"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:17.581" level="INFO">${RESULT} = [{'diff': 1.6749999999999404e-05}, {'diff': 1.6264000000001944e-05}, {'diff': 1.6264000000001944e-05}, {'diff': 1.6222999999999238e-05}, {'diff': 1.6277999999998044e-05}, {'diff': 1.6722000000000264e-...</msg>
<status status="PASS" starttime="20201030 11:50:17.578" endtime="20201030 11:50:17.581"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:17.585" level="INFO">${ACCURACY} = {'diff': [1.6749999999999404e-05, 1.6264000000001944e-05, 1.6264000000001944e-05, 1.6222999999999238e-05, 1.6277999999998044e-05, 1.6722000000000264e-05, 1.6263999999998474e-05, 1.6764000000002444e-05...</msg>
<status status="PASS" starttime="20201030 11:50:17.582" endtime="20201030 11:50:17.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:17.591" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201030 11:50:17.590" endtime="20201030 11:50:17.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:17.593" level="INFO">VALUE: [1.6749999999999404e-05, 1.6264000000001944e-05, 1.6264000000001944e-05, 1.6222999999999238e-05, 1.6277999999998044e-05, 1.6722000000000264e-05, 1.6263999999998474e-05, 1.6764000000002444e-05, 1.6709000000000168e-05, 1.6735999999999834e-05, 1.7278000000002514e-05, 1.7263999999999474e-05, 1.6263999999998474e-05, 1.6263999999998474e-05, 1.6249999999998904e-05, 1.6277999999998044e-05, 1.6264000000001944e-05, 1.633300000000032e-05, 1.7249999999999904e-05, 1.7291999999998614e-05, 1.6777999999998544e-05, 1.6263999999998474e-05, 1.6278000000001513e-05, 1.6777999999998544e-05, 1.6208000000000194e-05, 1.6264000000001944e-05, 1.6778000000002014e-05, 1.6195000000000098e-05, 1.7264000000002944e-05, 1.6249999999998904e-05, 1.6320000000000223e-05, 1.6777999999998544e-05, 1.6292000000001083e-05, 1.7221999999997295e-05, 1.6764000000002444e-05, 1.6749999999999404e-05, 1.6277999999998044e-05, 1.6277999999998044e-05, 1.6250000000002374e-05, 1.6278000000001513e-05, 1.6778000000002014e-05, 1.681900000000125e-05, 1.6264000000001944e-05, 1.679099999999864e-05, 1.6763999999998974e-05, 1.6208999999999668e-05, 1.7263999999999474e-05, 1.6333999999999793e-05, 1.6764000000002444e-05, 1.6763999999998974e-05]</msg>
<status status="PASS" starttime="20201030 11:50:17.592" endtime="20201030 11:50:17.594"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.586" endtime="20201030 11:50:17.595"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:17.599" endtime="20201030 11:50:17.618"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.597" endtime="20201030 11:50:17.619"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.596" endtime="20201030 11:50:17.619"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.235" endtime="20201030 11:50:17.619"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.235" endtime="20201030 11:50:17.619"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:17.628" endtime="20201030 11:50:17.644"></status>
</kw>
<msg timestamp="20201030 11:50:17.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:17.626" endtime="20201030 11:50:17.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:17.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:17.645" endtime="20201030 11:50:17.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:17.648" endtime="20201030 11:50:17.649"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.624" endtime="20201030 11:50:17.650"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.622" endtime="20201030 11:50:17.650"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:17.657" endtime="20201030 11:50:17.949"></status>
</kw>
<msg timestamp="20201030 11:50:17.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019296569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019313806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:17.655" endtime="20201030 11:50:17.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:17.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019296569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019313806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:17.953" endtime="20201030 11:50:17.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:17.961" endtime="20201030 11:50:17.963"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.653" endtime="20201030 11:50:17.963"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.651" endtime="20201030 11:50:17.964"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:17.967" level="INFO">${RESULT} = [{'diff': 1.7236999999999808e-05}, {'diff': 1.7277999999999044e-05}, {'diff': 1.7763999999999974e-05}, {'diff': 1.7263999999999474e-05}, {'diff': 1.7763999999999974e-05}, {'diff': 1.7750000000000404e-...</msg>
<status status="PASS" starttime="20201030 11:50:17.964" endtime="20201030 11:50:17.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:17.972" level="INFO">${ACCURACY} = {'diff': [1.7236999999999808e-05, 1.7277999999999044e-05, 1.7763999999999974e-05, 1.7263999999999474e-05, 1.7763999999999974e-05, 1.7750000000000404e-05, 1.7263999999999474e-05, 1.7264000000002944e-05...</msg>
<status status="PASS" starttime="20201030 11:50:17.968" endtime="20201030 11:50:17.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:17.977" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201030 11:50:17.976" endtime="20201030 11:50:17.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:17.979" level="INFO">VALUE: [1.7236999999999808e-05, 1.7277999999999044e-05, 1.7763999999999974e-05, 1.7263999999999474e-05, 1.7763999999999974e-05, 1.7750000000000404e-05, 1.7263999999999474e-05, 1.7264000000002944e-05, 1.7263999999999474e-05, 1.8264000000000474e-05, 1.7263999999999474e-05, 1.7737000000000308e-05, 1.7263999999999474e-05, 1.7277999999999044e-05, 1.8264000000000474e-05, 1.7736000000000834e-05, 1.7750000000000404e-05, 1.777700000000007e-05, 1.7263999999999474e-05, 1.7278000000002514e-05, 1.7193999999998155e-05, 1.7736000000000834e-05, 1.7777999999999544e-05, 1.7777999999999544e-05, 1.77630000000005e-05, 1.7277999999999044e-05, 1.7263999999999474e-05, 1.777700000000007e-05, 1.7763999999999974e-05, 1.8291999999999614e-05, 1.7263999999999474e-05, 1.7249999999999904e-05, 1.8264000000000474e-05, 1.7263999999999474e-05, 1.7278000000002514e-05, 1.7249999999999904e-05, 1.7763999999999974e-05, 1.7263999999999474e-05, 1.7750000000000404e-05, 1.7792000000002584e-05, 1.7263999999999474e-05, 1.7263999999999474e-05, 1.7263999999999474e-05, 1.7763999999999974e-05, 1.8264000000000474e-05, 1.780500000000268e-05, 1.7249999999999904e-05, 1.82089999999982e-05, 1.7235999999996865e-05, 1.7723000000000738e-05]</msg>
<status status="PASS" starttime="20201030 11:50:17.978" endtime="20201030 11:50:17.980"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.973" endtime="20201030 11:50:17.981"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:17.984" endtime="20201030 11:50:18.004"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.983" endtime="20201030 11:50:18.004"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.982" endtime="20201030 11:50:18.005"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.620" endtime="20201030 11:50:18.005"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.620" endtime="20201030 11:50:18.005"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:18.014" endtime="20201030 11:50:18.030"></status>
</kw>
<msg timestamp="20201030 11:50:18.031" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:18.012" endtime="20201030 11:50:18.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:18.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:18.032" endtime="20201030 11:50:18.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:18.034" endtime="20201030 11:50:18.036"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.010" endtime="20201030 11:50:18.036"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.007" endtime="20201030 11:50:18.037"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:18.043" endtime="20201030 11:50:18.330"></status>
</kw>
<msg timestamp="20201030 11:50:18.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01949675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019515514, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:18.042" endtime="20201030 11:50:18.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:18.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01949675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019515514, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:18.334" endtime="20201030 11:50:18.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:18.342" endtime="20201030 11:50:18.344"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.039" endtime="20201030 11:50:18.344"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.037" endtime="20201030 11:50:18.345"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:18.349" level="INFO">${RESULT} = [{'diff': 1.8764000000000974e-05}, {'diff': 1.8250000000000904e-05}, {'diff': 1.8777999999997075e-05}, {'diff': 1.8722000000002265e-05}, {'diff': 1.8805999999999684e-05}, {'diff': 1.8778000000000544e-...</msg>
<status status="PASS" starttime="20201030 11:50:18.345" endtime="20201030 11:50:18.349"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:18.353" level="INFO">${ACCURACY} = {'diff': [1.8764000000000974e-05, 1.8250000000000904e-05, 1.8777999999997075e-05, 1.8722000000002265e-05, 1.8805999999999684e-05, 1.8778000000000544e-05, 1.881899999999978e-05, 1.9264000000001474e-05,...</msg>
<status status="PASS" starttime="20201030 11:50:18.350" endtime="20201030 11:50:18.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:18.357" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201030 11:50:18.356" endtime="20201030 11:50:18.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:18.360" level="INFO">VALUE: [1.8764000000000974e-05, 1.8250000000000904e-05, 1.8777999999997075e-05, 1.8722000000002265e-05, 1.8805999999999684e-05, 1.8778000000000544e-05, 1.881899999999978e-05, 1.9264000000001474e-05, 1.8264000000000474e-05, 1.8235999999997865e-05, 1.8707999999999225e-05, 1.8264000000000474e-05, 1.834700000000189e-05, 1.8320000000002223e-05, 1.9249999999998435e-05, 1.8707999999999225e-05, 1.8264000000000474e-05, 1.876299999999803e-05, 1.8763999999997505e-05, 1.8764000000000974e-05, 1.8764000000000974e-05, 1.829100000000014e-05, 1.8250000000000904e-05, 1.8208000000002195e-05, 1.8278000000000044e-05, 1.8250000000000904e-05, 1.8764000000000974e-05, 1.9264000000001474e-05, 1.8764000000000974e-05, 1.8763999999997505e-05, 1.8264000000000474e-05, 1.8721999999998795e-05, 1.8778000000000544e-05, 1.834699999999842e-05, 1.827700000000057e-05, 1.8264000000000474e-05, 1.869499999999913e-05, 1.9249999999998435e-05, 1.8264000000000474e-05, 1.9264000000001474e-05, 1.8764000000000974e-05, 1.8291999999999614e-05, 1.8764000000000974e-05, 1.8263999999997005e-05, 1.8764000000000974e-05, 1.8193999999999155e-05, 1.8250000000000904e-05, 1.8778000000000544e-05, 1.9264000000001474e-05, 1.881899999999978e-05]</msg>
<status status="PASS" starttime="20201030 11:50:18.358" endtime="20201030 11:50:18.360"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.354" endtime="20201030 11:50:18.361"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:18.364" endtime="20201030 11:50:18.384"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.363" endtime="20201030 11:50:18.384"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.362" endtime="20201030 11:50:18.385"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.006" endtime="20201030 11:50:18.385"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.005" endtime="20201030 11:50:18.385"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:18.395" endtime="20201030 11:50:18.411"></status>
</kw>
<msg timestamp="20201030 11:50:18.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:18.393" endtime="20201030 11:50:18.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:18.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:18.413" endtime="20201030 11:50:18.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:18.415" endtime="20201030 11:50:18.417"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.391" endtime="20201030 11:50:18.417"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.388" endtime="20201030 11:50:18.418"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:18.424" endtime="20201030 11:50:18.710"></status>
</kw>
<msg timestamp="20201030 11:50:18.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021258292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021277542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:18.423" endtime="20201030 11:50:18.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:18.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021258292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021277542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:18.714" endtime="20201030 11:50:18.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:18.723" endtime="20201030 11:50:18.724"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.420" endtime="20201030 11:50:18.725"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.418" endtime="20201030 11:50:18.725"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:18.729" level="INFO">${RESULT} = [{'diff': 1.9249999999998435e-05}, {'diff': 1.9278000000001044e-05}, {'diff': 1.97769999999986e-05}, {'diff': 1.9264000000001474e-05}, {'diff': 1.9750000000002405e-05}, {'diff': 1.92769999999981e-05},...</msg>
<status status="PASS" starttime="20201030 11:50:18.726" endtime="20201030 11:50:18.730"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:18.734" level="INFO">${ACCURACY} = {'diff': [1.9249999999998435e-05, 1.9278000000001044e-05, 1.97769999999986e-05, 1.9264000000001474e-05, 1.9750000000002405e-05, 1.92769999999981e-05, 1.9820000000000254e-05, 1.927700000000157e-05, 1.9...</msg>
<status status="PASS" starttime="20201030 11:50:18.731" endtime="20201030 11:50:18.734"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:18.738" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201030 11:50:18.737" endtime="20201030 11:50:18.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:18.741" level="INFO">VALUE: [1.9249999999998435e-05, 1.9278000000001044e-05, 1.97769999999986e-05, 1.9264000000001474e-05, 1.9750000000002405e-05, 1.92769999999981e-05, 1.9820000000000254e-05, 1.927700000000157e-05, 1.9207999999999725e-05, 1.9763999999998505e-05, 1.926299999999853e-05, 1.9763999999998505e-05, 1.9764000000001974e-05, 1.983300000000035e-05, 1.9749999999998935e-05, 2.0263999999999005e-05, 1.9278000000001044e-05, 1.9764000000001974e-05, 1.926299999999853e-05, 1.9764000000001974e-05, 1.9763999999998505e-05, 1.9750000000002405e-05, 1.9278000000001044e-05, 1.9763999999998505e-05, 1.9749999999998935e-05, 1.9264000000001474e-05, 1.9764000000001974e-05, 1.9764000000001974e-05, 1.9264000000001474e-05, 2.0263000000003e-05, 1.9319999999999754e-05, 1.9679999999997616e-05, 1.9749999999998935e-05, 1.9250000000001904e-05, 1.9778000000001544e-05, 1.981900000000078e-05, 1.9764000000001974e-05, 1.9721999999999795e-05, 1.9763999999998505e-05, 1.9764000000001974e-05, 1.9278000000001044e-05, 1.9749999999998935e-05, 1.9277999999997575e-05, 1.9763999999998505e-05, 1.930500000000071e-05, 1.9764000000001974e-05, 1.9764000000001974e-05, 1.9292000000000614e-05, 1.9763999999998505e-05, 1.9763999999998505e-05]</msg>
<status status="PASS" starttime="20201030 11:50:18.739" endtime="20201030 11:50:18.742"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.735" endtime="20201030 11:50:18.743"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:18.747" endtime="20201030 11:50:18.766"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.745" endtime="20201030 11:50:18.767"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.744" endtime="20201030 11:50:18.767"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.386" endtime="20201030 11:50:18.767"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.385" endtime="20201030 11:50:18.768"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:18.776" endtime="20201030 11:50:18.794"></status>
</kw>
<msg timestamp="20201030 11:50:18.794" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:18.775" endtime="20201030 11:50:18.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:18.797" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:18.795" endtime="20201030 11:50:18.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:18.798" endtime="20201030 11:50:18.800"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.772" endtime="20201030 11:50:18.800"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.770" endtime="20201030 11:50:18.801"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:18.807" endtime="20201030 11:50:19.092"></status>
</kw>
<msg timestamp="20201030 11:50:19.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020056333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020077056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:18.806" endtime="20201030 11:50:19.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:19.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020056333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020077056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:19.096" endtime="20201030 11:50:19.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:19.104" endtime="20201030 11:50:19.106"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.803" endtime="20201030 11:50:19.107"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.801" endtime="20201030 11:50:19.107"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:19.111" level="INFO">${RESULT} = [{'diff': 2.072300000000027e-05}, {'diff': 2.0736000000000365e-05}, {'diff': 2.0263999999999005e-05}, {'diff': 2.0749999999999935e-05}, {'diff': 2.0278000000002044e-05}, {'diff': 2.0763999999999505e-0...</msg>
<status status="PASS" starttime="20201030 11:50:19.108" endtime="20201030 11:50:19.111"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:19.116" level="INFO">${ACCURACY} = {'diff': [2.072300000000027e-05, 2.0736000000000365e-05, 2.0263999999999005e-05, 2.0749999999999935e-05, 2.0278000000002044e-05, 2.0763999999999505e-05, 2.0763999999999505e-05, 2.0763999999999505e-05,...</msg>
<status status="PASS" starttime="20201030 11:50:19.112" endtime="20201030 11:50:19.117"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:19.121" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201030 11:50:19.120" endtime="20201030 11:50:19.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:19.124" level="INFO">VALUE: [2.072300000000027e-05, 2.0736000000000365e-05, 2.0263999999999005e-05, 2.0749999999999935e-05, 2.0278000000002044e-05, 2.0763999999999505e-05, 2.0763999999999505e-05, 2.0763999999999505e-05, 2.0735999999996896e-05, 2.0305999999997715e-05, 2.0777999999999075e-05, 2.0763999999999505e-05, 2.0763999999999505e-05, 2.0264000000002474e-05, 2.0291999999998145e-05, 2.0250000000002905e-05, 2.0277999999998575e-05, 2.0264000000002474e-05, 2.0263999999999005e-05, 2.0791999999998645e-05, 2.0763999999999505e-05, 2.0763999999999505e-05, 2.0222000000000295e-05, 2.0777999999999075e-05, 2.1264000000000005e-05, 2.12090000000012e-05, 2.0263999999999005e-05, 2.1250000000000435e-05, 2.0264000000002474e-05, 2.0278000000002044e-05, 2.0249999999999435e-05, 2.0777999999999075e-05, 2.0777999999999075e-05, 2.07769999999996e-05, 2.0763999999999505e-05, 2.0777999999999075e-05, 2.030500000000171e-05, 2.0264000000002474e-05, 2.026299999999953e-05, 2.07769999999996e-05, 2.0263999999999005e-05, 2.0763999999999505e-05, 2.0263999999999005e-05, 2.0763999999999505e-05, 2.02769999999991e-05, 2.0777999999999075e-05, 2.0264000000002474e-05, 2.0306000000001184e-05, 2.0763999999999505e-05, 2.1277999999999575e-05]</msg>
<status status="PASS" starttime="20201030 11:50:19.122" endtime="20201030 11:50:19.125"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.117" endtime="20201030 11:50:19.125"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:19.129" endtime="20201030 11:50:19.148"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.127" endtime="20201030 11:50:19.149"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.126" endtime="20201030 11:50:19.149"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.769" endtime="20201030 11:50:19.150"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.768" endtime="20201030 11:50:19.150"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:19.159" endtime="20201030 11:50:19.176"></status>
</kw>
<msg timestamp="20201030 11:50:19.177" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:19.157" endtime="20201030 11:50:19.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:19.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:19.178" endtime="20201030 11:50:19.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:19.181" endtime="20201030 11:50:19.182"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.154" endtime="20201030 11:50:19.183"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.152" endtime="20201030 11:50:19.183"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:19.190" endtime="20201030 11:50:19.475"></status>
</kw>
<msg timestamp="20201030 11:50:19.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019944139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019965403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:19.188" endtime="20201030 11:50:19.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:19.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019944139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019965403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:19.479" endtime="20201030 11:50:19.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:19.488" endtime="20201030 11:50:19.489"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.186" endtime="20201030 11:50:19.490"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.184" endtime="20201030 11:50:19.490"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:19.494" level="INFO">${RESULT} = [{'diff': 2.1264000000000005e-05}, {'diff': 2.1249999999996966e-05}, {'diff': 2.2263999999997536e-05}, {'diff': 2.1778000000000075e-05}, {'diff': 2.1736000000001365e-05}, {'diff': 2.1764000000000505e-...</msg>
<status status="PASS" starttime="20201030 11:50:19.491" endtime="20201030 11:50:19.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:19.499" level="INFO">${ACCURACY} = {'diff': [2.1264000000000005e-05, 2.1249999999996966e-05, 2.2263999999997536e-05, 2.1778000000000075e-05, 2.1736000000001365e-05, 2.1764000000000505e-05, 2.1749999999997466e-05, 2.1750000000000935e-05...</msg>
<status status="PASS" starttime="20201030 11:50:19.495" endtime="20201030 11:50:19.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:19.503" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201030 11:50:19.502" endtime="20201030 11:50:19.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:19.506" level="INFO">VALUE: [2.1264000000000005e-05, 2.1249999999996966e-05, 2.2263999999997536e-05, 2.1778000000000075e-05, 2.1736000000001365e-05, 2.1764000000000505e-05, 2.1749999999997466e-05, 2.1750000000000935e-05, 2.181899999999931e-05, 2.1764000000000505e-05, 2.180499999999974e-05, 2.1264000000000005e-05, 2.1764000000000505e-05, 2.1264000000000005e-05, 2.1778000000000075e-05, 2.1778000000000075e-05, 2.1264000000000005e-05, 2.1291999999999145e-05, 2.1264000000000005e-05, 2.1778000000000075e-05, 2.1277999999999575e-05, 2.17770000000006e-05, 2.1778000000000075e-05, 2.1236000000000865e-05, 2.170899999999823e-05, 2.2264000000001005e-05, 2.1264000000000005e-05, 2.1749999999997466e-05, 2.1750000000000935e-05, 2.130500000000271e-05, 2.1264000000000005e-05, 2.1277999999999575e-05, 2.180499999999974e-05, 2.1264000000000005e-05, 2.129099999999967e-05, 2.119500000000163e-05, 2.1264000000000005e-05, 2.1778000000000075e-05, 2.1264000000000005e-05, 2.1778000000000075e-05, 2.1762999999997562e-05, 2.1764000000000505e-05, 2.1763999999997036e-05, 2.1194000000002156e-05, 2.1264000000000005e-05, 2.1764000000000505e-05, 2.1264000000000005e-05, 2.1750000000000935e-05, 2.1736000000001365e-05, 2.1736000000001365e-05]</msg>
<status status="PASS" starttime="20201030 11:50:19.504" endtime="20201030 11:50:19.507"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.500" endtime="20201030 11:50:19.507"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:19.511" endtime="20201030 11:50:19.530"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.509" endtime="20201030 11:50:19.531"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.508" endtime="20201030 11:50:19.531"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.151" endtime="20201030 11:50:19.532"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.150" endtime="20201030 11:50:19.532"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:19.542" endtime="20201030 11:50:19.560"></status>
</kw>
<msg timestamp="20201030 11:50:19.561" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:19.540" endtime="20201030 11:50:19.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:19.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:19.562" endtime="20201030 11:50:19.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:19.565" endtime="20201030 11:50:19.566"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.537" endtime="20201030 11:50:19.567"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.535" endtime="20201030 11:50:19.567"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:19.574" endtime="20201030 11:50:19.860"></status>
</kw>
<msg timestamp="20201030 11:50:19.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022436236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022458458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:19.572" endtime="20201030 11:50:19.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:19.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022436236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022458458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:19.864" endtime="20201030 11:50:19.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:19.873" endtime="20201030 11:50:19.875"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.570" endtime="20201030 11:50:19.875"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.568" endtime="20201030 11:50:19.876"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:19.880" level="INFO">${RESULT} = [{'diff': 2.2222000000002295e-05}, {'diff': 2.2749999999998466e-05}, {'diff': 2.2763999999998036e-05}, {'diff': 2.231899999999981e-05}, {'diff': 2.2250000000001435e-05}, {'diff': 2.2264000000001005e-0...</msg>
<status status="PASS" starttime="20201030 11:50:19.876" endtime="20201030 11:50:19.880"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:19.884" level="INFO">${ACCURACY} = {'diff': [2.2222000000002295e-05, 2.2749999999998466e-05, 2.2763999999998036e-05, 2.231899999999981e-05, 2.2250000000001435e-05, 2.2264000000001005e-05, 2.2776999999998132e-05, 2.2792000000000645e-05,...</msg>
<status status="PASS" starttime="20201030 11:50:19.881" endtime="20201030 11:50:19.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:19.888" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201030 11:50:19.887" endtime="20201030 11:50:19.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:19.891" level="INFO">VALUE: [2.2222000000002295e-05, 2.2749999999998466e-05, 2.2763999999998036e-05, 2.231899999999981e-05, 2.2250000000001435e-05, 2.2264000000001005e-05, 2.2776999999998132e-05, 2.2792000000000645e-05, 2.3208000000000256e-05, 2.269499999999966e-05, 2.2264000000001005e-05, 2.2264000000001005e-05, 2.2264000000001005e-05, 2.2764000000001505e-05, 2.2263999999997536e-05, 2.2778000000001075e-05, 2.2264000000001005e-05, 2.2264000000001005e-05, 2.3249999999998966e-05, 2.2764000000001505e-05, 2.2762999999998562e-05, 2.230500000000024e-05, 2.2750000000001935e-05, 2.2763999999998036e-05, 2.2778000000001075e-05, 2.2236000000001865e-05, 2.2694000000000186e-05, 2.2764000000001505e-05, 2.2778000000001075e-05, 2.2292000000000145e-05, 2.2749999999998466e-05, 2.2249999999997966e-05, 2.2278000000000575e-05, 2.2249999999997966e-05, 2.280500000000074e-05, 2.2764000000001505e-05, 2.2764000000001505e-05, 2.2762999999998562e-05, 2.2263999999997536e-05, 2.2264000000001005e-05, 2.3249999999998966e-05, 2.2749999999998466e-05, 2.2250000000001435e-05, 2.2749999999998466e-05, 2.2792000000000645e-05, 2.2736000000002365e-05, 2.2249999999997966e-05, 2.2778000000001075e-05, 2.2262999999998062e-05, 2.2263999999997536e-05]</msg>
<status status="PASS" starttime="20201030 11:50:19.890" endtime="20201030 11:50:19.893"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.885" endtime="20201030 11:50:19.893"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:19.897" endtime="20201030 11:50:19.916"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.895" endtime="20201030 11:50:19.917"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.894" endtime="20201030 11:50:19.917"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.533" endtime="20201030 11:50:19.918"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.532" endtime="20201030 11:50:19.918"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:19.927" endtime="20201030 11:50:19.944"></status>
</kw>
<msg timestamp="20201030 11:50:19.945" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:19.925" endtime="20201030 11:50:19.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:19.947" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:19.946" endtime="20201030 11:50:19.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:19.949" endtime="20201030 11:50:19.950"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.922" endtime="20201030 11:50:19.951"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.920" endtime="20201030 11:50:19.951"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:19.958" endtime="20201030 11:50:20.242"></status>
</kw>
<msg timestamp="20201030 11:50:20.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019909764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019933028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:19.956" endtime="20201030 11:50:20.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:20.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019909764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019933028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:20.246" endtime="20201030 11:50:20.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:20.254" endtime="20201030 11:50:20.256"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.954" endtime="20201030 11:50:20.257"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.952" endtime="20201030 11:50:20.257"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:20.261" level="INFO">${RESULT} = [{'diff': 2.3263999999998536e-05}, {'diff': 2.3777999999998606e-05}, {'diff': 2.3263999999998536e-05}, {'diff': 2.3304999999997772e-05}, {'diff': 2.3680000000001616e-05}, {'diff': 2.3249999999998966e-...</msg>
<status status="PASS" starttime="20201030 11:50:20.258" endtime="20201030 11:50:20.261"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:20.266" level="INFO">${ACCURACY} = {'diff': [2.3263999999998536e-05, 2.3777999999998606e-05, 2.3263999999998536e-05, 2.3304999999997772e-05, 2.3680000000001616e-05, 2.3249999999998966e-05, 2.3792000000001645e-05, 2.3763999999999036e-05...</msg>
<status status="PASS" starttime="20201030 11:50:20.262" endtime="20201030 11:50:20.267"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:20.271" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201030 11:50:20.270" endtime="20201030 11:50:20.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:20.274" level="INFO">VALUE: [2.3263999999998536e-05, 2.3777999999998606e-05, 2.3263999999998536e-05, 2.3304999999997772e-05, 2.3680000000001616e-05, 2.3249999999998966e-05, 2.3792000000001645e-05, 2.3763999999999036e-05, 2.3278000000001575e-05, 2.3749999999999466e-05, 2.3750000000002935e-05, 2.3763999999999036e-05, 2.32770000000021e-05, 2.3278000000001575e-05, 2.3263999999998536e-05, 2.3790999999998702e-05, 2.3264000000002005e-05, 2.3278000000001575e-05, 2.3735999999999896e-05, 2.3749999999999466e-05, 2.3764000000002505e-05, 2.318100000000059e-05, 2.4263999999999536e-05, 2.3776999999999132e-05, 2.3250000000002435e-05, 2.3749999999999466e-05, 2.3764000000002505e-05, 2.3776999999999132e-05, 2.3763999999999036e-05, 2.3208000000000256e-05, 2.3764000000002505e-05, 2.3735999999999896e-05, 2.4276999999999632e-05, 2.3777999999998606e-05, 2.3776999999999132e-05, 2.3763999999999036e-05, 2.3249999999998966e-05, 2.3193999999997217e-05, 2.3264000000002005e-05, 2.3764000000002505e-05, 2.3249999999998966e-05, 2.3277999999998106e-05, 2.3763999999999036e-05, 2.3249999999998966e-05, 2.3235999999999396e-05, 2.3291999999997676e-05, 2.3763999999999036e-05, 2.3264000000002005e-05, 2.3264000000002005e-05, 2.32770000000021e-05]</msg>
<status status="PASS" starttime="20201030 11:50:20.272" endtime="20201030 11:50:20.274"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.267" endtime="20201030 11:50:20.275"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:20.279" endtime="20201030 11:50:20.298"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.277" endtime="20201030 11:50:20.299"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.276" endtime="20201030 11:50:20.299"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.919" endtime="20201030 11:50:20.299"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.918" endtime="20201030 11:50:20.300"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:20.308" endtime="20201030 11:50:20.326"></status>
</kw>
<msg timestamp="20201030 11:50:20.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:20.307" endtime="20201030 11:50:20.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:20.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:20.327" endtime="20201030 11:50:20.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:20.330" endtime="20201030 11:50:20.332"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.304" endtime="20201030 11:50:20.332"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.302" endtime="20201030 11:50:20.333"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:20.339" endtime="20201030 11:50:20.628"></status>
</kw>
<msg timestamp="20201030 11:50:20.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019947778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019972042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:20.338" endtime="20201030 11:50:20.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:20.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019947778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019972042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:20.632" endtime="20201030 11:50:20.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:20.641" endtime="20201030 11:50:20.642"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.335" endtime="20201030 11:50:20.643"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.333" endtime="20201030 11:50:20.643"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:20.647" level="INFO">${RESULT} = [{'diff': 2.4263999999999536e-05}, {'diff': 2.4236000000000396e-05}, {'diff': 2.4750000000000466e-05}, {'diff': 2.4764000000000036e-05}, {'diff': 2.4750000000000466e-05}, {'diff': 2.4764000000000036e-...</msg>
<status status="PASS" starttime="20201030 11:50:20.644" endtime="20201030 11:50:20.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:20.652" level="INFO">${ACCURACY} = {'diff': [2.4263999999999536e-05, 2.4236000000000396e-05, 2.4750000000000466e-05, 2.4764000000000036e-05, 2.4750000000000466e-05, 2.4764000000000036e-05, 2.4764000000000036e-05, 2.4263999999999536e-05...</msg>
<status status="PASS" starttime="20201030 11:50:20.648" endtime="20201030 11:50:20.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:20.656" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201030 11:50:20.655" endtime="20201030 11:50:20.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:20.659" level="INFO">VALUE: [2.4263999999999536e-05, 2.4236000000000396e-05, 2.4750000000000466e-05, 2.4764000000000036e-05, 2.4750000000000466e-05, 2.4764000000000036e-05, 2.4764000000000036e-05, 2.4263999999999536e-05, 2.4777999999999606e-05, 2.4832999999998412e-05, 2.4276999999999632e-05, 2.4263999999999536e-05, 2.4263999999999536e-05, 2.4832999999998412e-05, 2.4805999999998746e-05, 2.4249999999999966e-05, 2.4764000000000036e-05, 2.4277999999999106e-05, 2.4777999999999606e-05, 2.4777999999999606e-05, 2.4736000000000896e-05, 2.5304999999999772e-05, 2.4777999999999606e-05, 2.4263999999999536e-05, 2.4306000000001715e-05, 2.4750000000000466e-05, 2.4278000000002575e-05, 2.4764000000000036e-05, 2.4263999999999536e-05, 2.4208000000001256e-05, 2.4777000000000132e-05, 2.4292000000002145e-05, 2.4278000000002575e-05, 2.5264000000000536e-05, 2.4750000000000466e-05, 2.4764000000000036e-05, 2.4764000000000036e-05, 2.419500000000116e-05, 2.4263999999999536e-05, 2.4735999999997427e-05, 2.4764000000000036e-05, 2.4263999999999536e-05, 2.4764000000000036e-05, 2.4763999999996567e-05, 2.4291999999998676e-05, 2.4777999999999606e-05, 2.4764000000000036e-05, 2.4749999999996997e-05, 2.4764000000000036e-05, 2.5236000000001396e-05]</msg>
<status status="PASS" starttime="20201030 11:50:20.657" endtime="20201030 11:50:20.660"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.653" endtime="20201030 11:50:20.660"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:20.664" endtime="20201030 11:50:20.683"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.662" endtime="20201030 11:50:20.684"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.661" endtime="20201030 11:50:20.684"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.300" endtime="20201030 11:50:20.685"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.300" endtime="20201030 11:50:20.685"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:20.694" endtime="20201030 11:50:20.712"></status>
</kw>
<msg timestamp="20201030 11:50:20.713" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:20.692" endtime="20201030 11:50:20.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:20.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:20.714" endtime="20201030 11:50:20.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:20.716" endtime="20201030 11:50:20.718"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.689" endtime="20201030 11:50:20.719"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.687" endtime="20201030 11:50:20.719"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:20.726" endtime="20201030 11:50:21.011"></status>
</kw>
<msg timestamp="20201030 11:50:21.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020850792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020876056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:20.724" endtime="20201030 11:50:21.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:21.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020850792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020876056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:21.016" endtime="20201030 11:50:21.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:21.024" endtime="20201030 11:50:21.026"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.722" endtime="20201030 11:50:21.026"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.720" endtime="20201030 11:50:21.027"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:21.031" level="INFO">${RESULT} = [{'diff': 2.5264000000000536e-05}, {'diff': 2.5778000000000606e-05}, {'diff': 2.5764000000001036e-05}, {'diff': 2.5750000000001466e-05}, {'diff': 2.6264000000001536e-05}, {'diff': 2.5778000000000606e-...</msg>
<status status="PASS" starttime="20201030 11:50:21.028" endtime="20201030 11:50:21.031"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:21.035" level="INFO">${ACCURACY} = {'diff': [2.5264000000000536e-05, 2.5778000000000606e-05, 2.5764000000001036e-05, 2.5750000000001466e-05, 2.6264000000001536e-05, 2.5778000000000606e-05, 2.5249999999997497e-05, 2.5278000000000106e-05...</msg>
<status status="PASS" starttime="20201030 11:50:21.032" endtime="20201030 11:50:21.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:21.040" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201030 11:50:21.039" endtime="20201030 11:50:21.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:21.042" level="INFO">VALUE: [2.5264000000000536e-05, 2.5778000000000606e-05, 2.5764000000001036e-05, 2.5750000000001466e-05, 2.6264000000001536e-05, 2.5778000000000606e-05, 2.5249999999997497e-05, 2.5278000000000106e-05, 2.5764000000001036e-05, 2.5305999999999246e-05, 2.5763000000001562e-05, 2.5763999999997567e-05, 2.5264000000000536e-05, 2.5264000000000536e-05, 2.5792000000000176e-05, 2.6263999999998067e-05, 2.5763000000001562e-05, 2.5264000000000536e-05, 2.5264000000000536e-05, 2.5832999999999412e-05, 2.5749999999997997e-05, 2.569500000000266e-05, 2.5291999999999676e-05, 2.5778000000000606e-05, 2.5764000000001036e-05, 2.5249999999997497e-05, 2.6235999999998927e-05, 2.5750000000001466e-05, 2.5264000000000536e-05, 2.5264000000000536e-05, 2.5750000000001466e-05, 2.5764000000001036e-05, 2.5221999999998357e-05, 2.5264000000000536e-05, 2.6250000000001966e-05, 2.5764000000001036e-05, 2.5777000000001132e-05, 2.5763999999997567e-05, 2.5764000000001036e-05, 2.5264000000000536e-05, 2.5250000000000966e-05, 2.5750000000001466e-05, 2.5750000000001466e-05, 2.5777999999997137e-05, 2.6278000000001106e-05, 2.5263999999997067e-05, 2.5278000000000106e-05, 2.5763000000001562e-05, 2.5278000000000106e-05, 2.5278000000000106e-05]</msg>
<status status="PASS" starttime="20201030 11:50:21.041" endtime="20201030 11:50:21.044"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.036" endtime="20201030 11:50:21.045"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:21.048" endtime="20201030 11:50:21.068"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.047" endtime="20201030 11:50:21.068"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.046" endtime="20201030 11:50:21.069"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.686" endtime="20201030 11:50:21.069"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.685" endtime="20201030 11:50:21.069"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:21.078" endtime="20201030 11:50:21.095"></status>
</kw>
<msg timestamp="20201030 11:50:21.096" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:21.076" endtime="20201030 11:50:21.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:21.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:21.097" endtime="20201030 11:50:21.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:21.099" endtime="20201030 11:50:21.101"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.074" endtime="20201030 11:50:21.102"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.072" endtime="20201030 11:50:21.102"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:21.109" endtime="20201030 11:50:21.393"></status>
</kw>
<msg timestamp="20201030 11:50:21.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019941792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019968056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:21.107" endtime="20201030 11:50:21.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:21.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019941792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019968056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:21.397" endtime="20201030 11:50:21.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:21.406" endtime="20201030 11:50:21.407"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.104" endtime="20201030 11:50:21.408"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.103" endtime="20201030 11:50:21.409"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:21.413" level="INFO">${RESULT} = [{'diff': 2.6264000000001536e-05}, {'diff': 2.6264000000001536e-05}, {'diff': 2.6249999999998497e-05}, {'diff': 2.6778000000001606e-05}, {'diff': 2.6763999999998567e-05}, {'diff': 2.6764000000002036e-...</msg>
<status status="PASS" starttime="20201030 11:50:21.409" endtime="20201030 11:50:21.413"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:21.418" level="INFO">${ACCURACY} = {'diff': [2.6264000000001536e-05, 2.6264000000001536e-05, 2.6249999999998497e-05, 2.6778000000001606e-05, 2.6763999999998567e-05, 2.6764000000002036e-05, 2.6291000000001202e-05, 2.6749999999998997e-05...</msg>
<status status="PASS" starttime="20201030 11:50:21.414" endtime="20201030 11:50:21.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:21.422" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201030 11:50:21.421" endtime="20201030 11:50:21.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:21.425" level="INFO">VALUE: [2.6264000000001536e-05, 2.6264000000001536e-05, 2.6249999999998497e-05, 2.6778000000001606e-05, 2.6763999999998567e-05, 2.6764000000002036e-05, 2.6291000000001202e-05, 2.6749999999998997e-05, 2.6264000000001536e-05, 2.6236000000002396e-05, 2.6264000000001536e-05, 2.6777999999998137e-05, 2.6777999999998137e-05, 2.6749999999998997e-05, 2.7291999999998207e-05, 2.6306000000000246e-05, 2.6846999999999982e-05, 2.6763999999998567e-05, 2.6763999999998567e-05, 2.6276999999998163e-05, 2.6278000000001106e-05, 2.6263999999998067e-05, 2.6278000000001106e-05, 2.6264000000001536e-05, 2.6763999999998567e-05, 2.62369999999984e-05, 2.6778000000001606e-05, 2.6762999999999093e-05, 2.6263999999998067e-05, 2.6264000000001536e-05, 2.6762999999999093e-05, 2.6277999999997637e-05, 2.6790999999998233e-05, 2.6777999999998137e-05, 2.6750000000002466e-05, 2.6749999999998997e-05, 2.6763999999998567e-05, 2.6804999999997803e-05, 2.6250000000001966e-05, 2.6763999999998567e-05, 2.6263999999998067e-05, 2.6277000000001632e-05, 2.6264000000001536e-05, 2.6805000000001272e-05, 2.6777000000002132e-05, 2.6764000000002036e-05, 2.7264000000002536e-05, 2.6735999999999427e-05, 2.6778000000001606e-05, 2.6278000000001106e-05]</msg>
<status status="PASS" starttime="20201030 11:50:21.424" endtime="20201030 11:50:21.426"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.419" endtime="20201030 11:50:21.426"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:21.430" endtime="20201030 11:50:21.449"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.429" endtime="20201030 11:50:21.450"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.427" endtime="20201030 11:50:21.450"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.070" endtime="20201030 11:50:21.451"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.070" endtime="20201030 11:50:21.451"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:21.460" endtime="20201030 11:50:21.478"></status>
</kw>
<msg timestamp="20201030 11:50:21.478" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:21.458" endtime="20201030 11:50:21.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:21.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:21.480" endtime="20201030 11:50:21.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:21.482" endtime="20201030 11:50:21.484"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.456" endtime="20201030 11:50:21.484"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.453" endtime="20201030 11:50:21.485"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:21.491" endtime="20201030 11:50:21.777"></status>
</kw>
<msg timestamp="20201030 11:50:21.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019941431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019969194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:21.490" endtime="20201030 11:50:21.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:21.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019941431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019969194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:21.782" endtime="20201030 11:50:21.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:21.790" endtime="20201030 11:50:21.792"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.487" endtime="20201030 11:50:21.792"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.485" endtime="20201030 11:50:21.793"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:21.797" level="INFO">${RESULT} = [{'diff': 2.7763000000000093e-05}, {'diff': 2.7777999999999137e-05}, {'diff': 2.7249999999999497e-05}, {'diff': 2.7722000000000857e-05}, {'diff': 2.7749999999999997e-05}, {'diff': 2.7262999999999593e-...</msg>
<status status="PASS" starttime="20201030 11:50:21.794" endtime="20201030 11:50:21.797"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:21.801" level="INFO">${ACCURACY} = {'diff': [2.7763000000000093e-05, 2.7777999999999137e-05, 2.7249999999999497e-05, 2.7722000000000857e-05, 2.7749999999999997e-05, 2.7262999999999593e-05, 2.7263999999999067e-05, 2.7749999999999997e-05...</msg>
<status status="PASS" starttime="20201030 11:50:21.798" endtime="20201030 11:50:21.801"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:21.806" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201030 11:50:21.805" endtime="20201030 11:50:21.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:21.809" level="INFO">VALUE: [2.7763000000000093e-05, 2.7777999999999137e-05, 2.7249999999999497e-05, 2.7722000000000857e-05, 2.7749999999999997e-05, 2.7262999999999593e-05, 2.7263999999999067e-05, 2.7749999999999997e-05, 2.7749999999999997e-05, 2.7276999999999163e-05, 2.7763999999999567e-05, 2.7763999999999567e-05, 2.7264000000002536e-05, 2.7763999999999567e-05, 2.7763999999999567e-05, 2.7292000000001676e-05, 2.7763999999999567e-05, 2.7263999999999067e-05, 2.7763999999999567e-05, 2.7263999999999067e-05, 2.7763999999999567e-05, 2.7277999999998637e-05, 2.7304999999998303e-05, 2.7776999999999663e-05, 2.8291999999999207e-05, 2.7763999999999567e-05, 2.7764000000003036e-05, 2.7763999999999567e-05, 2.7776999999999663e-05, 2.769499999999772e-05, 2.7222000000000357e-05, 2.7278000000002106e-05, 2.7264000000002536e-05, 2.7805999999998277e-05, 2.7763000000000093e-05, 2.7305999999997776e-05, 2.7777999999999137e-05, 2.7263999999999067e-05, 2.7749999999999997e-05, 2.7278000000002106e-05, 2.7749999999999997e-05, 2.7777999999999137e-05, 2.7763999999999567e-05, 2.7264000000002536e-05, 2.7763999999999567e-05, 2.7776999999999663e-05, 2.7263999999999067e-05, 2.7777999999999137e-05, 2.7763000000000093e-05, 2.7763999999999567e-05]</msg>
<status status="PASS" starttime="20201030 11:50:21.807" endtime="20201030 11:50:21.809"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.802" endtime="20201030 11:50:21.810"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:21.814" endtime="20201030 11:50:21.833"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.812" endtime="20201030 11:50:21.834"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.811" endtime="20201030 11:50:21.834"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.452" endtime="20201030 11:50:21.834"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.451" endtime="20201030 11:50:21.834"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:21.843" endtime="20201030 11:50:21.862"></status>
</kw>
<msg timestamp="20201030 11:50:21.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:21.842" endtime="20201030 11:50:21.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:21.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:21.863" endtime="20201030 11:50:21.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:21.866" endtime="20201030 11:50:21.868"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.839" endtime="20201030 11:50:21.868"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.837" endtime="20201030 11:50:21.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:21.875" endtime="20201030 11:50:22.160"></status>
</kw>
<msg timestamp="20201030 11:50:22.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020921611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020950389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:21.874" endtime="20201030 11:50:22.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:22.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020921611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020950389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:22.165" endtime="20201030 11:50:22.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:22.173" endtime="20201030 11:50:22.175"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.871" endtime="20201030 11:50:22.175"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.869" endtime="20201030 11:50:22.176"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:22.180" level="INFO">${RESULT} = [{'diff': 2.8778000000000137e-05}, {'diff': 2.8264000000000067e-05}, {'diff': 2.8764000000000567e-05}, {'diff': 2.8264000000000067e-05}, {'diff': 2.8249999999997027e-05}, {'diff': 2.8278000000003106e-...</msg>
<status status="PASS" starttime="20201030 11:50:22.176" endtime="20201030 11:50:22.180"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:22.184" level="INFO">${ACCURACY} = {'diff': [2.8778000000000137e-05, 2.8264000000000067e-05, 2.8764000000000567e-05, 2.8264000000000067e-05, 2.8249999999997027e-05, 2.8278000000003106e-05, 2.8264000000000067e-05, 2.9264000000001067e-05...</msg>
<status status="PASS" starttime="20201030 11:50:22.181" endtime="20201030 11:50:22.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:22.189" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201030 11:50:22.188" endtime="20201030 11:50:22.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:22.191" level="INFO">VALUE: [2.8778000000000137e-05, 2.8264000000000067e-05, 2.8764000000000567e-05, 2.8264000000000067e-05, 2.8249999999997027e-05, 2.8278000000003106e-05, 2.8264000000000067e-05, 2.9264000000001067e-05, 2.8764000000000567e-05, 2.8208000000001787e-05, 2.8764000000000567e-05, 2.8804999999999803e-05, 2.8277000000000163e-05, 2.8292000000002676e-05, 2.8763000000001093e-05, 2.8264000000000067e-05, 2.8750000000000997e-05, 2.8763999999997097e-05, 2.8750000000000997e-05, 2.8249999999997027e-05, 2.8277999999999637e-05, 2.8749999999997528e-05, 2.8277999999999637e-05, 2.8764000000000567e-05, 2.9264000000001067e-05, 2.8750000000000997e-05, 2.8277999999999637e-05, 2.8318999999998873e-05, 2.8264000000000067e-05, 2.8791999999999707e-05, 2.8778000000000137e-05, 2.8776999999997194e-05, 2.8750000000000997e-05, 2.8735999999997958e-05, 2.8264000000000067e-05, 2.8764000000000567e-05, 2.8707999999998818e-05, 2.8318999999998873e-05, 2.8277999999999637e-05, 2.8249999999997027e-05, 2.8264000000000067e-05, 2.8722000000001857e-05, 2.8264000000000067e-05, 2.8804999999999803e-05, 2.8236000000000927e-05, 2.8207999999998318e-05, 2.8264000000000067e-05, 2.8264000000000067e-05, 2.8208000000001787e-05, 2.8763000000001093e-05]</msg>
<status status="PASS" starttime="20201030 11:50:22.190" endtime="20201030 11:50:22.193"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.185" endtime="20201030 11:50:22.194"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:22.197" endtime="20201030 11:50:22.217"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.196" endtime="20201030 11:50:22.217"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.195" endtime="20201030 11:50:22.218"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.835" endtime="20201030 11:50:22.218"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.835" endtime="20201030 11:50:22.218"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:22.227" endtime="20201030 11:50:22.245"></status>
</kw>
<msg timestamp="20201030 11:50:22.245" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:22.225" endtime="20201030 11:50:22.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:22.248" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:22.246" endtime="20201030 11:50:22.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:22.249" endtime="20201030 11:50:22.251"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.223" endtime="20201030 11:50:22.251"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.221" endtime="20201030 11:50:22.252"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:22.258" endtime="20201030 11:50:22.544"></status>
</kw>
<msg timestamp="20201030 11:50:22.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019929597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019959431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:22.257" endtime="20201030 11:50:22.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:22.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019929597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019959431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:22.548" endtime="20201030 11:50:22.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:22.557" endtime="20201030 11:50:22.559"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.254" endtime="20201030 11:50:22.559"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.252" endtime="20201030 11:50:22.560"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:22.564" level="INFO">${RESULT} = [{'diff': 2.9833999999999417e-05}, {'diff': 2.9278000000000637e-05}, {'diff': 2.9777999999997667e-05}, {'diff': 2.9735999999998958e-05}, {'diff': 2.9763999999998098e-05}, {'diff': 2.9263000000001593e-...</msg>
<status status="PASS" starttime="20201030 11:50:22.560" endtime="20201030 11:50:22.564"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:22.569" level="INFO">${ACCURACY} = {'diff': [2.9833999999999417e-05, 2.9278000000000637e-05, 2.9777999999997667e-05, 2.9735999999998958e-05, 2.9763999999998098e-05, 2.9263000000001593e-05, 2.9235999999998458e-05, 3.0306000000000777e-05...</msg>
<status status="PASS" starttime="20201030 11:50:22.565" endtime="20201030 11:50:22.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:22.574" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201030 11:50:22.573" endtime="20201030 11:50:22.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:22.577" level="INFO">VALUE: [2.9833999999999417e-05, 2.9278000000000637e-05, 2.9777999999997667e-05, 2.9735999999998958e-05, 2.9763999999998098e-05, 2.9263000000001593e-05, 2.9235999999998458e-05, 3.0306000000000777e-05, 2.9763000000002093e-05, 2.9763999999998098e-05, 2.9750000000001997e-05, 2.9263999999997597e-05, 2.9278000000000637e-05, 2.9264000000001067e-05, 2.9750000000001997e-05, 2.9777999999997667e-05, 3.0263999999998598e-05, 2.9277000000001163e-05, 2.9764000000001567e-05, 3.0263999999998598e-05, 2.9749999999998528e-05, 2.9305000000000303e-05, 2.9763999999998098e-05, 2.9763999999998098e-05, 2.9764000000001567e-05, 2.9264000000001067e-05, 3.0264000000002067e-05, 3.0263999999998598e-05, 2.9264000000001067e-05, 2.9250000000001497e-05, 2.9263999999997597e-05, 2.9749999999998528e-05, 2.9764000000001567e-05, 2.9263999999997597e-05, 2.9249999999998028e-05, 2.9250000000001497e-05, 2.9264000000001067e-05, 2.9264000000001067e-05, 2.9764000000001567e-05, 2.9763999999998098e-05, 2.9291000000000733e-05, 2.9778000000001137e-05, 2.9792000000000707e-05, 3.0290999999998264e-05, 2.9763999999998098e-05, 2.9763000000002093e-05, 2.9263999999997597e-05, 2.9250000000001497e-05, 2.9763999999998098e-05, 2.9735999999998958e-05]</msg>
<status status="PASS" starttime="20201030 11:50:22.575" endtime="20201030 11:50:22.578"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.570" endtime="20201030 11:50:22.579"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:22.583" endtime="20201030 11:50:22.602"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.581" endtime="20201030 11:50:22.603"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.580" endtime="20201030 11:50:22.603"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.219" endtime="20201030 11:50:22.603"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.218" endtime="20201030 11:50:22.604"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:22.613" endtime="20201030 11:50:22.630"></status>
</kw>
<msg timestamp="20201030 11:50:22.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:22.611" endtime="20201030 11:50:22.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:22.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:22.632" endtime="20201030 11:50:22.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:22.634" endtime="20201030 11:50:22.636"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.608" endtime="20201030 11:50:22.636"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.606" endtime="20201030 11:50:22.637"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:22.643" endtime="20201030 11:50:22.930"></status>
</kw>
<msg timestamp="20201030 11:50:22.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020143514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020174264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:22.642" endtime="20201030 11:50:22.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:22.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020143514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020174264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:22.934" endtime="20201030 11:50:22.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:22.943" endtime="20201030 11:50:22.944"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.639" endtime="20201030 11:50:22.945"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.637" endtime="20201030 11:50:22.945"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:22.950" level="INFO">${RESULT} = [{'diff': 3.074999999999953e-05}, {'diff': 3.079199999999824e-05}, {'diff': 3.077800000000214e-05}, {'diff': 3.0277000000002163e-05}, {'diff': 3.0263000000002593e-05}, {'diff': 3.0249999999999028e-05}...</msg>
<status status="PASS" starttime="20201030 11:50:22.946" endtime="20201030 11:50:22.950"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:22.954" level="INFO">${ACCURACY} = {'diff': [3.074999999999953e-05, 3.079199999999824e-05, 3.077800000000214e-05, 3.0277000000002163e-05, 3.0263000000002593e-05, 3.0249999999999028e-05, 3.0750000000003e-05, 3.0263999999998598e-05, 3.07...</msg>
<status status="PASS" starttime="20201030 11:50:22.951" endtime="20201030 11:50:22.954"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:22.959" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201030 11:50:22.957" endtime="20201030 11:50:22.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:22.961" level="INFO">VALUE: [3.074999999999953e-05, 3.079199999999824e-05, 3.077800000000214e-05, 3.0277000000002163e-05, 3.0263000000002593e-05, 3.0249999999999028e-05, 3.0750000000003e-05, 3.0263999999998598e-05, 3.074999999999953e-05, 3.125000000000003e-05, 3.12639999999996e-05, 3.07639999999991e-05, 3.077700000000266e-05, 3.079100000000223e-05, 3.0263999999998598e-05, 3.0262999999999124e-05, 3.074999999999953e-05, 3.073599999999996e-05, 3.0264000000002067e-05, 3.0249999999999028e-05, 3.073599999999996e-05, 3.12639999999996e-05, 3.077800000000214e-05, 3.073599999999996e-05, 3.080600000000128e-05, 3.0291000000001733e-05, 3.0235999999999458e-05, 3.073599999999996e-05, 3.077800000000214e-05, 3.0776999999999194e-05, 3.080599999999781e-05, 3.12639999999996e-05, 3.077799999999867e-05, 3.0278000000001637e-05, 3.127799999999917e-05, 3.07639999999991e-05, 3.069399999999778e-05, 3.074999999999953e-05, 3.076400000000257e-05, 3.0249999999999028e-05, 3.0263999999998598e-05, 3.0762999999999624e-05, 3.0263999999998598e-05, 3.0306000000000777e-05, 3.0249999999999028e-05, 3.126400000000307e-05, 3.0180000000001178e-05, 3.0264000000002067e-05, 3.07639999999991e-05, 3.077799999999867e-05]</msg>
<status status="PASS" starttime="20201030 11:50:22.960" endtime="20201030 11:50:22.962"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.955" endtime="20201030 11:50:22.962"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:22.966" endtime="20201030 11:50:22.986"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.965" endtime="20201030 11:50:22.986"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.963" endtime="20201030 11:50:22.986"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.605" endtime="20201030 11:50:22.987"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.604" endtime="20201030 11:50:22.987"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:22.996" endtime="20201030 11:50:23.015"></status>
</kw>
<msg timestamp="20201030 11:50:23.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:22.994" endtime="20201030 11:50:23.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:23.018" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:23.017" endtime="20201030 11:50:23.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:23.019" endtime="20201030 11:50:23.021"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.992" endtime="20201030 11:50:23.022"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.990" endtime="20201030 11:50:23.022"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:23.029" endtime="20201030 11:50:23.315"></status>
</kw>
<msg timestamp="20201030 11:50:23.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021009208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021075222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:23.027" endtime="20201030 11:50:23.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:23.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021009208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021075222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:23.319" endtime="20201030 11:50:23.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:23.328" endtime="20201030 11:50:23.329"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.024" endtime="20201030 11:50:23.330"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.023" endtime="20201030 11:50:23.330"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:23.334" level="INFO">${RESULT} = [{'diff': 6.601399999999966e-05}, {'diff': 3.5152999999999573e-05}, {'diff': 3.543099999999896e-05}, {'diff': 3.501399999999988e-05}, {'diff': 3.5304999999999365e-05}, {'diff': 3.5568999999999185e-05}...</msg>
<status status="PASS" starttime="20201030 11:50:23.331" endtime="20201030 11:50:23.335"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:23.339" level="INFO">${ACCURACY} = {'diff': [6.601399999999966e-05, 3.5152999999999573e-05, 3.543099999999896e-05, 3.501399999999988e-05, 3.5304999999999365e-05, 3.5568999999999185e-05, 3.6875000000002184e-05, 3.5054999999999115e-05, 3...</msg>
<status status="PASS" starttime="20201030 11:50:23.335" endtime="20201030 11:50:23.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:23.343" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201030 11:50:23.342" endtime="20201030 11:50:23.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:23.346" level="INFO">VALUE: [6.601399999999966e-05, 3.5152999999999573e-05, 3.543099999999896e-05, 3.501399999999988e-05, 3.5304999999999365e-05, 3.5568999999999185e-05, 3.6875000000002184e-05, 3.5054999999999115e-05, 3.551400000000038e-05, 3.5624999999997464e-05, 3.551399999999691e-05, 3.544399999999906e-05, 3.494400000000203e-05, 3.501399999999988e-05, 3.5597000000001794e-05, 3.5554999999999615e-05, 3.526400000000013e-05, 3.4902999999999323e-05, 3.520900000000132e-05, 3.506999999999816e-05, 3.506999999999816e-05, 3.525000000000056e-05, 3.5360999999997644e-05, 3.49450000000015e-05, 3.507000000000163e-05, 3.555599999999909e-05, 3.5139000000000004e-05, 3.6889000000001754e-05, 3.533400000000145e-05, 3.520800000000185e-05, 3.5040999999999545e-05, 3.5319000000002404e-05, 3.6762999999998686e-05, 3.573600000000149e-05, 3.5304999999999365e-05, 3.5389000000000254e-05, 3.6875000000002184e-05, 3.6818999999996965e-05, 3.6790999999997825e-05, 3.6846999999999575e-05, 3.5069000000002154e-05, 3.544399999999906e-05, 3.505599999999859e-05, 3.494400000000203e-05, 3.5416999999999393e-05, 3.507000000000163e-05, 3.49719999999977e-05, 3.5625000000000934e-05, 3.6931000000000463e-05, 3.533399999999798e-05]</msg>
<status status="PASS" starttime="20201030 11:50:23.345" endtime="20201030 11:50:23.348"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.340" endtime="20201030 11:50:23.348"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:23.352" endtime="20201030 11:50:23.371"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.350" endtime="20201030 11:50:23.372"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.349" endtime="20201030 11:50:23.372"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.988" endtime="20201030 11:50:23.373"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.987" endtime="20201030 11:50:23.373"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:23.382" endtime="20201030 11:50:23.402"></status>
</kw>
<msg timestamp="20201030 11:50:23.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:23.380" endtime="20201030 11:50:23.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:23.405" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:23.403" endtime="20201030 11:50:23.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:23.406" endtime="20201030 11:50:23.408"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.377" endtime="20201030 11:50:23.408"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.375" endtime="20201030 11:50:23.409"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:23.415" endtime="20201030 11:50:23.702"></status>
</kw>
<msg timestamp="20201030 11:50:23.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019947153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019983458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:23.414" endtime="20201030 11:50:23.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:23.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019947153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019983458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:23.706" endtime="20201030 11:50:23.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:23.714" endtime="20201030 11:50:23.716"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.411" endtime="20201030 11:50:23.717"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.409" endtime="20201030 11:50:23.717"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:23.721" level="INFO">${RESULT} = [{'diff': 3.6305000000000365e-05}, {'diff': 3.6610999999998894e-05}, {'diff': 3.6346999999999074e-05}, {'diff': 3.6569000000000185e-05}, {'diff': 3.7818999999997965e-05}, {'diff': 3.7931000000001464e-...</msg>
<status status="PASS" starttime="20201030 11:50:23.718" endtime="20201030 11:50:23.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:23.726" level="INFO">${ACCURACY} = {'diff': [3.6305000000000365e-05, 3.6610999999998894e-05, 3.6346999999999074e-05, 3.6569000000000185e-05, 3.7818999999997965e-05, 3.7931000000001464e-05, 3.6125000000001434e-05, 3.626400000000113e-05,...</msg>
<status status="PASS" starttime="20201030 11:50:23.722" endtime="20201030 11:50:23.727"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:23.731" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201030 11:50:23.730" endtime="20201030 11:50:23.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:23.734" level="INFO">VALUE: [3.6305000000000365e-05, 3.6610999999998894e-05, 3.6346999999999074e-05, 3.6569000000000185e-05, 3.7818999999997965e-05, 3.7931000000001464e-05, 3.6125000000001434e-05, 3.626400000000113e-05, 3.620800000000285e-05, 3.6833000000000005e-05, 3.64589999999991e-05, 3.5916999999999893e-05, 3.60840000000022e-05, 3.6138999999997534e-05, 3.601400000000088e-05, 3.633399999999898e-05, 3.657000000000313e-05, 3.595799999999913e-05, 3.676399999999816e-05, 3.594399999999956e-05, 3.648599999999877e-05, 3.6055000000000115e-05, 3.674999999999859e-05, 3.6582999999999755e-05, 3.6055000000000115e-05, 3.6291000000000795e-05, 3.6055000000000115e-05, 3.595799999999913e-05, 3.619399999999981e-05, 3.6582999999999755e-05, 3.6167000000000143e-05, 3.620800000000285e-05, 3.6096999999998824e-05, 3.670799999999988e-05, 3.6388999999997784e-05, 3.6361000000002114e-05, 3.62780000000007e-05, 3.6389000000001254e-05, 3.633400000000245e-05, 3.600000000000131e-05, 3.7889000000002754e-05, 3.652800000000095e-05, 3.674999999999859e-05, 3.619500000000275e-05, 3.670899999999935e-05, 3.6625000000001934e-05, 3.644499999999953e-05, 3.7861000000000145e-05, 3.622199999999895e-05, 3.593099999999946e-05]</msg>
<status status="PASS" starttime="20201030 11:50:23.732" endtime="20201030 11:50:23.734"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.727" endtime="20201030 11:50:23.735"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:23.739" endtime="20201030 11:50:23.758"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.737" endtime="20201030 11:50:23.759"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.736" endtime="20201030 11:50:23.759"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.374" endtime="20201030 11:50:23.759"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.373" endtime="20201030 11:50:23.760"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:23.768" endtime="20201030 11:50:23.786"></status>
</kw>
<msg timestamp="20201030 11:50:23.786" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:23.767" endtime="20201030 11:50:23.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:23.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:23.787" endtime="20201030 11:50:23.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:23.790" endtime="20201030 11:50:23.792"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.764" endtime="20201030 11:50:23.792"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.762" endtime="20201030 11:50:23.793"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:23.799" endtime="20201030 11:50:24.088"></status>
</kw>
<msg timestamp="20201030 11:50:24.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019976181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020013819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:23.798" endtime="20201030 11:50:24.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:24.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019976181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020013819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:24.092" endtime="20201030 11:50:24.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:24.100" endtime="20201030 11:50:24.102"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.795" endtime="20201030 11:50:24.103"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.793" endtime="20201030 11:50:24.103"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:24.107" level="INFO">${RESULT} = [{'diff': 3.763799999999956e-05}, {'diff': 3.7153000000001574e-05}, {'diff': 3.725000000000256e-05}, {'diff': 3.725000000000256e-05}, {'diff': 3.776399999999916e-05}, {'diff': 3.7333000000000505e-05},...</msg>
<status status="PASS" starttime="20201030 11:50:24.104" endtime="20201030 11:50:24.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:24.112" level="INFO">${ACCURACY} = {'diff': [3.763799999999956e-05, 3.7153000000001574e-05, 3.725000000000256e-05, 3.725000000000256e-05, 3.776399999999916e-05, 3.7333000000000505e-05, 3.750000000000281e-05, 3.719399999999734e-05, 3.88...</msg>
<status status="PASS" starttime="20201030 11:50:24.108" endtime="20201030 11:50:24.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:24.116" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201030 11:50:24.115" endtime="20201030 11:50:24.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:24.119" level="INFO">VALUE: [3.763799999999956e-05, 3.7153000000001574e-05, 3.725000000000256e-05, 3.725000000000256e-05, 3.776399999999916e-05, 3.7333000000000505e-05, 3.750000000000281e-05, 3.719399999999734e-05, 3.8847000000001575e-05, 3.7125000000002434e-05, 3.755599999999762e-05, 3.720800000000038e-05, 3.8832999999998535e-05, 3.752799999999848e-05, 3.7445000000000533e-05, 3.694500000000003e-05, 3.773600000000002e-05, 3.8875000000000715e-05, 3.7153000000001574e-05, 3.7610999999999895e-05, 3.7055000000001115e-05, 3.724999999999909e-05, 3.701400000000188e-05, 3.7833000000001005e-05, 3.7181000000000713e-05, 3.8861000000001145e-05, 3.751399999999891e-05, 3.72919999999978e-05, 3.695800000000013e-05, 3.7611000000003364e-05, 3.726399999999866e-05, 3.8902999999999854e-05, 3.741600000000192e-05, 3.7624999999999464e-05, 3.776399999999916e-05, 3.7139000000002004e-05, 3.7111000000002864e-05, 3.8818999999998965e-05, 3.755599999999762e-05, 3.7347000000000075e-05, 3.7431000000000964e-05, 3.7445000000000533e-05, 3.7610999999999895e-05, 3.694500000000003e-05, 3.733399999999998e-05, 3.749999999999934e-05, 3.7195000000000283e-05, 3.7403000000001824e-05, 3.697200000000317e-05, 3.7666999999998174e-05]</msg>
<status status="PASS" starttime="20201030 11:50:24.117" endtime="20201030 11:50:24.119"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.112" endtime="20201030 11:50:24.120"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:24.124" endtime="20201030 11:50:24.143"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.122" endtime="20201030 11:50:24.144"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.121" endtime="20201030 11:50:24.144"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.760" endtime="20201030 11:50:24.144"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.760" endtime="20201030 11:50:24.144"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:24.153" endtime="20201030 11:50:24.172"></status>
</kw>
<msg timestamp="20201030 11:50:24.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:24.152" endtime="20201030 11:50:24.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:24.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:24.174" endtime="20201030 11:50:24.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:24.176" endtime="20201030 11:50:24.178"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.149" endtime="20201030 11:50:24.179"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.147" endtime="20201030 11:50:24.179"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:24.186" endtime="20201030 11:50:24.471"></status>
</kw>
<msg timestamp="20201030 11:50:24.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020863083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020901792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:24.184" endtime="20201030 11:50:24.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:24.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020863083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020901792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:24.476" endtime="20201030 11:50:24.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:24.484" endtime="20201030 11:50:24.486"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.182" endtime="20201030 11:50:24.486"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.180" endtime="20201030 11:50:24.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:24.491" level="INFO">${RESULT} = [{'diff': 3.8708999999997884e-05}, {'diff': 3.831999999999794e-05}, {'diff': 3.834800000000055e-05}, {'diff': 3.9889000000001285e-05}, {'diff': 3.848700000000024e-05}, {'diff': 3.980599999999987e-05},...</msg>
<status status="PASS" starttime="20201030 11:50:24.487" endtime="20201030 11:50:24.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:24.495" level="INFO">${ACCURACY} = {'diff': [3.8708999999997884e-05, 3.831999999999794e-05, 3.834800000000055e-05, 3.9889000000001285e-05, 3.848700000000024e-05, 3.980599999999987e-05, 3.869400000000231e-05, 3.875000000000059e-05, 3.82...</msg>
<status status="PASS" starttime="20201030 11:50:24.492" endtime="20201030 11:50:24.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:24.500" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201030 11:50:24.499" endtime="20201030 11:50:24.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:24.502" level="INFO">VALUE: [3.8708999999997884e-05, 3.831999999999794e-05, 3.834800000000055e-05, 3.9889000000001285e-05, 3.848700000000024e-05, 3.980599999999987e-05, 3.869400000000231e-05, 3.875000000000059e-05, 3.823600000000052e-05, 3.848600000000077e-05, 3.841599999999945e-05, 3.844400000000206e-05, 3.84720000000012e-05, 3.8111000000000395e-05, 3.9889000000001285e-05, 3.867999999999927e-05, 3.8582999999998285e-05, 3.851399999999991e-05, 3.8597000000001325e-05, 3.980599999999987e-05, 3.829200000000227e-05, 3.875000000000059e-05, 3.823599999999705e-05, 3.876400000000016e-05, 3.8388999999999784e-05, 3.827799999999923e-05, 3.8111000000000395e-05, 3.980599999999987e-05, 3.815199999999963e-05, 3.804199999999855e-05, 3.854199999999905e-05, 3.799999999999984e-05, 3.8124999999999964e-05, 3.8291000000002795e-05, 3.8318999999998465e-05, 3.8388999999999784e-05, 3.857000000000166e-05, 3.8417000000002394e-05, 3.9818999999999966e-05, 3.823600000000052e-05, 3.869399999999884e-05, 3.799999999999984e-05, 3.852799999999948e-05, 3.844399999999859e-05, 3.8804999999999396e-05, 3.8639000000000034e-05, 3.8152999999999104e-05, 3.876400000000016e-05, 3.7931000000001464e-05, 3.826399999999966e-05]</msg>
<status status="PASS" starttime="20201030 11:50:24.501" endtime="20201030 11:50:24.504"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.496" endtime="20201030 11:50:24.504"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:24.508" endtime="20201030 11:50:24.528"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.507" endtime="20201030 11:50:24.528"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.505" endtime="20201030 11:50:24.529"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.145" endtime="20201030 11:50:24.529"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.145" endtime="20201030 11:50:24.529"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:24.538" endtime="20201030 11:50:24.556"></status>
</kw>
<msg timestamp="20201030 11:50:24.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:24.536" endtime="20201030 11:50:24.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:24.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:24.558" endtime="20201030 11:50:24.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:24.561" endtime="20201030 11:50:24.562"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.534" endtime="20201030 11:50:24.563"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.532" endtime="20201030 11:50:24.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:24.570" endtime="20201030 11:50:24.856"></status>
</kw>
<msg timestamp="20201030 11:50:24.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019949, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019988292, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:50:24.568" endtime="20201030 11:50:24.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:24.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019949, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019988292, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:50:24.860" endtime="20201030 11:50:24.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:24.868" endtime="20201030 11:50:24.870"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.566" endtime="20201030 11:50:24.871"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.564" endtime="20201030 11:50:24.871"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:24.875" level="INFO">${RESULT} = [{'diff': 3.92919999999998e-05}, {'diff': 4.076399999999869e-05}, {'diff': 3.901400000000041e-05}, {'diff': 3.955599999999962e-05}, {'diff': 3.9375000000001215e-05}, {'diff': 3.9012999999997466e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:50:24.872" endtime="20201030 11:50:24.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:24.880" level="INFO">${ACCURACY} = {'diff': [3.92919999999998e-05, 4.076399999999869e-05, 3.901400000000041e-05, 3.955599999999962e-05, 3.9375000000001215e-05, 3.9012999999997466e-05, 3.915200000000063e-05, 3.974999999999812e-05, 3.931...</msg>
<status status="PASS" starttime="20201030 11:50:24.876" endtime="20201030 11:50:24.881"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:24.885" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201030 11:50:24.884" endtime="20201030 11:50:24.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:24.888" level="INFO">VALUE: [3.92919999999998e-05, 4.076399999999869e-05, 3.901400000000041e-05, 3.955599999999962e-05, 3.9375000000001215e-05, 3.9012999999997466e-05, 3.915200000000063e-05, 3.974999999999812e-05, 3.9318999999999465e-05, 3.924999999999762e-05, 3.923600000000152e-05, 3.9153000000000104e-05, 3.980599999999987e-05, 3.969399999999984e-05, 3.976399999999769e-05, 3.9318999999999465e-05, 3.897199999999823e-05, 3.975000000000159e-05, 3.9611000000001895e-05, 3.89859999999978e-05, 3.8944999999998564e-05, 3.908400000000173e-05, 3.904199999999955e-05, 3.897199999999823e-05, 3.926400000000066e-05, 3.905600000000259e-05, 3.9223000000001423e-05, 3.9458999999998634e-05, 3.936200000000112e-05, 3.9194999999998814e-05, 3.919399999999934e-05, 3.901400000000041e-05, 3.969399999999984e-05, 4.090200000000238e-05, 3.975000000000159e-05, 3.943000000000002e-05, 3.9596999999998855e-05, 3.943000000000002e-05, 3.9347000000002075e-05, 4.0902999999998385e-05, 3.9068999999999215e-05, 3.9346999999998605e-05, 3.9153000000000104e-05, 3.975000000000159e-05, 3.9639000000001035e-05, 3.9403000000000354e-05, 3.974999999999812e-05, 3.900000000000084e-05, 3.9652999999997135e-05, 3.9708999999998884e-05]</msg>
<status status="PASS" starttime="20201030 11:50:24.886" endtime="20201030 11:50:24.888"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.881" endtime="20201030 11:50:24.889"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:24.893" endtime="20201030 11:50:24.912"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.891" endtime="20201030 11:50:24.913"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.890" endtime="20201030 11:50:24.913"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.530" endtime="20201030 11:50:24.913"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.529" endtime="20201030 11:50:24.913"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:24.922" endtime="20201030 11:50:24.940"></status>
</kw>
<msg timestamp="20201030 11:50:24.941" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:24.921" endtime="20201030 11:50:24.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:24.943" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:24.942" endtime="20201030 11:50:24.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:24.944" endtime="20201030 11:50:24.946"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.918" endtime="20201030 11:50:24.947"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.916" endtime="20201030 11:50:24.947"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:24.954" endtime="20201030 11:50:25.240"></status>
</kw>
<msg timestamp="20201030 11:50:25.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020078417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020118972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:24.952" endtime="20201030 11:50:25.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:25.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020078417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020118972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:25.245" endtime="20201030 11:50:25.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:25.253" endtime="20201030 11:50:25.255"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.950" endtime="20201030 11:50:25.255"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.948" endtime="20201030 11:50:25.256"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:25.260" level="INFO">${RESULT} = [{'diff': 4.0554999999997676e-05}, {'diff': 3.997199999999923e-05}, {'diff': 4.002799999999751e-05}, {'diff': 4.1875000000000245e-05}, {'diff': 4.052799999999801e-05}, {'diff': 4.076399999999869e-05},...</msg>
<status status="PASS" starttime="20201030 11:50:25.256" endtime="20201030 11:50:25.260"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:25.264" level="INFO">${ACCURACY} = {'diff': [4.0554999999997676e-05, 3.997199999999923e-05, 4.002799999999751e-05, 4.1875000000000245e-05, 4.052799999999801e-05, 4.076399999999869e-05, 3.999999999999837e-05, 4.024999999999862e-05, 4.00...</msg>
<status status="PASS" starttime="20201030 11:50:25.261" endtime="20201030 11:50:25.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:25.269" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201030 11:50:25.268" endtime="20201030 11:50:25.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:25.271" level="INFO">VALUE: [4.0554999999997676e-05, 3.997199999999923e-05, 4.002799999999751e-05, 4.1875000000000245e-05, 4.052799999999801e-05, 4.076399999999869e-05, 3.999999999999837e-05, 4.024999999999862e-05, 4.0069000000000216e-05, 4.0596999999999855e-05, 4.000000000000184e-05, 3.999999999999837e-05, 4.1860999999997206e-05, 4.180600000000187e-05, 4.180600000000187e-05, 4.058399999999976e-05, 4.0445000000000064e-05, 4.0194999999999814e-05, 4.076399999999869e-05, 3.999999999999837e-05, 4.1888999999999815e-05, 3.997199999999923e-05, 4.069400000000084e-05, 4.025000000000209e-05, 4.0319000000000466e-05, 4.030600000000037e-05, 4.1875000000000245e-05, 4.045800000000016e-05, 4.0124999999998495e-05, 4.1833000000001536e-05, 4.072199999999998e-05, 4.044399999999712e-05, 3.9917000000000424e-05, 4.051399999999844e-05, 4.1888999999999815e-05, 4.0389000000001785e-05, 4.1916999999998955e-05, 4.058399999999976e-05, 4.1875000000000245e-05, 4.0375000000002215e-05, 4.18059999999984e-05, 4.1888999999999815e-05, 4.076400000000216e-05, 4.0554999999997676e-05, 4.058399999999976e-05, 4.04859999999993e-05, 4.057000000000019e-05, 4.019400000000034e-05, 4.0681000000000744e-05, 4.0777000000002256e-05]</msg>
<status status="PASS" starttime="20201030 11:50:25.270" endtime="20201030 11:50:25.272"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.265" endtime="20201030 11:50:25.273"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:25.276" endtime="20201030 11:50:25.296"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.275" endtime="20201030 11:50:25.296"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.274" endtime="20201030 11:50:25.297"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.914" endtime="20201030 11:50:25.297"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.914" endtime="20201030 11:50:25.297"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:25.306" endtime="20201030 11:50:25.326"></status>
</kw>
<msg timestamp="20201030 11:50:25.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:25.304" endtime="20201030 11:50:25.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:25.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:25.327" endtime="20201030 11:50:25.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:25.330" endtime="20201030 11:50:25.331"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.302" endtime="20201030 11:50:25.332"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.300" endtime="20201030 11:50:25.332"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:25.339" endtime="20201030 11:50:25.625"></status>
</kw>
<msg timestamp="20201030 11:50:25.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020998958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02104175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:25.338" endtime="20201030 11:50:25.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:25.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020998958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02104175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:25.629" endtime="20201030 11:50:25.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:25.638" endtime="20201030 11:50:25.640"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.335" endtime="20201030 11:50:25.640"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.333" endtime="20201030 11:50:25.641"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:25.645" level="INFO">${RESULT} = [{'diff': 4.279199999999983e-05}, {'diff': 4.1332999999997566e-05}, {'diff': 4.151399999999944e-05}, {'diff': 4.158400000000076e-05}, {'diff': 4.175000000000012e-05}, {'diff': 4.105600000000112e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:50:25.642" endtime="20201030 11:50:25.645"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:25.649" level="INFO">${ACCURACY} = {'diff': [4.279199999999983e-05, 4.1332999999997566e-05, 4.151399999999944e-05, 4.158400000000076e-05, 4.175000000000012e-05, 4.105600000000112e-05, 4.133400000000051e-05, 4.1638999999999565e-05, 4.29...</msg>
<status status="PASS" starttime="20201030 11:50:25.646" endtime="20201030 11:50:25.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:25.654" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201030 11:50:25.653" endtime="20201030 11:50:25.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:25.656" level="INFO">VALUE: [4.279199999999983e-05, 4.1332999999997566e-05, 4.151399999999944e-05, 4.158400000000076e-05, 4.175000000000012e-05, 4.105600000000112e-05, 4.133400000000051e-05, 4.1638999999999565e-05, 4.2902999999996916e-05, 4.2832999999999066e-05, 4.1012999999999467e-05, 4.1083000000000786e-05, 4.286200000000115e-05, 4.1026999999999036e-05, 4.1568999999998246e-05, 4.151399999999944e-05, 4.1068999999997746e-05, 4.1138999999999065e-05, 4.172200000000098e-05, 4.175000000000012e-05, 4.169400000000184e-05, 4.169399999999837e-05, 4.101400000000241e-05, 4.097200000000023e-05, 4.1681000000001744e-05, 4.1068999999997746e-05, 4.1388999999999315e-05, 4.132000000000094e-05, 4.0959000000000134e-05, 4.124999999999962e-05, 4.1417000000001924e-05, 4.276400000000069e-05, 4.1138999999999065e-05, 4.159800000000033e-05, 4.1208999999996915e-05, 4.1403000000002355e-05, 4.158400000000076e-05, 4.1026999999999036e-05, 4.107000000000069e-05, 4.119399999999787e-05, 4.165199999999966e-05, 4.140199999999941e-05, 4.1652999999999135e-05, 4.1180999999997775e-05, 4.122200000000048e-05, 4.126399999999919e-05, 4.145800000000116e-05, 4.132000000000094e-05, 4.1069000000001216e-05, 4.1638999999999565e-05]</msg>
<status status="PASS" starttime="20201030 11:50:25.655" endtime="20201030 11:50:25.658"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.650" endtime="20201030 11:50:25.659"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:25.662" endtime="20201030 11:50:25.682"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.661" endtime="20201030 11:50:25.682"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.660" endtime="20201030 11:50:25.683"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.298" endtime="20201030 11:50:25.683"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.297" endtime="20201030 11:50:25.683"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:25.692" endtime="20201030 11:50:25.711"></status>
</kw>
<msg timestamp="20201030 11:50:25.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:25.691" endtime="20201030 11:50:25.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:25.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:25.712" endtime="20201030 11:50:25.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:25.715" endtime="20201030 11:50:25.717"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.688" endtime="20201030 11:50:25.717"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.686" endtime="20201030 11:50:25.718"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:25.724" endtime="20201030 11:50:26.011"></status>
</kw>
<msg timestamp="20201030 11:50:26.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020092708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020134931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:25.723" endtime="20201030 11:50:26.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:26.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020092708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020134931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:26.015" endtime="20201030 11:50:26.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:26.023" endtime="20201030 11:50:26.025"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.720" endtime="20201030 11:50:26.026"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.718" endtime="20201030 11:50:26.026"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:26.030" level="INFO">${RESULT} = [{'diff': 4.2222999999997485e-05}, {'diff': 4.2375000000000745e-05}, {'diff': 4.2180999999998775e-05}, {'diff': 4.2583000000002286e-05}, {'diff': 4.3860999999999206e-05}, {'diff': 4.276400000000069e-0...</msg>
<status status="PASS" starttime="20201030 11:50:26.027" endtime="20201030 11:50:26.031"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:26.035" level="INFO">${ACCURACY} = {'diff': [4.2222999999997485e-05, 4.2375000000000745e-05, 4.2180999999998775e-05, 4.2583000000002286e-05, 4.3860999999999206e-05, 4.276400000000069e-05, 4.2388999999996846e-05, 4.26799999999998e-05, 4...</msg>
<status status="PASS" starttime="20201030 11:50:26.031" endtime="20201030 11:50:26.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:26.040" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201030 11:50:26.039" endtime="20201030 11:50:26.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:26.043" level="INFO">VALUE: [4.2222999999997485e-05, 4.2375000000000745e-05, 4.2180999999998775e-05, 4.2583000000002286e-05, 4.3860999999999206e-05, 4.276400000000069e-05, 4.2388999999996846e-05, 4.26799999999998e-05, 4.21799999999993e-05, 4.227799999999976e-05, 4.2791000000000357e-05, 4.3888999999998346e-05, 4.248599999999783e-05, 4.2111000000000925e-05, 4.201399999999994e-05, 4.3833000000000066e-05, 4.244399999999912e-05, 4.2040999999999606e-05, 4.1930999999998525e-05, 4.256999999999872e-05, 4.258400000000176e-05, 4.279199999999983e-05, 4.226400000000019e-05, 4.2625000000000995e-05, 4.2430999999999025e-05, 4.381999999999997e-05, 4.2111000000000925e-05, 4.194399999999862e-05, 4.215200000000016e-05, 4.2639000000000565e-05, 4.2568999999999246e-05, 4.276400000000069e-05, 4.198599999999733e-05, 4.248599999999783e-05, 4.2375000000000745e-05, 4.2611000000001426e-05, 4.231999999999847e-05, 4.3833000000000066e-05, 4.219399999999887e-05, 4.227799999999976e-05, 4.197199999999776e-05, 4.19860000000008e-05, 4.222199999999801e-05, 4.24860000000013e-05, 4.2111000000000925e-05, 4.256999999999872e-05, 4.2139000000000065e-05, 4.1930999999998525e-05, 4.234799999999761e-05, 4.200000000000037e-05]</msg>
<status status="PASS" starttime="20201030 11:50:26.041" endtime="20201030 11:50:26.043"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.036" endtime="20201030 11:50:26.044"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:26.048" endtime="20201030 11:50:26.067"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.046" endtime="20201030 11:50:26.068"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.045" endtime="20201030 11:50:26.068"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.684" endtime="20201030 11:50:26.068"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.683" endtime="20201030 11:50:26.069"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:26.078" endtime="20201030 11:50:26.096"></status>
</kw>
<msg timestamp="20201030 11:50:26.096" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:26.076" endtime="20201030 11:50:26.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:26.099" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:26.098" endtime="20201030 11:50:26.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:26.100" endtime="20201030 11:50:26.102"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.073" endtime="20201030 11:50:26.102"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.071" endtime="20201030 11:50:26.103"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:26.110" endtime="20201030 11:50:26.397"></status>
</kw>
<msg timestamp="20201030 11:50:26.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020181917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020224917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:26.108" endtime="20201030 11:50:26.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:26.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020181917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020224917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:26.401" endtime="20201030 11:50:26.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:26.410" endtime="20201030 11:50:26.412"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.105" endtime="20201030 11:50:26.412"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.104" endtime="20201030 11:50:26.413"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:26.417" level="INFO">${RESULT} = [{'diff': 4.29999999999979e-05}, {'diff': 4.334800000000208e-05}, {'diff': 4.34999999999984e-05}, {'diff': 4.355600000000015e-05}, {'diff': 4.370799999999994e-05}, {'diff': 4.3237000000001524e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:50:26.413" endtime="20201030 11:50:26.417"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:26.421" level="INFO">${ACCURACY} = {'diff': [4.29999999999979e-05, 4.334800000000208e-05, 4.34999999999984e-05, 4.355600000000015e-05, 4.370799999999994e-05, 4.3237000000001524e-05, 4.3375000000001745e-05, 4.3610999999998956e-05, 4.338...</msg>
<status status="PASS" starttime="20201030 11:50:26.418" endtime="20201030 11:50:26.421"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:26.425" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201030 11:50:26.424" endtime="20201030 11:50:26.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:26.428" level="INFO">VALUE: [4.29999999999979e-05, 4.334800000000208e-05, 4.34999999999984e-05, 4.355600000000015e-05, 4.370799999999994e-05, 4.3237000000001524e-05, 4.3375000000001745e-05, 4.3610999999998956e-05, 4.3389000000001315e-05, 4.301399999999747e-05, 4.3403000000000885e-05, 4.480499999999846e-05, 4.344400000000012e-05, 4.323599999999858e-05, 4.354200000000058e-05, 4.295799999999919e-05, 4.297200000000223e-05, 4.3318999999999996e-05, 4.3431000000000025e-05, 4.483400000000054e-05, 4.3667000000000705e-05, 4.372199999999951e-05, 4.357000000000319e-05, 4.374999999999865e-05, 4.3291000000000857e-05, 4.306999999999922e-05, 4.306999999999922e-05, 4.370800000000341e-05, 4.301300000000147e-05, 4.484699999999717e-05, 4.333400000000251e-05, 4.344400000000012e-05, 4.3305000000000426e-05, 4.4930999999998056e-05, 4.4874999999999776e-05, 4.3638999999998096e-05, 4.294399999999962e-05, 4.370799999999994e-05, 4.31800000000003e-05, 4.3110999999998456e-05, 4.4916999999998486e-05, 4.3624999999998526e-05, 4.488799999999987e-05, 4.331999999999947e-05, 4.483399999999707e-05, 4.3709000000002884e-05, 4.482000000000097e-05, 4.2958999999998665e-05, 4.381999999999997e-05, 4.302800000000051e-05]</msg>
<status status="PASS" starttime="20201030 11:50:26.426" endtime="20201030 11:50:26.429"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.422" endtime="20201030 11:50:26.429"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:26.433" endtime="20201030 11:50:26.452"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.432" endtime="20201030 11:50:26.453"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.430" endtime="20201030 11:50:26.453"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.070" endtime="20201030 11:50:26.454"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.069" endtime="20201030 11:50:26.454"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:26.463" endtime="20201030 11:50:26.483"></status>
</kw>
<msg timestamp="20201030 11:50:26.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:26.461" endtime="20201030 11:50:26.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:26.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:26.484" endtime="20201030 11:50:26.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:26.487" endtime="20201030 11:50:26.488"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.459" endtime="20201030 11:50:26.489"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.456" endtime="20201030 11:50:26.489"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:26.496" endtime="20201030 11:50:26.782"></status>
</kw>
<msg timestamp="20201030 11:50:26.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020988292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021032208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:26.494" endtime="20201030 11:50:26.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:26.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020988292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021032208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:26.786" endtime="20201030 11:50:26.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:26.795" endtime="20201030 11:50:26.797"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.492" endtime="20201030 11:50:26.797"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.490" endtime="20201030 11:50:26.798"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:26.802" level="INFO">${RESULT} = [{'diff': 4.391600000000148e-05}, {'diff': 4.4167000000001205e-05}, {'diff': 4.423599999999958e-05}, {'diff': 4.420800000000044e-05}, {'diff': 4.4403000000001885e-05}, {'diff': 4.4388999999998846e-05}...</msg>
<status status="PASS" starttime="20201030 11:50:26.799" endtime="20201030 11:50:26.802"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:26.806" level="INFO">${ACCURACY} = {'diff': [4.391600000000148e-05, 4.4167000000001205e-05, 4.423599999999958e-05, 4.420800000000044e-05, 4.4403000000001885e-05, 4.4388999999998846e-05, 4.395800000000019e-05, 4.422200000000001e-05, 4.4...</msg>
<status status="PASS" starttime="20201030 11:50:26.803" endtime="20201030 11:50:26.806"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:26.811" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201030 11:50:26.810" endtime="20201030 11:50:26.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:26.813" level="INFO">VALUE: [4.391600000000148e-05, 4.4167000000001205e-05, 4.423599999999958e-05, 4.420800000000044e-05, 4.4403000000001885e-05, 4.4388999999998846e-05, 4.395800000000019e-05, 4.422200000000001e-05, 4.4667000000001705e-05, 4.457000000000072e-05, 4.579199999999936e-05, 4.4138999999998596e-05, 4.4110999999999456e-05, 4.4195000000000345e-05, 4.4096999999999886e-05, 4.474999999999965e-05, 4.476399999999922e-05, 4.458299999999735e-05, 4.3931000000000525e-05, 4.469400000000137e-05, 4.415199999999869e-05, 4.438800000000284e-05, 4.420800000000044e-05, 4.444399999999765e-05, 4.4055000000001177e-05, 4.479199999999836e-05, 4.4110999999999456e-05, 4.401400000000194e-05, 4.58190000000025e-05, 4.4569000000001247e-05, 4.432000000000047e-05, 4.455600000000115e-05, 4.473600000000008e-05, 4.4695000000000845e-05, 4.4681000000001275e-05, 4.4708999999996946e-05, 4.594399999999915e-05, 4.429200000000133e-05, 4.586099999999774e-05, 4.427799999999829e-05, 4.4444999999997126e-05, 4.4709000000000415e-05, 4.4305000000001427e-05, 4.451399999999897e-05, 4.4125000000002496e-05, 4.465199999999919e-05, 4.5861000000001206e-05, 4.476399999999922e-05, 4.472200000000051e-05, 4.5889000000000346e-05]</msg>
<status status="PASS" starttime="20201030 11:50:26.812" endtime="20201030 11:50:26.815"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.807" endtime="20201030 11:50:26.816"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:26.819" endtime="20201030 11:50:26.839"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.818" endtime="20201030 11:50:26.839"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.817" endtime="20201030 11:50:26.840"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.455" endtime="20201030 11:50:26.840"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.454" endtime="20201030 11:50:26.840"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:26.849" endtime="20201030 11:50:26.868"></status>
</kw>
<msg timestamp="20201030 11:50:26.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:26.848" endtime="20201030 11:50:26.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:26.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:26.869" endtime="20201030 11:50:26.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:26.872" endtime="20201030 11:50:26.874"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.845" endtime="20201030 11:50:26.874"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.843" endtime="20201030 11:50:26.875"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:26.881" endtime="20201030 11:50:27.168"></status>
</kw>
<msg timestamp="20201030 11:50:27.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020062389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020107778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:26.880" endtime="20201030 11:50:27.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:27.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020062389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020107778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:27.172" endtime="20201030 11:50:27.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:27.180" endtime="20201030 11:50:27.182"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.877" endtime="20201030 11:50:27.183"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.875" endtime="20201030 11:50:27.183"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:27.187" level="INFO">${RESULT} = [{'diff': 4.5388999999999846e-05}, {'diff': 4.555599999999868e-05}, {'diff': 4.682000000000297e-05}, {'diff': 4.502800000000251e-05}, {'diff': 4.687499999999831e-05}, {'diff': 4.49999999999999e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:50:27.184" endtime="20201030 11:50:27.187"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:27.192" level="INFO">${ACCURACY} = {'diff': [4.5388999999999846e-05, 4.555599999999868e-05, 4.682000000000297e-05, 4.502800000000251e-05, 4.687499999999831e-05, 4.49999999999999e-05, 4.532000000000147e-05, 4.534800000000061e-05, 4.5348...</msg>
<status status="PASS" starttime="20201030 11:50:27.188" endtime="20201030 11:50:27.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:27.197" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201030 11:50:27.196" endtime="20201030 11:50:27.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:27.200" level="INFO">VALUE: [4.5388999999999846e-05, 4.555599999999868e-05, 4.682000000000297e-05, 4.502800000000251e-05, 4.687499999999831e-05, 4.49999999999999e-05, 4.532000000000147e-05, 4.534800000000061e-05, 4.534800000000061e-05, 4.561099999999749e-05, 4.681900000000003e-05, 4.552700000000007e-05, 4.507000000000122e-05, 4.55000000000004e-05, 4.504200000000208e-05, 4.544399999999865e-05, 4.6889000000001346e-05, 4.530500000000243e-05, 4.495800000000119e-05, 4.51939999999984e-05, 4.5111000000000456e-05, 4.497200000000076e-05, 4.5361000000000706e-05, 4.5139000000003066e-05, 4.686099999999874e-05, 4.5223000000000485e-05, 4.5138999999999596e-05, 4.5416999999998986e-05, 4.533400000000104e-05, 4.687499999999831e-05, 4.5416999999998986e-05, 4.5708999999997946e-05, 4.5223000000000485e-05, 4.5013e-05, 4.520799999999797e-05, 4.5138999999999596e-05, 4.513800000000012e-05, 4.565200000000019e-05, 4.547200000000126e-05, 4.68329999999996e-05, 4.555500000000268e-05, 4.501400000000294e-05, 4.525000000000015e-05, 4.493000000000205e-05, 4.495800000000119e-05, 4.544400000000212e-05, 4.5639000000000096e-05, 4.572200000000151e-05, 4.586200000000068e-05, 4.683399999999907e-05]</msg>
<status status="PASS" starttime="20201030 11:50:27.198" endtime="20201030 11:50:27.200"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.193" endtime="20201030 11:50:27.201"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:27.205" endtime="20201030 11:50:27.224"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.203" endtime="20201030 11:50:27.225"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.202" endtime="20201030 11:50:27.225"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.841" endtime="20201030 11:50:27.225"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.840" endtime="20201030 11:50:27.225"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:27.235" endtime="20201030 11:50:27.253"></status>
</kw>
<msg timestamp="20201030 11:50:27.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:27.233" endtime="20201030 11:50:27.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:27.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:27.255" endtime="20201030 11:50:27.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:27.257" endtime="20201030 11:50:27.259"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.230" endtime="20201030 11:50:27.259"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.228" endtime="20201030 11:50:27.260"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:27.267" endtime="20201030 11:50:27.555"></status>
</kw>
<msg timestamp="20201030 11:50:27.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020060667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020106903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:27.265" endtime="20201030 11:50:27.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:27.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020060667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020106903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:27.560" endtime="20201030 11:50:27.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:27.568" endtime="20201030 11:50:27.570"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.262" endtime="20201030 11:50:27.571"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.260" endtime="20201030 11:50:27.571"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:27.575" level="INFO">${RESULT} = [{'diff': 4.623599999999811e-05}, {'diff': 4.65139999999975e-05}, {'diff': 4.6083000000002317e-05}, {'diff': 4.655500000000021e-05}, {'diff': 4.592999999999958e-05}, {'diff': 4.630499999999996e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:50:27.572" endtime="20201030 11:50:27.575"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:27.579" level="INFO">${ACCURACY} = {'diff': [4.623599999999811e-05, 4.65139999999975e-05, 4.6083000000002317e-05, 4.655500000000021e-05, 4.592999999999958e-05, 4.630499999999996e-05, 4.779099999999842e-05, 4.652800000000054e-05, 4.6236...</msg>
<status status="PASS" starttime="20201030 11:50:27.576" endtime="20201030 11:50:27.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:27.584" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201030 11:50:27.583" endtime="20201030 11:50:27.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:27.586" level="INFO">VALUE: [4.623599999999811e-05, 4.65139999999975e-05, 4.6083000000002317e-05, 4.655500000000021e-05, 4.592999999999958e-05, 4.630499999999996e-05, 4.779099999999842e-05, 4.652800000000054e-05, 4.623600000000158e-05, 4.608299999999885e-05, 4.673600000000208e-05, 4.6194999999998876e-05, 4.7875000000002776e-05, 4.6111000000001456e-05, 4.6458999999998696e-05, 4.658399999999882e-05, 4.6208999999998446e-05, 4.625000000000115e-05, 4.608299999999885e-05, 4.788899999999888e-05, 4.6639000000001096e-05, 4.6389000000000846e-05, 4.78879999999994e-05, 4.606900000000275e-05, 4.656899999999978e-05, 4.60000000000009e-05, 4.6639000000001096e-05, 4.647200000000226e-05, 4.6153000000000166e-05, 4.659699999999892e-05, 4.784700000000017e-05, 4.6667000000000236e-05, 4.65000000000014e-05, 4.655599999999968e-05, 4.620799999999897e-05, 4.595800000000219e-05, 4.656899999999978e-05, 4.6319999999999e-05, 4.622200000000201e-05, 4.786199999999921e-05, 4.627800000000029e-05, 4.609799999999789e-05, 4.677800000000079e-05, 4.657000000000272e-05, 4.674999999999818e-05, 4.661099999999849e-05, 4.658299999999935e-05, 4.656999999999925e-05, 4.612499999999756e-05, 4.665200000000119e-05]</msg>
<status status="PASS" starttime="20201030 11:50:27.585" endtime="20201030 11:50:27.587"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.580" endtime="20201030 11:50:27.588"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:27.592" endtime="20201030 11:50:27.611"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.590" endtime="20201030 11:50:27.612"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.589" endtime="20201030 11:50:27.612"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.226" endtime="20201030 11:50:27.612"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.226" endtime="20201030 11:50:27.612"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:27.621" endtime="20201030 11:50:27.641"></status>
</kw>
<msg timestamp="20201030 11:50:27.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:27.620" endtime="20201030 11:50:27.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:27.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:27.642" endtime="20201030 11:50:27.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:27.645" endtime="20201030 11:50:27.647"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.617" endtime="20201030 11:50:27.647"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.615" endtime="20201030 11:50:27.648"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:27.655" endtime="20201030 11:50:27.941"></status>
</kw>
<msg timestamp="20201030 11:50:27.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020902597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020950292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:27.653" endtime="20201030 11:50:27.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:27.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020902597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020950292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:27.945" endtime="20201030 11:50:27.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:27.953" endtime="20201030 11:50:27.955"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.650" endtime="20201030 11:50:27.956"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.648" endtime="20201030 11:50:27.956"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:27.960" level="INFO">${RESULT} = [{'diff': 4.7695000000000376e-05}, {'diff': 4.7639000000002096e-05}, {'diff': 4.883400000000107e-05}, {'diff': 4.88330000000016e-05}, {'diff': 4.694400000000015e-05}, {'diff': 4.749999999999893e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:50:27.957" endtime="20201030 11:50:27.960"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:27.964" level="INFO">${ACCURACY} = {'diff': [4.7695000000000376e-05, 4.7639000000002096e-05, 4.883400000000107e-05, 4.88330000000016e-05, 4.694400000000015e-05, 4.749999999999893e-05, 4.731900000000053e-05, 4.883299999999813e-05, 4.706...</msg>
<status status="PASS" starttime="20201030 11:50:27.961" endtime="20201030 11:50:27.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:27.969" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201030 11:50:27.968" endtime="20201030 11:50:27.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:27.972" level="INFO">VALUE: [4.7695000000000376e-05, 4.7639000000002096e-05, 4.883400000000107e-05, 4.88330000000016e-05, 4.694400000000015e-05, 4.749999999999893e-05, 4.731900000000053e-05, 4.883299999999813e-05, 4.706900000000028e-05, 4.6931000000000056e-05, 4.731900000000053e-05, 4.7403000000001416e-05, 4.744399999999718e-05, 4.702799999999757e-05, 4.76529999999982e-05, 4.723599999999911e-05, 4.7375000000002276e-05, 4.744400000000065e-05, 4.883299999999813e-05, 4.704200000000061e-05, 4.891699999999902e-05, 4.7695000000000376e-05, 4.706999999999975e-05, 4.7695000000000376e-05, 4.777699999999885e-05, 4.888899999999988e-05, 4.75139999999985e-05, 4.713799999999865e-05, 4.765199999999872e-05, 4.695799999999972e-05, 4.741699999999752e-05, 4.7111000000002456e-05, 4.713899999999813e-05, 4.729200000000086e-05, 4.737499999999881e-05, 4.770800000000047e-05, 4.887500000000031e-05, 4.737499999999881e-05, 4.7139000000001596e-05, 4.887500000000031e-05, 4.737499999999881e-05, 4.737499999999881e-05, 4.758399999999982e-05, 4.705600000000018e-05, 4.702799999999757e-05, 4.7708999999999946e-05, 4.886100000000074e-05, 4.7013999999998e-05, 4.733400000000304e-05, 4.883400000000107e-05]</msg>
<status status="PASS" starttime="20201030 11:50:27.970" endtime="20201030 11:50:27.973"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.965" endtime="20201030 11:50:27.974"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:27.978" endtime="20201030 11:50:27.997"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.976" endtime="20201030 11:50:27.998"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.975" endtime="20201030 11:50:27.998"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.613" endtime="20201030 11:50:27.998"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.613" endtime="20201030 11:50:27.999"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:28.007" endtime="20201030 11:50:28.026"></status>
</kw>
<msg timestamp="20201030 11:50:28.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:28.006" endtime="20201030 11:50:28.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:28.029" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:28.028" endtime="20201030 11:50:28.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:28.030" endtime="20201030 11:50:28.032"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.003" endtime="20201030 11:50:28.032"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.001" endtime="20201030 11:50:28.033"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:28.039" endtime="20201030 11:50:28.325"></status>
</kw>
<msg timestamp="20201030 11:50:28.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020060333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020108361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:28.038" endtime="20201030 11:50:28.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:28.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020060333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020108361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:28.330" endtime="20201030 11:50:28.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:28.338" endtime="20201030 11:50:28.340"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.035" endtime="20201030 11:50:28.340"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.033" endtime="20201030 11:50:28.341"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:28.345" level="INFO">${RESULT} = [{'diff': 4.802800000000204e-05}, {'diff': 4.848600000000036e-05}, {'diff': 4.797200000000029e-05}, {'diff': 4.799999999999943e-05}, {'diff': 4.86529999999992e-05}, {'diff': 4.826399999999925e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:50:28.342" endtime="20201030 11:50:28.345"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:28.350" level="INFO">${ACCURACY} = {'diff': [4.802800000000204e-05, 4.848600000000036e-05, 4.797200000000029e-05, 4.799999999999943e-05, 4.86529999999992e-05, 4.826399999999925e-05, 4.858400000000082e-05, 4.804200000000161e-05, 4.84590...</msg>
<status status="PASS" starttime="20201030 11:50:28.346" endtime="20201030 11:50:28.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:28.355" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201030 11:50:28.354" endtime="20201030 11:50:28.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:28.357" level="INFO">VALUE: [4.802800000000204e-05, 4.848600000000036e-05, 4.797200000000029e-05, 4.799999999999943e-05, 4.86529999999992e-05, 4.826399999999925e-05, 4.858400000000082e-05, 4.804200000000161e-05, 4.8459000000000696e-05, 4.849999999999993e-05, 4.819399999999793e-05, 4.851400000000297e-05, 4.869499999999791e-05, 4.831900000000153e-05, 4.859699999999745e-05, 4.856899999999831e-05, 4.988900000000088e-05, 4.808299999999738e-05, 4.830500000000196e-05, 4.855500000000221e-05, 4.836100000000024e-05, 4.858299999999788e-05, 4.986099999999827e-05, 4.827799999999882e-05, 4.8139000000002596e-05, 4.858400000000082e-05, 4.838899999999938e-05, 4.807000000000075e-05, 4.840299999999895e-05, 4.808400000000032e-05, 4.811099999999999e-05, 4.807000000000075e-05, 4.857000000000125e-05, 4.805500000000171e-05, 4.837499999999981e-05, 4.8458999999997227e-05, 4.879099999999942e-05, 4.827799999999882e-05, 4.859700000000092e-05, 4.797199999999682e-05, 4.798599999999986e-05, 4.876399999999975e-05, 4.826399999999925e-05, 4.861100000000049e-05, 4.792999999999811e-05, 4.798599999999986e-05, 4.8709000000000946e-05, 4.98200000000025e-05, 4.869499999999791e-05, 4.809699999999695e-05]</msg>
<status status="PASS" starttime="20201030 11:50:28.356" endtime="20201030 11:50:28.362"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.351" endtime="20201030 11:50:28.362"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:28.366" endtime="20201030 11:50:28.386"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.365" endtime="20201030 11:50:28.386"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.363" endtime="20201030 11:50:28.387"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.999" endtime="20201030 11:50:28.387"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.999" endtime="20201030 11:50:28.387"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:28.396" endtime="20201030 11:50:28.415"></status>
</kw>
<msg timestamp="20201030 11:50:28.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:28.395" endtime="20201030 11:50:28.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:28.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:28.417" endtime="20201030 11:50:28.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:28.419" endtime="20201030 11:50:28.421"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.392" endtime="20201030 11:50:28.421"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.390" endtime="20201030 11:50:28.422"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:28.429" endtime="20201030 11:50:28.716"></status>
</kw>
<msg timestamp="20201030 11:50:28.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020058083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020107069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:28.427" endtime="20201030 11:50:28.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:28.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020058083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020107069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:28.720" endtime="20201030 11:50:28.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:28.729" endtime="20201030 11:50:28.730"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.424" endtime="20201030 11:50:28.731"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.422" endtime="20201030 11:50:28.731"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:28.735" level="INFO">${RESULT} = [{'diff': 4.898600000000086e-05}, {'diff': 5.088900000000188e-05}, {'diff': 4.906899999999881e-05}, {'diff': 4.937500000000081e-05}, {'diff': 4.956899999999931e-05}, {'diff': 4.906900000000228e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:50:28.732" endtime="20201030 11:50:28.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:28.740" level="INFO">${ACCURACY} = {'diff': [4.898600000000086e-05, 5.088900000000188e-05, 4.906899999999881e-05, 4.937500000000081e-05, 4.956899999999931e-05, 4.906900000000228e-05, 5.088899999999841e-05, 5.086099999999927e-05, 4.9319...</msg>
<status status="PASS" starttime="20201030 11:50:28.736" endtime="20201030 11:50:28.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:28.744" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201030 11:50:28.743" endtime="20201030 11:50:28.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:28.747" level="INFO">VALUE: [4.898600000000086e-05, 5.088900000000188e-05, 4.906899999999881e-05, 4.937500000000081e-05, 4.956899999999931e-05, 4.906900000000228e-05, 5.088899999999841e-05, 5.086099999999927e-05, 4.931900000000253e-05, 4.93330000000021e-05, 4.895799999999825e-05, 4.918099999999884e-05, 5.08339999999996e-05, 4.936099999999777e-05, 4.906999999999828e-05, 5.082000000000003e-05, 4.93330000000021e-05, 4.937500000000081e-05, 5.08469999999997e-05, 4.9237000000000586e-05, 4.918099999999884e-05, 4.941699999999952e-05, 4.930499999999949e-05, 4.902799999999957e-05, 4.93330000000021e-05, 4.931900000000253e-05, 4.962500000000106e-05, 4.913899999999666e-05, 4.920800000000197e-05, 4.922199999999807e-05, 4.897200000000129e-05, 4.908300000000185e-05, 4.926400000000025e-05, 5.090299999999798e-05, 4.963900000000063e-05, 4.9417000000002986e-05, 4.93339999999981e-05, 4.913900000000013e-05, 4.897199999999782e-05, 4.976300000000128e-05, 4.9195000000001876e-05, 4.906899999999881e-05, 4.976300000000128e-05, 4.969399999999943e-05, 4.937499999999734e-05, 4.919399999999893e-05, 4.902799999999957e-05, 4.973599999999814e-05, 4.941600000000004e-05, 4.929199999999939e-05]</msg>
<status status="PASS" starttime="20201030 11:50:28.745" endtime="20201030 11:50:28.748"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.741" endtime="20201030 11:50:28.748"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:28.752" endtime="20201030 11:50:28.771"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.750" endtime="20201030 11:50:28.772"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.749" endtime="20201030 11:50:28.772"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.388" endtime="20201030 11:50:28.773"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.387" endtime="20201030 11:50:28.773"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:28.782" endtime="20201030 11:50:28.802"></status>
</kw>
<msg timestamp="20201030 11:50:28.802" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:28.780" endtime="20201030 11:50:28.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:28.805" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:28.803" endtime="20201030 11:50:28.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:28.806" endtime="20201030 11:50:28.807"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.777" endtime="20201030 11:50:28.808"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.775" endtime="20201030 11:50:28.808"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:28.815" endtime="20201030 11:50:29.100"></status>
</kw>
<msg timestamp="20201030 11:50:29.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020847181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020899028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:28.813" endtime="20201030 11:50:29.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:29.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020847181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020899028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:29.105" endtime="20201030 11:50:29.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:29.113" endtime="20201030 11:50:29.115"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.811" endtime="20201030 11:50:29.115"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.809" endtime="20201030 11:50:29.116"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:29.120" level="INFO">${RESULT} = [{'diff': 5.18470000000007e-05}, {'diff': 5.036099999999877e-05}, {'diff': 5.011099999999852e-05}, {'diff': 5.043100000000009e-05}, {'diff': 5.03469999999992e-05}, {'diff': 5.076399999999828e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:50:29.116" endtime="20201030 11:50:29.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:29.124" level="INFO">${ACCURACY} = {'diff': [5.18470000000007e-05, 5.036099999999877e-05, 5.011099999999852e-05, 5.043100000000009e-05, 5.03469999999992e-05, 5.076399999999828e-05, 5.011100000000199e-05, 5.049999999999846e-05, 5.052800...</msg>
<status status="PASS" starttime="20201030 11:50:29.121" endtime="20201030 11:50:29.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:29.129" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201030 11:50:29.128" endtime="20201030 11:50:29.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:29.131" level="INFO">VALUE: [5.18470000000007e-05, 5.036099999999877e-05, 5.011099999999852e-05, 5.043100000000009e-05, 5.03469999999992e-05, 5.076399999999828e-05, 5.011100000000199e-05, 5.049999999999846e-05, 5.052800000000107e-05, 5.001299999999806e-05, 5.027700000000135e-05, 4.999999999999796e-05, 5.0138000000001653e-05, 5.188899999999941e-05, 4.995799999999925e-05, 5.040300000000095e-05, 5.056900000000031e-05, 5.004200000000014e-05, 5.072199999999957e-05, 5.012499999999809e-05, 4.998600000000186e-05, 5.072199999999957e-05, 5.038899999999791e-05, 4.998599999999839e-05, 5.040299999999748e-05, 4.988899999999741e-05, 5.016700000000027e-05, 5.01530000000007e-05, 5.036200000000171e-05, 5.187499999999984e-05, 5.182000000000103e-05, 5.080499999999752e-05, 5.051399999999803e-05, 5.051300000000203e-05, 5.012499999999809e-05, 5.037500000000181e-05, 5.181899999999809e-05, 5.063900000000163e-05, 4.991600000000054e-05, 5.029200000000039e-05, 5.075000000000218e-05, 5.027800000000082e-05, 5.181899999999809e-05, 5.054199999999717e-05, 5.191700000000202e-05, 5.076400000000175e-05, 5.182000000000103e-05, 5.019499999999941e-05, 5.019499999999941e-05, 5.019399999999993e-05]</msg>
<status status="PASS" starttime="20201030 11:50:29.130" endtime="20201030 11:50:29.133"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.125" endtime="20201030 11:50:29.134"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:29.137" endtime="20201030 11:50:29.157"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.136" endtime="20201030 11:50:29.157"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.135" endtime="20201030 11:50:29.158"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.774" endtime="20201030 11:50:29.158"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.773" endtime="20201030 11:50:29.158"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:29.167" endtime="20201030 11:50:29.186"></status>
</kw>
<msg timestamp="20201030 11:50:29.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:29.165" endtime="20201030 11:50:29.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:29.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:29.187" endtime="20201030 11:50:29.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:29.190" endtime="20201030 11:50:29.191"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.163" endtime="20201030 11:50:29.192"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.161" endtime="20201030 11:50:29.192"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:29.199" endtime="20201030 11:50:29.484"></status>
</kw>
<msg timestamp="20201030 11:50:29.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019998444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020050069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:29.197" endtime="20201030 11:50:29.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:29.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019998444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020050069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:29.489" endtime="20201030 11:50:29.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:29.497" endtime="20201030 11:50:29.499"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.195" endtime="20201030 11:50:29.499"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.193" endtime="20201030 11:50:29.500"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:29.504" level="INFO">${RESULT} = [{'diff': 5.162499999999959e-05}, {'diff': 5.173600000000014e-05}, {'diff': 5.095800000000025e-05}, {'diff': 5.119500000000041e-05}, {'diff': 5.113899999999866e-05}, {'diff': 5.147200000000032e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:50:29.500" endtime="20201030 11:50:29.504"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:29.509" level="INFO">${ACCURACY} = {'diff': [5.162499999999959e-05, 5.173600000000014e-05, 5.095800000000025e-05, 5.119500000000041e-05, 5.113899999999866e-05, 5.147200000000032e-05, 5.163900000000263e-05, 5.126399999999878e-05, 5.0999...</msg>
<status status="PASS" starttime="20201030 11:50:29.505" endtime="20201030 11:50:29.509"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:29.514" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201030 11:50:29.513" endtime="20201030 11:50:29.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:29.516" level="INFO">VALUE: [5.162499999999959e-05, 5.173600000000014e-05, 5.095800000000025e-05, 5.119500000000041e-05, 5.113899999999866e-05, 5.147200000000032e-05, 5.163900000000263e-05, 5.126399999999878e-05, 5.099999999999896e-05, 5.136099999999977e-05, 5.283299999999866e-05, 5.116600000000179e-05, 5.156999999999731e-05, 5.144500000000066e-05, 5.119500000000041e-05, 5.095899999999973e-05, 5.145900000000023e-05, 5.1708000000001e-05, 5.145900000000023e-05, 5.1721999999997104e-05, 5.145900000000023e-05, 5.105600000000071e-05, 5.143100000000109e-05, 5.12080000000005e-05, 5.151399999999903e-05, 5.133300000000063e-05, 5.106900000000081e-05, 5.112499999999909e-05, 5.287500000000084e-05, 5.174999999999971e-05, 5.106900000000081e-05, 5.123599999999964e-05, 5.15140000000025e-05, 5.143099999999762e-05, 5.138899999999891e-05, 5.137499999999934e-05, 5.157000000000078e-05, 5.119500000000041e-05, 5.126400000000225e-05, 5.162499999999959e-05, 5.129099999999845e-05, 5.124999999999921e-05, 5.143100000000109e-05, 5.176399999999928e-05, 5.162499999999959e-05, 5.115299999999823e-05, 5.290299999999998e-05, 5.112499999999909e-05, 5.281899999999909e-05, 5.15279999999986e-05]</msg>
<status status="PASS" starttime="20201030 11:50:29.515" endtime="20201030 11:50:29.517"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.510" endtime="20201030 11:50:29.518"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:29.521" endtime="20201030 11:50:29.541"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.520" endtime="20201030 11:50:29.541"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.519" endtime="20201030 11:50:29.542"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.159" endtime="20201030 11:50:29.542"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.158" endtime="20201030 11:50:29.542"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:29.551" endtime="20201030 11:50:29.570"></status>
</kw>
<msg timestamp="20201030 11:50:29.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:29.549" endtime="20201030 11:50:29.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:29.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:29.571" endtime="20201030 11:50:29.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:29.574" endtime="20201030 11:50:29.575"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.547" endtime="20201030 11:50:29.576"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.545" endtime="20201030 11:50:29.576"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:29.583" endtime="20201030 11:50:29.869"></status>
</kw>
<msg timestamp="20201030 11:50:29.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019915278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019968014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:29.581" endtime="20201030 11:50:29.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:29.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019915278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019968014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:29.873" endtime="20201030 11:50:29.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:29.881" endtime="20201030 11:50:29.883"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.579" endtime="20201030 11:50:29.884"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.577" endtime="20201030 11:50:29.884"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:29.888" level="INFO">${RESULT} = [{'diff': 5.2735999999997674e-05}, {'diff': 5.195900000000073e-05}, {'diff': 5.384699999999923e-05}, {'diff': 5.381999999999956e-05}, {'diff': 5.2014000000003e-05}, {'diff': 5.270900000000148e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:50:29.885" endtime="20201030 11:50:29.888"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:29.892" level="INFO">${ACCURACY} = {'diff': [5.2735999999997674e-05, 5.195900000000073e-05, 5.384699999999923e-05, 5.381999999999956e-05, 5.2014000000003e-05, 5.270900000000148e-05, 5.2638000000000684e-05, 5.218000000000236e-05, 5.2332...</msg>
<status status="PASS" starttime="20201030 11:50:29.889" endtime="20201030 11:50:29.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:29.897" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201030 11:50:29.896" endtime="20201030 11:50:29.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:29.900" level="INFO">VALUE: [5.2735999999997674e-05, 5.195900000000073e-05, 5.384699999999923e-05, 5.381999999999956e-05, 5.2014000000003e-05, 5.270900000000148e-05, 5.2638000000000684e-05, 5.218000000000236e-05, 5.233299999999816e-05, 5.245800000000175e-05, 5.25409999999997e-05, 5.212500000000009e-05, 5.2693999999998964e-05, 5.197200000000082e-05, 5.2708000000002e-05, 5.277799999999985e-05, 5.248600000000089e-05, 5.276400000000028e-05, 5.268100000000234e-05, 5.255599999999874e-05, 5.386100000000227e-05, 5.220900000000098e-05, 5.390299999999751e-05, 5.381999999999956e-05, 5.391700000000055e-05, 5.272299999999758e-05, 5.3930000000000644e-05, 5.208300000000138e-05, 5.258300000000188e-05, 5.280599999999899e-05, 5.272200000000157e-05, 5.2193999999998464e-05, 5.2221999999997604e-05, 5.256900000000231e-05, 5.227799999999935e-05, 5.1957999999997784e-05, 5.22080000000015e-05, 5.258299999999841e-05, 5.394500000000316e-05, 5.212500000000009e-05, 5.240299999999948e-05, 5.201399999999953e-05, 5.197200000000082e-05, 5.244500000000166e-05, 5.216700000000227e-05, 5.391700000000055e-05, 5.202800000000257e-05, 5.276400000000028e-05, 5.208400000000085e-05, 5.194499999999769e-05]</msg>
<status status="PASS" starttime="20201030 11:50:29.898" endtime="20201030 11:50:29.900"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.893" endtime="20201030 11:50:29.901"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:29.905" endtime="20201030 11:50:29.924"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.903" endtime="20201030 11:50:29.925"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.902" endtime="20201030 11:50:29.925"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.543" endtime="20201030 11:50:29.925"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.542" endtime="20201030 11:50:29.925"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:29.934" endtime="20201030 11:50:29.953"></status>
</kw>
<msg timestamp="20201030 11:50:29.954" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:29.933" endtime="20201030 11:50:29.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:29.956" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:29.955" endtime="20201030 11:50:29.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:29.958" endtime="20201030 11:50:29.959"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.930" endtime="20201030 11:50:29.960"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.928" endtime="20201030 11:50:29.960"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:29.967" endtime="20201030 11:50:30.254"></status>
</kw>
<msg timestamp="20201030 11:50:30.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020905847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020959319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:29.965" endtime="20201030 11:50:30.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:30.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020905847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020959319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:30.258" endtime="20201030 11:50:30.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:30.267" endtime="20201030 11:50:30.268"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.963" endtime="20201030 11:50:30.269"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.961" endtime="20201030 11:50:30.269"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:30.273" level="INFO">${RESULT} = [{'diff': 5.3471999999998854e-05}, {'diff': 5.3707999999999534e-05}, {'diff': 5.3763999999997814e-05}, {'diff': 5.483300000000066e-05}, {'diff': 5.481900000000109e-05}, {'diff': 5.375000000000171e-05}...</msg>
<status status="PASS" starttime="20201030 11:50:30.270" endtime="20201030 11:50:30.274"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:30.278" level="INFO">${ACCURACY} = {'diff': [5.3471999999998854e-05, 5.3707999999999534e-05, 5.3763999999997814e-05, 5.483300000000066e-05, 5.481900000000109e-05, 5.375000000000171e-05, 5.30280000000001e-05, 5.337499999999787e-05, 5.31...</msg>
<status status="PASS" starttime="20201030 11:50:30.274" endtime="20201030 11:50:30.278"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:30.282" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201030 11:50:30.281" endtime="20201030 11:50:30.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:30.285" level="INFO">VALUE: [5.3471999999998854e-05, 5.3707999999999534e-05, 5.3763999999997814e-05, 5.483300000000066e-05, 5.481900000000109e-05, 5.375000000000171e-05, 5.30280000000001e-05, 5.337499999999787e-05, 5.313900000000066e-05, 5.294500000000216e-05, 5.2999999999997494e-05, 5.359699999999898e-05, 5.373600000000214e-05, 5.344500000000266e-05, 5.363900000000116e-05, 5.312499999999762e-05, 5.308400000000185e-05, 5.312500000000109e-05, 5.3207999999999034e-05, 5.352699999999766e-05, 5.293099999999912e-05, 5.3249999999997744e-05, 5.355599999999974e-05, 5.3693999999999964e-05, 5.363899999999769e-05, 5.341700000000005e-05, 5.3249999999997744e-05, 5.337499999999787e-05, 5.3207999999999034e-05, 5.362499999999812e-05, 5.30280000000001e-05, 5.304199999999967e-05, 5.363900000000116e-05, 5.301400000000053e-05, 5.487499999999937e-05, 5.487499999999937e-05, 5.295900000000173e-05, 5.363899999999769e-05, 5.483299999999719e-05, 5.3763999999997814e-05, 5.3499999999997994e-05, 5.3457999999999284e-05, 5.487499999999937e-05, 5.343100000000309e-05, 5.3416000000000574e-05, 5.330500000000002e-05, 5.484700000000023e-05, 5.338900000000091e-05, 5.295800000000225e-05, 5.362500000000159e-05]</msg>
<status status="PASS" starttime="20201030 11:50:30.283" endtime="20201030 11:50:30.287"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.279" endtime="20201030 11:50:30.287"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:30.291" endtime="20201030 11:50:30.310"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.289" endtime="20201030 11:50:30.311"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.288" endtime="20201030 11:50:30.311"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.926" endtime="20201030 11:50:30.311"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.926" endtime="20201030 11:50:30.312"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:30.321" endtime="20201030 11:50:30.339"></status>
</kw>
<msg timestamp="20201030 11:50:30.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:30.319" endtime="20201030 11:50:30.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:30.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:30.340" endtime="20201030 11:50:30.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:30.343" endtime="20201030 11:50:30.344"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.316" endtime="20201030 11:50:30.345"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.314" endtime="20201030 11:50:30.345"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:30.352" endtime="20201030 11:50:30.638"></status>
</kw>
<msg timestamp="20201030 11:50:30.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020013583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020067903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:30.351" endtime="20201030 11:50:30.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:30.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020013583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020067903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:30.642" endtime="20201030 11:50:30.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:30.650" endtime="20201030 11:50:30.652"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.348" endtime="20201030 11:50:30.653"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.346" endtime="20201030 11:50:30.653"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:30.657" level="INFO">${RESULT} = [{'diff': 5.432000000000006e-05}, {'diff': 5.4471999999999854e-05}, {'diff': 5.469500000000044e-05}, {'diff': 5.3985999999998924e-05}, {'diff': 5.433399999999963e-05}, {'diff': 5.394499999999969e-05},...</msg>
<status status="PASS" starttime="20201030 11:50:30.654" endtime="20201030 11:50:30.658"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:30.663" level="INFO">${ACCURACY} = {'diff': [5.432000000000006e-05, 5.4471999999999854e-05, 5.469500000000044e-05, 5.3985999999998924e-05, 5.433399999999963e-05, 5.394499999999969e-05, 5.465299999999826e-05, 5.3999999999998494e-05, 5.4...</msg>
<status status="PASS" starttime="20201030 11:50:30.658" endtime="20201030 11:50:30.663"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:30.667" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201030 11:50:30.666" endtime="20201030 11:50:30.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:30.670" level="INFO">VALUE: [5.432000000000006e-05, 5.4471999999999854e-05, 5.469500000000044e-05, 5.3985999999998924e-05, 5.433399999999963e-05, 5.394499999999969e-05, 5.465299999999826e-05, 5.3999999999998494e-05, 5.4166000000001324e-05, 5.4708000000000534e-05, 5.463899999999869e-05, 5.40280000000011e-05, 5.41809999999969e-05, 5.3930000000000644e-05, 5.4527999999998134e-05, 5.400000000000196e-05, 5.451400000000203e-05, 5.4263999999998314e-05, 5.482000000000056e-05, 5.465300000000173e-05, 5.393100000000012e-05, 5.408399999999938e-05, 5.438899999999844e-05, 5.440299999999801e-05, 5.427800000000135e-05, 5.405600000000024e-05, 5.4249999999998744e-05, 5.450000000000246e-05, 5.4694000000000964e-05, 5.451299999999909e-05, 5.427800000000135e-05, 5.3930000000000644e-05, 5.3957999999999784e-05, 5.475000000000271e-05, 5.437499999999887e-05, 5.586099999999733e-05, 5.3930000000000644e-05, 5.440299999999801e-05, 5.586099999999733e-05, 5.434699999999973e-05, 5.412499999999862e-05, 5.3971999999999354e-05, 5.470900000000001e-05, 5.427800000000135e-05, 5.454200000000117e-05, 5.433399999999963e-05, 5.4471999999999854e-05, 5.4458000000000284e-05, 5.426300000000231e-05, 5.430500000000102e-05]</msg>
<status status="PASS" starttime="20201030 11:50:30.669" endtime="20201030 11:50:30.671"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.663" endtime="20201030 11:50:30.671"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:30.675" endtime="20201030 11:50:30.695"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.674" endtime="20201030 11:50:30.695"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.672" endtime="20201030 11:50:30.696"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.313" endtime="20201030 11:50:30.696"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.312" endtime="20201030 11:50:30.696"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:30.706" endtime="20201030 11:50:30.725"></status>
</kw>
<msg timestamp="20201030 11:50:30.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:30.704" endtime="20201030 11:50:30.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:30.728" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:30.727" endtime="20201030 11:50:30.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:30.729" endtime="20201030 11:50:30.731"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.701" endtime="20201030 11:50:30.732"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.699" endtime="20201030 11:50:30.732"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:30.739" endtime="20201030 11:50:31.028"></status>
</kw>
<msg timestamp="20201030 11:50:31.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021404056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021459208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:30.737" endtime="20201030 11:50:31.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:31.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021404056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021459208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:31.032" endtime="20201030 11:50:31.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:31.041" endtime="20201030 11:50:31.042"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.734" endtime="20201030 11:50:31.043"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.733" endtime="20201030 11:50:31.043"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:31.047" level="INFO">${RESULT} = [{'diff': 5.5151999999999285e-05}, {'diff': 5.531899999999812e-05}, {'diff': 5.5750000000000244e-05}, {'diff': 5.538900000000291e-05}, {'diff': 5.511100000000005e-05}, {'diff': 5.5179999999998425e-05}...</msg>
<status status="PASS" starttime="20201030 11:50:31.044" endtime="20201030 11:50:31.048"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:31.052" level="INFO">${ACCURACY} = {'diff': [5.5151999999999285e-05, 5.531899999999812e-05, 5.5750000000000244e-05, 5.538900000000291e-05, 5.511100000000005e-05, 5.5179999999998425e-05, 5.5527999999999134e-05, 5.538899999999944e-05, 5....</msg>
<status status="PASS" starttime="20201030 11:50:31.048" endtime="20201030 11:50:31.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:31.056" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201030 11:50:31.055" endtime="20201030 11:50:31.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:31.059" level="INFO">VALUE: [5.5151999999999285e-05, 5.531899999999812e-05, 5.5750000000000244e-05, 5.538900000000291e-05, 5.511100000000005e-05, 5.5179999999998425e-05, 5.5527999999999134e-05, 5.538899999999944e-05, 5.495900000000026e-05, 5.5486000000000424e-05, 5.506999999999734e-05, 5.520900000000051e-05, 5.5249999999999744e-05, 5.5513999999999564e-05, 5.6943999999999745e-05, 5.4958000000000784e-05, 5.5305999999998023e-05, 5.562500000000012e-05, 5.5708000000001534e-05, 5.5777999999999384e-05, 5.5666000000002824e-05, 5.684699999999876e-05, 5.5513999999999564e-05, 5.5013999999999064e-05, 5.513899999999919e-05, 5.4958000000000784e-05, 5.5013999999999064e-05, 5.519500000000094e-05, 5.561100000000055e-05, 5.5541999999998704e-05, 5.68610000000018e-05, 5.519500000000094e-05, 5.509799999999995e-05, 5.545900000000076e-05, 5.569499999999797e-05, 5.684699999999876e-05, 5.5693999999998495e-05, 5.506900000000134e-05, 5.5443999999998245e-05, 5.684700000000223e-05, 5.4943999999997745e-05, 5.562500000000012e-05, 5.5707999999998065e-05, 5.686099999999833e-05, 5.686099999999833e-05, 5.5249999999999744e-05, 5.5193999999997995e-05, 5.512499999999962e-05, 5.5499999999999994e-05, 5.5721999999997635e-05]</msg>
<status status="PASS" starttime="20201030 11:50:31.057" endtime="20201030 11:50:31.060"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.053" endtime="20201030 11:50:31.060"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:31.064" endtime="20201030 11:50:31.083"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.062" endtime="20201030 11:50:31.084"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.061" endtime="20201030 11:50:31.084"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.697" endtime="20201030 11:50:31.084"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.696" endtime="20201030 11:50:31.085"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:31.093" endtime="20201030 11:50:31.113"></status>
</kw>
<msg timestamp="20201030 11:50:31.113" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:31.092" endtime="20201030 11:50:31.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:31.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:31.115" endtime="20201030 11:50:31.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:31.117" endtime="20201030 11:50:31.119"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.089" endtime="20201030 11:50:31.119"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.087" endtime="20201030 11:50:31.120"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:31.127" endtime="20201030 11:50:31.412"></status>
</kw>
<msg timestamp="20201030 11:50:31.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020775944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020831903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:31.125" endtime="20201030 11:50:31.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:31.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020775944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020831903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:31.416" endtime="20201030 11:50:31.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:31.425" endtime="20201030 11:50:31.426"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.122" endtime="20201030 11:50:31.427"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.121" endtime="20201030 11:50:31.427"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:31.431" level="INFO">${RESULT} = [{'diff': 5.595899999999779e-05}, {'diff': 5.6277999999999884e-05}, {'diff': 5.6514000000000564e-05}, {'diff': 5.636099999999783e-05}, {'diff': 5.6499999999997524e-05}, {'diff': 5.657000000000231e-05}...</msg>
<status status="PASS" starttime="20201030 11:50:31.428" endtime="20201030 11:50:31.432"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:31.436" level="INFO">${ACCURACY} = {'diff': [5.595899999999779e-05, 5.6277999999999884e-05, 5.6514000000000564e-05, 5.636099999999783e-05, 5.6499999999997524e-05, 5.657000000000231e-05, 5.629099999999998e-05, 5.6736000000001674e-05, 5....</msg>
<status status="PASS" starttime="20201030 11:50:31.432" endtime="20201030 11:50:31.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:31.440" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201030 11:50:31.439" endtime="20201030 11:50:31.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:31.443" level="INFO">VALUE: [5.595899999999779e-05, 5.6277999999999884e-05, 5.6514000000000564e-05, 5.636099999999783e-05, 5.6499999999997524e-05, 5.657000000000231e-05, 5.629099999999998e-05, 5.6736000000001674e-05, 5.669499999999897e-05, 5.673700000000115e-05, 5.677700000000091e-05, 5.637500000000087e-05, 5.633299999999869e-05, 5.638900000000044e-05, 5.615299999999976e-05, 5.663900000000069e-05, 5.609699999999801e-05, 5.608300000000191e-05, 5.612499999999715e-05, 5.7777999999997914e-05, 5.666699999999983e-05, 5.6805999999999524e-05, 5.6471999999998385e-05, 5.6236000000001174e-05, 5.790300000000151e-05, 5.597300000000083e-05, 5.613900000000019e-05, 5.627700000000041e-05, 5.623700000000065e-05, 5.654100000000023e-05, 5.677700000000091e-05, 5.6000000000000494e-05, 5.6179999999999425e-05, 5.5915999999999605e-05, 5.6027999999999634e-05, 5.6763999999997344e-05, 5.5986000000000924e-05, 5.616699999999933e-05, 5.619500000000194e-05, 5.6055999999998773e-05, 5.6750000000001244e-05, 5.6764000000000814e-05, 5.620900000000151e-05, 5.677700000000091e-05, 5.6055999999998773e-05, 5.790299999999804e-05, 5.594499999999822e-05, 5.595900000000126e-05, 5.6735999999998205e-05, 5.6027999999999634e-05]</msg>
<status status="PASS" starttime="20201030 11:50:31.441" endtime="20201030 11:50:31.444"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.436" endtime="20201030 11:50:31.445"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:31.449" endtime="20201030 11:50:31.468"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.447" endtime="20201030 11:50:31.469"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.446" endtime="20201030 11:50:31.469"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.086" endtime="20201030 11:50:31.469"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.085" endtime="20201030 11:50:31.470"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:31.478" endtime="20201030 11:50:31.497"></status>
</kw>
<msg timestamp="20201030 11:50:31.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:31.477" endtime="20201030 11:50:31.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:31.500" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:31.499" endtime="20201030 11:50:31.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:31.501" endtime="20201030 11:50:31.503"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.474" endtime="20201030 11:50:31.503"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.472" endtime="20201030 11:50:31.504"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:31.511" endtime="20201030 11:50:31.797"></status>
</kw>
<msg timestamp="20201030 11:50:31.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019956875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020014111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:31.509" endtime="20201030 11:50:31.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:31.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019956875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020014111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:31.801" endtime="20201030 11:50:31.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:31.809" endtime="20201030 11:50:31.811"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.506" endtime="20201030 11:50:31.811"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.504" endtime="20201030 11:50:31.812"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:31.816" level="INFO">${RESULT} = [{'diff': 5.7236000000002174e-05}, {'diff': 5.7028000000000634e-05}, {'diff': 5.706899999999987e-05}, {'diff': 5.734799999999873e-05}, {'diff': 5.758400000000288e-05}, {'diff': 5.7083999999998913e-05}...</msg>
<status status="PASS" starttime="20201030 11:50:31.813" endtime="20201030 11:50:31.816"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:31.821" level="INFO">${ACCURACY} = {'diff': [5.7236000000002174e-05, 5.7028000000000634e-05, 5.706899999999987e-05, 5.734799999999873e-05, 5.758400000000288e-05, 5.7083999999998913e-05, 5.71809999999999e-05, 5.7792000000000954e-05, 5.7...</msg>
<status status="PASS" starttime="20201030 11:50:31.817" endtime="20201030 11:50:31.821"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:31.826" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201030 11:50:31.825" endtime="20201030 11:50:31.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:31.828" level="INFO">VALUE: [5.7236000000002174e-05, 5.7028000000000634e-05, 5.706899999999987e-05, 5.734799999999873e-05, 5.758400000000288e-05, 5.7083999999998913e-05, 5.71809999999999e-05, 5.7792000000000954e-05, 5.744499999999972e-05, 5.7000000000001494e-05, 5.6943999999999745e-05, 5.7264000000001314e-05, 5.6985999999998455e-05, 5.6999999999998024e-05, 5.756900000000037e-05, 5.761099999999908e-05, 5.7721999999999635e-05, 5.706899999999987e-05, 5.7444000000000245e-05, 5.713900000000119e-05, 5.706899999999987e-05, 5.702700000000116e-05, 5.76810000000004e-05, 5.736099999999883e-05, 5.695899999999879e-05, 5.691700000000008e-05, 5.7306000000000024e-05, 5.737500000000187e-05, 5.888900000000294e-05, 5.7750000000002244e-05, 5.88749999999999e-05, 5.726300000000184e-05, 5.776299999999887e-05, 5.883300000000119e-05, 5.7569999999999844e-05, 5.888899999999947e-05, 5.708299999999944e-05, 5.7235999999998705e-05, 5.7777999999997914e-05, 5.781900000000062e-05, 5.7513999999998094e-05, 5.7763999999998344e-05, 5.7499999999998525e-05, 5.888899999999947e-05, 5.713899999999772e-05, 5.7055999999999774e-05, 5.7749999999998775e-05, 5.7014000000001064e-05, 5.8834000000000664e-05, 5.7444000000000245e-05]</msg>
<status status="PASS" starttime="20201030 11:50:31.827" endtime="20201030 11:50:31.829"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.822" endtime="20201030 11:50:31.830"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:31.834" endtime="20201030 11:50:31.853"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.832" endtime="20201030 11:50:31.854"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.831" endtime="20201030 11:50:31.854"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.470" endtime="20201030 11:50:31.854"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.470" endtime="20201030 11:50:31.854"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:31.863" endtime="20201030 11:50:31.882"></status>
</kw>
<msg timestamp="20201030 11:50:31.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:31.862" endtime="20201030 11:50:31.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:31.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:31.884" endtime="20201030 11:50:31.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:31.886" endtime="20201030 11:50:31.888"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.859" endtime="20201030 11:50:31.889"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.857" endtime="20201030 11:50:31.889"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:31.896" endtime="20201030 11:50:32.182"></status>
</kw>
<msg timestamp="20201030 11:50:32.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019883167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019941042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:31.894" endtime="20201030 11:50:32.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:32.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019883167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019941042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:32.186" endtime="20201030 11:50:32.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:32.195" endtime="20201030 11:50:32.196"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.891" endtime="20201030 11:50:32.197"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.890" endtime="20201030 11:50:32.197"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:32.202" level="INFO">${RESULT} = [{'diff': 5.78749999999989e-05}, {'diff': 5.8429999999998206e-05}, {'diff': 5.8180000000001425e-05}, {'diff': 5.8402000000002535e-05}, {'diff': 5.854099999999876e-05}, {'diff': 5.809700000000001e-05},...</msg>
<status status="PASS" starttime="20201030 11:50:32.198" endtime="20201030 11:50:32.202"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:32.206" level="INFO">${ACCURACY} = {'diff': [5.78749999999989e-05, 5.8429999999998206e-05, 5.8180000000001425e-05, 5.8402000000002535e-05, 5.854099999999876e-05, 5.809700000000001e-05, 5.862499999999965e-05, 5.840299999999854e-05, 5.98...</msg>
<status status="PASS" starttime="20201030 11:50:32.203" endtime="20201030 11:50:32.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:32.210" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201030 11:50:32.209" endtime="20201030 11:50:32.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:32.213" level="INFO">VALUE: [5.78749999999989e-05, 5.8429999999998206e-05, 5.8180000000001425e-05, 5.8402000000002535e-05, 5.854099999999876e-05, 5.809700000000001e-05, 5.862499999999965e-05, 5.840299999999854e-05, 5.988900000000047e-05, 5.8708000000001065e-05, 5.8528000000002134e-05, 5.983299999999872e-05, 5.840300000000201e-05, 5.8555999999997804e-05, 5.845900000000029e-05, 5.986100000000133e-05, 5.843100000000115e-05, 5.830499999999808e-05, 5.8693999999998026e-05, 5.8500000000002994e-05, 5.8194000000000995e-05, 5.880500000000205e-05, 5.9971999999998415e-05, 5.9916000000000136e-05, 5.829099999999851e-05, 5.879099999999901e-05, 5.856900000000137e-05, 5.8458000000000815e-05, 5.8416000000002105e-05, 5.8527999999998664e-05, 5.990300000000004e-05, 5.866700000000183e-05, 5.831900000000112e-05, 5.858300000000094e-05, 5.9888999999997e-05, 5.8513999999999095e-05, 5.822299999999961e-05, 5.822299999999961e-05, 5.8263999999998844e-05, 5.808300000000044e-05, 5.8387999999999496e-05, 5.8429999999998206e-05, 5.8193999999997525e-05, 5.8792000000001954e-05, 5.862500000000312e-05, 5.8708000000001065e-05, 5.856900000000137e-05, 5.841700000000158e-05, 5.8736000000000205e-05, 5.8222000000000135e-05]</msg>
<status status="PASS" starttime="20201030 11:50:32.212" endtime="20201030 11:50:32.214"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.207" endtime="20201030 11:50:32.214"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:32.218" endtime="20201030 11:50:32.237"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.217" endtime="20201030 11:50:32.238"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.215" endtime="20201030 11:50:32.238"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.855" endtime="20201030 11:50:32.239"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.855" endtime="20201030 11:50:32.239"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:32.248" endtime="20201030 11:50:32.267"></status>
</kw>
<msg timestamp="20201030 11:50:32.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:32.246" endtime="20201030 11:50:32.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:32.271" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:32.269" endtime="20201030 11:50:32.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:32.272" endtime="20201030 11:50:32.273"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.244" endtime="20201030 11:50:32.274"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.241" endtime="20201030 11:50:32.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:32.281" endtime="20201030 11:50:32.567"></status>
</kw>
<msg timestamp="20201030 11:50:32.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020830931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020890319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:32.280" endtime="20201030 11:50:32.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:32.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020830931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020890319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:32.572" endtime="20201030 11:50:32.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:32.580" endtime="20201030 11:50:32.582"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.277" endtime="20201030 11:50:32.582"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.275" endtime="20201030 11:50:32.583"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:32.587" level="INFO">${RESULT} = [{'diff': 5.9388000000000496e-05}, {'diff': 5.93750000000004e-05}, {'diff': 5.9013999999999595e-05}, {'diff': 5.9402000000000066e-05}, {'diff': 5.9777999999999915e-05}, {'diff': 6.08750000000019e-05},...</msg>
<status status="PASS" starttime="20201030 11:50:32.584" endtime="20201030 11:50:32.587"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:32.591" level="INFO">${ACCURACY} = {'diff': [5.9388000000000496e-05, 5.93750000000004e-05, 5.9013999999999595e-05, 5.9402000000000066e-05, 5.9777999999999915e-05, 6.08750000000019e-05, 5.9180000000002425e-05, 5.9236000000000705e-05, 5....</msg>
<status status="PASS" starttime="20201030 11:50:32.588" endtime="20201030 11:50:32.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:32.596" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201030 11:50:32.595" endtime="20201030 11:50:32.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:32.598" level="INFO">VALUE: [5.9388000000000496e-05, 5.93750000000004e-05, 5.9013999999999595e-05, 5.9402000000000066e-05, 5.9777999999999915e-05, 6.08750000000019e-05, 5.9180000000002425e-05, 5.9236000000000705e-05, 5.9236000000000705e-05, 5.934700000000126e-05, 5.95689999999989e-05, 5.9541999999999234e-05, 5.933299999999822e-05, 6.084700000000276e-05, 5.938899999999997e-05, 5.9764000000000345e-05, 5.9263999999999845e-05, 6.0819999999999624e-05, 5.970900000000154e-05, 5.8972000000000885e-05, 5.9514000000000095e-05, 5.9638000000000746e-05, 5.902699999999969e-05, 5.951300000000062e-05, 5.913899999999972e-05, 5.9750000000000775e-05, 5.962500000000065e-05, 5.905499999999883e-05, 5.920900000000104e-05, 5.930499999999908e-05, 5.9500000000000525e-05, 6.0847999999998764e-05, 5.906900000000187e-05, 5.933299999999822e-05, 5.9750000000000775e-05, 5.894499999999775e-05, 5.9263999999999845e-05, 5.9334000000001164e-05, 5.9263999999999845e-05, 5.898699999999993e-05, 5.944500000000172e-05, 5.959699999999804e-05, 5.913900000000319e-05, 5.9514000000000095e-05, 5.963900000000022e-05, 5.931899999999865e-05, 5.966699999999936e-05, 5.961100000000108e-05, 5.9527999999999665e-05, 5.893099999999818e-05]</msg>
<status status="PASS" starttime="20201030 11:50:32.597" endtime="20201030 11:50:32.600"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.592" endtime="20201030 11:50:32.601"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:32.604" endtime="20201030 11:50:32.624"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.603" endtime="20201030 11:50:32.624"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.602" endtime="20201030 11:50:32.625"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.240" endtime="20201030 11:50:32.625"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.239" endtime="20201030 11:50:32.625"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:32.634" endtime="20201030 11:50:32.653"></status>
</kw>
<msg timestamp="20201030 11:50:32.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:32.632" endtime="20201030 11:50:32.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:32.656" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:32.655" endtime="20201030 11:50:32.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:32.657" endtime="20201030 11:50:32.660"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.630" endtime="20201030 11:50:32.660"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.628" endtime="20201030 11:50:32.661"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:32.669" endtime="20201030 11:50:32.956"></status>
</kw>
<msg timestamp="20201030 11:50:32.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020006111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020066819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:32.667" endtime="20201030 11:50:32.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:32.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020006111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020066819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:32.960" endtime="20201030 11:50:32.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:32.969" endtime="20201030 11:50:32.970"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.664" endtime="20201030 11:50:32.971"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.662" endtime="20201030 11:50:32.971"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:32.975" level="INFO">${RESULT} = [{'diff': 6.0707999999999596e-05}, {'diff': 6.00689999999994e-05}, {'diff': 6.03750000000014e-05}, {'diff': 5.9957999999998846e-05}, {'diff': 6.040300000000054e-05}, {'diff': 6.015300000000029e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:50:32.972" endtime="20201030 11:50:32.976"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:32.981" level="INFO">${ACCURACY} = {'diff': [6.0707999999999596e-05, 6.00689999999994e-05, 6.03750000000014e-05, 5.9957999999998846e-05, 6.040300000000054e-05, 6.015300000000029e-05, 6.044499999999925e-05, 6.182000000000062e-05, 6.0764...</msg>
<status status="PASS" starttime="20201030 11:50:32.976" endtime="20201030 11:50:32.981"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:32.985" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201030 11:50:32.984" endtime="20201030 11:50:32.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:32.988" level="INFO">VALUE: [6.0707999999999596e-05, 6.00689999999994e-05, 6.03750000000014e-05, 5.9957999999998846e-05, 6.040300000000054e-05, 6.015300000000029e-05, 6.044499999999925e-05, 6.182000000000062e-05, 6.0764000000001345e-05, 6.1888999999999e-05, 5.995899999999832e-05, 6.047300000000186e-05, 6.0152000000000816e-05, 5.9916000000000136e-05, 6.0387999999998027e-05, 6.0722000000002635e-05, 6.031899999999965e-05, 6.03889999999975e-05, 6.0457999999999346e-05, 6.0443999999999776e-05, 6.0179999999999956e-05, 6.184700000000029e-05, 5.9957999999998846e-05, 6.0750000000001775e-05, 6.037499999999793e-05, 6.0056000000002774e-05, 6.03889999999975e-05, 6.070900000000254e-05, 6.030500000000008e-05, 6.0000000000001025e-05, 6.0333999999998694e-05, 6.036099999999836e-05, 6.0028000000000165e-05, 6.180500000000158e-05, 6.033300000000269e-05, 6.058299999999947e-05, 6.037499999999793e-05, 6.0291999999999984e-05, 6.0443999999999776e-05, 6.012500000000115e-05, 6.044499999999925e-05, 6.009700000000201e-05, 6.0777999999997445e-05, 6.040300000000054e-05, 6.0235999999998235e-05, 6.0792000000000485e-05, 6.045899999999882e-05, 6.0514000000001095e-05, 6.1888999999999e-05, 6.182000000000062e-05]</msg>
<status status="PASS" starttime="20201030 11:50:32.986" endtime="20201030 11:50:32.989"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.981" endtime="20201030 11:50:32.989"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:32.993" endtime="20201030 11:50:33.012"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.991" endtime="20201030 11:50:33.013"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.990" endtime="20201030 11:50:33.013"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.626" endtime="20201030 11:50:33.014"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.625" endtime="20201030 11:50:33.014"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:33.023" endtime="20201030 11:50:33.042"></status>
</kw>
<msg timestamp="20201030 11:50:33.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:33.021" endtime="20201030 11:50:33.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:33.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:33.043" endtime="20201030 11:50:33.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:33.046" endtime="20201030 11:50:33.047"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.018" endtime="20201030 11:50:33.048"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.016" endtime="20201030 11:50:33.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:33.055" endtime="20201030 11:50:33.342"></status>
</kw>
<msg timestamp="20201030 11:50:33.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020137167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020198458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:33.054" endtime="20201030 11:50:33.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:33.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020137167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020198458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:33.347" endtime="20201030 11:50:33.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:33.355" endtime="20201030 11:50:33.357"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.051" endtime="20201030 11:50:33.357"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.049" endtime="20201030 11:50:33.358"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:33.362" level="INFO">${RESULT} = [{'diff': 6.129099999999804e-05}, {'diff': 6.163899999999875e-05}, {'diff': 6.122199999999967e-05}, {'diff': 6.105499999999736e-05}, {'diff': 6.162500000000265e-05}, {'diff': 6.147199999999992e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:50:33.358" endtime="20201030 11:50:33.362"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:33.366" level="INFO">${ACCURACY} = {'diff': [6.129099999999804e-05, 6.163899999999875e-05, 6.122199999999967e-05, 6.105499999999736e-05, 6.162500000000265e-05, 6.147199999999992e-05, 6.283299999999825e-05, 6.106999999999987e-05, 6.2834...</msg>
<status status="PASS" starttime="20201030 11:50:33.363" endtime="20201030 11:50:33.366"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:33.371" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201030 11:50:33.370" endtime="20201030 11:50:33.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:33.373" level="INFO">VALUE: [6.129099999999804e-05, 6.163899999999875e-05, 6.122199999999967e-05, 6.105499999999736e-05, 6.162500000000265e-05, 6.147199999999992e-05, 6.283299999999825e-05, 6.106999999999987e-05, 6.28340000000012e-05, 6.28340000000012e-05, 6.15140000000021e-05, 6.115299999999782e-05, 6.28479999999973e-05, 6.150000000000252e-05, 6.287500000000043e-05, 6.093099999999671e-05, 6.10690000000004e-05, 6.136100000000283e-05, 6.105500000000083e-05, 6.165299999999832e-05, 6.163899999999875e-05, 6.1582999999997e-05, 6.113900000000172e-05, 6.141700000000111e-05, 6.133300000000022e-05, 6.175000000000277e-05, 6.2889e-05, 6.13750000000024e-05, 6.28340000000012e-05, 6.123599999999924e-05, 6.115300000000129e-05, 6.282000000000162e-05, 6.1013999999998125e-05, 6.166599999999842e-05, 6.286100000000086e-05, 6.122199999999967e-05, 6.105500000000083e-05, 6.176399999999888e-05, 6.162499999999918e-05, 6.283299999999825e-05, 6.10690000000004e-05, 6.162499999999918e-05, 6.0971999999999416e-05, 6.17080000000006e-05, 6.2889e-05, 6.17499999999993e-05, 6.2889e-05, 6.108400000000291e-05, 6.112500000000215e-05, 6.137499999999893e-05]</msg>
<status status="PASS" starttime="20201030 11:50:33.372" endtime="20201030 11:50:33.381"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.367" endtime="20201030 11:50:33.382"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:33.385" endtime="20201030 11:50:33.405"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.384" endtime="20201030 11:50:33.405"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.383" endtime="20201030 11:50:33.406"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.015" endtime="20201030 11:50:33.406"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.014" endtime="20201030 11:50:33.406"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:33.415" endtime="20201030 11:50:33.436"></status>
</kw>
<msg timestamp="20201030 11:50:33.436" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:33.414" endtime="20201030 11:50:33.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:33.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:33.437" endtime="20201030 11:50:33.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:33.440" endtime="20201030 11:50:33.442"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.411" endtime="20201030 11:50:33.442"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.409" endtime="20201030 11:50:33.443"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:33.449" endtime="20201030 11:50:33.736"></status>
</kw>
<msg timestamp="20201030 11:50:33.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020941528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021003583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:33.448" endtime="20201030 11:50:33.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:33.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020941528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021003583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:33.740" endtime="20201030 11:50:33.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:33.749" endtime="20201030 11:50:33.751"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.445" endtime="20201030 11:50:33.752"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.443" endtime="20201030 11:50:33.752"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:33.756" level="INFO">${RESULT} = [{'diff': 6.205499999999836e-05}, {'diff': 6.201399999999913e-05}, {'diff': 6.380500000000011e-05}, {'diff': 6.199999999999956e-05}, {'diff': 6.381899999999968e-05}, {'diff': 6.216699999999839e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:50:33.753" endtime="20201030 11:50:33.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:33.761" level="INFO">${ACCURACY} = {'diff': [6.205499999999836e-05, 6.201399999999913e-05, 6.380500000000011e-05, 6.199999999999956e-05, 6.381899999999968e-05, 6.216699999999839e-05, 6.199999999999956e-05, 6.201399999999913e-05, 6.2082...</msg>
<status status="PASS" starttime="20201030 11:50:33.757" endtime="20201030 11:50:33.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:33.767" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201030 11:50:33.765" endtime="20201030 11:50:33.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:33.770" level="INFO">VALUE: [6.205499999999836e-05, 6.201399999999913e-05, 6.380500000000011e-05, 6.199999999999956e-05, 6.381899999999968e-05, 6.216699999999839e-05, 6.199999999999956e-05, 6.201399999999913e-05, 6.20829999999975e-05, 6.254200000000223e-05, 6.199999999999956e-05, 6.23889999999995e-05, 6.205599999999784e-05, 6.280599999999859e-05, 6.265300000000279e-05, 6.227699999999947e-05, 6.265199999999985e-05, 6.244400000000178e-05, 6.3889000000001e-05, 6.259700000000104e-05, 6.199999999999956e-05, 6.236100000000036e-05, 6.242999999999874e-05, 6.242999999999874e-05, 6.381899999999968e-05, 6.219400000000153e-05, 6.240299999999907e-05, 6.273600000000074e-05, 6.387499999999796e-05, 6.374999999999784e-05, 6.212500000000315e-05, 6.250000000000006e-05, 6.2195000000001e-05, 6.212499999999968e-05, 6.248699999999996e-05, 6.198699999999946e-05, 6.245800000000135e-05, 6.387499999999796e-05, 6.381899999999968e-05, 6.238900000000297e-05, 6.218000000000196e-05, 6.258300000000147e-05, 6.381899999999968e-05, 6.387499999999796e-05, 6.276399999999988e-05, 6.23340000000007e-05, 6.27500000000003e-05, 6.26950000000015e-05, 6.213899999999925e-05, 6.234800000000026e-05]</msg>
<status status="PASS" starttime="20201030 11:50:33.769" endtime="20201030 11:50:33.772"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.761" endtime="20201030 11:50:33.772"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:33.776" endtime="20201030 11:50:33.796"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.775" endtime="20201030 11:50:33.796"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.773" endtime="20201030 11:50:33.797"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.407" endtime="20201030 11:50:33.797"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.407" endtime="20201030 11:50:33.797"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:33.806" endtime="20201030 11:50:33.825"></status>
</kw>
<msg timestamp="20201030 11:50:33.825" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:33.805" endtime="20201030 11:50:33.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:33.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:33.826" endtime="20201030 11:50:33.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:33.829" endtime="20201030 11:50:33.831"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.802" endtime="20201030 11:50:33.831"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.800" endtime="20201030 11:50:33.832"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:33.838" endtime="20201030 11:50:34.125"></status>
</kw>
<msg timestamp="20201030 11:50:34.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020188361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020251806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:33.837" endtime="20201030 11:50:34.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:34.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020188361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020251806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:34.129" endtime="20201030 11:50:34.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:34.137" endtime="20201030 11:50:34.139"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.834" endtime="20201030 11:50:34.140"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.832" endtime="20201030 11:50:34.140"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:34.144" level="INFO">${RESULT} = [{'diff': 6.344500000000225e-05}, {'diff': 6.295800000000185e-05}, {'diff': 6.358300000000247e-05}, {'diff': 6.361100000000161e-05}, {'diff': 6.313900000000025e-05}, {'diff': 6.3582999999999e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:50:34.141" endtime="20201030 11:50:34.144"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:34.149" level="INFO">${ACCURACY} = {'diff': [6.344500000000225e-05, 6.295800000000185e-05, 6.358300000000247e-05, 6.361100000000161e-05, 6.313900000000025e-05, 6.3582999999999e-05, 6.32080000000021e-05, 6.484699999999982e-05, 6.3568999...</msg>
<status status="PASS" starttime="20201030 11:50:34.145" endtime="20201030 11:50:34.150"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:34.154" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201030 11:50:34.153" endtime="20201030 11:50:34.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:34.156" level="INFO">VALUE: [6.344500000000225e-05, 6.295800000000185e-05, 6.358300000000247e-05, 6.361100000000161e-05, 6.313900000000025e-05, 6.3582999999999e-05, 6.32080000000021e-05, 6.484699999999982e-05, 6.356899999999943e-05, 6.333300000000222e-05, 6.345799999999888e-05, 6.334700000000179e-05, 6.297200000000142e-05, 6.298600000000099e-05, 6.380599999999959e-05, 6.297200000000142e-05, 6.387500000000143e-05, 6.379100000000054e-05, 6.482000000000016e-05, 6.35280000000002e-05, 6.319400000000253e-05, 6.491600000000167e-05, 6.34439999999993e-05, 6.338899999999703e-05, 6.370799999999913e-05, 6.295800000000185e-05, 6.337500000000093e-05, 6.365299999999685e-05, 6.370799999999913e-05, 6.320799999999863e-05, 6.362500000000118e-05, 6.329199999999952e-05, 6.307000000000187e-05, 6.483399999999973e-05, 6.297200000000142e-05, 6.34439999999993e-05, 6.374999999999784e-05, 6.37219999999987e-05, 6.306899999999893e-05, 6.35280000000002e-05, 6.308300000000197e-05, 6.298600000000099e-05, 6.317999999999949e-05, 6.354199999999977e-05, 6.294400000000228e-05, 6.30699999999984e-05, 6.336099999999789e-05, 6.482000000000016e-05, 6.305599999999884e-05, 6.483399999999973e-05]</msg>
<status status="PASS" starttime="20201030 11:50:34.155" endtime="20201030 11:50:34.157"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.150" endtime="20201030 11:50:34.158"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:34.162" endtime="20201030 11:50:34.181"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.160" endtime="20201030 11:50:34.182"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.159" endtime="20201030 11:50:34.182"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.798" endtime="20201030 11:50:34.182"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.797" endtime="20201030 11:50:34.183"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:34.192" endtime="20201030 11:50:34.211"></status>
</kw>
<msg timestamp="20201030 11:50:34.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:34.190" endtime="20201030 11:50:34.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:34.214" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:34.213" endtime="20201030 11:50:34.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:34.216" endtime="20201030 11:50:34.217"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.187" endtime="20201030 11:50:34.218"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.185" endtime="20201030 11:50:34.219"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:34.225" endtime="20201030 11:50:34.514"></status>
</kw>
<msg timestamp="20201030 11:50:34.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020720264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020784542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:34.224" endtime="20201030 11:50:34.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:34.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020720264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020784542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:34.518" endtime="20201030 11:50:34.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:34.527" endtime="20201030 11:50:34.529"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.221" endtime="20201030 11:50:34.529"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.219" endtime="20201030 11:50:34.530"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:34.533" level="INFO">${RESULT} = [{'diff': 6.427800000000095e-05}, {'diff': 6.463799999999881e-05}, {'diff': 6.474999999999884e-05}, {'diff': 6.44440000000003e-05}, {'diff': 6.451399999999816e-05}, {'diff': 6.588800000000006e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:50:34.530" endtime="20201030 11:50:34.534"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:34.538" level="INFO">${ACCURACY} = {'diff': [6.427800000000095e-05, 6.463799999999881e-05, 6.474999999999884e-05, 6.44440000000003e-05, 6.451399999999816e-05, 6.588800000000006e-05, 6.59159999999992e-05, 6.466700000000089e-05, 6.587499...</msg>
<status status="PASS" starttime="20201030 11:50:34.534" endtime="20201030 11:50:34.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:34.542" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201030 11:50:34.541" endtime="20201030 11:50:34.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:34.545" level="INFO">VALUE: [6.427800000000095e-05, 6.463799999999881e-05, 6.474999999999884e-05, 6.44440000000003e-05, 6.451399999999816e-05, 6.588800000000006e-05, 6.59159999999992e-05, 6.466700000000089e-05, 6.587499999999996e-05, 6.449999999999859e-05, 6.440300000000107e-05, 6.47639999999984e-05, 6.42219999999992e-05, 6.404200000000027e-05, 6.399999999999809e-05, 6.450000000000206e-05, 6.595800000000138e-05, 6.465300000000132e-05, 6.480600000000059e-05, 6.58480000000003e-05, 6.591600000000267e-05, 6.586100000000039e-05, 6.456900000000043e-05, 6.456900000000043e-05, 6.43890000000015e-05, 6.466700000000089e-05, 6.427800000000095e-05, 6.480499999999764e-05, 6.47219999999997e-05, 6.448599999999902e-05, 6.476400000000188e-05, 6.47639999999984e-05, 6.416700000000039e-05, 6.463899999999828e-05, 6.401400000000113e-05, 6.580600000000159e-05, 6.445800000000335e-05, 6.393099999999971e-05, 6.466599999999795e-05, 6.470800000000013e-05, 6.477799999999798e-05, 6.468000000000099e-05, 6.588899999999953e-05, 6.415300000000082e-05, 6.393000000000024e-05, 6.433299999999975e-05, 6.391700000000014e-05, 6.580499999999864e-05, 6.434699999999932e-05, 6.469500000000003e-05]</msg>
<status status="PASS" starttime="20201030 11:50:34.543" endtime="20201030 11:50:34.546"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.539" endtime="20201030 11:50:34.546"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:34.550" endtime="20201030 11:50:34.569"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.548" endtime="20201030 11:50:34.570"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.547" endtime="20201030 11:50:34.570"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.183" endtime="20201030 11:50:34.571"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.183" endtime="20201030 11:50:34.571"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:34.580" endtime="20201030 11:50:34.601"></status>
</kw>
<msg timestamp="20201030 11:50:34.601" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:34.578" endtime="20201030 11:50:34.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:34.604" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:34.602" endtime="20201030 11:50:34.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:34.605" endtime="20201030 11:50:34.607"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.575" endtime="20201030 11:50:34.607"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.573" endtime="20201030 11:50:34.608"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:34.614" endtime="20201030 11:50:34.900"></status>
</kw>
<msg timestamp="20201030 11:50:34.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020767722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020833417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:34.613" endtime="20201030 11:50:34.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:34.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020767722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020833417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:34.905" endtime="20201030 11:50:34.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:34.913" endtime="20201030 11:50:34.915"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.610" endtime="20201030 11:50:34.915"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.608" endtime="20201030 11:50:34.916"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:34.920" level="INFO">${RESULT} = [{'diff': 6.569500000000103e-05}, {'diff': 6.508399999999998e-05}, {'diff': 6.518100000000096e-05}, {'diff': 6.497300000000289e-05}, {'diff': 6.559700000000057e-05}, {'diff': 6.519500000000053e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:50:34.917" endtime="20201030 11:50:34.920"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:34.924" level="INFO">${ACCURACY} = {'diff': [6.569500000000103e-05, 6.508399999999998e-05, 6.518100000000096e-05, 6.497300000000289e-05, 6.559700000000057e-05, 6.519500000000053e-05, 6.541699999999817e-05, 6.57359999999968e-05, 6.68609...</msg>
<status status="PASS" starttime="20201030 11:50:34.921" endtime="20201030 11:50:34.924"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:34.929" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201030 11:50:34.928" endtime="20201030 11:50:34.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:34.931" level="INFO">VALUE: [6.569500000000103e-05, 6.508399999999998e-05, 6.518100000000096e-05, 6.497300000000289e-05, 6.559700000000057e-05, 6.519500000000053e-05, 6.541699999999817e-05, 6.57359999999968e-05, 6.686099999999792e-05, 6.548600000000002e-05, 6.688899999999706e-05, 6.495800000000038e-05, 6.505500000000136e-05, 6.530600000000109e-05, 6.580600000000159e-05, 6.498599999999952e-05, 6.57639999999994e-05, 6.555600000000134e-05, 6.505599999999737e-05, 6.519499999999706e-05, 6.544500000000078e-05, 6.524999999999934e-05, 6.543100000000121e-05, 6.544500000000078e-05, 6.576299999999993e-05, 6.534700000000032e-05, 6.518100000000096e-05, 6.559700000000057e-05, 6.576400000000288e-05, 6.681899999999921e-05, 6.519400000000106e-05, 6.559700000000057e-05, 6.515299999999835e-05, 6.515300000000182e-05, 6.688900000000053e-05, 6.533300000000075e-05, 6.558400000000048e-05, 6.684699999999835e-05, 6.508399999999998e-05, 6.5276999999999e-05, 6.50700000000004e-05, 6.501300000000265e-05, 6.518000000000149e-05, 6.50830000000005e-05, 6.57220000000007e-05, 6.533300000000075e-05, 6.537499999999946e-05, 6.519400000000106e-05, 6.545800000000088e-05, 6.544499999999731e-05]</msg>
<status status="PASS" starttime="20201030 11:50:34.930" endtime="20201030 11:50:34.933"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.925" endtime="20201030 11:50:34.933"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:34.937" endtime="20201030 11:50:34.957"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.936" endtime="20201030 11:50:34.957"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.934" endtime="20201030 11:50:34.957"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.572" endtime="20201030 11:50:34.958"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.571" endtime="20201030 11:50:34.958"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:34.967" endtime="20201030 11:50:34.987"></status>
</kw>
<msg timestamp="20201030 11:50:34.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:34.965" endtime="20201030 11:50:34.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:34.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:34.989" endtime="20201030 11:50:34.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:34.991" endtime="20201030 11:50:34.993"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.963" endtime="20201030 11:50:34.993"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.961" endtime="20201030 11:50:34.994"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:35.000" endtime="20201030 11:50:35.285"></status>
</kw>
<msg timestamp="20201030 11:50:35.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020017181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020083306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:34.999" endtime="20201030 11:50:35.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:35.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020017181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020083306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:35.290" endtime="20201030 11:50:35.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:35.298" endtime="20201030 11:50:35.300"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.996" endtime="20201030 11:50:35.300"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.994" endtime="20201030 11:50:35.301"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:35.305" level="INFO">${RESULT} = [{'diff': 6.612500000000021e-05}, {'diff': 6.647300000000092e-05}, {'diff': 6.633299999999828e-05}, {'diff': 6.786200000000187e-05}, {'diff': 6.631999999999819e-05}, {'diff': 6.656899999999896e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:50:35.302" endtime="20201030 11:50:35.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:35.310" level="INFO">${ACCURACY} = {'diff': [6.612500000000021e-05, 6.647300000000092e-05, 6.633299999999828e-05, 6.786200000000187e-05, 6.631999999999819e-05, 6.656899999999896e-05, 6.619399999999859e-05, 6.629100000000304e-05, 6.6014...</msg>
<status status="PASS" starttime="20201030 11:50:35.306" endtime="20201030 11:50:35.310"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:35.315" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201030 11:50:35.313" endtime="20201030 11:50:35.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:35.317" level="INFO">VALUE: [6.612500000000021e-05, 6.647300000000092e-05, 6.633299999999828e-05, 6.786200000000187e-05, 6.631999999999819e-05, 6.656899999999896e-05, 6.619399999999859e-05, 6.629100000000304e-05, 6.601400000000313e-05, 6.60830000000015e-05, 6.677799999999998e-05, 6.655600000000234e-05, 6.618000000000249e-05, 6.652799999999973e-05, 6.598600000000052e-05, 6.615199999999988e-05, 6.630600000000209e-05, 6.608400000000098e-05, 6.616599999999945e-05, 6.67359999999978e-05, 6.633300000000175e-05, 6.629099999999957e-05, 6.592999999999877e-05, 6.665299999999985e-05, 6.601399999999966e-05, 6.606899999999846e-05, 6.618099999999849e-05, 6.643099999999874e-05, 6.650000000000059e-05, 6.598600000000052e-05, 6.60280000000027e-05, 6.663799999999734e-05, 6.62639999999999e-05, 6.6583999999998e-05, 6.675000000000084e-05, 6.680599999999912e-05, 6.665299999999985e-05, 6.634700000000132e-05, 6.650000000000059e-05, 6.676300000000093e-05, 6.601399999999966e-05, 6.641699999999917e-05, 6.668099999999899e-05, 6.67640000000004e-05, 6.638900000000003e-05, 6.605499999999889e-05, 6.677799999999998e-05, 6.673600000000127e-05, 6.680599999999912e-05, 6.620899999999763e-05]</msg>
<status status="PASS" starttime="20201030 11:50:35.316" endtime="20201030 11:50:35.318"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.311" endtime="20201030 11:50:35.318"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:35.322" endtime="20201030 11:50:35.342"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.321" endtime="20201030 11:50:35.342"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.319" endtime="20201030 11:50:35.343"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.959" endtime="20201030 11:50:35.343"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.958" endtime="20201030 11:50:35.343"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:35.352" endtime="20201030 11:50:35.371"></status>
</kw>
<msg timestamp="20201030 11:50:35.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:35.351" endtime="20201030 11:50:35.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:35.374" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:35.372" endtime="20201030 11:50:35.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:35.375" endtime="20201030 11:50:35.377"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.348" endtime="20201030 11:50:35.377"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.346" endtime="20201030 11:50:35.378"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:35.384" endtime="20201030 11:50:35.672"></status>
</kw>
<msg timestamp="20201030 11:50:35.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020002042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020069708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:35.383" endtime="20201030 11:50:35.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:35.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020002042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020069708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:35.676" endtime="20201030 11:50:35.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:35.685" endtime="20201030 11:50:35.686"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.380" endtime="20201030 11:50:35.687"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.378" endtime="20201030 11:50:35.687"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:35.691" level="INFO">${RESULT} = [{'diff': 6.766599999999748e-05}, {'diff': 6.729100000000057e-05}, {'diff': 6.709700000000207e-05}, {'diff': 6.752700000000125e-05}, {'diff': 6.72359999999983e-05}, {'diff': 6.701400000000066e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:50:35.688" endtime="20201030 11:50:35.692"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:35.696" level="INFO">${ACCURACY} = {'diff': [6.766599999999748e-05, 6.729100000000057e-05, 6.709700000000207e-05, 6.752700000000125e-05, 6.72359999999983e-05, 6.701400000000066e-05, 6.718000000000002e-05, 6.733300000000275e-05, 6.70829...</msg>
<status status="PASS" starttime="20201030 11:50:35.692" endtime="20201030 11:50:35.696"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:35.700" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201030 11:50:35.699" endtime="20201030 11:50:35.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:35.703" level="INFO">VALUE: [6.766599999999748e-05, 6.729100000000057e-05, 6.709700000000207e-05, 6.752700000000125e-05, 6.72359999999983e-05, 6.701400000000066e-05, 6.718000000000002e-05, 6.733300000000275e-05, 6.708299999999903e-05, 6.712500000000121e-05, 6.769499999999956e-05, 6.695899999999838e-05, 6.755599999999987e-05, 6.731999999999919e-05, 6.755500000000039e-05, 6.736099999999842e-05, 6.734700000000232e-05, 6.737499999999799e-05, 6.705599999999937e-05, 6.770799999999966e-05, 6.758299999999953e-05, 6.765299999999738e-05, 6.731899999999971e-05, 6.697199999999848e-05, 6.700000000000109e-05, 6.718000000000002e-05, 6.743099999999974e-05, 6.69030000000001e-05, 6.755599999999987e-05, 6.736100000000189e-05, 6.752800000000073e-05, 6.743099999999974e-05, 6.740299999999713e-05, 6.724999999999787e-05, 6.887499999999949e-05, 6.704100000000032e-05, 6.884700000000035e-05, 6.763900000000128e-05, 6.744499999999931e-05, 6.712500000000121e-05, 6.701400000000066e-05, 6.701400000000066e-05, 6.706899999999946e-05, 6.706899999999946e-05, 6.701400000000066e-05, 6.763900000000128e-05, 6.890299999999863e-05, 6.887499999999949e-05, 6.775000000000184e-05, 6.756999999999944e-05]</msg>
<status status="PASS" starttime="20201030 11:50:35.701" endtime="20201030 11:50:35.704"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.697" endtime="20201030 11:50:35.704"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:35.708" endtime="20201030 11:50:35.727"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.706" endtime="20201030 11:50:35.728"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.705" endtime="20201030 11:50:35.728"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.344" endtime="20201030 11:50:35.729"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.343" endtime="20201030 11:50:35.729"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:35.738" endtime="20201030 11:50:35.759"></status>
</kw>
<msg timestamp="20201030 11:50:35.759" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:35.736" endtime="20201030 11:50:35.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:35.762" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:35.760" endtime="20201030 11:50:35.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:35.763" endtime="20201030 11:50:35.764"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.734" endtime="20201030 11:50:35.765"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.731" endtime="20201030 11:50:35.766"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:35.773" endtime="20201030 11:50:36.059"></status>
</kw>
<msg timestamp="20201030 11:50:36.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020918264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020987167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:35.771" endtime="20201030 11:50:36.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:36.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020918264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020987167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:36.063" endtime="20201030 11:50:36.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:36.072" endtime="20201030 11:50:36.073"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.768" endtime="20201030 11:50:36.074"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.766" endtime="20201030 11:50:36.074"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:36.079" level="INFO">${RESULT} = [{'diff': 6.89030000000021e-05}, {'diff': 6.87229999999997e-05}, {'diff': 6.808300000000003e-05}, {'diff': 6.80420000000008e-05}, {'diff': 6.863899999999881e-05}, {'diff': 6.799999999999862e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 11:50:36.075" endtime="20201030 11:50:36.079"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:36.083" level="INFO">${ACCURACY} = {'diff': [6.89030000000021e-05, 6.87229999999997e-05, 6.808300000000003e-05, 6.80420000000008e-05, 6.863899999999881e-05, 6.799999999999862e-05, 6.841700000000117e-05, 6.794400000000034e-05, 6.8485999...</msg>
<status status="PASS" starttime="20201030 11:50:36.080" endtime="20201030 11:50:36.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:36.087" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201030 11:50:36.086" endtime="20201030 11:50:36.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:36.090" level="INFO">VALUE: [6.89030000000021e-05, 6.87229999999997e-05, 6.808300000000003e-05, 6.80420000000008e-05, 6.863899999999881e-05, 6.799999999999862e-05, 6.841700000000117e-05, 6.794400000000034e-05, 6.848599999999955e-05, 6.815299999999788e-05, 6.811099999999917e-05, 6.813899999999831e-05, 6.801399999999819e-05, 6.877800000000198e-05, 6.982000000000169e-05, 6.815299999999788e-05, 6.850000000000259e-05, 6.844500000000031e-05, 6.868000000000152e-05, 6.863799999999934e-05, 6.852700000000225e-05, 6.849999999999912e-05, 6.990200000000016e-05, 6.829100000000157e-05, 6.876399999999894e-05, 6.811100000000264e-05, 6.815300000000135e-05, 6.868100000000099e-05, 6.820899999999963e-05, 6.838899999999856e-05, 6.801400000000166e-05, 6.869500000000056e-05, 6.819500000000006e-05, 6.857000000000044e-05, 6.793100000000024e-05, 6.87770000000025e-05, 6.840199999999866e-05, 6.877699999999903e-05, 6.868100000000099e-05, 6.873600000000327e-05, 6.82640000000019e-05, 6.847199999999998e-05, 6.815299999999788e-05, 6.849999999999912e-05, 6.87640000000024e-05, 6.843099999999727e-05, 6.863900000000228e-05, 6.879200000000155e-05, 6.981999999999822e-05, 6.801400000000166e-05]</msg>
<status status="PASS" starttime="20201030 11:50:36.088" endtime="20201030 11:50:36.092"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.084" endtime="20201030 11:50:36.092"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:36.096" endtime="20201030 11:50:36.115"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.094" endtime="20201030 11:50:36.116"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.093" endtime="20201030 11:50:36.116"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.730" endtime="20201030 11:50:36.116"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.729" endtime="20201030 11:50:36.117"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:36.126" endtime="20201030 11:50:36.145"></status>
</kw>
<msg timestamp="20201030 11:50:36.146" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:36.124" endtime="20201030 11:50:36.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:36.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:36.147" endtime="20201030 11:50:36.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:36.149" endtime="20201030 11:50:36.151"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.121" endtime="20201030 11:50:36.152"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.119" endtime="20201030 11:50:36.152"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:36.159" endtime="20201030 11:50:36.444"></status>
</kw>
<msg timestamp="20201030 11:50:36.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019913722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019982778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:36.157" endtime="20201030 11:50:36.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:36.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019913722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019982778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:36.449" endtime="20201030 11:50:36.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:36.457" endtime="20201030 11:50:36.459"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.154" endtime="20201030 11:50:36.459"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.153" endtime="20201030 11:50:36.460"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:36.464" level="INFO">${RESULT} = [{'diff': 6.905600000000137e-05}, {'diff': 6.926399999999944e-05}, {'diff': 6.919500000000106e-05}, {'diff': 6.959800000000058e-05}, {'diff': 6.915199999999941e-05}, {'diff': 6.906999999999747e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:50:36.461" endtime="20201030 11:50:36.464"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:36.469" level="INFO">${ACCURACY} = {'diff': [6.905600000000137e-05, 6.926399999999944e-05, 6.919500000000106e-05, 6.959800000000058e-05, 6.915199999999941e-05, 6.906999999999747e-05, 6.970799999999819e-05, 6.908299999999756e-05, 6.9416...</msg>
<status status="PASS" starttime="20201030 11:50:36.465" endtime="20201030 11:50:36.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:36.474" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201030 11:50:36.473" endtime="20201030 11:50:36.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:36.476" level="INFO">VALUE: [6.905600000000137e-05, 6.926399999999944e-05, 6.919500000000106e-05, 6.959800000000058e-05, 6.915199999999941e-05, 6.906999999999747e-05, 6.970799999999819e-05, 6.908299999999756e-05, 6.94169999999987e-05, 7.086100000000192e-05, 6.913899999999931e-05, 6.908299999999756e-05, 6.945800000000141e-05, 6.962500000000024e-05, 6.965299999999938e-05, 7.09170000000002e-05, 6.922200000000073e-05, 6.948599999999708e-05, 7.084800000000183e-05, 6.952799999999926e-05, 6.96109999999972e-05, 6.952699999999978e-05, 7.091599999999726e-05, 6.895800000000091e-05, 6.980500000000264e-05, 6.919400000000159e-05, 6.915299999999888e-05, 6.919499999999759e-05, 6.918100000000149e-05, 6.905499999999842e-05, 6.902800000000223e-05, 7.090299999999716e-05, 6.937499999999999e-05, 7.073599999999833e-05, 6.90840000000005e-05, 6.963899999999981e-05, 6.906899999999799e-05, 6.918099999999802e-05, 6.940199999999966e-05, 6.917999999999855e-05, 6.944399999999837e-05, 6.97499999999969e-05, 6.958299999999806e-05, 6.905499999999842e-05, 6.961100000000067e-05, 6.927799999999901e-05, 6.913899999999931e-05, 6.940299999999913e-05, 6.954199999999883e-05, 7.087499999999802e-05]</msg>
<status status="PASS" starttime="20201030 11:50:36.475" endtime="20201030 11:50:36.477"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.470" endtime="20201030 11:50:36.478"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:36.481" endtime="20201030 11:50:36.501"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.480" endtime="20201030 11:50:36.501"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.479" endtime="20201030 11:50:36.502"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.117" endtime="20201030 11:50:36.502"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.117" endtime="20201030 11:50:36.502"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:36.511" endtime="20201030 11:50:36.531"></status>
</kw>
<msg timestamp="20201030 11:50:36.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:36.510" endtime="20201030 11:50:36.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:36.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:36.532" endtime="20201030 11:50:36.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:36.535" endtime="20201030 11:50:36.536"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.507" endtime="20201030 11:50:36.537"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.505" endtime="20201030 11:50:36.537"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:36.544" endtime="20201030 11:50:36.831"></status>
</kw>
<msg timestamp="20201030 11:50:36.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019953917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020024708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:36.543" endtime="20201030 11:50:36.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:36.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019953917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020024708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:36.835" endtime="20201030 11:50:36.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:36.844" endtime="20201030 11:50:36.845"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.540" endtime="20201030 11:50:36.846"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.538" endtime="20201030 11:50:36.846"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:36.850" level="INFO">${RESULT} = [{'diff': 7.079099999999713e-05}, {'diff': 7.080599999999965e-05}, {'diff': 7.048599999999808e-05}, {'diff': 7.04169999999997e-05}, {'diff': 6.998600000000105e-05}, {'diff': 7.072199999999876e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:50:36.847" endtime="20201030 11:50:36.851"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:36.855" level="INFO">${ACCURACY} = {'diff': [7.079099999999713e-05, 7.080599999999965e-05, 7.048599999999808e-05, 7.04169999999997e-05, 6.998600000000105e-05, 7.072199999999876e-05, 7.062499999999777e-05, 7.03620000000009e-05, 7.077800...</msg>
<status status="PASS" starttime="20201030 11:50:36.851" endtime="20201030 11:50:36.855"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:36.859" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201030 11:50:36.858" endtime="20201030 11:50:36.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:36.862" level="INFO">VALUE: [7.079099999999713e-05, 7.080599999999965e-05, 7.048599999999808e-05, 7.04169999999997e-05, 6.998600000000105e-05, 7.072199999999876e-05, 7.062499999999777e-05, 7.03620000000009e-05, 7.077800000000051e-05, 7.045900000000188e-05, 6.990299999999963e-05, 7.034800000000133e-05, 7.070899999999866e-05, 7.040300000000013e-05, 6.997200000000148e-05, 7.022199999999826e-05, 7.04299999999998e-05, 7.008299999999856e-05, 7.063900000000081e-05, 7.070799999999919e-05, 7.063900000000081e-05, 7.026399999999697e-05, 7.047199999999851e-05, 7.077800000000051e-05, 7.069500000000256e-05, 7.04169999999997e-05, 6.994499999999834e-05, 7.072299999999823e-05, 7.044499999999884e-05, 7.012500000000074e-05, 6.99169999999992e-05, 7.015200000000041e-05, 7.04299999999998e-05, 7.020800000000216e-05, 7.026399999999697e-05, 7.061100000000167e-05, 6.994400000000234e-05, 7.077800000000051e-05, 7.187499999999902e-05, 6.994399999999887e-05, 7.076400000000094e-05, 7.000000000000062e-05, 7.182000000000022e-05, 7.063900000000081e-05, 7.026400000000044e-05, 7.002799999999976e-05, 7.065300000000038e-05, 7.076400000000094e-05, 7.004199999999933e-05, 7.058300000000253e-05]</msg>
<status status="PASS" starttime="20201030 11:50:36.860" endtime="20201030 11:50:36.863"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.856" endtime="20201030 11:50:36.863"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:36.867" endtime="20201030 11:50:36.886"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.865" endtime="20201030 11:50:36.887"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.864" endtime="20201030 11:50:36.887"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.503" endtime="20201030 11:50:36.888"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.503" endtime="20201030 11:50:36.888"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:36.897" endtime="20201030 11:50:36.917"></status>
</kw>
<msg timestamp="20201030 11:50:36.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:36.895" endtime="20201030 11:50:36.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:36.920" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:36.919" endtime="20201030 11:50:36.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:36.921" endtime="20201030 11:50:36.923"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.893" endtime="20201030 11:50:36.924"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.890" endtime="20201030 11:50:36.924"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:36.931" endtime="20201030 11:50:37.216"></status>
</kw>
<msg timestamp="20201030 11:50:37.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021040056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021111944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:36.929" endtime="20201030 11:50:37.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:37.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021040056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021111944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:37.221" endtime="20201030 11:50:37.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:37.229" endtime="20201030 11:50:37.231"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.926" endtime="20201030 11:50:37.232"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.925" endtime="20201030 11:50:37.232"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:37.236" level="INFO">${RESULT} = [{'diff': 7.188799999999912e-05}, {'diff': 7.118100000000002e-05}, {'diff': 7.115299999999741e-05}, {'diff': 7.147200000000298e-05}, {'diff': 7.106999999999947e-05}, {'diff': 7.119499999999959e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:50:37.233" endtime="20201030 11:50:37.236"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:37.240" level="INFO">${ACCURACY} = {'diff': [7.188799999999912e-05, 7.118100000000002e-05, 7.115299999999741e-05, 7.147200000000298e-05, 7.106999999999947e-05, 7.119499999999959e-05, 7.102799999999729e-05, 7.169400000000062e-05, 7.1334...</msg>
<status status="PASS" starttime="20201030 11:50:37.237" endtime="20201030 11:50:37.241"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:37.245" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201030 11:50:37.244" endtime="20201030 11:50:37.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:37.247" level="INFO">VALUE: [7.188799999999912e-05, 7.118100000000002e-05, 7.115299999999741e-05, 7.147200000000298e-05, 7.106999999999947e-05, 7.119499999999959e-05, 7.102799999999729e-05, 7.169400000000062e-05, 7.133400000000276e-05, 7.140200000000166e-05, 7.101400000000119e-05, 7.108299999999956e-05, 7.147199999999951e-05, 7.298599999999711e-05, 7.156999999999997e-05, 7.15690000000005e-05, 7.162499999999877e-05, 7.133299999999981e-05, 7.133299999999981e-05, 7.12230000000022e-05, 7.138900000000156e-05, 7.287500000000002e-05, 7.148699999999855e-05, 7.095900000000238e-05, 7.168100000000052e-05, 7.150000000000212e-05, 7.095800000000291e-05, 7.173599999999933e-05, 7.145799999999994e-05, 7.119400000000012e-05, 7.144400000000037e-05, 7.126400000000144e-05, 7.284700000000088e-05, 7.170800000000019e-05, 7.104200000000033e-05, 7.172299999999923e-05, 7.12499999999984e-05, 7.17499999999989e-05, 7.118100000000002e-05, 7.162499999999877e-05, 7.18049999999977e-05, 7.287500000000002e-05, 7.126400000000144e-05, 7.145799999999994e-05, 7.15690000000005e-05, 7.112500000000174e-05, 7.169399999999715e-05, 7.131900000000024e-05, 7.119400000000012e-05, 7.10559999999999e-05]</msg>
<status status="PASS" starttime="20201030 11:50:37.246" endtime="20201030 11:50:37.249"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.241" endtime="20201030 11:50:37.250"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:37.254" endtime="20201030 11:50:37.273"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.252" endtime="20201030 11:50:37.274"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.251" endtime="20201030 11:50:37.274"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.889" endtime="20201030 11:50:37.274"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.888" endtime="20201030 11:50:37.274"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:37.283" endtime="20201030 11:50:37.302"></status>
</kw>
<msg timestamp="20201030 11:50:37.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:37.282" endtime="20201030 11:50:37.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:37.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:37.304" endtime="20201030 11:50:37.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:37.307" endtime="20201030 11:50:37.308"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.279" endtime="20201030 11:50:37.309"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.277" endtime="20201030 11:50:37.309"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:37.316" endtime="20201030 11:50:37.602"></status>
</kw>
<msg timestamp="20201030 11:50:37.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019994514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020067194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:37.314" endtime="20201030 11:50:37.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:37.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019994514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020067194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:37.606" endtime="20201030 11:50:37.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:37.614" endtime="20201030 11:50:37.616"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.312" endtime="20201030 11:50:37.617"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.310" endtime="20201030 11:50:37.617"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:37.621" level="INFO">${RESULT} = [{'diff': 7.267999999999858e-05}, {'diff': 7.217999999999808e-05}, {'diff': 7.202699999999881e-05}, {'diff': 7.237499999999952e-05}, {'diff': 7.199999999999915e-05}, {'diff': 7.262499999999977e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:50:37.618" endtime="20201030 11:50:37.621"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:37.626" level="INFO">${ACCURACY} = {'diff': [7.267999999999858e-05, 7.217999999999808e-05, 7.202699999999881e-05, 7.237499999999952e-05, 7.199999999999915e-05, 7.262499999999977e-05, 7.27499999999999e-05, 7.219399999999765e-05, 7.24450...</msg>
<status status="PASS" starttime="20201030 11:50:37.622" endtime="20201030 11:50:37.626"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:37.631" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201030 11:50:37.630" endtime="20201030 11:50:37.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:37.634" level="INFO">VALUE: [7.267999999999858e-05, 7.217999999999808e-05, 7.202699999999881e-05, 7.237499999999952e-05, 7.199999999999915e-05, 7.262499999999977e-05, 7.27499999999999e-05, 7.219399999999765e-05, 7.244500000000084e-05, 7.386100000000145e-05, 7.380600000000265e-05, 7.195899999999991e-05, 7.279200000000208e-05, 7.263899999999934e-05, 7.263800000000334e-05, 7.23049999999982e-05, 7.386200000000093e-05, 7.2763e-05, 7.212499999999927e-05, 7.38049999999997e-05, 7.227799999999854e-05, 7.22360000000033e-05, 7.195800000000044e-05, 7.212499999999927e-05, 7.262499999999977e-05, 7.243100000000127e-05, 7.245900000000041e-05, 7.269499999999762e-05, 7.387499999999755e-05, 7.386099999999798e-05, 7.207000000000047e-05, 7.243100000000127e-05, 7.268000000000205e-05, 7.217999999999808e-05, 7.23049999999982e-05, 7.242999999999833e-05, 7.212499999999927e-05, 7.263899999999934e-05, 7.270799999999772e-05, 7.266699999999848e-05, 7.218100000000102e-05, 7.387499999999755e-05, 7.381999999999875e-05, 7.26110000000002e-05, 7.213899999999884e-05, 7.227800000000201e-05, 7.252699999999931e-05, 7.187499999999902e-05, 7.209700000000013e-05, 7.194400000000087e-05]</msg>
<status status="PASS" starttime="20201030 11:50:37.632" endtime="20201030 11:50:37.634"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.627" endtime="20201030 11:50:37.635"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:37.639" endtime="20201030 11:50:37.658"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.637" endtime="20201030 11:50:37.659"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.636" endtime="20201030 11:50:37.659"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.275" endtime="20201030 11:50:37.659"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.275" endtime="20201030 11:50:37.660"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:37.669" endtime="20201030 11:50:37.688"></status>
</kw>
<msg timestamp="20201030 11:50:37.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:37.667" endtime="20201030 11:50:37.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:37.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:37.690" endtime="20201030 11:50:37.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:37.692" endtime="20201030 11:50:37.694"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.664" endtime="20201030 11:50:37.695"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.662" endtime="20201030 11:50:37.695"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:37.702" endtime="20201030 11:50:37.991"></status>
</kw>
<msg timestamp="20201030 11:50:37.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020144542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020218319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:37.700" endtime="20201030 11:50:37.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:38.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020144542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020218319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:37.996" endtime="20201030 11:50:38.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:38.004" endtime="20201030 11:50:38.006"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.698" endtime="20201030 11:50:38.006"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.696" endtime="20201030 11:50:38.007"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:38.011" level="INFO">${RESULT} = [{'diff': 7.37769999999971e-05}, {'diff': 7.347200000000151e-05}, {'diff': 7.369399999999915e-05}, {'diff': 7.306899999999852e-05}, {'diff': 7.32500000000004e-05}, {'diff': 7.370799999999872e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:50:38.008" endtime="20201030 11:50:38.011"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:38.015" level="INFO">${ACCURACY} = {'diff': [7.37769999999971e-05, 7.347200000000151e-05, 7.369399999999915e-05, 7.306899999999852e-05, 7.32500000000004e-05, 7.370799999999872e-05, 7.319400000000212e-05, 7.3763999999997e-05, 7.38199999...</msg>
<status status="PASS" starttime="20201030 11:50:38.012" endtime="20201030 11:50:38.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:38.020" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201030 11:50:38.019" endtime="20201030 11:50:38.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:38.022" level="INFO">VALUE: [7.37769999999971e-05, 7.347200000000151e-05, 7.369399999999915e-05, 7.306899999999852e-05, 7.32500000000004e-05, 7.370799999999872e-05, 7.319400000000212e-05, 7.3763999999997e-05, 7.381999999999875e-05, 7.332000000000172e-05, 7.351400000000022e-05, 7.332000000000172e-05, 7.333399999999782e-05, 7.488900000000159e-05, 7.369399999999915e-05, 7.352700000000031e-05, 7.340200000000019e-05, 7.370799999999872e-05, 7.342999999999933e-05, 7.326399999999997e-05, 7.305500000000242e-05, 7.305500000000242e-05, 7.495899999999944e-05, 7.381999999999875e-05, 7.487499999999855e-05, 7.331999999999825e-05, 7.301399999999972e-05, 7.352799999999979e-05, 7.36249999999973e-05, 7.34309999999988e-05, 7.312500000000027e-05, 7.324999999999693e-05, 7.317999999999908e-05, 7.377700000000056e-05, 7.294400000000187e-05, 7.35829999999986e-05, 7.318100000000202e-05, 7.333299999999834e-05, 7.359700000000163e-05, 7.308300000000156e-05, 7.318099999999855e-05, 7.491600000000126e-05, 7.484699999999941e-05, 7.318099999999855e-05, 7.330599999999868e-05, 7.326399999999997e-05, 7.305599999999843e-05, 7.363800000000087e-05, 7.316599999999951e-05, 7.34439999999989e-05]</msg>
<status status="PASS" starttime="20201030 11:50:38.021" endtime="20201030 11:50:38.023"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.016" endtime="20201030 11:50:38.024"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:38.028" endtime="20201030 11:50:38.047"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.026" endtime="20201030 11:50:38.048"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.025" endtime="20201030 11:50:38.048"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.660" endtime="20201030 11:50:38.048"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.660" endtime="20201030 11:50:38.048"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:38.057" endtime="20201030 11:50:38.078"></status>
</kw>
<msg timestamp="20201030 11:50:38.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:38.056" endtime="20201030 11:50:38.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:38.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:38.080" endtime="20201030 11:50:38.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:38.082" endtime="20201030 11:50:38.084"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.053" endtime="20201030 11:50:38.084"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.051" endtime="20201030 11:50:38.085"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:38.092" endtime="20201030 11:50:38.377"></status>
</kw>
<msg timestamp="20201030 11:50:38.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020845389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020920069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:38.090" endtime="20201030 11:50:38.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:38.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020845389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020920069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:38.381" endtime="20201030 11:50:38.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:38.390" endtime="20201030 11:50:38.391"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.087" endtime="20201030 11:50:38.392"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.085" endtime="20201030 11:50:38.392"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:38.396" level="INFO">${RESULT} = [{'diff': 7.468000000000058e-05}, {'diff': 7.419499999999912e-05}, {'diff': 7.401399999999725e-05}, {'diff': 7.472200000000276e-05}, {'diff': 7.465300000000091e-05}, {'diff': 7.426400000000097e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:50:38.393" endtime="20201030 11:50:38.397"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:38.401" level="INFO">${ACCURACY} = {'diff': [7.468000000000058e-05, 7.419499999999912e-05, 7.401399999999725e-05, 7.472200000000276e-05, 7.465300000000091e-05, 7.426400000000097e-05, 7.443000000000033e-05, 7.451400000000122e-05, 7.4138...</msg>
<status status="PASS" starttime="20201030 11:50:38.397" endtime="20201030 11:50:38.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:38.405" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201030 11:50:38.404" endtime="20201030 11:50:38.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:38.408" level="INFO">VALUE: [7.468000000000058e-05, 7.419499999999912e-05, 7.401399999999725e-05, 7.472200000000276e-05, 7.465300000000091e-05, 7.426400000000097e-05, 7.443000000000033e-05, 7.451400000000122e-05, 7.413899999999737e-05, 7.397199999999854e-05, 7.394400000000287e-05, 7.433299999999934e-05, 7.451400000000122e-05, 7.422199999999879e-05, 7.454200000000036e-05, 7.420899999999869e-05, 7.584699999999694e-05, 7.473699999999833e-05, 7.424999999999793e-05, 7.406899999999952e-05, 7.443000000000033e-05, 7.473600000000233e-05, 7.39439999999994e-05, 7.58890000000026e-05, 7.408300000000256e-05, 7.420799999999922e-05, 7.436100000000195e-05, 7.430599999999968e-05, 7.45699999999995e-05, 7.477800000000104e-05, 7.454100000000088e-05, 7.42500000000014e-05, 7.438900000000109e-05, 7.404100000000038e-05, 7.587499999999955e-05, 7.402700000000081e-05, 7.465300000000091e-05, 7.441600000000076e-05, 7.476400000000147e-05, 7.45829999999996e-05, 7.58890000000026e-05, 7.40829999999991e-05, 7.42500000000014e-05, 7.462500000000177e-05, 7.481999999999975e-05, 7.438900000000109e-05, 7.437500000000152e-05, 7.416699999999998e-05, 7.423599999999836e-05, 7.452699999999784e-05]</msg>
<status status="PASS" starttime="20201030 11:50:38.406" endtime="20201030 11:50:38.416"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.402" endtime="20201030 11:50:38.417"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:38.421" endtime="20201030 11:50:38.440"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.419" endtime="20201030 11:50:38.441"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.418" endtime="20201030 11:50:38.441"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.049" endtime="20201030 11:50:38.441"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.049" endtime="20201030 11:50:38.441"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:38.450" endtime="20201030 11:50:38.469"></status>
</kw>
<msg timestamp="20201030 11:50:38.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:38.449" endtime="20201030 11:50:38.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:38.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:38.471" endtime="20201030 11:50:38.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:38.474" endtime="20201030 11:50:38.475"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.446" endtime="20201030 11:50:38.476"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.444" endtime="20201030 11:50:38.476"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:38.483" endtime="20201030 11:50:38.768"></status>
</kw>
<msg timestamp="20201030 11:50:38.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019964736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02003975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:38.481" endtime="20201030 11:50:38.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:38.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019964736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02003975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:38.772" endtime="20201030 11:50:38.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:38.780" endtime="20201030 11:50:38.782"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.479" endtime="20201030 11:50:38.783"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.477" endtime="20201030 11:50:38.783"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:38.787" level="INFO">${RESULT} = [{'diff': 7.501399999999825e-05}, {'diff': 7.499999999999868e-05}, {'diff': 7.519400000000065e-05}, {'diff': 7.504199999999739e-05}, {'diff': 7.688900000000012e-05}, {'diff': 7.574999999999943e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:50:38.784" endtime="20201030 11:50:38.787"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:38.792" level="INFO">${ACCURACY} = {'diff': [7.501399999999825e-05, 7.499999999999868e-05, 7.519400000000065e-05, 7.504199999999739e-05, 7.688900000000012e-05, 7.574999999999943e-05, 7.683400000000132e-05, 7.504100000000138e-05, 7.5138...</msg>
<status status="PASS" starttime="20201030 11:50:38.788" endtime="20201030 11:50:38.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:38.797" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201030 11:50:38.796" endtime="20201030 11:50:38.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:38.800" level="INFO">VALUE: [7.501399999999825e-05, 7.499999999999868e-05, 7.519400000000065e-05, 7.504199999999739e-05, 7.688900000000012e-05, 7.574999999999943e-05, 7.683400000000132e-05, 7.504100000000138e-05, 7.513899999999837e-05, 7.515200000000194e-05, 7.556900000000102e-05, 7.51249999999988e-05, 7.538899999999862e-05, 7.49440000000004e-05, 7.576400000000247e-05, 7.54440000000009e-05, 7.55700000000005e-05, 7.570800000000072e-05, 7.501399999999825e-05, 7.497299999999901e-05, 7.505600000000043e-05, 7.524999999999893e-05, 7.556900000000102e-05, 7.576400000000247e-05, 7.526299999999903e-05, 7.580499999999823e-05, 7.537499999999905e-05, 7.569399999999768e-05, 7.573599999999986e-05, 7.565300000000191e-05, 7.683300000000184e-05, 7.516700000000098e-05, 7.683299999999837e-05, 7.527800000000154e-05, 7.516699999999751e-05, 7.572300000000323e-05, 7.527799999999807e-05, 7.683400000000132e-05, 7.513900000000184e-05, 7.551399999999875e-05, 7.536199999999896e-05, 7.683300000000184e-05, 7.518000000000108e-05, 7.55830000000006e-05, 7.549999999999918e-05, 7.570800000000072e-05, 7.51110000000027e-05, 7.56249999999993e-05, 7.501399999999825e-05, 7.519500000000012e-05]</msg>
<status status="PASS" starttime="20201030 11:50:38.798" endtime="20201030 11:50:38.800"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.793" endtime="20201030 11:50:38.801"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:38.805" endtime="20201030 11:50:38.824"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.803" endtime="20201030 11:50:38.825"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.802" endtime="20201030 11:50:38.825"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.442" endtime="20201030 11:50:38.825"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.442" endtime="20201030 11:50:38.826"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:38.835" endtime="20201030 11:50:38.855"></status>
</kw>
<msg timestamp="20201030 11:50:38.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:38.833" endtime="20201030 11:50:38.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:38.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:38.856" endtime="20201030 11:50:38.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:38.859" endtime="20201030 11:50:38.861"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.830" endtime="20201030 11:50:38.861"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.828" endtime="20201030 11:50:38.862"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:38.868" endtime="20201030 11:50:39.156"></status>
</kw>
<msg timestamp="20201030 11:50:39.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020124181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020200944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:38.867" endtime="20201030 11:50:39.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:39.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020124181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020200944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:39.160" endtime="20201030 11:50:39.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:39.169" endtime="20201030 11:50:39.170"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.864" endtime="20201030 11:50:39.171"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.862" endtime="20201030 11:50:39.171"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:39.175" level="INFO">${RESULT} = [{'diff': 7.676299999999706e-05}, {'diff': 7.656899999999855e-05}, {'diff': 7.650000000000018e-05}, {'diff': 7.59440000000014e-05}, {'diff': 7.666699999999901e-05}, {'diff': 7.6764e-05}, {'diff': 7.63...</msg>
<status status="PASS" starttime="20201030 11:50:39.172" endtime="20201030 11:50:39.176"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:39.180" level="INFO">${ACCURACY} = {'diff': [7.676299999999706e-05, 7.656899999999855e-05, 7.650000000000018e-05, 7.59440000000014e-05, 7.666699999999901e-05, 7.6764e-05, 7.638899999999962e-05, 7.6764e-05, 7.6070000000001e-05, 7.781899...</msg>
<status status="PASS" starttime="20201030 11:50:39.176" endtime="20201030 11:50:39.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:39.184" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201030 11:50:39.183" endtime="20201030 11:50:39.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:39.187" level="INFO">VALUE: [7.676299999999706e-05, 7.656899999999855e-05, 7.650000000000018e-05, 7.59440000000014e-05, 7.666699999999901e-05, 7.6764e-05, 7.638899999999962e-05, 7.6764e-05, 7.6070000000001e-05, 7.78189999999998e-05, 7.652800000000279e-05, 7.605600000000143e-05, 7.604199999999839e-05, 7.655600000000193e-05, 7.599999999999968e-05, 7.602699999999935e-05, 7.672200000000129e-05, 7.620800000000122e-05, 7.656900000000202e-05, 7.677799999999957e-05, 7.59440000000014e-05, 7.673600000000086e-05, 7.641700000000223e-05, 7.66250000000003e-05, 7.661099999999726e-05, 7.613899999999937e-05, 7.636100000000048e-05, 7.604199999999839e-05, 7.598600000000011e-05, 7.784799999999842e-05, 7.679099999999967e-05, 7.620800000000122e-05, 7.788899999999765e-05, 7.620799999999775e-05, 7.61249999999998e-05, 7.59579999999975e-05, 7.624999999999993e-05, 7.780599999999971e-05, 7.634700000000091e-05, 7.672200000000129e-05, 7.66250000000003e-05, 7.61249999999998e-05, 7.672300000000076e-05, 7.786099999999851e-05, 7.655499999999898e-05, 7.59449999999974e-05, 7.650000000000018e-05, 7.634700000000091e-05, 7.640199999999972e-05, 7.783299999999937e-05]</msg>
<status status="PASS" starttime="20201030 11:50:39.185" endtime="20201030 11:50:39.188"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.181" endtime="20201030 11:50:39.188"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:39.192" endtime="20201030 11:50:39.211"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.191" endtime="20201030 11:50:39.212"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.189" endtime="20201030 11:50:39.212"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.827" endtime="20201030 11:50:39.213"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.826" endtime="20201030 11:50:39.213"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:39.222" endtime="20201030 11:50:39.242"></status>
</kw>
<msg timestamp="20201030 11:50:39.243" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:39.220" endtime="20201030 11:50:39.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:39.245" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:39.244" endtime="20201030 11:50:39.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:39.247" endtime="20201030 11:50:39.248"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.217" endtime="20201030 11:50:39.249"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.215" endtime="20201030 11:50:39.249"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:39.256" endtime="20201030 11:50:39.542"></status>
</kw>
<msg timestamp="20201030 11:50:39.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020847167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020924111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:39.254" endtime="20201030 11:50:39.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:39.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020847167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020924111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:39.546" endtime="20201030 11:50:39.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:39.555" endtime="20201030 11:50:39.557"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.252" endtime="20201030 11:50:39.557"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.250" endtime="20201030 11:50:39.558"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:39.562" level="INFO">${RESULT} = [{'diff': 7.694399999999893e-05}, {'diff': 7.769399999999968e-05}, {'diff': 7.763900000000087e-05}, {'diff': 7.698600000000111e-05}, {'diff': 7.770800000000272e-05}, {'diff': 7.75830000000026e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:50:39.558" endtime="20201030 11:50:39.562"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:39.566" level="INFO">${ACCURACY} = {'diff': [7.694399999999893e-05, 7.769399999999968e-05, 7.763900000000087e-05, 7.698600000000111e-05, 7.770800000000272e-05, 7.75830000000026e-05, 7.752800000000032e-05, 7.698600000000111e-05, 7.89439...</msg>
<status status="PASS" starttime="20201030 11:50:39.563" endtime="20201030 11:50:39.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:39.570" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201030 11:50:39.569" endtime="20201030 11:50:39.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:39.573" level="INFO">VALUE: [7.694399999999893e-05, 7.769399999999968e-05, 7.763900000000087e-05, 7.698600000000111e-05, 7.770800000000272e-05, 7.75830000000026e-05, 7.752800000000032e-05, 7.698600000000111e-05, 7.894399999999746e-05, 7.745900000000194e-05, 7.768099999999958e-05, 7.71380000000009e-05, 7.770799999999925e-05, 7.720799999999875e-05, 7.702799999999982e-05, 7.879100000000167e-05, 7.755599999999946e-05, 7.715299999999994e-05, 7.737499999999758e-05, 7.7764000000001e-05, 7.737499999999758e-05, 7.701400000000025e-05, 7.7457999999999e-05, 7.733399999999835e-05, 7.705599999999896e-05, 7.763900000000087e-05, 7.695800000000197e-05, 7.76250000000013e-05, 7.766700000000001e-05, 7.747199999999857e-05, 7.76250000000013e-05, 7.763900000000087e-05, 7.894499999999693e-05, 7.734700000000191e-05, 7.738900000000062e-05, 7.705599999999896e-05, 7.711100000000123e-05, 7.711200000000071e-05, 7.762499999999783e-05, 7.727800000000007e-05, 7.733399999999835e-05, 7.756999999999903e-05, 7.744399999999943e-05, 7.71250000000008e-05, 7.772200000000229e-05, 7.697199999999807e-05, 7.695800000000197e-05, 7.888900000000212e-05, 7.730499999999974e-05, 7.708299999999862e-05]</msg>
<status status="PASS" starttime="20201030 11:50:39.572" endtime="20201030 11:50:39.575"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.567" endtime="20201030 11:50:39.575"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:39.579" endtime="20201030 11:50:39.598"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.577" endtime="20201030 11:50:39.599"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.576" endtime="20201030 11:50:39.599"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.214" endtime="20201030 11:50:39.600"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.213" endtime="20201030 11:50:39.600"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:39.609" endtime="20201030 11:50:39.629"></status>
</kw>
<msg timestamp="20201030 11:50:39.629" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:39.607" endtime="20201030 11:50:39.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:39.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:39.631" endtime="20201030 11:50:39.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:39.633" endtime="20201030 11:50:39.635"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.604" endtime="20201030 11:50:39.635"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.602" endtime="20201030 11:50:39.636"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:39.642" endtime="20201030 11:50:39.929"></status>
</kw>
<msg timestamp="20201030 11:50:39.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019934403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020012722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:39.641" endtime="20201030 11:50:39.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:39.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019934403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020012722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:39.933" endtime="20201030 11:50:39.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:39.941" endtime="20201030 11:50:39.943"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.638" endtime="20201030 11:50:39.944"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.636" endtime="20201030 11:50:39.944"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:39.948" level="INFO">${RESULT} = [{'diff': 7.83190000000003e-05}, {'diff': 7.86250000000023e-05}, {'diff': 7.879100000000167e-05}, {'diff': 7.811199999999824e-05}, {'diff': 7.8458e-05}, {'diff': 7.823599999999889e-05}, {'diff': 7.836...</msg>
<status status="PASS" starttime="20201030 11:50:39.945" endtime="20201030 11:50:39.948"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:39.953" level="INFO">${ACCURACY} = {'diff': [7.83190000000003e-05, 7.86250000000023e-05, 7.879100000000167e-05, 7.811199999999824e-05, 7.8458e-05, 7.823599999999889e-05, 7.836099999999901e-05, 7.986100000000051e-05, 7.8458e-05, 7.80280...</msg>
<status status="PASS" starttime="20201030 11:50:39.949" endtime="20201030 11:50:39.954"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:39.958" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201030 11:50:39.957" endtime="20201030 11:50:39.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:39.961" level="INFO">VALUE: [7.83190000000003e-05, 7.86250000000023e-05, 7.879100000000167e-05, 7.811199999999824e-05, 7.8458e-05, 7.823599999999889e-05, 7.836099999999901e-05, 7.986100000000051e-05, 7.8458e-05, 7.802800000000082e-05, 7.820799999999975e-05, 7.823599999999889e-05, 7.869500000000015e-05, 7.799999999999821e-05, 7.812499999999833e-05, 7.8764000000002e-05, 7.843099999999686e-05, 7.836099999999901e-05, 7.866700000000101e-05, 7.869399999999721e-05, 7.987500000000008e-05, 7.869400000000068e-05, 7.80969999999992e-05, 7.988899999999965e-05, 7.841700000000076e-05, 7.809700000000266e-05, 7.802799999999735e-05, 7.830599999999674e-05, 7.834800000000239e-05, 7.797199999999907e-05, 7.988900000000312e-05, 7.990299999999922e-05, 7.8458e-05, 7.819400000000018e-05, 7.863900000000187e-05, 7.865299999999797e-05, 7.99169999999988e-05, 7.82779999999976e-05, 7.823599999999889e-05, 7.838899999999815e-05, 7.797199999999907e-05, 7.801399999999778e-05, 7.869500000000015e-05, 7.995799999999803e-05, 7.869500000000015e-05, 7.847300000000251e-05, 7.848699999999861e-05, 7.844400000000043e-05, 7.876399999999853e-05, 7.870800000000025e-05]</msg>
<status status="PASS" starttime="20201030 11:50:39.959" endtime="20201030 11:50:39.961"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.954" endtime="20201030 11:50:39.962"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:39.966" endtime="20201030 11:50:39.985"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.964" endtime="20201030 11:50:39.986"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.963" endtime="20201030 11:50:39.986"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.601" endtime="20201030 11:50:39.986"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.600" endtime="20201030 11:50:39.986"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:39.996" endtime="20201030 11:50:40.016"></status>
</kw>
<msg timestamp="20201030 11:50:40.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:39.994" endtime="20201030 11:50:40.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:40.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:40.017" endtime="20201030 11:50:40.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:40.020" endtime="20201030 11:50:40.021"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.991" endtime="20201030 11:50:40.022"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.989" endtime="20201030 11:50:40.022"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:40.029" endtime="20201030 11:50:40.315"></status>
</kw>
<msg timestamp="20201030 11:50:40.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020054222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020135069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:40.027" endtime="20201030 11:50:40.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:40.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020054222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020135069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:40.320" endtime="20201030 11:50:40.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:40.328" endtime="20201030 11:50:40.330"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.025" endtime="20201030 11:50:40.330"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.023" endtime="20201030 11:50:40.331"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:40.335" level="INFO">${RESULT} = [{'diff': 8.084699999999848e-05}, {'diff': 7.908300000000063e-05}, {'diff': 7.924999999999946e-05}, {'diff': 7.904200000000139e-05}, {'diff': 7.906900000000106e-05}, {'diff': 7.976399999999953e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:50:40.332" endtime="20201030 11:50:40.335"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:40.339" level="INFO">${ACCURACY} = {'diff': [8.084699999999848e-05, 7.908300000000063e-05, 7.924999999999946e-05, 7.904200000000139e-05, 7.906900000000106e-05, 7.976399999999953e-05, 7.904200000000139e-05, 7.952800000000232e-05, 7.9445...</msg>
<status status="PASS" starttime="20201030 11:50:40.336" endtime="20201030 11:50:40.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:40.344" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201030 11:50:40.343" endtime="20201030 11:50:40.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:40.346" level="INFO">VALUE: [8.084699999999848e-05, 7.908300000000063e-05, 7.924999999999946e-05, 7.904200000000139e-05, 7.906900000000106e-05, 7.976399999999953e-05, 7.904200000000139e-05, 7.952800000000232e-05, 7.94450000000009e-05, 7.89580000000005e-05, 7.949999999999971e-05, 7.94450000000009e-05, 7.919500000000065e-05, 7.94450000000009e-05, 7.956900000000156e-05, 7.963799999999993e-05, 7.973600000000039e-05, 7.974999999999996e-05, 7.952799999999885e-05, 7.922200000000032e-05, 7.938899999999915e-05, 7.965299999999897e-05, 7.911099999999976e-05, 8.088900000000065e-05, 7.913900000000237e-05, 7.976399999999953e-05, 7.937499999999958e-05, 7.955499999999852e-05, 7.959699999999723e-05, 7.916599999999857e-05, 7.956899999999809e-05, 7.943000000000186e-05, 7.927800000000207e-05, 7.96389999999994e-05, 7.954199999999842e-05, 8.086100000000151e-05, 7.891700000000126e-05, 7.969499999999768e-05, 7.912499999999933e-05, 7.918099999999761e-05, 7.906999999999706e-05, 7.915299999999847e-05, 7.933400000000035e-05, 7.954100000000242e-05, 7.904099999999845e-05, 7.974999999999996e-05, 7.949999999999971e-05, 8.090300000000022e-05, 7.906900000000106e-05, 7.919500000000065e-05]</msg>
<status status="PASS" starttime="20201030 11:50:40.345" endtime="20201030 11:50:40.347"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.340" endtime="20201030 11:50:40.348"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:40.352" endtime="20201030 11:50:40.371"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.350" endtime="20201030 11:50:40.371"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.349" endtime="20201030 11:50:40.372"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.987" endtime="20201030 11:50:40.372"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.987" endtime="20201030 11:50:40.372"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:40.381" endtime="20201030 11:50:40.402"></status>
</kw>
<msg timestamp="20201030 11:50:40.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:40.380" endtime="20201030 11:50:40.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:40.405" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:40.404" endtime="20201030 11:50:40.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:40.406" endtime="20201030 11:50:40.408"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.377" endtime="20201030 11:50:40.408"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.375" endtime="20201030 11:50:40.409"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:40.415" endtime="20201030 11:50:40.701"></status>
</kw>
<msg timestamp="20201030 11:50:40.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020887514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020968097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:40.414" endtime="20201030 11:50:40.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:40.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020887514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020968097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:40.705" endtime="20201030 11:50:40.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:40.714" endtime="20201030 11:50:40.715"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.411" endtime="20201030 11:50:40.716"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.409" endtime="20201030 11:50:40.716"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:40.721" level="INFO">${RESULT} = [{'diff': 8.058300000000213e-05}, {'diff': 8.080499999999977e-05}, {'diff': 7.997200000000107e-05}, {'diff': 8.187499999999862e-05}, {'diff': 8.026400000000003e-05}, {'diff': 8.059800000000117e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:50:40.717" endtime="20201030 11:50:40.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:40.725" level="INFO">${ACCURACY} = {'diff': [8.058300000000213e-05, 8.080499999999977e-05, 7.997200000000107e-05, 8.187499999999862e-05, 8.026400000000003e-05, 8.059800000000117e-05, 8.049999999999724e-05, 8.075000000000096e-05, 8.0778...</msg>
<status status="PASS" starttime="20201030 11:50:40.722" endtime="20201030 11:50:40.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:40.730" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201030 11:50:40.728" endtime="20201030 11:50:40.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:40.732" level="INFO">VALUE: [8.058300000000213e-05, 8.080499999999977e-05, 7.997200000000107e-05, 8.187499999999862e-05, 8.026400000000003e-05, 8.059800000000117e-05, 8.049999999999724e-05, 8.075000000000096e-05, 8.07780000000001e-05, 8.058399999999813e-05, 8.004199999999892e-05, 8.040200000000025e-05, 8.025000000000046e-05, 8.056899999999909e-05, 8.026400000000003e-05, 8.051400000000028e-05, 8.002799999999935e-05, 8.052799999999985e-05, 8.070799999999878e-05, 8.005600000000196e-05, 8.002799999999935e-05, 8.024999999999699e-05, 8.181999999999981e-05, 8.02779999999996e-05, 8.069500000000215e-05, 8.011100000000076e-05, 8.188900000000165e-05, 8.0152e-05, 8.045799999999853e-05, 8.07910000000002e-05, 8.03190000000023e-05, 8.029199999999917e-05, 8.188899999999819e-05, 8.038900000000015e-05, 7.994400000000193e-05, 7.997200000000107e-05, 8.051400000000028e-05, 8.19170000000008e-05, 8.076400000000053e-05, 8.030599999999874e-05, 8.037500000000058e-05, 8.050000000000071e-05, 8.07780000000001e-05, 8.026400000000003e-05, 8.052800000000332e-05, 7.998600000000064e-05, 8.015299999999947e-05, 8.005499999999902e-05, 8.038900000000015e-05, 7.994399999999846e-05]</msg>
<status status="PASS" starttime="20201030 11:50:40.731" endtime="20201030 11:50:40.734"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.726" endtime="20201030 11:50:40.734"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:40.738" endtime="20201030 11:50:40.757"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.736" endtime="20201030 11:50:40.758"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.735" endtime="20201030 11:50:40.758"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.373" endtime="20201030 11:50:40.759"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.373" endtime="20201030 11:50:40.759"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:40.768" endtime="20201030 11:50:40.787"></status>
</kw>
<msg timestamp="20201030 11:50:40.788" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:40.766" endtime="20201030 11:50:40.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:40.790" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:40.789" endtime="20201030 11:50:40.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:40.791" endtime="20201030 11:50:40.793"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.763" endtime="20201030 11:50:40.794"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.761" endtime="20201030 11:50:40.794"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:40.801" endtime="20201030 11:50:41.088"></status>
</kw>
<msg timestamp="20201030 11:50:41.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019891069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019972361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:40.799" endtime="20201030 11:50:41.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:41.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019891069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019972361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:41.093" endtime="20201030 11:50:41.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:41.101" endtime="20201030 11:50:41.103"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.796" endtime="20201030 11:50:41.103"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.795" endtime="20201030 11:50:41.104"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:41.108" level="INFO">${RESULT} = [{'diff': 8.129200000000017e-05}, {'diff': 8.290299999999876e-05}, {'diff': 8.166700000000054e-05}, {'diff': 8.152800000000085e-05}, {'diff': 8.151399999999781e-05}, {'diff': 8.131999999999931e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:50:41.105" endtime="20201030 11:50:41.108"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:41.113" level="INFO">${ACCURACY} = {'diff': [8.129200000000017e-05, 8.290299999999876e-05, 8.166700000000054e-05, 8.152800000000085e-05, 8.151399999999781e-05, 8.131999999999931e-05, 8.118099999999961e-05, 8.1458000000003e-05, 8.150000...</msg>
<status status="PASS" starttime="20201030 11:50:41.109" endtime="20201030 11:50:41.113"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:41.118" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201030 11:50:41.117" endtime="20201030 11:50:41.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:41.120" level="INFO">VALUE: [8.129200000000017e-05, 8.290299999999876e-05, 8.166700000000054e-05, 8.152800000000085e-05, 8.151399999999781e-05, 8.131999999999931e-05, 8.118099999999961e-05, 8.1458000000003e-05, 8.150000000000171e-05, 8.125000000000146e-05, 8.095799999999903e-05, 8.102800000000035e-05, 8.165300000000097e-05, 8.143099999999986e-05, 8.109699999999873e-05, 8.134699999999898e-05, 8.148599999999867e-05, 8.102800000000035e-05, 8.11390000000009e-05, 8.14170000000003e-05, 8.170900000000272e-05, 8.108399999999863e-05, 8.281899999999787e-05, 8.1152000000001e-05, 8.138900000000115e-05, 8.16390000000014e-05, 8.122199999999885e-05, 8.13329999999994e-05, 8.165300000000097e-05, 8.13329999999994e-05, 8.108299999999916e-05, 8.16390000000014e-05, 8.129200000000017e-05, 8.144499999999943e-05, 8.095900000000197e-05, 8.156999999999956e-05, 8.133399999999888e-05, 8.161200000000174e-05, 8.13329999999994e-05, 8.152800000000085e-05, 8.118000000000014e-05, 8.108300000000263e-05, 8.173600000000239e-05, 8.124999999999799e-05, 8.098600000000164e-05, 8.16390000000014e-05, 8.126400000000103e-05, 8.152800000000085e-05, 8.131999999999931e-05, 8.152800000000085e-05]</msg>
<status status="PASS" starttime="20201030 11:50:41.119" endtime="20201030 11:50:41.121"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.114" endtime="20201030 11:50:41.122"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:41.125" endtime="20201030 11:50:41.145"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.124" endtime="20201030 11:50:41.145"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.123" endtime="20201030 11:50:41.146"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.760" endtime="20201030 11:50:41.146"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.759" endtime="20201030 11:50:41.146"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:41.155" endtime="20201030 11:50:41.175"></status>
</kw>
<msg timestamp="20201030 11:50:41.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:41.154" endtime="20201030 11:50:41.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:41.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:41.177" endtime="20201030 11:50:41.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:41.179" endtime="20201030 11:50:41.181"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.151" endtime="20201030 11:50:41.181"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.149" endtime="20201030 11:50:41.182"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:41.189" endtime="20201030 11:50:41.478"></status>
</kw>
<msg timestamp="20201030 11:50:41.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020024806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020107375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:41.187" endtime="20201030 11:50:41.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:41.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020024806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020107375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:41.482" endtime="20201030 11:50:41.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:41.490" endtime="20201030 11:50:41.492"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.184" endtime="20201030 11:50:41.493"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.182" endtime="20201030 11:50:41.493"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:41.497" level="INFO">${RESULT} = [{'diff': 8.256900000000109e-05}, {'diff': 8.200000000000221e-05}, {'diff': 8.193100000000036e-05}, {'diff': 8.19719999999996e-05}, {'diff': 8.238900000000215e-05}, {'diff': 8.213899999999844e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:50:41.494" endtime="20201030 11:50:41.498"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:41.502" level="INFO">${ACCURACY} = {'diff': [8.256900000000109e-05, 8.200000000000221e-05, 8.193100000000036e-05, 8.19719999999996e-05, 8.238900000000215e-05, 8.213899999999844e-05, 8.37919999999992e-05, 8.258400000000013e-05, 8.233299...</msg>
<status status="PASS" starttime="20201030 11:50:41.498" endtime="20201030 11:50:41.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:41.506" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201030 11:50:41.505" endtime="20201030 11:50:41.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:41.509" level="INFO">VALUE: [8.256900000000109e-05, 8.200000000000221e-05, 8.193100000000036e-05, 8.19719999999996e-05, 8.238900000000215e-05, 8.213899999999844e-05, 8.37919999999992e-05, 8.258400000000013e-05, 8.233299999999694e-05, 8.227700000000213e-05, 8.274999999999949e-05, 8.24720000000001e-05, 8.197200000000307e-05, 8.243000000000139e-05, 8.215300000000147e-05, 8.212499999999887e-05, 8.238899999999869e-05, 8.258400000000013e-05, 8.263899999999894e-05, 8.219500000000018e-05, 8.215300000000147e-05, 8.269500000000068e-05, 8.259700000000023e-05, 8.276299999999959e-05, 8.213899999999844e-05, 8.388900000000019e-05, 8.266699999999808e-05, 8.381899999999887e-05, 8.276399999999906e-05, 8.277799999999863e-05, 8.237499999999912e-05, 8.262499999999937e-05, 8.195800000000003e-05, 8.259700000000023e-05, 8.204200000000092e-05, 8.258400000000013e-05, 8.231999999999684e-05, 8.21659999999981e-05, 8.219399999999724e-05, 8.3846999999998e-05, 8.26659999999986e-05, 8.194400000000046e-05, 8.390299999999976e-05, 8.273599999999992e-05, 8.212499999999887e-05, 8.232000000000031e-05, 8.258300000000066e-05, 8.387500000000062e-05, 8.199999999999874e-05, 8.258400000000013e-05]</msg>
<status status="PASS" starttime="20201030 11:50:41.507" endtime="20201030 11:50:41.509"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.502" endtime="20201030 11:50:41.510"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:41.514" endtime="20201030 11:50:41.533"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.512" endtime="20201030 11:50:41.534"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.511" endtime="20201030 11:50:41.534"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.147" endtime="20201030 11:50:41.534"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.147" endtime="20201030 11:50:41.534"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:41.544" endtime="20201030 11:50:41.564"></status>
</kw>
<msg timestamp="20201030 11:50:41.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:41.542" endtime="20201030 11:50:41.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:41.567" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:41.566" endtime="20201030 11:50:41.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:41.568" endtime="20201030 11:50:41.570"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.539" endtime="20201030 11:50:41.571"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.537" endtime="20201030 11:50:41.571"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:41.578" endtime="20201030 11:50:41.863"></status>
</kw>
<msg timestamp="20201030 11:50:41.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02103375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021116819, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:41.576" endtime="20201030 11:50:41.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:41.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02103375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021116819, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:41.867" endtime="20201030 11:50:41.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:41.876" endtime="20201030 11:50:41.878"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.573" endtime="20201030 11:50:41.878"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.572" endtime="20201030 11:50:41.879"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:41.883" level="INFO">${RESULT} = [{'diff': 8.306899999999812e-05}, {'diff': 8.326399999999956e-05}, {'diff': 8.318099999999815e-05}, {'diff': 8.33330000000014e-05}, {'diff': 8.483299999999944e-05}, {'diff': 8.36110000000008e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:50:41.880" endtime="20201030 11:50:41.883"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:41.887" level="INFO">${ACCURACY} = {'diff': [8.306899999999812e-05, 8.326399999999956e-05, 8.318099999999815e-05, 8.33330000000014e-05, 8.483299999999944e-05, 8.36110000000008e-05, 8.488900000000119e-05, 8.294500000000093e-05, 8.319500...</msg>
<status status="PASS" starttime="20201030 11:50:41.884" endtime="20201030 11:50:41.887"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:41.892" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201030 11:50:41.891" endtime="20201030 11:50:41.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:41.894" level="INFO">VALUE: [8.306899999999812e-05, 8.326399999999956e-05, 8.318099999999815e-05, 8.33330000000014e-05, 8.483299999999944e-05, 8.36110000000008e-05, 8.488900000000119e-05, 8.294500000000093e-05, 8.319500000000118e-05, 8.488900000000119e-05, 8.359700000000123e-05, 8.3459000000001e-05, 8.370799999999831e-05, 8.483299999999944e-05, 8.306899999999812e-05, 8.297199999999713e-05, 8.294399999999799e-05, 8.483299999999944e-05, 8.316700000000204e-05, 8.326400000000303e-05, 8.338900000000316e-05, 8.31110000000003e-05, 8.345899999999754e-05, 8.370899999999779e-05, 8.376400000000006e-05, 8.31110000000003e-05, 8.326399999999956e-05, 8.308299999999769e-05, 8.315199999999953e-05, 8.494499999999947e-05, 8.29720000000006e-05, 8.355499999999905e-05, 8.488900000000119e-05, 8.294400000000146e-05, 8.480599999999977e-05, 8.362500000000037e-05, 8.33330000000014e-05, 8.369500000000168e-05, 8.308300000000116e-05, 8.302800000000235e-05, 8.486099999999858e-05, 8.33330000000014e-05, 8.326300000000009e-05, 8.362500000000037e-05, 8.313899999999944e-05, 8.366700000000254e-05, 8.376400000000006e-05, 8.487500000000162e-05, 8.29170000000018e-05, 8.369500000000168e-05]</msg>
<status status="PASS" starttime="20201030 11:50:41.893" endtime="20201030 11:50:41.896"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.888" endtime="20201030 11:50:41.896"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:41.900" endtime="20201030 11:50:41.920"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.899" endtime="20201030 11:50:41.920"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.897" endtime="20201030 11:50:41.921"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.535" endtime="20201030 11:50:41.921"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.535" endtime="20201030 11:50:41.921"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:41.930" endtime="20201030 11:50:41.951"></status>
</kw>
<msg timestamp="20201030 11:50:41.951" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:41.929" endtime="20201030 11:50:41.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:41.954" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:41.952" endtime="20201030 11:50:41.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:41.955" endtime="20201030 11:50:41.956"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.926" endtime="20201030 11:50:41.957"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.924" endtime="20201030 11:50:41.957"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:41.964" endtime="20201030 11:50:42.251"></status>
</kw>
<msg timestamp="20201030 11:50:42.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020003264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020087611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:41.962" endtime="20201030 11:50:42.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:42.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020003264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020087611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:42.255" endtime="20201030 11:50:42.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:42.263" endtime="20201030 11:50:42.265"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.960" endtime="20201030 11:50:42.265"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.958" endtime="20201030 11:50:42.266"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:42.270" level="INFO">${RESULT} = [{'diff': 8.43469999999985e-05}, {'diff': 8.581900000000087e-05}, {'diff': 8.46530000000005e-05}, {'diff': 8.462500000000137e-05}, {'diff': 8.431999999999884e-05}, {'diff': 8.443100000000286e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:50:42.267" endtime="20201030 11:50:42.270"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:42.275" level="INFO">${ACCURACY} = {'diff': [8.43469999999985e-05, 8.581900000000087e-05, 8.46530000000005e-05, 8.462500000000137e-05, 8.431999999999884e-05, 8.443100000000286e-05, 8.440300000000026e-05, 8.413900000000044e-05, 8.440200...</msg>
<status status="PASS" starttime="20201030 11:50:42.271" endtime="20201030 11:50:42.275"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:42.280" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201030 11:50:42.279" endtime="20201030 11:50:42.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:42.282" level="INFO">VALUE: [8.43469999999985e-05, 8.581900000000087e-05, 8.46530000000005e-05, 8.462500000000137e-05, 8.431999999999884e-05, 8.443100000000286e-05, 8.440300000000026e-05, 8.413900000000044e-05, 8.440200000000078e-05, 8.41660000000001e-05, 8.390299999999976e-05, 8.399999999999727e-05, 8.581900000000087e-05, 8.411099999999783e-05, 8.46530000000005e-05, 8.406899999999912e-05, 8.427800000000013e-05, 8.440300000000026e-05, 8.454199999999995e-05, 8.39309999999989e-05, 8.462500000000137e-05, 8.437500000000112e-05, 8.463900000000094e-05, 8.418099999999915e-05, 8.413799999999749e-05, 8.43330000000024e-05, 8.577700000000216e-05, 8.401400000000031e-05, 8.586100000000305e-05, 8.586099999999958e-05, 8.413900000000044e-05, 8.587500000000262e-05, 8.426400000000056e-05, 8.444499999999897e-05, 8.458399999999866e-05, 8.412500000000087e-05, 8.473600000000192e-05, 8.430599999999927e-05, 8.417999999999967e-05, 8.408299999999869e-05, 8.463900000000094e-05, 8.458399999999866e-05, 8.401399999999684e-05, 8.427800000000013e-05, 8.426400000000056e-05, 8.409699999999826e-05, 8.477800000000063e-05, 8.469500000000268e-05, 8.40980000000012e-05, 8.436099999999808e-05]</msg>
<status status="PASS" starttime="20201030 11:50:42.281" endtime="20201030 11:50:42.283"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.276" endtime="20201030 11:50:42.284"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:42.287" endtime="20201030 11:50:42.307"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.286" endtime="20201030 11:50:42.307"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.285" endtime="20201030 11:50:42.308"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.922" endtime="20201030 11:50:42.308"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.921" endtime="20201030 11:50:42.308"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:42.317" endtime="20201030 11:50:42.337"></status>
</kw>
<msg timestamp="20201030 11:50:42.338" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:42.316" endtime="20201030 11:50:42.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:42.340" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:42.339" endtime="20201030 11:50:42.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:42.341" endtime="20201030 11:50:42.343"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.313" endtime="20201030 11:50:42.344"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.311" endtime="20201030 11:50:42.344"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:42.351" endtime="20201030 11:50:42.638"></status>
</kw>
<msg timestamp="20201030 11:50:42.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02001175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020096819, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:42.349" endtime="20201030 11:50:42.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:42.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02001175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020096819, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:42.642" endtime="20201030 11:50:42.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:42.651" endtime="20201030 11:50:42.652"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.346" endtime="20201030 11:50:42.653"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.345" endtime="20201030 11:50:42.653"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:42.657" level="INFO">${RESULT} = [{'diff': 8.506900000000012e-05}, {'diff': 8.506999999999959e-05}, {'diff': 8.529100000000123e-05}, {'diff': 8.505500000000055e-05}, {'diff': 8.538899999999822e-05}, {'diff': 8.563900000000194e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:50:42.654" endtime="20201030 11:50:42.657"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:42.661" level="INFO">${ACCURACY} = {'diff': [8.506900000000012e-05, 8.506999999999959e-05, 8.529100000000123e-05, 8.505500000000055e-05, 8.538899999999822e-05, 8.563900000000194e-05, 8.494399999999999e-05, 8.552799999999791e-05, 8.6834...</msg>
<status status="PASS" starttime="20201030 11:50:42.658" endtime="20201030 11:50:42.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:42.667" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201030 11:50:42.665" endtime="20201030 11:50:42.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:42.670" level="INFO">VALUE: [8.506900000000012e-05, 8.506999999999959e-05, 8.529100000000123e-05, 8.505500000000055e-05, 8.538899999999822e-05, 8.563900000000194e-05, 8.494399999999999e-05, 8.552799999999791e-05, 8.683400000000091e-05, 8.501400000000131e-05, 8.505600000000002e-05, 8.506999999999959e-05, 8.5153000000001e-05, 8.513900000000144e-05, 8.51660000000011e-05, 8.570899999999979e-05, 8.522200000000285e-05, 8.540300000000126e-05, 8.506900000000012e-05, 8.508299999999969e-05, 8.511099999999883e-05, 8.556899999999715e-05, 8.576399999999859e-05, 8.687500000000015e-05, 8.508399999999916e-05, 8.524999999999852e-05, 8.543099999999693e-05, 8.554099999999801e-05, 8.566599999999813e-05, 8.513899999999797e-05, 8.508299999999969e-05, 8.573599999999945e-05, 8.563899999999847e-05, 8.684699999999754e-05, 8.561099999999933e-05, 8.688899999999972e-05, 8.519400000000024e-05, 8.551399999999834e-05, 8.51249999999984e-05, 8.565299999999804e-05, 8.495899999999904e-05, 8.501400000000131e-05, 8.526400000000156e-05, 8.525000000000199e-05, 8.538900000000169e-05, 8.552800000000138e-05, 8.551400000000181e-05, 8.543000000000092e-05, 8.569400000000074e-05, 8.565299999999804e-05]</msg>
<status status="PASS" starttime="20201030 11:50:42.668" endtime="20201030 11:50:42.670"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.662" endtime="20201030 11:50:42.671"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:42.675" endtime="20201030 11:50:42.694"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.673" endtime="20201030 11:50:42.695"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.672" endtime="20201030 11:50:42.695"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.309" endtime="20201030 11:50:42.695"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.308" endtime="20201030 11:50:42.695"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:42.704" endtime="20201030 11:50:42.725"></status>
</kw>
<msg timestamp="20201030 11:50:42.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:42.703" endtime="20201030 11:50:42.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:42.728" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:42.727" endtime="20201030 11:50:42.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:42.729" endtime="20201030 11:50:42.731"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.700" endtime="20201030 11:50:42.731"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.698" endtime="20201030 11:50:42.732"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:42.739" endtime="20201030 11:50:43.024"></status>
</kw>
<msg timestamp="20201030 11:50:43.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020867778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020954472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:42.737" endtime="20201030 11:50:43.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:43.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020867778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020954472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:43.028" endtime="20201030 11:50:43.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:43.037" endtime="20201030 11:50:43.039"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.734" endtime="20201030 11:50:43.039"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.733" endtime="20201030 11:50:43.040"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:43.044" level="INFO">${RESULT} = [{'diff': 8.669399999999827e-05}, {'diff': 8.602799999999841e-05}, {'diff': 8.63470000000005e-05}, {'diff': 8.618099999999768e-05}, {'diff': 8.776400000000059e-05}, {'diff': 8.616700000000158e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:50:43.040" endtime="20201030 11:50:43.044"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:43.048" level="INFO">${ACCURACY} = {'diff': [8.669399999999827e-05, 8.602799999999841e-05, 8.63470000000005e-05, 8.618099999999768e-05, 8.776400000000059e-05, 8.616700000000158e-05, 8.677799999999916e-05, 8.782000000000234e-05, 8.63889...</msg>
<status status="PASS" starttime="20201030 11:50:43.045" endtime="20201030 11:50:43.048"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:43.052" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201030 11:50:43.051" endtime="20201030 11:50:43.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:43.055" level="INFO">VALUE: [8.669399999999827e-05, 8.602799999999841e-05, 8.63470000000005e-05, 8.618099999999768e-05, 8.776400000000059e-05, 8.616700000000158e-05, 8.677799999999916e-05, 8.782000000000234e-05, 8.638899999999922e-05, 8.638799999999974e-05, 8.647200000000063e-05, 8.626399999999909e-05, 8.595800000000056e-05, 8.59859999999997e-05, 8.78189999999994e-05, 8.78189999999994e-05, 8.63470000000005e-05, 8.607000000000059e-05, 8.654199999999848e-05, 8.601399999999884e-05, 8.64730000000001e-05, 8.649999999999977e-05, 8.608400000000016e-05, 8.594400000000099e-05, 8.673600000000045e-05, 8.780499999999983e-05, 8.786099999999811e-05, 8.613900000000244e-05, 8.661100000000033e-05, 8.683299999999797e-05, 8.613899999999897e-05, 8.661100000000033e-05, 8.609700000000026e-05, 8.637499999999965e-05, 8.5944999999997e-05, 8.611099999999983e-05, 8.663899999999947e-05, 8.790200000000081e-05, 8.649999999999977e-05, 8.656899999999815e-05, 8.636100000000008e-05, 8.784700000000201e-05, 8.633300000000094e-05, 8.626399999999909e-05, 8.631999999999737e-05, 8.663900000000294e-05, 8.659800000000023e-05, 8.786099999999811e-05, 8.783400000000191e-05, 8.64730000000001e-05]</msg>
<status status="PASS" starttime="20201030 11:50:43.054" endtime="20201030 11:50:43.057"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.049" endtime="20201030 11:50:43.057"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:43.061" endtime="20201030 11:50:43.080"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.060" endtime="20201030 11:50:43.081"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.058" endtime="20201030 11:50:43.081"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.696" endtime="20201030 11:50:43.082"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.696" endtime="20201030 11:50:43.082"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:43.091" endtime="20201030 11:50:43.110"></status>
</kw>
<msg timestamp="20201030 11:50:43.111" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:43.089" endtime="20201030 11:50:43.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:43.113" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:43.112" endtime="20201030 11:50:43.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:43.115" endtime="20201030 11:50:43.116"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.086" endtime="20201030 11:50:43.117"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.084" endtime="20201030 11:50:43.117"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:43.124" endtime="20201030 11:50:43.409"></status>
</kw>
<msg timestamp="20201030 11:50:43.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019958694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020045875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:43.122" endtime="20201030 11:50:43.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:43.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019958694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020045875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:43.414" endtime="20201030 11:50:43.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:43.422" endtime="20201030 11:50:43.424"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.120" endtime="20201030 11:50:43.424"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.118" endtime="20201030 11:50:43.425"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:43.429" level="INFO">${RESULT} = [{'diff': 8.718100000000215e-05}, {'diff': 8.888899999999825e-05}, {'diff': 8.715299999999954e-05}, {'diff': 8.879199999999726e-05}, {'diff': 8.74449999999985e-05}, {'diff': 8.74730000000011e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:50:43.425" endtime="20201030 11:50:43.429"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:43.434" level="INFO">${ACCURACY} = {'diff': [8.718100000000215e-05, 8.888899999999825e-05, 8.715299999999954e-05, 8.879199999999726e-05, 8.74449999999985e-05, 8.74730000000011e-05, 8.700000000000027e-05, 8.713800000000049e-05, 8.742999...</msg>
<status status="PASS" starttime="20201030 11:50:43.430" endtime="20201030 11:50:43.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:43.439" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201030 11:50:43.437" endtime="20201030 11:50:43.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:43.441" level="INFO">VALUE: [8.718100000000215e-05, 8.888899999999825e-05, 8.715299999999954e-05, 8.879199999999726e-05, 8.74449999999985e-05, 8.74730000000011e-05, 8.700000000000027e-05, 8.713800000000049e-05, 8.742999999999945e-05, 8.883299999999997e-05, 8.887499999999868e-05, 8.706899999999865e-05, 8.733299999999847e-05, 8.706899999999865e-05, 8.756999999999862e-05, 8.758299999999872e-05, 8.737500000000065e-05, 8.888899999999825e-05, 8.770899999999832e-05, 8.725000000000052e-05, 8.744400000000249e-05, 8.776299999999765e-05, 8.71250000000004e-05, 8.69999999999968e-05, 8.726400000000009e-05, 8.726400000000009e-05, 8.769399999999927e-05, 8.73470000000015e-05, 8.718099999999868e-05, 8.745799999999859e-05, 8.730600000000227e-05, 8.69310000000019e-05, 8.716700000000258e-05, 8.701300000000037e-05, 8.732000000000184e-05, 8.770799999999884e-05, 8.713899999999997e-05, 8.701399999999984e-05, 8.706900000000212e-05, 8.708300000000169e-05, 8.76250000000009e-05, 8.74999999999973e-05, 8.775000000000102e-05, 8.755599999999905e-05, 8.723599999999748e-05, 8.734699999999804e-05, 8.779100000000026e-05, 8.741699999999936e-05, 8.74449999999985e-05, 8.770799999999884e-05]</msg>
<status status="PASS" starttime="20201030 11:50:43.440" endtime="20201030 11:50:43.446"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.435" endtime="20201030 11:50:43.446"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:43.450" endtime="20201030 11:50:43.470"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.449" endtime="20201030 11:50:43.470"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.447" endtime="20201030 11:50:43.471"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.083" endtime="20201030 11:50:43.471"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.082" endtime="20201030 11:50:43.471"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:43.480" endtime="20201030 11:50:43.501"></status>
</kw>
<msg timestamp="20201030 11:50:43.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:43.478" endtime="20201030 11:50:43.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:43.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:43.502" endtime="20201030 11:50:43.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:43.505" endtime="20201030 11:50:43.506"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.476" endtime="20201030 11:50:43.507"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.474" endtime="20201030 11:50:43.507"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:43.514" endtime="20201030 11:50:43.802"></status>
</kw>
<msg timestamp="20201030 11:50:43.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019922722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02001075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:43.513" endtime="20201030 11:50:43.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:43.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019922722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02001075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:43.807" endtime="20201030 11:50:43.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:43.815" endtime="20201030 11:50:43.817"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.510" endtime="20201030 11:50:43.817"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.508" endtime="20201030 11:50:43.818"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:43.822" level="INFO">${RESULT} = [{'diff': 8.802800000000041e-05}, {'diff': 8.98329999999975e-05}, {'diff': 8.854100000000101e-05}, {'diff': 8.869499999999975e-05}, {'diff': 8.830500000000033e-05}, {'diff': 8.800000000000127e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:50:43.819" endtime="20201030 11:50:43.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:43.826" level="INFO">${ACCURACY} = {'diff': [8.802800000000041e-05, 8.98329999999975e-05, 8.854100000000101e-05, 8.869499999999975e-05, 8.830500000000033e-05, 8.800000000000127e-05, 8.834700000000251e-05, 8.880500000000083e-05, 8.97919...</msg>
<status status="PASS" starttime="20201030 11:50:43.823" endtime="20201030 11:50:43.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:43.831" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201030 11:50:43.830" endtime="20201030 11:50:43.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:43.833" level="INFO">VALUE: [8.802800000000041e-05, 8.98329999999975e-05, 8.854100000000101e-05, 8.869499999999975e-05, 8.830500000000033e-05, 8.800000000000127e-05, 8.834700000000251e-05, 8.880500000000083e-05, 8.979199999999826e-05, 8.829100000000076e-05, 8.856900000000015e-05, 8.836099999999861e-05, 8.81800000000002e-05, 8.986100000000011e-05, 8.834700000000251e-05, 8.837500000000165e-05, 8.86670000000006e-05, 8.838900000000122e-05, 8.834799999999851e-05, 8.844400000000002e-05, 8.806999999999912e-05, 8.88060000000003e-05, 8.809700000000226e-05, 8.794399999999952e-05, 8.837500000000165e-05, 8.865299999999757e-05, 8.826400000000109e-05, 8.88190000000004e-05, 8.83059999999998e-05, 8.992999999999848e-05, 8.870799999999984e-05, 8.869499999999975e-05, 8.862499999999843e-05, 8.813900000000097e-05, 8.866599999999766e-05, 8.850000000000177e-05, 8.873600000000245e-05, 8.813900000000097e-05, 8.983300000000097e-05, 8.79999999999978e-05, 8.870799999999984e-05, 8.848599999999873e-05, 8.809699999999879e-05, 8.851400000000134e-05, 8.818100000000315e-05, 8.990299999999882e-05, 8.990299999999882e-05, 8.827700000000119e-05, 8.806900000000312e-05, 8.792999999999995e-05]</msg>
<status status="PASS" starttime="20201030 11:50:43.832" endtime="20201030 11:50:43.834"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.827" endtime="20201030 11:50:43.835"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:43.838" endtime="20201030 11:50:43.858"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.837" endtime="20201030 11:50:43.859"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.836" endtime="20201030 11:50:43.859"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.472" endtime="20201030 11:50:43.859"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.471" endtime="20201030 11:50:43.859"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:43.868" endtime="20201030 11:50:43.890"></status>
</kw>
<msg timestamp="20201030 11:50:43.890" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:43.867" endtime="20201030 11:50:43.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:43.893" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:43.892" endtime="20201030 11:50:43.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:43.894" endtime="20201030 11:50:43.896"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.864" endtime="20201030 11:50:43.897"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.862" endtime="20201030 11:50:43.898"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:43.904" endtime="20201030 11:50:44.192"></status>
</kw>
<msg timestamp="20201030 11:50:44.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021011444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021100847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:43.903" endtime="20201030 11:50:44.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:44.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021011444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021100847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:44.196" endtime="20201030 11:50:44.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:44.205" endtime="20201030 11:50:44.206"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.900" endtime="20201030 11:50:44.207"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.898" endtime="20201030 11:50:44.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:44.212" level="INFO">${RESULT} = [{'diff': 8.940299999999832e-05}, {'diff': 8.941700000000136e-05}, {'diff': 8.91389999999985e-05}, {'diff': 8.89999999999988e-05}, {'diff': 8.976399999999912e-05}, {'diff': 8.9638999999999e-05}, {'dif...</msg>
<status status="PASS" starttime="20201030 11:50:44.208" endtime="20201030 11:50:44.212"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:44.216" level="INFO">${ACCURACY} = {'diff': [8.940299999999832e-05, 8.941700000000136e-05, 8.91389999999985e-05, 8.89999999999988e-05, 8.976399999999912e-05, 8.9638999999999e-05, 8.920900000000329e-05, 8.920899999999982e-05, 8.91519999...</msg>
<status status="PASS" starttime="20201030 11:50:44.213" endtime="20201030 11:50:44.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:44.220" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201030 11:50:44.219" endtime="20201030 11:50:44.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:44.223" level="INFO">VALUE: [8.940299999999832e-05, 8.941700000000136e-05, 8.91389999999985e-05, 8.89999999999988e-05, 8.976399999999912e-05, 8.9638999999999e-05, 8.920900000000329e-05, 8.920899999999982e-05, 8.91519999999986e-05, 9.090200000000034e-05, 8.96519999999991e-05, 9.090299999999982e-05, 8.933300000000047e-05, 8.973599999999998e-05, 8.944399999999755e-05, 8.927800000000166e-05, 8.943100000000093e-05, 8.926399999999862e-05, 8.977800000000216e-05, 8.91389999999985e-05, 8.904100000000151e-05, 8.957000000000062e-05, 8.952699999999897e-05, 8.962499999999943e-05, 8.895800000000009e-05, 8.944399999999755e-05, 8.922199999999991e-05, 8.954099999999854e-05, 9.093099999999896e-05, 8.902800000000141e-05, 8.9638999999999e-05, 8.901400000000184e-05, 8.902800000000141e-05, 8.932000000000037e-05, 8.951400000000234e-05, 9.081899999999893e-05, 8.945800000000059e-05, 9.084699999999807e-05, 8.974999999999955e-05, 8.934700000000004e-05, 8.965300000000204e-05, 9.091699999999939e-05, 8.901399999999837e-05, 8.956900000000115e-05, 8.974999999999955e-05, 8.911099999999936e-05, 8.913900000000197e-05, 8.952799999999844e-05, 8.974999999999955e-05, 8.94450000000005e-05]</msg>
<status status="PASS" starttime="20201030 11:50:44.221" endtime="20201030 11:50:44.225"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.217" endtime="20201030 11:50:44.225"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:44.229" endtime="20201030 11:50:44.248"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.227" endtime="20201030 11:50:44.249"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.226" endtime="20201030 11:50:44.249"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.860" endtime="20201030 11:50:44.250"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.860" endtime="20201030 11:50:44.250"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:44.259" endtime="20201030 11:50:44.279"></status>
</kw>
<msg timestamp="20201030 11:50:44.279" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:44.257" endtime="20201030 11:50:44.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:44.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:44.280" endtime="20201030 11:50:44.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:44.283" endtime="20201030 11:50:44.285"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.255" endtime="20201030 11:50:44.285"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.252" endtime="20201030 11:50:44.286"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:44.292" endtime="20201030 11:50:44.577"></status>
</kw>
<msg timestamp="20201030 11:50:44.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020017125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020107889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:44.291" endtime="20201030 11:50:44.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:44.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020017125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020107889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:44.582" endtime="20201030 11:50:44.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:44.590" endtime="20201030 11:50:44.592"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.288" endtime="20201030 11:50:44.592"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.286" endtime="20201030 11:50:44.593"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:44.597" level="INFO">${RESULT} = [{'diff': 9.076400000000012e-05}, {'diff': 9.052799999999944e-05}, {'diff': 9.038899999999975e-05}, {'diff': 9.015299999999907e-05}, {'diff': 9.025000000000005e-05}, {'diff': 9.077799999999969e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:50:44.593" endtime="20201030 11:50:44.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:44.602" level="INFO">${ACCURACY} = {'diff': [9.076400000000012e-05, 9.052799999999944e-05, 9.038899999999975e-05, 9.015299999999907e-05, 9.025000000000005e-05, 9.077799999999969e-05, 9.073600000000098e-05, 9.020800000000134e-05, 9.0375...</msg>
<status status="PASS" starttime="20201030 11:50:44.598" endtime="20201030 11:50:44.602"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:44.606" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201030 11:50:44.605" endtime="20201030 11:50:44.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:44.609" level="INFO">VALUE: [9.076400000000012e-05, 9.052799999999944e-05, 9.038899999999975e-05, 9.015299999999907e-05, 9.025000000000005e-05, 9.077799999999969e-05, 9.073600000000098e-05, 9.020800000000134e-05, 9.037500000000018e-05, 9.076400000000012e-05, 9.065300000000304e-05, 9.070800000000184e-05, 9.027799999999919e-05, 9.030599999999833e-05, 9.020900000000082e-05, 9.032000000000137e-05, 9.066699999999914e-05, 9.018099999999821e-05, 9.03199999999979e-05, 9.038899999999975e-05, 9.022200000000091e-05, 8.998600000000023e-05, 9.062499999999696e-05, 9.004199999999851e-05, 9.072199999999794e-05, 9.059700000000129e-05, 9.040299999999932e-05, 9.01389999999995e-05, 9.186100000000211e-05, 9.001400000000284e-05, 9.04450000000015e-05, 8.9945000000001e-05, 9.047200000000116e-05, 9.067999999999923e-05, 9.059699999999782e-05, 9.042999999999898e-05, 9.016699999999864e-05, 9.05000000000003e-05, 9.052799999999944e-05, 9.051399999999987e-05, 9.052799999999944e-05, 9.076400000000012e-05, 9.034799999999704e-05, 9.03199999999979e-05, 9.177799999999722e-05, 9.052699999999997e-05, 9.081899999999893e-05, 9.025000000000005e-05, 9.077700000000022e-05, 9.075000000000055e-05]</msg>
<status status="PASS" starttime="20201030 11:50:44.607" endtime="20201030 11:50:44.610"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.603" endtime="20201030 11:50:44.610"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:44.614" endtime="20201030 11:50:44.633"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.612" endtime="20201030 11:50:44.634"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.611" endtime="20201030 11:50:44.634"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.251" endtime="20201030 11:50:44.635"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.250" endtime="20201030 11:50:44.635"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:44.644" endtime="20201030 11:50:44.664"></status>
</kw>
<msg timestamp="20201030 11:50:44.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:44.642" endtime="20201030 11:50:44.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:44.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:44.666" endtime="20201030 11:50:44.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:44.668" endtime="20201030 11:50:44.670"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.640" endtime="20201030 11:50:44.671"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.637" endtime="20201030 11:50:44.671"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:44.678" endtime="20201030 11:50:44.967"></status>
</kw>
<msg timestamp="20201030 11:50:44.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019922583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020014597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:44.676" endtime="20201030 11:50:44.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:44.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019922583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020014597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:44.971" endtime="20201030 11:50:44.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:44.980" endtime="20201030 11:50:44.982"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.673" endtime="20201030 11:50:44.982"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.672" endtime="20201030 11:50:44.983"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:44.986" level="INFO">${RESULT} = [{'diff': 9.20139999999979e-05}, {'diff': 9.155599999999958e-05}, {'diff': 9.156999999999915e-05}, {'diff': 9.112500000000093e-05}, {'diff': 9.140300000000032e-05}, {'diff': 9.152700000000097e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:50:44.983" endtime="20201030 11:50:44.987"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:44.991" level="INFO">${ACCURACY} = {'diff': [9.20139999999979e-05, 9.155599999999958e-05, 9.156999999999915e-05, 9.112500000000093e-05, 9.140300000000032e-05, 9.152700000000097e-05, 9.1332999999999e-05, 9.286099999999964e-05, 9.2917000...</msg>
<status status="PASS" starttime="20201030 11:50:44.988" endtime="20201030 11:50:44.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:44.995" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201030 11:50:44.994" endtime="20201030 11:50:44.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:44.998" level="INFO">VALUE: [9.20139999999979e-05, 9.155599999999958e-05, 9.156999999999915e-05, 9.112500000000093e-05, 9.140300000000032e-05, 9.152700000000097e-05, 9.1332999999999e-05, 9.286099999999964e-05, 9.291700000000139e-05, 9.137499999999771e-05, 9.131899999999943e-05, 9.170799999999937e-05, 9.151400000000087e-05, 9.288900000000225e-05, 9.133399999999847e-05, 9.156999999999915e-05, 9.174999999999808e-05, 9.131899999999943e-05, 9.134700000000204e-05, 9.287499999999921e-05, 9.11390000000005e-05, 9.1639000000001e-05, 9.16939999999998e-05, 9.163899999999753e-05, 9.16939999999998e-05, 9.098600000000123e-05, 9.138899999999728e-05, 9.102799999999994e-05, 9.158400000000219e-05, 9.144499999999903e-05, 9.095900000000157e-05, 9.116699999999964e-05, 9.10130000000009e-05, 9.123600000000148e-05, 9.141600000000041e-05, 9.13199999999989e-05, 9.151400000000087e-05, 9.127800000000019e-05, 9.11390000000005e-05, 9.106999999999865e-05, 9.138900000000075e-05, 9.101400000000037e-05, 9.170899999999885e-05, 9.156899999999968e-05, 9.1639000000001e-05, 9.290299999999835e-05, 9.163800000000152e-05, 9.134699999999857e-05, 9.116600000000016e-05, 9.097200000000166e-05]</msg>
<status status="PASS" starttime="20201030 11:50:44.996" endtime="20201030 11:50:44.999"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.992" endtime="20201030 11:50:44.999"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:45.003" endtime="20201030 11:50:45.023"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.002" endtime="20201030 11:50:45.023"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.000" endtime="20201030 11:50:45.024"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.636" endtime="20201030 11:50:45.024"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.635" endtime="20201030 11:50:45.024"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:45.033" endtime="20201030 11:50:45.054"></status>
</kw>
<msg timestamp="20201030 11:50:45.055" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:45.031" endtime="20201030 11:50:45.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:45.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:45.056" endtime="20201030 11:50:45.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:45.058" endtime="20201030 11:50:45.060"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.029" endtime="20201030 11:50:45.061"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.026" endtime="20201030 11:50:45.061"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:45.068" endtime="20201030 11:50:45.353"></status>
</kw>
<msg timestamp="20201030 11:50:45.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020799222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020891944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:45.066" endtime="20201030 11:50:45.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:45.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020799222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020891944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:45.357" endtime="20201030 11:50:45.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:45.366" endtime="20201030 11:50:45.368"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.063" endtime="20201030 11:50:45.368"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.062" endtime="20201030 11:50:45.369"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:45.373" level="INFO">${RESULT} = [{'diff': 9.272199999999994e-05}, {'diff': 9.213899999999803e-05}, {'diff': 9.262500000000243e-05}, {'diff': 9.202800000000094e-05}, {'diff': 9.226399999999815e-05}, {'diff': 9.226400000000162e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:50:45.369" endtime="20201030 11:50:45.373"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:45.377" level="INFO">${ACCURACY} = {'diff': [9.272199999999994e-05, 9.213899999999803e-05, 9.262500000000243e-05, 9.202800000000094e-05, 9.226399999999815e-05, 9.226400000000162e-05, 9.220799999999987e-05, 9.23199999999999e-05, 9.27500...</msg>
<status status="PASS" starttime="20201030 11:50:45.374" endtime="20201030 11:50:45.377"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:45.381" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201030 11:50:45.380" endtime="20201030 11:50:45.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:45.384" level="INFO">VALUE: [9.272199999999994e-05, 9.213899999999803e-05, 9.262500000000243e-05, 9.202800000000094e-05, 9.226399999999815e-05, 9.226400000000162e-05, 9.220799999999987e-05, 9.23199999999999e-05, 9.275000000000255e-05, 9.199999999999833e-05, 9.259799999999929e-05, 9.233399999999947e-05, 9.390299999999935e-05, 9.266699999999767e-05, 9.223599999999901e-05, 9.255500000000111e-05, 9.28330000000005e-05, 9.198599999999876e-05, 9.197200000000266e-05, 9.204200000000051e-05, 9.24719999999997e-05, 9.276400000000212e-05, 9.261099999999939e-05, 9.208399999999922e-05, 9.226400000000162e-05, 9.262499999999896e-05, 9.227699999999825e-05, 9.21940000000003e-05, 9.262500000000243e-05, 9.238900000000175e-05, 9.199999999999833e-05, 9.268100000000071e-05, 9.20139999999979e-05, 9.248600000000273e-05, 9.215300000000107e-05, 9.237499999999871e-05, 9.279200000000126e-05, 9.258399999999972e-05, 9.277699999999875e-05, 9.244400000000055e-05, 9.277800000000169e-05, 9.38330000000015e-05, 9.21940000000003e-05, 9.38469999999976e-05, 9.223600000000248e-05, 9.255600000000058e-05, 9.249999999999883e-05, 9.231900000000043e-05, 9.28330000000005e-05, 9.280600000000083e-05]</msg>
<status status="PASS" starttime="20201030 11:50:45.383" endtime="20201030 11:50:45.386"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.378" endtime="20201030 11:50:45.386"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:45.390" endtime="20201030 11:50:45.409"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.389" endtime="20201030 11:50:45.410"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.387" endtime="20201030 11:50:45.410"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.025" endtime="20201030 11:50:45.411"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.024" endtime="20201030 11:50:45.411"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:45.420" endtime="20201030 11:50:45.441"></status>
</kw>
<msg timestamp="20201030 11:50:45.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:45.418" endtime="20201030 11:50:45.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:45.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:45.442" endtime="20201030 11:50:45.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:45.445" endtime="20201030 11:50:45.447"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.415" endtime="20201030 11:50:45.447"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.413" endtime="20201030 11:50:45.448"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:45.454" endtime="20201030 11:50:45.740"></status>
</kw>
<msg timestamp="20201030 11:50:45.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020029875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020123278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:45.453" endtime="20201030 11:50:45.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:45.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020029875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020123278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:45.744" endtime="20201030 11:50:45.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:45.752" endtime="20201030 11:50:45.754"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.450" endtime="20201030 11:50:45.755"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.448" endtime="20201030 11:50:45.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:45.759" level="INFO">${RESULT} = [{'diff': 9.340300000000232e-05}, {'diff': 9.368100000000171e-05}, {'diff': 9.376399999999965e-05}, {'diff': 9.486200000000111e-05}, {'diff': 9.308300000000075e-05}, {'diff': 9.368099999999824e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:50:45.756" endtime="20201030 11:50:45.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:45.764" level="INFO">${ACCURACY} = {'diff': [9.340300000000232e-05, 9.368100000000171e-05, 9.376399999999965e-05, 9.486200000000111e-05, 9.308300000000075e-05, 9.368099999999824e-05, 9.48330000000025e-05, 9.349999999999983e-05, 9.36529...</msg>
<status status="PASS" starttime="20201030 11:50:45.760" endtime="20201030 11:50:45.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:45.769" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201030 11:50:45.768" endtime="20201030 11:50:45.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:45.772" level="INFO">VALUE: [9.340300000000232e-05, 9.368100000000171e-05, 9.376399999999965e-05, 9.486200000000111e-05, 9.308300000000075e-05, 9.368099999999824e-05, 9.48330000000025e-05, 9.349999999999983e-05, 9.36529999999991e-05, 9.363899999999953e-05, 9.35139999999994e-05, 9.336100000000014e-05, 9.36940000000018e-05, 9.36529999999991e-05, 9.376399999999965e-05, 9.330499999999839e-05, 9.361099999999692e-05, 9.326400000000262e-05, 9.31940000000013e-05, 9.484700000000207e-05, 9.3333000000001e-05, 9.352799999999897e-05, 9.372200000000094e-05, 9.3333000000001e-05, 9.31940000000013e-05, 9.352799999999897e-05, 9.380599999999836e-05, 9.362499999999996e-05, 9.338899999999928e-05, 9.369499999999781e-05, 9.370900000000085e-05, 9.295800000000062e-05, 9.372300000000042e-05, 9.349999999999983e-05, 9.330599999999786e-05, 9.31529999999986e-05, 9.348600000000026e-05, 9.313899999999903e-05, 9.29590000000001e-05, 9.380600000000183e-05, 9.318099999999774e-05, 9.29590000000001e-05, 9.363899999999953e-05, 9.304099999999857e-05, 9.3026999999999e-05, 9.3333000000001e-05, 9.37079999999979e-05, 9.373600000000051e-05, 9.481900000000293e-05, 9.375000000000008e-05]</msg>
<status status="PASS" starttime="20201030 11:50:45.770" endtime="20201030 11:50:45.772"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.765" endtime="20201030 11:50:45.773"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:45.777" endtime="20201030 11:50:45.796"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.775" endtime="20201030 11:50:45.797"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.774" endtime="20201030 11:50:45.797"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.412" endtime="20201030 11:50:45.797"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.411" endtime="20201030 11:50:45.797"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:45.806" endtime="20201030 11:50:45.827"></status>
</kw>
<msg timestamp="20201030 11:50:45.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:45.805" endtime="20201030 11:50:45.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:45.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:45.829" endtime="20201030 11:50:45.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:45.832" endtime="20201030 11:50:45.833"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.802" endtime="20201030 11:50:45.834"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.800" endtime="20201030 11:50:45.834"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:45.841" endtime="20201030 11:50:46.128"></status>
</kw>
<msg timestamp="20201030 11:50:46.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019950833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020045014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:45.839" endtime="20201030 11:50:46.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:46.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019950833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020045014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:46.132" endtime="20201030 11:50:46.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:46.141" endtime="20201030 11:50:46.142"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.837" endtime="20201030 11:50:46.143"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.835" endtime="20201030 11:50:46.143"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:46.147" level="INFO">${RESULT} = [{'diff': 9.418099999999874e-05}, {'diff': 9.44590000000016e-05}, {'diff': 9.407000000000165e-05}, {'diff': 9.469499999999881e-05}, {'diff': 9.429200000000276e-05}, {'diff': 9.456999999999868e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:50:46.144" endtime="20201030 11:50:46.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:46.152" level="INFO">${ACCURACY} = {'diff': [9.418099999999874e-05, 9.44590000000016e-05, 9.407000000000165e-05, 9.469499999999881e-05, 9.429200000000276e-05, 9.456999999999868e-05, 9.413799999999709e-05, 9.467999999999976e-05, 9.46390...</msg>
<status status="PASS" starttime="20201030 11:50:46.148" endtime="20201030 11:50:46.152"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:46.156" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201030 11:50:46.155" endtime="20201030 11:50:46.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:46.159" level="INFO">VALUE: [9.418099999999874e-05, 9.44590000000016e-05, 9.407000000000165e-05, 9.469499999999881e-05, 9.429200000000276e-05, 9.456999999999868e-05, 9.413799999999709e-05, 9.467999999999976e-05, 9.463900000000053e-05, 9.587499999999874e-05, 9.400000000000033e-05, 9.469399999999933e-05, 9.46530000000001e-05, 9.395799999999815e-05, 9.444499999999856e-05, 9.481999999999893e-05, 9.46530000000001e-05, 9.480600000000283e-05, 9.420899999999788e-05, 9.398600000000076e-05, 9.442999999999951e-05, 9.588900000000178e-05, 9.476400000000065e-05, 9.468099999999924e-05, 9.469399999999933e-05, 9.459699999999835e-05, 9.427799999999972e-05, 9.431999999999843e-05, 9.39590000000011e-05, 9.583400000000297e-05, 9.434800000000104e-05, 9.581999999999993e-05, 9.447199999999822e-05, 9.405499999999914e-05, 9.440299999999985e-05, 9.413900000000003e-05, 9.408300000000175e-05, 9.581899999999699e-05, 9.394499999999806e-05, 9.476400000000065e-05, 9.45140000000004e-05, 9.457000000000215e-05, 9.461099999999792e-05, 9.458400000000172e-05, 9.394499999999806e-05, 9.583300000000003e-05, 9.426399999999668e-05, 9.455499999999964e-05, 9.455499999999964e-05, 9.479199999999979e-05]</msg>
<status status="PASS" starttime="20201030 11:50:46.157" endtime="20201030 11:50:46.160"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.153" endtime="20201030 11:50:46.160"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:46.164" endtime="20201030 11:50:46.183"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.162" endtime="20201030 11:50:46.184"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.161" endtime="20201030 11:50:46.184"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.798" endtime="20201030 11:50:46.185"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.798" endtime="20201030 11:50:46.185"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:46.194" endtime="20201030 11:50:46.215"></status>
</kw>
<msg timestamp="20201030 11:50:46.216" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:46.192" endtime="20201030 11:50:46.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:46.218" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:46.217" endtime="20201030 11:50:46.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:46.219" endtime="20201030 11:50:46.221"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.190" endtime="20201030 11:50:46.222"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.187" endtime="20201030 11:50:46.222"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:46.229" endtime="20201030 11:50:46.515"></status>
</kw>
<msg timestamp="20201030 11:50:46.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021048264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021144, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:50:46.227" endtime="20201030 11:50:46.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:46.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021048264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021144, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:50:46.519" endtime="20201030 11:50:46.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:46.528" endtime="20201030 11:50:46.529"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.224" endtime="20201030 11:50:46.530"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.223" endtime="20201030 11:50:46.530"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:46.534" level="INFO">${RESULT} = [{'diff': 9.573599999999904e-05}, {'diff': 9.499999999999786e-05}, {'diff': 9.536100000000214e-05}, {'diff': 9.573699999999852e-05}, {'diff': 9.529200000000029e-05}, {'diff': 9.556999999999968e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:50:46.531" endtime="20201030 11:50:46.535"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:46.539" level="INFO">${ACCURACY} = {'diff': [9.573599999999904e-05, 9.499999999999786e-05, 9.536100000000214e-05, 9.573699999999852e-05, 9.529200000000029e-05, 9.556999999999968e-05, 9.544499999999956e-05, 9.543000000000051e-05, 9.5707...</msg>
<status status="PASS" starttime="20201030 11:50:46.535" endtime="20201030 11:50:46.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:46.543" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201030 11:50:46.542" endtime="20201030 11:50:46.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:46.546" level="INFO">VALUE: [9.573599999999904e-05, 9.499999999999786e-05, 9.536100000000214e-05, 9.573699999999852e-05, 9.529200000000029e-05, 9.556999999999968e-05, 9.544499999999956e-05, 9.543000000000051e-05, 9.57079999999999e-05, 9.519399999999983e-05, 9.49859999999983e-05, 9.537500000000171e-05, 9.544400000000008e-05, 9.508399999999875e-05, 9.552800000000097e-05, 9.55140000000014e-05, 9.552800000000097e-05, 9.544499999999956e-05, 9.556999999999968e-05, 9.570899999999938e-05, 9.5027000000001e-05, 9.577800000000122e-05, 9.572199999999947e-05, 9.57079999999999e-05, 9.538900000000128e-05, 9.52079999999994e-05, 9.56669999999972e-05, 9.522199999999897e-05, 9.544499999999956e-05, 9.502800000000047e-05, 9.576400000000165e-05, 9.53469999999991e-05, 9.569499999999981e-05, 9.519500000000278e-05, 9.559699999999935e-05, 9.563900000000153e-05, 9.687499999999974e-05, 9.508299999999928e-05, 9.55279999999975e-05, 9.563900000000153e-05, 9.549999999999836e-05, 9.533299999999953e-05, 9.570900000000285e-05, 9.5333999999999e-05, 9.507000000000265e-05, 9.515200000000112e-05, 9.55270000000015e-05, 9.688900000000278e-05, 9.691699999999845e-05, 9.56530000000011e-05]</msg>
<status status="PASS" starttime="20201030 11:50:46.544" endtime="20201030 11:50:46.547"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.540" endtime="20201030 11:50:46.548"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:46.552" endtime="20201030 11:50:46.571"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.550" endtime="20201030 11:50:46.572"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.549" endtime="20201030 11:50:46.572"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.186" endtime="20201030 11:50:46.572"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.185" endtime="20201030 11:50:46.573"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:46.581" endtime="20201030 11:50:46.602"></status>
</kw>
<msg timestamp="20201030 11:50:46.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:46.580" endtime="20201030 11:50:46.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:46.605" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:46.603" endtime="20201030 11:50:46.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:46.606" endtime="20201030 11:50:46.607"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.577" endtime="20201030 11:50:46.608"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.575" endtime="20201030 11:50:46.609"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:46.615" endtime="20201030 11:50:46.902"></status>
</kw>
<msg timestamp="20201030 11:50:46.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019885083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019981597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:46.614" endtime="20201030 11:50:46.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:46.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019885083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019981597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:46.906" endtime="20201030 11:50:46.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:46.914" endtime="20201030 11:50:46.916"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.611" endtime="20201030 11:50:46.917"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.609" endtime="20201030 11:50:46.917"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:46.921" level="INFO">${RESULT} = [{'diff': 9.651399999999893e-05}, {'diff': 9.622199999999997e-05}, {'diff': 9.781999999999846e-05}, {'diff': 9.60140000000019e-05}, {'diff': 9.781899999999899e-05}, {'diff': 9.788900000000031e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:50:46.918" endtime="20201030 11:50:46.921"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:46.926" level="INFO">${ACCURACY} = {'diff': [9.651399999999893e-05, 9.622199999999997e-05, 9.781999999999846e-05, 9.60140000000019e-05, 9.781899999999899e-05, 9.788900000000031e-05, 9.61660000000017e-05, 9.640299999999838e-05, 9.650000...</msg>
<status status="PASS" starttime="20201030 11:50:46.922" endtime="20201030 11:50:46.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:46.931" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201030 11:50:46.930" endtime="20201030 11:50:46.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:46.934" level="INFO">VALUE: [9.651399999999893e-05, 9.622199999999997e-05, 9.781999999999846e-05, 9.60140000000019e-05, 9.781899999999899e-05, 9.788900000000031e-05, 9.61660000000017e-05, 9.640299999999838e-05, 9.650000000000283e-05, 9.670799999999743e-05, 9.608300000000028e-05, 9.676299999999971e-05, 9.787500000000074e-05, 9.62920000000013e-05, 9.593100000000049e-05, 9.634699999999663e-05, 9.658299999999731e-05, 9.638899999999881e-05, 9.670799999999743e-05, 9.665299999999863e-05, 9.591700000000092e-05, 9.654200000000154e-05, 9.64859999999998e-05, 9.649999999999936e-05, 9.591700000000092e-05, 9.634799999999957e-05, 9.662499999999949e-05, 9.651399999999893e-05, 9.62080000000004e-05, 9.654100000000207e-05, 9.602699999999853e-05, 9.670799999999743e-05, 9.781899999999899e-05, 9.652800000000197e-05, 9.611100000000289e-05, 9.60140000000019e-05, 9.78470000000016e-05, 9.619400000000083e-05, 9.629099999999835e-05, 9.616700000000117e-05, 9.62080000000004e-05, 9.649999999999936e-05, 9.63470000000001e-05, 9.593000000000101e-05, 9.62080000000004e-05, 9.62080000000004e-05, 9.788900000000031e-05, 9.619400000000083e-05, 9.788900000000031e-05, 9.627800000000172e-05]</msg>
<status status="PASS" starttime="20201030 11:50:46.933" endtime="20201030 11:50:46.935"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.927" endtime="20201030 11:50:46.936"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:46.940" endtime="20201030 11:50:46.960"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.938" endtime="20201030 11:50:46.960"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.937" endtime="20201030 11:50:46.960"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.573" endtime="20201030 11:50:46.961"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.573" endtime="20201030 11:50:46.961"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:46.970" endtime="20201030 11:50:46.991"></status>
</kw>
<msg timestamp="20201030 11:50:46.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:46.968" endtime="20201030 11:50:46.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:46.994" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:46.992" endtime="20201030 11:50:46.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:46.995" endtime="20201030 11:50:46.997"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.966" endtime="20201030 11:50:46.997"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.963" endtime="20201030 11:50:46.998"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:47.004" endtime="20201030 11:50:47.291"></status>
</kw>
<msg timestamp="20201030 11:50:47.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020099306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020197028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:47.003" endtime="20201030 11:50:47.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:47.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020099306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020197028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:47.295" endtime="20201030 11:50:47.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:47.304" endtime="20201030 11:50:47.305"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.000" endtime="20201030 11:50:47.306"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.998" endtime="20201030 11:50:47.306"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:47.310" level="INFO">${RESULT} = [{'diff': 9.7721999999998e-05}, {'diff': 9.757000000000168e-05}, {'diff': 9.694500000000106e-05}, {'diff': 9.78470000000016e-05}, {'diff': 9.762500000000049e-05}, {'diff': 9.709700000000085e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 11:50:47.307" endtime="20201030 11:50:47.311"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:47.315" level="INFO">${ACCURACY} = {'diff': [9.7721999999998e-05, 9.757000000000168e-05, 9.694500000000106e-05, 9.78470000000016e-05, 9.762500000000049e-05, 9.709700000000085e-05, 9.887500000000174e-05, 9.884699999999913e-05, 9.7207999...</msg>
<status status="PASS" starttime="20201030 11:50:47.311" endtime="20201030 11:50:47.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:47.319" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201030 11:50:47.318" endtime="20201030 11:50:47.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:47.322" level="INFO">VALUE: [9.7721999999998e-05, 9.757000000000168e-05, 9.694500000000106e-05, 9.78470000000016e-05, 9.762500000000049e-05, 9.709700000000085e-05, 9.887500000000174e-05, 9.884699999999913e-05, 9.720799999999793e-05, 9.77080000000019e-05, 9.702800000000247e-05, 9.756899999999874e-05, 9.75140000000034e-05, 9.887499999999827e-05, 9.701399999999943e-05, 9.770799999999843e-05, 9.701299999999996e-05, 9.770799999999843e-05, 9.881899999999999e-05, 9.75279999999995e-05, 9.890300000000088e-05, 9.756899999999874e-05, 9.695800000000115e-05, 9.726399999999968e-05, 9.73059999999984e-05, 9.708399999999728e-05, 9.738899999999981e-05, 9.770900000000138e-05, 9.726399999999968e-05, 9.751399999999993e-05, 9.751399999999993e-05, 9.761100000000092e-05, 9.713899999999956e-05, 9.887499999999827e-05, 9.704199999999857e-05, 9.737500000000024e-05, 9.7027999999999e-05, 9.891700000000045e-05, 9.7027999999999e-05, 9.884800000000207e-05, 9.713800000000009e-05, 9.726300000000021e-05, 9.731899999999849e-05, 9.704100000000257e-05, 9.726399999999968e-05, 9.706900000000171e-05, 9.705499999999867e-05, 9.755600000000211e-05, 9.738899999999981e-05, 9.888900000000131e-05]</msg>
<status status="PASS" starttime="20201030 11:50:47.320" endtime="20201030 11:50:47.323"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.315" endtime="20201030 11:50:47.323"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:47.327" endtime="20201030 11:50:47.346"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.325" endtime="20201030 11:50:47.347"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.324" endtime="20201030 11:50:47.347"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.962" endtime="20201030 11:50:47.347"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.961" endtime="20201030 11:50:47.348"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:47.357" endtime="20201030 11:50:47.378"></status>
</kw>
<msg timestamp="20201030 11:50:47.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:47.355" endtime="20201030 11:50:47.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:47.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:47.380" endtime="20201030 11:50:47.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:47.383" endtime="20201030 11:50:47.384"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.353" endtime="20201030 11:50:47.385"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.350" endtime="20201030 11:50:47.385"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:47.392" endtime="20201030 11:50:47.677"></status>
</kw>
<msg timestamp="20201030 11:50:47.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021122375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021220778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:47.390" endtime="20201030 11:50:47.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:47.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021122375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021220778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:47.682" endtime="20201030 11:50:47.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:47.690" endtime="20201030 11:50:47.692"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.388" endtime="20201030 11:50:47.692"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.386" endtime="20201030 11:50:47.693"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:47.697" level="INFO">${RESULT} = [{'diff': 9.840300000000038e-05}, {'diff': 9.85280000000005e-05}, {'diff': 9.813900000000056e-05}, {'diff': 9.857000000000268e-05}, {'diff': 9.831999999999896e-05}, {'diff': 9.852700000000103e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:50:47.694" endtime="20201030 11:50:47.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:47.701" level="INFO">${ACCURACY} = {'diff': [9.840300000000038e-05, 9.85280000000005e-05, 9.813900000000056e-05, 9.857000000000268e-05, 9.831999999999896e-05, 9.852700000000103e-05, 9.797199999999825e-05, 9.851400000000093e-05, 9.85969...</msg>
<status status="PASS" starttime="20201030 11:50:47.698" endtime="20201030 11:50:47.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:47.706" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201030 11:50:47.705" endtime="20201030 11:50:47.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:47.708" level="INFO">VALUE: [9.840300000000038e-05, 9.85280000000005e-05, 9.813900000000056e-05, 9.857000000000268e-05, 9.831999999999896e-05, 9.852700000000103e-05, 9.797199999999825e-05, 9.851400000000093e-05, 9.859699999999888e-05, 9.85280000000005e-05, 9.838900000000081e-05, 9.859699999999888e-05, 9.854200000000007e-05, 9.851400000000093e-05, 9.840300000000038e-05, 9.8028e-05, 9.805499999999967e-05, 9.851400000000093e-05, 9.86800000000003e-05, 9.827699999999731e-05, 9.833299999999906e-05, 9.820900000000188e-05, 9.834699999999863e-05, 9.980599999999742e-05, 9.983300000000056e-05, 9.818100000000274e-05, 9.851399999999746e-05, 9.845900000000213e-05, 9.83609999999982e-05, 9.823699999999755e-05, 9.98609999999997e-05, 9.855500000000017e-05, 9.845799999999919e-05, 9.812500000000099e-05, 9.840300000000038e-05, 9.822200000000197e-05, 9.833299999999906e-05, 9.827800000000025e-05, 9.825000000000111e-05, 9.857000000000268e-05, 9.809800000000132e-05, 9.88059999999999e-05, 9.797200000000172e-05, 9.851400000000093e-05, 9.859699999999888e-05, 9.869399999999987e-05, 9.838900000000081e-05, 9.883299999999956e-05, 9.863900000000106e-05, 9.877800000000075e-05]</msg>
<status status="PASS" starttime="20201030 11:50:47.707" endtime="20201030 11:50:47.710"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.702" endtime="20201030 11:50:47.711"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:47.714" endtime="20201030 11:50:47.734"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.713" endtime="20201030 11:50:47.734"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.712" endtime="20201030 11:50:47.735"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.349" endtime="20201030 11:50:47.735"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.348" endtime="20201030 11:50:47.735"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:47.744" endtime="20201030 11:50:47.765"></status>
</kw>
<msg timestamp="20201030 11:50:47.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:47.743" endtime="20201030 11:50:47.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:47.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:47.767" endtime="20201030 11:50:47.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:47.769" endtime="20201030 11:50:47.771"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.740" endtime="20201030 11:50:47.771"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.738" endtime="20201030 11:50:47.772"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:47.779" endtime="20201030 11:50:48.066"></status>
</kw>
<msg timestamp="20201030 11:50:48.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019990667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02009, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 11:50:47.777" endtime="20201030 11:50:48.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:48.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019990667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02009, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 11:50:48.070" endtime="20201030 11:50:48.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:48.078" endtime="20201030 11:50:48.080"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.774" endtime="20201030 11:50:48.080"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.772" endtime="20201030 11:50:48.081"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:48.085" level="INFO">${RESULT} = [{'diff': 9.933300000000006e-05}, {'diff': 9.940299999999791e-05}, {'diff': 9.909800000000232e-05}, {'diff': 9.906999999999971e-05}, {'diff': 9.938899999999834e-05}, {'diff': 9.918100000000027e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:50:48.082" endtime="20201030 11:50:48.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:48.090" level="INFO">${ACCURACY} = {'diff': [9.933300000000006e-05, 9.940299999999791e-05, 9.909800000000232e-05, 9.906999999999971e-05, 9.938899999999834e-05, 9.918100000000027e-05, 0.00010083300000000156, 9.962500000000249e-05, 9.968...</msg>
<status status="PASS" starttime="20201030 11:50:48.086" endtime="20201030 11:50:48.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:48.095" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201030 11:50:48.094" endtime="20201030 11:50:48.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:48.097" level="INFO">VALUE: [9.933300000000006e-05, 9.940299999999791e-05, 9.909800000000232e-05, 9.906999999999971e-05, 9.938899999999834e-05, 9.918100000000027e-05, 0.00010083300000000156, 9.962500000000249e-05, 9.96809999999973e-05, 0.00010083299999999809, 9.98060000000009e-05, 9.950000000000236e-05, 9.934699999999963e-05, 9.951399999999846e-05, 9.923700000000202e-05, 0.00010088899999999984, 9.940300000000138e-05, 9.969400000000087e-05, 9.933300000000006e-05, 9.937499999999877e-05, 9.894400000000012e-05, 9.91939999999969e-05, 9.948599999999932e-05, 9.913899999999809e-05, 9.93479999999991e-05, 9.901400000000143e-05, 0.0001008749999999968, 9.965300000000163e-05, 9.951400000000193e-05, 0.0001009159999999995, 9.961199999999892e-05, 9.947199999999976e-05, 9.970800000000044e-05, 9.908299999999981e-05, 9.901399999999796e-05, 9.938899999999834e-05, 9.963900000000206e-05, 9.926400000000168e-05, 0.0001008480000000006, 0.00010088899999999984, 9.969500000000034e-05, 9.895899999999916e-05, 9.962499999999902e-05, 9.969400000000087e-05, 9.963900000000206e-05, 9.9028000000001e-05, 9.934699999999963e-05, 9.902799999999753e-05, 9.974999999999914e-05, 9.958300000000031e-05]</msg>
<status status="PASS" starttime="20201030 11:50:48.096" endtime="20201030 11:50:48.098"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.091" endtime="20201030 11:50:48.099"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:48.102" endtime="20201030 11:50:48.122"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.101" endtime="20201030 11:50:48.122"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.100" endtime="20201030 11:50:48.123"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.736" endtime="20201030 11:50:48.123"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.735" endtime="20201030 11:50:48.123"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:48.132" endtime="20201030 11:50:48.153"></status>
</kw>
<msg timestamp="20201030 11:50:48.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:48.131" endtime="20201030 11:50:48.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:48.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:48.154" endtime="20201030 11:50:48.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:48.157" endtime="20201030 11:50:48.159"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.128" endtime="20201030 11:50:48.159"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.126" endtime="20201030 11:50:48.160"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:48.166" endtime="20201030 11:50:48.456"></status>
</kw>
<msg timestamp="20201030 11:50:48.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019913514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020013972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:48.165" endtime="20201030 11:50:48.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:48.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019913514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020013972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:48.461" endtime="20201030 11:50:48.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:48.469" endtime="20201030 11:50:48.471"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.162" endtime="20201030 11:50:48.471"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.160" endtime="20201030 11:50:48.472"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:48.476" level="INFO">${RESULT} = [{'diff': 0.00010045800000000119}, {'diff': 0.00010006900000000124}, {'diff': 0.00010031900000000149}, {'diff': 9.997200000000026e-05}, {'diff': 0.00010001399999999896}, {'diff': 0.0001004299999999985...</msg>
<status status="PASS" starttime="20201030 11:50:48.472" endtime="20201030 11:50:48.476"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:48.480" level="INFO">${ACCURACY} = {'diff': [0.00010045800000000119, 0.00010006900000000124, 0.00010031900000000149, 9.997200000000026e-05, 0.00010001399999999896, 0.00010042999999999858, 0.00010011099999999995, 0.00010047300000000023,...</msg>
<status status="PASS" starttime="20201030 11:50:48.477" endtime="20201030 11:50:48.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:48.484" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201030 11:50:48.483" endtime="20201030 11:50:48.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:48.487" level="INFO">VALUE: [0.00010045800000000119, 0.00010006900000000124, 0.00010031900000000149, 9.997200000000026e-05, 0.00010001399999999896, 0.00010042999999999858, 0.00010011099999999995, 0.00010047300000000023, 0.00010005600000000114, 0.00010040199999999944, 0.00010175000000000115, 0.00010181899999999952, 0.00010066599999999926, 0.00010037499999999977, 0.00010043000000000205, 0.00010183299999999909, 0.00010033300000000106, 0.00010031900000000149, 0.00010069500000000134, 9.994499999999712e-05, 0.00010011099999999995, 0.00010054099999999913, 0.0001001939999999979, 0.00010038799999999987, 0.0001003610000000002, 0.00010075000000000014, 0.00010069400000000187, 0.00010186099999999823, 0.00010040299999999891, 0.00010026399999999921, 0.00010017999999999833, 0.00010062500000000002, 0.00010001399999999896, 0.00010038899999999934, 0.00010034700000000063, 0.00010181899999999952, 0.00010015299999999866, 0.00010031900000000149, 0.00010073600000000058, 0.00010076399999999971, 0.00010001399999999896, 0.0001003610000000002, 0.00010022299999999998, 0.00010190300000000041, 0.00010020899999999694, 0.00010075000000000014, 0.00010080599999999842, 0.00010190199999999747, 0.00010076399999999971, 9.994399999999765e-05]</msg>
<status status="PASS" starttime="20201030 11:50:48.485" endtime="20201030 11:50:48.492"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.481" endtime="20201030 11:50:48.493"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:48.497" endtime="20201030 11:50:48.516"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.495" endtime="20201030 11:50:48.517"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.494" endtime="20201030 11:50:48.517"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.124" endtime="20201030 11:50:48.517"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.124" endtime="20201030 11:50:48.517"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:48.526" endtime="20201030 11:50:48.548"></status>
</kw>
<msg timestamp="20201030 11:50:48.548" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:48.525" endtime="20201030 11:50:48.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:48.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:48.550" endtime="20201030 11:50:48.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:48.552" endtime="20201030 11:50:48.554"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.522" endtime="20201030 11:50:48.554"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.520" endtime="20201030 11:50:48.555"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:48.561" endtime="20201030 11:50:48.848"></status>
</kw>
<msg timestamp="20201030 11:50:48.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020935111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021036181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:48.560" endtime="20201030 11:50:48.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:48.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020935111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021036181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:48.852" endtime="20201030 11:50:48.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:48.861" endtime="20201030 11:50:48.862"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.557" endtime="20201030 11:50:48.863"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.555" endtime="20201030 11:50:48.863"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:48.867" level="INFO">${RESULT} = [{'diff': 0.00010107000000000171}, {'diff': 0.00010290199999999847}, {'diff': 0.00010095799999999822}, {'diff': 0.00010131899999999902}, {'diff': 0.00010145799999999872}, {'diff': 0.000100985999999997...</msg>
<status status="PASS" starttime="20201030 11:50:48.864" endtime="20201030 11:50:48.867"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:48.871" level="INFO">${ACCURACY} = {'diff': [0.00010107000000000171, 0.00010290199999999847, 0.00010095799999999822, 0.00010131899999999902, 0.00010145799999999872, 0.00010098599999999736, 0.00010115299999999966, 0.0001028749999999988,...</msg>
<status status="PASS" starttime="20201030 11:50:48.868" endtime="20201030 11:50:48.872"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:48.876" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201030 11:50:48.875" endtime="20201030 11:50:48.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:48.878" level="INFO">VALUE: [0.00010107000000000171, 0.00010290199999999847, 0.00010095799999999822, 0.00010131899999999902, 0.00010145799999999872, 0.00010098599999999736, 0.00010115299999999966, 0.0001028749999999988, 0.00010112500000000052, 0.00010283399999999956, 0.00010137500000000077, 0.00010163899999999712, 0.00010115200000000019, 0.00010095799999999822, 0.0001011939999999989, 0.00010108300000000181, 0.00010116600000000323, 0.00010155500000000317, 0.00010112499999999705, 0.00010155599999999917, 0.00010176400000000071, 0.00010119500000000184, 0.00010133400000000153, 0.00010107000000000171, 0.00010288900000000184, 0.00010117999999999933, 0.00010179100000000038, 0.00010136099999999773, 0.00010290299999999794, 0.00010176400000000071, 0.00010120800000000194, 0.00010102799999999953, 0.00010108399999999781, 0.00010113900000000009, 0.00010111099999999748, 0.00010109700000000138, 0.00010138900000000034, 0.000101513999999997, 0.00010140299999999991, 0.0001011939999999989, 0.00010144399999999915, 0.0001015000000000009, 0.00010163900000000059, 0.00010098600000000083, 0.00010102799999999953, 0.00010107000000000171, 0.00010169499999999887, 0.00010129199999999935, 0.00010102700000000006, 0.0001028879999999989]</msg>
<status status="PASS" starttime="20201030 11:50:48.877" endtime="20201030 11:50:48.880"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.872" endtime="20201030 11:50:48.881"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:48.884" endtime="20201030 11:50:48.904"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.883" endtime="20201030 11:50:48.904"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.882" endtime="20201030 11:50:48.905"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.518" endtime="20201030 11:50:48.905"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.518" endtime="20201030 11:50:48.905"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:48.914" endtime="20201030 11:50:48.936"></status>
</kw>
<msg timestamp="20201030 11:50:48.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:48.912" endtime="20201030 11:50:48.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:48.939" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:48.937" endtime="20201030 11:50:48.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:48.940" endtime="20201030 11:50:48.942"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.910" endtime="20201030 11:50:48.942"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.908" endtime="20201030 11:50:48.942"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:48.949" endtime="20201030 11:50:49.237"></status>
</kw>
<msg timestamp="20201030 11:50:49.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019970111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020072736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:48.947" endtime="20201030 11:50:49.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:49.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019970111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020072736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:49.241" endtime="20201030 11:50:49.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:49.249" endtime="20201030 11:50:49.251"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.945" endtime="20201030 11:50:49.251"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.943" endtime="20201030 11:50:49.252"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:49.256" level="INFO">${RESULT} = [{'diff': 0.00010262500000000202}, {'diff': 0.00010194399999999965}, {'diff': 0.00010233399999999906}, {'diff': 0.00010261099999999898}, {'diff': 0.00010388899999999937}, {'diff': 0.000102764000000001...</msg>
<status status="PASS" starttime="20201030 11:50:49.252" endtime="20201030 11:50:49.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:49.261" level="INFO">${ACCURACY} = {'diff': [0.00010262500000000202, 0.00010194399999999965, 0.00010233399999999906, 0.00010261099999999898, 0.00010388899999999937, 0.00010276400000000172, 0.00010263900000000159, 0.00010251400000000147...</msg>
<status status="PASS" starttime="20201030 11:50:49.257" endtime="20201030 11:50:49.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:49.266" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201030 11:50:49.264" endtime="20201030 11:50:49.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:49.268" level="INFO">VALUE: [0.00010262500000000202, 0.00010194399999999965, 0.00010233399999999906, 0.00010261099999999898, 0.00010388899999999937, 0.00010276400000000172, 0.00010263900000000159, 0.00010251400000000147, 0.00010272199999999954, 0.00010266699999999726, 0.00010258299999999984, 0.00010234699999999916, 0.00010208299999999934, 0.0001025000000000019, 0.00010230599999999992, 0.00010283399999999956, 0.00010195899999999869, 0.00010244499999999962, 0.00010390299999999894, 0.00010211100000000195, 0.00010208300000000281, 0.00010231900000000002, 0.00010244400000000015, 0.00010274999999999868, 0.00010243000000000058, 0.00010197199999999879, 0.0001023199999999995, 0.00010265299999999769, 0.0001020000000000014, 0.00010384800000000013, 0.0001038619999999997, 0.00010254099999999766, 0.00010277699999999834, 0.0001027359999999991, 0.00010274999999999868, 0.00010279100000000138, 0.00010208299999999934, 0.0001020139999999975, 0.00010233299999999959, 0.00010208399999999881, 0.00010195899999999869, 0.00010229200000000035, 0.00010280600000000042, 0.0001020139999999975, 0.00010230499999999698, 0.00010275000000000215, 0.00010275000000000215, 0.00010251400000000147, 0.00010195799999999922, 0.00010229200000000035]</msg>
<status status="PASS" starttime="20201030 11:50:49.267" endtime="20201030 11:50:49.269"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.262" endtime="20201030 11:50:49.269"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:49.273" endtime="20201030 11:50:49.292"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.272" endtime="20201030 11:50:49.293"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.270" endtime="20201030 11:50:49.293"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.906" endtime="20201030 11:50:49.294"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.905" endtime="20201030 11:50:49.294"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:49.303" endtime="20201030 11:50:49.323"></status>
</kw>
<msg timestamp="20201030 11:50:49.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:49.301" endtime="20201030 11:50:49.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:49.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:49.325" endtime="20201030 11:50:49.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:49.327" endtime="20201030 11:50:49.329"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.299" endtime="20201030 11:50:49.330"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.296" endtime="20201030 11:50:49.330"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:49.337" endtime="20201030 11:50:49.624"></status>
</kw>
<msg timestamp="20201030 11:50:49.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019896069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019999806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:49.335" endtime="20201030 11:50:49.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:49.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019896069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019999806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:49.628" endtime="20201030 11:50:49.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:49.636" endtime="20201030 11:50:49.638"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.333" endtime="20201030 11:50:49.639"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.331" endtime="20201030 11:50:49.639"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:49.643" level="INFO">${RESULT} = [{'diff': 0.00010373699999999958}, {'diff': 0.00010351400000000247}, {'diff': 0.00010331899999999755}, {'diff': 0.00010327700000000231}, {'diff': 0.00010368000000000183}, {'diff': 0.000103152999999998...</msg>
<status status="PASS" starttime="20201030 11:50:49.640" endtime="20201030 11:50:49.643"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:49.647" level="INFO">${ACCURACY} = {'diff': [0.00010373699999999958, 0.00010351400000000247, 0.00010331899999999755, 0.00010327700000000231, 0.00010368000000000183, 0.00010315299999999819, 0.00010488900000000037, 0.00010295800000000022...</msg>
<status status="PASS" starttime="20201030 11:50:49.644" endtime="20201030 11:50:49.647"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:49.652" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201030 11:50:49.651" endtime="20201030 11:50:49.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:49.654" level="INFO">VALUE: [0.00010373699999999958, 0.00010351400000000247, 0.00010331899999999755, 0.00010327700000000231, 0.00010368000000000183, 0.00010315299999999819, 0.00010488900000000037, 0.00010295800000000022, 0.0001031810000000008, 0.00010325000000000265, 0.00010363899999999912, 0.00010309799999999938, 0.00010358400000000031, 0.0001033879999999994, 0.00010302699999999859, 0.00010343100000000105, 0.00010324999999999918, 0.00010343000000000158, 0.00010326399999999875, 0.00010295800000000022, 0.00010329200000000135, 0.00010307000000000024, 0.00010357000000000074, 0.000103513999999999, 0.00010313899999999862, 0.00010483299999999862, 0.00010306900000000077, 0.00010483299999999862, 0.00010327799999999832, 0.0001036940000000014, 0.00010312499999999905, 0.00010295800000000022, 0.00010319500000000037, 0.00010377799999999882, 0.00010380600000000142, 0.00010362499999999955, 0.0001031940000000009, 0.00010295800000000022, 0.00010334700000000016, 0.0001033749999999993, 0.0001035689999999978, 0.0001031940000000009, 0.00010324999999999918, 0.00010344400000000115, 0.0001033200000000005, 0.00010372200000000054, 0.00010330600000000092, 0.00010345900000000019, 0.00010491600000000004, 0.0001030420000000011]</msg>
<status status="PASS" starttime="20201030 11:50:49.653" endtime="20201030 11:50:49.655"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.648" endtime="20201030 11:50:49.656"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:49.659" endtime="20201030 11:50:49.679"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.658" endtime="20201030 11:50:49.679"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.657" endtime="20201030 11:50:49.680"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.295" endtime="20201030 11:50:49.680"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.294" endtime="20201030 11:50:49.680"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:49.689" endtime="20201030 11:50:49.711"></status>
</kw>
<msg timestamp="20201030 11:50:49.712" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:49.687" endtime="20201030 11:50:49.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:49.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:49.713" endtime="20201030 11:50:49.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:49.715" endtime="20201030 11:50:49.717"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.685" endtime="20201030 11:50:49.718"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.683" endtime="20201030 11:50:49.718"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:49.725" endtime="20201030 11:50:50.011"></status>
</kw>
<msg timestamp="20201030 11:50:50.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020907056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021011458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:49.723" endtime="20201030 11:50:50.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:50.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020907056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021011458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:50.015" endtime="20201030 11:50:50.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:50.023" endtime="20201030 11:50:50.025"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.721" endtime="20201030 11:50:50.025"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.719" endtime="20201030 11:50:50.026"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:50.030" level="INFO">${RESULT} = [{'diff': 0.00010440199999999997}, {'diff': 0.00010580500000000048}, {'diff': 0.00010581900000000005}, {'diff': 0.00010445800000000172}, {'diff': 0.00010445800000000172}, {'diff': 0.000104347000000001...</msg>
<status status="PASS" starttime="20201030 11:50:50.026" endtime="20201030 11:50:50.030"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:50.034" level="INFO">${ACCURACY} = {'diff': [0.00010440199999999997, 0.00010580500000000048, 0.00010581900000000005, 0.00010445800000000172, 0.00010445800000000172, 0.00010434700000000116, 0.00010397200000000079, 0.00010586100000000223...</msg>
<status status="PASS" starttime="20201030 11:50:50.031" endtime="20201030 11:50:50.034"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:50.038" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201030 11:50:50.037" endtime="20201030 11:50:50.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:50.041" level="INFO">VALUE: [0.00010440199999999997, 0.00010580500000000048, 0.00010581900000000005, 0.00010445800000000172, 0.00010445800000000172, 0.00010434700000000116, 0.00010397200000000079, 0.00010586100000000223, 0.00010419500000000137, 0.00010420900000000094, 0.00010402799999999907, 0.00010588900000000137, 0.00010465200000000022, 0.0001045689999999988, 0.00010462499999999708, 0.00010577799999999735, 0.00010441699999999901, 0.0001058750000000018, 0.00010584699999999919, 0.00010587499999999833, 0.00010404199999999864, 0.0001043750000000003, 0.00010438899999999987, 0.0001047079999999985, 0.00010409700000000091, 0.00010443000000000258, 0.000104207999999998, 0.00010441700000000248, 0.000104207999999998, 0.00010469399999999893, 0.00010588900000000137, 0.00010413899999999962, 0.00010450000000000043, 0.00010448600000000086, 0.00010457000000000174, 0.00010399999999999993, 0.00010402700000000306, 0.0001058889999999979, 0.00010436100000000073, 0.00010591700000000051, 0.00010398600000000036, 0.0001058750000000018, 0.00010475000000000068, 0.00010470900000000144, 0.00010476400000000025, 0.00010456999999999828, 0.00010413800000000015, 0.00010462500000000055, 0.00010418000000000233, 0.000104514]</msg>
<status status="PASS" starttime="20201030 11:50:50.040" endtime="20201030 11:50:50.043"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.035" endtime="20201030 11:50:50.043"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:50.047" endtime="20201030 11:50:50.066"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.045" endtime="20201030 11:50:50.067"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.044" endtime="20201030 11:50:50.067"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.681" endtime="20201030 11:50:50.067"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.681" endtime="20201030 11:50:50.068"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:50.077" endtime="20201030 11:50:50.097"></status>
</kw>
<msg timestamp="20201030 11:50:50.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:50.075" endtime="20201030 11:50:50.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:50.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:50.098" endtime="20201030 11:50:50.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:50.101" endtime="20201030 11:50:50.103"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.072" endtime="20201030 11:50:50.103"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.070" endtime="20201030 11:50:50.103"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:50.110" endtime="20201030 11:50:50.397"></status>
</kw>
<msg timestamp="20201030 11:50:50.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019986403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020092125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:50.109" endtime="20201030 11:50:50.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:50.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019986403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020092125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:50.401" endtime="20201030 11:50:50.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:50.409" endtime="20201030 11:50:50.411"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.106" endtime="20201030 11:50:50.412"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.104" endtime="20201030 11:50:50.412"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:50.416" level="INFO">${RESULT} = [{'diff': 0.00010572199999999907}, {'diff': 0.0001050689999999993}, {'diff': 0.0001068340000000001}, {'diff': 0.00010502800000000007}, {'diff': 0.00010526400000000075}, {'diff': 0.000105514000000001},...</msg>
<status status="PASS" starttime="20201030 11:50:50.413" endtime="20201030 11:50:50.416"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:50.421" level="INFO">${ACCURACY} = {'diff': [0.00010572199999999907, 0.0001050689999999993, 0.0001068340000000001, 0.00010502800000000007, 0.00010526400000000075, 0.000105514000000001, 0.00010522200000000204, 0.00010538799999999793, 0....</msg>
<status status="PASS" starttime="20201030 11:50:50.417" endtime="20201030 11:50:50.421"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:50.426" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201030 11:50:50.425" endtime="20201030 11:50:50.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:50.428" level="INFO">VALUE: [0.00010572199999999907, 0.0001050689999999993, 0.0001068340000000001, 0.00010502800000000007, 0.00010526400000000075, 0.000105514000000001, 0.00010522200000000204, 0.00010538799999999793, 0.00010515299999999672, 0.0001055279999999971, 0.00010497200000000179, 0.00010690299999999847, 0.00010580599999999996, 0.00010526400000000075, 0.0001068340000000001, 0.00010495900000000169, 0.00010581999999999953, 0.00010683300000000062, 0.000105514000000001, 0.00010515300000000019, 0.00010533299999999912, 0.00010566700000000026, 0.00010572199999999907, 0.00010508299999999887, 0.0001053750000000013, 0.00010558399999999885, 0.00010568000000000036, 0.00010577800000000082, 0.00010579200000000039, 0.00010526300000000127, 0.00010552699999999762, 0.00010576400000000125, 0.00010495800000000222, 0.00010573599999999864, 0.000105514000000001, 0.00010527700000000084, 0.00010584699999999919, 0.000105514000000001, 0.00010500000000000093, 0.00010488900000000037, 0.00010548700000000133, 0.000106901999999999, 0.00010558299999999937, 0.00010677800000000182, 0.00010515300000000019, 0.00010693100000000108, 0.00010686099999999976, 0.0001050140000000005, 0.00010493099999999908, 0.00010554200000000014]</msg>
<status status="PASS" starttime="20201030 11:50:50.427" endtime="20201030 11:50:50.429"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.422" endtime="20201030 11:50:50.430"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:50.433" endtime="20201030 11:50:50.453"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.432" endtime="20201030 11:50:50.453"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.431" endtime="20201030 11:50:50.454"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.069" endtime="20201030 11:50:50.454"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.068" endtime="20201030 11:50:50.454"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:11.816" endtime="20201030 11:50:50.454"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201030 11:50:11.737" endtime="20201030 11:50:50.455" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:50.464" endtime="20201030 11:50:50.484"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.463" endtime="20201030 11:50:50.484"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:50.498" endtime="20201030 11:50:50.520"></status>
</kw>
<msg timestamp="20201030 11:50:50.520" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:50.496" endtime="20201030 11:50:50.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:50.523" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:50.521" endtime="20201030 11:50:50.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:50.526" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:50:50.524" endtime="20201030 11:50:50.526"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:50.494" endtime="20201030 11:50:50.527"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:50.491" endtime="20201030 11:50:50.527"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.490" endtime="20201030 11:50:50.528"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:50:50.532" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:50:50.531" endtime="20201030 11:50:50.532"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.529" endtime="20201030 11:50:50.532"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.489" endtime="20201030 11:50:50.532"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.488" endtime="20201030 11:50:50.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:50.533" endtime="20201030 11:50:50.535"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.487" endtime="20201030 11:50:50.535"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.485" endtime="20201030 11:50:50.536"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.461" endtime="20201030 11:50:50.536"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:50.547" endtime="20201030 11:50:50.564"></status>
</kw>
<msg timestamp="20201030 11:50:50.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:50.545" endtime="20201030 11:50:50.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:50.567" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:50.565" endtime="20201030 11:50:50.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:50.568" endtime="20201030 11:50:50.570"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.542" endtime="20201030 11:50:50.571"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.540" endtime="20201030 11:50:50.571"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:50.578" endtime="20201030 11:50:50.865"></status>
</kw>
<msg timestamp="20201030 11:50:50.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072390097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072421819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:50.576" endtime="20201030 11:50:50.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:50.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072390097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072421819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:50.870" endtime="20201030 11:50:50.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:50.878" endtime="20201030 11:50:50.880"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.574" endtime="20201030 11:50:50.880"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.572" endtime="20201030 11:50:50.881"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:50.885" level="INFO">${RESULT} = [{'diff': 3.172199999999792e-05}, {'diff': 5.611000000002586e-06}, {'diff': 5.597999999995551e-06}, {'diff': 5.639000000001726e-06}, {'diff': 5.111000000002086e-06}, {'diff': 5.583000000003446e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:50:50.881" endtime="20201030 11:50:50.885"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:50.890" level="INFO">${ACCURACY} = {'diff': [3.172199999999792e-05, 5.611000000002586e-06, 5.597999999995551e-06, 5.639000000001726e-06, 5.111000000002086e-06, 5.583000000003446e-06, 5.596999999996077e-06, 5.611000000002586e-06, 5.5969...</msg>
<status status="PASS" starttime="20201030 11:50:50.886" endtime="20201030 11:50:50.890"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:50.895" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201030 11:50:50.894" endtime="20201030 11:50:50.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:50.897" level="INFO">VALUE: [3.172199999999792e-05, 5.611000000002586e-06, 5.597999999995551e-06, 5.639000000001726e-06, 5.111000000002086e-06, 5.583000000003446e-06, 5.596999999996077e-06, 5.611000000002586e-06, 5.596999999996077e-06, 5.596999999996077e-06, 5.596999999996077e-06, 5.096999999995577e-06, 5.597000000009955e-06, 6.097999999996051e-06, 5.597999999995551e-06, 5.096999999995577e-06, 5.624999999995217e-06, 5.597000000009955e-06, 5.597999999995551e-06, 5.570000000010289e-06, 5.596999999996077e-06, 5.611000000002586e-06, 5.610999999988708e-06, 5.653000000008235e-06, 5.042000000010649e-06, 5.611000000002586e-06, 5.083000000002946e-06, 5.111000000002086e-06, 5.083000000002946e-06, 5.111000000002086e-06, 5.597000000009955e-06, 5.611000000002586e-06, 5.611000000002586e-06, 5.597000000009955e-06, 5.611000000002586e-06, 5.611000000002586e-06, 5.58400000000292e-06, 5.596999999996077e-06, 5.110999999988208e-06, 5.639000000001726e-06, 5.152999999993857e-06, 5.069999999995911e-06, 5.569999999996411e-06, 5.583000000003446e-06, 5.0689999999964375e-06, 5.611000000002586e-06, 5.58400000000292e-06, 5.596999999996077e-06, 5.596999999996077e-06, 5.083000000002946e-06]</msg>
<status status="PASS" starttime="20201030 11:50:50.896" endtime="20201030 11:50:50.898"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.891" endtime="20201030 11:50:50.898"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:50.902" endtime="20201030 11:50:50.921"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.900" endtime="20201030 11:50:50.922"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.899" endtime="20201030 11:50:50.922"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.539" endtime="20201030 11:50:50.923"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.538" endtime="20201030 11:50:50.923"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:50.932" endtime="20201030 11:50:50.950"></status>
</kw>
<msg timestamp="20201030 11:50:50.951" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:50.930" endtime="20201030 11:50:50.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:50.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:50.952" endtime="20201030 11:50:50.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:50.954" endtime="20201030 11:50:50.956"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.927" endtime="20201030 11:50:50.957"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.925" endtime="20201030 11:50:50.957"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:50.964" endtime="20201030 11:50:51.253"></status>
</kw>
<msg timestamp="20201030 11:50:51.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020512, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020526819, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:50:50.962" endtime="20201030 11:50:51.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:51.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020512, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020526819, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:50:51.257" endtime="20201030 11:50:51.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:51.265" endtime="20201030 11:50:51.267"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.959" endtime="20201030 11:50:51.268"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.958" endtime="20201030 11:50:51.268"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:51.272" level="INFO">${RESULT} = [{'diff': 1.4819000000002719e-05}, {'diff': 6.0979999999995205e-06}, {'diff': 6.584000000000451e-06}, {'diff': 6.583000000000977e-06}, {'diff': 6.597000000000547e-06}, {'diff': 6.597000000000547e-06},...</msg>
<status status="PASS" starttime="20201030 11:50:51.269" endtime="20201030 11:50:51.272"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:51.276" level="INFO">${ACCURACY} = {'diff': [1.4819000000002719e-05, 6.0979999999995205e-06, 6.584000000000451e-06, 6.583000000000977e-06, 6.597000000000547e-06, 6.597000000000547e-06, 6.542000000001741e-06, 7.125000000000187e-06, 6.59...</msg>
<status status="PASS" starttime="20201030 11:50:51.273" endtime="20201030 11:50:51.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:51.281" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201030 11:50:51.280" endtime="20201030 11:50:51.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:51.283" level="INFO">VALUE: [1.4819000000002719e-05, 6.0979999999995205e-06, 6.584000000000451e-06, 6.583000000000977e-06, 6.597000000000547e-06, 6.597000000000547e-06, 6.542000000001741e-06, 7.125000000000187e-06, 6.5980000000000205e-06, 6.597000000000547e-06, 6.097000000000047e-06, 6.584000000000451e-06, 6.681000000001436e-06, 6.097000000000047e-06, 6.597000000000547e-06, 6.597000000000547e-06, 6.097000000000047e-06, 6.042000000001241e-06, 6.124999999999187e-06, 6.083000000000477e-06, 6.597000000000547e-06, 6.097000000000047e-06, 6.0839999999999506e-06, 6.6119999999995904e-06, 6.584000000000451e-06, 6.570000000000881e-06, 6.611000000000117e-06, 6.597000000000547e-06, 6.611000000000117e-06, 6.584000000000451e-06, 7.097000000001047e-06, 6.611000000000117e-06, 6.5969999999970774e-06, 6.097000000000047e-06, 6.6119999999995904e-06, 6.611000000000117e-06, 6.097000000000047e-06, 6.597000000000547e-06, 6.097000000000047e-06, 6.555999999997841e-06, 6.584000000000451e-06, 6.637999999999783e-06, 6.597000000000547e-06, 6.0829999999970075e-06, 6.11199999999909e-06, 6.0979999999995205e-06, 6.597000000000547e-06, 6.083000000000477e-06, 6.583000000000977e-06, 6.153000000001796e-06]</msg>
<status status="PASS" starttime="20201030 11:50:51.282" endtime="20201030 11:50:51.284"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.277" endtime="20201030 11:50:51.284"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:51.288" endtime="20201030 11:50:51.307"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.287" endtime="20201030 11:50:51.308"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.285" endtime="20201030 11:50:51.308"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.924" endtime="20201030 11:50:51.309"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.923" endtime="20201030 11:50:51.309"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:51.319" endtime="20201030 11:50:51.337"></status>
</kw>
<msg timestamp="20201030 11:50:51.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:51.318" endtime="20201030 11:50:51.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:51.340" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:51.338" endtime="20201030 11:50:51.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:51.341" endtime="20201030 11:50:51.343"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.314" endtime="20201030 11:50:51.343"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.312" endtime="20201030 11:50:51.344"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:51.350" endtime="20201030 11:50:51.634"></status>
</kw>
<msg timestamp="20201030 11:50:51.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021609417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021625736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:51.349" endtime="20201030 11:50:51.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:51.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021609417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021625736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:51.638" endtime="20201030 11:50:51.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:51.646" endtime="20201030 11:50:51.648"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.346" endtime="20201030 11:50:51.648"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.344" endtime="20201030 11:50:51.649"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:51.653" level="INFO">${RESULT} = [{'diff': 1.631900000000075e-05}, {'diff': 7.583999999997981e-06}, {'diff': 7.597000000001547e-06}, {'diff': 7.598000000001021e-06}, {'diff': 7.0980000000005206e-06}, {'diff': 7.055999999998341e-06}, ...</msg>
<status status="PASS" starttime="20201030 11:50:51.650" endtime="20201030 11:50:51.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:51.657" level="INFO">${ACCURACY} = {'diff': [1.631900000000075e-05, 7.583999999997981e-06, 7.597000000001547e-06, 7.598000000001021e-06, 7.0980000000005206e-06, 7.055999999998341e-06, 7.111000000000617e-06, 7.0969999999975775e-06, 7.61...</msg>
<status status="PASS" starttime="20201030 11:50:51.654" endtime="20201030 11:50:51.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:51.666" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201030 11:50:51.661" endtime="20201030 11:50:51.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:51.669" level="INFO">VALUE: [1.631900000000075e-05, 7.583999999997981e-06, 7.597000000001547e-06, 7.598000000001021e-06, 7.0980000000005206e-06, 7.055999999998341e-06, 7.111000000000617e-06, 7.0969999999975775e-06, 7.611000000001117e-06, 7.611000000001117e-06, 7.611000000001117e-06, 7.597000000001547e-06, 7.125000000000187e-06, 8.096999999998578e-06, 7.583999999997981e-06, 7.6109999999976474e-06, 7.097999999997051e-06, 8.096999999998578e-06, 7.6109999999976474e-06, 7.0969999999975775e-06, 8.097999999998051e-06, 7.625000000000687e-06, 7.111000000000617e-06, 7.111000000000617e-06, 7.0969999999975775e-06, 7.569000000002407e-06, 7.582999999998508e-06, 7.5969999999980775e-06, 7.584000000001451e-06, 7.624999999997217e-06, 7.597000000001547e-06, 7.125000000000187e-06, 7.597000000001547e-06, 7.083000000001477e-06, 7.0969999999975775e-06, 7.111000000000617e-06, 7.0829999999980076e-06, 7.040999999999298e-06, 7.598000000001021e-06, 7.084000000000951e-06, 7.568999999998938e-06, 7.0969999999975775e-06, 7.097000000001047e-06, 7.597999999997551e-06, 7.125000000000187e-06, 7.583000000001977e-06, 7.069000000001907e-06, 7.6109999999976474e-06, 7.569999999998411e-06, 7.6109999999976474e-06]</msg>
<status status="PASS" starttime="20201030 11:50:51.667" endtime="20201030 11:50:51.669"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.658" endtime="20201030 11:50:51.670"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:51.673" endtime="20201030 11:50:51.693"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.672" endtime="20201030 11:50:51.694"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.670" endtime="20201030 11:50:51.694"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.310" endtime="20201030 11:50:51.694"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.309" endtime="20201030 11:50:51.694"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:51.703" endtime="20201030 11:50:51.721"></status>
</kw>
<msg timestamp="20201030 11:50:51.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:51.702" endtime="20201030 11:50:51.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:51.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:51.722" endtime="20201030 11:50:51.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:51.725" endtime="20201030 11:50:51.726"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.699" endtime="20201030 11:50:51.727"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.697" endtime="20201030 11:50:51.727"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:51.734" endtime="20201030 11:50:52.018"></status>
</kw>
<msg timestamp="20201030 11:50:52.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020004278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020021111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:51.733" endtime="20201030 11:50:52.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:52.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020004278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020021111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:52.022" endtime="20201030 11:50:52.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:52.030" endtime="20201030 11:50:52.032"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.730" endtime="20201030 11:50:52.033"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.728" endtime="20201030 11:50:52.033"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:52.037" level="INFO">${RESULT} = [{'diff': 1.683300000000082e-05}, {'diff': 8.014000000000632e-06}, {'diff': 8.597000000002547e-06}, {'diff': 8.082999999999008e-06}, {'diff': 8.111000000001617e-06}, {'diff': 8.596999999999078e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:50:52.034" endtime="20201030 11:50:52.037"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:52.042" level="INFO">${ACCURACY} = {'diff': [1.683300000000082e-05, 8.014000000000632e-06, 8.597000000002547e-06, 8.082999999999008e-06, 8.111000000001617e-06, 8.596999999999078e-06, 8.611000000002117e-06, 8.08400000000195e-06, 8.59699...</msg>
<status status="PASS" starttime="20201030 11:50:52.038" endtime="20201030 11:50:52.043"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:52.047" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201030 11:50:52.046" endtime="20201030 11:50:52.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:52.050" level="INFO">VALUE: [1.683300000000082e-05, 8.014000000000632e-06, 8.597000000002547e-06, 8.082999999999008e-06, 8.111000000001617e-06, 8.596999999999078e-06, 8.611000000002117e-06, 8.08400000000195e-06, 8.596999999999078e-06, 8.110999999998147e-06, 8.097999999998051e-06, 8.610999999998648e-06, 8.596999999999078e-06, 8.096999999998578e-06, 8.625000000001687e-06, 8.611000000002117e-06, 8.097999999998051e-06, 8.110999999998147e-06, 8.096999999998578e-06, 8.596999999999078e-06, 8.610999999998648e-06, 8.111000000001617e-06, 8.555999999999842e-06, 9.083000000000008e-06, 8.611000000002117e-06, 8.597000000002547e-06, 8.041999999999772e-06, 8.610999999998648e-06, 8.082999999999008e-06, 9.096999999999578e-06, 8.096999999998578e-06, 8.610999999998648e-06, 8.596999999999078e-06, 8.596999999999078e-06, 8.611000000002117e-06, 8.596999999999078e-06, 8.611000000002117e-06, 8.568999999999938e-06, 8.597999999998551e-06, 8.582999999999508e-06, 8.110999999998147e-06, 8.555000000000368e-06, 8.096999999998578e-06, 8.097999999998051e-06, 8.028000000000202e-06, 8.610999999998648e-06, 8.096999999998578e-06, 8.097000000002047e-06, 8.610999999998648e-06, 8.583000000002977e-06]</msg>
<status status="PASS" starttime="20201030 11:50:52.048" endtime="20201030 11:50:52.050"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.043" endtime="20201030 11:50:52.051"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:52.055" endtime="20201030 11:50:52.074"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.053" endtime="20201030 11:50:52.075"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.052" endtime="20201030 11:50:52.075"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.695" endtime="20201030 11:50:52.075"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.695" endtime="20201030 11:50:52.075"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:52.084" endtime="20201030 11:50:52.102"></status>
</kw>
<msg timestamp="20201030 11:50:52.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:52.083" endtime="20201030 11:50:52.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:52.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:52.104" endtime="20201030 11:50:52.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:52.106" endtime="20201030 11:50:52.108"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.080" endtime="20201030 11:50:52.109"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.078" endtime="20201030 11:50:52.109"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:52.116" endtime="20201030 11:50:52.401"></status>
</kw>
<msg timestamp="20201030 11:50:52.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020063944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020082222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:52.114" endtime="20201030 11:50:52.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:52.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020063944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020082222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:52.406" endtime="20201030 11:50:52.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:52.414" endtime="20201030 11:50:52.416"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.111" endtime="20201030 11:50:52.416"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.110" endtime="20201030 11:50:52.417"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:52.421" level="INFO">${RESULT} = [{'diff': 1.8278000000000044e-05}, {'diff': 9.110999999999148e-06}, {'diff': 9.610999999999648e-06}, {'diff': 9.597000000000078e-06}, {'diff': 9.110999999999148e-06}, {'diff': 9.124999999998717e-06}, ...</msg>
<status status="PASS" starttime="20201030 11:50:52.417" endtime="20201030 11:50:52.421"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:52.425" level="INFO">${ACCURACY} = {'diff': [1.8278000000000044e-05, 9.110999999999148e-06, 9.610999999999648e-06, 9.597000000000078e-06, 9.110999999999148e-06, 9.124999999998717e-06, 1.0111000000000148e-05, 9.096999999999578e-06, 9.02...</msg>
<status status="PASS" starttime="20201030 11:50:52.422" endtime="20201030 11:50:52.425"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:52.430" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201030 11:50:52.428" endtime="20201030 11:50:52.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:52.432" level="INFO">VALUE: [1.8278000000000044e-05, 9.110999999999148e-06, 9.610999999999648e-06, 9.597000000000078e-06, 9.110999999999148e-06, 9.124999999998717e-06, 1.0111000000000148e-05, 9.096999999999578e-06, 9.027999999997732e-06, 9.61200000000259e-06, 9.610999999999648e-06, 9.096999999999578e-06, 1.0097000000000578e-05, 9.568999999997468e-06, 9.110999999999148e-06, 9.597000000000078e-06, 9.014000000001632e-06, 9.597000000000078e-06, 9.610999999999648e-06, 1.0042000000001772e-05, 9.111999999998621e-06, 9.097000000003047e-06, 9.097999999999051e-06, 9.110999999999148e-06, 9.138999999998287e-06, 9.110999999999148e-06, 9.611999999999121e-06, 9.583999999999981e-06, 9.541999999997802e-06, 9.597000000000078e-06, 9.110999999999148e-06, 9.096999999999578e-06, 9.597999999999551e-06, 9.096999999999578e-06, 9.083000000000008e-06, 9.096999999999578e-06, 1.0097000000000578e-05, 9.083999999999481e-06, 9.637999999999314e-06, 9.624999999999218e-06, 9.638999999998787e-06, 9.597000000000078e-06, 9.597000000000078e-06, 1.0098000000000051e-05, 9.083000000000008e-06, 9.097000000003047e-06, 9.096999999999578e-06, 9.083000000000008e-06, 9.097999999999051e-06, 9.096999999999578e-06]</msg>
<status status="PASS" starttime="20201030 11:50:52.431" endtime="20201030 11:50:52.433"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.426" endtime="20201030 11:50:52.434"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:52.437" endtime="20201030 11:50:52.457"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.436" endtime="20201030 11:50:52.457"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.435" endtime="20201030 11:50:52.457"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.076" endtime="20201030 11:50:52.458"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.076" endtime="20201030 11:50:52.458"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:52.467" endtime="20201030 11:50:52.486"></status>
</kw>
<msg timestamp="20201030 11:50:52.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:52.465" endtime="20201030 11:50:52.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:52.489" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:52.488" endtime="20201030 11:50:52.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:52.490" endtime="20201030 11:50:52.492"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.463" endtime="20201030 11:50:52.493"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.461" endtime="20201030 11:50:52.493"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:52.500" endtime="20201030 11:50:52.786"></status>
</kw>
<msg timestamp="20201030 11:50:52.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02107875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021097569, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:52.498" endtime="20201030 11:50:52.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:52.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02107875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021097569, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:52.790" endtime="20201030 11:50:52.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:52.799" endtime="20201030 11:50:52.800"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.496" endtime="20201030 11:50:52.801"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.494" endtime="20201030 11:50:52.801"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:52.805" level="INFO">${RESULT} = [{'diff': 1.881899999999978e-05}, {'diff': 1.0598000000000551e-05}, {'diff': 1.0638999999999788e-05}, {'diff': 1.0097000000000578e-05}, {'diff': 1.0666999999998927e-05}, {'diff': 1.1068999999998969e-0...</msg>
<status status="PASS" starttime="20201030 11:50:52.802" endtime="20201030 11:50:52.806"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:52.810" level="INFO">${ACCURACY} = {'diff': [1.881899999999978e-05, 1.0598000000000551e-05, 1.0638999999999788e-05, 1.0097000000000578e-05, 1.0666999999998927e-05, 1.1068999999998969e-05, 1.0611000000000648e-05, 1.0652999999999357e-05,...</msg>
<status status="PASS" starttime="20201030 11:50:52.806" endtime="20201030 11:50:52.810"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:52.814" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201030 11:50:52.813" endtime="20201030 11:50:52.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:52.817" level="INFO">VALUE: [1.881899999999978e-05, 1.0598000000000551e-05, 1.0638999999999788e-05, 1.0097000000000578e-05, 1.0666999999998927e-05, 1.1068999999998969e-05, 1.0611000000000648e-05, 1.0652999999999357e-05, 1.0596999999997608e-05, 1.0569999999997942e-05, 1.0582999999998038e-05, 1.0598000000000551e-05, 1.0097000000000578e-05, 1.0096999999997108e-05, 1.0611000000000648e-05, 1.1082999999998538e-05, 1.0097000000000578e-05, 1.0625000000000218e-05, 1.0583999999997512e-05, 1.0597000000001078e-05, 1.0096999999997108e-05, 1.1096999999998108e-05, 1.0097000000000578e-05, 1.0084000000000481e-05, 1.0111000000000148e-05, 1.0069000000001438e-05, 1.0596999999997608e-05, 1.0611000000000648e-05, 1.0068999999997968e-05, 1.0612000000000121e-05, 1.0111000000000148e-05, 1.0598000000000551e-05, 1.1179999999999524e-05, 1.0597000000001078e-05, 1.0083000000001008e-05, 1.0570000000001412e-05, 1.0582999999998038e-05, 1.0083000000001008e-05, 1.0111000000000148e-05, 1.0598000000000551e-05, 1.0597000000001078e-05, 1.0597000000001078e-05, 1.0084000000000481e-05, 1.0568999999998469e-05, 1.0097000000000578e-05, 1.0652999999999357e-05, 1.0096999999997108e-05, 1.0666999999998927e-05, 1.0027999999998732e-05, 1.0596999999997608e-05]</msg>
<status status="PASS" starttime="20201030 11:50:52.815" endtime="20201030 11:50:52.818"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.810" endtime="20201030 11:50:52.819"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:52.823" endtime="20201030 11:50:52.842"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.821" endtime="20201030 11:50:52.843"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.820" endtime="20201030 11:50:52.843"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.459" endtime="20201030 11:50:52.843"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.458" endtime="20201030 11:50:52.844"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:52.852" endtime="20201030 11:50:52.870"></status>
</kw>
<msg timestamp="20201030 11:50:52.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:52.851" endtime="20201030 11:50:52.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:52.873" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:52.872" endtime="20201030 11:50:52.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:52.874" endtime="20201030 11:50:52.876"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.848" endtime="20201030 11:50:52.877"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.846" endtime="20201030 11:50:52.877"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:52.884" endtime="20201030 11:50:53.169"></status>
</kw>
<msg timestamp="20201030 11:50:53.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019947861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019967694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:52.882" endtime="20201030 11:50:53.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:53.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019947861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019967694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:53.174" endtime="20201030 11:50:53.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:53.182" endtime="20201030 11:50:53.184"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.880" endtime="20201030 11:50:53.184"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.878" endtime="20201030 11:50:53.185"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:53.189" level="INFO">${RESULT} = [{'diff': 1.983300000000035e-05}, {'diff': 1.1625000000001218e-05}, {'diff': 1.1069000000002438e-05}, {'diff': 1.1097999999997582e-05}, {'diff': 1.1111000000001148e-05}, {'diff': 1.1610999999998178e-0...</msg>
<status status="PASS" starttime="20201030 11:50:53.185" endtime="20201030 11:50:53.189"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:53.194" level="INFO">${ACCURACY} = {'diff': [1.983300000000035e-05, 1.1625000000001218e-05, 1.1069000000002438e-05, 1.1097999999997582e-05, 1.1111000000001148e-05, 1.1610999999998178e-05, 1.1111000000001148e-05, 1.1598000000001552e-05,...</msg>
<status status="PASS" starttime="20201030 11:50:53.190" endtime="20201030 11:50:53.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:53.199" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201030 11:50:53.198" endtime="20201030 11:50:53.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:53.201" level="INFO">VALUE: [1.983300000000035e-05, 1.1625000000001218e-05, 1.1069000000002438e-05, 1.1097999999997582e-05, 1.1111000000001148e-05, 1.1610999999998178e-05, 1.1111000000001148e-05, 1.1598000000001552e-05, 1.1098000000001051e-05, 1.1569999999998942e-05, 1.1597000000002078e-05, 1.1096999999998108e-05, 1.1555999999999372e-05, 1.1110999999997678e-05, 1.1083999999998012e-05, 1.1541999999999802e-05, 1.1611000000001648e-05, 1.1582999999999039e-05, 1.1611000000001648e-05, 1.1097000000001578e-05, 1.1082999999998538e-05, 1.1082999999998538e-05, 1.1082999999998538e-05, 1.1596999999998608e-05, 1.1083000000002008e-05, 1.1098000000001051e-05, 1.1096999999998108e-05, 1.1125000000000718e-05, 1.1111000000001148e-05, 1.1583000000002508e-05, 1.1111000000001148e-05, 1.1596999999998608e-05, 1.2028000000000733e-05, 1.2082999999999539e-05, 1.1597000000002078e-05, 1.1111000000001148e-05, 1.1582999999999039e-05, 1.1097000000001578e-05, 1.2110999999998678e-05, 1.1097000000001578e-05, 1.1096999999998108e-05, 1.1624999999997748e-05, 1.1583999999998512e-05, 1.1639000000000788e-05, 1.1596999999998608e-05, 1.1055999999998872e-05, 1.1097999999997582e-05, 1.1596999999998608e-05, 1.1597000000002078e-05, 1.1125000000000718e-05]</msg>
<status status="PASS" starttime="20201030 11:50:53.200" endtime="20201030 11:50:53.202"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.195" endtime="20201030 11:50:53.203"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:53.206" endtime="20201030 11:50:53.226"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.205" endtime="20201030 11:50:53.226"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.204" endtime="20201030 11:50:53.227"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.844" endtime="20201030 11:50:53.227"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.844" endtime="20201030 11:50:53.227"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:53.236" endtime="20201030 11:50:53.254"></status>
</kw>
<msg timestamp="20201030 11:50:53.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:53.234" endtime="20201030 11:50:53.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:53.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:53.256" endtime="20201030 11:50:53.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:53.258" endtime="20201030 11:50:53.260"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.232" endtime="20201030 11:50:53.261"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.230" endtime="20201030 11:50:53.261"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:53.268" endtime="20201030 11:50:53.553"></status>
</kw>
<msg timestamp="20201030 11:50:53.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019969278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019990597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:53.266" endtime="20201030 11:50:53.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:53.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019969278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019990597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:53.557" endtime="20201030 11:50:53.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:53.566" endtime="20201030 11:50:53.567"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.263" endtime="20201030 11:50:53.568"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.262" endtime="20201030 11:50:53.569"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:53.573" level="INFO">${RESULT} = [{'diff': 2.131899999999881e-05}, {'diff': 1.2096999999999108e-05}, {'diff': 1.2556000000000372e-05}, {'diff': 1.2610999999999178e-05}, {'diff': 1.2596999999999609e-05}, {'diff': 1.2083000000003008e-0...</msg>
<status status="PASS" starttime="20201030 11:50:53.569" endtime="20201030 11:50:53.573"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:53.577" level="INFO">${ACCURACY} = {'diff': [2.131899999999881e-05, 1.2096999999999108e-05, 1.2556000000000372e-05, 1.2610999999999178e-05, 1.2596999999999609e-05, 1.2083000000003008e-05, 1.2653000000001358e-05, 1.2596999999999609e-05,...</msg>
<status status="PASS" starttime="20201030 11:50:53.574" endtime="20201030 11:50:53.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:53.582" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201030 11:50:53.580" endtime="20201030 11:50:53.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:53.584" level="INFO">VALUE: [2.131899999999881e-05, 1.2096999999999108e-05, 1.2556000000000372e-05, 1.2610999999999178e-05, 1.2596999999999609e-05, 1.2083000000003008e-05, 1.2653000000001358e-05, 1.2596999999999609e-05, 1.2653000000001358e-05, 1.2596999999999609e-05, 1.2098000000002052e-05, 1.2083000000003008e-05, 1.2639000000001788e-05, 1.2082999999999539e-05, 1.2096999999999108e-05, 1.2597000000003078e-05, 1.2624999999998748e-05, 1.2111000000002148e-05, 1.2597999999999082e-05, 1.2583000000000039e-05, 1.2082999999999539e-05, 1.2096999999999108e-05, 1.2096999999999108e-05, 1.2597000000003078e-05, 1.2583000000000039e-05, 1.2610999999999178e-05, 1.2082999999999539e-05, 1.202699999999779e-05, 1.2097999999998582e-05, 1.2596999999999609e-05, 1.2153000000000858e-05, 1.2569000000000469e-05, 1.2596999999999609e-05, 1.2583000000000039e-05, 1.2610999999999178e-05, 1.3110999999999678e-05, 1.2110999999998678e-05, 1.2596999999999609e-05, 1.2596999999999609e-05, 1.2611999999998652e-05, 1.2097000000002578e-05, 1.2610999999999178e-05, 1.2583000000000039e-05, 1.2096999999999108e-05, 1.2097999999998582e-05, 1.2596999999999609e-05, 1.2096999999999108e-05, 1.2596999999999609e-05, 1.2110999999998678e-05, 1.2597000000003078e-05]</msg>
<status status="PASS" starttime="20201030 11:50:53.583" endtime="20201030 11:50:53.591"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.578" endtime="20201030 11:50:53.592"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:53.596" endtime="20201030 11:50:53.615"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.594" endtime="20201030 11:50:53.616"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.593" endtime="20201030 11:50:53.616"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.228" endtime="20201030 11:50:53.616"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.227" endtime="20201030 11:50:53.616"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:53.625" endtime="20201030 11:50:53.644"></status>
</kw>
<msg timestamp="20201030 11:50:53.645" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:53.624" endtime="20201030 11:50:53.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:53.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:53.646" endtime="20201030 11:50:53.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:53.649" endtime="20201030 11:50:53.650"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.621" endtime="20201030 11:50:53.651"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.619" endtime="20201030 11:50:53.651"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:53.658" endtime="20201030 11:50:53.944"></status>
</kw>
<msg timestamp="20201030 11:50:53.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021106403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021128236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:53.656" endtime="20201030 11:50:53.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:53.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021106403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021128236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:53.948" endtime="20201030 11:50:53.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:53.956" endtime="20201030 11:50:53.958"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.654" endtime="20201030 11:50:53.959"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.652" endtime="20201030 11:50:53.959"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:53.963" level="INFO">${RESULT} = [{'diff': 2.183300000000235e-05}, {'diff': 1.3625000000003218e-05}, {'diff': 1.3611000000000179e-05}, {'diff': 1.3138999999998818e-05}, {'diff': 1.3583000000001039e-05}, {'diff': 1.3165999999998484e-0...</msg>
<status status="PASS" starttime="20201030 11:50:53.960" endtime="20201030 11:50:53.964"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:53.968" level="INFO">${ACCURACY} = {'diff': [2.183300000000235e-05, 1.3625000000003218e-05, 1.3611000000000179e-05, 1.3138999999998818e-05, 1.3583000000001039e-05, 1.3165999999998484e-05, 1.3084000000000012e-05, 1.3084000000000012e-05,...</msg>
<status status="PASS" starttime="20201030 11:50:53.964" endtime="20201030 11:50:53.968"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:53.972" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201030 11:50:53.971" endtime="20201030 11:50:53.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:53.975" level="INFO">VALUE: [2.183300000000235e-05, 1.3625000000003218e-05, 1.3611000000000179e-05, 1.3138999999998818e-05, 1.3583000000001039e-05, 1.3165999999998484e-05, 1.3084000000000012e-05, 1.3084000000000012e-05, 1.3584000000000512e-05, 1.4125000000000248e-05, 1.3597000000000609e-05, 1.3110999999999678e-05, 1.3083000000000539e-05, 1.3583000000001039e-05, 1.3083000000000539e-05, 1.3083000000000539e-05, 1.3097000000000109e-05, 1.4112000000000152e-05, 1.3528000000002233e-05, 1.3637999999999845e-05, 1.3097000000000109e-05, 1.3110999999999678e-05, 1.3597000000000609e-05, 1.3069000000000969e-05, 1.3611000000000179e-05, 1.3611000000000179e-05, 1.3596999999997139e-05, 1.3083000000000539e-05, 1.3584000000000512e-05, 1.3597000000000609e-05, 1.3611000000000179e-05, 1.3097000000000109e-05, 1.3097000000000109e-05, 1.3110999999999678e-05, 1.3569000000001469e-05, 1.3598000000000082e-05, 1.3097999999999582e-05, 1.3597000000000609e-05, 1.3083000000000539e-05, 1.3583000000001039e-05, 1.3556000000001373e-05, 1.3542000000001803e-05, 1.3611000000000179e-05, 1.3110999999999678e-05, 1.3597000000000609e-05, 1.3611000000000179e-05, 1.3597000000000609e-05, 1.409699999999764e-05, 1.3583000000001039e-05, 1.3597000000000609e-05]</msg>
<status status="PASS" starttime="20201030 11:50:53.973" endtime="20201030 11:50:53.977"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.968" endtime="20201030 11:50:53.977"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:53.981" endtime="20201030 11:50:54.000"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.979" endtime="20201030 11:50:54.001"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.978" endtime="20201030 11:50:54.001"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.617" endtime="20201030 11:50:54.002"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.617" endtime="20201030 11:50:54.002"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:54.011" endtime="20201030 11:50:54.029"></status>
</kw>
<msg timestamp="20201030 11:50:54.029" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:54.009" endtime="20201030 11:50:54.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:54.032" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:54.030" endtime="20201030 11:50:54.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:54.033" endtime="20201030 11:50:54.035"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.006" endtime="20201030 11:50:54.035"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.004" endtime="20201030 11:50:54.036"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:54.043" endtime="20201030 11:50:54.332"></status>
</kw>
<msg timestamp="20201030 11:50:54.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020203861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020226681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:54.042" endtime="20201030 11:50:54.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:54.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020203861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020226681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:54.336" endtime="20201030 11:50:54.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:54.344" endtime="20201030 11:50:54.346"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.039" endtime="20201030 11:50:54.346"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.037" endtime="20201030 11:50:54.347"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:54.351" level="INFO">${RESULT} = [{'diff': 2.2819999999999785e-05}, {'diff': 1.4098000000000582e-05}, {'diff': 1.4584000000001512e-05}, {'diff': 1.4584000000001512e-05}, {'diff': 1.4597000000001609e-05}, {'diff': 1.4125000000000248e-...</msg>
<status status="PASS" starttime="20201030 11:50:54.348" endtime="20201030 11:50:54.351"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:54.356" level="INFO">${ACCURACY} = {'diff': [2.2819999999999785e-05, 1.4098000000000582e-05, 1.4584000000001512e-05, 1.4584000000001512e-05, 1.4597000000001609e-05, 1.4125000000000248e-05, 1.4098000000000582e-05, 1.4612000000000652e-05...</msg>
<status status="PASS" starttime="20201030 11:50:54.352" endtime="20201030 11:50:54.356"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:54.361" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201030 11:50:54.360" endtime="20201030 11:50:54.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:54.363" level="INFO">VALUE: [2.2819999999999785e-05, 1.4098000000000582e-05, 1.4584000000001512e-05, 1.4584000000001512e-05, 1.4597000000001609e-05, 1.4125000000000248e-05, 1.4098000000000582e-05, 1.4612000000000652e-05, 1.4583000000002039e-05, 1.458299999999857e-05, 1.4125000000000248e-05, 1.4597000000001609e-05, 1.4097000000001109e-05, 1.4597000000001609e-05, 1.5111000000001679e-05, 1.459699999999814e-05, 1.461099999999771e-05, 1.4083000000001539e-05, 1.4597000000001609e-05, 1.4028000000002733e-05, 1.461099999999771e-05, 1.4083000000001539e-05, 1.4097000000001109e-05, 1.4611000000001179e-05, 1.4111000000000679e-05, 1.4084000000001012e-05, 1.4083999999997543e-05, 1.408299999999807e-05, 1.4597000000001609e-05, 1.4138999999999818e-05, 1.408299999999807e-05, 1.4597000000001609e-05, 1.4611000000001179e-05, 1.4568999999999e-05, 1.4611000000001179e-05, 1.4111000000000679e-05, 1.4597000000001609e-05, 1.4097000000001109e-05, 1.4597000000001609e-05, 1.4083000000001539e-05, 1.4597000000001609e-05, 1.4098000000000582e-05, 1.4097000000001109e-05, 1.4597000000001609e-05, 1.4625000000000749e-05, 1.509699999999864e-05, 1.4083000000001539e-05, 1.4666999999999458e-05, 1.4598000000001082e-05, 1.40689999999985e-05]</msg>
<status status="PASS" starttime="20201030 11:50:54.362" endtime="20201030 11:50:54.364"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.357" endtime="20201030 11:50:54.365"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:54.369" endtime="20201030 11:50:54.389"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.367" endtime="20201030 11:50:54.389"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.366" endtime="20201030 11:50:54.390"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.003" endtime="20201030 11:50:54.390"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.002" endtime="20201030 11:50:54.390"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:54.399" endtime="20201030 11:50:54.416"></status>
</kw>
<msg timestamp="20201030 11:50:54.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:54.397" endtime="20201030 11:50:54.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:54.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:54.418" endtime="20201030 11:50:54.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:54.420" endtime="20201030 11:50:54.422"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.395" endtime="20201030 11:50:54.423"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.393" endtime="20201030 11:50:54.423"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:54.430" endtime="20201030 11:50:54.716"></status>
</kw>
<msg timestamp="20201030 11:50:54.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020682319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020706139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:54.428" endtime="20201030 11:50:54.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:54.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020682319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020706139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:54.721" endtime="20201030 11:50:54.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:54.729" endtime="20201030 11:50:54.731"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.425" endtime="20201030 11:50:54.732"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.424" endtime="20201030 11:50:54.732"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:54.736" level="INFO">${RESULT} = [{'diff': 2.3819999999997316e-05}, {'diff': 1.5097000000002109e-05}, {'diff': 1.5125000000001249e-05}, {'diff': 1.5611999999998183e-05}, {'diff': 1.562500000000175e-05}, {'diff': 1.559700000000261e-05...</msg>
<status status="PASS" starttime="20201030 11:50:54.733" endtime="20201030 11:50:54.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:54.740" level="INFO">${ACCURACY} = {'diff': [2.3819999999997316e-05, 1.5097000000002109e-05, 1.5125000000001249e-05, 1.5611999999998183e-05, 1.562500000000175e-05, 1.559700000000261e-05, 1.511099999999821e-05, 1.509699999999864e-05, 1....</msg>
<status status="PASS" starttime="20201030 11:50:54.737" endtime="20201030 11:50:54.741"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:54.745" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201030 11:50:54.744" endtime="20201030 11:50:54.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:54.747" level="INFO">VALUE: [2.3819999999997316e-05, 1.5097000000002109e-05, 1.5125000000001249e-05, 1.5611999999998183e-05, 1.562500000000175e-05, 1.559700000000261e-05, 1.511099999999821e-05, 1.509699999999864e-05, 1.5097999999998113e-05, 1.5124999999997779e-05, 1.5084000000002012e-05, 1.559700000000261e-05, 1.561099999999871e-05, 1.509699999999864e-05, 1.5569999999999473e-05, 1.559699999999914e-05, 1.561100000000218e-05, 1.559699999999914e-05, 1.559699999999914e-05, 1.559699999999914e-05, 1.5112000000001152e-05, 1.5597999999998613e-05, 1.5111000000001679e-05, 1.509699999999864e-05, 1.565300000000089e-05, 1.5583999999999043e-05, 1.5569999999999473e-05, 1.559700000000261e-05, 1.5069999999998973e-05, 1.608300000000007e-05, 1.608300000000007e-05, 1.5083999999998543e-05, 1.565300000000089e-05, 1.562500000000175e-05, 1.559700000000261e-05, 1.561099999999871e-05, 1.561099999999871e-05, 1.5098000000001582e-05, 1.6111999999998683e-05, 1.50689999999995e-05, 1.5056000000002873e-05, 1.5125000000001249e-05, 1.559699999999914e-05, 1.558299999999957e-05, 1.561099999999871e-05, 1.609700000000311e-05, 1.559699999999914e-05, 1.5111000000001679e-05, 1.511099999999821e-05, 1.558300000000304e-05]</msg>
<status status="PASS" starttime="20201030 11:50:54.746" endtime="20201030 11:50:54.748"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.741" endtime="20201030 11:50:54.749"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:54.753" endtime="20201030 11:50:54.772"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.751" endtime="20201030 11:50:54.773"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.750" endtime="20201030 11:50:54.773"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.391" endtime="20201030 11:50:54.773"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.390" endtime="20201030 11:50:54.773"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:54.782" endtime="20201030 11:50:54.802"></status>
</kw>
<msg timestamp="20201030 11:50:54.802" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:54.781" endtime="20201030 11:50:54.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:54.805" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:54.803" endtime="20201030 11:50:54.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:54.806" endtime="20201030 11:50:54.807"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.778" endtime="20201030 11:50:54.808"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.776" endtime="20201030 11:50:54.808"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:54.815" endtime="20201030 11:50:55.102"></status>
</kw>
<msg timestamp="20201030 11:50:55.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021154958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021180292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:54.813" endtime="20201030 11:50:55.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:55.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021154958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021180292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:55.106" endtime="20201030 11:50:55.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:55.114" endtime="20201030 11:50:55.116"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.811" endtime="20201030 11:50:55.117"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.809" endtime="20201030 11:50:55.117"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:55.121" level="INFO">${RESULT} = [{'diff': 2.5333999999998386e-05}, {'diff': 1.661099999999971e-05}, {'diff': 1.658300000000057e-05}, {'diff': 1.6679999999998085e-05}, {'diff': 1.658300000000057e-05}, {'diff': 1.661099999999971e-05},...</msg>
<status status="PASS" starttime="20201030 11:50:55.118" endtime="20201030 11:50:55.122"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:55.126" level="INFO">${ACCURACY} = {'diff': [2.5333999999998386e-05, 1.661099999999971e-05, 1.658300000000057e-05, 1.6679999999998085e-05, 1.658300000000057e-05, 1.661099999999971e-05, 1.658300000000057e-05, 1.659700000000014e-05, 1.66...</msg>
<status status="PASS" starttime="20201030 11:50:55.122" endtime="20201030 11:50:55.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:55.130" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201030 11:50:55.129" endtime="20201030 11:50:55.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:55.133" level="INFO">VALUE: [2.5333999999998386e-05, 1.661099999999971e-05, 1.658300000000057e-05, 1.6679999999998085e-05, 1.658300000000057e-05, 1.661099999999971e-05, 1.658300000000057e-05, 1.659700000000014e-05, 1.665300000000189e-05, 1.6097999999999113e-05, 1.661099999999971e-05, 1.659700000000014e-05, 1.611099999999921e-05, 1.659700000000014e-05, 1.661099999999971e-05, 1.663900000000232e-05, 1.658300000000057e-05, 1.659700000000014e-05, 1.663900000000232e-05, 1.658300000000057e-05, 1.609699999999964e-05, 1.661100000000318e-05, 1.6584000000000043e-05, 1.661099999999971e-05, 1.608300000000007e-05, 1.662499999999928e-05, 1.608300000000007e-05, 1.609699999999964e-05, 1.611100000000268e-05, 1.616700000000096e-05, 1.6556000000000903e-05, 1.613899999999835e-05, 1.711100000000021e-05, 1.612499999999878e-05, 1.661099999999971e-05, 1.661100000000318e-05, 1.659700000000014e-05, 1.613899999999835e-05, 1.661100000000318e-05, 1.612499999999878e-05, 1.6598000000003083e-05, 1.659700000000014e-05, 1.611099999999921e-05, 1.611099999999921e-05, 1.611099999999921e-05, 1.659700000000014e-05, 1.6597999999999613e-05, 1.6097999999999113e-05, 1.658300000000057e-05, 1.608300000000007e-05]</msg>
<status status="PASS" starttime="20201030 11:50:55.131" endtime="20201030 11:50:55.137"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.126" endtime="20201030 11:50:55.137"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:55.141" endtime="20201030 11:50:55.161"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.140" endtime="20201030 11:50:55.161"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.139" endtime="20201030 11:50:55.162"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.774" endtime="20201030 11:50:55.162"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.774" endtime="20201030 11:50:55.162"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:55.171" endtime="20201030 11:50:55.189"></status>
</kw>
<msg timestamp="20201030 11:50:55.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:55.169" endtime="20201030 11:50:55.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:55.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:55.191" endtime="20201030 11:50:55.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:55.193" endtime="20201030 11:50:55.195"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.167" endtime="20201030 11:50:55.196"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.165" endtime="20201030 11:50:55.196"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:55.203" endtime="20201030 11:50:55.488"></status>
</kw>
<msg timestamp="20201030 11:50:55.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020126847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020153181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:55.201" endtime="20201030 11:50:55.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:55.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020126847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020153181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:55.492" endtime="20201030 11:50:55.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:55.500" endtime="20201030 11:50:55.502"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.198" endtime="20201030 11:50:55.503"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.197" endtime="20201030 11:50:55.503"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:55.507" level="INFO">${RESULT} = [{'diff': 2.6333999999999386e-05}, {'diff': 1.7598000000000613e-05}, {'diff': 1.711100000000021e-05}, {'diff': 1.712499999999978e-05}, {'diff': 1.709700000000064e-05}, {'diff': 1.708300000000107e-05},...</msg>
<status status="PASS" starttime="20201030 11:50:55.504" endtime="20201030 11:50:55.507"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:55.512" level="INFO">${ACCURACY} = {'diff': [2.6333999999999386e-05, 1.7598000000000613e-05, 1.711100000000021e-05, 1.712499999999978e-05, 1.709700000000064e-05, 1.708300000000107e-05, 1.7598000000000613e-05, 1.759700000000114e-05, 1.7...</msg>
<status status="PASS" starttime="20201030 11:50:55.508" endtime="20201030 11:50:55.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:55.517" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201030 11:50:55.516" endtime="20201030 11:50:55.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:55.520" level="INFO">VALUE: [2.6333999999999386e-05, 1.7598000000000613e-05, 1.711100000000021e-05, 1.712499999999978e-05, 1.709700000000064e-05, 1.708300000000107e-05, 1.7598000000000613e-05, 1.759700000000114e-05, 1.709700000000064e-05, 1.761099999999724e-05, 1.702699999999932e-05, 1.7098000000000113e-05, 1.7098000000000113e-05, 1.711100000000021e-05, 1.711100000000021e-05, 1.709699999999717e-05, 1.809699999999817e-05, 1.759699999999767e-05, 1.759700000000114e-05, 1.711100000000021e-05, 1.711100000000021e-05, 1.762500000000028e-05, 1.761100000000071e-05, 1.709700000000064e-05, 1.759699999999767e-05, 1.716699999999849e-05, 1.761099999999724e-05, 1.761100000000071e-05, 1.759700000000114e-05, 1.761100000000071e-05, 1.7098000000000113e-05, 1.711099999999674e-05, 1.709700000000064e-05, 1.761100000000071e-05, 1.709700000000064e-05, 1.709700000000064e-05, 1.759700000000114e-05, 1.761100000000071e-05, 1.809699999999817e-05, 1.709700000000064e-05, 1.709700000000064e-05, 1.711100000000021e-05, 1.7084000000000543e-05, 1.709699999999717e-05, 1.768100000000203e-05, 1.761100000000071e-05, 1.80829999999986e-05, 1.7084000000000543e-05, 1.7098000000000113e-05, 1.75829999999981e-05]</msg>
<status status="PASS" starttime="20201030 11:50:55.518" endtime="20201030 11:50:55.520"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.513" endtime="20201030 11:50:55.521"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:55.525" endtime="20201030 11:50:55.544"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.523" endtime="20201030 11:50:55.545"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.522" endtime="20201030 11:50:55.545"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.163" endtime="20201030 11:50:55.545"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.163" endtime="20201030 11:50:55.546"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:55.554" endtime="20201030 11:50:55.572"></status>
</kw>
<msg timestamp="20201030 11:50:55.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:55.553" endtime="20201030 11:50:55.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:55.575" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:55.574" endtime="20201030 11:50:55.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:55.576" endtime="20201030 11:50:55.578"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.550" endtime="20201030 11:50:55.578"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.548" endtime="20201030 11:50:55.579"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:55.585" endtime="20201030 11:50:55.871"></status>
</kw>
<msg timestamp="20201030 11:50:55.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020070306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020097611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:55.584" endtime="20201030 11:50:55.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:55.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020070306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020097611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:55.875" endtime="20201030 11:50:55.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:55.884" endtime="20201030 11:50:55.885"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.581" endtime="20201030 11:50:55.886"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.579" endtime="20201030 11:50:55.886"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:55.890" level="INFO">${RESULT} = [{'diff': 2.7305000000001772e-05}, {'diff': 1.8098000000001113e-05}, {'diff': 1.8041999999999364e-05}, {'diff': 1.861100000000171e-05}, {'diff': 1.806899999999903e-05}, {'diff': 1.861099999999824e-05}...</msg>
<status status="PASS" starttime="20201030 11:50:55.887" endtime="20201030 11:50:55.891"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:55.895" level="INFO">${ACCURACY} = {'diff': [2.7305000000001772e-05, 1.8098000000001113e-05, 1.8041999999999364e-05, 1.861100000000171e-05, 1.806899999999903e-05, 1.861099999999824e-05, 1.861099999999824e-05, 1.865300000000042e-05, 1.8...</msg>
<status status="PASS" starttime="20201030 11:50:55.891" endtime="20201030 11:50:55.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:55.899" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201030 11:50:55.898" endtime="20201030 11:50:55.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:55.902" level="INFO">VALUE: [2.7305000000001772e-05, 1.8098000000001113e-05, 1.8041999999999364e-05, 1.861100000000171e-05, 1.806899999999903e-05, 1.861099999999824e-05, 1.861099999999824e-05, 1.865300000000042e-05, 1.8637999999997906e-05, 1.859700000000214e-05, 1.859699999999867e-05, 1.859700000000214e-05, 1.911099999999874e-05, 1.9069999999999504e-05, 1.809700000000164e-05, 1.858300000000257e-05, 1.859699999999867e-05, 1.859699999999867e-05, 1.868099999999956e-05, 1.861099999999824e-05, 1.859699999999867e-05, 1.85829999999991e-05, 1.813900000000035e-05, 1.859699999999867e-05, 1.80829999999986e-05, 1.862499999999781e-05, 1.8583999999998574e-05, 1.861099999999824e-05, 1.811099999999774e-05, 1.80829999999986e-05, 1.812500000000078e-05, 1.865300000000042e-05, 1.861100000000171e-05, 1.859700000000214e-05, 1.809700000000164e-05, 1.859699999999867e-05, 1.809700000000164e-05, 1.861099999999824e-05, 1.809699999999817e-05, 1.809699999999817e-05, 1.809699999999817e-05, 1.80829999999986e-05, 1.859700000000214e-05, 1.8597999999998144e-05, 1.8084000000001543e-05, 1.859700000000214e-05, 1.863900000000085e-05, 1.80829999999986e-05, 1.809699999999817e-05, 1.862500000000128e-05]</msg>
<status status="PASS" starttime="20201030 11:50:55.900" endtime="20201030 11:50:55.903"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.895" endtime="20201030 11:50:55.903"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:55.907" endtime="20201030 11:50:55.926"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.905" endtime="20201030 11:50:55.927"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.904" endtime="20201030 11:50:55.927"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.546" endtime="20201030 11:50:55.927"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.546" endtime="20201030 11:50:55.928"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:55.936" endtime="20201030 11:50:55.955"></status>
</kw>
<msg timestamp="20201030 11:50:55.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:55.935" endtime="20201030 11:50:55.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:55.958" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:55.956" endtime="20201030 11:50:55.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:55.959" endtime="20201030 11:50:55.961"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.932" endtime="20201030 11:50:55.961"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.930" endtime="20201030 11:50:55.962"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:55.968" endtime="20201030 11:50:56.253"></status>
</kw>
<msg timestamp="20201030 11:50:56.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021077208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021105597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:55.967" endtime="20201030 11:50:56.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:56.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021077208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021105597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:56.258" endtime="20201030 11:50:56.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:56.266" endtime="20201030 11:50:56.268"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.964" endtime="20201030 11:50:56.268"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.962" endtime="20201030 11:50:56.269"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:56.273" level="INFO">${RESULT} = [{'diff': 2.8389000000000192e-05}, {'diff': 1.961100000000271e-05}, {'diff': 1.962499999999881e-05}, {'diff': 1.90829999999996e-05}, {'diff': 1.95830000000001e-05}, {'diff': 1.959699999999967e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:50:56.270" endtime="20201030 11:50:56.273"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:56.277" level="INFO">${ACCURACY} = {'diff': [2.8389000000000192e-05, 1.961100000000271e-05, 1.962499999999881e-05, 1.90829999999996e-05, 1.95830000000001e-05, 1.959699999999967e-05, 1.9583999999999574e-05, 1.913900000000135e-05, 1.9096...</msg>
<status status="PASS" starttime="20201030 11:50:56.274" endtime="20201030 11:50:56.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:56.282" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201030 11:50:56.281" endtime="20201030 11:50:56.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:56.284" level="INFO">VALUE: [2.8389000000000192e-05, 1.961100000000271e-05, 1.962499999999881e-05, 1.90829999999996e-05, 1.95830000000001e-05, 1.959699999999967e-05, 1.9583999999999574e-05, 1.913900000000135e-05, 1.909699999999917e-05, 1.909699999999917e-05, 1.95830000000001e-05, 1.962499999999881e-05, 1.959699999999967e-05, 1.962499999999881e-05, 2.009700000000017e-05, 1.9055999999999934e-05, 1.95830000000001e-05, 2.008299999999713e-05, 1.959699999999967e-05, 1.909699999999917e-05, 1.909699999999917e-05, 1.911099999999874e-05, 1.95830000000001e-05, 1.9611999999998714e-05, 1.959699999999967e-05, 1.959699999999967e-05, 1.962499999999881e-05, 1.9583999999999574e-05, 1.961100000000271e-05, 1.9583999999999574e-05, 1.909699999999917e-05, 1.913900000000135e-05, 1.911099999999874e-05, 1.909699999999917e-05, 1.959699999999967e-05, 1.911099999999874e-05, 1.909700000000264e-05, 1.962500000000228e-05, 1.961099999999924e-05, 1.909700000000264e-05, 1.9597999999999144e-05, 1.911099999999874e-05, 1.959699999999967e-05, 1.959699999999967e-05, 1.909699999999917e-05, 1.911099999999874e-05, 1.9098000000002113e-05, 1.961099999999924e-05, 1.959699999999967e-05, 2.011099999999974e-05]</msg>
<status status="PASS" starttime="20201030 11:50:56.283" endtime="20201030 11:50:56.286"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.278" endtime="20201030 11:50:56.287"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:56.291" endtime="20201030 11:50:56.310"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.289" endtime="20201030 11:50:56.310"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.288" endtime="20201030 11:50:56.311"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.929" endtime="20201030 11:50:56.311"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.928" endtime="20201030 11:50:56.311"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:56.320" endtime="20201030 11:50:56.337"></status>
</kw>
<msg timestamp="20201030 11:50:56.338" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:56.319" endtime="20201030 11:50:56.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:56.341" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:56.339" endtime="20201030 11:50:56.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:56.342" endtime="20201030 11:50:56.343"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.316" endtime="20201030 11:50:56.344"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.314" endtime="20201030 11:50:56.344"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:56.351" endtime="20201030 11:50:56.635"></status>
</kw>
<msg timestamp="20201030 11:50:56.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020115431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020145264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:56.349" endtime="20201030 11:50:56.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:56.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020115431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020145264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:56.640" endtime="20201030 11:50:56.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:56.648" endtime="20201030 11:50:56.650"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.347" endtime="20201030 11:50:56.650"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.345" endtime="20201030 11:50:56.651"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:56.655" level="INFO">${RESULT} = [{'diff': 2.9832999999999943e-05}, {'diff': 2.061100000000024e-05}, {'diff': 2.116699999999902e-05}, {'diff': 2.059700000000067e-05}, {'diff': 2.012499999999931e-05}, {'diff': 2.011099999999974e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:50:56.651" endtime="20201030 11:50:56.655"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:56.660" level="INFO">${ACCURACY} = {'diff': [2.9832999999999943e-05, 2.061100000000024e-05, 2.116699999999902e-05, 2.059700000000067e-05, 2.012499999999931e-05, 2.011099999999974e-05, 2.116699999999902e-05, 2.011099999999974e-05, 2.061...</msg>
<status status="PASS" starttime="20201030 11:50:56.656" endtime="20201030 11:50:56.660"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:56.664" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201030 11:50:56.663" endtime="20201030 11:50:56.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:56.668" level="INFO">VALUE: [2.9832999999999943e-05, 2.061100000000024e-05, 2.116699999999902e-05, 2.059700000000067e-05, 2.012499999999931e-05, 2.011099999999974e-05, 2.116699999999902e-05, 2.011099999999974e-05, 2.0611999999999714e-05, 2.061100000000024e-05, 2.059700000000067e-05, 2.011099999999974e-05, 2.055499999999849e-05, 2.0584000000000574e-05, 2.059700000000067e-05, 2.062499999999981e-05, 2.062499999999981e-05, 2.016699999999802e-05, 2.008299999999713e-05, 2.059700000000067e-05, 2.058299999999763e-05, 2.0611999999999714e-05, 2.111100000000074e-05, 2.059700000000067e-05, 2.011099999999974e-05, 2.115299999999945e-05, 2.013900000000235e-05, 2.0598000000000144e-05, 2.056900000000153e-05, 2.059700000000067e-05, 2.063900000000285e-05, 2.012500000000278e-05, 2.059700000000067e-05, 2.062499999999981e-05, 2.009700000000017e-05, 2.011099999999974e-05, 2.0556000000001434e-05, 2.009700000000017e-05, 2.009700000000017e-05, 2.011099999999974e-05, 2.0112000000002683e-05, 2.0180000000001586e-05, 2.0541999999998395e-05, 2.012499999999931e-05, 2.0084000000000074e-05, 2.0584000000000574e-05, 2.058299999999763e-05, 2.0598000000000144e-05, 2.058299999999763e-05, 2.011099999999974e-05]</msg>
<status status="PASS" starttime="20201030 11:50:56.666" endtime="20201030 11:50:56.669"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.661" endtime="20201030 11:50:56.670"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:56.673" endtime="20201030 11:50:56.693"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.672" endtime="20201030 11:50:56.693"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.671" endtime="20201030 11:50:56.694"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.312" endtime="20201030 11:50:56.694"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.312" endtime="20201030 11:50:56.694"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:56.703" endtime="20201030 11:50:56.721"></status>
</kw>
<msg timestamp="20201030 11:50:56.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:56.702" endtime="20201030 11:50:56.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:56.725" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:56.723" endtime="20201030 11:50:56.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:56.726" endtime="20201030 11:50:56.727"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.699" endtime="20201030 11:50:56.728"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.697" endtime="20201030 11:50:56.728"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:56.735" endtime="20201030 11:50:57.023"></status>
</kw>
<msg timestamp="20201030 11:50:57.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020283903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020314236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:56.733" endtime="20201030 11:50:57.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:57.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020283903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020314236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:57.027" endtime="20201030 11:50:57.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:57.035" endtime="20201030 11:50:57.037"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.731" endtime="20201030 11:50:57.037"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.729" endtime="20201030 11:50:57.038"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:57.042" level="INFO">${RESULT} = [{'diff': 3.0333000000000443e-05}, {'diff': 2.109700000000117e-05}, {'diff': 2.1055999999998465e-05}, {'diff': 2.15830000000021e-05}, {'diff': 2.161100000000124e-05}, {'diff': 2.1598000000001144e-05},...</msg>
<status status="PASS" starttime="20201030 11:50:57.039" endtime="20201030 11:50:57.042"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:57.046" level="INFO">${ACCURACY} = {'diff': [3.0333000000000443e-05, 2.109700000000117e-05, 2.1055999999998465e-05, 2.15830000000021e-05, 2.161100000000124e-05, 2.1598000000001144e-05, 2.162500000000081e-05, 2.111100000000074e-05, 2.15...</msg>
<status status="PASS" starttime="20201030 11:50:57.043" endtime="20201030 11:50:57.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:57.051" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201030 11:50:57.050" endtime="20201030 11:50:57.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:57.053" level="INFO">VALUE: [3.0333000000000443e-05, 2.109700000000117e-05, 2.1055999999998465e-05, 2.15830000000021e-05, 2.161100000000124e-05, 2.1598000000001144e-05, 2.162500000000081e-05, 2.111100000000074e-05, 2.156899999999906e-05, 2.113899999999988e-05, 2.109700000000117e-05, 2.159700000000167e-05, 2.1597999999997675e-05, 2.161099999999777e-05, 2.1570000000002004e-05, 2.166700000000299e-05, 2.161100000000124e-05, 2.1098000000000644e-05, 2.1042000000002364e-05, 2.162500000000081e-05, 2.1598000000001144e-05, 2.161100000000124e-05, 2.1194000000002156e-05, 2.159700000000167e-05, 2.161100000000124e-05, 2.106900000000203e-05, 2.162499999999734e-05, 2.111099999999727e-05, 2.111099999999727e-05, 2.159700000000167e-05, 2.112500000000031e-05, 2.1569999999998535e-05, 2.112500000000031e-05, 2.20969999999987e-05, 2.10830000000016e-05, 2.111100000000074e-05, 2.1027999999999325e-05, 2.1597999999997675e-05, 2.1041999999998895e-05, 2.112500000000031e-05, 2.15830000000021e-05, 2.165299999999995e-05, 2.15969999999982e-05, 2.15969999999982e-05, 2.1084000000001074e-05, 2.111100000000074e-05, 2.109700000000117e-05, 2.1514000000000255e-05, 2.1027999999999325e-05, 2.1097999999997175e-05]</msg>
<status status="PASS" starttime="20201030 11:50:57.052" endtime="20201030 11:50:57.054"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.047" endtime="20201030 11:50:57.055"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:57.059" endtime="20201030 11:50:57.078"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.057" endtime="20201030 11:50:57.079"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.056" endtime="20201030 11:50:57.079"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.695" endtime="20201030 11:50:57.079"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.695" endtime="20201030 11:50:57.080"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:57.089" endtime="20201030 11:50:57.108"></status>
</kw>
<msg timestamp="20201030 11:50:57.109" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:57.088" endtime="20201030 11:50:57.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:57.111" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:57.110" endtime="20201030 11:50:57.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:57.112" endtime="20201030 11:50:57.114"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.085" endtime="20201030 11:50:57.114"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.082" endtime="20201030 11:50:57.115"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:57.122" endtime="20201030 11:50:57.408"></status>
</kw>
<msg timestamp="20201030 11:50:57.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022389042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022419875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:57.120" endtime="20201030 11:50:57.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:57.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022389042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022419875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:57.412" endtime="20201030 11:50:57.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:57.421" endtime="20201030 11:50:57.423"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.117" endtime="20201030 11:50:57.423"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.116" endtime="20201030 11:50:57.424"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:57.428" level="INFO">${RESULT} = [{'diff': 3.0832999999997474e-05}, {'diff': 2.212499999999784e-05}, {'diff': 2.20969999999987e-05}, {'diff': 2.261099999999877e-05}, {'diff': 2.261100000000224e-05}, {'diff': 2.258299999999963e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:50:57.424" endtime="20201030 11:50:57.428"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:57.432" level="INFO">${ACCURACY} = {'diff': [3.0832999999997474e-05, 2.212499999999784e-05, 2.20969999999987e-05, 2.261099999999877e-05, 2.261100000000224e-05, 2.258299999999963e-05, 2.209700000000217e-05, 2.2098000000001644e-05, 2.212...</msg>
<status status="PASS" starttime="20201030 11:50:57.429" endtime="20201030 11:50:57.432"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:57.437" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201030 11:50:57.436" endtime="20201030 11:50:57.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:57.439" level="INFO">VALUE: [3.0832999999997474e-05, 2.212499999999784e-05, 2.20969999999987e-05, 2.261099999999877e-05, 2.261100000000224e-05, 2.258299999999963e-05, 2.209700000000217e-05, 2.2098000000001644e-05, 2.212499999999784e-05, 2.2026999999997382e-05, 2.211099999999827e-05, 2.262499999999834e-05, 2.30969999999997e-05, 2.211100000000174e-05, 2.20969999999987e-05, 2.261099999999877e-05, 2.308300000000013e-05, 2.211100000000174e-05, 2.261099999999877e-05, 2.2584000000002574e-05, 2.20969999999987e-05, 2.261100000000224e-05, 2.212499999999784e-05, 2.25969999999992e-05, 2.211099999999827e-05, 2.2597999999998675e-05, 2.211099999999827e-05, 2.211100000000174e-05, 2.261099999999877e-05, 2.25969999999992e-05, 2.2097999999998175e-05, 2.2112000000001214e-05, 2.209700000000217e-05, 2.309700000000317e-05, 2.213900000000088e-05, 2.261099999999877e-05, 2.2555999999999965e-05, 2.262500000000181e-05, 2.2598000000002144e-05, 2.211100000000174e-05, 2.209700000000217e-05, 2.261099999999877e-05, 2.211099999999827e-05, 2.206899999999956e-05, 2.211100000000174e-05, 2.2555999999999965e-05, 2.2083999999998605e-05, 2.211100000000174e-05, 2.211100000000174e-05, 2.2583999999999105e-05]</msg>
<status status="PASS" starttime="20201030 11:50:57.438" endtime="20201030 11:50:57.441"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.433" endtime="20201030 11:50:57.441"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:57.445" endtime="20201030 11:50:57.464"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.444" endtime="20201030 11:50:57.465"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.442" endtime="20201030 11:50:57.465"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.081" endtime="20201030 11:50:57.466"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.080" endtime="20201030 11:50:57.466"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:57.475" endtime="20201030 11:50:57.493"></status>
</kw>
<msg timestamp="20201030 11:50:57.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:57.473" endtime="20201030 11:50:57.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:57.496" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:57.495" endtime="20201030 11:50:57.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:57.497" endtime="20201030 11:50:57.499"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.471" endtime="20201030 11:50:57.500"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.468" endtime="20201030 11:50:57.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:57.507" endtime="20201030 11:50:57.793"></status>
</kw>
<msg timestamp="20201030 11:50:57.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020272764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020305097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:57.505" endtime="20201030 11:50:57.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:57.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020272764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020305097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:57.797" endtime="20201030 11:50:57.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:57.806" endtime="20201030 11:50:57.807"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.502" endtime="20201030 11:50:57.808"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.501" endtime="20201030 11:50:57.808"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:57.812" level="INFO">${RESULT} = [{'diff': 3.233300000000244e-05}, {'diff': 2.35970000000002e-05}, {'diff': 2.35970000000002e-05}, {'diff': 2.311099999999927e-05}, {'diff': 2.30969999999997e-05}, {'diff': 2.30969999999997e-05}, {'dif...</msg>
<status status="PASS" starttime="20201030 11:50:57.809" endtime="20201030 11:50:57.813"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:57.818" level="INFO">${ACCURACY} = {'diff': [3.233300000000244e-05, 2.35970000000002e-05, 2.35970000000002e-05, 2.311099999999927e-05, 2.30969999999997e-05, 2.30969999999997e-05, 2.35970000000002e-05, 2.311099999999927e-05, 2.359700000...</msg>
<status status="PASS" starttime="20201030 11:50:57.813" endtime="20201030 11:50:57.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:57.822" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201030 11:50:57.821" endtime="20201030 11:50:57.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:57.825" level="INFO">VALUE: [3.233300000000244e-05, 2.35970000000002e-05, 2.35970000000002e-05, 2.311099999999927e-05, 2.30969999999997e-05, 2.30969999999997e-05, 2.35970000000002e-05, 2.311099999999927e-05, 2.35970000000002e-05, 2.35970000000002e-05, 2.412499999999984e-05, 2.3542000000001395e-05, 2.365300000000195e-05, 2.35970000000002e-05, 2.40970000000007e-05, 2.309700000000317e-05, 2.3097999999999175e-05, 2.30969999999997e-05, 2.3611999999999245e-05, 2.35970000000002e-05, 2.358300000000063e-05, 2.311100000000274e-05, 2.41109999999968e-05, 2.308300000000013e-05, 2.356900000000106e-05, 2.316700000000102e-05, 2.35970000000002e-05, 2.35970000000002e-05, 2.311099999999927e-05, 2.311099999999927e-05, 2.362500000000281e-05, 2.3598000000003144e-05, 2.312500000000231e-05, 2.30969999999997e-05, 2.311099999999927e-05, 2.3097999999999175e-05, 2.361099999999977e-05, 2.311100000000274e-05, 2.361099999999977e-05, 2.30969999999997e-05, 2.361099999999977e-05, 2.361099999999977e-05, 2.30969999999997e-05, 2.312499999999884e-05, 2.361099999999977e-05, 2.30969999999997e-05, 2.3526999999998882e-05, 2.306900000000056e-05, 2.363899999999891e-05, 2.3097999999999175e-05]</msg>
<status status="PASS" starttime="20201030 11:50:57.823" endtime="20201030 11:50:57.826"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.819" endtime="20201030 11:50:57.826"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:57.830" endtime="20201030 11:50:57.849"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.828" endtime="20201030 11:50:57.850"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.827" endtime="20201030 11:50:57.850"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.467" endtime="20201030 11:50:57.851"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.466" endtime="20201030 11:50:57.851"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:57.860" endtime="20201030 11:50:57.877"></status>
</kw>
<msg timestamp="20201030 11:50:57.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:57.858" endtime="20201030 11:50:57.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:57.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:57.879" endtime="20201030 11:50:57.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:57.881" endtime="20201030 11:50:57.883"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.855" endtime="20201030 11:50:57.884"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.853" endtime="20201030 11:50:57.884"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:57.891" endtime="20201030 11:50:58.179"></status>
</kw>
<msg timestamp="20201030 11:50:58.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020145472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020178806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:57.889" endtime="20201030 11:50:58.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:58.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020145472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020178806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:58.183" endtime="20201030 11:50:58.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:58.191" endtime="20201030 11:50:58.193"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.886" endtime="20201030 11:50:58.194"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.885" endtime="20201030 11:50:58.194"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:58.198" level="INFO">${RESULT} = [{'diff': 3.333399999999945e-05}, {'diff': 2.4541999999998926e-05}, {'diff': 2.415299999999898e-05}, {'diff': 2.461100000000077e-05}, {'diff': 2.511100000000127e-05}, {'diff': 2.461100000000077e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:50:58.195" endtime="20201030 11:50:58.198"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:58.202" level="INFO">${ACCURACY} = {'diff': [3.333399999999945e-05, 2.4541999999998926e-05, 2.415299999999898e-05, 2.461100000000077e-05, 2.511100000000127e-05, 2.461100000000077e-05, 2.458300000000163e-05, 2.511100000000127e-05, 2.511...</msg>
<status status="PASS" starttime="20201030 11:50:58.199" endtime="20201030 11:50:58.203"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:58.207" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201030 11:50:58.206" endtime="20201030 11:50:58.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:58.209" level="INFO">VALUE: [3.333399999999945e-05, 2.4541999999998926e-05, 2.415299999999898e-05, 2.461100000000077e-05, 2.511100000000127e-05, 2.461100000000077e-05, 2.458300000000163e-05, 2.511100000000127e-05, 2.511100000000127e-05, 2.40970000000007e-05, 2.40970000000007e-05, 2.4165999999999077e-05, 2.462500000000034e-05, 2.4584000000001105e-05, 2.411100000000027e-05, 2.45970000000012e-05, 2.40970000000007e-05, 2.512500000000084e-05, 2.4582999999998162e-05, 2.408300000000113e-05, 2.4598000000000675e-05, 2.411100000000027e-05, 2.461100000000077e-05, 2.463899999999991e-05, 2.411100000000027e-05, 2.4582999999998162e-05, 2.458300000000163e-05, 2.5097999999997705e-05, 2.461100000000077e-05, 2.40970000000007e-05, 2.412499999999984e-05, 2.411100000000027e-05, 2.4598000000000675e-05, 2.4652000000000007e-05, 2.45970000000012e-05, 2.40970000000007e-05, 2.461100000000077e-05, 2.4598000000000675e-05, 2.415300000000245e-05, 2.4098000000000175e-05, 2.4596999999997732e-05, 2.45970000000012e-05, 2.5082999999998662e-05, 2.411100000000027e-05, 2.4596999999997732e-05, 2.461100000000077e-05, 2.40970000000007e-05, 2.413899999999941e-05, 2.40970000000007e-05, 2.462500000000034e-05]</msg>
<status status="PASS" starttime="20201030 11:50:58.208" endtime="20201030 11:50:58.210"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.203" endtime="20201030 11:50:58.211"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:58.215" endtime="20201030 11:50:58.234"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.213" endtime="20201030 11:50:58.235"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.212" endtime="20201030 11:50:58.235"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.852" endtime="20201030 11:50:58.235"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.851" endtime="20201030 11:50:58.235"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:58.244" endtime="20201030 11:50:58.262"></status>
</kw>
<msg timestamp="20201030 11:50:58.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:58.243" endtime="20201030 11:50:58.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:58.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:58.264" endtime="20201030 11:50:58.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:58.267" endtime="20201030 11:50:58.268"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.240" endtime="20201030 11:50:58.269"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.238" endtime="20201030 11:50:58.269"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:58.276" endtime="20201030 11:50:58.562"></status>
</kw>
<msg timestamp="20201030 11:50:58.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021069083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021103431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:58.274" endtime="20201030 11:50:58.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:58.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021069083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021103431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:58.566" endtime="20201030 11:50:58.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:58.575" endtime="20201030 11:50:58.576"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.272" endtime="20201030 11:50:58.577"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.270" endtime="20201030 11:50:58.577"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:58.582" level="INFO">${RESULT} = [{'diff': 3.434800000000002e-05}, {'diff': 2.562500000000134e-05}, {'diff': 2.5596999999998732e-05}, {'diff': 2.562500000000134e-05}, {'diff': 2.615299999999751e-05}, {'diff': 2.561100000000177e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:50:58.578" endtime="20201030 11:50:58.582"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:58.586" level="INFO">${ACCURACY} = {'diff': [3.434800000000002e-05, 2.562500000000134e-05, 2.5596999999998732e-05, 2.562500000000134e-05, 2.615299999999751e-05, 2.561100000000177e-05, 2.5597999999998206e-05, 2.5096999999998232e-05, 2.5...</msg>
<status status="PASS" starttime="20201030 11:50:58.583" endtime="20201030 11:50:58.586"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:58.591" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201030 11:50:58.590" endtime="20201030 11:50:58.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:58.596" level="INFO">VALUE: [3.434800000000002e-05, 2.562500000000134e-05, 2.5596999999998732e-05, 2.562500000000134e-05, 2.615299999999751e-05, 2.561100000000177e-05, 2.5597999999998206e-05, 2.5096999999998232e-05, 2.5193999999999217e-05, 2.5110999999997802e-05, 2.55970000000022e-05, 2.5541999999999926e-05, 2.5597999999998206e-05, 2.5084000000001605e-05, 2.5596999999998732e-05, 2.5610999999998302e-05, 2.5582999999999162e-05, 2.5110999999997802e-05, 2.5582999999999162e-05, 2.568099999999962e-05, 2.5637999999997968e-05, 2.562500000000134e-05, 2.511100000000127e-05, 2.5596999999998732e-05, 2.55970000000022e-05, 2.5583999999998636e-05, 2.5680000000000147e-05, 2.5096999999998232e-05, 2.5596999999998732e-05, 2.508300000000213e-05, 2.6110999999998802e-05, 2.5112000000000745e-05, 2.5610999999998302e-05, 2.5583999999998636e-05, 2.562500000000134e-05, 2.55970000000022e-05, 2.5596999999998732e-05, 2.5598000000001675e-05, 2.5084000000001605e-05, 2.55970000000022e-05, 2.5596999999998732e-05, 2.5541000000000452e-05, 2.5082999999998662e-05, 2.5569999999999066e-05, 2.561100000000177e-05, 2.512500000000084e-05, 2.5555000000000022e-05, 2.50970000000017e-05, 2.5596999999998732e-05, 2.5069999999998566e-05]</msg>
<status status="PASS" starttime="20201030 11:50:58.592" endtime="20201030 11:50:58.601"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.587" endtime="20201030 11:50:58.602"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:58.606" endtime="20201030 11:50:58.625"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.604" endtime="20201030 11:50:58.626"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.603" endtime="20201030 11:50:58.626"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.236" endtime="20201030 11:50:58.626"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.236" endtime="20201030 11:50:58.627"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:58.636" endtime="20201030 11:50:58.654"></status>
</kw>
<msg timestamp="20201030 11:50:58.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:58.634" endtime="20201030 11:50:58.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:58.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:58.656" endtime="20201030 11:50:58.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:58.658" endtime="20201030 11:50:58.660"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.631" endtime="20201030 11:50:58.660"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.629" endtime="20201030 11:50:58.661"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:58.668" endtime="20201030 11:50:58.955"></status>
</kw>
<msg timestamp="20201030 11:50:58.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020319625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020354458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:58.666" endtime="20201030 11:50:58.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:58.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020319625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020354458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:58.960" endtime="20201030 11:50:58.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:58.968" endtime="20201030 11:50:58.970"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.663" endtime="20201030 11:50:58.970"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.661" endtime="20201030 11:50:58.971"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:58.975" level="INFO">${RESULT} = [{'diff': 3.4832999999998004e-05}, {'diff': 2.6583999999999636e-05}, {'diff': 2.6098000000002175e-05}, {'diff': 2.6596999999999732e-05}, {'diff': 2.6096999999999232e-05}, {'diff': 2.6610999999999302e-...</msg>
<status status="PASS" starttime="20201030 11:50:58.972" endtime="20201030 11:50:58.975"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:58.980" level="INFO">${ACCURACY} = {'diff': [3.4832999999998004e-05, 2.6583999999999636e-05, 2.6098000000002175e-05, 2.6596999999999732e-05, 2.6096999999999232e-05, 2.6610999999999302e-05, 2.613899999999794e-05, 2.661100000000277e-05, ...</msg>
<status status="PASS" starttime="20201030 11:50:58.976" endtime="20201030 11:50:58.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:58.985" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201030 11:50:58.984" endtime="20201030 11:50:58.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:58.987" level="INFO">VALUE: [3.4832999999998004e-05, 2.6583999999999636e-05, 2.6098000000002175e-05, 2.6596999999999732e-05, 2.6096999999999232e-05, 2.6610999999999302e-05, 2.613899999999794e-05, 2.661100000000277e-05, 2.612500000000184e-05, 2.6611999999998776e-05, 2.6596999999999732e-05, 2.6610999999999302e-05, 2.6624999999998872e-05, 2.6110999999998802e-05, 2.6083999999999136e-05, 2.6612000000002245e-05, 2.612500000000184e-05, 2.6596999999999732e-05, 2.7097000000000232e-05, 2.611100000000227e-05, 2.611100000000227e-05, 2.6097999999998706e-05, 2.7110999999999802e-05, 2.662500000000234e-05, 2.6610999999999302e-05, 2.6596999999999732e-05, 2.6624999999998872e-05, 2.613900000000141e-05, 2.6084000000002605e-05, 2.6583999999999636e-05, 2.6096999999999232e-05, 2.6110999999998802e-05, 2.6610999999999302e-05, 2.6098000000002175e-05, 2.6597999999999206e-05, 2.6082999999999662e-05, 2.7110999999999802e-05, 2.6583000000000162e-05, 2.6583000000000162e-05, 2.611100000000227e-05, 2.6596999999999732e-05, 2.6096999999999232e-05, 2.6096999999999232e-05, 2.665300000000148e-05, 2.6610999999999302e-05, 2.6541999999997457e-05, 2.7027999999998387e-05, 2.6596999999999732e-05, 2.6555999999997026e-05, 2.6542000000000926e-05]</msg>
<status status="PASS" starttime="20201030 11:50:58.986" endtime="20201030 11:50:58.988"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.981" endtime="20201030 11:50:58.989"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:58.993" endtime="20201030 11:50:59.012"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.991" endtime="20201030 11:50:59.013"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.990" endtime="20201030 11:50:59.013"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.627" endtime="20201030 11:50:59.013"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.627" endtime="20201030 11:50:59.013"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.022" endtime="20201030 11:50:59.041"></status>
</kw>
<msg timestamp="20201030 11:50:59.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:59.021" endtime="20201030 11:50:59.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:59.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:59.042" endtime="20201030 11:50:59.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.045" endtime="20201030 11:50:59.046"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.018" endtime="20201030 11:50:59.047"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.016" endtime="20201030 11:50:59.047"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.054" endtime="20201030 11:50:59.341"></status>
</kw>
<msg timestamp="20201030 11:50:59.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020264444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020300278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:59.052" endtime="20201030 11:50:59.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:59.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020264444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020300278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:59.346" endtime="20201030 11:50:59.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.354" endtime="20201030 11:50:59.356"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.050" endtime="20201030 11:50:59.356"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.048" endtime="20201030 11:50:59.357"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:59.361" level="INFO">${RESULT} = [{'diff': 3.583400000000195e-05}, {'diff': 2.7110999999999802e-05}, {'diff': 2.7584000000000636e-05}, {'diff': 2.711100000000327e-05}, {'diff': 2.7611000000000302e-05}, {'diff': 2.7597000000000732e-05...</msg>
<status status="PASS" starttime="20201030 11:50:59.358" endtime="20201030 11:50:59.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:59.365" level="INFO">${ACCURACY} = {'diff': [3.583400000000195e-05, 2.7110999999999802e-05, 2.7584000000000636e-05, 2.711100000000327e-05, 2.7611000000000302e-05, 2.7597000000000732e-05, 2.7598000000000206e-05, 2.7611000000000302e-05, ...</msg>
<status status="PASS" starttime="20201030 11:50:59.362" endtime="20201030 11:50:59.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:59.370" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201030 11:50:59.369" endtime="20201030 11:50:59.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:59.372" level="INFO">VALUE: [3.583400000000195e-05, 2.7110999999999802e-05, 2.7584000000000636e-05, 2.711100000000327e-05, 2.7611000000000302e-05, 2.7597000000000732e-05, 2.7598000000000206e-05, 2.7611000000000302e-05, 2.7679999999998678e-05, 2.7583000000001162e-05, 2.7110999999999802e-05, 2.8096999999997763e-05, 2.7097000000000232e-05, 2.7097000000000232e-05, 2.7110999999999802e-05, 2.7597000000000732e-05, 2.8083999999997666e-05, 2.7624999999999872e-05, 2.7110999999999802e-05, 2.8111000000000802e-05, 2.7582999999997693e-05, 2.7598000000000206e-05, 2.7055000000001522e-05, 2.7597000000000732e-05, 2.7042000000001426e-05, 2.7083000000000662e-05, 2.7611000000000302e-05, 2.7110999999999802e-05, 2.7679999999998678e-05, 2.7097999999999706e-05, 2.7097000000000232e-05, 2.7611000000000302e-05, 2.7597000000000732e-05, 2.7597000000000732e-05, 2.7138999999998942e-05, 2.7583000000001162e-05, 2.7652999999999012e-05, 2.7097000000000232e-05, 2.7610999999996833e-05, 2.7110999999999802e-05, 2.7097000000000232e-05, 2.7598000000000206e-05, 2.7110999999999802e-05, 2.7611000000000302e-05, 2.7513999999999317e-05, 2.7624999999999872e-05, 2.712500000000284e-05, 2.7084000000000136e-05, 2.7611000000000302e-05, 2.7598000000000206e-05]</msg>
<status status="PASS" starttime="20201030 11:50:59.371" endtime="20201030 11:50:59.373"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.366" endtime="20201030 11:50:59.374"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:59.377" endtime="20201030 11:50:59.397"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.376" endtime="20201030 11:50:59.397"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.375" endtime="20201030 11:50:59.398"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.014" endtime="20201030 11:50:59.398"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.014" endtime="20201030 11:50:59.398"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.407" endtime="20201030 11:50:59.426"></status>
</kw>
<msg timestamp="20201030 11:50:59.426" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:59.406" endtime="20201030 11:50:59.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:59.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:59.427" endtime="20201030 11:50:59.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.430" endtime="20201030 11:50:59.432"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.403" endtime="20201030 11:50:59.432"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.401" endtime="20201030 11:50:59.433"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.439" endtime="20201030 11:50:59.725"></status>
</kw>
<msg timestamp="20201030 11:50:59.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021186444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021223764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:59.438" endtime="20201030 11:50:59.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:59.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021186444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021223764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:59.730" endtime="20201030 11:50:59.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.738" endtime="20201030 11:50:59.740"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.435" endtime="20201030 11:50:59.740"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.433" endtime="20201030 11:50:59.741"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:59.745" level="INFO">${RESULT} = [{'diff': 3.732000000000041e-05}, {'diff': 2.8083000000001662e-05}, {'diff': 2.8083000000001662e-05}, {'diff': 2.8611000000001302e-05}, {'diff': 2.8597999999997736e-05}, {'diff': 2.8069000000002092e-0...</msg>
<status status="PASS" starttime="20201030 11:50:59.742" endtime="20201030 11:50:59.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:59.749" level="INFO">${ACCURACY} = {'diff': [3.732000000000041e-05, 2.8083000000001662e-05, 2.8083000000001662e-05, 2.8611000000001302e-05, 2.8597999999997736e-05, 2.8069000000002092e-05, 2.8097000000001232e-05, 2.8596999999998263e-05,...</msg>
<status status="PASS" starttime="20201030 11:50:59.746" endtime="20201030 11:50:59.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:59.754" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201030 11:50:59.753" endtime="20201030 11:50:59.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:59.756" level="INFO">VALUE: [3.732000000000041e-05, 2.8083000000001662e-05, 2.8083000000001662e-05, 2.8611000000001302e-05, 2.8597999999997736e-05, 2.8069000000002092e-05, 2.8097000000001232e-05, 2.8596999999998263e-05, 2.8582999999998693e-05, 2.8111000000000802e-05, 2.8112000000000276e-05, 2.8612000000000776e-05, 2.8624999999997403e-05, 2.8110999999997333e-05, 2.8097000000001232e-05, 2.8611000000001302e-05, 2.8610999999997833e-05, 2.8054999999999053e-05, 2.8082999999998193e-05, 2.8152000000000038e-05, 2.8624999999997403e-05, 2.8597000000001732e-05, 2.8125000000000372e-05, 2.8125000000000372e-05, 2.8111000000000802e-05, 2.8625000000000872e-05, 2.8624999999997403e-05, 2.8597000000001732e-05, 2.8527999999999887e-05, 2.8610999999997833e-05, 2.8097000000001232e-05, 2.8125000000000372e-05, 2.8084000000001136e-05, 2.8610999999997833e-05, 2.8125000000000372e-05, 2.8583999999998166e-05, 2.8125000000000372e-05, 2.8084000000001136e-05, 2.8138999999999942e-05, 2.8111000000000802e-05, 2.868099999999915e-05, 2.8055999999998527e-05, 2.8610999999997833e-05, 2.8597000000001732e-05, 2.8597000000001732e-05, 2.8653000000000012e-05, 2.8111000000000802e-05, 2.8582999999998693e-05, 2.8097000000001232e-05, 2.8612000000000776e-05]</msg>
<status status="PASS" starttime="20201030 11:50:59.755" endtime="20201030 11:50:59.758"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.750" endtime="20201030 11:50:59.759"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:59.762" endtime="20201030 11:50:59.782"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.761" endtime="20201030 11:50:59.782"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.760" endtime="20201030 11:50:59.783"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.399" endtime="20201030 11:50:59.783"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.399" endtime="20201030 11:50:59.783"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.792" endtime="20201030 11:50:59.810"></status>
</kw>
<msg timestamp="20201030 11:50:59.810" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:59.790" endtime="20201030 11:50:59.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:59.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:59.811" endtime="20201030 11:50:59.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.814" endtime="20201030 11:50:59.816"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.788" endtime="20201030 11:50:59.816"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.786" endtime="20201030 11:50:59.817"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.823" endtime="20201030 11:51:00.110"></status>
</kw>
<msg timestamp="20201030 11:51:00.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020208417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020246722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:59.822" endtime="20201030 11:51:00.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020208417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020246722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:00.115" endtime="20201030 11:51:00.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.123" endtime="20201030 11:51:00.125"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.819" endtime="20201030 11:51:00.126"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.817" endtime="20201030 11:51:00.126"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:00.131" level="INFO">${RESULT} = [{'diff': 3.8305000000002365e-05}, {'diff': 2.9596999999999263e-05}, {'diff': 2.9611000000002302e-05}, {'diff': 2.9097999999998236e-05}, {'diff': 2.9112000000001276e-05}, {'diff': 2.9110999999998333e-...</msg>
<status status="PASS" starttime="20201030 11:51:00.127" endtime="20201030 11:51:00.131"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:00.136" level="INFO">${ACCURACY} = {'diff': [3.8305000000002365e-05, 2.9596999999999263e-05, 2.9611000000002302e-05, 2.9097999999998236e-05, 2.9112000000001276e-05, 2.9110999999998333e-05, 2.9084000000002136e-05, 2.9125000000001372e-05...</msg>
<status status="PASS" starttime="20201030 11:51:00.132" endtime="20201030 11:51:00.136"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.141" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201030 11:51:00.140" endtime="20201030 11:51:00.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.144" level="INFO">VALUE: [3.8305000000002365e-05, 2.9596999999999263e-05, 2.9611000000002302e-05, 2.9097999999998236e-05, 2.9112000000001276e-05, 2.9110999999998333e-05, 2.9084000000002136e-05, 2.9125000000001372e-05, 2.9097000000002232e-05, 2.9596999999999263e-05, 2.9111000000001802e-05, 2.9111999999997806e-05, 2.9096999999998763e-05, 3.0110999999999333e-05, 3.0125000000002372e-05, 2.9597000000002732e-05, 2.9596999999999263e-05, 2.9098000000001706e-05, 2.9598000000002206e-05, 2.9110999999998333e-05, 2.9596999999999263e-05, 2.9582999999999693e-05, 2.9097000000002232e-05, 2.9097000000002232e-05, 2.9624999999998403e-05, 2.9639000000001442e-05, 2.9610999999998833e-05, 2.9097000000002232e-05, 2.9124999999997903e-05, 2.9596999999999263e-05, 3.0097999999999236e-05, 2.9069000000003092e-05, 2.9653000000001012e-05, 2.9596999999999263e-05, 2.9096999999998763e-05, 2.9111000000001802e-05, 2.9597000000002732e-05, 2.9596999999999263e-05, 2.9098000000001706e-05, 2.9153000000000512e-05, 2.9583999999999167e-05, 2.9582999999999693e-05, 2.9110999999998333e-05, 2.9625000000001872e-05, 2.9611999999998306e-05, 2.9070000000002566e-05, 2.9611999999998306e-05, 2.9582999999999693e-05, 2.9596999999999263e-05, 2.9625000000001872e-05]</msg>
<status status="PASS" starttime="20201030 11:51:00.142" endtime="20201030 11:51:00.144"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.137" endtime="20201030 11:51:00.145"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:00.149" endtime="20201030 11:51:00.168"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.147" endtime="20201030 11:51:00.169"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.146" endtime="20201030 11:51:00.169"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.784" endtime="20201030 11:51:00.169"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.783" endtime="20201030 11:51:00.170"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.179" endtime="20201030 11:51:00.196"></status>
</kw>
<msg timestamp="20201030 11:51:00.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:00.177" endtime="20201030 11:51:00.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.199" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:00.198" endtime="20201030 11:51:00.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.200" endtime="20201030 11:51:00.202"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.174" endtime="20201030 11:51:00.203"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.172" endtime="20201030 11:51:00.203"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.210" endtime="20201030 11:51:00.497"></status>
</kw>
<msg timestamp="20201030 11:51:00.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020260319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020299653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:00.208" endtime="20201030 11:51:00.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020260319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020299653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:00.501" endtime="20201030 11:51:00.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.510" endtime="20201030 11:51:00.511"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.205" endtime="20201030 11:51:00.512"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.204" endtime="20201030 11:51:00.512"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:00.516" level="INFO">${RESULT} = [{'diff': 3.933400000000198e-05}, {'diff': 3.0027999999997917e-05}, {'diff': 3.0096999999999763e-05}, {'diff': 3.05700000000006e-05}, {'diff': 3.0110999999999333e-05}, {'diff': 3.0083000000000193e-05}...</msg>
<status status="PASS" starttime="20201030 11:51:00.513" endtime="20201030 11:51:00.516"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:00.521" level="INFO">${ACCURACY} = {'diff': [3.933400000000198e-05, 3.0027999999997917e-05, 3.0096999999999763e-05, 3.05700000000006e-05, 3.0110999999999333e-05, 3.0083000000000193e-05, 3.059700000000026e-05, 3.058300000000069e-05, 3.0...</msg>
<status status="PASS" starttime="20201030 11:51:00.517" endtime="20201030 11:51:00.521"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.525" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201030 11:51:00.524" endtime="20201030 11:51:00.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.528" level="INFO">VALUE: [3.933400000000198e-05, 3.0027999999997917e-05, 3.0096999999999763e-05, 3.05700000000006e-05, 3.0110999999999333e-05, 3.0083000000000193e-05, 3.059700000000026e-05, 3.058300000000069e-05, 3.06249999999994e-05, 3.0083999999999667e-05, 3.058300000000069e-05, 3.0097999999999236e-05, 3.06249999999994e-05, 3.059700000000026e-05, 3.0096999999999763e-05, 3.0096999999999763e-05, 3.0069000000000623e-05, 3.0611999999999306e-05, 3.0584000000000167e-05, 3.111100000000033e-05, 3.059700000000026e-05, 3.059700000000026e-05, 3.059700000000026e-05, 3.06249999999994e-05, 3.0096999999999763e-05, 3.059700000000026e-05, 3.0584000000000167e-05, 3.0083000000000193e-05, 3.0096999999999763e-05, 3.0097999999999236e-05, 3.1098000000000237e-05, 3.0098000000002706e-05, 3.061099999999983e-05, 3.0568999999997654e-05, 3.0083000000000193e-05, 3.0139000000001942e-05, 3.0096999999999763e-05, 3.0096999999999763e-05, 3.0139000000001942e-05, 3.0096999999999763e-05, 3.0096999999999763e-05, 3.0110999999999333e-05, 3.059700000000026e-05, 3.0110999999999333e-05, 3.0611999999999306e-05, 3.059700000000026e-05, 3.015199999999857e-05, 3.0096999999999763e-05, 3.0096999999999763e-05, 3.061099999999983e-05]</msg>
<status status="PASS" starttime="20201030 11:51:00.526" endtime="20201030 11:51:00.529"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.521" endtime="20201030 11:51:00.529"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:00.533" endtime="20201030 11:51:00.552"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.531" endtime="20201030 11:51:00.553"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.530" endtime="20201030 11:51:00.553"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.171" endtime="20201030 11:51:00.554"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.170" endtime="20201030 11:51:00.554"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.563" endtime="20201030 11:51:00.581"></status>
</kw>
<msg timestamp="20201030 11:51:00.582" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:00.561" endtime="20201030 11:51:00.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:00.583" endtime="20201030 11:51:00.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.586" endtime="20201030 11:51:00.587"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.558" endtime="20201030 11:51:00.588"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.556" endtime="20201030 11:51:00.588"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.595" endtime="20201030 11:51:00.881"></status>
</kw>
<msg timestamp="20201030 11:51:00.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021115458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021155278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:00.593" endtime="20201030 11:51:00.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021115458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021155278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:00.885" endtime="20201030 11:51:00.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.894" endtime="20201030 11:51:00.896"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.591" endtime="20201030 11:51:00.896"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.589" endtime="20201030 11:51:00.897"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:00.901" level="INFO">${RESULT} = [{'diff': 3.981999999999944e-05}, {'diff': 3.10700000000011e-05}, {'diff': 3.158300000000169e-05}, {'diff': 3.11249999999999e-05}, {'diff': 3.1582999999998224e-05}, {'diff': 3.1596999999997794e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:00.897" endtime="20201030 11:51:00.901"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:00.905" level="INFO">${ACCURACY} = {'diff': [3.981999999999944e-05, 3.10700000000011e-05, 3.158300000000169e-05, 3.11249999999999e-05, 3.1582999999998224e-05, 3.1596999999997794e-05, 3.1582999999998224e-05, 3.1096999999997293e-05, 3.11...</msg>
<status status="PASS" starttime="20201030 11:51:00.902" endtime="20201030 11:51:00.905"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.909" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201030 11:51:00.908" endtime="20201030 11:51:00.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.912" level="INFO">VALUE: [3.981999999999944e-05, 3.10700000000011e-05, 3.158300000000169e-05, 3.11249999999999e-05, 3.1582999999998224e-05, 3.1596999999997794e-05, 3.1582999999998224e-05, 3.1096999999997293e-05, 3.11249999999999e-05, 3.115299999999904e-05, 3.156900000000212e-05, 3.108400000000067e-05, 3.1598000000000737e-05, 3.109700000000076e-05, 3.1040999999999014e-05, 3.11249999999999e-05, 3.115199999999957e-05, 3.163899999999997e-05, 3.1098000000000237e-05, 3.111100000000033e-05, 3.1596999999997794e-05, 3.1098000000000237e-05, 3.1596999999997794e-05, 3.109700000000076e-05, 3.1082999999997724e-05, 3.158300000000169e-05, 3.105600000000153e-05, 3.111100000000033e-05, 3.10700000000011e-05, 3.159700000000126e-05, 3.113900000000294e-05, 3.161100000000083e-05, 3.165299999999954e-05, 3.1098000000000237e-05, 3.161100000000083e-05, 3.1096999999997293e-05, 3.109700000000076e-05, 3.11249999999999e-05, 3.111100000000033e-05, 3.16250000000004e-05, 3.105500000000205e-05, 3.109700000000076e-05, 3.16250000000004e-05, 3.159700000000126e-05, 3.165300000000301e-05, 3.1096999999997293e-05, 3.167999999999921e-05, 3.2082999999998724e-05, 3.108400000000067e-05, 3.161100000000083e-05]</msg>
<status status="PASS" starttime="20201030 11:51:00.910" endtime="20201030 11:51:00.914"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.906" endtime="20201030 11:51:00.914"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:00.918" endtime="20201030 11:51:00.937"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.916" endtime="20201030 11:51:00.938"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.915" endtime="20201030 11:51:00.938"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.555" endtime="20201030 11:51:00.939"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.554" endtime="20201030 11:51:00.939"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.948" endtime="20201030 11:51:00.965"></status>
</kw>
<msg timestamp="20201030 11:51:00.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:00.946" endtime="20201030 11:51:00.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.969" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:00.967" endtime="20201030 11:51:00.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.970" endtime="20201030 11:51:00.971"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.944" endtime="20201030 11:51:00.972"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.941" endtime="20201030 11:51:00.972"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.979" endtime="20201030 11:51:01.264"></status>
</kw>
<msg timestamp="20201030 11:51:01.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020180056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020221389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:00.977" endtime="20201030 11:51:01.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:01.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020180056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020221389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:01.268" endtime="20201030 11:51:01.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:01.276" endtime="20201030 11:51:01.278"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.975" endtime="20201030 11:51:01.278"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.973" endtime="20201030 11:51:01.279"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:01.283" level="INFO">${RESULT} = [{'diff': 4.1333000000001036e-05}, {'diff': 3.2110999999997863e-05}, {'diff': 3.2596999999998794e-05}, {'diff': 3.2610999999998364e-05}, {'diff': 3.213900000000047e-05}, {'diff': 3.266600000000064e-05...</msg>
<status status="PASS" starttime="20201030 11:51:01.280" endtime="20201030 11:51:01.283"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:01.288" level="INFO">${ACCURACY} = {'diff': [4.1333000000001036e-05, 3.2110999999997863e-05, 3.2596999999998794e-05, 3.2610999999998364e-05, 3.213900000000047e-05, 3.266600000000064e-05, 3.2596999999998794e-05, 3.256900000000312e-05, 3...</msg>
<status status="PASS" starttime="20201030 11:51:01.284" endtime="20201030 11:51:01.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:01.293" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201030 11:51:01.292" endtime="20201030 11:51:01.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:01.295" level="INFO">VALUE: [4.1333000000001036e-05, 3.2110999999997863e-05, 3.2596999999998794e-05, 3.2610999999998364e-05, 3.213900000000047e-05, 3.266600000000064e-05, 3.2596999999998794e-05, 3.256900000000312e-05, 3.211100000000133e-05, 3.259799999999827e-05, 3.21250000000009e-05, 3.2596999999998794e-05, 3.2082999999998724e-05, 3.261100000000183e-05, 3.209700000000176e-05, 3.209700000000176e-05, 3.212499999999743e-05, 3.259799999999827e-05, 3.259700000000226e-05, 3.26250000000014e-05, 3.2068999999999154e-05, 3.2096999999998294e-05, 3.259799999999827e-05, 3.309800000000224e-05, 3.2110999999997863e-05, 3.25839999999987e-05, 3.3124999999998433e-05, 3.2082999999998724e-05, 3.30839999999992e-05, 3.2596999999998794e-05, 3.216699999999961e-05, 3.2582999999999224e-05, 3.2110999999997863e-05, 3.2596999999998794e-05, 3.2610999999998364e-05, 3.261100000000183e-05, 3.2068999999999154e-05, 3.259799999999827e-05, 3.25839999999987e-05, 3.261100000000183e-05, 3.2082999999998724e-05, 3.2110999999997863e-05, 3.259700000000226e-05, 3.2624999999997933e-05, 3.259800000000174e-05, 3.259799999999827e-05, 3.2082999999998724e-05, 3.2610999999998364e-05, 3.2596999999998794e-05, 3.261100000000183e-05]</msg>
<status status="PASS" starttime="20201030 11:51:01.294" endtime="20201030 11:51:01.296"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.289" endtime="20201030 11:51:01.297"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:01.301" endtime="20201030 11:51:01.320"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.299" endtime="20201030 11:51:01.321"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.298" endtime="20201030 11:51:01.321"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.940" endtime="20201030 11:51:01.321"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.939" endtime="20201030 11:51:01.321"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:01.330" endtime="20201030 11:51:01.348"></status>
</kw>
<msg timestamp="20201030 11:51:01.349" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:01.329" endtime="20201030 11:51:01.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:01.351" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:01.350" endtime="20201030 11:51:01.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:01.352" endtime="20201030 11:51:01.354"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.326" endtime="20201030 11:51:01.355"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.324" endtime="20201030 11:51:01.355"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:01.362" endtime="20201030 11:51:01.650"></status>
</kw>
<msg timestamp="20201030 11:51:01.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020233514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020275847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:01.360" endtime="20201030 11:51:01.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:01.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020233514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020275847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:01.654" endtime="20201030 11:51:01.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:01.662" endtime="20201030 11:51:01.664"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.357" endtime="20201030 11:51:01.665"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.356" endtime="20201030 11:51:01.665"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:01.669" level="INFO">${RESULT} = [{'diff': 4.2332999999998566e-05}, {'diff': 3.3055000000000584e-05}, {'diff': 3.3110999999998864e-05}, {'diff': 3.3596999999999794e-05}, {'diff': 3.3624999999998934e-05}, {'diff': 3.311100000000233e-0...</msg>
<status status="PASS" starttime="20201030 11:51:01.666" endtime="20201030 11:51:01.670"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:01.674" level="INFO">${ACCURACY} = {'diff': [4.2332999999998566e-05, 3.3055000000000584e-05, 3.3110999999998864e-05, 3.3596999999999794e-05, 3.3624999999998934e-05, 3.311100000000233e-05, 3.309800000000224e-05, 3.3596999999999794e-05, ...</msg>
<status status="PASS" starttime="20201030 11:51:01.671" endtime="20201030 11:51:01.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:01.683" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201030 11:51:01.677" endtime="20201030 11:51:01.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:01.686" level="INFO">VALUE: [4.2332999999998566e-05, 3.3055000000000584e-05, 3.3110999999998864e-05, 3.3596999999999794e-05, 3.3624999999998934e-05, 3.311100000000233e-05, 3.309800000000224e-05, 3.3596999999999794e-05, 3.3096999999999294e-05, 3.3138999999998e-05, 3.4083000000000724e-05, 3.309799999999877e-05, 3.3624999999998934e-05, 3.3596999999999794e-05, 3.36380000000025e-05, 3.3069000000000154e-05, 3.3596999999999794e-05, 3.3596999999999794e-05, 3.361100000000283e-05, 3.3554999999997615e-05, 3.411100000000333e-05, 3.3110999999998864e-05, 3.3638999999998503e-05, 3.3596999999999794e-05, 3.3082999999999724e-05, 3.309700000000276e-05, 3.359799999999927e-05, 3.3583000000000224e-05, 3.3096999999999294e-05, 3.3610999999999364e-05, 3.3110999999998864e-05, 3.3596999999999794e-05, 3.309700000000276e-05, 3.359800000000274e-05, 3.3124999999998433e-05, 3.3596999999999794e-05, 3.357000000000013e-05, 3.3610999999999364e-05, 3.3110999999998864e-05, 3.309799999999877e-05, 3.3582999999996754e-05, 3.3082999999999724e-05, 3.3596999999999794e-05, 3.3096999999999294e-05, 3.36250000000024e-05, 3.3055000000000584e-05, 3.4110999999999864e-05, 3.359799999999927e-05, 3.3069000000000154e-05, 3.409799999999977e-05]</msg>
<status status="PASS" starttime="20201030 11:51:01.684" endtime="20201030 11:51:01.687"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.675" endtime="20201030 11:51:01.687"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:01.691" endtime="20201030 11:51:01.710"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.689" endtime="20201030 11:51:01.711"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.688" endtime="20201030 11:51:01.711"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.322" endtime="20201030 11:51:01.711"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.322" endtime="20201030 11:51:01.712"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:01.721" endtime="20201030 11:51:01.740"></status>
</kw>
<msg timestamp="20201030 11:51:01.740" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:01.719" endtime="20201030 11:51:01.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:01.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:01.741" endtime="20201030 11:51:01.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:01.744" endtime="20201030 11:51:01.745"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.716" endtime="20201030 11:51:01.746"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.714" endtime="20201030 11:51:01.746"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:01.753" endtime="20201030 11:51:02.039"></status>
</kw>
<msg timestamp="20201030 11:51:02.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021279417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021349583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:01.752" endtime="20201030 11:51:02.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:02.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021279417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021349583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:02.043" endtime="20201030 11:51:02.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:02.051" endtime="20201030 11:51:02.053"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.749" endtime="20201030 11:51:02.054"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.747" endtime="20201030 11:51:02.054"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:02.058" level="INFO">${RESULT} = [{'diff': 7.016599999999998e-05}, {'diff': 5.026400000000125e-05}, {'diff': 5.026399999999778e-05}, {'diff': 5.005600000000318e-05}, {'diff': 5.044400000000018e-05}, {'diff': 5.03339999999991e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:02.055" endtime="20201030 11:51:02.058"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:02.062" level="INFO">${ACCURACY} = {'diff': [7.016599999999998e-05, 5.026400000000125e-05, 5.026399999999778e-05, 5.005600000000318e-05, 5.044400000000018e-05, 5.03339999999991e-05, 5.008299999999938e-05, 4.987500000000131e-05, 5.03059...</msg>
<status status="PASS" starttime="20201030 11:51:02.059" endtime="20201030 11:51:02.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:02.067" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201030 11:51:02.066" endtime="20201030 11:51:02.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:02.073" level="INFO">VALUE: [7.016599999999998e-05, 5.026400000000125e-05, 5.026399999999778e-05, 5.005600000000318e-05, 5.044400000000018e-05, 5.03339999999991e-05, 5.008299999999938e-05, 4.987500000000131e-05, 5.030599999999996e-05, 5.026400000000125e-05, 5.182000000000103e-05, 5.008299999999938e-05, 5.172300000000005e-05, 5.022199999999907e-05, 5.001399999999753e-05, 4.9887999999997934e-05, 5.179099999999895e-05, 4.987499999999784e-05, 5.061199999999849e-05, 5.011200000000146e-05, 5.018000000000036e-05, 5.011100000000199e-05, 4.986099999999827e-05, 5.066600000000129e-05, 5.179199999999842e-05, 5.0165999999997324e-05, 5.051399999999803e-05, 5.018000000000036e-05, 5.069400000000043e-05, 4.990300000000045e-05, 5.037499999999834e-05, 5.019499999999941e-05, 5.025000000000168e-05, 5.018099999999984e-05, 5.030599999999996e-05, 5.047199999999932e-05, 5.174999999999971e-05, 5.063899999999816e-05, 5.029200000000039e-05, 5.049999999999846e-05, 5.0209000000002446e-05, 5.016700000000027e-05, 5.059699999999945e-05, 5.01669999999968e-05, 5.043000000000061e-05, 5.016600000000079e-05, 5.051300000000203e-05, 5.037499999999834e-05, 5.015299999999723e-05, 5.05409999999977e-05]</msg>
<status status="PASS" starttime="20201030 11:51:02.068" endtime="20201030 11:51:02.074"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.063" endtime="20201030 11:51:02.074"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:02.078" endtime="20201030 11:51:02.097"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.076" endtime="20201030 11:51:02.098"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.075" endtime="20201030 11:51:02.098"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.713" endtime="20201030 11:51:02.099"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.712" endtime="20201030 11:51:02.099"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:02.108" endtime="20201030 11:51:02.126"></status>
</kw>
<msg timestamp="20201030 11:51:02.127" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:02.106" endtime="20201030 11:51:02.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:02.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:02.128" endtime="20201030 11:51:02.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:02.130" endtime="20201030 11:51:02.132"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.103" endtime="20201030 11:51:02.133"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.101" endtime="20201030 11:51:02.133"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:02.140" endtime="20201030 11:51:02.426"></status>
</kw>
<msg timestamp="20201030 11:51:02.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020122722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020192903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:02.138" endtime="20201030 11:51:02.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:02.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020122722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020192903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:02.430" endtime="20201030 11:51:02.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:02.439" endtime="20201030 11:51:02.440"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.135" endtime="20201030 11:51:02.441"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.134" endtime="20201030 11:51:02.441"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:02.445" level="INFO">${RESULT} = [{'diff': 7.018100000000249e-05}, {'diff': 5.099999999999896e-05}, {'diff': 5.145900000000023e-05}, {'diff': 5.15140000000025e-05}, {'diff': 5.143100000000109e-05}, {'diff': 5.133300000000063e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:02.442" endtime="20201030 11:51:02.446"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:02.451" level="INFO">${ACCURACY} = {'diff': [7.018100000000249e-05, 5.099999999999896e-05, 5.145900000000023e-05, 5.15140000000025e-05, 5.143100000000109e-05, 5.133300000000063e-05, 5.093100000000059e-05, 5.280600000000246e-05, 5.12919...</msg>
<status status="PASS" starttime="20201030 11:51:02.446" endtime="20201030 11:51:02.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:02.455" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201030 11:51:02.454" endtime="20201030 11:51:02.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:02.458" level="INFO">VALUE: [7.018100000000249e-05, 5.099999999999896e-05, 5.145900000000023e-05, 5.15140000000025e-05, 5.143100000000109e-05, 5.133300000000063e-05, 5.093100000000059e-05, 5.280600000000246e-05, 5.129199999999792e-05, 5.162499999999959e-05, 5.11530000000017e-05, 5.087499999999884e-05, 5.172200000000057e-05, 5.1651999999999254e-05, 5.108300000000038e-05, 5.1486999999999367e-05, 5.143000000000161e-05, 5.11669999999978e-05, 5.099999999999896e-05, 5.112500000000256e-05, 5.156900000000131e-05, 5.163899999999916e-05, 5.154100000000217e-05, 5.099999999999896e-05, 5.15409999999987e-05, 5.109699999999995e-05, 5.112499999999909e-05, 5.168100000000134e-05, 5.154199999999817e-05, 5.112499999999909e-05, 5.155600000000121e-05, 5.132000000000053e-05, 5.115299999999823e-05, 5.134699999999673e-05, 5.116700000000127e-05, 5.2735999999997674e-05, 5.141699999999805e-05, 5.124999999999921e-05, 5.137499999999934e-05, 5.122200000000007e-05, 5.086199999999874e-05, 5.086200000000221e-05, 5.131899999999759e-05, 5.1429999999998144e-05, 5.129099999999845e-05, 5.168000000000186e-05, 5.174999999999971e-05, 5.094400000000068e-05, 5.116600000000179e-05, 5.280500000000299e-05]</msg>
<status status="PASS" starttime="20201030 11:51:02.456" endtime="20201030 11:51:02.459"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.451" endtime="20201030 11:51:02.459"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:02.463" endtime="20201030 11:51:02.482"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.461" endtime="20201030 11:51:02.483"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.460" endtime="20201030 11:51:02.483"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.100" endtime="20201030 11:51:02.483"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.099" endtime="20201030 11:51:02.484"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:02.493" endtime="20201030 11:51:02.511"></status>
</kw>
<msg timestamp="20201030 11:51:02.512" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:02.491" endtime="20201030 11:51:02.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:02.514" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:02.513" endtime="20201030 11:51:02.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:02.516" endtime="20201030 11:51:02.517"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.488" endtime="20201030 11:51:02.518"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.486" endtime="20201030 11:51:02.518"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:02.525" endtime="20201030 11:51:02.812"></status>
</kw>
<msg timestamp="20201030 11:51:02.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020164569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020234736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:02.523" endtime="20201030 11:51:02.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:02.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020164569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020234736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:02.817" endtime="20201030 11:51:02.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:02.825" endtime="20201030 11:51:02.827"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.521" endtime="20201030 11:51:02.827"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.519" endtime="20201030 11:51:02.828"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:02.832" level="INFO">${RESULT} = [{'diff': 7.016699999999945e-05}, {'diff': 5.241700000000252e-05}, {'diff': 5.250000000000046e-05}, {'diff': 5.269500000000191e-05}, {'diff': 5.373600000000214e-05}, {'diff': 5.20409999999992e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:02.828" endtime="20201030 11:51:02.832"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:02.836" level="INFO">${ACCURACY} = {'diff': [7.016699999999945e-05, 5.241700000000252e-05, 5.250000000000046e-05, 5.269500000000191e-05, 5.373600000000214e-05, 5.20409999999992e-05, 5.247299999999733e-05, 5.2680000000002863e-05, 5.2110...</msg>
<status status="PASS" starttime="20201030 11:51:02.833" endtime="20201030 11:51:02.836"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:02.841" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201030 11:51:02.840" endtime="20201030 11:51:02.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:02.843" level="INFO">VALUE: [7.016699999999945e-05, 5.241700000000252e-05, 5.250000000000046e-05, 5.269500000000191e-05, 5.373600000000214e-05, 5.20409999999992e-05, 5.247299999999733e-05, 5.2680000000002863e-05, 5.211099999999705e-05, 5.197200000000082e-05, 5.219400000000193e-05, 5.2679999999999394e-05, 5.237500000000034e-05, 5.219500000000141e-05, 5.186100000000027e-05, 5.230599999999849e-05, 5.2679999999999394e-05, 5.3735999999998674e-05, 5.229200000000239e-05, 5.222300000000055e-05, 5.263900000000016e-05, 5.272200000000157e-05, 5.2735999999997674e-05, 5.230600000000196e-05, 5.254200000000264e-05, 5.205599999999824e-05, 5.230599999999849e-05, 5.268100000000234e-05, 5.3735999999998674e-05, 5.2665999999999824e-05, 5.26669999999993e-05, 5.1957999999997784e-05, 5.208300000000138e-05, 5.199999999999996e-05, 5.2680000000002863e-05, 5.204100000000267e-05, 5.380500000000052e-05, 5.273600000000114e-05, 5.190299999999898e-05, 5.2471999999997854e-05, 5.204199999999867e-05, 5.243100000000209e-05, 5.3763999999997814e-05, 5.194500000000116e-05, 5.186100000000027e-05, 5.237500000000034e-05, 5.240299999999948e-05, 5.226399999999978e-05, 5.225000000000021e-05, 5.209700000000095e-05]</msg>
<status status="PASS" starttime="20201030 11:51:02.842" endtime="20201030 11:51:02.844"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.837" endtime="20201030 11:51:02.845"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:02.848" endtime="20201030 11:51:02.868"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.847" endtime="20201030 11:51:02.868"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.846" endtime="20201030 11:51:02.869"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.485" endtime="20201030 11:51:02.869"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.484" endtime="20201030 11:51:02.869"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:02.878" endtime="20201030 11:51:02.898"></status>
</kw>
<msg timestamp="20201030 11:51:02.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:02.876" endtime="20201030 11:51:02.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:02.901" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:02.900" endtime="20201030 11:51:02.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:02.902" endtime="20201030 11:51:02.904"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.874" endtime="20201030 11:51:02.904"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.872" endtime="20201030 11:51:02.905"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:02.912" endtime="20201030 11:51:03.197"></status>
</kw>
<msg timestamp="20201030 11:51:03.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021110319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021180486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:02.910" endtime="20201030 11:51:03.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021110319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021180486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:03.202" endtime="20201030 11:51:03.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.210" endtime="20201030 11:51:03.212"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.907" endtime="20201030 11:51:03.213"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.905" endtime="20201030 11:51:03.213"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:03.217" level="INFO">${RESULT} = [{'diff': 7.016699999999945e-05}, {'diff': 5.305599999999924e-05}, {'diff': 5.3179999999999894e-05}, {'diff': 5.293099999999912e-05}, {'diff': 5.331899999999959e-05}, {'diff': 5.354099999999723e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:51:03.214" endtime="20201030 11:51:03.217"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:03.221" level="INFO">${ACCURACY} = {'diff': [7.016699999999945e-05, 5.305599999999924e-05, 5.3179999999999894e-05, 5.293099999999912e-05, 5.331899999999959e-05, 5.354099999999723e-05, 5.331899999999959e-05, 5.2929999999999644e-05, 5.37...</msg>
<status status="PASS" starttime="20201030 11:51:03.218" endtime="20201030 11:51:03.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.226" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201030 11:51:03.225" endtime="20201030 11:51:03.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.228" level="INFO">VALUE: [7.016699999999945e-05, 5.305599999999924e-05, 5.3179999999999894e-05, 5.293099999999912e-05, 5.331899999999959e-05, 5.354099999999723e-05, 5.331899999999959e-05, 5.2929999999999644e-05, 5.3735999999998674e-05, 5.300000000000096e-05, 5.358299999999941e-05, 5.325000000000121e-05, 5.480499999999805e-05, 5.315300000000023e-05, 5.318099999999937e-05, 5.338900000000091e-05, 5.482000000000056e-05, 5.28470000000017e-05, 5.483400000000013e-05, 5.323600000000164e-05, 5.304199999999967e-05, 5.306900000000281e-05, 5.293099999999912e-05, 5.4763999999998814e-05, 5.3707999999999534e-05, 5.330600000000296e-05, 5.354200000000017e-05, 5.320899999999851e-05, 5.286200000000074e-05, 5.3193999999999464e-05, 5.3721999999999104e-05, 5.315300000000023e-05, 5.286100000000127e-05, 5.481900000000109e-05, 5.368099999999987e-05, 5.48609999999998e-05, 5.3430000000000144e-05, 5.290299999999998e-05, 5.475000000000271e-05, 5.4749999999999244e-05, 5.358299999999941e-05, 5.2971999999998354e-05, 5.4749999999999244e-05, 5.291699999999955e-05, 5.372200000000257e-05, 5.318099999999937e-05, 5.312500000000109e-05, 5.355599999999974e-05, 5.305599999999924e-05, 5.283399999999813e-05]</msg>
<status status="PASS" starttime="20201030 11:51:03.227" endtime="20201030 11:51:03.230"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.222" endtime="20201030 11:51:03.231"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:03.235" endtime="20201030 11:51:03.254"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.233" endtime="20201030 11:51:03.254"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.232" endtime="20201030 11:51:03.255"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.870" endtime="20201030 11:51:03.255"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.869" endtime="20201030 11:51:03.255"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.264" endtime="20201030 11:51:03.283"></status>
</kw>
<msg timestamp="20201030 11:51:03.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:03.263" endtime="20201030 11:51:03.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.286" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:03.285" endtime="20201030 11:51:03.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.287" endtime="20201030 11:51:03.289"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.260" endtime="20201030 11:51:03.290"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.258" endtime="20201030 11:51:03.290"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.297" endtime="20201030 11:51:03.582"></status>
</kw>
<msg timestamp="20201030 11:51:03.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020118361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020188528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:03.295" endtime="20201030 11:51:03.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020118361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020188528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:03.587" endtime="20201030 11:51:03.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.595" endtime="20201030 11:51:03.597"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.292" endtime="20201030 11:51:03.597"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.291" endtime="20201030 11:51:03.598"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:03.602" level="INFO">${RESULT} = [{'diff': 7.016699999999945e-05}, {'diff': 5.4235999999999174e-05}, {'diff': 5.3957999999999784e-05}, {'diff': 5.419499999999994e-05}, {'diff': 5.418100000000037e-05}, {'diff': 5.434699999999973e-05},...</msg>
<status status="PASS" starttime="20201030 11:51:03.599" endtime="20201030 11:51:03.602"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:03.607" level="INFO">${ACCURACY} = {'diff': [7.016699999999945e-05, 5.4235999999999174e-05, 5.3957999999999784e-05, 5.419499999999994e-05, 5.418100000000037e-05, 5.434699999999973e-05, 5.4735999999999674e-05, 5.582000000000156e-05, 5.4...</msg>
<status status="PASS" starttime="20201030 11:51:03.603" endtime="20201030 11:51:03.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.612" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201030 11:51:03.611" endtime="20201030 11:51:03.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.614" level="INFO">VALUE: [7.016699999999945e-05, 5.4235999999999174e-05, 5.3957999999999784e-05, 5.419499999999994e-05, 5.418100000000037e-05, 5.434699999999973e-05, 5.4735999999999674e-05, 5.582000000000156e-05, 5.455600000000074e-05, 5.475000000000271e-05, 5.408399999999938e-05, 5.5791999999998954e-05, 5.411099999999905e-05, 5.390300000000098e-05, 5.406900000000034e-05, 5.40419999999972e-05, 5.3930000000000644e-05, 5.427699999999841e-05, 5.4151999999998285e-05, 5.579099999999948e-05, 5.580499999999905e-05, 5.433300000000016e-05, 5.430500000000102e-05, 5.3957999999999784e-05, 5.461099999999955e-05, 5.4499999999998994e-05, 5.405600000000024e-05, 5.437499999999887e-05, 5.404200000000067e-05, 5.3971999999999354e-05, 5.455600000000074e-05, 5.4513999999998564e-05, 5.5777999999999384e-05, 5.393100000000012e-05, 5.469500000000044e-05, 5.5777999999999384e-05, 5.4637999999999215e-05, 5.404200000000067e-05, 5.44869999999989e-05, 5.583300000000166e-05, 5.430500000000102e-05, 5.398600000000239e-05, 5.5735999999997204e-05, 5.388900000000141e-05, 5.5777999999999384e-05, 5.431900000000059e-05, 5.412499999999862e-05, 5.4680000000001394e-05, 5.5750000000000244e-05, 5.455600000000074e-05]</msg>
<status status="PASS" starttime="20201030 11:51:03.613" endtime="20201030 11:51:03.621"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.608" endtime="20201030 11:51:03.622"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:03.626" endtime="20201030 11:51:03.645"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.624" endtime="20201030 11:51:03.646"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.623" endtime="20201030 11:51:03.646"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.256" endtime="20201030 11:51:03.646"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.256" endtime="20201030 11:51:03.647"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.656" endtime="20201030 11:51:03.675"></status>
</kw>
<msg timestamp="20201030 11:51:03.675" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:03.654" endtime="20201030 11:51:03.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:03.676" endtime="20201030 11:51:03.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.679" endtime="20201030 11:51:03.681"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.651" endtime="20201030 11:51:03.681"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.649" endtime="20201030 11:51:03.682"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.688" endtime="20201030 11:51:03.975"></status>
</kw>
<msg timestamp="20201030 11:51:03.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020266667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020336819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:03.687" endtime="20201030 11:51:03.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020266667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020336819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:03.979" endtime="20201030 11:51:03.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.988" endtime="20201030 11:51:03.990"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.684" endtime="20201030 11:51:03.990"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.682" endtime="20201030 11:51:03.991"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:03.994" level="INFO">${RESULT} = [{'diff': 7.015200000000041e-05}, {'diff': 5.5472000000000854e-05}, {'diff': 5.683399999999866e-05}, {'diff': 5.543100000000162e-05}, {'diff': 5.4985999999999924e-05}, {'diff': 5.538899999999944e-05},...</msg>
<status status="PASS" starttime="20201030 11:51:03.991" endtime="20201030 11:51:03.995"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:03.999" level="INFO">${ACCURACY} = {'diff': [7.015200000000041e-05, 5.5472000000000854e-05, 5.683399999999866e-05, 5.543100000000162e-05, 5.4985999999999924e-05, 5.538899999999944e-05, 5.490300000000198e-05, 5.507000000000081e-05, 5.53...</msg>
<status status="PASS" starttime="20201030 11:51:03.996" endtime="20201030 11:51:03.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.003" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201030 11:51:04.002" endtime="20201030 11:51:04.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.006" level="INFO">VALUE: [7.015200000000041e-05, 5.5472000000000854e-05, 5.683399999999866e-05, 5.543100000000162e-05, 5.4985999999999924e-05, 5.538899999999944e-05, 5.490300000000198e-05, 5.507000000000081e-05, 5.534700000000073e-05, 5.5013999999999064e-05, 5.561200000000002e-05, 5.487499999999937e-05, 5.6750000000001244e-05, 5.5693999999998495e-05, 5.5249999999999744e-05, 5.552699999999966e-05, 5.537499999999987e-05, 5.4999999999999494e-05, 5.4943999999997745e-05, 5.526400000000278e-05, 5.5180000000001894e-05, 5.6777999999996914e-05, 5.531999999999759e-05, 5.481899999999762e-05, 5.6735999999998205e-05, 5.51670000000018e-05, 5.538899999999944e-05, 5.5541999999998704e-05, 5.507000000000081e-05, 5.568100000000187e-05, 5.5736000000000674e-05, 5.541699999999858e-05, 5.6750000000001244e-05, 5.493100000000112e-05, 5.677700000000091e-05, 5.537499999999987e-05, 5.4930000000001644e-05, 5.5222000000000604e-05, 5.5472000000000854e-05, 5.5680000000002394e-05, 5.5527999999999134e-05, 5.4999999999999494e-05, 5.5721999999997635e-05, 5.558299999999794e-05, 5.561100000000055e-05, 5.5208000000001034e-05, 5.5486000000000424e-05, 5.494499999999722e-05, 5.561100000000055e-05, 5.525000000000321e-05]</msg>
<status status="PASS" starttime="20201030 11:51:04.005" endtime="20201030 11:51:04.007"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.000" endtime="20201030 11:51:04.007"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:04.011" endtime="20201030 11:51:04.031"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.010" endtime="20201030 11:51:04.031"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.008" endtime="20201030 11:51:04.032"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.647" endtime="20201030 11:51:04.032"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.647" endtime="20201030 11:51:04.032"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.041" endtime="20201030 11:51:04.061"></status>
</kw>
<msg timestamp="20201030 11:51:04.062" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:04.040" endtime="20201030 11:51:04.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:04.063" endtime="20201030 11:51:04.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.065" endtime="20201030 11:51:04.067"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.037" endtime="20201030 11:51:04.068"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.035" endtime="20201030 11:51:04.068"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.075" endtime="20201030 11:51:04.360"></status>
</kw>
<msg timestamp="20201030 11:51:04.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021351472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021421625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:04.073" endtime="20201030 11:51:04.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021351472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021421625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:04.365" endtime="20201030 11:51:04.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.373" endtime="20201030 11:51:04.375"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.071" endtime="20201030 11:51:04.376"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.069" endtime="20201030 11:51:04.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:04.380" level="INFO">${RESULT} = [{'diff': 7.015299999999988e-05}, {'diff': 5.590299999999951e-05}, {'diff': 5.659699999999851e-05}, {'diff': 5.588899999999994e-05}, {'diff': 5.6041999999999204e-05}, {'diff': 5.665300000000026e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:51:04.377" endtime="20201030 11:51:04.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:04.384" level="INFO">${ACCURACY} = {'diff': [7.015299999999988e-05, 5.590299999999951e-05, 5.659699999999851e-05, 5.588899999999994e-05, 5.6041999999999204e-05, 5.665300000000026e-05, 5.6041999999999204e-05, 5.643099999999915e-05, 5.61...</msg>
<status status="PASS" starttime="20201030 11:51:04.381" endtime="20201030 11:51:04.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.389" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201030 11:51:04.388" endtime="20201030 11:51:04.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.392" level="INFO">VALUE: [7.015299999999988e-05, 5.590299999999951e-05, 5.659699999999851e-05, 5.588899999999994e-05, 5.6041999999999204e-05, 5.665300000000026e-05, 5.6041999999999204e-05, 5.643099999999915e-05, 5.612500000000062e-05, 5.630600000000249e-05, 5.609800000000095e-05, 5.656899999999937e-05, 5.6541999999999704e-05, 5.7764000000001814e-05, 5.6000000000000494e-05, 5.6250000000000744e-05, 5.606899999999887e-05, 5.663900000000069e-05, 5.612500000000062e-05, 5.6179999999999425e-05, 5.661099999999808e-05, 5.6055999999998773e-05, 5.61809999999989e-05, 5.658400000000188e-05, 5.6277999999999884e-05, 5.7750000000002244e-05, 5.6041999999999204e-05, 5.7763999999998344e-05, 5.6429999999999675e-05, 5.608400000000138e-05, 5.630500000000302e-05, 5.7763999999998344e-05, 5.647300000000133e-05, 5.648699999999743e-05, 5.66809999999994e-05, 5.6679999999999925e-05, 5.6500000000000994e-05, 5.6179999999999425e-05, 5.7750000000002244e-05, 5.6458000000002284e-05, 5.7778000000001384e-05, 5.611099999999758e-05, 5.6236000000001174e-05, 5.588899999999994e-05, 5.6250000000000744e-05, 5.613900000000019e-05, 5.61809999999989e-05, 5.594499999999822e-05, 5.6750000000001244e-05, 5.58610000000008e-05]</msg>
<status status="PASS" starttime="20201030 11:51:04.390" endtime="20201030 11:51:04.393"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.385" endtime="20201030 11:51:04.394"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:04.398" endtime="20201030 11:51:04.417"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.396" endtime="20201030 11:51:04.418"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.395" endtime="20201030 11:51:04.418"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.033" endtime="20201030 11:51:04.418"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.032" endtime="20201030 11:51:04.419"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.427" endtime="20201030 11:51:04.446"></status>
</kw>
<msg timestamp="20201030 11:51:04.447" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:04.426" endtime="20201030 11:51:04.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.450" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:04.448" endtime="20201030 11:51:04.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.451" endtime="20201030 11:51:04.452"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.423" endtime="20201030 11:51:04.453"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.421" endtime="20201030 11:51:04.453"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.460" endtime="20201030 11:51:04.745"></status>
</kw>
<msg timestamp="20201030 11:51:04.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020154597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020224764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:04.458" endtime="20201030 11:51:04.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020154597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020224764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:04.750" endtime="20201030 11:51:04.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.758" endtime="20201030 11:51:04.760"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.456" endtime="20201030 11:51:04.760"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.454" endtime="20201030 11:51:04.761"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:04.765" level="INFO">${RESULT} = [{'diff': 7.016699999999945e-05}, {'diff': 5.706899999999987e-05}, {'diff': 5.7000000000001494e-05}, {'diff': 5.7014000000001064e-05}, {'diff': 5.7014000000001064e-05}, {'diff': 5.716699999999686e-05}...</msg>
<status status="PASS" starttime="20201030 11:51:04.762" endtime="20201030 11:51:04.765"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:04.770" level="INFO">${ACCURACY} = {'diff': [7.016699999999945e-05, 5.706899999999987e-05, 5.7000000000001494e-05, 5.7014000000001064e-05, 5.7014000000001064e-05, 5.716699999999686e-05, 5.712500000000162e-05, 5.7250000000001744e-05, 5....</msg>
<status status="PASS" starttime="20201030 11:51:04.766" endtime="20201030 11:51:04.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.775" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201030 11:51:04.774" endtime="20201030 11:51:04.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.777" level="INFO">VALUE: [7.016699999999945e-05, 5.706899999999987e-05, 5.7000000000001494e-05, 5.7014000000001064e-05, 5.7014000000001064e-05, 5.716699999999686e-05, 5.712500000000162e-05, 5.7250000000001744e-05, 5.7556000000000274e-05, 5.7514000000001564e-05, 5.6986000000001924e-05, 5.769499999999997e-05, 5.744499999999972e-05, 5.7694000000000495e-05, 5.719500000000294e-05, 5.752699999999819e-05, 5.743100000000015e-05, 5.881899999999815e-05, 5.7708000000000065e-05, 5.754100000000123e-05, 5.756900000000037e-05, 5.7513999999998094e-05, 5.6902000000001035e-05, 5.8791999999998484e-05, 5.736099999999883e-05, 5.766700000000083e-05, 5.6985999999998455e-05, 5.7306000000000024e-05, 5.691700000000008e-05, 5.76810000000004e-05, 5.6971999999998885e-05, 5.7042000000000204e-05, 5.711100000000205e-05, 5.743100000000015e-05, 5.7735999999999205e-05, 5.769499999999997e-05, 5.7250000000001744e-05, 5.712499999999815e-05, 5.8777999999998914e-05, 5.701299999999812e-05, 5.7166000000000855e-05, 5.70550000000003e-05, 5.712499999999815e-05, 5.73749999999984e-05, 5.7000000000001494e-05, 5.75550000000008e-05, 5.686099999999833e-05, 5.881900000000162e-05, 5.7471999999999385e-05, 5.76810000000004e-05]</msg>
<status status="PASS" starttime="20201030 11:51:04.776" endtime="20201030 11:51:04.778"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.771" endtime="20201030 11:51:04.779"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:04.782" endtime="20201030 11:51:04.802"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.781" endtime="20201030 11:51:04.802"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.780" endtime="20201030 11:51:04.803"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.420" endtime="20201030 11:51:04.803"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.419" endtime="20201030 11:51:04.803"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.812" endtime="20201030 11:51:04.830"></status>
</kw>
<msg timestamp="20201030 11:51:04.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:04.811" endtime="20201030 11:51:04.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:04.832" endtime="20201030 11:51:04.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.835" endtime="20201030 11:51:04.836"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.808" endtime="20201030 11:51:04.837"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.806" endtime="20201030 11:51:04.837"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.844" endtime="20201030 11:51:05.130"></status>
</kw>
<msg timestamp="20201030 11:51:05.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020187708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020257903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:04.842" endtime="20201030 11:51:05.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020187708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020257903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:05.135" endtime="20201030 11:51:05.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.143" endtime="20201030 11:51:05.145"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.840" endtime="20201030 11:51:05.145"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.838" endtime="20201030 11:51:05.146"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:05.150" level="INFO">${RESULT} = [{'diff': 7.019500000000206e-05}, {'diff': 5.83749999999994e-05}, {'diff': 5.9792000000002954e-05}, {'diff': 5.869500000000097e-05}, {'diff': 5.9735999999997735e-05}, {'diff': 5.8208000000000565e-05},...</msg>
<status status="PASS" starttime="20201030 11:51:05.147" endtime="20201030 11:51:05.150"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:05.154" level="INFO">${ACCURACY} = {'diff': [7.019500000000206e-05, 5.83749999999994e-05, 5.9792000000002954e-05, 5.869500000000097e-05, 5.9735999999997735e-05, 5.8208000000000565e-05, 5.869500000000097e-05, 5.812499999999915e-05, 5.79...</msg>
<status status="PASS" starttime="20201030 11:51:05.151" endtime="20201030 11:51:05.155"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.159" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201030 11:51:05.158" endtime="20201030 11:51:05.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.161" level="INFO">VALUE: [7.019500000000206e-05, 5.83749999999994e-05, 5.9792000000002954e-05, 5.869500000000097e-05, 5.9735999999997735e-05, 5.8208000000000565e-05, 5.869500000000097e-05, 5.812499999999915e-05, 5.794500000000022e-05, 5.790300000000151e-05, 5.8263999999998844e-05, 5.838900000000244e-05, 5.856900000000137e-05, 5.861100000000008e-05, 5.804100000000173e-05, 5.8180000000001425e-05, 5.8263999999998844e-05, 5.804099999999826e-05, 5.7958000000000315e-05, 5.829100000000198e-05, 5.8179999999997956e-05, 5.856900000000137e-05, 5.863899999999922e-05, 5.8208000000000565e-05, 5.8499999999999525e-05, 5.841700000000158e-05, 5.8305999999997554e-05, 5.836099999999983e-05, 5.8513999999999095e-05, 5.788899999999847e-05, 5.880499999999858e-05, 5.790299999999804e-05, 5.811099999999958e-05, 5.7806000000000524e-05, 5.865299999999879e-05, 5.8235999999999705e-05, 5.8749999999999775e-05, 5.8471999999996915e-05, 5.8680000000001925e-05, 5.9749999999997305e-05, 5.858300000000094e-05, 5.812499999999915e-05, 5.8097999999999483e-05, 5.784699999999976e-05, 5.840300000000201e-05, 5.981899999999915e-05, 5.8263999999998844e-05, 5.78610000000028e-05, 5.81810000000009e-05, 5.841700000000158e-05]</msg>
<status status="PASS" starttime="20201030 11:51:05.160" endtime="20201030 11:51:05.162"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.155" endtime="20201030 11:51:05.163"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:05.167" endtime="20201030 11:51:05.186"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.165" endtime="20201030 11:51:05.187"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.164" endtime="20201030 11:51:05.187"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.804" endtime="20201030 11:51:05.187"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.804" endtime="20201030 11:51:05.187"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.197" endtime="20201030 11:51:05.217"></status>
</kw>
<msg timestamp="20201030 11:51:05.218" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:05.195" endtime="20201030 11:51:05.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.220" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:05.219" endtime="20201030 11:51:05.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.221" endtime="20201030 11:51:05.223"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.193" endtime="20201030 11:51:05.223"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.190" endtime="20201030 11:51:05.224"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.231" endtime="20201030 11:51:05.516"></status>
</kw>
<msg timestamp="20201030 11:51:05.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022288944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022359111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:05.229" endtime="20201030 11:51:05.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022288944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022359111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:05.521" endtime="20201030 11:51:05.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.529" endtime="20201030 11:51:05.531"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.226" endtime="20201030 11:51:05.531"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.224" endtime="20201030 11:51:05.532"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:05.536" level="INFO">${RESULT} = [{'diff': 7.016699999999945e-05}, {'diff': 5.88749999999999e-05}, {'diff': 5.9736000000001205e-05}, {'diff': 5.969500000000197e-05}, {'diff': 5.940299999999954e-05}, {'diff': 6.0792000000000485e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:51:05.532" endtime="20201030 11:51:05.536"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:05.540" level="INFO">${ACCURACY} = {'diff': [7.016699999999945e-05, 5.88749999999999e-05, 5.9736000000001205e-05, 5.969500000000197e-05, 5.940299999999954e-05, 6.0792000000000485e-05, 5.9320000000001594e-05, 5.8833999999997194e-05, 5.9...</msg>
<status status="PASS" starttime="20201030 11:51:05.537" endtime="20201030 11:51:05.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.545" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201030 11:51:05.543" endtime="20201030 11:51:05.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.550" level="INFO">VALUE: [7.016699999999945e-05, 5.88749999999999e-05, 5.9736000000001205e-05, 5.969500000000197e-05, 5.940299999999954e-05, 6.0792000000000485e-05, 5.9320000000001594e-05, 5.8833999999997194e-05, 5.961100000000108e-05, 5.9514000000000095e-05, 5.9693999999999026e-05, 5.9486000000000955e-05, 5.937499999999693e-05, 5.962500000000065e-05, 5.8943999999998276e-05, 6.077700000000144e-05, 6.081900000000015e-05, 5.8930000000002175e-05, 5.912500000000015e-05, 5.9444000000002245e-05, 5.930499999999908e-05, 5.9334000000001164e-05, 6.0792000000000485e-05, 5.9527999999999665e-05, 5.934700000000126e-05, 5.9514000000000095e-05, 5.912500000000015e-05, 5.891699999999861e-05, 5.8943999999998276e-05, 5.9319999999998124e-05, 5.893100000000165e-05, 5.916699999999886e-05, 5.9208000000001565e-05, 5.916699999999886e-05, 5.936100000000083e-05, 5.9486000000000955e-05, 5.9444000000002245e-05, 5.9179999999998956e-05, 6.0722000000002635e-05, 5.906900000000187e-05, 6.0680000000000456e-05, 5.931899999999865e-05, 5.93750000000004e-05, 5.959700000000151e-05, 5.88749999999999e-05, 5.9472000000001385e-05, 5.8972000000000885e-05, 6.0806000000000054e-05, 5.9320000000001594e-05, 5.9000000000000025e-05]</msg>
<status status="PASS" starttime="20201030 11:51:05.546" endtime="20201030 11:51:05.551"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.541" endtime="20201030 11:51:05.552"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:05.556" endtime="20201030 11:51:05.575"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.554" endtime="20201030 11:51:05.576"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.553" endtime="20201030 11:51:05.576"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.188" endtime="20201030 11:51:05.576"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.188" endtime="20201030 11:51:05.577"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.586" endtime="20201030 11:51:05.605"></status>
</kw>
<msg timestamp="20201030 11:51:05.605" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:05.584" endtime="20201030 11:51:05.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:05.606" endtime="20201030 11:51:05.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.609" endtime="20201030 11:51:05.611"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.581" endtime="20201030 11:51:05.611"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.579" endtime="20201030 11:51:05.611"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.618" endtime="20201030 11:51:05.905"></status>
</kw>
<msg timestamp="20201030 11:51:05.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020100431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020170597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:05.616" endtime="20201030 11:51:05.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020100431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020170597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:05.909" endtime="20201030 11:51:05.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.918" endtime="20201030 11:51:05.919"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.614" endtime="20201030 11:51:05.920"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.612" endtime="20201030 11:51:05.920"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:05.924" level="INFO">${RESULT} = [{'diff': 7.016599999999998e-05}, {'diff': 6.0722000000002635e-05}, {'diff': 6.037499999999793e-05}, {'diff': 6.00689999999994e-05}, {'diff': 6.0041999999999734e-05}, {'diff': 5.981900000000262e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:51:05.921" endtime="20201030 11:51:05.925"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:05.930" level="INFO">${ACCURACY} = {'diff': [7.016599999999998e-05, 6.0722000000002635e-05, 6.037499999999793e-05, 6.00689999999994e-05, 6.0041999999999734e-05, 5.981900000000262e-05, 6.065299999999732e-05, 6.015300000000029e-05, 6.059...</msg>
<status status="PASS" starttime="20201030 11:51:05.925" endtime="20201030 11:51:05.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.934" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201030 11:51:05.933" endtime="20201030 11:51:05.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.937" level="INFO">VALUE: [7.016599999999998e-05, 6.0722000000002635e-05, 6.037499999999793e-05, 6.00689999999994e-05, 6.0041999999999734e-05, 5.981900000000262e-05, 6.065299999999732e-05, 6.015300000000029e-05, 6.059700000000251e-05, 6.183300000000072e-05, 6.0555999999999804e-05, 5.990300000000004e-05, 6.0250000000001275e-05, 6.0528000000000665e-05, 6.0166000000000386e-05, 6.012500000000115e-05, 6.068099999999993e-05, 5.9929999999999706e-05, 6.180500000000158e-05, 6.036100000000183e-05, 6.055500000000033e-05, 6.03750000000014e-05, 6.036099999999836e-05, 5.984700000000176e-05, 6.0722000000002635e-05, 6.0444000000003245e-05, 6.0179999999999956e-05, 6.0443999999999776e-05, 6.0764000000001345e-05, 6.066700000000036e-05, 6.172200000000017e-05, 6.0000000000001025e-05, 6.036099999999836e-05, 6.016699999999986e-05, 6.062500000000165e-05, 6.0194000000002995e-05, 6.066699999999689e-05, 6.0555999999999804e-05, 6.0306000000003024e-05, 6.176399999999888e-05, 6.0749999999998305e-05, 6.008299999999897e-05, 6.009700000000201e-05, 6.0666000000000886e-05, 6.0013999999997125e-05, 6.031899999999965e-05, 6.176399999999888e-05, 6.016699999999986e-05, 5.984699999999829e-05, 6.061099999999861e-05]</msg>
<status status="PASS" starttime="20201030 11:51:05.935" endtime="20201030 11:51:05.938"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.930" endtime="20201030 11:51:05.938"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:05.942" endtime="20201030 11:51:05.961"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.940" endtime="20201030 11:51:05.962"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.939" endtime="20201030 11:51:05.962"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.577" endtime="20201030 11:51:05.963"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.577" endtime="20201030 11:51:05.963"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.972" endtime="20201030 11:51:05.990"></status>
</kw>
<msg timestamp="20201030 11:51:05.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:05.970" endtime="20201030 11:51:05.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.993" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:05.992" endtime="20201030 11:51:05.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.994" endtime="20201030 11:51:05.996"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.967" endtime="20201030 11:51:05.996"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.965" endtime="20201030 11:51:05.997"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:06.003" endtime="20201030 11:51:06.291"></status>
</kw>
<msg timestamp="20201030 11:51:06.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020107069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020177236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:06.002" endtime="20201030 11:51:06.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:06.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020107069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020177236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:06.295" endtime="20201030 11:51:06.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:06.303" endtime="20201030 11:51:06.305"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.999" endtime="20201030 11:51:06.305"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.997" endtime="20201030 11:51:06.306"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:06.310" level="INFO">${RESULT} = [{'diff': 7.016699999999945e-05}, {'diff': 6.140300000000154e-05}, {'diff': 6.143100000000068e-05}, {'diff': 6.10560000000003e-05}, {'diff': 6.170900000000007e-05}, {'diff': 6.093099999999671e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:06.306" endtime="20201030 11:51:06.310"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:06.314" level="INFO">${ACCURACY} = {'diff': [7.016699999999945e-05, 6.140300000000154e-05, 6.143100000000068e-05, 6.10560000000003e-05, 6.170900000000007e-05, 6.093099999999671e-05, 6.1013999999998125e-05, 6.161099999999961e-05, 6.0972...</msg>
<status status="PASS" starttime="20201030 11:51:06.311" endtime="20201030 11:51:06.314"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:06.319" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201030 11:51:06.318" endtime="20201030 11:51:06.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:06.321" level="INFO">VALUE: [7.016699999999945e-05, 6.140300000000154e-05, 6.143100000000068e-05, 6.10560000000003e-05, 6.170900000000007e-05, 6.093099999999671e-05, 6.1013999999998125e-05, 6.161099999999961e-05, 6.097299999999889e-05, 6.141699999999764e-05, 6.13750000000024e-05, 6.086099999999886e-05, 6.14300000000012e-05, 6.151399999999863e-05, 6.161099999999961e-05, 6.088900000000147e-05, 6.145800000000035e-05, 6.0999999999998555e-05, 6.136099999999936e-05, 6.17080000000006e-05, 6.08750000000019e-05, 6.0999999999998555e-05, 6.112500000000215e-05, 6.10560000000003e-05, 6.280599999999859e-05, 6.104200000000073e-05, 6.168100000000093e-05, 6.12360000000027e-05, 6.132000000000012e-05, 6.125000000000227e-05, 6.161099999999961e-05, 6.136099999999936e-05, 6.148599999999949e-05, 6.119400000000053e-05, 6.086099999999886e-05, 6.112499999999868e-05, 6.111099999999911e-05, 6.08750000000019e-05, 6.1028000000001165e-05, 6.111100000000258e-05, 6.084699999999929e-05, 6.104200000000073e-05, 6.17080000000006e-05, 6.286100000000086e-05, 6.168100000000093e-05, 6.162499999999918e-05, 6.0971999999999416e-05, 6.127799999999795e-05, 6.112499999999868e-05, 6.136099999999936e-05]</msg>
<status status="PASS" starttime="20201030 11:51:06.320" endtime="20201030 11:51:06.322"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.315" endtime="20201030 11:51:06.323"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:06.326" endtime="20201030 11:51:06.346"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.325" endtime="20201030 11:51:06.346"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.324" endtime="20201030 11:51:06.347"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.964" endtime="20201030 11:51:06.347"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.963" endtime="20201030 11:51:06.347"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:06.356" endtime="20201030 11:51:06.376"></status>
</kw>
<msg timestamp="20201030 11:51:06.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:06.354" endtime="20201030 11:51:06.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:06.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:06.378" endtime="20201030 11:51:06.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:06.381" endtime="20201030 11:51:06.382"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.352" endtime="20201030 11:51:06.383"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.350" endtime="20201030 11:51:06.383"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:06.390" endtime="20201030 11:51:06.676"></status>
</kw>
<msg timestamp="20201030 11:51:06.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021237722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021308833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:06.388" endtime="20201030 11:51:06.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:06.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021237722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021308833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:06.680" endtime="20201030 11:51:06.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:06.688" endtime="20201030 11:51:06.690"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.386" endtime="20201030 11:51:06.691"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.384" endtime="20201030 11:51:06.691"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:06.695" level="INFO">${RESULT} = [{'diff': 7.11109999999987e-05}, {'diff': 6.202800000000216e-05}, {'diff': 6.20279999999987e-05}, {'diff': 6.236099999999689e-05}, {'diff': 6.229200000000198e-05}, {'diff': 6.268099999999846e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:51:06.692" endtime="20201030 11:51:06.695"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:06.699" level="INFO">${ACCURACY} = {'diff': [7.11109999999987e-05, 6.202800000000216e-05, 6.20279999999987e-05, 6.236099999999689e-05, 6.229200000000198e-05, 6.268099999999846e-05, 6.227800000000241e-05, 6.247200000000092e-05, 6.248699...</msg>
<status status="PASS" starttime="20201030 11:51:06.696" endtime="20201030 11:51:06.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:06.704" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201030 11:51:06.703" endtime="20201030 11:51:06.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:06.706" level="INFO">VALUE: [7.11109999999987e-05, 6.202800000000216e-05, 6.20279999999987e-05, 6.236099999999689e-05, 6.229200000000198e-05, 6.268099999999846e-05, 6.227800000000241e-05, 6.247200000000092e-05, 6.248699999999996e-05, 6.194500000000075e-05, 6.240299999999907e-05, 6.219399999999806e-05, 6.187499999999943e-05, 6.223600000000024e-05, 6.267999999999899e-05, 6.217999999999849e-05, 6.247200000000092e-05, 6.195800000000085e-05, 6.22080000000011e-05, 6.256899999999843e-05, 6.237499999999993e-05, 6.377800000000045e-05, 6.236100000000036e-05, 6.276399999999988e-05, 6.22499999999998e-05, 6.218100000000143e-05, 6.236100000000036e-05, 6.194500000000075e-05, 6.186199999999933e-05, 6.230600000000155e-05, 6.198599999999999e-05, 6.262500000000018e-05, 6.204200000000173e-05, 6.376400000000088e-05, 6.211100000000011e-05, 6.263899999999975e-05, 6.229099999999904e-05, 6.248600000000049e-05, 6.187499999999943e-05, 6.254199999999877e-05, 6.204199999999827e-05, 6.1888999999999e-05, 6.236100000000036e-05, 6.27500000000003e-05, 6.261099999999714e-05, 6.226399999999938e-05, 6.191700000000161e-05, 6.272200000000117e-05, 6.226399999999938e-05, 6.265299999999932e-05]</msg>
<status status="PASS" starttime="20201030 11:51:06.705" endtime="20201030 11:51:06.708"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.700" endtime="20201030 11:51:06.709"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:06.713" endtime="20201030 11:51:06.732"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.711" endtime="20201030 11:51:06.733"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.710" endtime="20201030 11:51:06.733"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.348" endtime="20201030 11:51:06.733"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.347" endtime="20201030 11:51:06.733"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:06.742" endtime="20201030 11:51:06.762"></status>
</kw>
<msg timestamp="20201030 11:51:06.762" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:06.741" endtime="20201030 11:51:06.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:06.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:06.763" endtime="20201030 11:51:06.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:06.766" endtime="20201030 11:51:06.767"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.738" endtime="20201030 11:51:06.768"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.736" endtime="20201030 11:51:06.769"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:06.775" endtime="20201030 11:51:07.061"></status>
</kw>
<msg timestamp="20201030 11:51:07.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020176958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020248736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:06.774" endtime="20201030 11:51:07.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020176958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020248736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:07.066" endtime="20201030 11:51:07.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.074" endtime="20201030 11:51:07.076"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.771" endtime="20201030 11:51:07.076"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.769" endtime="20201030 11:51:07.077"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:07.081" level="INFO">${RESULT} = [{'diff': 7.177800000000151e-05}, {'diff': 6.32219999999982e-05}, {'diff': 6.355599999999934e-05}, {'diff': 6.379200000000002e-05}, {'diff': 6.308400000000144e-05}, {'diff': 6.355599999999934e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:07.077" endtime="20201030 11:51:07.081"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:07.086" level="INFO">${ACCURACY} = {'diff': [7.177800000000151e-05, 6.32219999999982e-05, 6.355599999999934e-05, 6.379200000000002e-05, 6.308400000000144e-05, 6.355599999999934e-05, 6.480600000000059e-05, 6.298600000000099e-05, 6.31249...</msg>
<status status="PASS" starttime="20201030 11:51:07.082" endtime="20201030 11:51:07.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.091" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201030 11:51:07.090" endtime="20201030 11:51:07.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.093" level="INFO">VALUE: [7.177800000000151e-05, 6.32219999999982e-05, 6.355599999999934e-05, 6.379200000000002e-05, 6.308400000000144e-05, 6.355599999999934e-05, 6.480600000000059e-05, 6.298600000000099e-05, 6.312499999999721e-05, 6.330599999999909e-05, 6.479200000000102e-05, 6.368099999999946e-05, 6.480600000000059e-05, 6.341699999999964e-05, 6.313800000000078e-05, 6.361200000000108e-05, 6.35280000000002e-05, 6.347199999999845e-05, 6.373600000000174e-05, 6.323600000000124e-05, 6.33890000000005e-05, 6.316599999999992e-05, 6.323600000000124e-05, 6.304099999999979e-05, 6.323600000000124e-05, 6.344499999999878e-05, 6.350000000000106e-05, 6.479200000000102e-05, 6.362500000000118e-05, 6.474999999999884e-05, 6.323600000000124e-05, 6.343099999999921e-05, 6.341699999999964e-05, 6.305599999999884e-05, 6.309800000000101e-05, 6.479199999999755e-05, 6.362500000000118e-05, 6.301400000000013e-05, 6.366699999999989e-05, 6.348600000000149e-05, 6.337499999999746e-05, 6.340300000000007e-05, 6.2889e-05, 6.367999999999999e-05, 6.341699999999964e-05, 6.350000000000106e-05, 6.291699999999914e-05, 6.48479999999993e-05, 6.327799999999995e-05, 6.348600000000149e-05]</msg>
<status status="PASS" starttime="20201030 11:51:07.092" endtime="20201030 11:51:07.094"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.087" endtime="20201030 11:51:07.095"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:07.098" endtime="20201030 11:51:07.118"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.097" endtime="20201030 11:51:07.118"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.096" endtime="20201030 11:51:07.119"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.734" endtime="20201030 11:51:07.119"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.734" endtime="20201030 11:51:07.119"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.128" endtime="20201030 11:51:07.147"></status>
</kw>
<msg timestamp="20201030 11:51:07.147" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:07.126" endtime="20201030 11:51:07.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:07.149" endtime="20201030 11:51:07.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.151" endtime="20201030 11:51:07.153"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.124" endtime="20201030 11:51:07.153"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.122" endtime="20201030 11:51:07.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.161" endtime="20201030 11:51:07.448"></status>
</kw>
<msg timestamp="20201030 11:51:07.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020195806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020268472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:07.159" endtime="20201030 11:51:07.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020195806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020268472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:07.453" endtime="20201030 11:51:07.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.461" endtime="20201030 11:51:07.463"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.156" endtime="20201030 11:51:07.463"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.154" endtime="20201030 11:51:07.464"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:07.468" level="INFO">${RESULT} = [{'diff': 7.266599999999901e-05}, {'diff': 6.430500000000061e-05}, {'diff': 6.431999999999966e-05}, {'diff': 6.436200000000183e-05}, {'diff': 6.44440000000003e-05}, {'diff': 6.419400000000006e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:07.464" endtime="20201030 11:51:07.468"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:07.472" level="INFO">${ACCURACY} = {'diff': [7.266599999999901e-05, 6.430500000000061e-05, 6.431999999999966e-05, 6.436200000000183e-05, 6.44440000000003e-05, 6.419400000000006e-05, 6.47219999999997e-05, 6.580500000000211e-05, 6.580499...</msg>
<status status="PASS" starttime="20201030 11:51:07.469" endtime="20201030 11:51:07.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.477" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201030 11:51:07.476" endtime="20201030 11:51:07.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.479" level="INFO">VALUE: [7.266599999999901e-05, 6.430500000000061e-05, 6.431999999999966e-05, 6.436200000000183e-05, 6.44440000000003e-05, 6.419400000000006e-05, 6.47219999999997e-05, 6.580500000000211e-05, 6.580499999999864e-05, 6.574999999999984e-05, 6.466700000000089e-05, 6.400000000000156e-05, 6.47639999999984e-05, 6.386099999999839e-05, 6.466700000000089e-05, 6.405599999999984e-05, 6.423599999999877e-05, 6.451399999999816e-05, 6.468100000000046e-05, 6.393099999999971e-05, 6.450000000000206e-05, 6.45699999999999e-05, 6.397199999999895e-05, 6.447300000000239e-05, 6.449999999999859e-05, 6.411100000000211e-05, 6.576400000000288e-05, 6.400000000000156e-05, 6.416600000000092e-05, 6.442999999999727e-05, 6.42219999999992e-05, 6.580500000000211e-05, 6.40699999999994e-05, 6.412499999999821e-05, 6.42219999999992e-05, 6.426400000000138e-05, 6.473599999999927e-05, 6.391700000000014e-05, 6.395899999999885e-05, 6.466700000000089e-05, 6.393099999999971e-05, 6.441699999999717e-05, 6.419400000000006e-05, 6.455499999999739e-05, 6.57639999999994e-05, 6.448600000000249e-05, 6.580499999999864e-05, 6.398600000000199e-05, 6.44440000000003e-05, 6.42500000000018e-05]</msg>
<status status="PASS" starttime="20201030 11:51:07.478" endtime="20201030 11:51:07.480"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.473" endtime="20201030 11:51:07.481"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:07.484" endtime="20201030 11:51:07.504"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.483" endtime="20201030 11:51:07.504"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.482" endtime="20201030 11:51:07.505"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.120" endtime="20201030 11:51:07.505"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.120" endtime="20201030 11:51:07.505"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.514" endtime="20201030 11:51:07.533"></status>
</kw>
<msg timestamp="20201030 11:51:07.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:07.512" endtime="20201030 11:51:07.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:07.535" endtime="20201030 11:51:07.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.538" endtime="20201030 11:51:07.539"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.510" endtime="20201030 11:51:07.540"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.507" endtime="20201030 11:51:07.540"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.547" endtime="20201030 11:51:07.833"></status>
</kw>
<msg timestamp="20201030 11:51:07.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021137917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021212306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:07.546" endtime="20201030 11:51:07.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021137917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021212306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:07.837" endtime="20201030 11:51:07.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.846" endtime="20201030 11:51:07.847"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.543" endtime="20201030 11:51:07.848"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.541" endtime="20201030 11:51:07.848"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:07.852" level="INFO">${RESULT} = [{'diff': 7.438900000000109e-05}, {'diff': 6.675000000000084e-05}, {'diff': 6.563900000000275e-05}, {'diff': 6.486099999999939e-05}, {'diff': 6.681899999999921e-05}, {'diff': 6.526400000000238e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:07.849" endtime="20201030 11:51:07.853"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:07.857" level="INFO">${ACCURACY} = {'diff': [7.438900000000109e-05, 6.675000000000084e-05, 6.563900000000275e-05, 6.486099999999939e-05, 6.681899999999921e-05, 6.526400000000238e-05, 6.505599999999737e-05, 6.493099999999724e-05, 6.5305...</msg>
<status status="PASS" starttime="20201030 11:51:07.853" endtime="20201030 11:51:07.857"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.861" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201030 11:51:07.860" endtime="20201030 11:51:07.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.864" level="INFO">VALUE: [7.438900000000109e-05, 6.675000000000084e-05, 6.563900000000275e-05, 6.486099999999939e-05, 6.681899999999921e-05, 6.526400000000238e-05, 6.505599999999737e-05, 6.493099999999724e-05, 6.530599999999762e-05, 6.54029999999986e-05, 6.536099999999989e-05, 6.486099999999939e-05, 6.683400000000173e-05, 6.486100000000286e-05, 6.527800000000195e-05, 6.555599999999787e-05, 6.544500000000078e-05, 6.486199999999887e-05, 6.570800000000113e-05, 6.505500000000136e-05, 6.580599999999812e-05, 6.495800000000038e-05, 6.493000000000124e-05, 6.505500000000136e-05, 6.498599999999952e-05, 6.54440000000013e-05, 6.524999999999934e-05, 6.680600000000259e-05, 6.523599999999977e-05, 6.531999999999719e-05, 6.548600000000002e-05, 6.524999999999934e-05, 6.502700000000222e-05, 6.574999999999984e-05, 6.513899999999878e-05, 6.559800000000005e-05, 6.516699999999792e-05, 6.673600000000127e-05, 6.513799999999931e-05, 6.552799999999873e-05, 6.538899999999903e-05, 6.516600000000192e-05, 6.549999999999959e-05, 6.567999999999852e-05, 6.486099999999939e-05, 6.486099999999939e-05, 6.518000000000149e-05, 6.573600000000027e-05, 6.512499999999921e-05, 6.493099999999724e-05]</msg>
<status status="PASS" starttime="20201030 11:51:07.862" endtime="20201030 11:51:07.865"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.857" endtime="20201030 11:51:07.866"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:07.870" endtime="20201030 11:51:07.889"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.868" endtime="20201030 11:51:07.890"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.867" endtime="20201030 11:51:07.890"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.506" endtime="20201030 11:51:07.890"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.505" endtime="20201030 11:51:07.891"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.900" endtime="20201030 11:51:07.919"></status>
</kw>
<msg timestamp="20201030 11:51:07.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:07.898" endtime="20201030 11:51:07.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:07.920" endtime="20201030 11:51:07.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.923" endtime="20201030 11:51:07.924"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.895" endtime="20201030 11:51:07.925"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.893" endtime="20201030 11:51:07.925"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.932" endtime="20201030 11:51:08.219"></status>
</kw>
<msg timestamp="20201030 11:51:08.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020191611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020266667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:07.931" endtime="20201030 11:51:08.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020191611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020266667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:08.223" endtime="20201030 11:51:08.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.231" endtime="20201030 11:51:08.233"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.928" endtime="20201030 11:51:08.234"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.926" endtime="20201030 11:51:08.234"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:08.239" level="INFO">${RESULT} = [{'diff': 7.505599999999696e-05}, {'diff': 6.62220000000012e-05}, {'diff': 6.656899999999896e-05}, {'diff': 6.670799999999866e-05}, {'diff': 6.584699999999735e-05}, {'diff': 6.636099999999742e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:08.235" endtime="20201030 11:51:08.239"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:08.244" level="INFO">${ACCURACY} = {'diff': [7.505599999999696e-05, 6.62220000000012e-05, 6.656899999999896e-05, 6.670799999999866e-05, 6.584699999999735e-05, 6.636099999999742e-05, 6.637499999999699e-05, 6.584700000000082e-05, 6.64019...</msg>
<status status="PASS" starttime="20201030 11:51:08.240" endtime="20201030 11:51:08.245"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.250" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201030 11:51:08.248" endtime="20201030 11:51:08.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.252" level="INFO">VALUE: [7.505599999999696e-05, 6.62220000000012e-05, 6.656899999999896e-05, 6.670799999999866e-05, 6.584699999999735e-05, 6.636099999999742e-05, 6.637499999999699e-05, 6.584700000000082e-05, 6.640199999999666e-05, 6.630499999999914e-05, 6.77359999999988e-05, 6.786100000000239e-05, 6.659700000000157e-05, 6.630499999999914e-05, 6.588899999999953e-05, 6.62359999999973e-05, 6.662500000000071e-05, 6.598600000000052e-05, 6.659700000000157e-05, 6.666699999999942e-05, 6.586099999999692e-05, 6.591700000000214e-05, 6.656999999999844e-05, 6.592999999999877e-05, 6.600000000000009e-05, 6.64159999999997e-05, 6.638900000000003e-05, 6.615299999999935e-05, 6.645799999999841e-05, 6.637500000000046e-05, 6.59159999999992e-05, 6.637500000000046e-05, 6.647200000000145e-05, 6.59029999999991e-05, 6.780600000000012e-05, 6.604200000000227e-05, 6.777800000000098e-05, 6.629199999999905e-05, 6.663900000000028e-05, 6.586099999999692e-05, 6.618099999999849e-05, 6.618100000000196e-05, 6.644399999999884e-05, 6.59440000000018e-05, 6.667999999999952e-05, 6.587499999999996e-05, 6.604099999999932e-05, 6.647200000000145e-05, 6.587499999999996e-05, 6.67220000000017e-05]</msg>
<status status="PASS" starttime="20201030 11:51:08.251" endtime="20201030 11:51:08.253"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.245" endtime="20201030 11:51:08.253"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:08.257" endtime="20201030 11:51:08.277"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.256" endtime="20201030 11:51:08.277"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.254" endtime="20201030 11:51:08.278"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.891" endtime="20201030 11:51:08.278"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.891" endtime="20201030 11:51:08.278"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.287" endtime="20201030 11:51:08.306"></status>
</kw>
<msg timestamp="20201030 11:51:08.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:08.285" endtime="20201030 11:51:08.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.309" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:08.308" endtime="20201030 11:51:08.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.311" endtime="20201030 11:51:08.312"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.283" endtime="20201030 11:51:08.313"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.281" endtime="20201030 11:51:08.313"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.320" endtime="20201030 11:51:08.607"></status>
</kw>
<msg timestamp="20201030 11:51:08.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020220319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020296056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:08.318" endtime="20201030 11:51:08.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020220319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020296056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:08.612" endtime="20201030 11:51:08.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.620" endtime="20201030 11:51:08.622"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.316" endtime="20201030 11:51:08.622"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.314" endtime="20201030 11:51:08.623"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:08.627" level="INFO">${RESULT} = [{'diff': 7.573699999999933e-05}, {'diff': 6.705499999999989e-05}, {'diff': 6.768000000000052e-05}, {'diff': 6.72359999999983e-05}, {'diff': 6.705499999999989e-05}, {'diff': 6.70969999999986e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:51:08.623" endtime="20201030 11:51:08.627"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:08.631" level="INFO">${ACCURACY} = {'diff': [7.573699999999933e-05, 6.705499999999989e-05, 6.768000000000052e-05, 6.72359999999983e-05, 6.705499999999989e-05, 6.70969999999986e-05, 6.700000000000109e-05, 6.692999999999977e-05, 6.723600...</msg>
<status status="PASS" starttime="20201030 11:51:08.628" endtime="20201030 11:51:08.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.635" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201030 11:51:08.634" endtime="20201030 11:51:08.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.638" level="INFO">VALUE: [7.573699999999933e-05, 6.705499999999989e-05, 6.768000000000052e-05, 6.72359999999983e-05, 6.705499999999989e-05, 6.70969999999986e-05, 6.700000000000109e-05, 6.692999999999977e-05, 6.723600000000177e-05, 6.877799999999851e-05, 6.719399999999959e-05, 6.736099999999842e-05, 6.731999999999919e-05, 6.751399999999769e-05, 6.70419999999998e-05, 6.711100000000164e-05, 6.736100000000189e-05, 6.687499999999749e-05, 6.882000000000069e-05, 6.734799999999833e-05, 6.72090000000021e-05, 6.705599999999937e-05, 6.729100000000057e-05, 6.681899999999921e-05, 6.711100000000164e-05, 6.711099999999817e-05, 6.75969999999991e-05, 6.766699999999695e-05, 6.766700000000042e-05, 6.715300000000035e-05, 6.734699999999885e-05, 6.736099999999842e-05, 6.769500000000303e-05, 6.77359999999988e-05, 6.736100000000189e-05, 6.75420000000003e-05, 6.723600000000177e-05, 6.694500000000228e-05, 6.723700000000124e-05, 6.75420000000003e-05, 6.694399999999934e-05, 6.755500000000039e-05, 6.706899999999946e-05, 6.7277000000001e-05, 6.743000000000027e-05, 6.686100000000139e-05, 6.772199999999923e-05, 6.692999999999977e-05, 6.768099999999999e-05, 6.879200000000155e-05]</msg>
<status status="PASS" starttime="20201030 11:51:08.637" endtime="20201030 11:51:08.643"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.632" endtime="20201030 11:51:08.644"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:08.648" endtime="20201030 11:51:08.667"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.646" endtime="20201030 11:51:08.668"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.645" endtime="20201030 11:51:08.668"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.279" endtime="20201030 11:51:08.668"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.278" endtime="20201030 11:51:08.669"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.677" endtime="20201030 11:51:08.698"></status>
</kw>
<msg timestamp="20201030 11:51:08.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:08.676" endtime="20201030 11:51:08.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:08.700" endtime="20201030 11:51:08.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.702" endtime="20201030 11:51:08.704"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.673" endtime="20201030 11:51:08.704"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.671" endtime="20201030 11:51:08.705"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.712" endtime="20201030 11:51:08.997"></status>
</kw>
<msg timestamp="20201030 11:51:09.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021265417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021342764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:08.710" endtime="20201030 11:51:09.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021265417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021342764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:09.002" endtime="20201030 11:51:09.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.010" endtime="20201030 11:51:09.012"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.707" endtime="20201030 11:51:09.012"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.705" endtime="20201030 11:51:09.013"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:09.017" level="INFO">${RESULT} = [{'diff': 7.734700000000191e-05}, {'diff': 6.80969999999996e-05}, {'diff': 6.829200000000105e-05}, {'diff': 6.830600000000062e-05}, {'diff': 6.980599999999865e-05}, {'diff': 6.862499999999924e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:09.013" endtime="20201030 11:51:09.017"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:09.021" level="INFO">${ACCURACY} = {'diff': [7.734700000000191e-05, 6.80969999999996e-05, 6.829200000000105e-05, 6.830600000000062e-05, 6.980599999999865e-05, 6.862499999999924e-05, 6.811099999999917e-05, 6.812499999999874e-05, 6.82630...</msg>
<status status="PASS" starttime="20201030 11:51:09.018" endtime="20201030 11:51:09.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.026" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201030 11:51:09.025" endtime="20201030 11:51:09.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.031" level="INFO">VALUE: [7.734700000000191e-05, 6.80969999999996e-05, 6.829200000000105e-05, 6.830600000000062e-05, 6.980599999999865e-05, 6.862499999999924e-05, 6.811099999999917e-05, 6.812499999999874e-05, 6.826300000000243e-05, 6.787500000000196e-05, 6.823600000000277e-05, 6.816600000000145e-05, 6.812499999999874e-05, 6.973599999999733e-05, 6.874999999999937e-05, 6.836099999999942e-05, 6.847199999999998e-05, 6.836099999999942e-05, 6.849999999999912e-05, 6.787499999999849e-05, 6.815299999999788e-05, 6.981999999999822e-05, 6.788899999999806e-05, 6.806999999999994e-05, 6.79169999999972e-05, 6.851299999999921e-05, 6.826300000000243e-05, 6.823700000000224e-05, 6.797300000000242e-05, 6.818000000000102e-05, 6.84160000000017e-05, 6.816600000000145e-05, 6.800000000000209e-05, 6.855500000000139e-05, 6.872200000000023e-05, 6.79030000000011e-05, 6.861099999999967e-05, 6.848599999999955e-05, 6.855600000000087e-05, 6.851399999999869e-05, 6.830600000000062e-05, 6.794500000000328e-05, 6.982000000000169e-05, 6.861100000000314e-05, 6.855600000000087e-05, 6.838799999999909e-05, 6.833300000000028e-05, 6.980500000000264e-05, 6.867999999999805e-05, 6.812499999999874e-05]</msg>
<status status="PASS" starttime="20201030 11:51:09.027" endtime="20201030 11:51:09.032"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.022" endtime="20201030 11:51:09.033"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:09.037" endtime="20201030 11:51:09.056"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.035" endtime="20201030 11:51:09.057"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.034" endtime="20201030 11:51:09.057"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.670" endtime="20201030 11:51:09.057"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.669" endtime="20201030 11:51:09.057"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.067" endtime="20201030 11:51:09.086"></status>
</kw>
<msg timestamp="20201030 11:51:09.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:09.065" endtime="20201030 11:51:09.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:09.087" endtime="20201030 11:51:09.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.090" endtime="20201030 11:51:09.092"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.062" endtime="20201030 11:51:09.092"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.060" endtime="20201030 11:51:09.093"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.099" endtime="20201030 11:51:09.385"></status>
</kw>
<msg timestamp="20201030 11:51:09.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020235625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020313542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:09.098" endtime="20201030 11:51:09.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020235625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020313542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:09.389" endtime="20201030 11:51:09.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.397" endtime="20201030 11:51:09.399"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.095" endtime="20201030 11:51:09.400"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.093" endtime="20201030 11:51:09.400"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:09.404" level="INFO">${RESULT} = [{'diff': 7.791700000000026e-05}, {'diff': 6.923699999999977e-05}, {'diff': 6.961200000000015e-05}, {'diff': 6.950000000000012e-05}, {'diff': 6.934700000000085e-05}, {'diff': 6.888899999999906e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:09.401" endtime="20201030 11:51:09.404"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:09.409" level="INFO">${ACCURACY} = {'diff': [7.791700000000026e-05, 6.923699999999977e-05, 6.961200000000015e-05, 6.950000000000012e-05, 6.934700000000085e-05, 6.888899999999906e-05, 6.956900000000196e-05, 6.893000000000177e-05, 6.9722...</msg>
<status status="PASS" starttime="20201030 11:51:09.405" endtime="20201030 11:51:09.410"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.414" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201030 11:51:09.413" endtime="20201030 11:51:09.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.417" level="INFO">VALUE: [7.791700000000026e-05, 6.923699999999977e-05, 6.961200000000015e-05, 6.950000000000012e-05, 6.934700000000085e-05, 6.888899999999906e-05, 6.956900000000196e-05, 6.893000000000177e-05, 6.972200000000123e-05, 7.077799999999704e-05, 6.937499999999999e-05, 6.973599999999733e-05, 7.081899999999974e-05, 6.937499999999999e-05, 6.94169999999987e-05, 6.890299999999863e-05, 6.90970000000006e-05, 6.951400000000316e-05, 6.934700000000085e-05, 6.936100000000042e-05, 6.897299999999995e-05, 6.922200000000073e-05, 6.94299999999988e-05, 6.934700000000085e-05, 6.913899999999931e-05, 6.950000000000012e-05, 6.950000000000012e-05, 6.913899999999931e-05, 7.07360000000018e-05, 6.962500000000024e-05, 6.954199999999883e-05, 6.943099999999827e-05, 6.943099999999827e-05, 6.886099999999992e-05, 7.082000000000269e-05, 6.954099999999935e-05, 6.924999999999987e-05, 6.894499999999734e-05, 6.936100000000042e-05, 6.943100000000174e-05, 6.923699999999977e-05, 6.961200000000015e-05, 6.930499999999867e-05, 6.932000000000119e-05, 6.965299999999938e-05, 7.07910000000006e-05, 7.083299999999931e-05, 6.898600000000005e-05, 7.081899999999974e-05, 6.919400000000159e-05]</msg>
<status status="PASS" starttime="20201030 11:51:09.415" endtime="20201030 11:51:09.417"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.410" endtime="20201030 11:51:09.418"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:09.422" endtime="20201030 11:51:09.441"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.420" endtime="20201030 11:51:09.442"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.419" endtime="20201030 11:51:09.442"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.058" endtime="20201030 11:51:09.442"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.058" endtime="20201030 11:51:09.442"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.452" endtime="20201030 11:51:09.471"></status>
</kw>
<msg timestamp="20201030 11:51:09.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:09.450" endtime="20201030 11:51:09.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:09.473" endtime="20201030 11:51:09.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.475" endtime="20201030 11:51:09.477"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.447" endtime="20201030 11:51:09.477"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.445" endtime="20201030 11:51:09.478"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.484" endtime="20201030 11:51:09.771"></status>
</kw>
<msg timestamp="20201030 11:51:09.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020215167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020293958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:09.483" endtime="20201030 11:51:09.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020215167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020293958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:09.775" endtime="20201030 11:51:09.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.784" endtime="20201030 11:51:09.786"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.480" endtime="20201030 11:51:09.786"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.478" endtime="20201030 11:51:09.787"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:09.791" level="INFO">${RESULT} = [{'diff': 7.879100000000167e-05}, {'diff': 6.987500000000049e-05}, {'diff': 7.037500000000099e-05}, {'diff': 7.05970000000021e-05}, {'diff': 7.054199999999983e-05}, {'diff': 6.997200000000148e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:09.787" endtime="20201030 11:51:09.791"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:09.795" level="INFO">${ACCURACY} = {'diff': [7.879100000000167e-05, 6.987500000000049e-05, 7.037500000000099e-05, 7.05970000000021e-05, 7.054199999999983e-05, 6.997200000000148e-05, 6.994499999999834e-05, 7.05559999999994e-05, 6.991699...</msg>
<status status="PASS" starttime="20201030 11:51:09.792" endtime="20201030 11:51:09.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.799" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201030 11:51:09.798" endtime="20201030 11:51:09.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.802" level="INFO">VALUE: [7.879100000000167e-05, 6.987500000000049e-05, 7.037500000000099e-05, 7.05970000000021e-05, 7.054199999999983e-05, 6.997200000000148e-05, 6.994499999999834e-05, 7.05559999999994e-05, 6.99169999999992e-05, 7.006999999999847e-05, 7.182000000000022e-05, 7.04169999999997e-05, 7.025000000000087e-05, 7.065300000000038e-05, 7.038800000000109e-05, 6.994399999999887e-05, 7.011100000000117e-05, 6.987500000000049e-05, 7.181900000000074e-05, 6.997199999999801e-05, 7.048599999999808e-05, 7.037500000000099e-05, 7.044499999999884e-05, 7.037500000000099e-05, 7.018100000000249e-05, 7.055600000000287e-05, 6.995899999999791e-05, 7.183399999999979e-05, 6.99169999999992e-05, 6.988900000000006e-05, 7.058399999999854e-05, 7.069499999999909e-05, 7.027700000000053e-05, 7.04169999999997e-05, 7.180500000000117e-05, 7.175000000000237e-05, 6.990299999999963e-05, 7.065300000000038e-05, 7.07360000000018e-05, 7.031999999999872e-05, 7.054199999999983e-05, 6.988900000000006e-05, 7.013900000000031e-05, 6.99169999999992e-05, 7.068099999999952e-05, 7.048600000000155e-05, 7.031999999999872e-05, 6.994500000000181e-05, 6.987500000000049e-05, 7.00840000000015e-05]</msg>
<status status="PASS" starttime="20201030 11:51:09.801" endtime="20201030 11:51:09.803"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.796" endtime="20201030 11:51:09.803"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:09.807" endtime="20201030 11:51:09.826"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.805" endtime="20201030 11:51:09.827"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.804" endtime="20201030 11:51:09.827"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.443" endtime="20201030 11:51:09.828"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.443" endtime="20201030 11:51:09.828"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.837" endtime="20201030 11:51:09.857"></status>
</kw>
<msg timestamp="20201030 11:51:09.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:09.835" endtime="20201030 11:51:09.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:09.859" endtime="20201030 11:51:09.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.862" endtime="20201030 11:51:09.863"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.832" endtime="20201030 11:51:09.864"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.830" endtime="20201030 11:51:09.864"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.871" endtime="20201030 11:51:10.156"></status>
</kw>
<msg timestamp="20201030 11:51:10.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021326681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021408208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:09.869" endtime="20201030 11:51:10.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:10.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021326681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021408208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:10.161" endtime="20201030 11:51:10.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.169" endtime="20201030 11:51:10.171"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.867" endtime="20201030 11:51:10.171"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.865" endtime="20201030 11:51:10.172"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:10.176" level="INFO">${RESULT} = [{'diff': 8.152700000000138e-05}, {'diff': 7.115300000000088e-05}, {'diff': 7.102800000000076e-05}, {'diff': 7.113900000000131e-05}, {'diff': 7.277699999999956e-05}, {'diff': 7.09300000000003e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:10.172" endtime="20201030 11:51:10.176"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:10.180" level="INFO">${ACCURACY} = {'diff': [8.152700000000138e-05, 7.115300000000088e-05, 7.102800000000076e-05, 7.113900000000131e-05, 7.277699999999956e-05, 7.09300000000003e-05, 7.137499999999852e-05, 7.088900000000106e-05, 7.14859...</msg>
<status status="PASS" starttime="20201030 11:51:10.177" endtime="20201030 11:51:10.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:10.184" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201030 11:51:10.183" endtime="20201030 11:51:10.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:10.187" level="INFO">VALUE: [8.152700000000138e-05, 7.115300000000088e-05, 7.102800000000076e-05, 7.113900000000131e-05, 7.277699999999956e-05, 7.09300000000003e-05, 7.137499999999852e-05, 7.088900000000106e-05, 7.148599999999908e-05, 7.137500000000199e-05, 7.163900000000181e-05, 7.10559999999999e-05, 7.134700000000285e-05, 7.113900000000131e-05, 7.280600000000165e-05, 7.119400000000012e-05, 7.084700000000235e-05, 7.125000000000187e-05, 7.284699999999741e-05, 7.127700000000153e-05, 7.086099999999845e-05, 7.087500000000149e-05, 7.113900000000131e-05, 7.116600000000098e-05, 7.276400000000294e-05, 7.137499999999852e-05, 7.27910000000026e-05, 7.144400000000037e-05, 7.166700000000095e-05, 7.099999999999815e-05, 7.112499999999827e-05, 7.097199999999901e-05, 7.137499999999852e-05, 7.127699999999806e-05, 7.095899999999891e-05, 7.279099999999913e-05, 7.137500000000199e-05, 7.14439999999969e-05, 7.098599999999858e-05, 7.131900000000024e-05, 7.11109999999987e-05, 7.136100000000242e-05, 7.133299999999981e-05, 7.120799999999969e-05, 7.163900000000181e-05, 7.15560000000004e-05, 7.144400000000037e-05, 7.094500000000281e-05, 7.10559999999999e-05, 7.118100000000002e-05]</msg>
<status status="PASS" starttime="20201030 11:51:10.186" endtime="20201030 11:51:10.189"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.181" endtime="20201030 11:51:10.189"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:10.193" endtime="20201030 11:51:10.212"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.192" endtime="20201030 11:51:10.213"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.190" endtime="20201030 11:51:10.213"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.829" endtime="20201030 11:51:10.214"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.828" endtime="20201030 11:51:10.214"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.223" endtime="20201030 11:51:10.243"></status>
</kw>
<msg timestamp="20201030 11:51:10.243" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:10.221" endtime="20201030 11:51:10.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:10.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:10.244" endtime="20201030 11:51:10.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.247" endtime="20201030 11:51:10.249"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.219" endtime="20201030 11:51:10.249"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.216" endtime="20201030 11:51:10.250"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.256" endtime="20201030 11:51:10.543"></status>
</kw>
<msg timestamp="20201030 11:51:10.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020224931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020306194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:10.255" endtime="20201030 11:51:10.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:10.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020224931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020306194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:10.547" endtime="20201030 11:51:10.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.556" endtime="20201030 11:51:10.557"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.252" endtime="20201030 11:51:10.558"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.250" endtime="20201030 11:51:10.558"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:10.562" level="INFO">${RESULT} = [{'diff': 8.126299999999809e-05}, {'diff': 7.247299999999998e-05}, {'diff': 7.218100000000102e-05}, {'diff': 7.205500000000142e-05}, {'diff': 7.199999999999915e-05}, {'diff': 7.22360000000033e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:10.559" endtime="20201030 11:51:10.563"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:10.567" level="INFO">${ACCURACY} = {'diff': [8.126299999999809e-05, 7.247299999999998e-05, 7.218100000000102e-05, 7.205500000000142e-05, 7.199999999999915e-05, 7.22360000000033e-05, 7.223599999999983e-05, 7.249999999999965e-05, 7.26110...</msg>
<status status="PASS" starttime="20201030 11:51:10.563" endtime="20201030 11:51:10.568"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:10.572" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201030 11:51:10.571" endtime="20201030 11:51:10.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:10.575" level="INFO">VALUE: [8.126299999999809e-05, 7.247299999999998e-05, 7.218100000000102e-05, 7.205500000000142e-05, 7.199999999999915e-05, 7.22360000000033e-05, 7.223599999999983e-05, 7.249999999999965e-05, 7.26110000000002e-05, 7.230500000000167e-05, 7.236099999999995e-05, 7.19309999999973e-05, 7.22499999999994e-05, 7.380599999999918e-05, 7.254200000000183e-05, 7.201400000000219e-05, 7.236099999999995e-05, 7.207000000000047e-05, 7.191699999999773e-05, 7.266600000000248e-05, 7.219400000000112e-05, 7.247200000000051e-05, 7.262499999999977e-05, 7.212500000000274e-05, 7.38049999999997e-05, 7.226400000000244e-05, 7.218099999999755e-05, 7.241699999999823e-05, 7.199999999999915e-05, 7.380599999999918e-05, 7.377800000000004e-05, 7.265300000000238e-05, 7.209799999999961e-05, 7.380599999999918e-05, 7.272300000000023e-05, 7.381899999999927e-05, 7.19170000000012e-05, 7.379199999999961e-05, 7.194400000000087e-05, 7.187499999999902e-05, 7.38049999999997e-05, 7.218000000000155e-05, 7.266599999999901e-05, 7.237500000000299e-05, 7.24439999999979e-05, 7.227799999999854e-05, 7.219399999999765e-05, 7.381999999999875e-05, 7.257000000000097e-05, 7.244500000000084e-05]</msg>
<status status="PASS" starttime="20201030 11:51:10.573" endtime="20201030 11:51:10.575"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.568" endtime="20201030 11:51:10.576"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:10.580" endtime="20201030 11:51:10.599"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.578" endtime="20201030 11:51:10.600"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.577" endtime="20201030 11:51:10.600"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.215" endtime="20201030 11:51:10.601"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.214" endtime="20201030 11:51:10.601"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.610" endtime="20201030 11:51:10.629"></status>
</kw>
<msg timestamp="20201030 11:51:10.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:10.609" endtime="20201030 11:51:10.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:10.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:10.631" endtime="20201030 11:51:10.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.633" endtime="20201030 11:51:10.635"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.606" endtime="20201030 11:51:10.635"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.603" endtime="20201030 11:51:10.636"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.643" endtime="20201030 11:51:10.928"></status>
</kw>
<msg timestamp="20201030 11:51:10.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020633875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020715903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:10.641" endtime="20201030 11:51:10.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:10.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020633875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020715903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:10.933" endtime="20201030 11:51:10.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.941" endtime="20201030 11:51:10.943"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.638" endtime="20201030 11:51:10.943"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.637" endtime="20201030 11:51:10.944"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:10.948" level="INFO">${RESULT} = [{'diff': 8.202800000000135e-05}, {'diff': 7.373600000000133e-05}, {'diff': 7.338900000000009e-05}, {'diff': 7.362500000000077e-05}, {'diff': 7.312500000000027e-05}, {'diff': 7.347299999999751e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:10.945" endtime="20201030 11:51:10.948"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:10.952" level="INFO">${ACCURACY} = {'diff': [8.202800000000135e-05, 7.373600000000133e-05, 7.338900000000009e-05, 7.362500000000077e-05, 7.312500000000027e-05, 7.347299999999751e-05, 7.32500000000004e-05, 7.330599999999868e-05, 7.31250...</msg>
<status status="PASS" starttime="20201030 11:51:10.949" endtime="20201030 11:51:10.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:10.957" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201030 11:51:10.956" endtime="20201030 11:51:10.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:10.959" level="INFO">VALUE: [8.202800000000135e-05, 7.373600000000133e-05, 7.338900000000009e-05, 7.362500000000077e-05, 7.312500000000027e-05, 7.347299999999751e-05, 7.32500000000004e-05, 7.330599999999868e-05, 7.312500000000027e-05, 7.36110000000012e-05, 7.301399999999972e-05, 7.376400000000047e-05, 7.331900000000224e-05, 7.312500000000027e-05, 7.291699999999873e-05, 7.355599999999893e-05, 7.3763999999997e-05, 7.480600000000018e-05, 7.329200000000258e-05, 7.362500000000077e-05, 7.334700000000138e-05, 7.373600000000133e-05, 7.298600000000058e-05, 7.313800000000037e-05, 7.311200000000018e-05, 7.479200000000061e-05, 7.319400000000212e-05, 7.342999999999933e-05, 7.292999999999883e-05, 7.344400000000237e-05, 7.313899999999984e-05, 7.366699999999948e-05, 7.283299999999784e-05, 7.370799999999872e-05, 7.36110000000012e-05, 7.284699999999741e-05, 7.369399999999915e-05, 7.476400000000147e-05, 7.337500000000052e-05, 7.354099999999988e-05, 7.330600000000215e-05, 7.286099999999698e-05, 7.30560000000019e-05, 7.338900000000009e-05, 7.36110000000012e-05, 7.298599999999711e-05, 7.304100000000285e-05, 7.35829999999986e-05, 7.363900000000034e-05, 7.336100000000095e-05]</msg>
<status status="PASS" starttime="20201030 11:51:10.958" endtime="20201030 11:51:10.960"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.953" endtime="20201030 11:51:10.961"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:10.964" endtime="20201030 11:51:10.984"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.963" endtime="20201030 11:51:10.984"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.962" endtime="20201030 11:51:10.985"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.602" endtime="20201030 11:51:10.985"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.601" endtime="20201030 11:51:10.985"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.994" endtime="20201030 11:51:11.015"></status>
</kw>
<msg timestamp="20201030 11:51:11.015" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:10.993" endtime="20201030 11:51:11.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.018" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:11.016" endtime="20201030 11:51:11.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.019" endtime="20201030 11:51:11.020"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.990" endtime="20201030 11:51:11.021"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.988" endtime="20201030 11:51:11.021"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.028" endtime="20201030 11:51:11.314"></status>
</kw>
<msg timestamp="20201030 11:51:11.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021319194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021402639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:11.026" endtime="20201030 11:51:11.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021319194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021402639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:11.319" endtime="20201030 11:51:11.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.327" endtime="20201030 11:51:11.329"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.024" endtime="20201030 11:51:11.330"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.022" endtime="20201030 11:51:11.330"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:11.334" level="INFO">${RESULT} = [{'diff': 8.344500000000143e-05}, {'diff': 7.41110000000017e-05}, {'diff': 7.579200000000161e-05}, {'diff': 7.431999999999925e-05}, {'diff': 7.580600000000118e-05}, {'diff': 7.447199999999904e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:11.331" endtime="20201030 11:51:11.334"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:11.338" level="INFO">${ACCURACY} = {'diff': [8.344500000000143e-05, 7.41110000000017e-05, 7.579200000000161e-05, 7.431999999999925e-05, 7.580600000000118e-05, 7.447199999999904e-05, 7.468100000000005e-05, 7.411200000000118e-05, 7.44439...</msg>
<status status="PASS" starttime="20201030 11:51:11.335" endtime="20201030 11:51:11.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.343" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201030 11:51:11.342" endtime="20201030 11:51:11.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.345" level="INFO">VALUE: [8.344500000000143e-05, 7.41110000000017e-05, 7.579200000000161e-05, 7.431999999999925e-05, 7.580600000000118e-05, 7.447199999999904e-05, 7.468100000000005e-05, 7.411200000000118e-05, 7.44439999999999e-05, 7.429100000000063e-05, 7.431899999999977e-05, 7.452800000000079e-05, 7.440300000000066e-05, 7.392999999999983e-05, 7.468100000000005e-05, 7.455500000000045e-05, 7.431899999999977e-05, 7.384700000000188e-05, 7.406899999999952e-05, 7.427800000000054e-05, 7.440199999999772e-05, 7.400000000000115e-05, 7.402799999999682e-05, 7.424999999999793e-05, 7.454200000000036e-05, 7.391699999999973e-05, 7.450000000000165e-05, 7.468000000000058e-05, 7.580499999999823e-05, 7.468000000000058e-05, 7.395799999999897e-05, 7.413900000000084e-05, 7.447199999999904e-05, 7.39439999999994e-05, 7.474999999999843e-05, 7.387500000000102e-05, 7.454199999999689e-05, 7.391699999999973e-05, 7.583400000000032e-05, 7.455599999999993e-05, 7.431899999999977e-05, 7.408399999999857e-05, 7.452700000000131e-05, 7.462500000000177e-05, 7.405499999999995e-05, 7.455500000000045e-05, 7.579099999999866e-05, 7.395799999999897e-05, 7.411099999999823e-05, 7.437499999999805e-05]</msg>
<status status="PASS" starttime="20201030 11:51:11.344" endtime="20201030 11:51:11.347"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.339" endtime="20201030 11:51:11.348"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:11.352" endtime="20201030 11:51:11.371"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.350" endtime="20201030 11:51:11.372"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.349" endtime="20201030 11:51:11.372"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.986" endtime="20201030 11:51:11.372"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.985" endtime="20201030 11:51:11.372"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.381" endtime="20201030 11:51:11.401"></status>
</kw>
<msg timestamp="20201030 11:51:11.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:11.380" endtime="20201030 11:51:11.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:11.403" endtime="20201030 11:51:11.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.405" endtime="20201030 11:51:11.407"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.377" endtime="20201030 11:51:11.407"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.375" endtime="20201030 11:51:11.408"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.414" endtime="20201030 11:51:11.700"></status>
</kw>
<msg timestamp="20201030 11:51:11.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020250486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020334625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:11.413" endtime="20201030 11:51:11.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020250486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020334625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:11.704" endtime="20201030 11:51:11.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.712" endtime="20201030 11:51:11.714"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.410" endtime="20201030 11:51:11.714"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.408" endtime="20201030 11:51:11.715"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:11.719" level="INFO">${RESULT} = [{'diff': 8.413899999999697e-05}, {'diff': 7.523599999999936e-05}, {'diff': 7.573599999999986e-05}, {'diff': 7.54310000000008e-05}, {'diff': 7.518100000000055e-05}, {'diff': 7.488899999999812e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:11.716" endtime="20201030 11:51:11.719"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:11.724" level="INFO">${ACCURACY} = {'diff': [8.413899999999697e-05, 7.523599999999936e-05, 7.573599999999986e-05, 7.54310000000008e-05, 7.518100000000055e-05, 7.488899999999812e-05, 7.498599999999911e-05, 7.488900000000159e-05, 7.55700...</msg>
<status status="PASS" starttime="20201030 11:51:11.720" endtime="20201030 11:51:11.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.729" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201030 11:51:11.728" endtime="20201030 11:51:11.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.731" level="INFO">VALUE: [8.413899999999697e-05, 7.523599999999936e-05, 7.573599999999986e-05, 7.54310000000008e-05, 7.518100000000055e-05, 7.488899999999812e-05, 7.498599999999911e-05, 7.488900000000159e-05, 7.55700000000005e-05, 7.559799999999964e-05, 7.547299999999951e-05, 7.536200000000243e-05, 7.551299999999928e-05, 7.545800000000047e-05, 7.549999999999918e-05, 7.681900000000227e-05, 7.541599999999829e-05, 7.487499999999855e-05, 7.531900000000077e-05, 7.518000000000108e-05, 7.515299999999794e-05, 7.536099999999948e-05, 7.491700000000073e-05, 7.532000000000025e-05, 7.516700000000098e-05, 7.507e-05, 7.519500000000012e-05, 7.524999999999893e-05, 7.512500000000227e-05, 7.516599999999804e-05, 7.488900000000159e-05, 7.56249999999993e-05, 7.522199999999979e-05, 7.543000000000133e-05, 7.537499999999905e-05, 7.526400000000197e-05, 7.49310000000003e-05, 7.515299999999794e-05, 7.537499999999905e-05, 7.536099999999948e-05, 7.501400000000172e-05, 7.554199999999789e-05, 7.562500000000277e-05, 7.54310000000008e-05, 7.543000000000133e-05, 7.683299999999837e-05, 7.549999999999918e-05, 7.550000000000265e-05, 7.512500000000227e-05, 7.566600000000201e-05]</msg>
<status status="PASS" starttime="20201030 11:51:11.730" endtime="20201030 11:51:11.732"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.725" endtime="20201030 11:51:11.733"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:11.736" endtime="20201030 11:51:11.756"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.735" endtime="20201030 11:51:11.756"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.734" endtime="20201030 11:51:11.757"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.373" endtime="20201030 11:51:11.757"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.373" endtime="20201030 11:51:11.757"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.766" endtime="20201030 11:51:11.786"></status>
</kw>
<msg timestamp="20201030 11:51:11.787" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:11.765" endtime="20201030 11:51:11.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:11.788" endtime="20201030 11:51:11.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.790" endtime="20201030 11:51:11.792"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.762" endtime="20201030 11:51:11.793"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.760" endtime="20201030 11:51:11.793"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.800" endtime="20201030 11:51:12.086"></status>
</kw>
<msg timestamp="20201030 11:51:12.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020236514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020321431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:11.798" endtime="20201030 11:51:12.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020236514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020321431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:12.091" endtime="20201030 11:51:12.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.099" endtime="20201030 11:51:12.101"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.795" endtime="20201030 11:51:12.101"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.794" endtime="20201030 11:51:12.102"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:12.106" level="INFO">${RESULT} = [{'diff': 8.491700000000033e-05}, {'diff': 7.602699999999935e-05}, {'diff': 7.593000000000183e-05}, {'diff': 7.599999999999968e-05}, {'diff': 7.647200000000104e-05}, {'diff': 7.666599999999954e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:12.103" endtime="20201030 11:51:12.106"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:12.110" level="INFO">${ACCURACY} = {'diff': [8.491700000000033e-05, 7.602699999999935e-05, 7.593000000000183e-05, 7.599999999999968e-05, 7.647200000000104e-05, 7.666599999999954e-05, 7.61249999999998e-05, 7.587499999999955e-05, 7.65550...</msg>
<status status="PASS" starttime="20201030 11:51:12.107" endtime="20201030 11:51:12.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.115" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201030 11:51:12.114" endtime="20201030 11:51:12.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.117" level="INFO">VALUE: [8.491700000000033e-05, 7.602699999999935e-05, 7.593000000000183e-05, 7.599999999999968e-05, 7.647200000000104e-05, 7.666599999999954e-05, 7.61249999999998e-05, 7.587499999999955e-05, 7.655500000000245e-05, 7.64029999999992e-05, 7.587499999999955e-05, 7.779200000000014e-05, 7.604199999999839e-05, 7.774999999999796e-05, 7.602799999999882e-05, 7.637500000000005e-05, 7.6070000000001e-05, 7.659800000000064e-05, 7.626300000000003e-05, 7.655500000000245e-05, 7.654099999999942e-05, 7.65830000000016e-05, 7.61249999999998e-05, 7.587499999999955e-05, 7.647200000000104e-05, 7.611100000000023e-05, 7.611099999999676e-05, 7.612500000000327e-05, 7.645900000000094e-05, 7.604199999999839e-05, 7.601399999999925e-05, 7.652699999999985e-05, 7.624999999999993e-05, 7.650000000000018e-05, 7.637500000000005e-05, 7.677800000000304e-05, 7.673599999999739e-05, 7.648600000000061e-05, 7.601400000000272e-05, 7.78189999999998e-05, 7.617999999999861e-05, 7.597200000000054e-05, 7.7764000000001e-05, 7.620800000000122e-05, 7.609700000000066e-05, 7.611100000000023e-05, 7.62639999999995e-05, 7.6070000000001e-05, 7.647200000000104e-05, 7.629200000000211e-05]</msg>
<status status="PASS" starttime="20201030 11:51:12.116" endtime="20201030 11:51:12.118"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.111" endtime="20201030 11:51:12.119"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:12.122" endtime="20201030 11:51:12.142"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.121" endtime="20201030 11:51:12.142"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.120" endtime="20201030 11:51:12.143"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.758" endtime="20201030 11:51:12.143"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.758" endtime="20201030 11:51:12.143"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.152" endtime="20201030 11:51:12.173"></status>
</kw>
<msg timestamp="20201030 11:51:12.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:12.151" endtime="20201030 11:51:12.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:12.174" endtime="20201030 11:51:12.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.177" endtime="20201030 11:51:12.179"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.148" endtime="20201030 11:51:12.179"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.146" endtime="20201030 11:51:12.180"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.186" endtime="20201030 11:51:12.472"></status>
</kw>
<msg timestamp="20201030 11:51:12.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021079431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021165292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:12.185" endtime="20201030 11:51:12.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021079431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021165292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:12.477" endtime="20201030 11:51:12.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.485" endtime="20201030 11:51:12.487"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.182" endtime="20201030 11:51:12.487"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.180" endtime="20201030 11:51:12.488"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:12.492" level="INFO">${RESULT} = [{'diff': 8.586099999999958e-05}, {'diff': 7.71250000000008e-05}, {'diff': 7.744399999999943e-05}, {'diff': 7.740200000000072e-05}, {'diff': 7.879200000000114e-05}, {'diff': 7.725000000000093e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:12.489" endtime="20201030 11:51:12.492"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:12.496" level="INFO">${ACCURACY} = {'diff': [8.586099999999958e-05, 7.71250000000008e-05, 7.744399999999943e-05, 7.740200000000072e-05, 7.879200000000114e-05, 7.725000000000093e-05, 7.88190000000008e-05, 7.766600000000054e-05, 7.748599...</msg>
<status status="PASS" starttime="20201030 11:51:12.493" endtime="20201030 11:51:12.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.501" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201030 11:51:12.500" endtime="20201030 11:51:12.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.506" level="INFO">VALUE: [8.586099999999958e-05, 7.71250000000008e-05, 7.744399999999943e-05, 7.740200000000072e-05, 7.879200000000114e-05, 7.725000000000093e-05, 7.88190000000008e-05, 7.766600000000054e-05, 7.748599999999814e-05, 7.691700000000273e-05, 7.71250000000008e-05, 7.69579999999985e-05, 7.76250000000013e-05, 7.7070000000002e-05, 7.719500000000212e-05, 7.711099999999776e-05, 7.687500000000055e-05, 7.7070000000002e-05, 7.874999999999896e-05, 7.698700000000058e-05, 7.686199999999699e-05, 7.761100000000173e-05, 7.742999999999986e-05, 7.709700000000166e-05, 7.87909999999982e-05, 7.756899999999955e-05, 7.701400000000025e-05, 7.725000000000093e-05, 7.752799999999685e-05, 7.874999999999896e-05, 7.69579999999985e-05, 7.879200000000114e-05, 7.749999999999771e-05, 7.770800000000272e-05, 7.747300000000151e-05, 7.74030000000002e-05, 7.752800000000032e-05, 7.700000000000068e-05, 7.87909999999982e-05, 7.742999999999986e-05, 7.705499999999949e-05, 7.700000000000068e-05, 7.762499999999783e-05, 7.737499999999758e-05, 7.694399999999893e-05, 7.7457999999999e-05, 7.687500000000055e-05, 7.750000000000118e-05, 7.705600000000243e-05, 7.76250000000013e-05]</msg>
<status status="PASS" starttime="20201030 11:51:12.502" endtime="20201030 11:51:12.508"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.497" endtime="20201030 11:51:12.508"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:12.512" endtime="20201030 11:51:12.531"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.510" endtime="20201030 11:51:12.532"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.509" endtime="20201030 11:51:12.532"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.144" endtime="20201030 11:51:12.533"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.144" endtime="20201030 11:51:12.533"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.542" endtime="20201030 11:51:12.562"></status>
</kw>
<msg timestamp="20201030 11:51:12.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:12.540" endtime="20201030 11:51:12.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:12.563" endtime="20201030 11:51:12.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.566" endtime="20201030 11:51:12.567"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.537" endtime="20201030 11:51:12.568"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.535" endtime="20201030 11:51:12.568"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.575" endtime="20201030 11:51:12.861"></status>
</kw>
<msg timestamp="20201030 11:51:12.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020064972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020151667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:12.573" endtime="20201030 11:51:12.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020064972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020151667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:12.865" endtime="20201030 11:51:12.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.873" endtime="20201030 11:51:12.875"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.571" endtime="20201030 11:51:12.876"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.569" endtime="20201030 11:51:12.876"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:12.880" level="INFO">${RESULT} = [{'diff': 8.669500000000122e-05}, {'diff': 7.868100000000058e-05}, {'diff': 7.973600000000039e-05}, {'diff': 7.82909999999977e-05}, {'diff': 7.793000000000036e-05}, {'diff': 7.833299999999987e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:12.877" endtime="20201030 11:51:12.880"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:12.885" level="INFO">${ACCURACY} = {'diff': [8.669500000000122e-05, 7.868100000000058e-05, 7.973600000000039e-05, 7.82909999999977e-05, 7.793000000000036e-05, 7.833299999999987e-05, 7.840299999999772e-05, 7.862499999999883e-05, 7.85140...</msg>
<status status="PASS" starttime="20201030 11:51:12.881" endtime="20201030 11:51:12.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.890" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201030 11:51:12.889" endtime="20201030 11:51:12.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.892" level="INFO">VALUE: [8.669500000000122e-05, 7.868100000000058e-05, 7.973600000000039e-05, 7.82909999999977e-05, 7.793000000000036e-05, 7.833299999999987e-05, 7.840299999999772e-05, 7.862499999999883e-05, 7.851400000000175e-05, 7.806999999999953e-05, 7.827800000000107e-05, 7.804200000000039e-05, 7.806999999999953e-05, 7.85969999999997e-05, 7.801399999999778e-05, 7.844500000000337e-05, 7.869500000000015e-05, 7.818000000000061e-05, 7.791700000000026e-05, 7.980500000000224e-05, 7.834699999999944e-05, 7.802799999999735e-05, 7.843000000000086e-05, 7.812499999999833e-05, 7.801400000000125e-05, 7.79030000000007e-05, 7.843100000000033e-05, 7.836099999999901e-05, 7.982000000000128e-05, 7.980599999999824e-05, 7.799999999999821e-05, 7.862499999999883e-05, 7.794399999999993e-05, 7.794399999999993e-05, 7.811200000000171e-05, 7.974999999999996e-05, 7.837499999999858e-05, 7.81250000000018e-05, 7.841700000000076e-05, 7.823599999999889e-05, 7.798599999999864e-05, 7.843100000000033e-05, 7.843100000000033e-05, 7.984799999999695e-05, 7.980600000000171e-05, 7.9764000000003e-05, 7.804200000000039e-05, 7.788899999999765e-05, 7.866699999999754e-05, 7.844400000000043e-05]</msg>
<status status="PASS" starttime="20201030 11:51:12.891" endtime="20201030 11:51:12.893"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.886" endtime="20201030 11:51:12.894"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:12.898" endtime="20201030 11:51:12.917"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.896" endtime="20201030 11:51:12.918"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.895" endtime="20201030 11:51:12.918"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.534" endtime="20201030 11:51:12.918"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.533" endtime="20201030 11:51:12.918"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.927" endtime="20201030 11:51:12.947"></status>
</kw>
<msg timestamp="20201030 11:51:12.947" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:12.926" endtime="20201030 11:51:12.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:12.949" endtime="20201030 11:51:12.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.951" endtime="20201030 11:51:12.953"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.923" endtime="20201030 11:51:12.953"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.921" endtime="20201030 11:51:12.954"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.961" endtime="20201030 11:51:13.248"></status>
</kw>
<msg timestamp="20201030 11:51:13.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020126903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020215278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:12.959" endtime="20201030 11:51:13.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020126903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020215278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:13.253" endtime="20201030 11:51:13.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.261" endtime="20201030 11:51:13.263"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.956" endtime="20201030 11:51:13.263"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.954" endtime="20201030 11:51:13.264"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:13.268" level="INFO">${RESULT} = [{'diff': 8.837499999999818e-05}, {'diff': 8.081999999999881e-05}, {'diff': 8.077700000000063e-05}, {'diff': 7.926399999999903e-05}, {'diff': 7.954200000000189e-05}, {'diff': 7.96389999999994e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:13.265" endtime="20201030 11:51:13.268"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:13.272" level="INFO">${ACCURACY} = {'diff': [8.837499999999818e-05, 8.081999999999881e-05, 8.077700000000063e-05, 7.926399999999903e-05, 7.954200000000189e-05, 7.96389999999994e-05, 7.970800000000125e-05, 7.918000000000161e-05, 7.88610...</msg>
<status status="PASS" starttime="20201030 11:51:13.269" endtime="20201030 11:51:13.272"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.277" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201030 11:51:13.276" endtime="20201030 11:51:13.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.279" level="INFO">VALUE: [8.837499999999818e-05, 8.081999999999881e-05, 8.077700000000063e-05, 7.926399999999903e-05, 7.954200000000189e-05, 7.96389999999994e-05, 7.970800000000125e-05, 7.918000000000161e-05, 7.886100000000298e-05, 7.906900000000106e-05, 7.905499999999802e-05, 7.89030000000017e-05, 7.930500000000174e-05, 7.907000000000053e-05, 7.959800000000017e-05, 8.075000000000096e-05, 7.901400000000225e-05, 7.905600000000096e-05, 7.916699999999804e-05, 7.949999999999971e-05, 7.930599999999774e-05, 7.968100000000158e-05, 7.886100000000298e-05, 7.887499999999908e-05, 8.070799999999878e-05, 7.906899999999759e-05, 7.972200000000082e-05, 7.905500000000149e-05, 7.955500000000199e-05, 7.966700000000201e-05, 7.893100000000083e-05, 7.926399999999903e-05, 7.973600000000039e-05, 7.923599999999989e-05, 7.951399999999928e-05, 7.957000000000103e-05, 7.938799999999968e-05, 7.912499999999933e-05, 7.904100000000192e-05, 7.890299999999822e-05, 7.967999999999864e-05, 7.95970000000007e-05, 7.905499999999802e-05, 7.969400000000168e-05, 7.905499999999802e-05, 7.893100000000083e-05, 7.941700000000176e-05, 7.91389999999989e-05, 8.076399999999706e-05, 7.901399999999878e-05]</msg>
<status status="PASS" starttime="20201030 11:51:13.278" endtime="20201030 11:51:13.280"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.273" endtime="20201030 11:51:13.281"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:13.285" endtime="20201030 11:51:13.304"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.283" endtime="20201030 11:51:13.304"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.282" endtime="20201030 11:51:13.305"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.919" endtime="20201030 11:51:13.305"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.919" endtime="20201030 11:51:13.305"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.315" endtime="20201030 11:51:13.336"></status>
</kw>
<msg timestamp="20201030 11:51:13.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:13.313" endtime="20201030 11:51:13.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:13.338" endtime="20201030 11:51:13.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.340" endtime="20201030 11:51:13.342"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.310" endtime="20201030 11:51:13.342"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.308" endtime="20201030 11:51:13.343"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.350" endtime="20201030 11:51:13.635"></status>
</kw>
<msg timestamp="20201030 11:51:13.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022042069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022131486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:13.348" endtime="20201030 11:51:13.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022042069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022131486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:13.640" endtime="20201030 11:51:13.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.648" endtime="20201030 11:51:13.650"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.345" endtime="20201030 11:51:13.650"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.344" endtime="20201030 11:51:13.651"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:13.655" level="INFO">${RESULT} = [{'diff': 8.941699999999789e-05}, {'diff': 8.011100000000076e-05}, {'diff': 8.045799999999853e-05}, {'diff': 8.011100000000076e-05}, {'diff': 8.006999999999806e-05}, {'diff': 8.001399999999978e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:13.651" endtime="20201030 11:51:13.655"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:13.659" level="INFO">${ACCURACY} = {'diff': [8.941699999999789e-05, 8.011100000000076e-05, 8.045799999999853e-05, 8.011100000000076e-05, 8.006999999999806e-05, 8.001399999999978e-05, 8.180600000000024e-05, 8.011100000000076e-05, 8.0181...</msg>
<status status="PASS" starttime="20201030 11:51:13.656" endtime="20201030 11:51:13.659"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.664" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201030 11:51:13.662" endtime="20201030 11:51:13.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.666" level="INFO">VALUE: [8.941699999999789e-05, 8.011100000000076e-05, 8.045799999999853e-05, 8.011100000000076e-05, 8.006999999999806e-05, 8.001399999999978e-05, 8.180600000000024e-05, 8.011100000000076e-05, 8.018100000000208e-05, 8.029199999999917e-05, 8.02909999999997e-05, 8.004199999999892e-05, 8.055499999999952e-05, 8.036100000000101e-05, 8.000000000000021e-05, 8.023599999999742e-05, 8.026400000000003e-05, 7.984700000000094e-05, 8.074999999999749e-05, 8.018099999999861e-05, 7.986100000000051e-05, 7.987500000000008e-05, 8.04169999999993e-05, 8.012500000000033e-05, 8.001399999999978e-05, 8.040200000000025e-05, 8.045900000000147e-05, 8.025000000000046e-05, 8.037500000000058e-05, 8.073599999999792e-05, 8.011100000000076e-05, 8.172199999999935e-05, 8.030499999999927e-05, 8.066699999999954e-05, 8.033300000000188e-05, 8.043100000000233e-05, 8.036099999999755e-05, 8.01109999999973e-05, 8.026400000000003e-05, 8.180600000000024e-05, 7.988899999999965e-05, 8.019399999999871e-05, 8.018099999999861e-05, 8.179200000000067e-05, 8.030499999999927e-05, 8.025000000000046e-05, 8.058299999999866e-05, 8.036100000000101e-05, 8.073600000000139e-05, 8.048599999999767e-05]</msg>
<status status="PASS" starttime="20201030 11:51:13.665" endtime="20201030 11:51:13.671"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.660" endtime="20201030 11:51:13.672"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:13.676" endtime="20201030 11:51:13.695"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.674" endtime="20201030 11:51:13.696"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.673" endtime="20201030 11:51:13.696"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.306" endtime="20201030 11:51:13.697"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.306" endtime="20201030 11:51:13.697"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.706" endtime="20201030 11:51:13.725"></status>
</kw>
<msg timestamp="20201030 11:51:13.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:13.704" endtime="20201030 11:51:13.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.728" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:13.727" endtime="20201030 11:51:13.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.729" endtime="20201030 11:51:13.731"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.702" endtime="20201030 11:51:13.732"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.699" endtime="20201030 11:51:13.732"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.739" endtime="20201030 11:51:14.026"></status>
</kw>
<msg timestamp="20201030 11:51:14.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020290431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02038075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:13.737" endtime="20201030 11:51:14.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020290431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02038075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:14.031" endtime="20201030 11:51:14.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.040" endtime="20201030 11:51:14.042"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.734" endtime="20201030 11:51:14.042"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.733" endtime="20201030 11:51:14.043"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:14.047" level="INFO">${RESULT} = [{'diff': 9.031899999999843e-05}, {'diff': 8.105599999999949e-05}, {'diff': 8.279200000000167e-05}, {'diff': 8.274999999999949e-05}, {'diff': 8.149999999999824e-05}, {'diff': 8.097200000000207e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:14.044" endtime="20201030 11:51:14.048"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:14.053" level="INFO">${ACCURACY} = {'diff': [9.031899999999843e-05, 8.105599999999949e-05, 8.279200000000167e-05, 8.274999999999949e-05, 8.149999999999824e-05, 8.097200000000207e-05, 8.138900000000115e-05, 8.155599999999999e-05, 8.1485...</msg>
<status status="PASS" starttime="20201030 11:51:14.048" endtime="20201030 11:51:14.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.058" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201030 11:51:14.056" endtime="20201030 11:51:14.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.060" level="INFO">VALUE: [9.031899999999843e-05, 8.105599999999949e-05, 8.279200000000167e-05, 8.274999999999949e-05, 8.149999999999824e-05, 8.097200000000207e-05, 8.138900000000115e-05, 8.155599999999999e-05, 8.148599999999867e-05, 8.172199999999935e-05, 8.105599999999949e-05, 8.116600000000057e-05, 8.273599999999992e-05, 8.168000000000064e-05, 8.108299999999916e-05, 8.283400000000038e-05, 8.133399999999888e-05, 8.156999999999956e-05, 8.280600000000124e-05, 8.136100000000202e-05, 8.11390000000009e-05, 8.170899999999925e-05, 8.112499999999787e-05, 8.113899999999744e-05, 8.079199999999967e-05, 8.115300000000047e-05, 8.15269999999979e-05, 8.162499999999837e-05, 8.273599999999992e-05, 8.140300000000072e-05, 8.131999999999931e-05, 8.152800000000085e-05, 8.115300000000047e-05, 8.148600000000214e-05, 8.173600000000239e-05, 8.104199999999992e-05, 8.143099999999986e-05, 8.112500000000133e-05, 8.166700000000054e-05, 8.168100000000011e-05, 8.143099999999986e-05, 8.140300000000072e-05, 8.091600000000032e-05, 8.09169999999998e-05, 8.122200000000232e-05, 8.280599999999777e-05, 8.118100000000308e-05, 8.13329999999994e-05, 8.133399999999888e-05, 8.099999999999774e-05]</msg>
<status status="PASS" starttime="20201030 11:51:14.059" endtime="20201030 11:51:14.061"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.054" endtime="20201030 11:51:14.062"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:14.065" endtime="20201030 11:51:14.085"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.064" endtime="20201030 11:51:14.085"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.063" endtime="20201030 11:51:14.086"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.698" endtime="20201030 11:51:14.086"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.697" endtime="20201030 11:51:14.086"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.095" endtime="20201030 11:51:14.115"></status>
</kw>
<msg timestamp="20201030 11:51:14.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:14.094" endtime="20201030 11:51:14.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:14.117" endtime="20201030 11:51:14.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.120" endtime="20201030 11:51:14.121"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.091" endtime="20201030 11:51:14.122"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.089" endtime="20201030 11:51:14.122"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.129" endtime="20201030 11:51:14.417"></status>
</kw>
<msg timestamp="20201030 11:51:14.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020373292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020464583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:14.127" endtime="20201030 11:51:14.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020373292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020464583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:14.422" endtime="20201030 11:51:14.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.430" endtime="20201030 11:51:14.432"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.125" endtime="20201030 11:51:14.433"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.123" endtime="20201030 11:51:14.433"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:14.437" level="INFO">${RESULT} = [{'diff': 9.129100000000029e-05}, {'diff': 8.282000000000081e-05}, {'diff': 8.191600000000132e-05}, {'diff': 8.256900000000109e-05}, {'diff': 8.230500000000127e-05}, {'diff': 8.243000000000139e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:14.434" endtime="20201030 11:51:14.438"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:14.442" level="INFO">${ACCURACY} = {'diff': [9.129100000000029e-05, 8.282000000000081e-05, 8.191600000000132e-05, 8.256900000000109e-05, 8.230500000000127e-05, 8.243000000000139e-05, 8.208300000000016e-05, 8.206900000000059e-05, 8.2681...</msg>
<status status="PASS" starttime="20201030 11:51:14.439" endtime="20201030 11:51:14.442"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.447" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201030 11:51:14.446" endtime="20201030 11:51:14.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.450" level="INFO">VALUE: [9.129100000000029e-05, 8.282000000000081e-05, 8.191600000000132e-05, 8.256900000000109e-05, 8.230500000000127e-05, 8.243000000000139e-05, 8.208300000000016e-05, 8.206900000000059e-05, 8.268100000000111e-05, 8.216700000000104e-05, 8.199999999999874e-05, 8.256999999999709e-05, 8.19589999999995e-05, 8.184800000000242e-05, 8.193000000000089e-05, 8.22919999999977e-05, 8.22910000000017e-05, 8.251400000000228e-05, 8.250000000000271e-05, 8.225000000000246e-05, 8.188900000000165e-05, 8.205500000000102e-05, 8.236099999999955e-05, 8.226400000000203e-05, 8.255600000000099e-05, 8.212499999999887e-05, 8.194499999999993e-05, 8.22919999999977e-05, 8.22780000000016e-05, 8.244500000000043e-05, 8.25979999999997e-05, 8.268100000000111e-05, 8.265300000000197e-05, 8.188900000000165e-05, 8.223599999999942e-05, 8.243000000000139e-05, 8.237500000000259e-05, 8.237499999999912e-05, 8.236099999999955e-05, 8.223599999999942e-05, 8.187499999999862e-05, 8.238899999999869e-05, 8.26659999999986e-05, 8.198600000000264e-05, 8.258300000000066e-05, 8.380599999999877e-05, 8.220800000000028e-05, 8.24170000000013e-05, 8.265300000000197e-05, 8.223599999999942e-05]</msg>
<status status="PASS" starttime="20201030 11:51:14.449" endtime="20201030 11:51:14.451"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.443" endtime="20201030 11:51:14.452"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:14.457" endtime="20201030 11:51:14.476"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.455" endtime="20201030 11:51:14.477"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.453" endtime="20201030 11:51:14.477"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.087" endtime="20201030 11:51:14.478"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.086" endtime="20201030 11:51:14.478"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.487" endtime="20201030 11:51:14.508"></status>
</kw>
<msg timestamp="20201030 11:51:14.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:14.485" endtime="20201030 11:51:14.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:14.510" endtime="20201030 11:51:14.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.512" endtime="20201030 11:51:14.514"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.483" endtime="20201030 11:51:14.514"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.480" endtime="20201030 11:51:14.515"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.522" endtime="20201030 11:51:14.808"></status>
</kw>
<msg timestamp="20201030 11:51:14.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02130525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021397486, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:14.520" endtime="20201030 11:51:14.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02130525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021397486, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:14.813" endtime="20201030 11:51:14.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.821" endtime="20201030 11:51:14.823"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.517" endtime="20201030 11:51:14.823"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.515" endtime="20201030 11:51:14.824"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:14.828" level="INFO">${RESULT} = [{'diff': 9.223599999999901e-05}, {'diff': 8.33049999999988e-05}, {'diff': 8.33049999999988e-05}, {'diff': 8.294500000000093e-05}, {'diff': 8.480599999999977e-05}, {'diff': 8.354200000000242e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:51:14.825" endtime="20201030 11:51:14.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:14.832" level="INFO">${ACCURACY} = {'diff': [9.223599999999901e-05, 8.33049999999988e-05, 8.33049999999988e-05, 8.294500000000093e-05, 8.480599999999977e-05, 8.354200000000242e-05, 8.294500000000093e-05, 8.29309999999979e-05, 8.3249999...</msg>
<status status="PASS" starttime="20201030 11:51:14.829" endtime="20201030 11:51:14.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.837" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201030 11:51:14.836" endtime="20201030 11:51:14.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.839" level="INFO">VALUE: [9.223599999999901e-05, 8.33049999999988e-05, 8.33049999999988e-05, 8.294500000000093e-05, 8.480599999999977e-05, 8.354200000000242e-05, 8.294500000000093e-05, 8.29309999999979e-05, 8.324999999999999e-05, 8.330599999999827e-05, 8.294400000000146e-05, 8.375000000000049e-05, 8.316600000000257e-05, 8.369400000000221e-05, 8.376400000000006e-05, 8.319400000000171e-05, 8.319399999999824e-05, 8.291600000000232e-05, 8.31110000000003e-05, 8.29720000000006e-05, 8.294499999999747e-05, 8.316700000000204e-05, 8.337500000000012e-05, 8.323600000000042e-05, 8.305600000000149e-05, 8.338899999999969e-05, 8.334799999999698e-05, 8.331900000000184e-05, 8.334800000000045e-05, 8.352800000000285e-05, 8.362500000000037e-05, 8.362500000000037e-05, 8.354099999999948e-05, 8.341699999999883e-05, 8.323600000000042e-05, 8.337500000000012e-05, 8.312499999999987e-05, 8.369500000000168e-05, 8.298600000000017e-05, 8.307000000000106e-05, 8.302799999999888e-05, 8.337500000000012e-05, 8.354199999999895e-05, 8.481899999999987e-05, 8.299999999999974e-05, 8.354099999999948e-05, 8.306900000000159e-05, 8.290299999999876e-05, 8.287499999999962e-05, 8.298600000000017e-05]</msg>
<status status="PASS" starttime="20201030 11:51:14.838" endtime="20201030 11:51:14.841"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.833" endtime="20201030 11:51:14.842"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:14.845" endtime="20201030 11:51:14.865"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.844" endtime="20201030 11:51:14.865"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.843" endtime="20201030 11:51:14.866"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.479" endtime="20201030 11:51:14.866"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.478" endtime="20201030 11:51:14.866"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.875" endtime="20201030 11:51:14.895"></status>
</kw>
<msg timestamp="20201030 11:51:14.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:14.874" endtime="20201030 11:51:14.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:14.896" endtime="20201030 11:51:14.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.899" endtime="20201030 11:51:14.900"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.871" endtime="20201030 11:51:14.901"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.869" endtime="20201030 11:51:14.901"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.908" endtime="20201030 11:51:15.194"></status>
</kw>
<msg timestamp="20201030 11:51:15.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020258458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02035125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:14.906" endtime="20201030 11:51:15.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020258458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02035125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:15.198" endtime="20201030 11:51:15.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.207" endtime="20201030 11:51:15.209"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.904" endtime="20201030 11:51:15.209"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.902" endtime="20201030 11:51:15.210"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:15.214" level="INFO">${RESULT} = [{'diff': 9.279200000000126e-05}, {'diff': 8.442999999999992e-05}, {'diff': 8.468000000000017e-05}, {'diff': 8.452800000000038e-05}, {'diff': 8.46110000000018e-05}, {'diff': 8.462500000000137e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:15.210" endtime="20201030 11:51:15.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:15.219" level="INFO">${ACCURACY} = {'diff': [9.279200000000126e-05, 8.442999999999992e-05, 8.468000000000017e-05, 8.452800000000038e-05, 8.46110000000018e-05, 8.462500000000137e-05, 8.39859999999977e-05, 8.443100000000286e-05, 8.580599...</msg>
<status status="PASS" starttime="20201030 11:51:15.215" endtime="20201030 11:51:15.219"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.223" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201030 11:51:15.222" endtime="20201030 11:51:15.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.226" level="INFO">VALUE: [9.279200000000126e-05, 8.442999999999992e-05, 8.468000000000017e-05, 8.452800000000038e-05, 8.46110000000018e-05, 8.462500000000137e-05, 8.39859999999977e-05, 8.443100000000286e-05, 8.58059999999973e-05, 8.420799999999881e-05, 8.576399999999859e-05, 8.425000000000099e-05, 8.476400000000106e-05, 8.442999999999992e-05, 8.429100000000023e-05, 8.451400000000081e-05, 8.419399999999924e-05, 8.450000000000124e-05, 8.582000000000034e-05, 8.468099999999965e-05, 8.42919999999997e-05, 8.405599999999902e-05, 8.468099999999965e-05, 8.427799999999666e-05, 8.43469999999985e-05, 8.394399999999899e-05, 8.450000000000124e-05, 8.413900000000044e-05, 8.406899999999912e-05, 8.474999999999802e-05, 8.46660000000006e-05, 8.444399999999949e-05, 8.437500000000112e-05, 8.461099999999833e-05, 8.400000000000074e-05, 8.406999999999859e-05, 8.419500000000218e-05, 8.431899999999937e-05, 8.420900000000175e-05, 8.422200000000185e-05, 8.462500000000137e-05, 8.401300000000084e-05, 8.451399999999734e-05, 8.412500000000087e-05, 8.454100000000048e-05, 8.423599999999795e-05, 8.437500000000112e-05, 8.466700000000008e-05, 8.57920000000012e-05, 8.462500000000137e-05]</msg>
<status status="PASS" starttime="20201030 11:51:15.224" endtime="20201030 11:51:15.227"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.220" endtime="20201030 11:51:15.227"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:15.231" endtime="20201030 11:51:15.250"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.230" endtime="20201030 11:51:15.251"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.228" endtime="20201030 11:51:15.251"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.867" endtime="20201030 11:51:15.252"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.866" endtime="20201030 11:51:15.252"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.261" endtime="20201030 11:51:15.281"></status>
</kw>
<msg timestamp="20201030 11:51:15.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:15.259" endtime="20201030 11:51:15.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:15.283" endtime="20201030 11:51:15.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.285" endtime="20201030 11:51:15.287"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.256" endtime="20201030 11:51:15.287"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.254" endtime="20201030 11:51:15.288"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.294" endtime="20201030 11:51:15.582"></status>
</kw>
<msg timestamp="20201030 11:51:15.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020113236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020207056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:15.293" endtime="20201030 11:51:15.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020113236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020207056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:15.586" endtime="20201030 11:51:15.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.595" endtime="20201030 11:51:15.596"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.290" endtime="20201030 11:51:15.597"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.288" endtime="20201030 11:51:15.597"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:15.602" level="INFO">${RESULT} = [{'diff': 9.38200000000014e-05}, {'diff': 8.512500000000187e-05}, {'diff': 8.487500000000162e-05}, {'diff': 8.52370000000019e-05}, {'diff': 8.541700000000083e-05}, {'diff': 8.51249999999984e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 11:51:15.598" endtime="20201030 11:51:15.602"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:15.606" level="INFO">${ACCURACY} = {'diff': [9.38200000000014e-05, 8.512500000000187e-05, 8.487500000000162e-05, 8.52370000000019e-05, 8.541700000000083e-05, 8.51249999999984e-05, 8.568000000000117e-05, 8.512500000000187e-05, 8.5416999...</msg>
<status status="PASS" starttime="20201030 11:51:15.603" endtime="20201030 11:51:15.606"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.610" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201030 11:51:15.609" endtime="20201030 11:51:15.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.613" level="INFO">VALUE: [9.38200000000014e-05, 8.512500000000187e-05, 8.487500000000162e-05, 8.52370000000019e-05, 8.541700000000083e-05, 8.51249999999984e-05, 8.568000000000117e-05, 8.512500000000187e-05, 8.541699999999736e-05, 8.486100000000205e-05, 8.543099999999693e-05, 8.531999999999984e-05, 8.502700000000141e-05, 8.504199999999698e-05, 8.686100000000058e-05, 8.534799999999898e-05, 8.537499999999865e-05, 8.573699999999893e-05, 8.494399999999999e-05, 8.679099999999926e-05, 8.512500000000187e-05, 8.559699999999976e-05, 8.49859999999987e-05, 8.523599999999895e-05, 8.49729999999986e-05, 8.520899999999929e-05, 8.572200000000335e-05, 8.532000000000331e-05, 8.56669999999976e-05, 8.577699999999869e-05, 8.525000000000199e-05, 8.563799999999899e-05, 8.487500000000162e-05, 8.531900000000037e-05, 8.542999999999745e-05, 8.568000000000117e-05, 8.536100000000255e-05, 8.524999999999852e-05, 8.538900000000169e-05, 8.506999999999959e-05, 8.531999999999984e-05, 8.534799999999898e-05, 8.568100000000065e-05, 8.529199999999723e-05, 8.526400000000156e-05, 8.544499999999997e-05, 8.537500000000212e-05, 8.525000000000199e-05, 8.544400000000049e-05, 8.542999999999745e-05]</msg>
<status status="PASS" starttime="20201030 11:51:15.611" endtime="20201030 11:51:15.614"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.607" endtime="20201030 11:51:15.614"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:15.618" endtime="20201030 11:51:15.637"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.616" endtime="20201030 11:51:15.638"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.615" endtime="20201030 11:51:15.638"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.253" endtime="20201030 11:51:15.639"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.252" endtime="20201030 11:51:15.639"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.648" endtime="20201030 11:51:15.669"></status>
</kw>
<msg timestamp="20201030 11:51:15.669" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:15.646" endtime="20201030 11:51:15.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:15.670" endtime="20201030 11:51:15.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.673" endtime="20201030 11:51:15.675"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.644" endtime="20201030 11:51:15.675"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.641" endtime="20201030 11:51:15.676"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.682" endtime="20201030 11:51:15.968"></status>
</kw>
<msg timestamp="20201030 11:51:15.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021135431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021230833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:15.681" endtime="20201030 11:51:15.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021135431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021230833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:15.972" endtime="20201030 11:51:15.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.980" endtime="20201030 11:51:15.982"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.678" endtime="20201030 11:51:15.982"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.676" endtime="20201030 11:51:15.983"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:15.987" level="INFO">${RESULT} = [{'diff': 9.540200000000137e-05}, {'diff': 8.620799999999734e-05}, {'diff': 8.63050000000018e-05}, {'diff': 8.66249999999999e-05}, {'diff': 8.644400000000149e-05}, {'diff': 8.61249999999994e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 11:51:15.984" endtime="20201030 11:51:15.987"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:15.991" level="INFO">${ACCURACY} = {'diff': [9.540200000000137e-05, 8.620799999999734e-05, 8.63050000000018e-05, 8.66249999999999e-05, 8.644400000000149e-05, 8.61249999999994e-05, 8.599999999999927e-05, 8.627799999999866e-05, 8.5944999...</msg>
<status status="PASS" starttime="20201030 11:51:15.988" endtime="20201030 11:51:15.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.996" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201030 11:51:15.995" endtime="20201030 11:51:15.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.002" level="INFO">VALUE: [9.540200000000137e-05, 8.620799999999734e-05, 8.63050000000018e-05, 8.66249999999999e-05, 8.644400000000149e-05, 8.61249999999994e-05, 8.599999999999927e-05, 8.627799999999866e-05, 8.5944999999997e-05, 8.668099999999818e-05, 8.61249999999994e-05, 8.78059999999993e-05, 8.618100000000115e-05, 8.641699999999836e-05, 8.663899999999947e-05, 8.616599999999863e-05, 8.624999999999952e-05, 8.61660000000021e-05, 8.663900000000294e-05, 8.586099999999958e-05, 8.626399999999909e-05, 8.608299999999722e-05, 8.594500000000047e-05, 8.623599999999995e-05, 8.609700000000026e-05, 8.629100000000223e-05, 8.776400000000059e-05, 8.623699999999943e-05, 8.649999999999977e-05, 8.668100000000165e-05, 8.779100000000026e-05, 8.776400000000059e-05, 8.645800000000106e-05, 8.669399999999827e-05, 8.618000000000167e-05, 8.594400000000099e-05, 8.5944999999997e-05, 8.61249999999994e-05, 8.776400000000059e-05, 8.591700000000133e-05, 8.597200000000013e-05, 8.606999999999712e-05, 8.623599999999995e-05, 8.637499999999965e-05, 8.656900000000162e-05, 8.605500000000155e-05, 8.613899999999897e-05, 8.594400000000099e-05, 8.611099999999983e-05, 8.587499999999915e-05]</msg>
<status status="PASS" starttime="20201030 11:51:15.997" endtime="20201030 11:51:16.003"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.992" endtime="20201030 11:51:16.003"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:16.007" endtime="20201030 11:51:16.026"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.005" endtime="20201030 11:51:16.027"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.004" endtime="20201030 11:51:16.027"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.640" endtime="20201030 11:51:16.028"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.639" endtime="20201030 11:51:16.028"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.037" endtime="20201030 11:51:16.057"></status>
</kw>
<msg timestamp="20201030 11:51:16.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:16.035" endtime="20201030 11:51:16.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:16.058" endtime="20201030 11:51:16.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.061" endtime="20201030 11:51:16.062"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.032" endtime="20201030 11:51:16.063"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.030" endtime="20201030 11:51:16.063"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.070" endtime="20201030 11:51:16.355"></status>
</kw>
<msg timestamp="20201030 11:51:16.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020057292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020153139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:16.068" endtime="20201030 11:51:16.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020057292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020153139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:16.360" endtime="20201030 11:51:16.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.369" endtime="20201030 11:51:16.370"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.066" endtime="20201030 11:51:16.371"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.064" endtime="20201030 11:51:16.371"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:16.375" level="INFO">${RESULT} = [{'diff': 9.58469999999996e-05}, {'diff': 8.733400000000141e-05}, {'diff': 8.705600000000202e-05}, {'diff': 8.693099999999843e-05}, {'diff': 8.748700000000068e-05}, {'diff': 8.772299999999789e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:16.372" endtime="20201030 11:51:16.376"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:16.381" level="INFO">${ACCURACY} = {'diff': [9.58469999999996e-05, 8.733400000000141e-05, 8.705600000000202e-05, 8.693099999999843e-05, 8.748700000000068e-05, 8.772299999999789e-05, 8.751300000000087e-05, 8.881899999999693e-05, 8.71529...</msg>
<status status="PASS" starttime="20201030 11:51:16.376" endtime="20201030 11:51:16.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.385" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201030 11:51:16.384" endtime="20201030 11:51:16.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.388" level="INFO">VALUE: [9.58469999999996e-05, 8.733400000000141e-05, 8.705600000000202e-05, 8.693099999999843e-05, 8.748700000000068e-05, 8.772299999999789e-05, 8.751300000000087e-05, 8.881899999999693e-05, 8.715299999999954e-05, 8.773599999999798e-05, 8.873599999999898e-05, 8.769399999999927e-05, 8.71799999999992e-05, 8.711100000000083e-05, 8.706999999999812e-05, 8.722200000000138e-05, 8.758399999999819e-05, 8.716599999999963e-05, 8.722299999999739e-05, 8.762499999999743e-05, 8.695899999999757e-05, 8.750000000000077e-05, 8.702799999999941e-05, 8.716599999999963e-05, 8.872199999999941e-05, 8.737499999999718e-05, 8.71660000000031e-05, 8.723600000000095e-05, 8.719399999999877e-05, 8.76250000000009e-05, 8.694500000000147e-05, 8.74310000000024e-05, 8.69860000000007e-05, 8.88060000000003e-05, 8.705599999999855e-05, 8.706900000000212e-05, 8.743000000000292e-05, 8.683300000000144e-05, 8.704099999999951e-05, 8.69999999999968e-05, 8.692999999999895e-05, 8.702799999999941e-05, 8.73189999999989e-05, 8.76250000000009e-05, 8.773600000000145e-05, 8.726400000000009e-05, 8.713899999999997e-05, 8.773600000000145e-05, 8.732000000000184e-05, 8.762499999999743e-05]</msg>
<status status="PASS" starttime="20201030 11:51:16.386" endtime="20201030 11:51:16.389"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.382" endtime="20201030 11:51:16.389"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:16.393" endtime="20201030 11:51:16.412"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.391" endtime="20201030 11:51:16.413"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.390" endtime="20201030 11:51:16.413"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.029" endtime="20201030 11:51:16.414"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.028" endtime="20201030 11:51:16.414"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.423" endtime="20201030 11:51:16.443"></status>
</kw>
<msg timestamp="20201030 11:51:16.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:16.421" endtime="20201030 11:51:16.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:16.445" endtime="20201030 11:51:16.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.447" endtime="20201030 11:51:16.449"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.418" endtime="20201030 11:51:16.449"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.416" endtime="20201030 11:51:16.450"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.456" endtime="20201030 11:51:16.743"></status>
</kw>
<msg timestamp="20201030 11:51:16.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020126444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020223292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:16.455" endtime="20201030 11:51:16.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020126444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020223292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:16.748" endtime="20201030 11:51:16.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.756" endtime="20201030 11:51:16.758"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.452" endtime="20201030 11:51:16.758"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.450" endtime="20201030 11:51:16.759"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:16.763" level="INFO">${RESULT} = [{'diff': 9.684800000000007e-05}, {'diff': 8.800000000000127e-05}, {'diff': 8.868100000000018e-05}, {'diff': 8.83059999999998e-05}, {'diff': 8.981899999999793e-05}, {'diff': 8.79999999999978e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:51:16.760" endtime="20201030 11:51:16.763"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:16.767" level="INFO">${ACCURACY} = {'diff': [9.684800000000007e-05, 8.800000000000127e-05, 8.868100000000018e-05, 8.83059999999998e-05, 8.981899999999793e-05, 8.79999999999978e-05, 8.86670000000006e-05, 8.856900000000015e-05, 8.7929999...</msg>
<status status="PASS" starttime="20201030 11:51:16.764" endtime="20201030 11:51:16.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.772" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201030 11:51:16.771" endtime="20201030 11:51:16.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.774" level="INFO">VALUE: [9.684800000000007e-05, 8.800000000000127e-05, 8.868100000000018e-05, 8.83059999999998e-05, 8.981899999999793e-05, 8.79999999999978e-05, 8.86670000000006e-05, 8.856900000000015e-05, 8.792999999999995e-05, 8.79999999999978e-05, 8.83189999999999e-05, 8.980599999999783e-05, 8.805599999999955e-05, 8.837500000000165e-05, 8.818099999999968e-05, 8.982000000000087e-05, 8.805599999999955e-05, 8.856999999999962e-05, 8.806899999999965e-05, 8.827700000000119e-05, 8.854100000000101e-05, 8.837500000000165e-05, 8.973599999999998e-05, 8.865300000000104e-05, 8.81250000000014e-05, 8.837499999999818e-05, 8.790300000000029e-05, 8.798599999999823e-05, 8.859699999999929e-05, 8.8638999999998e-05, 8.827700000000119e-05, 8.806999999999912e-05, 8.873599999999898e-05, 8.875000000000202e-05, 8.98190000000014e-05, 8.809700000000226e-05, 8.861100000000233e-05, 8.824999999999805e-05, 8.823599999999848e-05, 8.837500000000165e-05, 8.836099999999861e-05, 8.868100000000018e-05, 8.977799999999869e-05, 8.856999999999962e-05, 8.834699999999904e-05, 8.84999999999983e-05, 8.826400000000109e-05, 8.788900000000072e-05, 8.811199999999783e-05, 8.83189999999999e-05]</msg>
<status status="PASS" starttime="20201030 11:51:16.773" endtime="20201030 11:51:16.775"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.768" endtime="20201030 11:51:16.776"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:16.779" endtime="20201030 11:51:16.799"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.778" endtime="20201030 11:51:16.799"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.777" endtime="20201030 11:51:16.800"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.415" endtime="20201030 11:51:16.800"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.414" endtime="20201030 11:51:16.800"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.809" endtime="20201030 11:51:16.831"></status>
</kw>
<msg timestamp="20201030 11:51:16.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:16.807" endtime="20201030 11:51:16.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.834" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:16.832" endtime="20201030 11:51:16.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.835" endtime="20201030 11:51:16.837"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.805" endtime="20201030 11:51:16.837"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.803" endtime="20201030 11:51:16.838"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.844" endtime="20201030 11:51:17.130"></status>
</kw>
<msg timestamp="20201030 11:51:17.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021082667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021180847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:16.843" endtime="20201030 11:51:17.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021082667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021180847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:17.134" endtime="20201030 11:51:17.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.142" endtime="20201030 11:51:17.144"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.840" endtime="20201030 11:51:17.145"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.838" endtime="20201030 11:51:17.145"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:17.149" level="INFO">${RESULT} = [{'diff': 9.81799999999998e-05}, {'diff': 8.940299999999832e-05}, {'diff': 8.930500000000133e-05}, {'diff': 8.973599999999998e-05}, {'diff': 8.893000000000095e-05}, {'diff': 9.080599999999883e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:17.146" endtime="20201030 11:51:17.149"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:17.153" level="INFO">${ACCURACY} = {'diff': [9.81799999999998e-05, 8.940299999999832e-05, 8.930500000000133e-05, 8.973599999999998e-05, 8.893000000000095e-05, 9.080599999999883e-05, 8.891700000000086e-05, 8.943100000000093e-05, 8.95000...</msg>
<status status="PASS" starttime="20201030 11:51:17.150" endtime="20201030 11:51:17.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.158" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201030 11:51:17.157" endtime="20201030 11:51:17.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.160" level="INFO">VALUE: [9.81799999999998e-05, 8.940299999999832e-05, 8.930500000000133e-05, 8.973599999999998e-05, 8.893000000000095e-05, 9.080599999999883e-05, 8.891700000000086e-05, 8.943100000000093e-05, 8.950000000000277e-05, 8.952799999999844e-05, 8.886199999999858e-05, 8.94450000000005e-05, 8.967999999999823e-05, 9.080499999999936e-05, 8.948599999999973e-05, 8.94999999999993e-05, 8.967999999999823e-05, 8.915299999999807e-05, 8.926399999999862e-05, 8.904200000000098e-05, 8.943099999999746e-05, 8.951400000000234e-05, 8.934700000000004e-05, 8.904199999999751e-05, 8.94999999999993e-05, 8.926300000000262e-05, 8.94999999999993e-05, 8.888799999999877e-05, 8.912499999999893e-05, 8.968099999999771e-05, 9.077700000000022e-05, 8.956900000000115e-05, 8.952799999999844e-05, 8.944400000000102e-05, 8.887500000000215e-05, 8.91250000000024e-05, 8.8945e-05, 8.918099999999721e-05, 8.943000000000145e-05, 8.951400000000234e-05, 8.926299999999915e-05, 8.887500000000215e-05, 8.904099999999804e-05, 8.88190000000004e-05, 8.891700000000086e-05, 8.931899999999743e-05, 8.929199999999776e-05, 8.951400000000234e-05, 8.893099999999696e-05, 8.911099999999936e-05]</msg>
<status status="PASS" starttime="20201030 11:51:17.159" endtime="20201030 11:51:17.162"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.154" endtime="20201030 11:51:17.163"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:17.166" endtime="20201030 11:51:17.186"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.165" endtime="20201030 11:51:17.186"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.164" endtime="20201030 11:51:17.187"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.801" endtime="20201030 11:51:17.187"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.801" endtime="20201030 11:51:17.187"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.196" endtime="20201030 11:51:17.216"></status>
</kw>
<msg timestamp="20201030 11:51:17.216" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:17.195" endtime="20201030 11:51:17.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.219" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:17.218" endtime="20201030 11:51:17.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.220" endtime="20201030 11:51:17.222"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.192" endtime="20201030 11:51:17.222"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.190" endtime="20201030 11:51:17.223"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.230" endtime="20201030 11:51:17.516"></status>
</kw>
<msg timestamp="20201030 11:51:17.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020112472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020211347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:17.228" endtime="20201030 11:51:17.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020112472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020211347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:17.520" endtime="20201030 11:51:17.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.529" endtime="20201030 11:51:17.530"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.225" endtime="20201030 11:51:17.531"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.223" endtime="20201030 11:51:17.531"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:17.535" level="INFO">${RESULT} = [{'diff': 9.887500000000174e-05}, {'diff': 8.998600000000023e-05}, {'diff': 9.0639e-05}, {'diff': 9.041700000000236e-05}, {'diff': 9.175000000000155e-05}, {'diff': 8.998600000000023e-05}, {'diff': 8.9...</msg>
<status status="PASS" starttime="20201030 11:51:17.532" endtime="20201030 11:51:17.536"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:17.540" level="INFO">${ACCURACY} = {'diff': [9.887500000000174e-05, 8.998600000000023e-05, 9.0639e-05, 9.041700000000236e-05, 9.175000000000155e-05, 8.998600000000023e-05, 8.9945000000001e-05, 9.05000000000003e-05, 9.01389999999995e-05...</msg>
<status status="PASS" starttime="20201030 11:51:17.536" endtime="20201030 11:51:17.541"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.545" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201030 11:51:17.544" endtime="20201030 11:51:17.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.548" level="INFO">VALUE: [9.887500000000174e-05, 8.998600000000023e-05, 9.0639e-05, 9.041700000000236e-05, 9.175000000000155e-05, 8.998600000000023e-05, 8.9945000000001e-05, 9.05000000000003e-05, 9.01389999999995e-05, 9.061200000000033e-05, 9.023699999999996e-05, 8.990299999999882e-05, 9.005499999999861e-05, 9.056900000000215e-05, 9.030499999999886e-05, 9.180500000000036e-05, 9.044399999999855e-05, 9.066699999999914e-05, 9.008400000000069e-05, 9.011100000000036e-05, 9.179200000000026e-05, 9.037500000000018e-05, 8.986100000000011e-05, 9.009800000000026e-05, 9.018100000000168e-05, 9.18060000000033e-05, 9.175000000000155e-05, 9.030499999999886e-05, 9.048599999999726e-05, 9.004200000000198e-05, 8.994400000000152e-05, 9.004199999999851e-05, 9.018099999999821e-05, 9.020899999999735e-05, 8.987499999999968e-05, 9.068099999999871e-05, 9.025000000000005e-05, 8.987499999999968e-05, 9.05000000000003e-05, 9.000000000000327e-05, 9.031899999999843e-05, 9.06670000000026e-05, 9.041599999999941e-05, 9.031899999999843e-05, 9.027800000000266e-05, 9.043099999999846e-05, 8.987499999999968e-05, 9.055599999999858e-05, 9.055600000000205e-05, 9.011099999999689e-05]</msg>
<status status="PASS" starttime="20201030 11:51:17.546" endtime="20201030 11:51:17.548"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.541" endtime="20201030 11:51:17.549"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:17.553" endtime="20201030 11:51:17.572"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.551" endtime="20201030 11:51:17.573"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.550" endtime="20201030 11:51:17.573"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.188" endtime="20201030 11:51:17.573"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.187" endtime="20201030 11:51:17.574"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.583" endtime="20201030 11:51:17.603"></status>
</kw>
<msg timestamp="20201030 11:51:17.603" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:17.581" endtime="20201030 11:51:17.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.605" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:17.604" endtime="20201030 11:51:17.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.607" endtime="20201030 11:51:17.608"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.578" endtime="20201030 11:51:17.609"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.576" endtime="20201030 11:51:17.609"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.616" endtime="20201030 11:51:17.903"></status>
</kw>
<msg timestamp="20201030 11:51:17.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020248986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020350486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:17.614" endtime="20201030 11:51:17.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020248986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020350486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:17.907" endtime="20201030 11:51:17.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.916" endtime="20201030 11:51:17.917"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.612" endtime="20201030 11:51:17.918"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.610" endtime="20201030 11:51:17.918"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:17.923" level="INFO">${RESULT} = [{'diff': 0.0001015000000000009}, {'diff': 9.143099999999946e-05}, {'diff': 9.138900000000075e-05}, {'diff': 9.10000000000008e-05}, {'diff': 9.287499999999921e-05}, {'diff': 9.098599999999776e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:17.919" endtime="20201030 11:51:17.923"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:17.927" level="INFO">${ACCURACY} = {'diff': [0.0001015000000000009, 9.143099999999946e-05, 9.138900000000075e-05, 9.10000000000008e-05, 9.287499999999921e-05, 9.098599999999776e-05, 9.137499999999771e-05, 9.097300000000114e-05, 9.13469...</msg>
<status status="PASS" starttime="20201030 11:51:17.924" endtime="20201030 11:51:17.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.931" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201030 11:51:17.930" endtime="20201030 11:51:17.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.934" level="INFO">VALUE: [0.0001015000000000009, 9.143099999999946e-05, 9.138900000000075e-05, 9.10000000000008e-05, 9.287499999999921e-05, 9.098599999999776e-05, 9.137499999999771e-05, 9.097300000000114e-05, 9.134699999999857e-05, 9.170899999999885e-05, 9.169400000000327e-05, 9.101400000000037e-05, 9.144399999999955e-05, 9.104100000000004e-05, 9.283299999999703e-05, 9.149999999999783e-05, 9.16529999999971e-05, 9.116699999999964e-05, 9.108400000000169e-05, 9.105600000000255e-05, 9.173600000000198e-05, 9.163899999999753e-05, 9.175000000000155e-05, 9.130499999999986e-05, 9.116600000000016e-05, 9.28330000000005e-05, 9.170799999999937e-05, 9.079199999999926e-05, 9.154200000000001e-05, 9.097300000000114e-05, 9.125000000000105e-05, 9.141699999999989e-05, 9.136100000000161e-05, 9.148600000000173e-05, 9.112500000000093e-05, 9.162499999999796e-05, 9.172300000000189e-05, 9.286099999999964e-05, 9.104100000000004e-05, 9.097199999999819e-05, 9.157000000000262e-05, 9.162499999999796e-05, 9.161100000000186e-05, 9.116699999999964e-05, 9.28330000000005e-05, 9.170899999999885e-05, 9.126400000000062e-05, 9.14589999999986e-05, 9.137500000000118e-05, 9.106900000000265e-05]</msg>
<status status="PASS" starttime="20201030 11:51:17.933" endtime="20201030 11:51:17.935"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.928" endtime="20201030 11:51:17.935"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:17.939" endtime="20201030 11:51:17.959"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.937" endtime="20201030 11:51:17.959"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.936" endtime="20201030 11:51:17.959"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.574" endtime="20201030 11:51:17.960"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.574" endtime="20201030 11:51:17.960"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.969" endtime="20201030 11:51:17.990"></status>
</kw>
<msg timestamp="20201030 11:51:17.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:17.967" endtime="20201030 11:51:17.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.993" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:17.992" endtime="20201030 11:51:17.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.994" endtime="20201030 11:51:17.996"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.965" endtime="20201030 11:51:17.997"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.962" endtime="20201030 11:51:17.997"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:18.004" endtime="20201030 11:51:18.289"></status>
</kw>
<msg timestamp="20201030 11:51:18.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021168653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021269528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:18.002" endtime="20201030 11:51:18.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:18.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021168653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021269528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:18.294" endtime="20201030 11:51:18.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:18.302" endtime="20201030 11:51:18.304"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.000" endtime="20201030 11:51:18.304"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.998" endtime="20201030 11:51:18.305"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:18.309" level="INFO">${RESULT} = [{'diff': 0.00010087500000000027}, {'diff': 9.198600000000223e-05}, {'diff': 9.255600000000058e-05}, {'diff': 9.227800000000119e-05}, {'diff': 9.254200000000101e-05}, {'diff': 9.201400000000137e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:51:18.306" endtime="20201030 11:51:18.309"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:18.313" level="INFO">${ACCURACY} = {'diff': [0.00010087500000000027, 9.198600000000223e-05, 9.255600000000058e-05, 9.227800000000119e-05, 9.254200000000101e-05, 9.201400000000137e-05, 9.237499999999871e-05, 9.236199999999861e-05, 9.219...</msg>
<status status="PASS" starttime="20201030 11:51:18.310" endtime="20201030 11:51:18.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:18.318" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201030 11:51:18.317" endtime="20201030 11:51:18.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:18.320" level="INFO">VALUE: [0.00010087500000000027, 9.198600000000223e-05, 9.255600000000058e-05, 9.227800000000119e-05, 9.254200000000101e-05, 9.201400000000137e-05, 9.237499999999871e-05, 9.236199999999861e-05, 9.21940000000003e-05, 9.261099999999939e-05, 9.231899999999696e-05, 9.380499999999889e-05, 9.381900000000193e-05, 9.251400000000187e-05, 9.268100000000071e-05, 9.237500000000218e-05, 9.259699999999982e-05, 9.190300000000082e-05, 9.273599999999951e-05, 9.237500000000218e-05, 9.212500000000193e-05, 9.375000000000008e-05, 9.268000000000123e-05, 9.267999999999776e-05, 9.380500000000236e-05, 9.255500000000111e-05, 9.249999999999883e-05, 9.21940000000003e-05, 9.266700000000114e-05, 9.236100000000261e-05, 9.243100000000046e-05, 9.248599999999926e-05, 9.197200000000266e-05, 9.263899999999853e-05, 9.201400000000137e-05, 9.187499999999821e-05, 9.227699999999825e-05, 9.227800000000119e-05, 9.262500000000243e-05, 9.211100000000236e-05, 9.244400000000055e-05, 9.209699999999932e-05, 9.243100000000046e-05, 9.222200000000291e-05, 9.195799999999962e-05, 9.206999999999965e-05, 9.222199999999944e-05, 9.256999999999668e-05, 9.229200000000076e-05, 9.262499999999896e-05]</msg>
<status status="PASS" starttime="20201030 11:51:18.319" endtime="20201030 11:51:18.322"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.314" endtime="20201030 11:51:18.323"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:18.326" endtime="20201030 11:51:18.346"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.325" endtime="20201030 11:51:18.346"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.324" endtime="20201030 11:51:18.347"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.961" endtime="20201030 11:51:18.347"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.960" endtime="20201030 11:51:18.347"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:18.356" endtime="20201030 11:51:18.377"></status>
</kw>
<msg timestamp="20201030 11:51:18.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:18.354" endtime="20201030 11:51:18.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:18.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:18.378" endtime="20201030 11:51:18.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:18.381" endtime="20201030 11:51:18.383"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.352" endtime="20201030 11:51:18.383"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.350" endtime="20201030 11:51:18.384"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:18.391" endtime="20201030 11:51:18.679"></status>
</kw>
<msg timestamp="20201030 11:51:18.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020138792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020240542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:18.390" endtime="20201030 11:51:18.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:18.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020138792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020240542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:18.683" endtime="20201030 11:51:18.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:18.691" endtime="20201030 11:51:18.693"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.387" endtime="20201030 11:51:18.693"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.385" endtime="20201030 11:51:18.694"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:18.698" level="INFO">${RESULT} = [{'diff': 0.00010175000000000115}, {'diff': 9.283399999999997e-05}, {'diff': 9.373600000000051e-05}, {'diff': 9.480499999999989e-05}, {'diff': 9.284700000000007e-05}, {'diff': 9.361100000000039e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:51:18.695" endtime="20201030 11:51:18.698"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:18.703" level="INFO">${ACCURACY} = {'diff': [0.00010175000000000115, 9.283399999999997e-05, 9.373600000000051e-05, 9.480499999999989e-05, 9.284700000000007e-05, 9.361100000000039e-05, 9.323600000000001e-05, 9.299999999999933e-05, 9.305...</msg>
<status status="PASS" starttime="20201030 11:51:18.699" endtime="20201030 11:51:18.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:18.708" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201030 11:51:18.707" endtime="20201030 11:51:18.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:18.710" level="INFO">VALUE: [0.00010175000000000115, 9.283399999999997e-05, 9.373600000000051e-05, 9.480499999999989e-05, 9.284700000000007e-05, 9.361100000000039e-05, 9.323600000000001e-05, 9.299999999999933e-05, 9.305600000000108e-05, 9.344499999999756e-05, 9.299999999999933e-05, 9.319499999999731e-05, 9.286099999999964e-05, 9.318099999999774e-05, 9.291600000000191e-05, 9.373599999999704e-05, 9.329099999999882e-05, 9.291600000000191e-05, 9.294400000000105e-05, 9.318000000000173e-05, 9.369500000000128e-05, 9.362499999999996e-05, 9.344499999999756e-05, 9.312499999999946e-05, 9.368100000000171e-05, 9.286099999999964e-05, 9.36529999999991e-05, 9.354199999999854e-05, 9.362499999999996e-05, 9.324999999999958e-05, 9.349999999999983e-05, 9.36659999999992e-05, 9.354099999999907e-05, 9.287500000000268e-05, 9.316699999999817e-05, 9.318000000000173e-05, 9.481899999999946e-05, 9.284700000000007e-05, 9.349999999999983e-05, 9.348600000000026e-05, 9.368099999999824e-05, 9.479199999999979e-05, 9.322200000000044e-05, 9.293000000000148e-05, 9.373699999999999e-05, 9.288900000000225e-05, 9.322200000000044e-05, 9.338900000000275e-05, 9.313899999999903e-05, 9.330500000000186e-05]</msg>
<status status="PASS" starttime="20201030 11:51:18.709" endtime="20201030 11:51:18.716"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.704" endtime="20201030 11:51:18.716"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:18.720" endtime="20201030 11:51:18.740"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.719" endtime="20201030 11:51:18.740"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.717" endtime="20201030 11:51:18.741"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.348" endtime="20201030 11:51:18.741"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.347" endtime="20201030 11:51:18.741"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:18.750" endtime="20201030 11:51:18.771"></status>
</kw>
<msg timestamp="20201030 11:51:18.771" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:18.748" endtime="20201030 11:51:18.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:18.774" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:18.772" endtime="20201030 11:51:18.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:18.775" endtime="20201030 11:51:18.776"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.746" endtime="20201030 11:51:18.777"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.744" endtime="20201030 11:51:18.777"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:18.784" endtime="20201030 11:51:19.071"></status>
</kw>
<msg timestamp="20201030 11:51:19.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020164514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020267528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:18.783" endtime="20201030 11:51:19.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:19.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020164514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020267528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:19.076" endtime="20201030 11:51:19.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:19.084" endtime="20201030 11:51:19.086"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.780" endtime="20201030 11:51:19.086"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.778" endtime="20201030 11:51:19.087"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:19.091" level="INFO">${RESULT} = [{'diff': 0.0001030139999999985}, {'diff': 9.40139999999999e-05}, {'diff': 9.386200000000011e-05}, {'diff': 9.408399999999775e-05}, {'diff': 9.394400000000205e-05}, {'diff': 9.409700000000132e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:19.088" endtime="20201030 11:51:19.091"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:19.095" level="INFO">${ACCURACY} = {'diff': [0.0001030139999999985, 9.40139999999999e-05, 9.386200000000011e-05, 9.408399999999775e-05, 9.394400000000205e-05, 9.409700000000132e-05, 9.587500000000221e-05, 9.409699999999785e-05, 9.40830...</msg>
<status status="PASS" starttime="20201030 11:51:19.092" endtime="20201030 11:51:19.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:19.100" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201030 11:51:19.099" endtime="20201030 11:51:19.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:19.102" level="INFO">VALUE: [0.0001030139999999985, 9.40139999999999e-05, 9.386200000000011e-05, 9.408399999999775e-05, 9.394400000000205e-05, 9.409700000000132e-05, 9.587500000000221e-05, 9.409699999999785e-05, 9.408300000000175e-05, 9.398600000000076e-05, 9.394400000000205e-05, 9.458400000000172e-05, 9.407000000000165e-05, 9.575000000000208e-05, 9.405599999999861e-05, 9.387500000000021e-05, 9.581900000000046e-05, 9.429199999999929e-05, 9.475000000000108e-05, 9.455499999999964e-05, 9.40139999999999e-05, 9.448600000000126e-05, 9.408299999999828e-05, 9.422200000000144e-05, 9.425000000000058e-05, 9.418100000000221e-05, 9.436099999999767e-05, 9.416699999999917e-05, 9.40139999999999e-05, 9.473600000000151e-05, 9.463900000000053e-05, 9.427700000000025e-05, 9.440299999999985e-05, 9.459699999999835e-05, 9.441599999999994e-05, 9.445800000000212e-05, 9.40139999999999e-05, 9.46530000000001e-05, 9.457000000000215e-05, 9.391699999999892e-05, 9.400000000000033e-05, 9.393100000000196e-05, 9.466699999999967e-05, 9.581999999999993e-05, 9.466699999999967e-05, 9.426400000000015e-05, 9.462500000000096e-05, 9.437500000000071e-05, 9.416700000000264e-05, 9.440299999999985e-05]</msg>
<status status="PASS" starttime="20201030 11:51:19.101" endtime="20201030 11:51:19.103"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.096" endtime="20201030 11:51:19.104"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:19.107" endtime="20201030 11:51:19.127"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.106" endtime="20201030 11:51:19.127"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.105" endtime="20201030 11:51:19.128"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.742" endtime="20201030 11:51:19.128"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.741" endtime="20201030 11:51:19.128"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:19.137" endtime="20201030 11:51:19.159"></status>
</kw>
<msg timestamp="20201030 11:51:19.159" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:19.136" endtime="20201030 11:51:19.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:19.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:19.160" endtime="20201030 11:51:19.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:19.163" endtime="20201030 11:51:19.164"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.133" endtime="20201030 11:51:19.165"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.131" endtime="20201030 11:51:19.165"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:19.172" endtime="20201030 11:51:19.458"></status>
</kw>
<msg timestamp="20201030 11:51:19.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021437264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021541292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:19.170" endtime="20201030 11:51:19.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:19.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021437264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021541292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:19.462" endtime="20201030 11:51:19.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:19.470" endtime="20201030 11:51:19.472"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.168" endtime="20201030 11:51:19.473"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.166" endtime="20201030 11:51:19.473"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:19.477" level="INFO">${RESULT} = [{'diff': 0.00010402799999999907}, {'diff': 9.536200000000161e-05}, {'diff': 9.673600000000004e-05}, {'diff': 9.561199999999839e-05}, {'diff': 9.51530000000006e-05}, {'diff': 9.57079999999999e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:19.474" endtime="20201030 11:51:19.477"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:19.482" level="INFO">${ACCURACY} = {'diff': [0.00010402799999999907, 9.536200000000161e-05, 9.673600000000004e-05, 9.561199999999839e-05, 9.51530000000006e-05, 9.57079999999999e-05, 9.509700000000232e-05, 9.511100000000189e-05, 9.50420...</msg>
<status status="PASS" starttime="20201030 11:51:19.478" endtime="20201030 11:51:19.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:19.486" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201030 11:51:19.485" endtime="20201030 11:51:19.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:19.492" level="INFO">VALUE: [0.00010402799999999907, 9.536200000000161e-05, 9.673600000000004e-05, 9.561199999999839e-05, 9.51530000000006e-05, 9.57079999999999e-05, 9.509700000000232e-05, 9.511100000000189e-05, 9.504200000000004e-05, 9.680600000000136e-05, 9.502800000000047e-05, 9.493099999999949e-05, 9.543099999999999e-05, 9.513900000000103e-05, 9.516700000000017e-05, 9.530599999999986e-05, 9.556900000000021e-05, 9.679199999999832e-05, 9.50140000000009e-05, 9.49720000000022e-05, 9.522199999999897e-05, 9.529200000000029e-05, 9.527800000000072e-05, 9.684699999999713e-05, 9.562499999999849e-05, 9.511100000000189e-05, 9.554200000000054e-05, 9.674999999999961e-05, 9.497199999999872e-05, 9.538900000000128e-05, 9.5027000000001e-05, 9.569400000000033e-05, 9.531899999999996e-05, 9.486099999999817e-05, 9.486100000000164e-05, 9.494400000000305e-05, 9.505500000000014e-05, 9.525000000000158e-05, 9.537500000000171e-05, 9.484700000000207e-05, 9.561100000000239e-05, 9.575000000000208e-05, 9.509799999999832e-05, 9.493099999999949e-05, 9.68470000000006e-05, 9.493000000000001e-05, 9.522199999999897e-05, 9.544400000000008e-05, 9.487499999999774e-05, 9.672200000000047e-05]</msg>
<status status="PASS" starttime="20201030 11:51:19.487" endtime="20201030 11:51:19.493"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.482" endtime="20201030 11:51:19.494"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:19.497" endtime="20201030 11:51:19.517"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.496" endtime="20201030 11:51:19.517"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.495" endtime="20201030 11:51:19.518"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.129" endtime="20201030 11:51:19.518"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.128" endtime="20201030 11:51:19.518"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:19.527" endtime="20201030 11:51:19.548"></status>
</kw>
<msg timestamp="20201030 11:51:19.548" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:19.525" endtime="20201030 11:51:19.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:19.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:19.549" endtime="20201030 11:51:19.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:19.552" endtime="20201030 11:51:19.553"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.523" endtime="20201030 11:51:19.554"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.521" endtime="20201030 11:51:19.554"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:19.561" endtime="20201030 11:51:19.849"></status>
</kw>
<msg timestamp="20201030 11:51:19.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020132319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020237, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:51:19.559" endtime="20201030 11:51:19.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:19.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020132319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020237, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:51:19.853" endtime="20201030 11:51:19.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:19.862" endtime="20201030 11:51:19.863"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.557" endtime="20201030 11:51:19.864"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.555" endtime="20201030 11:51:19.864"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:19.869" level="INFO">${RESULT} = [{'diff': 0.0001046810000000023}, {'diff': 9.591600000000144e-05}, {'diff': 9.663900000000253e-05}, {'diff': 9.618100000000074e-05}, {'diff': 9.674999999999961e-05}, {'diff': 9.78470000000016e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:19.865" endtime="20201030 11:51:19.869"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:19.874" level="INFO">${ACCURACY} = {'diff': [0.0001046810000000023, 9.591600000000144e-05, 9.663900000000253e-05, 9.618100000000074e-05, 9.674999999999961e-05, 9.78470000000016e-05, 9.672200000000047e-05, 9.62920000000013e-05, 9.647200...</msg>
<status status="PASS" starttime="20201030 11:51:19.870" endtime="20201030 11:51:19.874"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:19.878" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201030 11:51:19.877" endtime="20201030 11:51:19.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:19.881" level="INFO">VALUE: [0.0001046810000000023, 9.591600000000144e-05, 9.663900000000253e-05, 9.618100000000074e-05, 9.674999999999961e-05, 9.78470000000016e-05, 9.672200000000047e-05, 9.62920000000013e-05, 9.647200000000022e-05, 9.643100000000099e-05, 9.630499999999792e-05, 9.777799999999975e-05, 9.609700000000332e-05, 9.624999999999911e-05, 9.619400000000083e-05, 9.605500000000114e-05, 9.599999999999886e-05, 9.59859999999993e-05, 9.78059999999989e-05, 9.663900000000253e-05, 9.605600000000061e-05, 9.612500000000246e-05, 9.616700000000117e-05, 9.601300000000243e-05, 9.636200000000261e-05, 9.630499999999792e-05, 9.775000000000061e-05, 9.647200000000022e-05, 9.663900000000253e-05, 9.647200000000022e-05, 9.636099999999967e-05, 9.64859999999998e-05, 9.587499999999874e-05, 9.655600000000111e-05, 9.616599999999823e-05, 9.64729999999997e-05, 9.631899999999749e-05, 9.604199999999757e-05, 9.665299999999863e-05, 9.636099999999967e-05, 9.602699999999853e-05, 9.594400000000058e-05, 9.647200000000022e-05, 9.66669999999982e-05, 9.6027999999998e-05, 9.65140000000024e-05, 9.779199999999932e-05, 9.587499999999874e-05, 9.672299999999995e-05, 9.625000000000258e-05]</msg>
<status status="PASS" starttime="20201030 11:51:19.879" endtime="20201030 11:51:19.882"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.875" endtime="20201030 11:51:19.882"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:19.886" endtime="20201030 11:51:19.905"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.884" endtime="20201030 11:51:19.906"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.883" endtime="20201030 11:51:19.906"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.519" endtime="20201030 11:51:19.906"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.518" endtime="20201030 11:51:19.907"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:19.916" endtime="20201030 11:51:19.937"></status>
</kw>
<msg timestamp="20201030 11:51:19.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:19.914" endtime="20201030 11:51:19.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:19.940" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:19.938" endtime="20201030 11:51:19.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:19.941" endtime="20201030 11:51:19.942"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.911" endtime="20201030 11:51:19.943"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.909" endtime="20201030 11:51:19.943"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:19.950" endtime="20201030 11:51:20.238"></status>
</kw>
<msg timestamp="20201030 11:51:20.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020069167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020176722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:19.948" endtime="20201030 11:51:20.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:20.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020069167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020176722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:20.242" endtime="20201030 11:51:20.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:20.250" endtime="20201030 11:51:20.252"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.946" endtime="20201030 11:51:20.253"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.944" endtime="20201030 11:51:20.253"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:20.257" level="INFO">${RESULT} = [{'diff': 0.00010755500000000223}, {'diff': 9.881899999999999e-05}, {'diff': 9.692999999999855e-05}, {'diff': 9.76669999999992e-05}, {'diff': 9.699999999999986e-05}, {'diff': 9.719499999999784e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:20.254" endtime="20201030 11:51:20.257"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:20.261" level="INFO">${ACCURACY} = {'diff': [0.00010755500000000223, 9.881899999999999e-05, 9.692999999999855e-05, 9.76669999999992e-05, 9.699999999999986e-05, 9.719499999999784e-05, 9.699999999999986e-05, 9.744500000000156e-05, 9.7722...</msg>
<status status="PASS" starttime="20201030 11:51:20.258" endtime="20201030 11:51:20.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:20.266" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201030 11:51:20.265" endtime="20201030 11:51:20.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:20.268" level="INFO">VALUE: [0.00010755500000000223, 9.881899999999999e-05, 9.692999999999855e-05, 9.76669999999992e-05, 9.699999999999986e-05, 9.719499999999784e-05, 9.699999999999986e-05, 9.744500000000156e-05, 9.772200000000147e-05, 9.762500000000049e-05, 9.698599999999682e-05, 9.879200000000032e-05, 9.755499999999917e-05, 9.761100000000092e-05, 9.75409999999996e-05, 9.881899999999999e-05, 9.719400000000183e-05, 9.683300000000103e-05, 9.705499999999867e-05, 9.7027999999999e-05, 9.75279999999995e-05, 9.738899999999981e-05, 9.743100000000199e-05, 9.693099999999802e-05, 9.690299999999888e-05, 9.718100000000174e-05, 9.687500000000321e-05, 9.706999999999771e-05, 9.694400000000158e-05, 9.690299999999888e-05, 9.733300000000153e-05, 9.71799999999988e-05, 9.881999999999946e-05, 9.773600000000104e-05, 9.726399999999968e-05, 9.691699999999845e-05, 9.761100000000092e-05, 9.719400000000183e-05, 9.699999999999986e-05, 9.750000000000036e-05, 9.743000000000251e-05, 9.745800000000165e-05, 9.699999999999986e-05, 9.769399999999887e-05, 9.730499999999892e-05, 9.723600000000054e-05, 9.713899999999956e-05, 9.71669999999987e-05, 9.687499999999974e-05, 9.726399999999968e-05]</msg>
<status status="PASS" starttime="20201030 11:51:20.267" endtime="20201030 11:51:20.269"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.262" endtime="20201030 11:51:20.270"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:20.274" endtime="20201030 11:51:20.293"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.272" endtime="20201030 11:51:20.294"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.271" endtime="20201030 11:51:20.294"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.908" endtime="20201030 11:51:20.294"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.907" endtime="20201030 11:51:20.294"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:20.303" endtime="20201030 11:51:20.324"></status>
</kw>
<msg timestamp="20201030 11:51:20.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:20.302" endtime="20201030 11:51:20.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:20.327" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:20.326" endtime="20201030 11:51:20.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:20.328" endtime="20201030 11:51:20.330"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.299" endtime="20201030 11:51:20.331"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.297" endtime="20201030 11:51:20.331"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:20.338" endtime="20201030 11:51:20.624"></status>
</kw>
<msg timestamp="20201030 11:51:20.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021095958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021202597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:20.336" endtime="20201030 11:51:20.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:20.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021095958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021202597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:20.628" endtime="20201030 11:51:20.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:20.637" endtime="20201030 11:51:20.639"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.334" endtime="20201030 11:51:20.639"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.332" endtime="20201030 11:51:20.640"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:20.644" level="INFO">${RESULT} = [{'diff': 0.00010663899999999865}, {'diff': 9.812500000000099e-05}, {'diff': 9.812499999999752e-05}, {'diff': 9.818100000000274e-05}, {'diff': 9.831999999999896e-05}, {'diff': 9.836100000000167e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:51:20.640" endtime="20201030 11:51:20.644"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:20.648" level="INFO">${ACCURACY} = {'diff': [0.00010663899999999865, 9.812500000000099e-05, 9.812499999999752e-05, 9.818100000000274e-05, 9.831999999999896e-05, 9.836100000000167e-05, 9.798599999999782e-05, 9.83059999999994e-05, 9.8068...</msg>
<status status="PASS" starttime="20201030 11:51:20.645" endtime="20201030 11:51:20.648"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:20.652" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201030 11:51:20.651" endtime="20201030 11:51:20.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:20.655" level="INFO">VALUE: [0.00010663899999999865, 9.812500000000099e-05, 9.812499999999752e-05, 9.818100000000274e-05, 9.831999999999896e-05, 9.836100000000167e-05, 9.798599999999782e-05, 9.83059999999994e-05, 9.806899999999924e-05, 9.847299999999823e-05, 9.812500000000099e-05, 9.869399999999987e-05, 9.981900000000099e-05, 9.86800000000003e-05, 9.855500000000017e-05, 9.977799999999828e-05, 9.841600000000048e-05, 9.876399999999771e-05, 9.78609999999977e-05, 9.980599999999742e-05, 9.863900000000106e-05, 9.973699999999905e-05, 9.852700000000103e-05, 9.859700000000235e-05, 9.85410000000006e-05, 9.800000000000086e-05, 9.822200000000197e-05, 9.83470000000021e-05, 9.988799999999937e-05, 9.83059999999994e-05, 9.98060000000009e-05, 9.795900000000163e-05, 9.78059999999989e-05, 9.837500000000124e-05, 9.847299999999823e-05, 9.830499999999992e-05, 9.869399999999987e-05, 9.830499999999992e-05, 9.976399999999871e-05, 9.981900000000099e-05, 9.791599999999998e-05, 9.848599999999832e-05, 9.86670000000002e-05, 9.794500000000206e-05, 9.811099999999795e-05, 9.797200000000172e-05, 9.868099999999977e-05, 9.795800000000215e-05, 9.83059999999994e-05, 9.870799999999944e-05]</msg>
<status status="PASS" starttime="20201030 11:51:20.654" endtime="20201030 11:51:20.657"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.649" endtime="20201030 11:51:20.657"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:20.661" endtime="20201030 11:51:20.680"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.659" endtime="20201030 11:51:20.681"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.658" endtime="20201030 11:51:20.681"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.295" endtime="20201030 11:51:20.682"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.295" endtime="20201030 11:51:20.682"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:20.691" endtime="20201030 11:51:20.711"></status>
</kw>
<msg timestamp="20201030 11:51:20.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:20.689" endtime="20201030 11:51:20.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:20.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:20.712" endtime="20201030 11:51:20.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:20.715" endtime="20201030 11:51:20.717"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.686" endtime="20201030 11:51:20.717"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.684" endtime="20201030 11:51:20.718"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:20.724" endtime="20201030 11:51:21.010"></status>
</kw>
<msg timestamp="20201030 11:51:21.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020156708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020264292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:20.723" endtime="20201030 11:51:21.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:21.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020156708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020264292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:21.014" endtime="20201030 11:51:21.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:21.023" endtime="20201030 11:51:21.024"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.720" endtime="20201030 11:51:21.025"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.718" endtime="20201030 11:51:21.025"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:21.029" level="INFO">${RESULT} = [{'diff': 0.00010758400000000085}, {'diff': 9.913799999999862e-05}, {'diff': 9.955500000000117e-05}, {'diff': 9.958300000000031e-05}, {'diff': 9.915300000000113e-05}, {'diff': 9.931900000000049e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:51:21.026" endtime="20201030 11:51:21.030"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:21.034" level="INFO">${ACCURACY} = {'diff': [0.00010758400000000085, 9.913799999999862e-05, 9.955500000000117e-05, 9.958300000000031e-05, 9.915300000000113e-05, 9.931900000000049e-05, 9.941700000000095e-05, 9.91670000000007e-05, 9.9264...</msg>
<status status="PASS" starttime="20201030 11:51:21.030" endtime="20201030 11:51:21.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:21.039" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201030 11:51:21.038" endtime="20201030 11:51:21.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:21.042" level="INFO">VALUE: [0.00010758400000000085, 9.913799999999862e-05, 9.955500000000117e-05, 9.958300000000031e-05, 9.915300000000113e-05, 9.931900000000049e-05, 9.941700000000095e-05, 9.91670000000007e-05, 9.926400000000168e-05, 9.933399999999953e-05, 9.906999999999971e-05, 9.955600000000064e-05, 9.908400000000275e-05, 9.905600000000014e-05, 9.919400000000037e-05, 9.906900000000024e-05, 9.956900000000074e-05, 9.973599999999957e-05, 0.00010075000000000014, 9.956900000000074e-05, 9.887500000000174e-05, 0.00010075000000000014, 9.937499999999877e-05, 9.919400000000037e-05, 9.9722e-05, 9.958400000000325e-05, 9.936199999999867e-05, 9.905600000000014e-05, 9.89999999999984e-05, 9.952699999999856e-05, 9.958300000000031e-05, 9.89860000000023e-05, 9.954200000000107e-05, 9.945800000000019e-05, 9.906999999999971e-05, 9.904200000000057e-05, 9.883299999999956e-05, 0.000100819999999998, 9.918100000000027e-05, 9.893100000000002e-05, 9.962500000000249e-05, 9.962500000000249e-05, 9.944400000000062e-05, 9.9028000000001e-05, 9.93609999999992e-05, 9.893000000000055e-05, 9.938899999999834e-05, 9.973599999999957e-05, 9.94860000000028e-05, 9.912499999999852e-05]</msg>
<status status="PASS" starttime="20201030 11:51:21.040" endtime="20201030 11:51:21.042"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.035" endtime="20201030 11:51:21.043"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:21.047" endtime="20201030 11:51:21.066"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.045" endtime="20201030 11:51:21.067"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.044" endtime="20201030 11:51:21.067"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.683" endtime="20201030 11:51:21.067"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.682" endtime="20201030 11:51:21.067"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:21.076" endtime="20201030 11:51:21.097"></status>
</kw>
<msg timestamp="20201030 11:51:21.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:21.075" endtime="20201030 11:51:21.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:21.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:21.099" endtime="20201030 11:51:21.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:21.102" endtime="20201030 11:51:21.103"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.072" endtime="20201030 11:51:21.104"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.070" endtime="20201030 11:51:21.104"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:21.111" endtime="20201030 11:51:21.399"></status>
</kw>
<msg timestamp="20201030 11:51:21.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02008575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020196194, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:21.109" endtime="20201030 11:51:21.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:21.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02008575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020196194, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:21.403" endtime="20201030 11:51:21.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:21.411" endtime="20201030 11:51:21.413"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.107" endtime="20201030 11:51:21.413"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.105" endtime="20201030 11:51:21.414"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:21.418" level="INFO">${RESULT} = [{'diff': 0.00011044400000000121}, {'diff': 0.0001000549999999982}, {'diff': 9.98609999999997e-05}, {'diff': 0.00010011099999999995}, {'diff': 0.00010015300000000213}, {'diff': 0.00010048600000000033}...</msg>
<status status="PASS" starttime="20201030 11:51:21.415" endtime="20201030 11:51:21.418"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:21.422" level="INFO">${ACCURACY} = {'diff': [0.00011044400000000121, 0.0001000549999999982, 9.98609999999997e-05, 0.00010011099999999995, 0.00010015300000000213, 0.00010048600000000033, 0.00010037499999999977, 0.00010012499999999952, 0...</msg>
<status status="PASS" starttime="20201030 11:51:21.419" endtime="20201030 11:51:21.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:21.427" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201030 11:51:21.426" endtime="20201030 11:51:21.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:21.430" level="INFO">VALUE: [0.00011044400000000121, 0.0001000549999999982, 9.98609999999997e-05, 0.00010011099999999995, 0.00010015300000000213, 0.00010048600000000033, 0.00010037499999999977, 0.00010012499999999952, 0.00010012499999999952, 0.00010001399999999896, 0.00010048600000000033, 0.00010012499999999952, 0.00010044400000000162, 0.00010045800000000119, 0.00010036099999999673, 0.0001004020000000029, 0.00010012499999999952, 0.00010034699999999716, 9.987499999999927e-05, 0.00010041699999999848, 9.99999999999994e-05, 9.994400000000112e-05, 0.00010063899999999959, 0.00010026399999999921, 9.987500000000274e-05, 0.00010186099999999823, 0.00010181899999999952, 9.991600000000198e-05, 0.00010004200000000157, 0.00010030499999999845, 0.00010051399999999946, 0.00010018100000000127, 9.998599999999983e-05, 0.00010044499999999762, 0.00010018100000000127, 0.00010183399999999856, 9.991699999999798e-05, 0.00010069500000000134, 0.000101819999999999, 0.00010011199999999942, 0.00010027800000000225, 0.00010048600000000033, 0.00010066599999999926, 0.00010058300000000131, 0.00010019400000000137, 0.00010181899999999952, 0.00010022299999999998, 0.00010176399999999725, 0.00010023600000000008, 0.00010012499999999952]</msg>
<status status="PASS" starttime="20201030 11:51:21.428" endtime="20201030 11:51:21.431"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.423" endtime="20201030 11:51:21.431"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:21.435" endtime="20201030 11:51:21.455"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.434" endtime="20201030 11:51:21.456"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.432" endtime="20201030 11:51:21.456"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.068" endtime="20201030 11:51:21.456"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.068" endtime="20201030 11:51:21.456"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:21.465" endtime="20201030 11:51:21.488"></status>
</kw>
<msg timestamp="20201030 11:51:21.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:21.464" endtime="20201030 11:51:21.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:21.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:21.489" endtime="20201030 11:51:21.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:21.492" endtime="20201030 11:51:21.493"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.461" endtime="20201030 11:51:21.494"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.459" endtime="20201030 11:51:21.494"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:21.501" endtime="20201030 11:51:21.788"></status>
</kw>
<msg timestamp="20201030 11:51:21.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021278722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021388847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:21.500" endtime="20201030 11:51:21.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:21.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021278722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021388847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:21.792" endtime="20201030 11:51:21.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:21.800" endtime="20201030 11:51:21.802"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.497" endtime="20201030 11:51:21.802"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.495" endtime="20201030 11:51:21.803"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:21.807" level="INFO">${RESULT} = [{'diff': 0.00011012499999999911}, {'diff': 0.00010129199999999935}, {'diff': 0.00010141699999999948}, {'diff': 0.00010109700000000138}, {'diff': 0.00010140299999999991}, {'diff': 0.000101513999999997...</msg>
<status status="PASS" starttime="20201030 11:51:21.804" endtime="20201030 11:51:21.807"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:21.811" level="INFO">${ACCURACY} = {'diff': [0.00011012499999999911, 0.00010129199999999935, 0.00010141699999999948, 0.00010109700000000138, 0.00010140299999999991, 0.000101513999999997, 0.0001017359999999981, 0.0001013749999999973, 0....</msg>
<status status="PASS" starttime="20201030 11:51:21.808" endtime="20201030 11:51:21.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:21.815" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201030 11:51:21.814" endtime="20201030 11:51:21.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:21.818" level="INFO">VALUE: [0.00011012499999999911, 0.00010129199999999935, 0.00010141699999999948, 0.00010109700000000138, 0.00010140299999999991, 0.000101513999999997, 0.0001017359999999981, 0.0001013749999999973, 0.0001011809999999988, 0.00010137500000000077, 0.00010098600000000083, 0.00010151299999999752, 0.00010101399999999996, 0.0001016939999999994, 0.00010112500000000052, 0.0001012359999999976, 0.00010279200000000085, 0.00010138900000000034, 0.00010130599999999892, 0.00010109700000000138, 0.00010162500000000102, 0.00010097300000000073, 0.00010158300000000231, 0.00010166600000000026, 0.00010170799999999897, 0.00010131900000000249, 0.00010144399999999915, 0.00010092999999999908, 0.00010136099999999773, 0.00010282, 0.00010097300000000073, 0.0001017359999999981, 0.00010170900000000191, 0.00010162500000000102, 0.00010129199999999935, 0.00010163900000000059, 0.0001010549999999992, 0.0001012359999999976, 0.00010112500000000052, 0.00010155500000000317, 0.00010125000000000065, 0.0001015000000000009, 0.0001013199999999985, 0.00010098600000000083, 0.00010280599999999696, 0.00010083400000000103, 0.00010108400000000128, 0.00010156999999999874, 0.00010116699999999923, 0.00010162500000000102]</msg>
<status status="PASS" starttime="20201030 11:51:21.817" endtime="20201030 11:51:21.820"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.812" endtime="20201030 11:51:21.820"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:21.824" endtime="20201030 11:51:21.843"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.822" endtime="20201030 11:51:21.844"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.821" endtime="20201030 11:51:21.844"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.457" endtime="20201030 11:51:21.845"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.457" endtime="20201030 11:51:21.845"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:21.854" endtime="20201030 11:51:21.874"></status>
</kw>
<msg timestamp="20201030 11:51:21.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:21.852" endtime="20201030 11:51:21.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:21.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:21.876" endtime="20201030 11:51:21.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:21.878" endtime="20201030 11:51:21.880"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.850" endtime="20201030 11:51:21.880"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.847" endtime="20201030 11:51:21.881"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:21.888" endtime="20201030 11:51:22.174"></status>
</kw>
<msg timestamp="20201030 11:51:22.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020177153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020288528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:21.886" endtime="20201030 11:51:22.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:22.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020177153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020288528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:22.178" endtime="20201030 11:51:22.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:22.187" endtime="20201030 11:51:22.188"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.883" endtime="20201030 11:51:22.189"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.882" endtime="20201030 11:51:22.189"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:22.193" level="INFO">${RESULT} = [{'diff': 0.00011137500000000036}, {'diff': 0.00010247199999999929}, {'diff': 0.00010219500000000284}, {'diff': 0.00010243100000000005}, {'diff': 0.00010243100000000005}, {'diff': 0.000101985999999998...</msg>
<status status="PASS" starttime="20201030 11:51:22.190" endtime="20201030 11:51:22.193"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:22.198" level="INFO">${ACCURACY} = {'diff': [0.00011137500000000036, 0.00010247199999999929, 0.00010219500000000284, 0.00010243100000000005, 0.00010243100000000005, 0.00010198599999999836, 0.00010208299999999934, 0.00010237500000000177...</msg>
<status status="PASS" starttime="20201030 11:51:22.194" endtime="20201030 11:51:22.198"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:22.203" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201030 11:51:22.202" endtime="20201030 11:51:22.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:22.205" level="INFO">VALUE: [0.00011137500000000036, 0.00010247199999999929, 0.00010219500000000284, 0.00010243100000000005, 0.00010243100000000005, 0.00010198599999999836, 0.00010208299999999934, 0.00010237500000000177, 0.00010381899999999805, 0.00010248599999999886, 0.00010244400000000015, 0.00010263900000000159, 0.00010205599999999967, 0.00010240300000000091, 0.00010256999999999974, 0.00010380600000000142, 0.00010205599999999967, 0.00010226399999999775, 0.00010275000000000215, 0.00010202799999999707, 0.00010206899999999977, 0.00010218000000000033, 0.0001023610000000022, 0.00010268000000000083, 0.00010195799999999922, 0.0001021809999999998, 0.00010270900000000291, 0.00010380600000000142, 0.00010258399999999931, 0.00010236099999999873, 0.00010219499999999937, 0.00010212500000000152, 0.00010245799999999972, 0.0001019160000000005, 0.00010231900000000002, 0.00010263899999999812, 0.00010261099999999898, 0.00010230500000000045, 0.00010206899999999977, 0.00010266700000000073, 0.00010249999999999843, 0.0001025420000000006, 0.00010247199999999929, 0.00010207000000000271, 0.00010230500000000045, 0.0001021939999999999, 0.00010206899999999977, 0.00010230500000000045, 0.00010230500000000045, 0.00010376399999999925]</msg>
<status status="PASS" starttime="20201030 11:51:22.204" endtime="20201030 11:51:22.206"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.199" endtime="20201030 11:51:22.207"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:22.211" endtime="20201030 11:51:22.230"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.209" endtime="20201030 11:51:22.231"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.208" endtime="20201030 11:51:22.231"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.846" endtime="20201030 11:51:22.231"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.845" endtime="20201030 11:51:22.231"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:22.240" endtime="20201030 11:51:22.262"></status>
</kw>
<msg timestamp="20201030 11:51:22.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:22.239" endtime="20201030 11:51:22.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:22.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:22.263" endtime="20201030 11:51:22.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:22.266" endtime="20201030 11:51:22.268"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.236" endtime="20201030 11:51:22.268"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.234" endtime="20201030 11:51:22.269"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:22.275" endtime="20201030 11:51:22.562"></status>
</kw>
<msg timestamp="20201030 11:51:22.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020265056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020376944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:22.274" endtime="20201030 11:51:22.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:22.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020265056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020376944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:22.567" endtime="20201030 11:51:22.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:22.575" endtime="20201030 11:51:22.576"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.271" endtime="20201030 11:51:22.577"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.269" endtime="20201030 11:51:22.577"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:22.581" level="INFO">${RESULT} = [{'diff': 0.00011188800000000096}, {'diff': 0.00010299999999999893}, {'diff': 0.00010312499999999905}, {'diff': 0.00010341599999999854}, {'diff': 0.00010352799999999857}, {'diff': 0.000103068999999997...</msg>
<status status="PASS" starttime="20201030 11:51:22.578" endtime="20201030 11:51:22.582"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:22.586" level="INFO">${ACCURACY} = {'diff': [0.00011188800000000096, 0.00010299999999999893, 0.00010312499999999905, 0.00010341599999999854, 0.00010352799999999857, 0.0001030689999999973, 0.00010354199999999814, 0.00010324999999999918,...</msg>
<status status="PASS" starttime="20201030 11:51:22.582" endtime="20201030 11:51:22.586"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:22.590" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201030 11:51:22.589" endtime="20201030 11:51:22.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:22.593" level="INFO">VALUE: [0.00011188800000000096, 0.00010299999999999893, 0.00010312499999999905, 0.00010341599999999854, 0.00010352799999999857, 0.0001030689999999973, 0.00010354199999999814, 0.00010324999999999918, 0.00010324999999999918, 0.00010316699999999776, 0.00010302800000000154, 0.00010316700000000123, 0.00010294500000000012, 0.00010330500000000145, 0.00010297199999999979, 0.00010344400000000115, 0.00010327800000000179, 0.00010297199999999979, 0.00010345800000000072, 0.00010294400000000065, 0.00010343100000000105, 0.00010477799999999982, 0.00010361099999999998, 0.00010322299999999951, 0.00010323600000000308, 0.00010336200000000267, 0.00010481900000000252, 0.0001029160000000015, 0.00010316599999999829, 0.000103513999999999, 0.00010290299999999794, 0.00010361099999999998, 0.000104820000000002, 0.0001037360000000001, 0.00010358300000000084, 0.00010338899999999887, 0.00010361099999999998, 0.00010357000000000074, 0.00010318000000000133, 0.00010308300000000034, 0.00010302800000000154, 0.0001030550000000012, 0.00010329199999999789, 0.00010297199999999979, 0.0001030550000000012, 0.00010359700000000041, 0.00010326399999999875, 0.00010294500000000012, 0.00010352799999999857, 0.00010477699999999687]</msg>
<status status="PASS" starttime="20201030 11:51:22.591" endtime="20201030 11:51:22.594"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.586" endtime="20201030 11:51:22.594"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:22.598" endtime="20201030 11:51:22.617"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.596" endtime="20201030 11:51:22.618"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.595" endtime="20201030 11:51:22.618"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.232" endtime="20201030 11:51:22.618"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.232" endtime="20201030 11:51:22.619"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:22.627" endtime="20201030 11:51:22.650"></status>
</kw>
<msg timestamp="20201030 11:51:22.650" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:22.626" endtime="20201030 11:51:22.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:22.653" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:22.651" endtime="20201030 11:51:22.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:22.654" endtime="20201030 11:51:22.655"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.623" endtime="20201030 11:51:22.656"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.621" endtime="20201030 11:51:22.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:22.663" endtime="20201030 11:51:22.949"></status>
</kw>
<msg timestamp="20201030 11:51:22.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021072792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021185611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:22.661" endtime="20201030 11:51:22.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:22.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021072792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021185611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:22.953" endtime="20201030 11:51:22.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:22.961" endtime="20201030 11:51:22.963"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.659" endtime="20201030 11:51:22.963"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.657" endtime="20201030 11:51:22.964"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:22.968" level="INFO">${RESULT} = [{'diff': 0.00011281900000000011}, {'diff': 0.0001040550000000022}, {'diff': 0.00010575000000000168}, {'diff': 0.00010405499999999873}, {'diff': 0.00010580500000000048}, {'diff': 0.0001042919999999988...</msg>
<status status="PASS" starttime="20201030 11:51:22.965" endtime="20201030 11:51:22.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:22.972" level="INFO">${ACCURACY} = {'diff': [0.00011281900000000011, 0.0001040550000000022, 0.00010575000000000168, 0.00010405499999999873, 0.00010580500000000048, 0.00010429199999999889, 0.0001038749999999998, 0.00010418099999999833, ...</msg>
<status status="PASS" starttime="20201030 11:51:22.969" endtime="20201030 11:51:22.972"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:22.977" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201030 11:51:22.976" endtime="20201030 11:51:22.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:22.982" level="INFO">VALUE: [0.00011281900000000011, 0.0001040550000000022, 0.00010575000000000168, 0.00010405499999999873, 0.00010580500000000048, 0.00010429199999999889, 0.0001038749999999998, 0.00010418099999999833, 0.0001043750000000003, 0.00010466699999999926, 0.00010457000000000174, 0.00010581900000000005, 0.00010468000000000283, 0.00010442999999999911, 0.00010383300000000109, 0.00010448600000000086, 0.00010427799999999932, 0.00010452799999999957, 0.00010397200000000079, 0.00010412500000000005, 0.00010394500000000112, 0.00010467999999999936, 0.00010580599999999996, 0.00010448700000000033, 0.00010470899999999797, 0.00010470800000000197, 0.00010390299999999894, 0.00010455499999999923, 0.0001045689999999988, 0.00010462500000000055, 0.00010476400000000025, 0.0001058339999999991, 0.00010399999999999993, 0.00010479099999999991, 0.00010402799999999907, 0.00010404100000000263, 0.00010575000000000168, 0.00010393000000000208, 0.00010388899999999937, 0.00010393000000000208, 0.00010425000000000018, 0.00010388899999999937, 0.00010384700000000066, 0.00010584800000000213, 0.0001045420000000026, 0.00010409700000000091, 0.00010447200000000129, 0.00010429200000000236, 0.00010406900000000177, 0.0001040550000000022]</msg>
<status status="PASS" starttime="20201030 11:51:22.978" endtime="20201030 11:51:22.983"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.973" endtime="20201030 11:51:22.984"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:22.988" endtime="20201030 11:51:23.007"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.986" endtime="20201030 11:51:23.008"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.985" endtime="20201030 11:51:23.008"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.620" endtime="20201030 11:51:23.009"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.619" endtime="20201030 11:51:23.009"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:23.018" endtime="20201030 11:51:23.039"></status>
</kw>
<msg timestamp="20201030 11:51:23.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:23.016" endtime="20201030 11:51:23.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:23.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:23.040" endtime="20201030 11:51:23.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:23.043" endtime="20201030 11:51:23.044"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.013" endtime="20201030 11:51:23.045"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.011" endtime="20201030 11:51:23.045"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:23.052" endtime="20201030 11:51:23.337"></status>
</kw>
<msg timestamp="20201030 11:51:23.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020169819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020285375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:23.050" endtime="20201030 11:51:23.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:23.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020169819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020285375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:23.342" endtime="20201030 11:51:23.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:23.350" endtime="20201030 11:51:23.352"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.048" endtime="20201030 11:51:23.352"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.046" endtime="20201030 11:51:23.353"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:23.357" level="INFO">${RESULT} = [{'diff': 0.00011555600000000277}, {'diff': 0.00010536099999999826}, {'diff': 0.0001050559999999992}, {'diff': 0.0001050140000000005}, {'diff': 0.00010543099999999958}, {'diff': 0.0001050559999999992}...</msg>
<status status="PASS" starttime="20201030 11:51:23.353" endtime="20201030 11:51:23.357"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:23.408" level="INFO">${ACCURACY} = {'diff': [0.00011555600000000277, 0.00010536099999999826, 0.0001050559999999992, 0.0001050140000000005, 0.00010543099999999958, 0.0001050559999999992, 0.0001055559999999997, 0.00010500000000000093, 0....</msg>
<status status="PASS" starttime="20201030 11:51:23.358" endtime="20201030 11:51:23.408"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:23.413" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201030 11:51:23.412" endtime="20201030 11:51:23.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:23.415" level="INFO">VALUE: [0.00011555600000000277, 0.00010536099999999826, 0.0001050559999999992, 0.0001050140000000005, 0.00010543099999999958, 0.0001050559999999992, 0.0001055559999999997, 0.00010500000000000093, 0.0001057079999999995, 0.00010530499999999998, 0.00010679100000000191, 0.00010488900000000037, 0.00010502800000000007, 0.00010558299999999937, 0.0001051949999999989, 0.00010548599999999839, 0.0001050559999999992, 0.00010511099999999801, 0.0001050559999999992, 0.00010498700000000083, 0.00010676400000000225, 0.00010501399999999703, 0.0001052360000000016, 0.00010575000000000168, 0.00010492999999999961, 0.00010538900000000087, 0.00010516699999999976, 0.00010527800000000032, 0.0001051810000000028, 0.00010491699999999951, 0.00010511100000000148, 0.00010677799999999835, 0.00010543099999999958, 0.00010512499999999758, 0.00010569399999999993, 0.00010684700000000019, 0.00010495800000000222, 0.00010677799999999835, 0.00010533299999999912, 0.00010525000000000118, 0.00010531999999999903, 0.00010575000000000168, 0.00010500000000000093, 0.00010568099999999983, 0.00010568099999999983, 0.00010494399999999918, 0.00010494399999999918, 0.00010486099999999776, 0.00010484699999999819, 0.0001050140000000005]</msg>
<status status="PASS" starttime="20201030 11:51:23.414" endtime="20201030 11:51:23.416"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.409" endtime="20201030 11:51:23.416"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:23.420" endtime="20201030 11:51:23.440"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.419" endtime="20201030 11:51:23.440"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.417" endtime="20201030 11:51:23.440"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.010" endtime="20201030 11:51:23.441"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.009" endtime="20201030 11:51:23.441"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:23.450" endtime="20201030 11:51:23.472"></status>
</kw>
<msg timestamp="20201030 11:51:23.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:23.448" endtime="20201030 11:51:23.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:23.475" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:23.473" endtime="20201030 11:51:23.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:23.476" endtime="20201030 11:51:23.477"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.446" endtime="20201030 11:51:23.478"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.443" endtime="20201030 11:51:23.479"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:23.485" endtime="20201030 11:51:23.772"></status>
</kw>
<msg timestamp="20201030 11:51:23.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019996264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020110986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:23.484" endtime="20201030 11:51:23.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:23.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019996264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020110986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:23.776" endtime="20201030 11:51:23.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:23.785" endtime="20201030 11:51:23.786"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.481" endtime="20201030 11:51:23.787"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.479" endtime="20201030 11:51:23.787"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:23.791" level="INFO">${RESULT} = [{'diff': 0.00011472200000000113}, {'diff': 0.00010776399999999978}, {'diff': 0.00010611099999999901}, {'diff': 0.00010594499999999965}, {'diff': 0.00010588900000000137}, {'diff': 0.000106667000000001...</msg>
<status status="PASS" starttime="20201030 11:51:23.788" endtime="20201030 11:51:23.792"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:23.795" level="INFO">${ACCURACY} = {'diff': [0.00011472200000000113, 0.00010776399999999978, 0.00010611099999999901, 0.00010594499999999965, 0.00010588900000000137, 0.00010666700000000126, 0.00010611099999999901, 0.00010641699999999754...</msg>
<status status="PASS" starttime="20201030 11:51:23.792" endtime="20201030 11:51:23.796"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:23.801" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201030 11:51:23.799" endtime="20201030 11:51:23.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:23.803" level="INFO">VALUE: [0.00011472200000000113, 0.00010776399999999978, 0.00010611099999999901, 0.00010594499999999965, 0.00010588900000000137, 0.00010666700000000126, 0.00010611099999999901, 0.00010641699999999754, 0.00010662499999999908, 0.00010647199999999982, 0.00010662499999999908, 0.00010637499999999883, 0.00010593000000000061, 0.00010637499999999883, 0.00010668099999999736, 0.00010637499999999883, 0.00010608399999999935, 0.00010661099999999951, 0.00010625000000000218, 0.00010643100000000058, 0.00010641699999999754, 0.00010625000000000218, 0.000105901999999998, 0.00010619400000000043, 0.0001063750000000023, 0.0001058750000000018, 0.00010623599999999914, 0.00010597299999999879, 0.0001058750000000018, 0.0001063750000000023, 0.00010612499999999858, 0.00010612500000000205, 0.0001060690000000003, 0.00010599999999999846, 0.00010658300000000037, 0.00010595799999999975, 0.00010637499999999883, 0.00010781999999999806, 0.0001058750000000018, 0.00010780599999999849, 0.00010665300000000169, 0.00010780599999999849, 0.00010645899999999972, 0.00010591699999999704, 0.0001062499999999987, 0.00010648599999999939, 0.00010588900000000137, 0.00010781900000000205, 0.00010781899999999858, 0.00010662500000000255]</msg>
<status status="PASS" starttime="20201030 11:51:23.802" endtime="20201030 11:51:23.810"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.796" endtime="20201030 11:51:23.811"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:23.814" endtime="20201030 11:51:23.834"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.813" endtime="20201030 11:51:23.834"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.812" endtime="20201030 11:51:23.835"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.442" endtime="20201030 11:51:23.835"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.441" endtime="20201030 11:51:23.835"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:23.844" endtime="20201030 11:51:23.865"></status>
</kw>
<msg timestamp="20201030 11:51:23.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:23.843" endtime="20201030 11:51:23.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:23.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:23.867" endtime="20201030 11:51:23.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:23.869" endtime="20201030 11:51:23.871"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.840" endtime="20201030 11:51:23.872"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.838" endtime="20201030 11:51:23.872"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:23.879" endtime="20201030 11:51:24.165"></status>
</kw>
<msg timestamp="20201030 11:51:24.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020153153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020269417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:23.877" endtime="20201030 11:51:24.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:24.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020153153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020269417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:24.169" endtime="20201030 11:51:24.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:24.177" endtime="20201030 11:51:24.179"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.875" endtime="20201030 11:51:24.180"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.873" endtime="20201030 11:51:24.180"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:24.184" level="INFO">${RESULT} = [{'diff': 0.00011626400000000134}, {'diff': 0.00010718000000000186}, {'diff': 0.00010688900000000237}, {'diff': 0.00010736100000000026}, {'diff': 0.00010698599999999989}, {'diff': 0.000107083000000000...</msg>
<status status="PASS" starttime="20201030 11:51:24.181" endtime="20201030 11:51:24.184"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:24.189" level="INFO">${ACCURACY} = {'diff': [0.00011626400000000134, 0.00010718000000000186, 0.00010688900000000237, 0.00010736100000000026, 0.00010698599999999989, 0.00010708300000000087, 0.00010706899999999783, 0.00010763899999999965...</msg>
<status status="PASS" starttime="20201030 11:51:24.185" endtime="20201030 11:51:24.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:24.194" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201030 11:51:24.193" endtime="20201030 11:51:24.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:24.196" level="INFO">VALUE: [0.00011626400000000134, 0.00010718000000000186, 0.00010688900000000237, 0.00010736100000000026, 0.00010698599999999989, 0.00010708300000000087, 0.00010706899999999783, 0.00010763899999999965, 0.00010874999999999774, 0.00010880599999999949, 0.0001072499999999997, 0.00010736100000000026, 0.00010687499999999933, 0.00010738799999999993, 0.00010717999999999839, 0.00010705500000000173, 0.00010881899999999958, 0.00010881899999999958, 0.00010769400000000193, 0.00010713899999999915, 0.00010773600000000064, 0.0001073889999999994, 0.00010758400000000085, 0.00010877800000000035, 0.00010713799999999968, 0.00010749999999999996, 0.00010776399999999978, 0.00010726400000000275, 0.0001070279999999986, 0.00010726399999999928, 0.00010737499999999983, 0.00010702800000000207, 0.00010879199999999992, 0.00010701399999999903, 0.00010761100000000051, 0.00010712499999999958, 0.0001077630000000003, 0.0001075829999999979, 0.00010716700000000176, 0.00010693000000000161, 0.00010742999999999864, 0.0001075690000000018, 0.00010736100000000026, 0.00010692999999999814, 0.00010729199999999842, 0.00010736100000000026, 0.00010757000000000128, 0.00010723600000000014, 0.00010712499999999958, 0.00010694399999999771]</msg>
<status status="PASS" starttime="20201030 11:51:24.195" endtime="20201030 11:51:24.197"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.190" endtime="20201030 11:51:24.198"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:24.201" endtime="20201030 11:51:24.221"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.200" endtime="20201030 11:51:24.221"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.199" endtime="20201030 11:51:24.222"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.836" endtime="20201030 11:51:24.222"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.836" endtime="20201030 11:51:24.222"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:24.231" endtime="20201030 11:51:24.252"></status>
</kw>
<msg timestamp="20201030 11:51:24.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:24.229" endtime="20201030 11:51:24.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:24.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:24.253" endtime="20201030 11:51:24.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:24.256" endtime="20201030 11:51:24.258"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.227" endtime="20201030 11:51:24.258"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.225" endtime="20201030 11:51:24.259"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:24.265" endtime="20201030 11:51:24.551"></status>
</kw>
<msg timestamp="20201030 11:51:24.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020105153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020222556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:24.264" endtime="20201030 11:51:24.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:24.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020105153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020222556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:24.556" endtime="20201030 11:51:24.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:24.564" endtime="20201030 11:51:24.566"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.261" endtime="20201030 11:51:24.566"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.259" endtime="20201030 11:51:24.567"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:24.571" level="INFO">${RESULT} = [{'diff': 0.00011740299999999856}, {'diff': 0.00010849999999999749}, {'diff': 0.00010979200000000092}, {'diff': 0.00010868099999999936}, {'diff': 0.00010812499999999711}, {'diff': 0.000108111000000001...</msg>
<status status="PASS" starttime="20201030 11:51:24.567" endtime="20201030 11:51:24.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:24.575" level="INFO">${ACCURACY} = {'diff': [0.00011740299999999856, 0.00010849999999999749, 0.00010979200000000092, 0.00010868099999999936, 0.00010812499999999711, 0.00010811100000000101, 0.00010795800000000175, 0.00010981900000000058...</msg>
<status status="PASS" starttime="20201030 11:51:24.572" endtime="20201030 11:51:24.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:24.579" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201030 11:51:24.578" endtime="20201030 11:51:24.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:24.582" level="INFO">VALUE: [0.00011740299999999856, 0.00010849999999999749, 0.00010979200000000092, 0.00010868099999999936, 0.00010812499999999711, 0.00010811100000000101, 0.00010795800000000175, 0.00010981900000000058, 0.00010842999999999964, 0.00010818099999999886, 0.00010794500000000165, 0.00010800000000000046, 0.00010837500000000083, 0.0001082500000000007, 0.00010855599999999924, 0.00010837499999999736, 0.00010983300000000015, 0.00010973599999999917, 0.00010979099999999797, 0.00010836099999999779, 0.00010858300000000237, 0.00010850000000000096, 0.00010855599999999924, 0.00010798600000000089, 0.00010843099999999911, 0.00010830599999999899, 0.00010809800000000092, 0.000107902, 0.00010870799999999903, 0.00010818000000000286, 0.0001083890000000004, 0.00010869399999999946, 0.00010979200000000092, 0.00010787500000000033, 0.00010794500000000165, 0.00010841700000000301, 0.00010812500000000058, 0.00010848599999999792, 0.00010826299999999733, 0.00010852700000000062, 0.0001085829999999989, 0.00010829099999999994, 0.00010830499999999951, 0.00010792999999999914, 0.00010875000000000121, 0.00010866699999999979, 0.00010980600000000049, 0.00010863900000000065, 0.00010830599999999899, 0.00010824999999999724]</msg>
<status status="PASS" starttime="20201030 11:51:24.580" endtime="20201030 11:51:24.583"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.576" endtime="20201030 11:51:24.583"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:24.587" endtime="20201030 11:51:24.606"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.585" endtime="20201030 11:51:24.607"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.584" endtime="20201030 11:51:24.607"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.223" endtime="20201030 11:51:24.608"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.222" endtime="20201030 11:51:24.608"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:24.617" endtime="20201030 11:51:24.638"></status>
</kw>
<msg timestamp="20201030 11:51:24.639" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:24.615" endtime="20201030 11:51:24.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:24.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:24.640" endtime="20201030 11:51:24.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:24.642" endtime="20201030 11:51:24.644"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.612" endtime="20201030 11:51:24.645"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.610" endtime="20201030 11:51:24.645"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:24.652" endtime="20201030 11:51:24.936"></status>
</kw>
<msg timestamp="20201030 11:51:24.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021170903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021288736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:24.650" endtime="20201030 11:51:24.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:24.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021170903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021288736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:24.940" endtime="20201030 11:51:24.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:24.949" endtime="20201030 11:51:24.950"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.647" endtime="20201030 11:51:24.951"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.646" endtime="20201030 11:51:24.951"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:24.955" level="INFO">${RESULT} = [{'diff': 0.00011783299999999775}, {'diff': 0.00010977800000000135}, {'diff': 0.0001092219999999991}, {'diff': 0.00010931900000000008}, {'diff': 0.00010912500000000158}, {'diff': 0.0001092359999999986...</msg>
<status status="PASS" starttime="20201030 11:51:24.952" endtime="20201030 11:51:24.956"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:24.959" level="INFO">${ACCURACY} = {'diff': [0.00011783299999999775, 0.00010977800000000135, 0.0001092219999999991, 0.00010931900000000008, 0.00010912500000000158, 0.00010923599999999867, 0.00010902799999999713, 0.0001095829999999999, ...</msg>
<status status="PASS" starttime="20201030 11:51:24.956" endtime="20201030 11:51:24.960"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:24.964" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201030 11:51:24.963" endtime="20201030 11:51:24.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:24.967" level="INFO">VALUE: [0.00011783299999999775, 0.00010977800000000135, 0.0001092219999999991, 0.00010931900000000008, 0.00010912500000000158, 0.00010923599999999867, 0.00010902799999999713, 0.0001095829999999999, 0.00010901400000000103, 0.00010931900000000008, 0.00010943000000000064, 0.00011079099999999897, 0.00010956900000000033, 0.00010956900000000033, 0.00010942999999999717, 0.00010970800000000003, 0.00010886100000000176, 0.00010915300000000072, 0.00010911100000000201, 0.00010973599999999917, 0.00010962500000000208, 0.00010887500000000133, 0.00010956900000000033, 0.00010943000000000064, 0.00010909699999999897, 0.00010916600000000082, 0.00010900000000000146, 0.00010916700000000029, 0.0001095699999999998, 0.00010926399999999781, 0.00010886100000000176, 0.00010938899999999793, 0.00010947199999999935, 0.00010909699999999897, 0.00011079100000000244, 0.00010900000000000146, 0.00010968000000000089, 0.00010947199999999935, 0.00011077799999999888, 0.00010956900000000033, 0.00010963899999999818, 0.00010899999999999799, 0.00010899999999999799, 0.00010897199999999885, 0.00010936100000000226, 0.00010912499999999811, 0.00010931900000000008, 0.00010945799999999978, 0.00010918099999999986, 0.00011074999999999974]</msg>
<status status="PASS" starttime="20201030 11:51:24.965" endtime="20201030 11:51:24.968"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.960" endtime="20201030 11:51:24.969"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:24.972" endtime="20201030 11:51:24.992"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.971" endtime="20201030 11:51:24.992"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.970" endtime="20201030 11:51:24.993"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.609" endtime="20201030 11:51:24.993"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.608" endtime="20201030 11:51:24.993"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.002" endtime="20201030 11:51:25.024"></status>
</kw>
<msg timestamp="20201030 11:51:25.024" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:25.001" endtime="20201030 11:51:25.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:25.025" endtime="20201030 11:51:25.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.028" endtime="20201030 11:51:25.029"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.998" endtime="20201030 11:51:25.030"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.996" endtime="20201030 11:51:25.030"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.037" endtime="20201030 11:51:25.322"></status>
</kw>
<msg timestamp="20201030 11:51:25.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020186986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020306167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:25.035" endtime="20201030 11:51:25.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020186986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020306167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:25.327" endtime="20201030 11:51:25.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.335" endtime="20201030 11:51:25.336"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.033" endtime="20201030 11:51:25.337"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.031" endtime="20201030 11:51:25.337"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:25.342" level="INFO">${RESULT} = [{'diff': 0.00011918099999999945}, {'diff': 0.00011056900000000133}, {'diff': 0.00011005600000000074}, {'diff': 0.00011026399999999881}, {'diff': 0.00010987500000000233}, {'diff': 0.000111832999999998...</msg>
<status status="PASS" starttime="20201030 11:51:25.338" endtime="20201030 11:51:25.342"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:25.346" level="INFO">${ACCURACY} = {'diff': [0.00011918099999999945, 0.00011056900000000133, 0.00011005600000000074, 0.00011026399999999881, 0.00010987500000000233, 0.00011183299999999868, 0.00011016699999999782, 0.00011074999999999974...</msg>
<status status="PASS" starttime="20201030 11:51:25.343" endtime="20201030 11:51:25.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.351" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201030 11:51:25.350" endtime="20201030 11:51:25.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.354" level="INFO">VALUE: [0.00011918099999999945, 0.00011056900000000133, 0.00011005600000000074, 0.00011026399999999881, 0.00010987500000000233, 0.00011183299999999868, 0.00011016699999999782, 0.00011074999999999974, 0.00011022299999999957, 0.00011063899999999918, 0.00010997199999999985, 0.0001105549999999983, 0.00011055500000000176, 0.00010988899999999843, 0.00011069400000000146, 0.00011041700000000154, 0.00011177799999999988, 0.00011019499999999696, 0.00011030600000000099, 0.00011029099999999847, 0.0001100280000000016, 0.00011045800000000078, 0.00010992999999999767, 0.00011066600000000232, 0.00010998599999999942, 0.0001105830000000009, 0.00011019399999999749, 0.00011175000000000074, 0.00011076400000000278, 0.00011076399999999931, 0.00011005600000000074, 0.00010995799999999681, 0.00010988899999999843, 0.00011016700000000129, 0.0001100830000000004, 0.00011005500000000126, 0.00011043000000000164, 0.00011063899999999918, 0.00011180600000000249, 0.00011055599999999777, 0.00011180599999999902, 0.00010987500000000233, 0.00011011100000000301, 0.00010999999999999899, 0.00011049999999999949, 0.00011030499999999804, 0.00010999999999999899, 0.00011177799999999988, 0.00011038899999999893, 0.00011005599999999727]</msg>
<status status="PASS" starttime="20201030 11:51:25.352" endtime="20201030 11:51:25.354"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.347" endtime="20201030 11:51:25.355"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:25.359" endtime="20201030 11:51:25.378"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.357" endtime="20201030 11:51:25.379"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.356" endtime="20201030 11:51:25.379"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.994" endtime="20201030 11:51:25.379"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.994" endtime="20201030 11:51:25.380"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.389" endtime="20201030 11:51:25.410"></status>
</kw>
<msg timestamp="20201030 11:51:25.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:25.387" endtime="20201030 11:51:25.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:25.412" endtime="20201030 11:51:25.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.414" endtime="20201030 11:51:25.416"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.384" endtime="20201030 11:51:25.416"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.382" endtime="20201030 11:51:25.417"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.424" endtime="20201030 11:51:25.710"></status>
</kw>
<msg timestamp="20201030 11:51:25.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020196069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020316236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:25.422" endtime="20201030 11:51:25.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020196069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020316236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:25.714" endtime="20201030 11:51:25.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.722" endtime="20201030 11:51:25.724"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.419" endtime="20201030 11:51:25.725"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.417" endtime="20201030 11:51:25.725"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:25.729" level="INFO">${RESULT} = [{'diff': 0.00012016700000000088}, {'diff': 0.00011152799999999963}, {'diff': 0.00011134699999999775}, {'diff': 0.00011104200000000217}, {'diff': 0.0001110700000000013}, {'diff': 0.0001117499999999972...</msg>
<status status="PASS" starttime="20201030 11:51:25.726" endtime="20201030 11:51:25.729"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:25.733" level="INFO">${ACCURACY} = {'diff': [0.00012016700000000088, 0.00011152799999999963, 0.00011134699999999775, 0.00011104200000000217, 0.0001110700000000013, 0.00011174999999999727, 0.00011161100000000104, 0.00011275000000000174,...</msg>
<status status="PASS" starttime="20201030 11:51:25.730" endtime="20201030 11:51:25.733"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.738" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201030 11:51:25.737" endtime="20201030 11:51:25.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.740" level="INFO">VALUE: [0.00012016700000000088, 0.00011152799999999963, 0.00011134699999999775, 0.00011104200000000217, 0.0001110700000000013, 0.00011174999999999727, 0.00011161100000000104, 0.00011275000000000174, 0.00011137500000000036, 0.00011118099999999839, 0.00011168099999999889, 0.00011134699999999775, 0.0001112359999999972, 0.00011150000000000049, 0.0001112220000000011, 0.00011166699999999932, 0.000111596999999998, 0.00011098600000000042, 0.0001112359999999972, 0.00011273600000000217, 0.00011151400000000006, 0.00011125000000000024, 0.00011163900000000018, 0.0001114029999999995, 0.00011125000000000024, 0.00011170799999999856, 0.00011125000000000024, 0.00011130599999999852, 0.00011136100000000079, 0.00011162500000000061, 0.00011118099999999839, 0.00011168099999999889, 0.00011138899999999993, 0.00011154099999999972, 0.0001127359999999987, 0.00011099999999999999, 0.00011130499999999904, 0.00011152799999999963, 0.00011084699999999725, 0.00011113899999999968, 0.00011281999999999959, 0.00011144500000000168, 0.00011123600000000067, 0.00011276400000000131, 0.00011156900000000233, 0.00011105500000000226, 0.00011279100000000097, 0.0001114029999999995, 0.00011154099999999972, 0.00011273600000000217]</msg>
<status status="PASS" starttime="20201030 11:51:25.739" endtime="20201030 11:51:25.741"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.734" endtime="20201030 11:51:25.742"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:25.745" endtime="20201030 11:51:25.765"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.744" endtime="20201030 11:51:25.765"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.743" endtime="20201030 11:51:25.766"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.381" endtime="20201030 11:51:25.766"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.380" endtime="20201030 11:51:25.766"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.775" endtime="20201030 11:51:25.798"></status>
</kw>
<msg timestamp="20201030 11:51:25.798" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:25.774" endtime="20201030 11:51:25.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:25.799" endtime="20201030 11:51:25.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.802" endtime="20201030 11:51:25.804"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.771" endtime="20201030 11:51:25.804"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.769" endtime="20201030 11:51:25.805"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.811" endtime="20201030 11:51:26.097"></status>
</kw>
<msg timestamp="20201030 11:51:26.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021030639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021153153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:25.810" endtime="20201030 11:51:26.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021030639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021153153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:26.102" endtime="20201030 11:51:26.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.110" endtime="20201030 11:51:26.112"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.807" endtime="20201030 11:51:26.112"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.805" endtime="20201030 11:51:26.113"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:26.117" level="INFO">${RESULT} = [{'diff': 0.00012251400000000065}, {'diff': 0.00011274999999999827}, {'diff': 0.00011249999999999802}, {'diff': 0.00011263900000000118}, {'diff': 0.00011206900000000283}, {'diff': 0.000112346999999998...</msg>
<status status="PASS" starttime="20201030 11:51:26.113" endtime="20201030 11:51:26.117"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:26.121" level="INFO">${ACCURACY} = {'diff': [0.00012251400000000065, 0.00011274999999999827, 0.00011249999999999802, 0.00011263900000000118, 0.00011206900000000283, 0.00011234699999999875, 0.00011262500000000161, 0.00011248599999999845...</msg>
<status status="PASS" starttime="20201030 11:51:26.118" endtime="20201030 11:51:26.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.125" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201030 11:51:26.124" endtime="20201030 11:51:26.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.129" level="INFO">VALUE: [0.00012251400000000065, 0.00011274999999999827, 0.00011249999999999802, 0.00011263900000000118, 0.00011206900000000283, 0.00011234699999999875, 0.00011262500000000161, 0.00011248599999999845, 0.00011234699999999875, 0.00011262499999999814, 0.00011237500000000136, 0.0001123749999999979, 0.00011205599999999927, 0.00011225000000000124, 0.00011225000000000124, 0.00011248700000000139, 0.00011194399999999924, 0.00011212500000000111, 0.00011211100000000154, 0.00011250000000000149, 0.00011237500000000136, 0.00011236099999999832, 0.00011245900000000225, 0.00011226399999999734, 0.00011200000000000099, 0.00011200000000000099, 0.00011225000000000124, 0.00011211199999999755, 0.00011219399999999949, 0.00011194399999999924, 0.00011238899999999746, 0.00011276400000000131, 0.00011261099999999857, 0.00011380599999999755, 0.0001123619999999978, 0.00011205600000000274, 0.00011379199999999798, 0.00011211099999999807, 0.0001122770000000009, 0.00011204100000000022, 0.00011250000000000149, 0.00011229100000000047, 0.00011212499999999764, 0.00011238900000000093, 0.000112596999999999, 0.00011236099999999832, 0.00011188900000000043, 0.00011211099999999807, 0.00011186100000000129, 0.00011218099999999939]</msg>
<status status="PASS" starttime="20201030 11:51:26.126" endtime="20201030 11:51:26.130"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.122" endtime="20201030 11:51:26.130"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:26.134" endtime="20201030 11:51:26.153"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.132" endtime="20201030 11:51:26.154"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.131" endtime="20201030 11:51:26.154"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.767" endtime="20201030 11:51:26.154"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.767" endtime="20201030 11:51:26.155"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.164" endtime="20201030 11:51:26.184"></status>
</kw>
<msg timestamp="20201030 11:51:26.185" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:26.162" endtime="20201030 11:51:26.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:26.186" endtime="20201030 11:51:26.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.188" endtime="20201030 11:51:26.190"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.159" endtime="20201030 11:51:26.191"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.157" endtime="20201030 11:51:26.191"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.198" endtime="20201030 11:51:26.483"></status>
</kw>
<msg timestamp="20201030 11:51:26.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020208694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020330417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:26.196" endtime="20201030 11:51:26.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020208694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020330417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:26.487" endtime="20201030 11:51:26.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.495" endtime="20201030 11:51:26.497"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.194" endtime="20201030 11:51:26.498"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.192" endtime="20201030 11:51:26.498"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:26.502" level="INFO">${RESULT} = [{'diff': 0.00012172300000000066}, {'diff': 0.00011305600000000027}, {'diff': 0.00011481899999999864}, {'diff': 0.00011323600000000267}, {'diff': 0.00011361099999999957}, {'diff': 0.000113583000000000...</msg>
<status status="PASS" starttime="20201030 11:51:26.499" endtime="20201030 11:51:26.503"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:26.508" level="INFO">${ACCURACY} = {'diff': [0.00012172300000000066, 0.00011305600000000027, 0.00011481899999999864, 0.00011323600000000267, 0.00011361099999999957, 0.00011358300000000043, 0.00011361099999999957, 0.00011484700000000125...</msg>
<status status="PASS" starttime="20201030 11:51:26.503" endtime="20201030 11:51:26.508"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.513" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201030 11:51:26.512" endtime="20201030 11:51:26.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.516" level="INFO">VALUE: [0.00012172300000000066, 0.00011305600000000027, 0.00011481899999999864, 0.00011323600000000267, 0.00011361099999999957, 0.00011358300000000043, 0.00011361099999999957, 0.00011484700000000125, 0.00011366699999999785, 0.00011332000000000009, 0.00011305600000000027, 0.0001128749999999984, 0.00011322199999999963, 0.00011334699999999975, 0.0001135420000000012, 0.00011477699999999993, 0.00011320800000000006, 0.00011286099999999882, 0.0001130969999999995, 0.00011351399999999859, 0.00011480599999999855, 0.00011344500000000021, 0.0001128749999999984, 0.00011351400000000206, 0.00011344500000000021, 0.00011306900000000036, 0.0001135550000000013, 0.00011351399999999859, 0.00011477699999999993, 0.00011287500000000186, 0.00011362499999999914, 0.00011319400000000049, 0.00011326399999999834, 0.00011313900000000168, 0.0001134169999999976, 0.00011343100000000064, 0.00011325000000000224, 0.00011298700000000189, 0.00011313899999999821, 0.00011318000000000092, 0.00011350000000000249, 0.0001130550000000008, 0.00011343100000000064, 0.00011319499999999996, 0.00011299999999999852, 0.00011329200000000095, 0.00011341700000000107, 0.00011350000000000249, 0.0001130969999999995, 0.00011352799999999816]</msg>
<status status="PASS" starttime="20201030 11:51:26.514" endtime="20201030 11:51:26.516"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.509" endtime="20201030 11:51:26.517"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:26.521" endtime="20201030 11:51:26.540"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.519" endtime="20201030 11:51:26.541"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.518" endtime="20201030 11:51:26.541"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.155" endtime="20201030 11:51:26.541"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.155" endtime="20201030 11:51:26.542"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.551" endtime="20201030 11:51:26.572"></status>
</kw>
<msg timestamp="20201030 11:51:26.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:26.549" endtime="20201030 11:51:26.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.575" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:26.574" endtime="20201030 11:51:26.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.576" endtime="20201030 11:51:26.578"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.546" endtime="20201030 11:51:26.578"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.544" endtime="20201030 11:51:26.579"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.586" endtime="20201030 11:51:26.874"></status>
</kw>
<msg timestamp="20201030 11:51:26.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020220861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020343597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:26.584" endtime="20201030 11:51:26.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020220861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020343597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:26.879" endtime="20201030 11:51:26.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.887" endtime="20201030 11:51:26.889"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.581" endtime="20201030 11:51:26.889"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.580" endtime="20201030 11:51:26.890"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:26.894" level="INFO">${RESULT} = [{'diff': 0.00012273600000000176}, {'diff': 0.00011580500000000007}, {'diff': 0.00011413900000000268}, {'diff': 0.00011436100000000032}, {'diff': 0.00011420900000000053}, {'diff': 0.000114430999999998...</msg>
<status status="PASS" starttime="20201030 11:51:26.890" endtime="20201030 11:51:26.894"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:26.898" level="INFO">${ACCURACY} = {'diff': [0.00012273600000000176, 0.00011580500000000007, 0.00011413900000000268, 0.00011436100000000032, 0.00011420900000000053, 0.00011443099999999817, 0.00011391700000000157, 0.00011430600000000152...</msg>
<status status="PASS" starttime="20201030 11:51:26.895" endtime="20201030 11:51:26.898"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.902" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201030 11:51:26.901" endtime="20201030 11:51:26.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.905" level="INFO">VALUE: [0.00012273600000000176, 0.00011580500000000007, 0.00011413900000000268, 0.00011436100000000032, 0.00011420900000000053, 0.00011443099999999817, 0.00011391700000000157, 0.00011430600000000152, 0.00011416700000000182, 0.00011417999999999845, 0.00011408300000000093, 0.000114597000000001, 0.00011581999999999912, 0.00011402799999999866, 0.00011401399999999909, 0.00011418099999999792, 0.00011465299999999928, 0.00011447200000000088, 0.00011399999999999952, 0.00011411199999999955, 0.00011579199999999998, 0.00011408300000000093, 0.00011475000000000027, 0.00011482000000000159, 0.0001147360000000007, 0.00011463899999999971, 0.00011577800000000041, 0.00011458400000000091, 0.00011451399999999959, 0.00011469499999999799, 0.0001141109999999966, 0.00011576399999999737, 0.00011408300000000093, 0.00011450000000000002, 0.0001145689999999984, 0.00011576400000000084, 0.0001146109999999971, 0.00011465299999999928, 0.00011447200000000088, 0.00011430600000000152, 0.00011419500000000096, 0.00011416699999999835, 0.00011584700000000225, 0.0001142360000000002, 0.000114290999999999, 0.00011455499999999882, 0.0001143749999999999, 0.00011420800000000106, 0.00011399999999999952, 0.00011391700000000157]</msg>
<status status="PASS" starttime="20201030 11:51:26.903" endtime="20201030 11:51:26.906"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.899" endtime="20201030 11:51:26.906"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:26.910" endtime="20201030 11:51:26.929"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.908" endtime="20201030 11:51:26.930"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.907" endtime="20201030 11:51:26.930"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.543" endtime="20201030 11:51:26.931"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.542" endtime="20201030 11:51:26.931"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.940" endtime="20201030 11:51:26.962"></status>
</kw>
<msg timestamp="20201030 11:51:26.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:26.938" endtime="20201030 11:51:26.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.965" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:26.964" endtime="20201030 11:51:26.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.966" endtime="20201030 11:51:26.968"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.935" endtime="20201030 11:51:26.969"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.933" endtime="20201030 11:51:26.969"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.976" endtime="20201030 11:51:27.262"></status>
</kw>
<msg timestamp="20201030 11:51:27.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021059167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021183153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:26.974" endtime="20201030 11:51:27.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021059167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021183153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:27.266" endtime="20201030 11:51:27.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.274" endtime="20201030 11:51:27.276"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.972" endtime="20201030 11:51:27.276"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.970" endtime="20201030 11:51:27.277"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:27.281" level="INFO">${RESULT} = [{'diff': 0.00012398599999999954}, {'diff': 0.00011506999999999837}, {'diff': 0.0001154169999999996}, {'diff': 0.00011544399999999927}, {'diff': 0.00011550000000000102}, {'diff': 0.0001149440000000022...</msg>
<status status="PASS" starttime="20201030 11:51:27.277" endtime="20201030 11:51:27.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:27.285" level="INFO">${ACCURACY} = {'diff': [0.00012398599999999954, 0.00011506999999999837, 0.0001154169999999996, 0.00011544399999999927, 0.00011550000000000102, 0.00011494400000000224, 0.00011488899999999996, 0.00011525000000000077,...</msg>
<status status="PASS" starttime="20201030 11:51:27.282" endtime="20201030 11:51:27.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.289" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201030 11:51:27.288" endtime="20201030 11:51:27.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.292" level="INFO">VALUE: [0.00012398599999999954, 0.00011506999999999837, 0.0001154169999999996, 0.00011544399999999927, 0.00011550000000000102, 0.00011494400000000224, 0.00011488899999999996, 0.00011525000000000077, 0.00011538900000000046, 0.0001152360000000012, 0.00011575000000000127, 0.00011525000000000077, 0.00011504099999999975, 0.0001153750000000009, 0.00011544499999999874, 0.00011567999999999995, 0.00011494399999999877, 0.00011517999999999945, 0.0001152499999999973, 0.00011520800000000206, 0.00011543099999999917, 0.00011511100000000107, 0.00011513900000000021, 0.00011577700000000093, 0.00011519500000000196, 0.00011677800000000141, 0.00011562500000000114, 0.00011491599999999963, 0.00011540300000000003, 0.00011525000000000077, 0.0001151109999999976, 0.00011530599999999905, 0.00011486099999999735, 0.00011545900000000178, 0.00011525000000000077, 0.00011500000000000052, 0.00011549999999999755, 0.00011497199999999791, 0.00011554199999999973, 0.00011515200000000031, 0.00011498600000000095, 0.00011493000000000267, 0.0001148750000000004, 0.00011548699999999745, 0.00011486099999999735, 0.00011495900000000128, 0.00011673599999999923, 0.00011507000000000184, 0.00011537499999999742, 0.00011502799999999966]</msg>
<status status="PASS" starttime="20201030 11:51:27.291" endtime="20201030 11:51:27.294"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.286" endtime="20201030 11:51:27.294"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:27.298" endtime="20201030 11:51:27.317"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.296" endtime="20201030 11:51:27.318"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.295" endtime="20201030 11:51:27.318"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.932" endtime="20201030 11:51:27.319"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.931" endtime="20201030 11:51:27.319"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.328" endtime="20201030 11:51:27.349"></status>
</kw>
<msg timestamp="20201030 11:51:27.349" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:27.326" endtime="20201030 11:51:27.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.352" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:27.350" endtime="20201030 11:51:27.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.353" endtime="20201030 11:51:27.355"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.323" endtime="20201030 11:51:27.355"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.321" endtime="20201030 11:51:27.356"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.362" endtime="20201030 11:51:27.649"></status>
</kw>
<msg timestamp="20201030 11:51:27.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020196986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020322069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:27.361" endtime="20201030 11:51:27.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020196986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020322069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:27.653" endtime="20201030 11:51:27.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.661" endtime="20201030 11:51:27.663"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.358" endtime="20201030 11:51:27.663"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.356" endtime="20201030 11:51:27.664"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:27.668" level="INFO">${RESULT} = [{'diff': 0.00012508300000000153}, {'diff': 0.00011667999999999748}, {'diff': 0.0001165690000000004}, {'diff': 0.00011600000000000152}, {'diff': 0.00011627800000000091}, {'diff': 0.0001162780000000009...</msg>
<status status="PASS" starttime="20201030 11:51:27.665" endtime="20201030 11:51:27.668"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:27.673" level="INFO">${ACCURACY} = {'diff': [0.00012508300000000153, 0.00011667999999999748, 0.0001165690000000004, 0.00011600000000000152, 0.00011627800000000091, 0.00011627800000000091, 0.0001158889999999975, 0.00011672199999999966, ...</msg>
<status status="PASS" starttime="20201030 11:51:27.669" endtime="20201030 11:51:27.673"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.677" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201030 11:51:27.676" endtime="20201030 11:51:27.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.680" level="INFO">VALUE: [0.00012508300000000153, 0.00011667999999999748, 0.0001165690000000004, 0.00011600000000000152, 0.00011627800000000091, 0.00011627800000000091, 0.0001158889999999975, 0.00011672199999999966, 0.00011666700000000085, 0.00011612500000000164, 0.0001177629999999999, 0.0001159170000000001, 0.0001163750000000019, 0.00011613900000000121, 0.00011620799999999959, 0.00011626399999999787, 0.00011600000000000152, 0.00011623599999999873, 0.00011612500000000164, 0.00011599999999999805, 0.00011776400000000284, 0.00011787499999999992, 0.00011779199999999851, 0.00011637499999999842, 0.00011619400000000002, 0.00011622199999999916, 0.00011600000000000152, 0.00011611100000000207, 0.00011630500000000057, 0.00011649999999999855, 0.00011643100000000017, 0.00011782000000000112, 0.00011627800000000091, 0.00011648599999999898, 0.0001159300000000002, 0.00011591599999999716, 0.00011648599999999898, 0.00011655500000000082, 0.0001177499999999998, 0.00011629200000000048, 0.00011601399999999762, 0.00011663900000000171, 0.00011612499999999817, 0.00011644499999999974, 0.00011609799999999851, 0.00011654200000000073, 0.00011612500000000164, 0.00011631900000000014, 0.00011654099999999779, 0.00011630500000000057]</msg>
<status status="PASS" starttime="20201030 11:51:27.679" endtime="20201030 11:51:27.681"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.674" endtime="20201030 11:51:27.681"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:27.685" endtime="20201030 11:51:27.704"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.684" endtime="20201030 11:51:27.705"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.682" endtime="20201030 11:51:27.705"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.320" endtime="20201030 11:51:27.706"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.319" endtime="20201030 11:51:27.706"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.715" endtime="20201030 11:51:27.737"></status>
</kw>
<msg timestamp="20201030 11:51:27.737" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:27.713" endtime="20201030 11:51:27.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.740" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:27.738" endtime="20201030 11:51:27.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.741" endtime="20201030 11:51:27.742"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.710" endtime="20201030 11:51:27.743"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.708" endtime="20201030 11:51:27.743"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.750" endtime="20201030 11:51:28.038"></status>
</kw>
<msg timestamp="20201030 11:51:28.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020068931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02019525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:27.749" endtime="20201030 11:51:28.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020068931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02019525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:28.042" endtime="20201030 11:51:28.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.050" endtime="20201030 11:51:28.052"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.746" endtime="20201030 11:51:28.052"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.744" endtime="20201030 11:51:28.053"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:28.057" level="INFO">${RESULT} = [{'diff': 0.00012631899999999974}, {'diff': 0.00011712499999999917}, {'diff': 0.0001172360000000032}, {'diff': 0.00011736100000000332}, {'diff': 0.00011881999999999865}, {'diff': 0.0001177360000000002...</msg>
<status status="PASS" starttime="20201030 11:51:28.054" endtime="20201030 11:51:28.057"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:28.061" level="INFO">${ACCURACY} = {'diff': [0.00012631899999999974, 0.00011712499999999917, 0.0001172360000000032, 0.00011736100000000332, 0.00011881999999999865, 0.00011773600000000023, 0.00011683399999999969, 0.00011693100000000067,...</msg>
<status status="PASS" starttime="20201030 11:51:28.058" endtime="20201030 11:51:28.061"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.065" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201030 11:51:28.064" endtime="20201030 11:51:28.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.068" level="INFO">VALUE: [0.00012631899999999974, 0.00011712499999999917, 0.0001172360000000032, 0.00011736100000000332, 0.00011881999999999865, 0.00011773600000000023, 0.00011683399999999969, 0.00011693100000000067, 0.00011701299999999915, 0.00011762499999999967, 0.00011694400000000077, 0.0001171109999999996, 0.00011729200000000148, 0.0001177499999999998, 0.00011754200000000173, 0.00011694500000000024, 0.0001174309999999977, 0.00011694500000000024, 0.00011781899999999818, 0.00011719399999999755, 0.0001174300000000017, 0.00011730500000000157, 0.00011683300000000021, 0.00011769399999999805, 0.0001170560000000008, 0.00011695800000000034, 0.00011737499999999942, 0.0001168750000000024, 0.0001170560000000008, 0.0001172499999999993, 0.00011712500000000264, 0.00011699999999999905, 0.0001174170000000016, 0.0001174439999999978, 0.000117388999999999, 0.00011713900000000221, 0.00011732000000000062, 0.00011695800000000034, 0.00011702800000000166, 0.00011773600000000023, 0.00011744400000000127, 0.00011755499999999836, 0.0001174300000000017, 0.00011769399999999805, 0.0001173049999999981, 0.00011712499999999917, 0.00011769400000000152, 0.00011693100000000067, 0.0001170560000000008, 0.00011748599999999998]</msg>
<status status="PASS" starttime="20201030 11:51:28.067" endtime="20201030 11:51:28.069"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.062" endtime="20201030 11:51:28.069"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:28.073" endtime="20201030 11:51:28.092"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.072" endtime="20201030 11:51:28.093"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.070" endtime="20201030 11:51:28.093"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.707" endtime="20201030 11:51:28.094"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.706" endtime="20201030 11:51:28.094"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.103" endtime="20201030 11:51:28.126"></status>
</kw>
<msg timestamp="20201030 11:51:28.126" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:28.101" endtime="20201030 11:51:28.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:28.127" endtime="20201030 11:51:28.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.130" endtime="20201030 11:51:28.131"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.099" endtime="20201030 11:51:28.132"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.096" endtime="20201030 11:51:28.132"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.139" endtime="20201030 11:51:28.425"></status>
</kw>
<msg timestamp="20201030 11:51:28.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021049264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021175958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:28.138" endtime="20201030 11:51:28.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021049264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021175958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:28.429" endtime="20201030 11:51:28.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.437" endtime="20201030 11:51:28.439"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.135" endtime="20201030 11:51:28.440"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.133" endtime="20201030 11:51:28.440"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:28.444" level="INFO">${RESULT} = [{'diff': 0.0001266940000000001}, {'diff': 0.00011981900000000018}, {'diff': 0.00011851400000000012}, {'diff': 0.00011805599999999833}, {'diff': 0.00011837500000000042}, {'diff': 0.0001184309999999987...</msg>
<status status="PASS" starttime="20201030 11:51:28.441" endtime="20201030 11:51:28.444"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:28.448" level="INFO">${ACCURACY} = {'diff': [0.0001266940000000001, 0.00011981900000000018, 0.00011851400000000012, 0.00011805599999999833, 0.00011837500000000042, 0.0001184309999999987, 0.00011980600000000008, 0.00011865299999999981, ...</msg>
<status status="PASS" starttime="20201030 11:51:28.445" endtime="20201030 11:51:28.448"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.453" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201030 11:51:28.452" endtime="20201030 11:51:28.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.455" level="INFO">VALUE: [0.0001266940000000001, 0.00011981900000000018, 0.00011851400000000012, 0.00011805599999999833, 0.00011837500000000042, 0.0001184309999999987, 0.00011980600000000008, 0.00011865299999999981, 0.00011791699999999863, 0.0001185829999999985, 0.00011817999999999898, 0.00011863900000000024, 0.00011866599999999991, 0.00011813899999999974, 0.00011813899999999974, 0.00011981900000000018, 0.00011983399999999922, 0.00011798600000000048, 0.00011811099999999713, 0.00011865200000000034, 0.00011986099999999889, 0.00011855499999999936, 0.00011804099999999929, 0.00011869399999999905, 0.0001182500000000003, 0.00011830500000000257, 0.000118389, 0.00011850000000000055, 0.00011786100000000035, 0.00011862500000000067, 0.00011848600000000098, 0.00011855500000000282, 0.0001179439999999983, 0.00011866599999999991, 0.00011980499999999714, 0.00011800000000000005, 0.0001183049999999991, 0.00011869400000000252, 0.00011979200000000051, 0.00011850000000000055, 0.00011865300000000328, 0.00011837500000000042, 0.00011830600000000205, 0.00011817999999999898, 0.00011790299999999906, 0.00011979100000000104, 0.00011798600000000048, 0.0001187500000000008, 0.00011859699999999807, 0.00011798599999999701]</msg>
<status status="PASS" starttime="20201030 11:51:28.454" endtime="20201030 11:51:28.457"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.449" endtime="20201030 11:51:28.457"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:28.461" endtime="20201030 11:51:28.481"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.460" endtime="20201030 11:51:28.481"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.458" endtime="20201030 11:51:28.482"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.095" endtime="20201030 11:51:28.482"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.094" endtime="20201030 11:51:28.482"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.491" endtime="20201030 11:51:28.512"></status>
</kw>
<msg timestamp="20201030 11:51:28.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:28.489" endtime="20201030 11:51:28.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:28.514" endtime="20201030 11:51:28.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.516" endtime="20201030 11:51:28.518"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.487" endtime="20201030 11:51:28.518"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.484" endtime="20201030 11:51:28.519"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.526" endtime="20201030 11:51:28.811"></status>
</kw>
<msg timestamp="20201030 11:51:28.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020073319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020201403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:28.524" endtime="20201030 11:51:28.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020073319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020201403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:28.816" endtime="20201030 11:51:28.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.824" endtime="20201030 11:51:28.826"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.521" endtime="20201030 11:51:28.826"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.520" endtime="20201030 11:51:28.827"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:28.831" level="INFO">${RESULT} = [{'diff': 0.00012808400000000053}, {'diff': 0.00011900000000000105}, {'diff': 0.00012074999999999933}, {'diff': 0.00011887500000000092}, {'diff': 0.00011955599999999983}, {'diff': 0.000118943999999999...</msg>
<status status="PASS" starttime="20201030 11:51:28.827" endtime="20201030 11:51:28.831"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:28.836" level="INFO">${ACCURACY} = {'diff': [0.00012808400000000053, 0.00011900000000000105, 0.00012074999999999933, 0.00011887500000000092, 0.00011955599999999983, 0.0001189439999999993, 0.00011897200000000191, 0.00012087499999999946,...</msg>
<status status="PASS" starttime="20201030 11:51:28.832" endtime="20201030 11:51:28.836"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.840" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201030 11:51:28.839" endtime="20201030 11:51:28.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.843" level="INFO">VALUE: [0.00012808400000000053, 0.00011900000000000105, 0.00012074999999999933, 0.00011887500000000092, 0.00011955599999999983, 0.0001189439999999993, 0.00011897200000000191, 0.00012087499999999946, 0.0001196249999999982, 0.00011963900000000124, 0.00011915300000000031, 0.00011906899999999943, 0.00011886100000000135, 0.0001191110000000016, 0.00011932000000000262, 0.00011912500000000117, 0.00011886200000000083, 0.00011902800000000019, 0.00011917999999999998, 0.00011902800000000019, 0.00011941699999999666, 0.00011968099999999995, 0.00011973599999999876, 0.00011945900000000231, 0.00011931999999999915, 0.00011954200000000026, 0.00011920799999999912, 0.00011894499999999877, 0.00011959699999999907, 0.00011931899999999968, 0.00012077800000000194, 0.00011963899999999777, 0.00011900000000000105, 0.00011902800000000019, 0.00011973599999999876, 0.0001207500000000028, 0.0001191249999999977, 0.00011954200000000026, 0.00011943100000000317, 0.00012084699999999685, 0.00011951400000000112, 0.00012079099999999857, 0.00011968000000000048, 0.0001196249999999982, 0.00011944499999999927, 0.00011957000000000287, 0.00011969499999999952, 0.00011915300000000031, 0.00011927800000000044, 0.00012079200000000151]</msg>
<status status="PASS" starttime="20201030 11:51:28.841" endtime="20201030 11:51:28.847"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.837" endtime="20201030 11:51:28.848"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:28.852" endtime="20201030 11:51:28.871"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.850" endtime="20201030 11:51:28.872"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.849" endtime="20201030 11:51:28.872"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.483" endtime="20201030 11:51:28.872"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.482" endtime="20201030 11:51:28.873"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.882" endtime="20201030 11:51:28.901"></status>
</kw>
<msg timestamp="20201030 11:51:28.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:28.880" endtime="20201030 11:51:28.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:28.903" endtime="20201030 11:51:28.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.905" endtime="20201030 11:51:28.907"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.877" endtime="20201030 11:51:28.908"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.875" endtime="20201030 11:51:28.908"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.915" endtime="20201030 11:51:29.202"></status>
</kw>
<msg timestamp="20201030 11:51:29.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020272944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020403444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:28.913" endtime="20201030 11:51:29.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:29.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020272944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020403444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:29.206" endtime="20201030 11:51:29.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:29.215" endtime="20201030 11:51:29.217"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.910" endtime="20201030 11:51:29.217"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.909" endtime="20201030 11:51:29.217"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:29.222" level="INFO">${RESULT} = [{'diff': 0.00013049999999999867}, {'diff': 0.00012048699999999898}, {'diff': 0.00012005500000000086}, {'diff': 0.00012074999999999933}, {'diff': 0.00012011099999999914}, {'diff': 0.000121763999999999...</msg>
<status status="PASS" starttime="20201030 11:51:29.218" endtime="20201030 11:51:29.222"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:29.226" level="INFO">${ACCURACY} = {'diff': [0.00013049999999999867, 0.00012048699999999898, 0.00012005500000000086, 0.00012074999999999933, 0.00012011099999999914, 0.0001217639999999999, 0.00012023600000000273, 0.000120083, 0.00012005...</msg>
<status status="PASS" starttime="20201030 11:51:29.223" endtime="20201030 11:51:29.226"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:29.230" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201030 11:51:29.229" endtime="20201030 11:51:29.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:29.233" level="INFO">VALUE: [0.00013049999999999867, 0.00012048699999999898, 0.00012005500000000086, 0.00012074999999999933, 0.00012011099999999914, 0.0001217639999999999, 0.00012023600000000273, 0.000120083, 0.00012005600000000033, 0.00012018099999999698, 0.00011999999999999858, 0.00011994499999999977, 0.00012009799999999904, 0.00012180599999999861, 0.00012000000000000205, 0.00012058299999999703, 0.00012055499999999789, 0.00012005500000000086, 0.00012056900000000093, 0.00011997299999999891, 0.00011998599999999901, 0.00012180600000000208, 0.00012009799999999904, 0.00012036199999999886, 0.00012012500000000217, 0.00012065300000000181, 0.00012037500000000242, 0.00012175000000000033, 0.00012001400000000162, 0.00012069500000000052, 0.00012058399999999997, 0.0001201110000000026, 0.0001199029999999976, 0.00012011200000000208, 0.0001199310000000002, 0.00012020800000000012, 0.00011988899999999802, 0.00011999999999999858, 0.00012011099999999914, 0.0001218189999999987, 0.0001204449999999968, 0.00012037499999999896, 0.0001202089999999996, 0.00011986100000000235, 0.00012002799999999772, 0.00012013800000000227, 0.000120083, 0.00012048599999999951, 0.00011984700000000278, 0.00012030499999999764]</msg>
<status status="PASS" starttime="20201030 11:51:29.231" endtime="20201030 11:51:29.234"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.227" endtime="20201030 11:51:29.234"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:29.238" endtime="20201030 11:51:29.257"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.236" endtime="20201030 11:51:29.258"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.235" endtime="20201030 11:51:29.258"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.873" endtime="20201030 11:51:29.259"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.873" endtime="20201030 11:51:29.259"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.537" endtime="20201030 11:51:29.259"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201030 11:50:50.458" endtime="20201030 11:51:29.264" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 11:50:10.447" endtime="20201030 11:51:29.268"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 11:51:29.324" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 11:51:29.332" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 11:51:30.299" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 11:51:29.323" endtime="20201030 11:51:30.300"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 11:51:30.302" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 11:51:30.301" endtime="20201030 11:51:30.303"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.322" endtime="20201030 11:51:30.303"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:30.305" endtime="20201030 11:51:30.492"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.304" endtime="20201030 11:51:30.493"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:30.505" endtime="20201030 11:51:30.530"></status>
</kw>
<msg timestamp="20201030 11:51:30.531" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:30.504" endtime="20201030 11:51:30.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:30.534" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:30.532" endtime="20201030 11:51:30.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:51:30.537" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:51:30.535" endtime="20201030 11:51:30.537"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:30.502" endtime="20201030 11:51:30.538"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:30.499" endtime="20201030 11:51:30.538"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.498" endtime="20201030 11:51:30.539"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:51:30.543" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:51:30.542" endtime="20201030 11:51:30.543"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.540" endtime="20201030 11:51:30.543"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.497" endtime="20201030 11:51:30.543"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.496" endtime="20201030 11:51:30.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:30.544" endtime="20201030 11:51:30.546"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.495" endtime="20201030 11:51:30.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:30.547" endtime="20201030 11:51:30.549"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.494" endtime="20201030 11:51:30.550"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.320" endtime="20201030 11:51:30.550"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:30.556" endtime="20201030 11:51:30.576"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.555" endtime="20201030 11:51:30.576"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:30.590" endtime="20201030 11:51:30.613"></status>
</kw>
<msg timestamp="20201030 11:51:30.613" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:30.588" endtime="20201030 11:51:30.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:30.616" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:30.614" endtime="20201030 11:51:30.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:51:30.619" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:51:30.617" endtime="20201030 11:51:30.619"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:30.585" endtime="20201030 11:51:30.621"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:30.583" endtime="20201030 11:51:30.622"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.582" endtime="20201030 11:51:30.622"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:51:30.626" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:51:30.625" endtime="20201030 11:51:30.627"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.623" endtime="20201030 11:51:30.627"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.581" endtime="20201030 11:51:30.627"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.580" endtime="20201030 11:51:30.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:30.628" endtime="20201030 11:51:30.630"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.579" endtime="20201030 11:51:30.630"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.577" endtime="20201030 11:51:30.631"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.553" endtime="20201030 11:51:30.631"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:30.649" endtime="20201030 11:52:11.922"></status>
</kw>
<msg timestamp="20201030 11:52:11.924" level="INFO">${RESULT} = {'cmd': 'sleep_jitter 0', 'msg': ['sleep_jitter 0\r\n', 'EXCEPTION!! exccause=28 (LoadProhibitedCause) @800d40a8 excvaddr=800d08c8\r\n', 'processes:\r\n', 'EXCEPTION!! exccause=28 (LoadProhibitedCause...</msg>
<status status="PASS" starttime="20201030 11:51:30.645" endtime="20201030 11:52:11.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:11.945" level="INFO">${RESULT} = {'cmd': 'sleep_jitter 0', 'msg': ['sleep_jitter 0\r\n', 'EXCEPTION!! exccause=28 (LoadProhibitedCause) @800d40a8 excvaddr=800d08c8\r\n', 'processes:\r\n', 'EXCEPTION!! exccause=28 (LoadProhibitedCause...</msg>
<status status="PASS" starttime="20201030 11:52:11.926" endtime="20201030 11:52:11.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:52:11.952" level="FAIL">'Timeout' does not contain 'Success'</msg>
<status status="FAIL" starttime="20201030 11:52:11.948" endtime="20201030 11:52:11.953"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:30.639" endtime="20201030 11:52:11.954"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:30.635" endtime="20201030 11:52:11.955"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:30.632" endtime="20201030 11:52:11.956"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="FAIL" starttime="20201030 11:51:30.551" endtime="20201030 11:52:11.959" critical="yes">'Timeout' does not contain 'Success'</status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:11.976" endtime="20201030 11:52:11.998"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.973" endtime="20201030 11:52:12.000"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:12.030" endtime="20201030 11:52:12.059"></status>
</kw>
<msg timestamp="20201030 11:52:12.060" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:12.025" endtime="20201030 11:52:12.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:12.062" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:12.061" endtime="20201030 11:52:12.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:52:12.065" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:52:12.063" endtime="20201030 11:52:12.066"></status>
</kw>
<status status="FAIL" starttime="20201030 11:52:12.019" endtime="20201030 11:52:12.066"></status>
</kw>
<status status="FAIL" starttime="20201030 11:52:12.014" endtime="20201030 11:52:12.067"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.011" endtime="20201030 11:52:12.067"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:52:12.071" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:52:12.071" endtime="20201030 11:52:12.072"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.068" endtime="20201030 11:52:12.072"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.009" endtime="20201030 11:52:12.072"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.008" endtime="20201030 11:52:12.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:12.073" endtime="20201030 11:52:12.074"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.005" endtime="20201030 11:52:12.075"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.001" endtime="20201030 11:52:12.075"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.970" endtime="20201030 11:52:12.076"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:12.085" endtime="20201030 11:52:53.370"></status>
</kw>
<msg timestamp="20201030 11:52:53.372" level="INFO">${RESULT} = {'cmd': 'sleep_jitter 5', 'msg': ['sleep_jitter 5\r\n', 'EXCEPTION!! exccause=28 (LoadProhibitedCause) @800d40a8 excvaddr=800d08c8\r\n', 'processes:\r\n', 'EXCEPTION!! exccause=28 (LoadProhibitedCause...</msg>
<status status="PASS" starttime="20201030 11:52:12.083" endtime="20201030 11:52:53.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:53.386" level="INFO">${RESULT} = {'cmd': 'sleep_jitter 5', 'msg': ['sleep_jitter 5\r\n', 'EXCEPTION!! exccause=28 (LoadProhibitedCause) @800d40a8 excvaddr=800d08c8\r\n', 'processes:\r\n', 'EXCEPTION!! exccause=28 (LoadProhibitedCause...</msg>
<status status="PASS" starttime="20201030 11:52:53.374" endtime="20201030 11:52:53.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:52:53.393" level="FAIL">'Timeout' does not contain 'Success'</msg>
<status status="FAIL" starttime="20201030 11:52:53.389" endtime="20201030 11:52:53.394"></status>
</kw>
<status status="FAIL" starttime="20201030 11:52:12.081" endtime="20201030 11:52:53.395"></status>
</kw>
<status status="FAIL" starttime="20201030 11:52:12.078" endtime="20201030 11:52:53.397"></status>
</kw>
<status status="FAIL" starttime="20201030 11:52:12.077" endtime="20201030 11:52:53.398"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="FAIL" starttime="20201030 11:52:11.965" endtime="20201030 11:52:53.401" critical="yes">'Timeout' does not contain 'Success'</status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:53.418" endtime="20201030 11:52:53.440"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:53.415" endtime="20201030 11:52:53.441"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:53.472" endtime="20201030 11:52:53.504"></status>
</kw>
<msg timestamp="20201030 11:52:53.505" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:53.469" endtime="20201030 11:52:53.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:53.511" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:53.507" endtime="20201030 11:52:53.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:52:53.516" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:52:53.513" endtime="20201030 11:52:53.517"></status>
</kw>
<status status="FAIL" starttime="20201030 11:52:53.463" endtime="20201030 11:52:53.517"></status>
</kw>
<status status="FAIL" starttime="20201030 11:52:53.455" endtime="20201030 11:52:53.518"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:53.453" endtime="20201030 11:52:53.518"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:52:53.522" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:52:53.521" endtime="20201030 11:52:53.523"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:53.519" endtime="20201030 11:52:53.523"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:53.451" endtime="20201030 11:52:53.523"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:53.449" endtime="20201030 11:52:53.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:53.524" endtime="20201030 11:52:53.525"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:53.446" endtime="20201030 11:52:53.526"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:53.443" endtime="20201030 11:52:53.526"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:53.412" endtime="20201030 11:52:53.527"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:53.536" endtime="20201030 11:53:34.826"></status>
</kw>
<msg timestamp="20201030 11:53:34.828" level="INFO">${RESULT} = {'cmd': 'sleep_jitter 10', 'msg': ['sleep_jitter 10\r\n', 'EXCEPTION!! exccause=28 (LoadProhibitedCause) @800d40a8 excvaddr=800d08c8\r\n', 'processes:\r\n', 'EXCEPTION!! exccause=28 (LoadProhibitedCau...</msg>
<status status="PASS" starttime="20201030 11:52:53.534" endtime="20201030 11:53:34.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:34.846" level="INFO">${RESULT} = {'cmd': 'sleep_jitter 10', 'msg': ['sleep_jitter 10\r\n', 'EXCEPTION!! exccause=28 (LoadProhibitedCause) @800d40a8 excvaddr=800d08c8\r\n', 'processes:\r\n', 'EXCEPTION!! exccause=28 (LoadProhibitedCau...</msg>
<status status="PASS" starttime="20201030 11:53:34.830" endtime="20201030 11:53:34.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:53:34.853" level="FAIL">'Timeout' does not contain 'Success'</msg>
<status status="FAIL" starttime="20201030 11:53:34.848" endtime="20201030 11:53:34.853"></status>
</kw>
<status status="FAIL" starttime="20201030 11:52:53.532" endtime="20201030 11:53:34.855"></status>
</kw>
<status status="FAIL" starttime="20201030 11:52:53.530" endtime="20201030 11:53:34.856"></status>
</kw>
<status status="FAIL" starttime="20201030 11:52:53.528" endtime="20201030 11:53:34.857"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="FAIL" starttime="20201030 11:52:53.406" endtime="20201030 11:53:34.860" critical="yes">'Timeout' does not contain 'Success'</status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:34.876" endtime="20201030 11:53:34.898"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:34.873" endtime="20201030 11:53:34.898"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:34.913" endtime="20201030 11:53:34.936"></status>
</kw>
<msg timestamp="20201030 11:53:34.937" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:34.911" endtime="20201030 11:53:34.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:34.939" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:34.938" endtime="20201030 11:53:34.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:53:34.942" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:53:34.940" endtime="20201030 11:53:34.943"></status>
</kw>
<status status="FAIL" starttime="20201030 11:53:34.909" endtime="20201030 11:53:34.943"></status>
</kw>
<status status="FAIL" starttime="20201030 11:53:34.906" endtime="20201030 11:53:34.944"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:34.905" endtime="20201030 11:53:34.944"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:53:34.948" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:53:34.947" endtime="20201030 11:53:34.949"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:34.945" endtime="20201030 11:53:34.949"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:34.904" endtime="20201030 11:53:34.949"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:34.902" endtime="20201030 11:53:34.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:34.950" endtime="20201030 11:53:34.952"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:34.901" endtime="20201030 11:53:34.952"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:34.899" endtime="20201030 11:53:34.952"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:34.870" endtime="20201030 11:53:34.953"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:34.962" endtime="20201030 11:54:16.252"></status>
</kw>
<msg timestamp="20201030 11:54:16.253" level="INFO">${RESULT} = {'cmd': 'sleep_jitter 15', 'msg': ['sleep_jitter 15\r\n', 'EXCEPTION!! exccause=28 (LoadProhibitedCause) @800d40a8 excvaddr=800d08c8\r\n', 'processes:\r\n', 'EXCEPTION!! exccause=28 (LoadProhibitedCau...</msg>
<status status="PASS" starttime="20201030 11:53:34.960" endtime="20201030 11:54:16.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:54:16.268" level="INFO">${RESULT} = {'cmd': 'sleep_jitter 15', 'msg': ['sleep_jitter 15\r\n', 'EXCEPTION!! exccause=28 (LoadProhibitedCause) @800d40a8 excvaddr=800d08c8\r\n', 'processes:\r\n', 'EXCEPTION!! exccause=28 (LoadProhibitedCau...</msg>
<status status="PASS" starttime="20201030 11:54:16.256" endtime="20201030 11:54:16.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:54:16.275" level="FAIL">'Timeout' does not contain 'Success'</msg>
<status status="FAIL" starttime="20201030 11:54:16.271" endtime="20201030 11:54:16.275"></status>
</kw>
<status status="FAIL" starttime="20201030 11:53:34.958" endtime="20201030 11:54:16.277"></status>
</kw>
<status status="FAIL" starttime="20201030 11:53:34.956" endtime="20201030 11:54:16.278"></status>
</kw>
<status status="FAIL" starttime="20201030 11:53:34.954" endtime="20201030 11:54:16.280"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="FAIL" starttime="20201030 11:53:34.865" endtime="20201030 11:54:16.282" critical="yes">'Timeout' does not contain 'Success'</status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:54:16.298" endtime="20201030 11:54:16.323"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:16.295" endtime="20201030 11:54:16.324"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:16.340" endtime="20201030 11:54:16.364"></status>
</kw>
<msg timestamp="20201030 11:54:16.364" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:54:16.339" endtime="20201030 11:54:16.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:54:16.367" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:54:16.365" endtime="20201030 11:54:16.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:54:16.370" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:54:16.368" endtime="20201030 11:54:16.370"></status>
</kw>
<status status="FAIL" starttime="20201030 11:54:16.336" endtime="20201030 11:54:16.371"></status>
</kw>
<status status="FAIL" starttime="20201030 11:54:16.334" endtime="20201030 11:54:16.372"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:16.332" endtime="20201030 11:54:16.372"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:54:16.376" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:54:16.375" endtime="20201030 11:54:16.376"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:16.373" endtime="20201030 11:54:16.376"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:16.332" endtime="20201030 11:54:16.377"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:16.331" endtime="20201030 11:54:16.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:16.377" endtime="20201030 11:54:16.379"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:16.329" endtime="20201030 11:54:16.380"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:16.325" endtime="20201030 11:54:16.380"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:16.292" endtime="20201030 11:54:16.380"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:16.389" endtime="20201030 11:54:57.680"></status>
</kw>
<msg timestamp="20201030 11:54:57.681" level="INFO">${RESULT} = {'cmd': 'sleep_jitter 20', 'msg': ['sleep_jitter 20\r\n', 'EXCEPTION!! exccause=28 (LoadProhibitedCause) @800d40a8 excvaddr=800d08c8\r\n', 'processes:\r\n', 'EXCEPTION!! exccause=28 (LoadProhibitedCau...</msg>
<status status="PASS" starttime="20201030 11:54:16.388" endtime="20201030 11:54:57.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:54:57.695" level="INFO">${RESULT} = {'cmd': 'sleep_jitter 20', 'msg': ['sleep_jitter 20\r\n', 'EXCEPTION!! exccause=28 (LoadProhibitedCause) @800d40a8 excvaddr=800d08c8\r\n', 'processes:\r\n', 'EXCEPTION!! exccause=28 (LoadProhibitedCau...</msg>
<status status="PASS" starttime="20201030 11:54:57.683" endtime="20201030 11:54:57.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:54:57.702" level="FAIL">'Timeout' does not contain 'Success'</msg>
<status status="FAIL" starttime="20201030 11:54:57.698" endtime="20201030 11:54:57.703"></status>
</kw>
<status status="FAIL" starttime="20201030 11:54:16.385" endtime="20201030 11:54:57.704"></status>
</kw>
<status status="FAIL" starttime="20201030 11:54:16.383" endtime="20201030 11:54:57.705"></status>
</kw>
<status status="FAIL" starttime="20201030 11:54:16.381" endtime="20201030 11:54:57.707"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="FAIL" starttime="20201030 11:54:16.287" endtime="20201030 11:54:57.710" critical="yes">'Timeout' does not contain 'Success'</status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:54:57.729" endtime="20201030 11:54:57.751"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:57.726" endtime="20201030 11:54:57.752"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:57.771" endtime="20201030 11:54:57.794"></status>
</kw>
<msg timestamp="20201030 11:54:57.794" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:54:57.769" endtime="20201030 11:54:57.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:54:57.797" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:54:57.795" endtime="20201030 11:54:57.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:54:57.800" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:54:57.798" endtime="20201030 11:54:57.800"></status>
</kw>
<status status="FAIL" starttime="20201030 11:54:57.766" endtime="20201030 11:54:57.801"></status>
</kw>
<status status="FAIL" starttime="20201030 11:54:57.764" endtime="20201030 11:54:57.802"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:57.763" endtime="20201030 11:54:57.802"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:54:57.806" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:54:57.805" endtime="20201030 11:54:57.806"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:57.803" endtime="20201030 11:54:57.806"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:57.762" endtime="20201030 11:54:57.807"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:57.761" endtime="20201030 11:54:57.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:57.807" endtime="20201030 11:54:57.809"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:57.758" endtime="20201030 11:54:57.810"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:57.754" endtime="20201030 11:54:57.810"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:57.720" endtime="20201030 11:54:57.810"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:57.819" endtime="20201030 11:55:39.102"></status>
</kw>
<msg timestamp="20201030 11:55:39.103" level="INFO">${RESULT} = {'cmd': 'sleep_jitter 25', 'msg': ['sleep_jitter 25\r\n', 'EXCEPTION!! exccause=28 (LoadProhibitedCause) @800d40a8 excvaddr=800d08c8\r\n', 'processes:\r\n', 'EXCEPTION!! exccause=28 (LoadProhibitedCau...</msg>
<status status="PASS" starttime="20201030 11:54:57.818" endtime="20201030 11:55:39.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:55:39.117" level="INFO">${RESULT} = {'cmd': 'sleep_jitter 25', 'msg': ['sleep_jitter 25\r\n', 'EXCEPTION!! exccause=28 (LoadProhibitedCause) @800d40a8 excvaddr=800d08c8\r\n', 'processes:\r\n', 'EXCEPTION!! exccause=28 (LoadProhibitedCau...</msg>
<status status="PASS" starttime="20201030 11:55:39.105" endtime="20201030 11:55:39.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:55:39.126" level="FAIL">'Timeout' does not contain 'Success'</msg>
<status status="FAIL" starttime="20201030 11:55:39.120" endtime="20201030 11:55:39.127"></status>
</kw>
<status status="FAIL" starttime="20201030 11:54:57.815" endtime="20201030 11:55:39.129"></status>
</kw>
<status status="FAIL" starttime="20201030 11:54:57.813" endtime="20201030 11:55:39.130"></status>
</kw>
<status status="FAIL" starttime="20201030 11:54:57.811" endtime="20201030 11:55:39.131"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="FAIL" starttime="20201030 11:54:57.715" endtime="20201030 11:55:39.134" critical="yes">'Timeout' does not contain 'Success'</status>
</test>
<status status="FAIL" starttime="20201030 11:51:29.279" endtime="20201030 11:55:39.152"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">esp32-wroom-32</item>
<item name="RIOT-Version">2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased</item>
</metadata>
<status status="FAIL" starttime="20201030 11:49:45.108" endtime="20201030 11:55:39.232"></status>
</suite>
<statistics>
<total>
<stat pass="11" fail="7">Critical Tests</stat>
<stat pass="11" fail="7">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="11" fail="7">APP_tests_xtimer_benchmarks</stat>
<stat pass="11" fail="7">BOARD_esp32-wroom-32</stat>
<stat pass="9" fail="1">dev</stat>
</tag>
<suite>
<stat pass="11" fail="7" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="8" fail="1" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="0" fail="6" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
