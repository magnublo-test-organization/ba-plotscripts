<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201030 11:50:00.792" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 11:50:01.374" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 11:50:01.382" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 11:50:02.498" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 11:50:01.372" endtime="20201030 11:50:02.499"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 11:50:02.501" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 11:50:02.500" endtime="20201030 11:50:02.501"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:01.371" endtime="20201030 11:50:02.502"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:02.504" endtime="20201030 11:50:02.689"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:02.503" endtime="20201030 11:50:02.690"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:02.703" endtime="20201030 11:50:03.709"></status>
</kw>
<msg timestamp="20201030 11:50:03.710" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:02.701" endtime="20201030 11:50:03.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:03.715" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:03.712" endtime="20201030 11:50:03.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:03.717" endtime="20201030 11:50:03.720"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:02.698" endtime="20201030 11:50:03.721"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:02.696" endtime="20201030 11:50:03.722"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:02.695" endtime="20201030 11:50:03.723"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:03.725" endtime="20201030 11:50:03.728"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:02.694" endtime="20201030 11:50:03.728"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:03.748" endtime="20201030 11:50:04.754"></status>
</kw>
<msg timestamp="20201030 11:50:04.755" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:03.745" endtime="20201030 11:50:04.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:04.760" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:04.758" endtime="20201030 11:50:04.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:04.763" endtime="20201030 11:50:04.766"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:03.738" endtime="20201030 11:50:04.767"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:03.734" endtime="20201030 11:50:04.768"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:03.731" endtime="20201030 11:50:04.768"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:04.770" endtime="20201030 11:50:04.773"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:03.729" endtime="20201030 11:50:04.774"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:04.792" endtime="20201030 11:50:05.799"></status>
</kw>
<msg timestamp="20201030 11:50:05.800" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:04.789" endtime="20201030 11:50:05.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:05.805" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:05.802" endtime="20201030 11:50:05.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:05.807" endtime="20201030 11:50:05.810"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.784" endtime="20201030 11:50:05.811"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.780" endtime="20201030 11:50:05.812"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.777" endtime="20201030 11:50:05.813"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:05.815" endtime="20201030 11:50:05.818"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.775" endtime="20201030 11:50:05.818"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:05.836" endtime="20201030 11:50:06.843"></status>
</kw>
<msg timestamp="20201030 11:50:06.844" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:05.833" endtime="20201030 11:50:06.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:06.848" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:06.846" endtime="20201030 11:50:06.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:06.851" endtime="20201030 11:50:06.854"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:05.828" endtime="20201030 11:50:06.855"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:05.823" endtime="20201030 11:50:06.856"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:05.821" endtime="20201030 11:50:06.856"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:06.858" endtime="20201030 11:50:06.861"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:05.819" endtime="20201030 11:50:06.862"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:06.879" endtime="20201030 11:50:07.886"></status>
</kw>
<msg timestamp="20201030 11:50:07.887" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:06.876" endtime="20201030 11:50:07.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:07.892" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:07.889" endtime="20201030 11:50:07.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:07.894" endtime="20201030 11:50:07.899"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.871" endtime="20201030 11:50:07.900"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.867" endtime="20201030 11:50:07.902"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.864" endtime="20201030 11:50:07.903"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:07.905" endtime="20201030 11:50:07.908"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.863" endtime="20201030 11:50:07.908"></status>
</kw>
<kw name="${i} = 5" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:07.926" endtime="20201030 11:50:08.933"></status>
</kw>
<msg timestamp="20201030 11:50:08.934" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:07.923" endtime="20201030 11:50:08.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:08.938" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:08.936" endtime="20201030 11:50:08.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:08.941" endtime="20201030 11:50:08.944"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:07.918" endtime="20201030 11:50:08.945"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:07.913" endtime="20201030 11:50:08.946"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:07.911" endtime="20201030 11:50:08.947"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:08.948" endtime="20201030 11:50:08.952"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:07.909" endtime="20201030 11:50:08.952"></status>
</kw>
<kw name="${i} = 6" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:08.970" endtime="20201030 11:50:09.976"></status>
</kw>
<msg timestamp="20201030 11:50:09.977" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:08.966" endtime="20201030 11:50:09.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:09.982" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:09.979" endtime="20201030 11:50:09.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:09.984" endtime="20201030 11:50:09.988"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:08.961" endtime="20201030 11:50:09.989"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:08.957" endtime="20201030 11:50:09.990"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:08.954" endtime="20201030 11:50:09.990"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:09.992" endtime="20201030 11:50:09.995"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:08.953" endtime="20201030 11:50:09.996"></status>
</kw>
<kw name="${i} = 7" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:10.014" endtime="20201030 11:50:11.021"></status>
</kw>
<msg timestamp="20201030 11:50:11.022" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:10.011" endtime="20201030 11:50:11.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:11.027" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:11.024" endtime="20201030 11:50:11.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:11.029" endtime="20201030 11:50:11.033"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:10.006" endtime="20201030 11:50:11.034"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:10.001" endtime="20201030 11:50:11.035"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:09.998" endtime="20201030 11:50:11.035"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:11.037" endtime="20201030 11:50:11.040"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:09.996" endtime="20201030 11:50:11.041"></status>
</kw>
<kw name="${i} = 8" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:11.060" endtime="20201030 11:50:12.067"></status>
</kw>
<msg timestamp="20201030 11:50:12.068" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:11.057" endtime="20201030 11:50:12.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:12.073" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:12.070" endtime="20201030 11:50:12.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:12.075" endtime="20201030 11:50:12.078"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:11.050" endtime="20201030 11:50:12.079"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:11.046" endtime="20201030 11:50:12.080"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:11.043" endtime="20201030 11:50:12.081"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:12.083" endtime="20201030 11:50:12.086"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:11.041" endtime="20201030 11:50:12.086"></status>
</kw>
<kw name="${i} = 9" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:12.104" endtime="20201030 11:50:13.111"></status>
</kw>
<msg timestamp="20201030 11:50:13.112" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:12.101" endtime="20201030 11:50:13.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:13.117" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:13.114" endtime="20201030 11:50:13.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:13.119" endtime="20201030 11:50:13.122"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.096" endtime="20201030 11:50:13.123"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.091" endtime="20201030 11:50:13.124"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.089" endtime="20201030 11:50:13.125"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:13.127" endtime="20201030 11:50:13.130"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.087" endtime="20201030 11:50:13.130"></status>
</kw>
<kw name="${i} = 10" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:13.148" endtime="20201030 11:50:14.156"></status>
</kw>
<msg timestamp="20201030 11:50:14.157" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:13.145" endtime="20201030 11:50:14.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:14.162" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:14.159" endtime="20201030 11:50:14.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:14.164" endtime="20201030 11:50:14.167"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.140" endtime="20201030 11:50:14.169"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.135" endtime="20201030 11:50:14.170"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.133" endtime="20201030 11:50:14.170"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:14.172" endtime="20201030 11:50:14.175"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.131" endtime="20201030 11:50:14.175"></status>
</kw>
<kw name="${i} = 11" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:14.194" endtime="20201030 11:50:15.201"></status>
</kw>
<msg timestamp="20201030 11:50:15.202" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:14.191" endtime="20201030 11:50:15.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:15.207" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:15.204" endtime="20201030 11:50:15.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:15.209" endtime="20201030 11:50:15.212"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.186" endtime="20201030 11:50:15.213"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.181" endtime="20201030 11:50:15.214"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.178" endtime="20201030 11:50:15.215"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:15.216" endtime="20201030 11:50:15.219"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.176" endtime="20201030 11:50:15.220"></status>
</kw>
<kw name="${i} = 12" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:15.240" endtime="20201030 11:50:16.247"></status>
</kw>
<msg timestamp="20201030 11:50:16.247" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:15.237" endtime="20201030 11:50:16.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:16.252" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:16.250" endtime="20201030 11:50:16.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:16.255" endtime="20201030 11:50:16.258"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.232" endtime="20201030 11:50:16.259"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.225" endtime="20201030 11:50:16.260"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.222" endtime="20201030 11:50:16.261"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:16.262" endtime="20201030 11:50:16.265"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.221" endtime="20201030 11:50:16.266"></status>
</kw>
<kw name="${i} = 13" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:16.284" endtime="20201030 11:50:17.291"></status>
</kw>
<msg timestamp="20201030 11:50:17.292" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:16.281" endtime="20201030 11:50:17.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:17.297" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:17.294" endtime="20201030 11:50:17.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:17.299" endtime="20201030 11:50:17.302"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.276" endtime="20201030 11:50:17.303"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.271" endtime="20201030 11:50:17.304"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.268" endtime="20201030 11:50:17.305"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:17.307" endtime="20201030 11:50:17.310"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.266" endtime="20201030 11:50:17.310"></status>
</kw>
<kw name="${i} = 14" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:17.328" endtime="20201030 11:50:18.335"></status>
</kw>
<msg timestamp="20201030 11:50:18.336" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:17.325" endtime="20201030 11:50:18.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:18.341" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:18.338" endtime="20201030 11:50:18.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:18.343" endtime="20201030 11:50:18.346"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.320" endtime="20201030 11:50:18.347"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.315" endtime="20201030 11:50:18.348"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.313" endtime="20201030 11:50:18.349"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:18.350" endtime="20201030 11:50:18.354"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.311" endtime="20201030 11:50:18.354"></status>
</kw>
<kw name="${i} = 15" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:18.372" endtime="20201030 11:50:19.380"></status>
</kw>
<msg timestamp="20201030 11:50:19.381" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:18.369" endtime="20201030 11:50:19.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:19.386" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:19.384" endtime="20201030 11:50:19.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:19.388" endtime="20201030 11:50:19.392"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.364" endtime="20201030 11:50:19.393"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.359" endtime="20201030 11:50:19.394"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.356" endtime="20201030 11:50:19.394"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:19.396" endtime="20201030 11:50:19.400"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.355" endtime="20201030 11:50:19.400"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:02.693" endtime="20201030 11:50:19.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<msg timestamp="20201030 11:50:19.406" level="FAIL">'Timeout' does not contain 'Success'</msg>
<status status="FAIL" starttime="20201030 11:50:19.402" endtime="20201030 11:50:19.407"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:02.692" endtime="20201030 11:50:19.408"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:02.690" endtime="20201030 11:50:19.409"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:01.369" endtime="20201030 11:50:19.410"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="FAIL" starttime="20201030 11:50:19.411" endtime="20201030 11:50:19.416" critical="yes">Parent suite setup failed:
'Timeout' does not contain 'Success'</status>
</test>
<status status="FAIL" starttime="20201030 11:50:00.905" endtime="20201030 11:50:19.422">Suite setup failed:
'Timeout' does not contain 'Success'</status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 11:50:19.495" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 11:50:19.503" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 11:50:20.876" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 11:50:19.494" endtime="20201030 11:50:20.876"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 11:50:20.879" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 11:50:20.877" endtime="20201030 11:50:20.879"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.492" endtime="20201030 11:50:20.880"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:20.882" endtime="20201030 11:50:21.154"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.880" endtime="20201030 11:50:21.155"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:21.167" endtime="20201030 11:50:22.173"></status>
</kw>
<msg timestamp="20201030 11:50:22.174" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:21.166" endtime="20201030 11:50:22.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:22.179" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:22.177" endtime="20201030 11:50:22.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:22.182" endtime="20201030 11:50:22.185"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.163" endtime="20201030 11:50:22.186"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.161" endtime="20201030 11:50:22.187"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.160" endtime="20201030 11:50:22.188"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:22.189" endtime="20201030 11:50:22.193"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.159" endtime="20201030 11:50:22.193"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:22.211" endtime="20201030 11:50:23.219"></status>
</kw>
<msg timestamp="20201030 11:50:23.220" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:22.208" endtime="20201030 11:50:23.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:23.226" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:23.222" endtime="20201030 11:50:23.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:23.228" endtime="20201030 11:50:23.231"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.203" endtime="20201030 11:50:23.232"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.198" endtime="20201030 11:50:23.233"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.196" endtime="20201030 11:50:23.234"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:23.236" endtime="20201030 11:50:23.239"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.194" endtime="20201030 11:50:23.239"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:23.258" endtime="20201030 11:50:24.265"></status>
</kw>
<msg timestamp="20201030 11:50:24.266" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:23.254" endtime="20201030 11:50:24.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:24.271" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:24.268" endtime="20201030 11:50:24.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:24.273" endtime="20201030 11:50:24.276"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.249" endtime="20201030 11:50:24.277"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.244" endtime="20201030 11:50:24.278"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.242" endtime="20201030 11:50:24.279"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:24.281" endtime="20201030 11:50:24.284"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.240" endtime="20201030 11:50:24.284"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:24.302" endtime="20201030 11:50:25.309"></status>
</kw>
<msg timestamp="20201030 11:50:25.310" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:24.299" endtime="20201030 11:50:25.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:25.315" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:25.312" endtime="20201030 11:50:25.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:25.317" endtime="20201030 11:50:25.320"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.294" endtime="20201030 11:50:25.321"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.289" endtime="20201030 11:50:25.322"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.287" endtime="20201030 11:50:25.323"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:25.325" endtime="20201030 11:50:25.328"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.285" endtime="20201030 11:50:25.328"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:25.347" endtime="20201030 11:50:26.354"></status>
</kw>
<msg timestamp="20201030 11:50:26.355" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:25.343" endtime="20201030 11:50:26.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:26.359" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:26.357" endtime="20201030 11:50:26.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:26.362" endtime="20201030 11:50:26.365"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.338" endtime="20201030 11:50:26.366"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.333" endtime="20201030 11:50:26.367"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.331" endtime="20201030 11:50:26.368"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:26.369" endtime="20201030 11:50:26.373"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.329" endtime="20201030 11:50:26.373"></status>
</kw>
<kw name="${i} = 5" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:26.393" endtime="20201030 11:50:27.400"></status>
</kw>
<msg timestamp="20201030 11:50:27.401" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:26.390" endtime="20201030 11:50:27.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:27.406" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:27.403" endtime="20201030 11:50:27.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:27.408" endtime="20201030 11:50:27.411"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.383" endtime="20201030 11:50:27.412"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.378" endtime="20201030 11:50:27.413"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.376" endtime="20201030 11:50:27.414"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:27.416" endtime="20201030 11:50:27.419"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.374" endtime="20201030 11:50:27.419"></status>
</kw>
<kw name="${i} = 6" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:27.437" endtime="20201030 11:50:28.444"></status>
</kw>
<msg timestamp="20201030 11:50:28.445" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:27.434" endtime="20201030 11:50:28.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:28.450" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:28.447" endtime="20201030 11:50:28.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:28.452" endtime="20201030 11:50:28.456"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.429" endtime="20201030 11:50:28.457"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.424" endtime="20201030 11:50:28.458"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.422" endtime="20201030 11:50:28.458"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:28.460" endtime="20201030 11:50:28.463"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.420" endtime="20201030 11:50:28.464"></status>
</kw>
<kw name="${i} = 7" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:28.483" endtime="20201030 11:50:29.491"></status>
</kw>
<msg timestamp="20201030 11:50:29.492" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:28.480" endtime="20201030 11:50:29.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:29.496" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:29.494" endtime="20201030 11:50:29.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:29.499" endtime="20201030 11:50:29.502"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.475" endtime="20201030 11:50:29.503"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.470" endtime="20201030 11:50:29.504"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.466" endtime="20201030 11:50:29.505"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:29.506" endtime="20201030 11:50:29.510"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.464" endtime="20201030 11:50:29.510"></status>
</kw>
<kw name="${i} = 8" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:29.528" endtime="20201030 11:50:30.535"></status>
</kw>
<msg timestamp="20201030 11:50:30.536" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:29.525" endtime="20201030 11:50:30.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:30.541" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:30.539" endtime="20201030 11:50:30.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:30.544" endtime="20201030 11:50:30.549"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.520" endtime="20201030 11:50:30.550"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.515" endtime="20201030 11:50:30.551"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.513" endtime="20201030 11:50:30.552"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:30.554" endtime="20201030 11:50:30.557"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.511" endtime="20201030 11:50:30.557"></status>
</kw>
<kw name="${i} = 9" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:30.576" endtime="20201030 11:50:31.582"></status>
</kw>
<msg timestamp="20201030 11:50:31.583" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:30.572" endtime="20201030 11:50:31.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:31.588" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:31.586" endtime="20201030 11:50:31.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:31.591" endtime="20201030 11:50:31.594"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.567" endtime="20201030 11:50:31.595"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.562" endtime="20201030 11:50:31.596"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.560" endtime="20201030 11:50:31.597"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:31.599" endtime="20201030 11:50:31.603"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.558" endtime="20201030 11:50:31.603"></status>
</kw>
<kw name="${i} = 10" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:31.621" endtime="20201030 11:50:32.628"></status>
</kw>
<msg timestamp="20201030 11:50:32.629" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:31.618" endtime="20201030 11:50:32.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:32.634" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:32.632" endtime="20201030 11:50:32.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:32.637" endtime="20201030 11:50:32.640"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.613" endtime="20201030 11:50:32.641"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.608" endtime="20201030 11:50:32.642"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.606" endtime="20201030 11:50:32.643"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:32.645" endtime="20201030 11:50:32.648"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.604" endtime="20201030 11:50:32.648"></status>
</kw>
<kw name="${i} = 11" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:32.667" endtime="20201030 11:50:33.674"></status>
</kw>
<msg timestamp="20201030 11:50:33.675" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:32.664" endtime="20201030 11:50:33.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:33.679" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:33.677" endtime="20201030 11:50:33.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:33.682" endtime="20201030 11:50:33.685"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.658" endtime="20201030 11:50:33.686"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.654" endtime="20201030 11:50:33.687"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.651" endtime="20201030 11:50:33.688"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:33.690" endtime="20201030 11:50:33.693"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.649" endtime="20201030 11:50:33.693"></status>
</kw>
<kw name="${i} = 12" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:33.714" endtime="20201030 11:50:34.721"></status>
</kw>
<msg timestamp="20201030 11:50:34.722" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:33.711" endtime="20201030 11:50:34.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:34.727" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:34.724" endtime="20201030 11:50:34.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:34.729" endtime="20201030 11:50:34.733"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.703" endtime="20201030 11:50:34.734"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.699" endtime="20201030 11:50:34.735"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.696" endtime="20201030 11:50:34.736"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:34.738" endtime="20201030 11:50:34.741"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.694" endtime="20201030 11:50:34.742"></status>
</kw>
<kw name="${i} = 13" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:34.760" endtime="20201030 11:50:35.767"></status>
</kw>
<msg timestamp="20201030 11:50:35.768" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:34.757" endtime="20201030 11:50:35.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:35.773" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:35.770" endtime="20201030 11:50:35.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:35.775" endtime="20201030 11:50:35.778"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.751" endtime="20201030 11:50:35.779"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.747" endtime="20201030 11:50:35.780"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.744" endtime="20201030 11:50:35.781"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:35.783" endtime="20201030 11:50:35.786"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.742" endtime="20201030 11:50:35.786"></status>
</kw>
<kw name="${i} = 14" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:35.805" endtime="20201030 11:50:36.812"></status>
</kw>
<msg timestamp="20201030 11:50:36.813" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:35.802" endtime="20201030 11:50:36.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:36.818" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:36.815" endtime="20201030 11:50:36.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:36.820" endtime="20201030 11:50:36.823"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.796" endtime="20201030 11:50:36.824"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.792" endtime="20201030 11:50:36.825"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.789" endtime="20201030 11:50:36.826"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:36.828" endtime="20201030 11:50:36.831"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.787" endtime="20201030 11:50:36.831"></status>
</kw>
<kw name="${i} = 15" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:36.850" endtime="20201030 11:50:37.857"></status>
</kw>
<msg timestamp="20201030 11:50:37.858" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:36.846" endtime="20201030 11:50:37.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:37.864" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:37.861" endtime="20201030 11:50:37.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:37.866" endtime="20201030 11:50:37.869"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.841" endtime="20201030 11:50:37.870"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.836" endtime="20201030 11:50:37.871"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.834" endtime="20201030 11:50:37.872"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:37.874" endtime="20201030 11:50:37.877"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.832" endtime="20201030 11:50:37.877"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.158" endtime="20201030 11:50:37.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<msg timestamp="20201030 11:50:37.883" level="FAIL">'Timeout' does not contain 'Success'</msg>
<status status="FAIL" starttime="20201030 11:50:37.879" endtime="20201030 11:50:37.884"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:21.157" endtime="20201030 11:50:37.885"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:21.156" endtime="20201030 11:50:37.886"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:19.490" endtime="20201030 11:50:37.887"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="FAIL" starttime="20201030 11:50:37.888" endtime="20201030 11:50:37.894" critical="yes">Parent suite setup failed:
'Timeout' does not contain 'Success'</status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="FAIL" starttime="20201030 11:50:37.899" endtime="20201030 11:50:37.903" critical="yes">Parent suite setup failed:
'Timeout' does not contain 'Success'</status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="FAIL" starttime="20201030 11:50:37.907" endtime="20201030 11:50:37.912" critical="yes">Parent suite setup failed:
'Timeout' does not contain 'Success'</status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="FAIL" starttime="20201030 11:50:37.916" endtime="20201030 11:50:37.921" critical="yes">Parent suite setup failed:
'Timeout' does not contain 'Success'</status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="FAIL" starttime="20201030 11:50:37.924" endtime="20201030 11:50:37.929" critical="yes">Parent suite setup failed:
'Timeout' does not contain 'Success'</status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="FAIL" starttime="20201030 11:50:37.933" endtime="20201030 11:50:37.937" critical="yes">Parent suite setup failed:
'Timeout' does not contain 'Success'</status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="FAIL" starttime="20201030 11:50:37.942" endtime="20201030 11:50:37.946" critical="yes">Parent suite setup failed:
'Timeout' does not contain 'Success'</status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="FAIL" starttime="20201030 11:50:37.950" endtime="20201030 11:50:37.952" critical="yes">Parent suite setup failed:
'Timeout' does not contain 'Success'</status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="FAIL" starttime="20201030 11:50:37.954" endtime="20201030 11:50:37.956" critical="yes">Parent suite setup failed:
'Timeout' does not contain 'Success'</status>
</test>
<status status="FAIL" starttime="20201030 11:50:19.434" endtime="20201030 11:50:37.962">Suite setup failed:
'Timeout' does not contain 'Success'</status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 11:50:38.025" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 11:50:38.033" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 11:50:39.140" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 11:50:38.023" endtime="20201030 11:50:39.141"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 11:50:39.143" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 11:50:39.142" endtime="20201030 11:50:39.144"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.022" endtime="20201030 11:50:39.144"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:39.146" endtime="20201030 11:50:39.331"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.145" endtime="20201030 11:50:39.331"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:39.345" endtime="20201030 11:50:40.351"></status>
</kw>
<msg timestamp="20201030 11:50:40.352" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:39.343" endtime="20201030 11:50:40.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:40.357" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:40.354" endtime="20201030 11:50:40.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:40.359" endtime="20201030 11:50:40.363"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.341" endtime="20201030 11:50:40.364"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.338" endtime="20201030 11:50:40.365"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.336" endtime="20201030 11:50:40.366"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:40.367" endtime="20201030 11:50:40.371"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.336" endtime="20201030 11:50:40.371"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:40.391" endtime="20201030 11:50:41.398"></status>
</kw>
<msg timestamp="20201030 11:50:41.399" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:40.388" endtime="20201030 11:50:41.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:41.404" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:41.402" endtime="20201030 11:50:41.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:41.407" endtime="20201030 11:50:41.410"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.383" endtime="20201030 11:50:41.411"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.376" endtime="20201030 11:50:41.412"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.374" endtime="20201030 11:50:41.413"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:41.415" endtime="20201030 11:50:41.418"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.372" endtime="20201030 11:50:41.418"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:41.437" endtime="20201030 11:50:42.444"></status>
</kw>
<msg timestamp="20201030 11:50:42.445" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:41.433" endtime="20201030 11:50:42.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:42.449" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:42.447" endtime="20201030 11:50:42.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:42.452" endtime="20201030 11:50:42.455"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.428" endtime="20201030 11:50:42.456"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.423" endtime="20201030 11:50:42.457"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.421" endtime="20201030 11:50:42.458"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:42.460" endtime="20201030 11:50:42.463"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.419" endtime="20201030 11:50:42.464"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:42.483" endtime="20201030 11:50:43.490"></status>
</kw>
<msg timestamp="20201030 11:50:43.491" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:42.479" endtime="20201030 11:50:43.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:43.496" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:43.494" endtime="20201030 11:50:43.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:43.498" endtime="20201030 11:50:43.502"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.474" endtime="20201030 11:50:43.503"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.469" endtime="20201030 11:50:43.504"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.467" endtime="20201030 11:50:43.504"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:43.506" endtime="20201030 11:50:43.509"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.465" endtime="20201030 11:50:43.510"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:43.529" endtime="20201030 11:50:44.539"></status>
</kw>
<msg timestamp="20201030 11:50:44.540" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:43.526" endtime="20201030 11:50:44.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:44.545" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:44.542" endtime="20201030 11:50:44.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:44.547" endtime="20201030 11:50:44.551"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.520" endtime="20201030 11:50:44.552"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.515" endtime="20201030 11:50:44.553"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.513" endtime="20201030 11:50:44.553"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:44.555" endtime="20201030 11:50:44.559"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.511" endtime="20201030 11:50:44.559"></status>
</kw>
<kw name="${i} = 5" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:44.579" endtime="20201030 11:50:45.586"></status>
</kw>
<msg timestamp="20201030 11:50:45.587" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:44.575" endtime="20201030 11:50:45.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:45.592" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:45.589" endtime="20201030 11:50:45.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:45.594" endtime="20201030 11:50:45.598"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.570" endtime="20201030 11:50:45.607"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.565" endtime="20201030 11:50:45.609"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.562" endtime="20201030 11:50:45.609"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:45.611" endtime="20201030 11:50:45.615"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.560" endtime="20201030 11:50:45.615"></status>
</kw>
<kw name="${i} = 6" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:45.634" endtime="20201030 11:50:46.641"></status>
</kw>
<msg timestamp="20201030 11:50:46.642" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:45.630" endtime="20201030 11:50:46.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:46.647" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:46.644" endtime="20201030 11:50:46.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:46.649" endtime="20201030 11:50:46.653"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.625" endtime="20201030 11:50:46.654"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.620" endtime="20201030 11:50:46.655"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.618" endtime="20201030 11:50:46.655"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:46.657" endtime="20201030 11:50:46.660"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.616" endtime="20201030 11:50:46.661"></status>
</kw>
<kw name="${i} = 7" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:46.679" endtime="20201030 11:50:47.686"></status>
</kw>
<msg timestamp="20201030 11:50:47.687" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:46.676" endtime="20201030 11:50:47.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:47.692" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:47.689" endtime="20201030 11:50:47.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:47.694" endtime="20201030 11:50:47.698"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.671" endtime="20201030 11:50:47.699"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.666" endtime="20201030 11:50:47.700"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.663" endtime="20201030 11:50:47.700"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:47.702" endtime="20201030 11:50:47.705"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.661" endtime="20201030 11:50:47.706"></status>
</kw>
<kw name="${i} = 8" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:47.727" endtime="20201030 11:50:48.733"></status>
</kw>
<msg timestamp="20201030 11:50:48.734" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:47.723" endtime="20201030 11:50:48.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:48.740" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:48.737" endtime="20201030 11:50:48.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:48.742" endtime="20201030 11:50:48.746"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.715" endtime="20201030 11:50:48.747"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.711" endtime="20201030 11:50:48.748"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.708" endtime="20201030 11:50:48.748"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:48.750" endtime="20201030 11:50:48.753"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.706" endtime="20201030 11:50:48.754"></status>
</kw>
<kw name="${i} = 9" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:48.772" endtime="20201030 11:50:49.779"></status>
</kw>
<msg timestamp="20201030 11:50:49.780" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:48.769" endtime="20201030 11:50:49.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:49.785" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:49.782" endtime="20201030 11:50:49.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:49.787" endtime="20201030 11:50:49.791"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.764" endtime="20201030 11:50:49.792"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.759" endtime="20201030 11:50:49.793"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.756" endtime="20201030 11:50:49.793"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:49.795" endtime="20201030 11:50:49.798"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.754" endtime="20201030 11:50:49.799"></status>
</kw>
<kw name="${i} = 10" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:49.817" endtime="20201030 11:50:50.824"></status>
</kw>
<msg timestamp="20201030 11:50:50.825" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:49.814" endtime="20201030 11:50:50.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:50.830" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:50.827" endtime="20201030 11:50:50.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:50.832" endtime="20201030 11:50:50.835"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.808" endtime="20201030 11:50:50.836"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.804" endtime="20201030 11:50:50.837"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.801" endtime="20201030 11:50:50.838"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:50.840" endtime="20201030 11:50:50.843"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.799" endtime="20201030 11:50:50.843"></status>
</kw>
<kw name="${i} = 11" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:50.869" endtime="20201030 11:50:51.876"></status>
</kw>
<msg timestamp="20201030 11:50:51.877" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:50.858" endtime="20201030 11:50:51.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:51.882" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:51.879" endtime="20201030 11:50:51.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:51.884" endtime="20201030 11:50:51.888"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.853" endtime="20201030 11:50:51.889"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.848" endtime="20201030 11:50:51.890"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.846" endtime="20201030 11:50:51.890"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:51.892" endtime="20201030 11:50:51.895"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.844" endtime="20201030 11:50:51.896"></status>
</kw>
<kw name="${i} = 12" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:51.916" endtime="20201030 11:50:52.923"></status>
</kw>
<msg timestamp="20201030 11:50:52.924" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:51.913" endtime="20201030 11:50:52.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:52.929" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:52.926" endtime="20201030 11:50:52.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:52.931" endtime="20201030 11:50:52.935"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.908" endtime="20201030 11:50:52.936"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.901" endtime="20201030 11:50:52.937"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.898" endtime="20201030 11:50:52.937"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:52.939" endtime="20201030 11:50:52.942"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.896" endtime="20201030 11:50:52.943"></status>
</kw>
<kw name="${i} = 13" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:52.961" endtime="20201030 11:50:53.968"></status>
</kw>
<msg timestamp="20201030 11:50:53.969" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:52.958" endtime="20201030 11:50:53.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:53.974" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:53.971" endtime="20201030 11:50:53.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:53.976" endtime="20201030 11:50:53.979"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.953" endtime="20201030 11:50:53.981"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.948" endtime="20201030 11:50:53.982"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.945" endtime="20201030 11:50:53.982"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:53.984" endtime="20201030 11:50:53.987"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.944" endtime="20201030 11:50:53.988"></status>
</kw>
<kw name="${i} = 14" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:54.007" endtime="20201030 11:50:55.014"></status>
</kw>
<msg timestamp="20201030 11:50:55.015" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:54.004" endtime="20201030 11:50:55.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:55.020" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:55.017" endtime="20201030 11:50:55.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:55.022" endtime="20201030 11:50:55.026"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.998" endtime="20201030 11:50:55.027"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.993" endtime="20201030 11:50:55.028"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.990" endtime="20201030 11:50:55.028"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:55.030" endtime="20201030 11:50:55.033"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.988" endtime="20201030 11:50:55.034"></status>
</kw>
<kw name="${i} = 15" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:55.052" endtime="20201030 11:50:56.061"></status>
</kw>
<msg timestamp="20201030 11:50:56.062" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:55.049" endtime="20201030 11:50:56.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:56.067" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:56.064" endtime="20201030 11:50:56.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:56.069" endtime="20201030 11:50:56.073"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.044" endtime="20201030 11:50:56.074"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.039" endtime="20201030 11:50:56.075"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.037" endtime="20201030 11:50:56.075"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:56.077" endtime="20201030 11:50:56.080"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.034" endtime="20201030 11:50:56.081"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.335" endtime="20201030 11:50:56.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<msg timestamp="20201030 11:50:56.086" level="FAIL">'Timeout' does not contain 'Success'</msg>
<status status="FAIL" starttime="20201030 11:50:56.083" endtime="20201030 11:50:56.087"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:39.334" endtime="20201030 11:50:56.089"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:39.332" endtime="20201030 11:50:56.090"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:38.021" endtime="20201030 11:50:56.091"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="FAIL" starttime="20201030 11:50:56.092" endtime="20201030 11:50:56.100" critical="yes">Parent suite setup failed:
'Timeout' does not contain 'Success'</status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="FAIL" starttime="20201030 11:50:56.106" endtime="20201030 11:50:56.111" critical="yes">Parent suite setup failed:
'Timeout' does not contain 'Success'</status>
</test>
<status status="FAIL" starttime="20201030 11:50:37.976" endtime="20201030 11:50:56.119">Suite setup failed:
'Timeout' does not contain 'Success'</status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 11:50:56.183" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 11:50:56.191" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 11:50:57.300" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 11:50:56.181" endtime="20201030 11:50:57.301"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 11:50:57.304" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 11:50:57.302" endtime="20201030 11:50:57.304"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.180" endtime="20201030 11:50:57.305"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:57.307" endtime="20201030 11:50:57.494"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.305" endtime="20201030 11:50:57.494"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:57.507" endtime="20201030 11:50:58.513"></status>
</kw>
<msg timestamp="20201030 11:50:58.514" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:57.505" endtime="20201030 11:50:58.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:58.519" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:58.516" endtime="20201030 11:50:58.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:58.521" endtime="20201030 11:50:58.525"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.503" endtime="20201030 11:50:58.526"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.500" endtime="20201030 11:50:58.527"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.499" endtime="20201030 11:50:58.527"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:58.529" endtime="20201030 11:50:58.533"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.498" endtime="20201030 11:50:58.533"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:58.554" endtime="20201030 11:50:59.561"></status>
</kw>
<msg timestamp="20201030 11:50:59.562" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:58.550" endtime="20201030 11:50:59.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:59.566" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:59.564" endtime="20201030 11:50:59.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.569" endtime="20201030 11:50:59.572"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.543" endtime="20201030 11:50:59.573"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.538" endtime="20201030 11:50:59.574"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.536" endtime="20201030 11:50:59.575"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.576" endtime="20201030 11:50:59.580"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.534" endtime="20201030 11:50:59.580"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.599" endtime="20201030 11:51:00.606"></status>
</kw>
<msg timestamp="20201030 11:51:00.607" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:50:59.595" endtime="20201030 11:51:00.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.612" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:51:00.609" endtime="20201030 11:51:00.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.615" endtime="20201030 11:51:00.618"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.590" endtime="20201030 11:51:00.619"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.585" endtime="20201030 11:51:00.620"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.583" endtime="20201030 11:51:00.621"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.622" endtime="20201030 11:51:00.626"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.581" endtime="20201030 11:51:00.626"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.644" endtime="20201030 11:51:01.651"></status>
</kw>
<msg timestamp="20201030 11:51:01.652" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:51:00.641" endtime="20201030 11:51:01.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:01.658" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:51:01.655" endtime="20201030 11:51:01.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:01.661" endtime="20201030 11:51:01.666"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.636" endtime="20201030 11:51:01.667"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.631" endtime="20201030 11:51:01.669"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.628" endtime="20201030 11:51:01.670"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:01.673" endtime="20201030 11:51:01.679"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.627" endtime="20201030 11:51:01.679"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:01.702" endtime="20201030 11:51:02.708"></status>
</kw>
<msg timestamp="20201030 11:51:02.709" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:51:01.698" endtime="20201030 11:51:02.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:02.714" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:51:02.711" endtime="20201030 11:51:02.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:02.716" endtime="20201030 11:51:02.719"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.692" endtime="20201030 11:51:02.721"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.686" endtime="20201030 11:51:02.722"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.683" endtime="20201030 11:51:02.722"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:02.724" endtime="20201030 11:51:02.727"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.680" endtime="20201030 11:51:02.728"></status>
</kw>
<kw name="${i} = 5" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:02.749" endtime="20201030 11:51:03.756"></status>
</kw>
<msg timestamp="20201030 11:51:03.757" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:51:02.746" endtime="20201030 11:51:03.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.762" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:51:03.759" endtime="20201030 11:51:03.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.764" endtime="20201030 11:51:03.767"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.739" endtime="20201030 11:51:03.769"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.733" endtime="20201030 11:51:03.770"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.730" endtime="20201030 11:51:03.770"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.772" endtime="20201030 11:51:03.775"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.728" endtime="20201030 11:51:03.776"></status>
</kw>
<kw name="${i} = 6" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.794" endtime="20201030 11:51:04.801"></status>
</kw>
<msg timestamp="20201030 11:51:04.802" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:51:03.791" endtime="20201030 11:51:04.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.807" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:51:04.804" endtime="20201030 11:51:04.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.809" endtime="20201030 11:51:04.812"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.785" endtime="20201030 11:51:04.814"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.781" endtime="20201030 11:51:04.815"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.778" endtime="20201030 11:51:04.815"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.817" endtime="20201030 11:51:04.820"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.776" endtime="20201030 11:51:04.820"></status>
</kw>
<kw name="${i} = 7" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.838" endtime="20201030 11:51:05.845"></status>
</kw>
<msg timestamp="20201030 11:51:05.846" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:51:04.835" endtime="20201030 11:51:05.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.851" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:51:05.849" endtime="20201030 11:51:05.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.854" endtime="20201030 11:51:05.857"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.830" endtime="20201030 11:51:05.858"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.825" endtime="20201030 11:51:05.859"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.823" endtime="20201030 11:51:05.860"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.862" endtime="20201030 11:51:05.865"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.821" endtime="20201030 11:51:05.865"></status>
</kw>
<kw name="${i} = 8" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.884" endtime="20201030 11:51:06.893"></status>
</kw>
<msg timestamp="20201030 11:51:06.894" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:51:05.881" endtime="20201030 11:51:06.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:06.899" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:51:06.896" endtime="20201030 11:51:06.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:06.901" endtime="20201030 11:51:06.904"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.876" endtime="20201030 11:51:06.906"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.871" endtime="20201030 11:51:06.907"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.868" endtime="20201030 11:51:06.907"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:06.909" endtime="20201030 11:51:06.913"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.866" endtime="20201030 11:51:06.913"></status>
</kw>
<kw name="${i} = 9" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:06.931" endtime="20201030 11:51:07.938"></status>
</kw>
<msg timestamp="20201030 11:51:07.939" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:51:06.928" endtime="20201030 11:51:07.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.944" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:51:07.941" endtime="20201030 11:51:07.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.946" endtime="20201030 11:51:07.949"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.923" endtime="20201030 11:51:07.951"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.918" endtime="20201030 11:51:07.952"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.915" endtime="20201030 11:51:07.952"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.954" endtime="20201030 11:51:07.957"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.914" endtime="20201030 11:51:07.957"></status>
</kw>
<kw name="${i} = 10" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.976" endtime="20201030 11:51:08.983"></status>
</kw>
<msg timestamp="20201030 11:51:08.984" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:51:07.973" endtime="20201030 11:51:08.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.989" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:51:08.986" endtime="20201030 11:51:08.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.991" endtime="20201030 11:51:08.994"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.967" endtime="20201030 11:51:08.995"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.963" endtime="20201030 11:51:08.996"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.960" endtime="20201030 11:51:08.998"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.999" endtime="20201030 11:51:09.003"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.958" endtime="20201030 11:51:09.003"></status>
</kw>
<kw name="${i} = 11" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.022" endtime="20201030 11:51:10.029"></status>
</kw>
<msg timestamp="20201030 11:51:10.030" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:51:09.019" endtime="20201030 11:51:10.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:10.035" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:51:10.032" endtime="20201030 11:51:10.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.037" endtime="20201030 11:51:10.040"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.013" endtime="20201030 11:51:10.041"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.008" endtime="20201030 11:51:10.042"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.006" endtime="20201030 11:51:10.043"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.045" endtime="20201030 11:51:10.048"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.004" endtime="20201030 11:51:10.048"></status>
</kw>
<kw name="${i} = 12" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.070" endtime="20201030 11:51:11.077"></status>
</kw>
<msg timestamp="20201030 11:51:11.078" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:51:10.066" endtime="20201030 11:51:11.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.083" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:51:11.080" endtime="20201030 11:51:11.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.085" endtime="20201030 11:51:11.088"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.058" endtime="20201030 11:51:11.089"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.053" endtime="20201030 11:51:11.090"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.051" endtime="20201030 11:51:11.091"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.093" endtime="20201030 11:51:11.096"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.049" endtime="20201030 11:51:11.096"></status>
</kw>
<kw name="${i} = 13" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.114" endtime="20201030 11:51:12.121"></status>
</kw>
<msg timestamp="20201030 11:51:12.122" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:51:11.111" endtime="20201030 11:51:12.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.127" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:51:12.124" endtime="20201030 11:51:12.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.130" endtime="20201030 11:51:12.133"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.106" endtime="20201030 11:51:12.135"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.101" endtime="20201030 11:51:12.136"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.099" endtime="20201030 11:51:12.136"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.138" endtime="20201030 11:51:12.141"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.097" endtime="20201030 11:51:12.142"></status>
</kw>
<kw name="${i} = 14" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.160" endtime="20201030 11:51:13.166"></status>
</kw>
<msg timestamp="20201030 11:51:13.167" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:51:12.156" endtime="20201030 11:51:13.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.173" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:51:13.170" endtime="20201030 11:51:13.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.175" endtime="20201030 11:51:13.178"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.151" endtime="20201030 11:51:13.179"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.147" endtime="20201030 11:51:13.180"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.144" endtime="20201030 11:51:13.181"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.183" endtime="20201030 11:51:13.186"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.142" endtime="20201030 11:51:13.186"></status>
</kw>
<kw name="${i} = 15" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.204" endtime="20201030 11:51:14.211"></status>
</kw>
<msg timestamp="20201030 11:51:14.212" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:51:13.201" endtime="20201030 11:51:14.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.217" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 11:51:14.214" endtime="20201030 11:51:14.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.219" endtime="20201030 11:51:14.223"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.196" endtime="20201030 11:51:14.224"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.191" endtime="20201030 11:51:14.225"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.189" endtime="20201030 11:51:14.225"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.227" endtime="20201030 11:51:14.231"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.187" endtime="20201030 11:51:14.231"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.498" endtime="20201030 11:51:14.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<msg timestamp="20201030 11:51:14.238" level="FAIL">'Timeout' does not contain 'Success'</msg>
<status status="FAIL" starttime="20201030 11:51:14.234" endtime="20201030 11:51:14.238"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:57.496" endtime="20201030 11:51:14.240"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:57.495" endtime="20201030 11:51:14.241"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:56.179" endtime="20201030 11:51:14.242"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="FAIL" starttime="20201030 11:51:14.243" endtime="20201030 11:51:14.249" critical="yes">Parent suite setup failed:
'Timeout' does not contain 'Success'</status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="FAIL" starttime="20201030 11:51:14.253" endtime="20201030 11:51:14.260" critical="yes">Parent suite setup failed:
'Timeout' does not contain 'Success'</status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="FAIL" starttime="20201030 11:51:14.266" endtime="20201030 11:51:14.270" critical="yes">Parent suite setup failed:
'Timeout' does not contain 'Success'</status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="FAIL" starttime="20201030 11:51:14.276" endtime="20201030 11:51:14.280" critical="yes">Parent suite setup failed:
'Timeout' does not contain 'Success'</status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="FAIL" starttime="20201030 11:51:14.285" endtime="20201030 11:51:14.289" critical="yes">Parent suite setup failed:
'Timeout' does not contain 'Success'</status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="FAIL" starttime="20201030 11:51:14.295" endtime="20201030 11:51:14.298" critical="yes">Parent suite setup failed:
'Timeout' does not contain 'Success'</status>
</test>
<status status="FAIL" starttime="20201030 11:50:56.133" endtime="20201030 11:51:14.309">Suite setup failed:
'Timeout' does not contain 'Success'</status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">saml10-xpro</item>
<item name="RIOT-Version">2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased</item>
</metadata>
<status status="FAIL" starttime="20201030 11:50:00.795" endtime="20201030 11:51:14.337"></status>
</suite>
<statistics>
<total>
<stat pass="0" fail="18">Critical Tests</stat>
<stat pass="0" fail="18">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="0" fail="18">APP_tests_xtimer_benchmarks</stat>
<stat pass="0" fail="18">BOARD_saml10-xpro</stat>
<stat pass="0" fail="10">dev</stat>
</tag>
<suite>
<stat pass="0" fail="18" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="0" fail="1" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="0" fail="9" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="0" fail="2" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="0" fail="6" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
