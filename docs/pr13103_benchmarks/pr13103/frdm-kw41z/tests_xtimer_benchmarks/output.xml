<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201030 11:50:02.482" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 11:50:03.050" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 11:50:03.059" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 11:50:04.141" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 11:50:03.049" endtime="20201030 11:50:04.142"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 11:50:04.145" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 11:50:04.143" endtime="20201030 11:50:04.145"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:03.048" endtime="20201030 11:50:04.146"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:04.148" endtime="20201030 11:50:04.333"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.146" endtime="20201030 11:50:04.333"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:04.346" endtime="20201030 11:50:04.370"></status>
</kw>
<msg timestamp="20201030 11:50:04.370" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['4-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtim...</msg>
<status status="PASS" starttime="20201030 11:50:04.345" endtime="20201030 11:50:04.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:04.373" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['4-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtim...</msg>
<status status="PASS" starttime="20201030 11:50:04.371" endtime="20201030 11:50:04.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:04.376" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:50:04.374" endtime="20201030 11:50:04.377"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:04.342" endtime="20201030 11:50:04.377"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:04.340" endtime="20201030 11:50:04.378"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.339" endtime="20201030 11:50:04.378"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:50:04.382" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:50:04.381" endtime="20201030 11:50:04.383"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.379" endtime="20201030 11:50:04.383"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.338" endtime="20201030 11:50:04.384"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.337" endtime="20201030 11:50:04.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:04.384" endtime="20201030 11:50:04.386"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.336" endtime="20201030 11:50:04.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:04.387" endtime="20201030 11:50:04.389"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.334" endtime="20201030 11:50:04.389"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:03.046" endtime="20201030 11:50:04.390"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:04.396" endtime="20201030 11:50:04.416"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.395" endtime="20201030 11:50:04.416"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:04.430" endtime="20201030 11:50:04.456"></status>
</kw>
<msg timestamp="20201030 11:50:04.456" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:04.428" endtime="20201030 11:50:04.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:04.459" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:04.457" endtime="20201030 11:50:04.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:04.462" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:50:04.460" endtime="20201030 11:50:04.462"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:04.425" endtime="20201030 11:50:04.463"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:04.423" endtime="20201030 11:50:04.463"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.421" endtime="20201030 11:50:04.463"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:50:04.467" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:50:04.467" endtime="20201030 11:50:04.468"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.464" endtime="20201030 11:50:04.468"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.420" endtime="20201030 11:50:04.468"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.420" endtime="20201030 11:50:04.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:04.469" endtime="20201030 11:50:04.470"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.418" endtime="20201030 11:50:04.471"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.417" endtime="20201030 11:50:04.471"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.393" endtime="20201030 11:50:04.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:04.480" endtime="20201030 11:50:04.499"></status>
</kw>
<msg timestamp="20201030 11:50:04.499" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:04.478" endtime="20201030 11:50:04.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:04.502" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:04.500" endtime="20201030 11:50:04.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:04.503" endtime="20201030 11:50:04.504"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.475" endtime="20201030 11:50:04.505"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.473" endtime="20201030 11:50:04.505"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:04.510" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201030 11:50:04.509" endtime="20201030 11:50:04.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:04.512" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201030 11:50:04.511" endtime="20201030 11:50:04.512"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.506" endtime="20201030 11:50:04.513"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:50:04.390" endtime="20201030 11:50:04.514" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 11:50:02.594" endtime="20201030 11:50:04.517"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 11:50:04.571" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 11:50:04.579" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 11:50:05.660" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 11:50:04.569" endtime="20201030 11:50:05.661"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 11:50:05.663" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 11:50:05.662" endtime="20201030 11:50:05.664"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.568" endtime="20201030 11:50:05.664"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:05.666" endtime="20201030 11:50:05.887"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:05.665" endtime="20201030 11:50:05.888"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:05.900" endtime="20201030 11:50:05.921"></status>
</kw>
<msg timestamp="20201030 11:50:05.922" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['0.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-fo...</msg>
<status status="PASS" starttime="20201030 11:50:05.899" endtime="20201030 11:50:05.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:05.924" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['0.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-fo...</msg>
<status status="PASS" starttime="20201030 11:50:05.923" endtime="20201030 11:50:05.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:05.927" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:50:05.925" endtime="20201030 11:50:05.928"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:05.896" endtime="20201030 11:50:05.928"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:05.894" endtime="20201030 11:50:05.929"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:05.893" endtime="20201030 11:50:05.929"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:50:05.933" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:50:05.932" endtime="20201030 11:50:05.933"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:05.930" endtime="20201030 11:50:05.934"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:05.892" endtime="20201030 11:50:05.934"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:05.891" endtime="20201030 11:50:05.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:05.935" endtime="20201030 11:50:05.936"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:05.890" endtime="20201030 11:50:05.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:05.937" endtime="20201030 11:50:05.939"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:05.889" endtime="20201030 11:50:05.939"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.566" endtime="20201030 11:50:05.940"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:05.947" endtime="20201030 11:50:05.966"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:05.944" endtime="20201030 11:50:05.967"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:05.980" endtime="20201030 11:50:06.006"></status>
</kw>
<msg timestamp="20201030 11:50:06.007" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:05.978" endtime="20201030 11:50:06.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:06.009" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:06.008" endtime="20201030 11:50:06.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:06.012" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:50:06.010" endtime="20201030 11:50:06.013"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:05.976" endtime="20201030 11:50:06.013"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:05.973" endtime="20201030 11:50:06.014"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:05.972" endtime="20201030 11:50:06.014"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:50:06.018" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:50:06.017" endtime="20201030 11:50:06.018"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.015" endtime="20201030 11:50:06.018"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:05.971" endtime="20201030 11:50:06.018"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:05.970" endtime="20201030 11:50:06.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:06.019" endtime="20201030 11:50:06.021"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:05.969" endtime="20201030 11:50:06.021"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:05.968" endtime="20201030 11:50:06.022"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:05.943" endtime="20201030 11:50:06.022"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:06.031" endtime="20201030 11:50:06.045"></status>
</kw>
<msg timestamp="20201030 11:50:06.046" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:06.030" endtime="20201030 11:50:06.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:06.048" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:06.047" endtime="20201030 11:50:06.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:06.049" endtime="20201030 11:50:06.051"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.027" endtime="20201030 11:50:06.052"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.026" endtime="20201030 11:50:06.052"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:06.058" endtime="20201030 11:50:06.366"></status>
</kw>
<msg timestamp="20201030 11:50:06.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074984486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074984958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:06.057" endtime="20201030 11:50:06.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:06.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074984486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074984958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:06.370" endtime="20201030 11:50:06.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:06.378" endtime="20201030 11:50:06.380"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.054" endtime="20201030 11:50:06.380"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.053" endtime="20201030 11:50:06.381"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:06.385" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, ...</msg>
<status status="PASS" starttime="20201030 11:50:06.382" endtime="20201030 11:50:06.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:06.389" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.719...</msg>
<status status="PASS" starttime="20201030 11:50:06.386" endtime="20201030 11:50:06.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:06.394" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:06.393" endtime="20201030 11:50:06.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:06.396" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999869561e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 11:50:06.395" endtime="20201030 11:50:06.397"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.390" endtime="20201030 11:50:06.398"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.024" endtime="20201030 11:50:06.398"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.024" endtime="20201030 11:50:06.398"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:06.406" endtime="20201030 11:50:06.423"></status>
</kw>
<msg timestamp="20201030 11:50:06.424" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:06.405" endtime="20201030 11:50:06.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:06.426" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:06.425" endtime="20201030 11:50:06.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:06.427" endtime="20201030 11:50:06.429"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.402" endtime="20201030 11:50:06.429"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.400" endtime="20201030 11:50:06.430"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:06.436" endtime="20201030 11:50:06.741"></status>
</kw>
<msg timestamp="20201030 11:50:06.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075510833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075511306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:06.435" endtime="20201030 11:50:06.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:06.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075510833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075511306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:06.746" endtime="20201030 11:50:06.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:06.756" endtime="20201030 11:50:06.758"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.432" endtime="20201030 11:50:06.758"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.430" endtime="20201030 11:50:06.759"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:06.763" level="INFO">${RESULT} = [{'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999998748243e-07}, {'diff': 4.7199999998748243e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07...</msg>
<status status="PASS" starttime="20201030 11:50:06.759" endtime="20201030 11:50:06.764"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:06.769" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4....</msg>
<status status="PASS" starttime="20201030 11:50:06.764" endtime="20201030 11:50:06.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:06.773" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:06.772" endtime="20201030 11:50:06.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:06.776" level="INFO">VALUE: [4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999869561e-07, 4.720000000013602e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.720000000291158e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000291158e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.720000000291158e-07]</msg>
<status status="PASS" starttime="20201030 11:50:06.774" endtime="20201030 11:50:06.776"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.770" endtime="20201030 11:50:06.776"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.399" endtime="20201030 11:50:06.777"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.399" endtime="20201030 11:50:06.777"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:06.785" endtime="20201030 11:50:06.800"></status>
</kw>
<msg timestamp="20201030 11:50:06.800" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:06.783" endtime="20201030 11:50:06.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:06.803" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:06.801" endtime="20201030 11:50:06.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:06.804" endtime="20201030 11:50:06.805"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.781" endtime="20201030 11:50:06.806"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.779" endtime="20201030 11:50:06.806"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:06.813" endtime="20201030 11:50:07.121"></status>
</kw>
<msg timestamp="20201030 11:50:07.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.442356583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.442357056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:06.811" endtime="20201030 11:50:07.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:07.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.442356583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.442357056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:07.126" endtime="20201030 11:50:07.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:07.136" endtime="20201030 11:50:07.137"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.809" endtime="20201030 11:50:07.138"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.807" endtime="20201030 11:50:07.138"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:07.143" level="INFO">${RESULT} = [{'diff': 4.7300000000083386e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-...</msg>
<status status="PASS" starttime="20201030 11:50:07.139" endtime="20201030 11:50:07.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:07.148" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7300000000083386e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000000291158e-07,...</msg>
<status status="PASS" starttime="20201030 11:50:07.144" endtime="20201030 11:50:07.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:07.152" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:07.151" endtime="20201030 11:50:07.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:07.155" level="INFO">VALUE: [4.7300000000083386e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7200000008462695e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.729999999453227e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 11:50:07.153" endtime="20201030 11:50:07.155"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:07.149" endtime="20201030 11:50:07.155"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.778" endtime="20201030 11:50:07.156"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.777" endtime="20201030 11:50:07.156"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:07.165" endtime="20201030 11:50:07.181"></status>
</kw>
<msg timestamp="20201030 11:50:07.182" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:07.162" endtime="20201030 11:50:07.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:07.184" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:07.183" endtime="20201030 11:50:07.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:07.185" endtime="20201030 11:50:07.187"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:07.160" endtime="20201030 11:50:07.187"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:07.158" endtime="20201030 11:50:07.188"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:07.194" endtime="20201030 11:50:07.491"></status>
</kw>
<msg timestamp="20201030 11:50:07.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.810056403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.810056875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:07.193" endtime="20201030 11:50:07.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:07.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.810056403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.810056875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:07.496" endtime="20201030 11:50:07.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:07.506" endtime="20201030 11:50:07.508"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:07.190" endtime="20201030 11:50:07.508"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:07.188" endtime="20201030 11:50:07.509"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:07.513" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7200000008462695e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7200000008462695e-...</msg>
<status status="PASS" starttime="20201030 11:50:07.509" endtime="20201030 11:50:07.514"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:07.519" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.729999999453227e-07, 4.73000000056345e-07, 4...</msg>
<status status="PASS" starttime="20201030 11:50:07.514" endtime="20201030 11:50:07.519"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:07.523" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:07.522" endtime="20201030 11:50:07.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:07.525" level="INFO">VALUE: [4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.729999999453227e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7200000019564925e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.729999998343004e-07, 4.7200000019564925e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 11:50:07.524" endtime="20201030 11:50:07.526"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:07.519" endtime="20201030 11:50:07.526"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:07.157" endtime="20201030 11:50:07.527"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:07.156" endtime="20201030 11:50:07.527"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:07.535" endtime="20201030 11:50:07.548"></status>
</kw>
<msg timestamp="20201030 11:50:07.548" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:07.533" endtime="20201030 11:50:07.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:07.551" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:07.549" endtime="20201030 11:50:07.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:07.552" endtime="20201030 11:50:07.553"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:07.530" endtime="20201030 11:50:07.554"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:07.529" endtime="20201030 11:50:07.554"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:07.561" endtime="20201030 11:50:07.866"></status>
</kw>
<msg timestamp="20201030 11:50:07.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.181006569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.181007042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:07.559" endtime="20201030 11:50:07.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:07.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.181006569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.181007042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:07.871" endtime="20201030 11:50:07.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:07.881" endtime="20201030 11:50:07.882"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:07.557" endtime="20201030 11:50:07.883"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:07.555" endtime="20201030 11:50:07.884"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:07.888" level="INFO">${RESULT} = [{'diff': 4.73000000056345e-07}, {'diff': 4.729999998343004e-07}, {'diff': 4.7200000019564925e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.73000000056345e-07}, {'di...</msg>
<status status="PASS" starttime="20201030 11:50:07.884" endtime="20201030 11:50:07.888"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:07.893" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.73000000056345e-07, 4.729999998343004e-07, 4.7200000019564925e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.71999...</msg>
<status status="PASS" starttime="20201030 11:50:07.889" endtime="20201030 11:50:07.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:07.898" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:07.897" endtime="20201030 11:50:07.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:07.900" level="INFO">VALUE: [4.73000000056345e-07, 4.729999998343004e-07, 4.7200000019564925e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 11:50:07.899" endtime="20201030 11:50:07.901"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:07.894" endtime="20201030 11:50:07.903"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:07.528" endtime="20201030 11:50:07.904"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:07.527" endtime="20201030 11:50:07.904"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:07.912" endtime="20201030 11:50:07.929"></status>
</kw>
<msg timestamp="20201030 11:50:07.930" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:07.910" endtime="20201030 11:50:07.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:07.932" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:07.931" endtime="20201030 11:50:07.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:07.933" endtime="20201030 11:50:07.935"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:07.908" endtime="20201030 11:50:07.935"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:07.906" endtime="20201030 11:50:07.936"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:07.943" endtime="20201030 11:50:08.245"></status>
</kw>
<msg timestamp="20201030 11:50:08.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.537770708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.537771181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:07.941" endtime="20201030 11:50:08.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:08.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.537770708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.537771181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:08.250" endtime="20201030 11:50:08.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:08.260" endtime="20201030 11:50:08.263"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:07.938" endtime="20201030 11:50:08.263"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:07.936" endtime="20201030 11:50:08.264"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:08.268" level="INFO">${RESULT} = [{'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201030 11:50:08.264" endtime="20201030 11:50:08.268"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:08.273" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201030 11:50:08.269" endtime="20201030 11:50:08.273"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:08.277" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:08.276" endtime="20201030 11:50:08.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:08.279" level="INFO">VALUE: [4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7200000019564925e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 11:50:08.278" endtime="20201030 11:50:08.280"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:08.273" endtime="20201030 11:50:08.280"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:07.905" endtime="20201030 11:50:08.281"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:07.904" endtime="20201030 11:50:08.281"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:08.289" endtime="20201030 11:50:08.307"></status>
</kw>
<msg timestamp="20201030 11:50:08.307" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:08.288" endtime="20201030 11:50:08.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:08.310" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:08.308" endtime="20201030 11:50:08.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:08.311" endtime="20201030 11:50:08.313"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:08.285" endtime="20201030 11:50:08.313"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:08.283" endtime="20201030 11:50:08.314"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:08.320" endtime="20201030 11:50:08.623"></status>
</kw>
<msg timestamp="20201030 11:50:08.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.908724403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.908724875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:08.318" endtime="20201030 11:50:08.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:08.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.908724403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.908724875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:08.628" endtime="20201030 11:50:08.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:08.639" endtime="20201030 11:50:08.640"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:08.316" endtime="20201030 11:50:08.641"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:08.314" endtime="20201030 11:50:08.641"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:08.645" level="INFO">${RESULT} = [{'diff': 4.7200000019564925e-07}, {'diff': 4.7200000019564925e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7200000019564925e-07}, {'diff': 4.73000000056345e-07},...</msg>
<status status="PASS" starttime="20201030 11:50:08.642" endtime="20201030 11:50:08.646"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:08.651" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7200000019564925e-07, 4.7200000019564925e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4....</msg>
<status status="PASS" starttime="20201030 11:50:08.646" endtime="20201030 11:50:08.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:08.655" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:08.654" endtime="20201030 11:50:08.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:08.658" level="INFO">VALUE: [4.7200000019564925e-07, 4.7200000019564925e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 11:50:08.656" endtime="20201030 11:50:08.658"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:08.652" endtime="20201030 11:50:08.658"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:08.282" endtime="20201030 11:50:08.659"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:08.281" endtime="20201030 11:50:08.659"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:08.667" endtime="20201030 11:50:08.683"></status>
</kw>
<msg timestamp="20201030 11:50:08.684" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:08.665" endtime="20201030 11:50:08.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:08.686" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:08.685" endtime="20201030 11:50:08.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:08.687" endtime="20201030 11:50:08.689"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:08.663" endtime="20201030 11:50:08.689"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:08.661" endtime="20201030 11:50:08.690"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:08.696" endtime="20201030 11:50:09.004"></status>
</kw>
<msg timestamp="20201030 11:50:09.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.275567472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.275567944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:08.695" endtime="20201030 11:50:09.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:09.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.275567472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.275567944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:09.008" endtime="20201030 11:50:09.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:09.019" endtime="20201030 11:50:09.020"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:08.692" endtime="20201030 11:50:09.021"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:08.690" endtime="20201030 11:50:09.021"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:09.026" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7200000041769385e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201030 11:50:09.022" endtime="20201030 11:50:09.026"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:09.031" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201030 11:50:09.027" endtime="20201030 11:50:09.032"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:09.036" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:09.035" endtime="20201030 11:50:09.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:09.038" level="INFO">VALUE: [4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7200000041769385e-07, 4.73000000056345e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 11:50:09.037" endtime="20201030 11:50:09.038"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:09.032" endtime="20201030 11:50:09.039"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:08.660" endtime="20201030 11:50:09.039"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:08.659" endtime="20201030 11:50:09.040"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:09.047" endtime="20201030 11:50:09.067"></status>
</kw>
<msg timestamp="20201030 11:50:09.068" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:09.046" endtime="20201030 11:50:09.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:09.070" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:09.069" endtime="20201030 11:50:09.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:09.071" endtime="20201030 11:50:09.073"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:09.043" endtime="20201030 11:50:09.073"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:09.042" endtime="20201030 11:50:09.074"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:09.081" endtime="20201030 11:50:09.395"></status>
</kw>
<msg timestamp="20201030 11:50:09.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.642384375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.642384847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:09.079" endtime="20201030 11:50:09.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:09.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.642384375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.642384847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:09.400" endtime="20201030 11:50:09.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:09.410" endtime="20201030 11:50:09.412"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:09.076" endtime="20201030 11:50:09.413"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:09.074" endtime="20201030 11:50:09.413"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:09.417" level="INFO">${RESULT} = [{'diff': 4.7200000041769385e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201030 11:50:09.414" endtime="20201030 11:50:09.418"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:09.422" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201030 11:50:09.418" endtime="20201030 11:50:09.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:09.426" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:09.425" endtime="20201030 11:50:09.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:09.429" level="INFO">VALUE: [4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7200000041769385e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 11:50:09.427" endtime="20201030 11:50:09.430"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:09.423" endtime="20201030 11:50:09.430"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:09.040" endtime="20201030 11:50:09.431"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:09.040" endtime="20201030 11:50:09.431"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:09.439" endtime="20201030 11:50:09.451"></status>
</kw>
<msg timestamp="20201030 11:50:09.452" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:09.437" endtime="20201030 11:50:09.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:09.454" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:09.453" endtime="20201030 11:50:09.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:09.455" endtime="20201030 11:50:09.457"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:09.435" endtime="20201030 11:50:09.457"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:09.433" endtime="20201030 11:50:09.458"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:09.464" endtime="20201030 11:50:09.784"></status>
</kw>
<msg timestamp="20201030 11:50:09.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.014241986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.014242458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:09.463" endtime="20201030 11:50:09.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:09.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.014241986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.014242458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:09.797" endtime="20201030 11:50:09.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:09.807" endtime="20201030 11:50:09.809"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:09.460" endtime="20201030 11:50:09.809"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:09.459" endtime="20201030 11:50:09.810"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:09.814" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07...</msg>
<status status="PASS" starttime="20201030 11:50:09.810" endtime="20201030 11:50:09.814"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:09.819" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201030 11:50:09.815" endtime="20201030 11:50:09.820"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:09.824" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:09.823" endtime="20201030 11:50:09.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:09.826" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.729999996122558e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 11:50:09.825" endtime="20201030 11:50:09.827"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:09.820" endtime="20201030 11:50:09.827"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:09.432" endtime="20201030 11:50:09.828"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:09.431" endtime="20201030 11:50:09.828"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:09.836" endtime="20201030 11:50:09.849"></status>
</kw>
<msg timestamp="20201030 11:50:09.850" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:09.834" endtime="20201030 11:50:09.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:09.852" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:09.851" endtime="20201030 11:50:09.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:09.853" endtime="20201030 11:50:09.855"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:09.831" endtime="20201030 11:50:09.855"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:09.830" endtime="20201030 11:50:09.856"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:09.862" endtime="20201030 11:50:10.175"></status>
</kw>
<msg timestamp="20201030 11:50:10.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.392031569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.392032042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:09.861" endtime="20201030 11:50:10.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:10.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.392031569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.392032042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:10.180" endtime="20201030 11:50:10.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:10.190" endtime="20201030 11:50:10.192"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:09.858" endtime="20201030 11:50:10.192"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:09.856" endtime="20201030 11:50:10.193"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:10.197" level="INFO">${RESULT} = [{'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201030 11:50:10.193" endtime="20201030 11:50:10.197"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:10.202" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.71...</msg>
<status status="PASS" starttime="20201030 11:50:10.198" endtime="20201030 11:50:10.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:10.206" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:10.205" endtime="20201030 11:50:10.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:10.208" level="INFO">VALUE: [4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 11:50:10.207" endtime="20201030 11:50:10.209"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:10.202" endtime="20201030 11:50:10.209"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:09.829" endtime="20201030 11:50:10.210"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:09.828" endtime="20201030 11:50:10.210"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:10.219" endtime="20201030 11:50:10.236"></status>
</kw>
<msg timestamp="20201030 11:50:10.236" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:10.216" endtime="20201030 11:50:10.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:10.239" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:10.237" endtime="20201030 11:50:10.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:10.240" endtime="20201030 11:50:10.241"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:10.214" endtime="20201030 11:50:10.242"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:10.212" endtime="20201030 11:50:10.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:10.249" endtime="20201030 11:50:10.566"></status>
</kw>
<msg timestamp="20201030 11:50:10.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.779855472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.779855944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:10.247" endtime="20201030 11:50:10.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:10.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.779855472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.779855944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:10.571" endtime="20201030 11:50:10.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:10.581" endtime="20201030 11:50:10.583"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:10.244" endtime="20201030 11:50:10.583"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:10.243" endtime="20201030 11:50:10.584"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:10.588" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07...</msg>
<status status="PASS" starttime="20201030 11:50:10.584" endtime="20201030 11:50:10.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:10.593" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201030 11:50:10.589" endtime="20201030 11:50:10.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:10.598" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:10.597" endtime="20201030 11:50:10.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:10.600" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7200000086178306e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 11:50:10.599" endtime="20201030 11:50:10.601"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:10.594" endtime="20201030 11:50:10.601"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:10.211" endtime="20201030 11:50:10.602"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:10.210" endtime="20201030 11:50:10.602"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:10.609" endtime="20201030 11:50:10.623"></status>
</kw>
<msg timestamp="20201030 11:50:10.624" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:10.608" endtime="20201030 11:50:10.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:10.626" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:10.625" endtime="20201030 11:50:10.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:10.627" endtime="20201030 11:50:10.629"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:10.605" endtime="20201030 11:50:10.629"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:10.604" endtime="20201030 11:50:10.630"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:10.636" endtime="20201030 11:50:10.959"></status>
</kw>
<msg timestamp="20201030 11:50:10.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.154912611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.154913083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:10.635" endtime="20201030 11:50:10.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:10.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.154912611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.154913083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:10.964" endtime="20201030 11:50:10.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:10.974" endtime="20201030 11:50:10.975"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:10.632" endtime="20201030 11:50:10.976"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:10.630" endtime="20201030 11:50:10.976"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:10.980" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201030 11:50:10.977" endtime="20201030 11:50:10.981"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:10.986" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201030 11:50:10.982" endtime="20201030 11:50:10.986"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:10.990" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:10.989" endtime="20201030 11:50:10.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:10.993" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 11:50:10.991" endtime="20201030 11:50:10.993"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:10.987" endtime="20201030 11:50:10.994"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:10.602" endtime="20201030 11:50:10.994"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:10.602" endtime="20201030 11:50:10.994"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:11.002" endtime="20201030 11:50:11.020"></status>
</kw>
<msg timestamp="20201030 11:50:11.020" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:11.001" endtime="20201030 11:50:11.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:11.023" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:11.022" endtime="20201030 11:50:11.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:11.024" endtime="20201030 11:50:11.026"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:10.998" endtime="20201030 11:50:11.026"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:10.996" endtime="20201030 11:50:11.026"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:11.033" endtime="20201030 11:50:11.346"></status>
</kw>
<msg timestamp="20201030 11:50:11.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.533638375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.533638847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:11.031" endtime="20201030 11:50:11.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:11.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.533638375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.533638847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:11.351" endtime="20201030 11:50:11.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:11.361" endtime="20201030 11:50:11.363"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:11.029" endtime="20201030 11:50:11.363"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:11.027" endtime="20201030 11:50:11.364"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:11.368" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-...</msg>
<status status="PASS" starttime="20201030 11:50:11.364" endtime="20201030 11:50:11.368"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:11.373" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201030 11:50:11.369" endtime="20201030 11:50:11.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:11.377" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:11.376" endtime="20201030 11:50:11.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:11.379" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 11:50:11.378" endtime="20201030 11:50:11.380"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:11.373" endtime="20201030 11:50:11.380"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:10.995" endtime="20201030 11:50:11.381"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:10.995" endtime="20201030 11:50:11.381"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:11.391" endtime="20201030 11:50:11.407"></status>
</kw>
<msg timestamp="20201030 11:50:11.407" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:11.390" endtime="20201030 11:50:11.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:11.410" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:11.408" endtime="20201030 11:50:11.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:11.411" endtime="20201030 11:50:11.413"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:11.384" endtime="20201030 11:50:11.413"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:11.383" endtime="20201030 11:50:11.414"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:11.421" endtime="20201030 11:50:11.739"></status>
</kw>
<msg timestamp="20201030 11:50:11.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.921452736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.921453208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:11.419" endtime="20201030 11:50:11.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:11.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.921452736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.921453208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:11.744" endtime="20201030 11:50:11.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:11.754" endtime="20201030 11:50:11.755"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:11.416" endtime="20201030 11:50:11.756"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:11.415" endtime="20201030 11:50:11.756"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:11.761" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-...</msg>
<status status="PASS" starttime="20201030 11:50:11.757" endtime="20201030 11:50:11.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:11.766" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201030 11:50:11.762" endtime="20201030 11:50:11.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:11.770" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:11.769" endtime="20201030 11:50:11.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:11.773" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.729999991681666e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 11:50:11.771" endtime="20201030 11:50:11.773"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:11.767" endtime="20201030 11:50:11.774"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:11.382" endtime="20201030 11:50:11.774"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:11.381" endtime="20201030 11:50:11.774"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:11.782" endtime="20201030 11:50:11.798"></status>
</kw>
<msg timestamp="20201030 11:50:11.798" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:11.781" endtime="20201030 11:50:11.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:11.801" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:11.799" endtime="20201030 11:50:11.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:11.802" endtime="20201030 11:50:11.804"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:11.778" endtime="20201030 11:50:11.804"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:11.776" endtime="20201030 11:50:11.804"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:11.811" endtime="20201030 11:50:12.120"></status>
</kw>
<msg timestamp="20201030 11:50:12.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.299211167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.299211639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:11.810" endtime="20201030 11:50:12.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:12.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.299211167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.299211639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:12.125" endtime="20201030 11:50:12.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:12.135" endtime="20201030 11:50:12.137"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:11.807" endtime="20201030 11:50:12.137"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:11.805" endtime="20201030 11:50:12.137"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:12.142" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7200000086178306e-07}, {'diff': 4.73000000056345e-07},...</msg>
<status status="PASS" starttime="20201030 11:50:12.138" endtime="20201030 11:50:12.142"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:12.147" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.71...</msg>
<status status="PASS" starttime="20201030 11:50:12.143" endtime="20201030 11:50:12.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:12.152" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:12.151" endtime="20201030 11:50:12.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:12.154" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07]</msg>
<status status="PASS" starttime="20201030 11:50:12.153" endtime="20201030 11:50:12.155"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.148" endtime="20201030 11:50:12.155"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:11.775" endtime="20201030 11:50:12.156"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:11.775" endtime="20201030 11:50:12.156"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:12.164" endtime="20201030 11:50:12.181"></status>
</kw>
<msg timestamp="20201030 11:50:12.182" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:12.162" endtime="20201030 11:50:12.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:12.184" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:12.183" endtime="20201030 11:50:12.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:12.185" endtime="20201030 11:50:12.187"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.159" endtime="20201030 11:50:12.187"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.158" endtime="20201030 11:50:12.188"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:12.194" endtime="20201030 11:50:12.514"></status>
</kw>
<msg timestamp="20201030 11:50:12.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.682973056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.682973528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:12.193" endtime="20201030 11:50:12.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:12.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.682973056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.682973528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:12.519" endtime="20201030 11:50:12.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:12.529" endtime="20201030 11:50:12.531"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.190" endtime="20201030 11:50:12.532"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.189" endtime="20201030 11:50:12.532"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:12.536" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201030 11:50:12.533" endtime="20201030 11:50:12.537"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:12.541" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201030 11:50:12.537" endtime="20201030 11:50:12.541"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:12.545" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:12.544" endtime="20201030 11:50:12.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:12.548" level="INFO">VALUE: [4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.410000003536197e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 11:50:12.546" endtime="20201030 11:50:12.548"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.542" endtime="20201030 11:50:12.549"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.157" endtime="20201030 11:50:12.549"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.156" endtime="20201030 11:50:12.549"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:12.558" endtime="20201030 11:50:12.572"></status>
</kw>
<msg timestamp="20201030 11:50:12.573" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:12.556" endtime="20201030 11:50:12.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:12.575" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:12.574" endtime="20201030 11:50:12.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:12.576" endtime="20201030 11:50:12.578"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.553" endtime="20201030 11:50:12.579"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.552" endtime="20201030 11:50:12.579"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:12.585" endtime="20201030 11:50:12.901"></status>
</kw>
<msg timestamp="20201030 11:50:12.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.054806056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.054806528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:12.584" endtime="20201030 11:50:12.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:12.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.054806056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.054806528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:12.906" endtime="20201030 11:50:12.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:12.916" endtime="20201030 11:50:12.918"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.581" endtime="20201030 11:50:12.918"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.580" endtime="20201030 11:50:12.919"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:12.923" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {...</msg>
<status status="PASS" starttime="20201030 11:50:12.919" endtime="20201030 11:50:12.923"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:12.928" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199...</msg>
<status status="PASS" starttime="20201030 11:50:12.924" endtime="20201030 11:50:12.928"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:12.932" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:12.931" endtime="20201030 11:50:12.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:12.935" level="INFO">VALUE: [4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.420000004363601e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 11:50:12.934" endtime="20201030 11:50:12.935"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.929" endtime="20201030 11:50:12.936"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.550" endtime="20201030 11:50:12.936"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.550" endtime="20201030 11:50:12.937"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:12.945" endtime="20201030 11:50:12.959"></status>
</kw>
<msg timestamp="20201030 11:50:12.959" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:12.943" endtime="20201030 11:50:12.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:12.962" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:12.960" endtime="20201030 11:50:12.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:12.963" endtime="20201030 11:50:12.965"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.940" endtime="20201030 11:50:12.966"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.939" endtime="20201030 11:50:12.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:12.973" endtime="20201030 11:50:13.284"></status>
</kw>
<msg timestamp="20201030 11:50:13.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.436701236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.436701708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:12.971" endtime="20201030 11:50:13.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:13.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.436701236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.436701708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:13.289" endtime="20201030 11:50:13.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:13.299" endtime="20201030 11:50:13.300"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.968" endtime="20201030 11:50:13.301"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.967" endtime="20201030 11:50:13.301"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:13.306" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07},...</msg>
<status status="PASS" starttime="20201030 11:50:13.302" endtime="20201030 11:50:13.306"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:13.311" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4....</msg>
<status status="PASS" starttime="20201030 11:50:13.307" endtime="20201030 11:50:13.312"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:13.315" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:13.314" endtime="20201030 11:50:13.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:13.318" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 11:50:13.317" endtime="20201030 11:50:13.318"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.312" endtime="20201030 11:50:13.319"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.937" endtime="20201030 11:50:13.319"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.937" endtime="20201030 11:50:13.320"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:13.327" endtime="20201030 11:50:13.340"></status>
</kw>
<msg timestamp="20201030 11:50:13.341" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:13.326" endtime="20201030 11:50:13.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:13.343" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:13.342" endtime="20201030 11:50:13.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:13.345" endtime="20201030 11:50:13.346"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.323" endtime="20201030 11:50:13.347"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.322" endtime="20201030 11:50:13.347"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:13.354" endtime="20201030 11:50:13.672"></status>
</kw>
<msg timestamp="20201030 11:50:13.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.813587014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.813587486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:13.352" endtime="20201030 11:50:13.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:13.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.813587014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.813587486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:13.677" endtime="20201030 11:50:13.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:13.687" endtime="20201030 11:50:13.688"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.349" endtime="20201030 11:50:13.689"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.348" endtime="20201030 11:50:13.689"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:13.694" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7200000086178306e-07...</msg>
<status status="PASS" starttime="20201030 11:50:13.690" endtime="20201030 11:50:13.694"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:13.698" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4....</msg>
<status status="PASS" starttime="20201030 11:50:13.695" endtime="20201030 11:50:13.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:13.703" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:13.702" endtime="20201030 11:50:13.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:13.705" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 11:50:13.704" endtime="20201030 11:50:13.706"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.699" endtime="20201030 11:50:13.706"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.320" endtime="20201030 11:50:13.707"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.320" endtime="20201030 11:50:13.707"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.023" endtime="20201030 11:50:13.707"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:50:05.940" endtime="20201030 11:50:13.708" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:13.716" endtime="20201030 11:50:13.735"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.714" endtime="20201030 11:50:13.736"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:13.749" endtime="20201030 11:50:13.777"></status>
</kw>
<msg timestamp="20201030 11:50:13.778" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:13.748" endtime="20201030 11:50:13.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:13.780" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:13.779" endtime="20201030 11:50:13.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:13.783" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:50:13.781" endtime="20201030 11:50:13.783"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:13.745" endtime="20201030 11:50:13.784"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:13.743" endtime="20201030 11:50:13.785"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.742" endtime="20201030 11:50:13.785"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:50:13.789" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:50:13.788" endtime="20201030 11:50:13.789"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.786" endtime="20201030 11:50:13.789"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.741" endtime="20201030 11:50:13.789"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.740" endtime="20201030 11:50:13.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:13.790" endtime="20201030 11:50:13.792"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.738" endtime="20201030 11:50:13.792"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.737" endtime="20201030 11:50:13.793"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.712" endtime="20201030 11:50:13.793"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:13.802" endtime="20201030 11:50:13.819"></status>
</kw>
<msg timestamp="20201030 11:50:13.819" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:13.800" endtime="20201030 11:50:13.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:13.822" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:13.820" endtime="20201030 11:50:13.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:13.823" endtime="20201030 11:50:13.824"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.798" endtime="20201030 11:50:13.825"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.796" endtime="20201030 11:50:13.825"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:13.832" endtime="20201030 11:50:14.121"></status>
</kw>
<msg timestamp="20201030 11:50:14.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.078592111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.078596514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:13.830" endtime="20201030 11:50:14.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:14.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.078592111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.078596514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:14.126" endtime="20201030 11:50:14.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:14.136" endtime="20201030 11:50:14.138"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.828" endtime="20201030 11:50:14.138"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.826" endtime="20201030 11:50:14.139"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:14.144" level="INFO">${RESULT} = [{'diff': 4.403000000000046e-06}, {'diff': 4.443999999992343e-06}, {'diff': 4.430999999999186e-06}, {'diff': 4.429999999999712e-06}, {'diff': 4.402000000000572e-06}, {'diff': 4.389000000007415e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:50:14.140" endtime="20201030 11:50:14.144"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:14.149" level="INFO">${OVERHEAD} = {'diff': [4.403000000000046e-06, 4.443999999992343e-06, 4.430999999999186e-06, 4.429999999999712e-06, 4.402000000000572e-06, 4.389000000007415e-06, 4.416999999992677e-06, 4.429999999999712e-06, 4.4030...</msg>
<status status="PASS" starttime="20201030 11:50:14.145" endtime="20201030 11:50:14.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:14.153" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:14.152" endtime="20201030 11:50:14.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:14.156" level="INFO">VALUE: [4.403000000000046e-06, 4.443999999992343e-06, 4.430999999999186e-06, 4.429999999999712e-06, 4.402000000000572e-06, 4.389000000007415e-06, 4.416999999992677e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.458999999998325e-06, 4.429999999999712e-06, 4.430999999999186e-06, 4.388999999993537e-06, 4.4170000000065546e-06, 4.457999999998852e-06, 4.403000000000046e-06, 4.388999999993537e-06, 4.429999999999712e-06, 4.444000000006221e-06, 4.429999999999712e-06, 4.4170000000065546e-06, 4.444000000006221e-06, 4.4170000000065546e-06, 4.430999999999186e-06, 4.444000000006221e-06, 4.361000000008275e-06, 4.4170000000065546e-06, 4.416000000007081e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.4170000000065546e-06, 4.430999999999186e-06, 4.403000000000046e-06, 4.319000000002626e-06, 4.403000000000046e-06, 4.4170000000065546e-06, 4.402000000000572e-06, 4.389000000007415e-06, 4.429999999999712e-06, 4.416999999992677e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.430999999999186e-06, 4.389000000007415e-06, 4.443999999992343e-06, 4.445000000005694e-06, 4.429999999999712e-06, 4.416000000007081e-06, 4.430999999999186e-06, 4.403000000000046e-06]</msg>
<status status="PASS" starttime="20201030 11:50:14.154" endtime="20201030 11:50:14.157"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.150" endtime="20201030 11:50:14.158"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.795" endtime="20201030 11:50:14.158"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.794" endtime="20201030 11:50:14.158"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:14.166" endtime="20201030 11:50:14.180"></status>
</kw>
<msg timestamp="20201030 11:50:14.181" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:14.164" endtime="20201030 11:50:14.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:14.184" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:14.182" endtime="20201030 11:50:14.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:14.185" endtime="20201030 11:50:14.186"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.162" endtime="20201030 11:50:14.187"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.160" endtime="20201030 11:50:14.187"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:14.194" endtime="20201030 11:50:14.498"></status>
</kw>
<msg timestamp="20201030 11:50:14.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.079006667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.079011069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:14.192" endtime="20201030 11:50:14.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:14.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.079006667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.079011069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:14.503" endtime="20201030 11:50:14.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:14.513" endtime="20201030 11:50:14.515"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.190" endtime="20201030 11:50:14.515"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.188" endtime="20201030 11:50:14.516"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:14.520" level="INFO">${RESULT} = [{'diff': 4.402000000000572e-06}, {'diff': 4.389000000007415e-06}, {'diff': 4.429999999999712e-06}, {'diff': 4.416999999992677e-06}, {'diff': 4.403000000000046e-06}, {'diff': 4.375000000000906e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:50:14.517" endtime="20201030 11:50:14.520"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:14.526" level="INFO">${OVERHEAD} = {'diff': [4.402000000000572e-06, 4.389000000007415e-06, 4.429999999999712e-06, 4.416999999992677e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.430999999999186e-06, 4.389000000007415e-06, 4.4439...</msg>
<status status="PASS" starttime="20201030 11:50:14.521" endtime="20201030 11:50:14.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:14.530" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:14.529" endtime="20201030 11:50:14.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:14.533" level="INFO">VALUE: [4.402000000000572e-06, 4.389000000007415e-06, 4.429999999999712e-06, 4.416999999992677e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.430999999999186e-06, 4.389000000007415e-06, 4.443999999992343e-06, 4.445000000005694e-06, 4.429999999999712e-06, 4.416000000007081e-06, 4.430999999999186e-06, 4.403000000000046e-06, 4.402999999986168e-06, 4.402999999986168e-06, 4.416999999978799e-06, 4.429999999999712e-06, 4.431000000026941e-06, 4.445000000019572e-06, 4.402999999986168e-06, 4.402999999986168e-06, 4.375000000000906e-06, 4.443999999992343e-06, 4.402999999986168e-06, 4.388999999993537e-06, 4.402999999986168e-06, 4.43099999997143e-06, 4.41700000003431e-06, 4.402999999986168e-06, 4.43099999997143e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.402999999986168e-06, 4.429999999999712e-06, 4.388999999993537e-06, 4.41700000003431e-06, 4.445000000019572e-06, 4.388999999993537e-06, 4.416999999978799e-06, 4.431000000026941e-06, 4.43099999997143e-06, 4.388999999993537e-06, 4.429999999999712e-06, 4.445000000019572e-06, 4.416000000007081e-06, 4.388999999993537e-06, 4.40200000001445e-06, 4.402999999986168e-06, 4.416999999978799e-06, 4.41700000003431e-06, 4.347999999987362e-06, 4.445000000019572e-06, 4.43099999997143e-06, 4.389000000049048e-06, 4.429999999999712e-06, 4.43099999997143e-06, 4.389000000049048e-06, 4.388999999993537e-06, 4.443999999992343e-06, 4.416000000007081e-06, 4.388999999993537e-06, 4.416000000007081e-06, 4.416000000007081e-06]</msg>
<status status="PASS" starttime="20201030 11:50:14.531" endtime="20201030 11:50:14.533"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.526" endtime="20201030 11:50:14.534"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.159" endtime="20201030 11:50:14.534"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.158" endtime="20201030 11:50:14.534"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:14.544" endtime="20201030 11:50:14.563"></status>
</kw>
<msg timestamp="20201030 11:50:14.564" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:14.543" endtime="20201030 11:50:14.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:14.566" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:14.565" endtime="20201030 11:50:14.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:14.567" endtime="20201030 11:50:14.569"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.539" endtime="20201030 11:50:14.569"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.537" endtime="20201030 11:50:14.570"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:14.576" endtime="20201030 11:50:14.889"></status>
</kw>
<msg timestamp="20201030 11:50:14.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.431682472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.431686889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:14.575" endtime="20201030 11:50:14.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:14.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.431682472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.431686889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:14.894" endtime="20201030 11:50:14.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:14.911" endtime="20201030 11:50:14.913"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.572" endtime="20201030 11:50:14.914"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.570" endtime="20201030 11:50:14.914"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:14.918" level="INFO">${RESULT} = [{'diff': 4.41700000003431e-06}, {'diff': 4.347999999987362e-06}, {'diff': 4.445000000019572e-06}, {'diff': 4.43099999997143e-06}, {'diff': 4.389000000049048e-06}, {'diff': 4.429999999999712e-06}, {'d...</msg>
<status status="PASS" starttime="20201030 11:50:14.915" endtime="20201030 11:50:14.919"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:14.923" level="INFO">${OVERHEAD} = {'diff': [4.41700000003431e-06, 4.347999999987362e-06, 4.445000000019572e-06, 4.43099999997143e-06, 4.389000000049048e-06, 4.429999999999712e-06, 4.43099999997143e-06, 4.389000000049048e-06, 4.3889999...</msg>
<status status="PASS" starttime="20201030 11:50:14.919" endtime="20201030 11:50:14.923"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:14.927" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:14.926" endtime="20201030 11:50:14.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:14.930" level="INFO">VALUE: [4.41700000003431e-06, 4.347999999987362e-06, 4.445000000019572e-06, 4.43099999997143e-06, 4.389000000049048e-06, 4.429999999999712e-06, 4.43099999997143e-06, 4.389000000049048e-06, 4.388999999993537e-06, 4.443999999992343e-06, 4.416000000007081e-06, 4.388999999993537e-06, 4.416000000007081e-06, 4.416000000007081e-06, 4.471999999977605e-06, 4.403000000041679e-06, 4.403000000041679e-06, 4.416000000007081e-06, 4.403000000041679e-06, 4.401999999958939e-06, 4.388000000021819e-06, 4.403000000041679e-06, 4.403000000041679e-06, 4.388999999993537e-06, 4.430999999915919e-06, 4.402000000069961e-06, 4.430000000055223e-06, 4.430999999915919e-06, 4.430000000055223e-06, 4.416999999978799e-06, 4.346999999960133e-06, 4.471999999977605e-06, 4.416999999978799e-06, 4.416999999978799e-06, 4.417000000089821e-06, 4.402000000069961e-06, 4.388999999993537e-06, 4.443999999992343e-06, 4.416999999978799e-06, 4.443999999992343e-06, 4.458000000040485e-06, 4.486000000025747e-06, 4.402000000069961e-06, 4.430999999915919e-06, 4.443999999992343e-06, 4.431000000026941e-06, 4.375000000056417e-06, 4.459000000012203e-06, 4.429999999944201e-06, 4.416999999978799e-06, 4.416999999978799e-06, 4.416000000007081e-06, 4.429999999944201e-06, 4.499999999962867e-06, 4.416999999978799e-06, 4.429999999944201e-06, 4.388999999993537e-06, 4.388999999993537e-06, 4.429999999944201e-06, 4.333000000023013e-06, 4.416000000007081e-06, 4.361000000008275e-06, 4.416999999978799e-06, 4.403000000041679e-06]</msg>
<status status="PASS" starttime="20201030 11:50:14.928" endtime="20201030 11:50:14.930"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.924" endtime="20201030 11:50:14.931"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.536" endtime="20201030 11:50:14.931"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.535" endtime="20201030 11:50:14.931"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:14.940" endtime="20201030 11:50:14.953"></status>
</kw>
<msg timestamp="20201030 11:50:14.954" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:14.937" endtime="20201030 11:50:14.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:14.956" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:14.955" endtime="20201030 11:50:14.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:14.957" endtime="20201030 11:50:14.959"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.935" endtime="20201030 11:50:14.959"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.933" endtime="20201030 11:50:14.960"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:14.966" endtime="20201030 11:50:15.264"></status>
</kw>
<msg timestamp="20201030 11:50:15.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.802592958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.802597375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:14.965" endtime="20201030 11:50:15.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:15.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.802592958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.802597375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:15.270" endtime="20201030 11:50:15.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:15.280" endtime="20201030 11:50:15.281"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.962" endtime="20201030 11:50:15.282"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.960" endtime="20201030 11:50:15.282"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:15.287" level="INFO">${RESULT} = [{'diff': 4.416999999978799e-06}, {'diff': 4.416000000007081e-06}, {'diff': 4.429999999944201e-06}, {'diff': 4.499999999962867e-06}, {'diff': 4.416999999978799e-06}, {'diff': 4.429999999944201e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:50:15.283" endtime="20201030 11:50:15.287"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:15.292" level="INFO">${OVERHEAD} = {'diff': [4.416999999978799e-06, 4.416000000007081e-06, 4.429999999944201e-06, 4.499999999962867e-06, 4.416999999978799e-06, 4.429999999944201e-06, 4.388999999993537e-06, 4.388999999993537e-06, 4.4299...</msg>
<status status="PASS" starttime="20201030 11:50:15.288" endtime="20201030 11:50:15.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:15.296" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:15.295" endtime="20201030 11:50:15.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:15.299" level="INFO">VALUE: [4.416999999978799e-06, 4.416000000007081e-06, 4.429999999944201e-06, 4.499999999962867e-06, 4.416999999978799e-06, 4.429999999944201e-06, 4.388999999993537e-06, 4.388999999993537e-06, 4.429999999944201e-06, 4.333000000023013e-06, 4.416000000007081e-06, 4.361000000008275e-06, 4.416999999978799e-06, 4.403000000041679e-06, 4.4019999998479165e-06, 4.416999999978799e-06, 4.416999999978799e-06, 4.429999999944201e-06, 4.416999999978799e-06, 4.388999999882515e-06, 4.305999999898447e-06, 4.471999999866583e-06, 4.4030000001527014e-06, 4.402000000069961e-06, 4.402000000069961e-06, 4.415999999896059e-06, 4.388999999882515e-06, 4.416000000118103e-06, 4.416000000118103e-06, 4.417000000200844e-06, 4.415999999896059e-06, 4.416999999978799e-06, 4.375000000056417e-06, 4.416999999978799e-06, 4.402000000069961e-06, 4.389000000104559e-06, 4.402999999930657e-06, 4.430000000166245e-06, 4.402999999930657e-06, 4.416999999978799e-06, 4.389000000104559e-06, 4.402999999930657e-06, 4.361000000008275e-06, 4.429999999944201e-06, 4.402000000069961e-06, 4.388999999882515e-06, 4.402999999930657e-06, 4.3749999998343725e-06, 4.416999999978799e-06, 4.430000000166245e-06, 4.416999999978799e-06, 4.458000000040485e-06, 4.4030000001527014e-06, 4.417000000200844e-06, 4.402999999930657e-06, 4.402999999930657e-06, 4.416999999978799e-06, 4.402000000069961e-06, 4.402999999930657e-06, 4.402000000069961e-06, 4.361000000008275e-06, 4.431000000026941e-06, 4.416999999978799e-06, 4.402999999930657e-06]</msg>
<status status="PASS" starttime="20201030 11:50:15.297" endtime="20201030 11:50:15.299"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.293" endtime="20201030 11:50:15.300"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.932" endtime="20201030 11:50:15.300"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.931" endtime="20201030 11:50:15.300"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:15.308" endtime="20201030 11:50:15.326"></status>
</kw>
<msg timestamp="20201030 11:50:15.327" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:15.307" endtime="20201030 11:50:15.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:15.329" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:15.328" endtime="20201030 11:50:15.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:15.330" endtime="20201030 11:50:15.332"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.304" endtime="20201030 11:50:15.332"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.302" endtime="20201030 11:50:15.333"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:15.339" endtime="20201030 11:50:15.648"></status>
</kw>
<msg timestamp="20201030 11:50:15.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.186351958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.186356375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:15.338" endtime="20201030 11:50:15.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:15.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.186351958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.186356375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:15.653" endtime="20201030 11:50:15.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:15.663" endtime="20201030 11:50:15.665"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.335" endtime="20201030 11:50:15.666"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.333" endtime="20201030 11:50:15.666"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:15.670" level="INFO">${RESULT} = [{'diff': 4.416999999978799e-06}, {'diff': 4.458000000040485e-06}, {'diff': 4.4030000001527014e-06}, {'diff': 4.417000000200844e-06}, {'diff': 4.402999999930657e-06}, {'diff': 4.402999999930657e-06}, ...</msg>
<status status="PASS" starttime="20201030 11:50:15.667" endtime="20201030 11:50:15.671"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:15.676" level="INFO">${OVERHEAD} = {'diff': [4.416999999978799e-06, 4.458000000040485e-06, 4.4030000001527014e-06, 4.417000000200844e-06, 4.402999999930657e-06, 4.402999999930657e-06, 4.416999999978799e-06, 4.402000000069961e-06, 4.402...</msg>
<status status="PASS" starttime="20201030 11:50:15.671" endtime="20201030 11:50:15.677"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:15.680" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:15.679" endtime="20201030 11:50:15.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:15.683" level="INFO">VALUE: [4.416999999978799e-06, 4.458000000040485e-06, 4.4030000001527014e-06, 4.417000000200844e-06, 4.402999999930657e-06, 4.402999999930657e-06, 4.416999999978799e-06, 4.402000000069961e-06, 4.402999999930657e-06, 4.402000000069961e-06, 4.361000000008275e-06, 4.431000000026941e-06, 4.416999999978799e-06, 4.402999999930657e-06, 4.4030000001527014e-06, 4.458000000040485e-06, 4.443999999992343e-06, 4.416000000118103e-06, 4.402999999930657e-06, 4.443999999992343e-06, 4.4030000001527014e-06, 4.416999999978799e-06, 4.388999999882515e-06, 4.416999999978799e-06, 4.458000000040485e-06, 4.443999999992343e-06, 4.416999999978799e-06, 4.402999999930657e-06, 4.416999999978799e-06, 4.4030000001527014e-06, 4.333000000134035e-06, 4.387999999799774e-06, 4.443999999992343e-06, 4.416000000118103e-06, 4.431000000026941e-06, 4.389000000104559e-06, 4.416999999978799e-06, 4.389000000104559e-06, 4.431000000026941e-06, 4.416000000118103e-06, 4.402999999930657e-06, 4.402000000069961e-06, 4.416999999978799e-06, 4.416999999978799e-06, 4.415999999896059e-06, 4.4030000001527014e-06, 4.389000000104559e-06, 4.430000000166245e-06, 4.388999999882515e-06, 4.4030000001527014e-06, 4.389000000104559e-06, 4.389000000104559e-06, 4.458000000040485e-06, 4.402999999930657e-06, 4.402000000069961e-06, 4.444999999853039e-06, 4.416999999978799e-06, 4.387999999799774e-06, 4.416000000118103e-06, 4.4030000001527014e-06, 4.416999999978799e-06, 4.431000000026941e-06, 4.402999999930657e-06, 4.443999999992343e-06]</msg>
<status status="PASS" starttime="20201030 11:50:15.682" endtime="20201030 11:50:15.683"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.677" endtime="20201030 11:50:15.684"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.301" endtime="20201030 11:50:15.684"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.301" endtime="20201030 11:50:15.685"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:15.692" endtime="20201030 11:50:15.712"></status>
</kw>
<msg timestamp="20201030 11:50:15.712" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:15.691" endtime="20201030 11:50:15.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:15.715" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:15.713" endtime="20201030 11:50:15.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:15.716" endtime="20201030 11:50:15.718"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.688" endtime="20201030 11:50:15.718"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.687" endtime="20201030 11:50:15.718"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:15.725" endtime="20201030 11:50:16.022"></status>
</kw>
<msg timestamp="20201030 11:50:16.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.547246153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.547250542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:15.723" endtime="20201030 11:50:16.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:16.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.547246153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.547250542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:16.028" endtime="20201030 11:50:16.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:16.038" endtime="20201030 11:50:16.040"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.721" endtime="20201030 11:50:16.040"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.719" endtime="20201030 11:50:16.041"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:16.045" level="INFO">${RESULT} = [{'diff': 4.389000000104559e-06}, {'diff': 4.389000000104559e-06}, {'diff': 4.458000000040485e-06}, {'diff': 4.402999999930657e-06}, {'diff': 4.402000000069961e-06}, {'diff': 4.444999999853039e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:50:16.041" endtime="20201030 11:50:16.045"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:16.049" level="INFO">${OVERHEAD} = {'diff': [4.389000000104559e-06, 4.389000000104559e-06, 4.458000000040485e-06, 4.402999999930657e-06, 4.402000000069961e-06, 4.444999999853039e-06, 4.416999999978799e-06, 4.387999999799774e-06, 4.4160...</msg>
<status status="PASS" starttime="20201030 11:50:16.046" endtime="20201030 11:50:16.050"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:16.054" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:16.053" endtime="20201030 11:50:16.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:16.056" level="INFO">VALUE: [4.389000000104559e-06, 4.389000000104559e-06, 4.458000000040485e-06, 4.402999999930657e-06, 4.402000000069961e-06, 4.444999999853039e-06, 4.416999999978799e-06, 4.387999999799774e-06, 4.416000000118103e-06, 4.4030000001527014e-06, 4.416999999978799e-06, 4.431000000026941e-06, 4.402999999930657e-06, 4.443999999992343e-06, 4.415999999896059e-06, 4.4030000001527014e-06, 4.431000000026941e-06, 4.402000000069961e-06, 4.389000000104559e-06, 4.402999999930657e-06, 4.430000000166245e-06, 4.416000000118103e-06, 4.431000000026941e-06, 4.444999999853039e-06, 4.416000000118103e-06, 4.415999999896059e-06, 4.389000000104559e-06, 4.4030000001527014e-06, 4.3749999998343725e-06, 4.443999999992343e-06, 4.4030000001527014e-06, 4.402999999930657e-06, 4.431000000026941e-06, 4.415999999896059e-06, 4.443999999992343e-06, 4.4309999998048966e-06, 4.4030000001527014e-06, 4.402999999930657e-06, 4.416999999978799e-06, 4.388000000021819e-06, 4.346999999960133e-06, 4.416000000118103e-06, 4.443999999992343e-06, 4.402999999930657e-06, 4.415999999896059e-06, 4.402999999930657e-06, 4.402999999930657e-06, 4.4579999998184405e-06, 4.4309999998048966e-06, 4.431000000026941e-06, 4.458000000040485e-06, 4.416000000118103e-06, 4.429999999944201e-06, 4.416999999978799e-06, 4.429999999944201e-06, 4.416999999978799e-06, 4.402999999930657e-06, 4.402999999930657e-06, 4.431000000026941e-06, 4.402999999930657e-06, 4.388999999882515e-06, 4.416000000118103e-06, 4.402000000069961e-06, 4.431000000026941e-06]</msg>
<status status="PASS" starttime="20201030 11:50:16.055" endtime="20201030 11:50:16.057"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.050" endtime="20201030 11:50:16.057"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.685" endtime="20201030 11:50:16.058"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.685" endtime="20201030 11:50:16.058"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:16.067" endtime="20201030 11:50:16.084"></status>
</kw>
<msg timestamp="20201030 11:50:16.085" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:16.065" endtime="20201030 11:50:16.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:16.087" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:16.086" endtime="20201030 11:50:16.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:16.088" endtime="20201030 11:50:16.090"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.062" endtime="20201030 11:50:16.090"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.060" endtime="20201030 11:50:16.091"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:16.097" endtime="20201030 11:50:16.401"></status>
</kw>
<msg timestamp="20201030 11:50:16.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.919082875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.919087333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:16.096" endtime="20201030 11:50:16.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:16.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.919082875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.919087333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:16.406" endtime="20201030 11:50:16.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:16.416" endtime="20201030 11:50:16.418"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.093" endtime="20201030 11:50:16.418"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.091" endtime="20201030 11:50:16.419"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:16.423" level="INFO">${RESULT} = [{'diff': 4.458000000040485e-06}, {'diff': 4.416000000118103e-06}, {'diff': 4.429999999944201e-06}, {'diff': 4.416999999978799e-06}, {'diff': 4.429999999944201e-06}, {'diff': 4.416999999978799e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:50:16.420" endtime="20201030 11:50:16.423"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:16.428" level="INFO">${OVERHEAD} = {'diff': [4.458000000040485e-06, 4.416000000118103e-06, 4.429999999944201e-06, 4.416999999978799e-06, 4.429999999944201e-06, 4.416999999978799e-06, 4.402999999930657e-06, 4.402999999930657e-06, 4.4310...</msg>
<status status="PASS" starttime="20201030 11:50:16.424" endtime="20201030 11:50:16.429"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:16.433" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:16.432" endtime="20201030 11:50:16.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:16.435" level="INFO">VALUE: [4.458000000040485e-06, 4.416000000118103e-06, 4.429999999944201e-06, 4.416999999978799e-06, 4.429999999944201e-06, 4.416999999978799e-06, 4.402999999930657e-06, 4.402999999930657e-06, 4.431000000026941e-06, 4.402999999930657e-06, 4.388999999882515e-06, 4.416000000118103e-06, 4.402000000069961e-06, 4.431000000026941e-06, 4.4030000001527014e-06, 4.430000000166245e-06, 4.445000000075083e-06, 4.443999999992343e-06, 4.402000000069961e-06, 4.429999999722156e-06, 4.45800000026253e-06, 4.416999999978799e-06, 4.402000000069961e-06, 4.430000000166245e-06, 4.430000000166245e-06, 4.402000000069961e-06, 4.443999999992343e-06, 4.443999999992343e-06, 4.4030000001527014e-06, 4.4030000001527014e-06, 4.416999999978799e-06, 4.415999999896059e-06, 4.443999999992343e-06, 4.402000000069961e-06, 4.416999999978799e-06, 4.471999999644538e-06, 4.443999999992343e-06, 4.402999999708612e-06, 4.4030000001527014e-06, 4.375000000056417e-06, 4.416999999978799e-06, 4.4579999998184405e-06, 4.4030000001527014e-06, 4.4030000001527014e-06, 4.416999999978799e-06, 4.443999999992343e-06, 4.415999999896059e-06, 4.389000000326604e-06, 4.416999999978799e-06, 4.402999999708612e-06, 4.4309999998048966e-06, 4.416999999978799e-06, 4.429999999722156e-06, 4.416999999978799e-06, 4.375000000056417e-06, 4.402999999708612e-06, 4.445000000075083e-06, 4.389000000326604e-06, 4.4030000001527014e-06, 4.430000000166245e-06, 4.402000000069961e-06, 4.431000000248986e-06, 4.402999999708612e-06, 4.4030000001527014e-06]</msg>
<status status="PASS" starttime="20201030 11:50:16.434" endtime="20201030 11:50:16.436"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.429" endtime="20201030 11:50:16.436"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.059" endtime="20201030 11:50:16.437"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.058" endtime="20201030 11:50:16.437"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:16.445" endtime="20201030 11:50:16.461"></status>
</kw>
<msg timestamp="20201030 11:50:16.461" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:16.443" endtime="20201030 11:50:16.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:16.464" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:16.462" endtime="20201030 11:50:16.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:16.465" endtime="20201030 11:50:16.466"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.440" endtime="20201030 11:50:16.467"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.439" endtime="20201030 11:50:16.467"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:16.474" endtime="20201030 11:50:16.782"></status>
</kw>
<msg timestamp="20201030 11:50:16.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.284082569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.284087, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:50:16.472" endtime="20201030 11:50:16.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:16.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.284082569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.284087, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:50:16.787" endtime="20201030 11:50:16.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:16.797" endtime="20201030 11:50:16.798"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.470" endtime="20201030 11:50:16.799"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.468" endtime="20201030 11:50:16.799"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:16.803" level="INFO">${RESULT} = [{'diff': 4.4309999998048966e-06}, {'diff': 4.416999999978799e-06}, {'diff': 4.429999999722156e-06}, {'diff': 4.416999999978799e-06}, {'diff': 4.375000000056417e-06}, {'diff': 4.402999999708612e-06}, ...</msg>
<status status="PASS" starttime="20201030 11:50:16.800" endtime="20201030 11:50:16.804"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:16.809" level="INFO">${OVERHEAD} = {'diff': [4.4309999998048966e-06, 4.416999999978799e-06, 4.429999999722156e-06, 4.416999999978799e-06, 4.375000000056417e-06, 4.402999999708612e-06, 4.445000000075083e-06, 4.389000000326604e-06, 4.403...</msg>
<status status="PASS" starttime="20201030 11:50:16.804" endtime="20201030 11:50:16.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:16.813" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:16.812" endtime="20201030 11:50:16.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:16.816" level="INFO">VALUE: [4.4309999998048966e-06, 4.416999999978799e-06, 4.429999999722156e-06, 4.416999999978799e-06, 4.375000000056417e-06, 4.402999999708612e-06, 4.445000000075083e-06, 4.389000000326604e-06, 4.4030000001527014e-06, 4.430000000166245e-06, 4.402000000069961e-06, 4.431000000248986e-06, 4.402999999708612e-06, 4.4030000001527014e-06, 4.4030000001527014e-06, 4.389000000326604e-06, 4.415999999896059e-06, 4.4030000001527014e-06, 4.415999999896059e-06, 4.389000000326604e-06, 4.388999999882515e-06, 4.445000000075083e-06, 4.4030000001527014e-06, 4.417000000422888e-06, 4.416999999978799e-06, 4.416999999978799e-06, 4.389000000326604e-06, 4.472000000088627e-06, 4.402000000069961e-06, 4.4309999998048966e-06, 4.415999999896059e-06, 4.346999999960133e-06, 4.388999999882515e-06, 4.444000000436432e-06, 4.4030000001527014e-06, 4.415999999896059e-06, 4.415999999896059e-06, 4.431000000248986e-06, 4.430000000166245e-06, 4.416999999978799e-06, 4.416999999978799e-06, 4.431000000248986e-06, 4.416999999978799e-06, 4.388999999882515e-06, 4.430000000166245e-06, 4.319000000307938e-06, 4.402999999708612e-06, 4.416000000340148e-06, 4.416999999978799e-06, 4.387999999799774e-06, 4.416999999978799e-06, 4.402000000069961e-06, 4.416999999978799e-06, 4.473000000171368e-06, 4.402000000069961e-06, 4.416999999978799e-06, 4.429999999722156e-06, 4.443999999992343e-06, 4.431000000248986e-06, 4.402999999708612e-06, 4.4309999998048966e-06, 4.416999999978799e-06, 4.4579999998184405e-06, 4.388999999882515e-06]</msg>
<status status="PASS" starttime="20201030 11:50:16.814" endtime="20201030 11:50:16.816"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.810" endtime="20201030 11:50:16.817"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.438" endtime="20201030 11:50:16.817"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.437" endtime="20201030 11:50:16.817"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:16.825" endtime="20201030 11:50:16.842"></status>
</kw>
<msg timestamp="20201030 11:50:16.843" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:16.824" endtime="20201030 11:50:16.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:16.845" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:16.844" endtime="20201030 11:50:16.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:16.846" endtime="20201030 11:50:16.848"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.821" endtime="20201030 11:50:16.848"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.819" endtime="20201030 11:50:16.849"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:16.857" endtime="20201030 11:50:17.176"></status>
</kw>
<msg timestamp="20201030 11:50:17.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.650914069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.650918486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:16.854" endtime="20201030 11:50:17.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:17.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.650914069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.650918486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:17.181" endtime="20201030 11:50:17.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:17.191" endtime="20201030 11:50:17.193"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.851" endtime="20201030 11:50:17.193"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.849" endtime="20201030 11:50:17.194"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:17.198" level="INFO">${RESULT} = [{'diff': 4.416999999978799e-06}, {'diff': 4.402000000069961e-06}, {'diff': 4.416999999978799e-06}, {'diff': 4.473000000171368e-06}, {'diff': 4.402000000069961e-06}, {'diff': 4.416999999978799e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:50:17.195" endtime="20201030 11:50:17.198"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:17.203" level="INFO">${OVERHEAD} = {'diff': [4.416999999978799e-06, 4.402000000069961e-06, 4.416999999978799e-06, 4.473000000171368e-06, 4.402000000069961e-06, 4.416999999978799e-06, 4.429999999722156e-06, 4.443999999992343e-06, 4.4310...</msg>
<status status="PASS" starttime="20201030 11:50:17.199" endtime="20201030 11:50:17.203"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:17.207" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:17.206" endtime="20201030 11:50:17.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:17.209" level="INFO">VALUE: [4.416999999978799e-06, 4.402000000069961e-06, 4.416999999978799e-06, 4.473000000171368e-06, 4.402000000069961e-06, 4.416999999978799e-06, 4.429999999722156e-06, 4.443999999992343e-06, 4.431000000248986e-06, 4.402999999708612e-06, 4.4309999998048966e-06, 4.416999999978799e-06, 4.4579999998184405e-06, 4.388999999882515e-06, 4.388999999882515e-06, 4.445000000075083e-06, 4.416999999978799e-06, 4.416999999978799e-06, 4.416000000340148e-06, 4.4030000001527014e-06, 4.416999999978799e-06, 4.4030000001527014e-06, 4.416999999978799e-06, 4.388999999882515e-06, 4.4030000001527014e-06, 4.4030000001527014e-06, 4.36099999978623e-06, 4.402999999708612e-06, 4.416999999978799e-06, 4.4030000001527014e-06, 4.402999999708612e-06, 4.402999999708612e-06, 4.388999999882515e-06, 4.416999999978799e-06, 4.4030000001527014e-06, 4.389000000326604e-06, 4.443999999992343e-06, 4.416999999978799e-06, 4.415999999896059e-06, 4.430000000166245e-06, 4.402999999708612e-06, 4.416999999978799e-06, 4.402999999708612e-06, 4.402999999708612e-06, 4.431000000248986e-06, 4.375000000056417e-06, 4.415999999896059e-06, 4.401999999625872e-06, 4.416999999978799e-06, 4.431000000248986e-06, 4.415999999896059e-06, 4.402000000069961e-06, 4.4030000001527014e-06, 4.4309999998048966e-06, 4.445000000075083e-06, 4.429999999722156e-06, 4.473000000171368e-06, 4.416999999978799e-06, 4.444999999630994e-06, 4.4579999998184405e-06, 4.4579999998184405e-06, 4.417000000422888e-06, 4.416999999978799e-06, 4.402000000069961e-06]</msg>
<status status="PASS" starttime="20201030 11:50:17.208" endtime="20201030 11:50:17.210"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.204" endtime="20201030 11:50:17.210"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.818" endtime="20201030 11:50:17.211"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.818" endtime="20201030 11:50:17.211"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:17.220" endtime="20201030 11:50:17.235"></status>
</kw>
<msg timestamp="20201030 11:50:17.236" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:17.218" endtime="20201030 11:50:17.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:17.238" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:17.237" endtime="20201030 11:50:17.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:17.239" endtime="20201030 11:50:17.241"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.215" endtime="20201030 11:50:17.241"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.213" endtime="20201030 11:50:17.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:17.249" endtime="20201030 11:50:17.565"></status>
</kw>
<msg timestamp="20201030 11:50:17.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.022768417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.022772833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:17.247" endtime="20201030 11:50:17.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:17.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.022768417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.022772833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:17.570" endtime="20201030 11:50:17.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:17.580" endtime="20201030 11:50:17.582"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.245" endtime="20201030 11:50:17.583"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.242" endtime="20201030 11:50:17.583"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:17.587" level="INFO">${RESULT} = [{'diff': 4.415999999896059e-06}, {'diff': 4.402000000069961e-06}, {'diff': 4.4030000001527014e-06}, {'diff': 4.4309999998048966e-06}, {'diff': 4.445000000075083e-06}, {'diff': 4.429999999722156e-06},...</msg>
<status status="PASS" starttime="20201030 11:50:17.584" endtime="20201030 11:50:17.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:17.593" level="INFO">${OVERHEAD} = {'diff': [4.415999999896059e-06, 4.402000000069961e-06, 4.4030000001527014e-06, 4.4309999998048966e-06, 4.445000000075083e-06, 4.429999999722156e-06, 4.473000000171368e-06, 4.416999999978799e-06, 4.44...</msg>
<status status="PASS" starttime="20201030 11:50:17.588" endtime="20201030 11:50:17.593"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:17.597" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:17.596" endtime="20201030 11:50:17.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:17.599" level="INFO">VALUE: [4.415999999896059e-06, 4.402000000069961e-06, 4.4030000001527014e-06, 4.4309999998048966e-06, 4.445000000075083e-06, 4.429999999722156e-06, 4.473000000171368e-06, 4.416999999978799e-06, 4.444999999630994e-06, 4.4579999998184405e-06, 4.4579999998184405e-06, 4.417000000422888e-06, 4.416999999978799e-06, 4.402000000069961e-06, 4.388999999882515e-06, 4.387999999799774e-06, 4.387999999799774e-06, 4.346999999960133e-06, 4.430000000166245e-06, 4.402999999708612e-06, 4.348000000042873e-06, 4.416999999978799e-06, 4.401999999625872e-06, 4.4309999998048966e-06, 4.430000000166245e-06, 4.4030000001527014e-06, 4.416999999978799e-06, 4.429999999722156e-06, 4.416999999978799e-06, 4.4030000001527014e-06, 4.416999999978799e-06, 4.388999999882515e-06, 4.415999999896059e-06, 4.430000000166245e-06, 4.415999999896059e-06, 4.402999999708612e-06, 4.402999999708612e-06, 4.389000000326604e-06, 4.402999999708612e-06, 4.4030000001527014e-06, 4.402999999708612e-06, 4.388999999882515e-06, 4.416999999978799e-06, 4.402999999708612e-06, 4.415999999896059e-06, 4.416999999978799e-06, 4.431000000248986e-06, 4.402000000069961e-06, 4.4030000001527014e-06, 4.431000000248986e-06, 4.443999999992343e-06, 4.416999999978799e-06, 4.416999999978799e-06, 4.36099999978623e-06, 4.4030000001527014e-06, 4.430000000166245e-06, 4.416999999978799e-06, 4.416000000340148e-06, 4.4309999998048966e-06, 4.4030000001527014e-06, 4.416999999978799e-06, 4.375000000056417e-06, 4.431000000248986e-06, 4.445000000075083e-06]</msg>
<status status="PASS" starttime="20201030 11:50:17.598" endtime="20201030 11:50:17.600"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.594" endtime="20201030 11:50:17.600"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.212" endtime="20201030 11:50:17.601"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.211" endtime="20201030 11:50:17.601"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:17.609" endtime="20201030 11:50:17.626"></status>
</kw>
<msg timestamp="20201030 11:50:17.627" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:17.607" endtime="20201030 11:50:17.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:17.629" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:17.628" endtime="20201030 11:50:17.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:17.630" endtime="20201030 11:50:17.632"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.605" endtime="20201030 11:50:17.632"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.603" endtime="20201030 11:50:17.633"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:17.640" endtime="20201030 11:50:17.950"></status>
</kw>
<msg timestamp="20201030 11:50:17.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.40466875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.404673194, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:17.638" endtime="20201030 11:50:17.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:17.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.40466875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.404673194, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:17.955" endtime="20201030 11:50:17.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:17.965" endtime="20201030 11:50:17.966"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.636" endtime="20201030 11:50:17.967"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.634" endtime="20201030 11:50:17.967"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:17.972" level="INFO">${RESULT} = [{'diff': 4.443999999992343e-06}, {'diff': 4.416999999978799e-06}, {'diff': 4.416999999978799e-06}, {'diff': 4.36099999978623e-06}, {'diff': 4.4030000001527014e-06}, {'diff': 4.430000000166245e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:50:17.968" endtime="20201030 11:50:17.973"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:17.977" level="INFO">${OVERHEAD} = {'diff': [4.443999999992343e-06, 4.416999999978799e-06, 4.416999999978799e-06, 4.36099999978623e-06, 4.4030000001527014e-06, 4.430000000166245e-06, 4.416999999978799e-06, 4.416000000340148e-06, 4.4309...</msg>
<status status="PASS" starttime="20201030 11:50:17.973" endtime="20201030 11:50:17.977"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:17.981" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:17.980" endtime="20201030 11:50:17.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:17.984" level="INFO">VALUE: [4.443999999992343e-06, 4.416999999978799e-06, 4.416999999978799e-06, 4.36099999978623e-06, 4.4030000001527014e-06, 4.430000000166245e-06, 4.416999999978799e-06, 4.416000000340148e-06, 4.4309999998048966e-06, 4.4030000001527014e-06, 4.416999999978799e-06, 4.375000000056417e-06, 4.431000000248986e-06, 4.445000000075083e-06, 4.402000000069961e-06, 4.375000000056417e-06, 4.4030000001527014e-06, 4.416000000340148e-06, 4.429999999722156e-06, 4.416999999978799e-06, 4.443999999992343e-06, 4.45800000026253e-06, 4.4030000001527014e-06, 4.443999999992343e-06, 4.429999999722156e-06, 4.375000000056417e-06, 4.402999999708612e-06, 4.416999999978799e-06, 4.3880000002438635e-06, 4.389000000326604e-06, 4.416999999978799e-06, 4.416999999978799e-06, 4.402000000069961e-06, 4.416999999978799e-06, 4.4030000001527014e-06, 4.402999999708612e-06, 4.388999999882515e-06, 4.416999999978799e-06, 4.443999999992343e-06, 4.402999999708612e-06, 4.416000000340148e-06, 4.430000000166245e-06, 4.346999999960133e-06, 4.415999999896059e-06, 4.416999999978799e-06, 4.389000000326604e-06, 4.415999999896059e-06, 4.416999999978799e-06, 4.402000000069961e-06, 4.429999999722156e-06, 4.375000000056417e-06, 4.389000000326604e-06, 4.388999999882515e-06, 4.416999999978799e-06, 4.388999999882515e-06, 4.4309999998048966e-06, 4.402000000069961e-06, 4.416999999978799e-06, 4.388999999882515e-06, 4.375000000056417e-06, 4.3610000002303195e-06, 4.4030000001527014e-06, 4.416000000340148e-06, 4.430000000166245e-06]</msg>
<status status="PASS" starttime="20201030 11:50:17.983" endtime="20201030 11:50:17.985"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.978" endtime="20201030 11:50:17.985"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.602" endtime="20201030 11:50:17.986"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.601" endtime="20201030 11:50:17.986"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:17.994" endtime="20201030 11:50:18.008"></status>
</kw>
<msg timestamp="20201030 11:50:18.009" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:17.992" endtime="20201030 11:50:18.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:18.011" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:18.010" endtime="20201030 11:50:18.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:18.012" endtime="20201030 11:50:18.014"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.990" endtime="20201030 11:50:18.015"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.988" endtime="20201030 11:50:18.015"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:18.024" endtime="20201030 11:50:18.339"></status>
</kw>
<msg timestamp="20201030 11:50:18.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.787477472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.787481847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:18.023" endtime="20201030 11:50:18.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:18.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.787477472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.787481847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:18.344" endtime="20201030 11:50:18.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:18.354" endtime="20201030 11:50:18.356"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.017" endtime="20201030 11:50:18.356"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.016" endtime="20201030 11:50:18.357"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:18.361" level="INFO">${RESULT} = [{'diff': 4.375000000056417e-06}, {'diff': 4.389000000326604e-06}, {'diff': 4.388999999882515e-06}, {'diff': 4.416999999978799e-06}, {'diff': 4.388999999882515e-06}, {'diff': 4.4309999998048966e-06}, ...</msg>
<status status="PASS" starttime="20201030 11:50:18.357" endtime="20201030 11:50:18.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:18.366" level="INFO">${OVERHEAD} = {'diff': [4.375000000056417e-06, 4.389000000326604e-06, 4.388999999882515e-06, 4.416999999978799e-06, 4.388999999882515e-06, 4.4309999998048966e-06, 4.402000000069961e-06, 4.416999999978799e-06, 4.388...</msg>
<status status="PASS" starttime="20201030 11:50:18.362" endtime="20201030 11:50:18.366"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:18.370" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:18.369" endtime="20201030 11:50:18.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:18.373" level="INFO">VALUE: [4.375000000056417e-06, 4.389000000326604e-06, 4.388999999882515e-06, 4.416999999978799e-06, 4.388999999882515e-06, 4.4309999998048966e-06, 4.402000000069961e-06, 4.416999999978799e-06, 4.388999999882515e-06, 4.375000000056417e-06, 4.3610000002303195e-06, 4.4030000001527014e-06, 4.416000000340148e-06, 4.430000000166245e-06, 4.4030000001527014e-06, 4.41699999953471e-06, 4.416000000340148e-06, 4.4030000001527014e-06, 4.4030000001527014e-06, 4.417000000422888e-06, 4.374999999612328e-06, 4.388999999882515e-06, 4.429999999722156e-06, 4.4030000001527014e-06, 4.4030000001527014e-06, 4.417000000422888e-06, 4.4030000001527014e-06, 4.415999999451969e-06, 4.4030000001527014e-06, 4.415999999451969e-06, 4.4030000001527014e-06, 4.416000000340148e-06, 4.4030000001527014e-06, 4.401999999181783e-06, 4.415999999451969e-06, 4.3610000002303195e-06, 4.4030000001527014e-06, 4.389000000770693e-06, 4.41699999953471e-06, 4.4030000001527014e-06, 4.374999999612328e-06, 4.388999999882515e-06, 4.443999999992343e-06, 4.417000000422888e-06, 4.402999999264523e-06, 4.4309999998048966e-06, 4.4720000005327165e-06, 4.4309999998048966e-06, 4.416000000340148e-06, 4.429999999722156e-06, 4.41699999953471e-06, 4.415999999451969e-06, 4.4030000001527014e-06, 4.415999999451969e-06, 4.417000000422888e-06, 4.402000000069961e-06, 4.4030000001527014e-06, 4.41699999953471e-06, 4.402000000069961e-06, 4.41699999953471e-06, 4.417000000422888e-06, 4.416000000340148e-06, 4.41699999953471e-06, 4.431000000693075e-06]</msg>
<status status="PASS" starttime="20201030 11:50:18.372" endtime="20201030 11:50:18.374"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.366" endtime="20201030 11:50:18.374"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.987" endtime="20201030 11:50:18.374"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.986" endtime="20201030 11:50:18.375"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:18.382" endtime="20201030 11:50:18.401"></status>
</kw>
<msg timestamp="20201030 11:50:18.401" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:18.381" endtime="20201030 11:50:18.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:18.404" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:18.402" endtime="20201030 11:50:18.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:18.405" endtime="20201030 11:50:18.407"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.378" endtime="20201030 11:50:18.407"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.377" endtime="20201030 11:50:18.408"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:18.414" endtime="20201030 11:50:18.733"></status>
</kw>
<msg timestamp="20201030 11:50:18.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.160249986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.160254403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:18.413" endtime="20201030 11:50:18.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:18.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.160249986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.160254403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:18.738" endtime="20201030 11:50:18.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:18.748" endtime="20201030 11:50:18.749"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.410" endtime="20201030 11:50:18.750"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.408" endtime="20201030 11:50:18.750"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:18.754" level="INFO">${RESULT} = [{'diff': 4.41699999953471e-06}, {'diff': 4.415999999451969e-06}, {'diff': 4.4030000001527014e-06}, {'diff': 4.415999999451969e-06}, {'diff': 4.417000000422888e-06}, {'diff': 4.402000000069961e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:50:18.751" endtime="20201030 11:50:18.755"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:18.760" level="INFO">${OVERHEAD} = {'diff': [4.41699999953471e-06, 4.415999999451969e-06, 4.4030000001527014e-06, 4.415999999451969e-06, 4.417000000422888e-06, 4.402000000069961e-06, 4.4030000001527014e-06, 4.41699999953471e-06, 4.4020...</msg>
<status status="PASS" starttime="20201030 11:50:18.755" endtime="20201030 11:50:18.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:18.764" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:18.763" endtime="20201030 11:50:18.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:18.766" level="INFO">VALUE: [4.41699999953471e-06, 4.415999999451969e-06, 4.4030000001527014e-06, 4.415999999451969e-06, 4.417000000422888e-06, 4.402000000069961e-06, 4.4030000001527014e-06, 4.41699999953471e-06, 4.402000000069961e-06, 4.41699999953471e-06, 4.417000000422888e-06, 4.416000000340148e-06, 4.41699999953471e-06, 4.431000000693075e-06, 4.417000000422888e-06, 4.416000000340148e-06, 4.445000000075083e-06, 4.417000000422888e-06, 4.4309999998048966e-06, 4.4030000001527014e-06, 4.3610000002303195e-06, 4.417000000422888e-06, 4.4030000001527014e-06, 4.415999999451969e-06, 4.388999999882515e-06, 4.389000000770693e-06, 4.4309999998048966e-06, 4.500000000184912e-06, 4.415999999451969e-06, 4.417000000422888e-06, 4.415999999451969e-06, 4.430000000610335e-06, 4.402999999264523e-06, 4.388999999882515e-06, 4.4309999998048966e-06, 4.430000000610335e-06, 4.402000000069961e-06, 4.417000000422888e-06, 4.431000000693075e-06, 4.4030000001527014e-06, 4.416000000340148e-06, 4.417000000422888e-06, 4.417000000422888e-06, 4.4030000001527014e-06, 4.417000000422888e-06, 4.388999999882515e-06, 4.4309999998048966e-06, 4.4030000001527014e-06, 4.415999999451969e-06, 4.41699999953471e-06, 4.417000000422888e-06, 4.445000000075083e-06, 4.41699999953471e-06, 4.41699999953471e-06, 4.388999999882515e-06, 4.4030000001527014e-06, 4.4030000001527014e-06, 4.41699999953471e-06, 4.45800000026253e-06, 4.41699999953471e-06, 4.388999999882515e-06, 4.416000000340148e-06, 4.402999999264523e-06, 4.416000000340148e-06]</msg>
<status status="PASS" starttime="20201030 11:50:18.765" endtime="20201030 11:50:18.767"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.761" endtime="20201030 11:50:18.767"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.375" endtime="20201030 11:50:18.768"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.375" endtime="20201030 11:50:18.768"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:18.776" endtime="20201030 11:50:18.794"></status>
</kw>
<msg timestamp="20201030 11:50:18.794" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:18.774" endtime="20201030 11:50:18.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:18.797" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:18.795" endtime="20201030 11:50:18.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:18.798" endtime="20201030 11:50:18.800"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.772" endtime="20201030 11:50:18.800"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.770" endtime="20201030 11:50:18.801"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:18.807" endtime="20201030 11:50:19.120"></status>
</kw>
<msg timestamp="20201030 11:50:19.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.541205347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.541209764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:18.806" endtime="20201030 11:50:19.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:19.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.541205347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.541209764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:19.125" endtime="20201030 11:50:19.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:19.135" endtime="20201030 11:50:19.136"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.803" endtime="20201030 11:50:19.137"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.801" endtime="20201030 11:50:19.137"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:19.142" level="INFO">${RESULT} = [{'diff': 4.417000000422888e-06}, {'diff': 4.445000000075083e-06}, {'diff': 4.41699999953471e-06}, {'diff': 4.41699999953471e-06}, {'diff': 4.388999999882515e-06}, {'diff': 4.4030000001527014e-06}, {'...</msg>
<status status="PASS" starttime="20201030 11:50:19.138" endtime="20201030 11:50:19.142"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:19.146" level="INFO">${OVERHEAD} = {'diff': [4.417000000422888e-06, 4.445000000075083e-06, 4.41699999953471e-06, 4.41699999953471e-06, 4.388999999882515e-06, 4.4030000001527014e-06, 4.4030000001527014e-06, 4.41699999953471e-06, 4.45800...</msg>
<status status="PASS" starttime="20201030 11:50:19.143" endtime="20201030 11:50:19.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:19.150" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:19.149" endtime="20201030 11:50:19.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:19.153" level="INFO">VALUE: [4.417000000422888e-06, 4.445000000075083e-06, 4.41699999953471e-06, 4.41699999953471e-06, 4.388999999882515e-06, 4.4030000001527014e-06, 4.4030000001527014e-06, 4.41699999953471e-06, 4.45800000026253e-06, 4.41699999953471e-06, 4.388999999882515e-06, 4.416000000340148e-06, 4.402999999264523e-06, 4.416000000340148e-06, 4.402000000069961e-06, 4.4030000001527014e-06, 4.4030000001527014e-06, 4.4309999998048966e-06, 4.4030000001527014e-06, 4.388999999882515e-06, 4.388999999882515e-06, 4.402999999264523e-06, 4.431000000693075e-06, 4.41699999953471e-06, 4.388999999882515e-06, 4.430000000610335e-06, 4.417000000422888e-06, 4.417000000422888e-06, 4.485999999914725e-06, 4.4030000001527014e-06, 4.415999999451969e-06, 4.388999999882515e-06, 4.415999999451969e-06, 4.4030000001527014e-06, 4.41699999953471e-06, 4.402000000069961e-06, 4.471999999644538e-06, 4.4030000001527014e-06, 4.388999999882515e-06, 4.416000000340148e-06, 4.402000000069961e-06, 4.41699999953471e-06, 4.4030000001527014e-06, 4.4309999998048966e-06, 4.430000000610335e-06, 4.402000000069961e-06, 4.429999999722156e-06, 4.416000000340148e-06, 4.306000000120491e-06, 4.417000000422888e-06, 4.416000000340148e-06, 4.388999999882515e-06, 4.402000000069961e-06, 4.402999999264523e-06, 4.41699999953471e-06, 4.388999999882515e-06, 4.3610000002303195e-06, 4.430000000610335e-06, 4.4030000001527014e-06, 4.445000000075083e-06, 4.45800000026253e-06, 4.4030000001527014e-06, 4.416000000340148e-06, 4.41699999953471e-06]</msg>
<status status="PASS" starttime="20201030 11:50:19.151" endtime="20201030 11:50:19.153"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.147" endtime="20201030 11:50:19.154"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.769" endtime="20201030 11:50:19.154"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.768" endtime="20201030 11:50:19.154"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:19.163" endtime="20201030 11:50:19.179"></status>
</kw>
<msg timestamp="20201030 11:50:19.179" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:19.161" endtime="20201030 11:50:19.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:19.182" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:19.180" endtime="20201030 11:50:19.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:19.183" endtime="20201030 11:50:19.185"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.158" endtime="20201030 11:50:19.185"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.156" endtime="20201030 11:50:19.186"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:19.192" endtime="20201030 11:50:19.512"></status>
</kw>
<msg timestamp="20201030 11:50:19.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.921319056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.921323472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:19.191" endtime="20201030 11:50:19.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:19.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.921319056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.921323472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:19.517" endtime="20201030 11:50:19.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:19.527" endtime="20201030 11:50:19.529"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.188" endtime="20201030 11:50:19.529"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.186" endtime="20201030 11:50:19.530"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:19.535" level="INFO">${RESULT} = [{'diff': 4.416000000340148e-06}, {'diff': 4.388999999882515e-06}, {'diff': 4.402000000069961e-06}, {'diff': 4.402999999264523e-06}, {'diff': 4.41699999953471e-06}, {'diff': 4.388999999882515e-06}, {'...</msg>
<status status="PASS" starttime="20201030 11:50:19.531" endtime="20201030 11:50:19.535"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:19.540" level="INFO">${OVERHEAD} = {'diff': [4.416000000340148e-06, 4.388999999882515e-06, 4.402000000069961e-06, 4.402999999264523e-06, 4.41699999953471e-06, 4.388999999882515e-06, 4.3610000002303195e-06, 4.430000000610335e-06, 4.4030...</msg>
<status status="PASS" starttime="20201030 11:50:19.536" endtime="20201030 11:50:19.541"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:19.545" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:19.544" endtime="20201030 11:50:19.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:19.547" level="INFO">VALUE: [4.416000000340148e-06, 4.388999999882515e-06, 4.402000000069961e-06, 4.402999999264523e-06, 4.41699999953471e-06, 4.388999999882515e-06, 4.3610000002303195e-06, 4.430000000610335e-06, 4.4030000001527014e-06, 4.445000000075083e-06, 4.45800000026253e-06, 4.4030000001527014e-06, 4.416000000340148e-06, 4.41699999953471e-06, 4.388999999882515e-06, 4.4030000001527014e-06, 4.417000000422888e-06, 4.4030000001527014e-06, 4.388999999882515e-06, 4.4729999997272785e-06, 4.429999999722156e-06, 4.375000000500506e-06, 4.417000000422888e-06, 4.388999999882515e-06, 4.4309999998048966e-06, 4.41699999953471e-06, 4.4309999998048966e-06, 4.416000000340148e-06, 4.445000000075083e-06, 4.388999999882515e-06, 4.389000000770693e-06, 4.430000000610335e-06, 4.41699999953471e-06, 4.4030000001527014e-06, 4.41699999953471e-06, 4.416000000340148e-06, 4.4030000001527014e-06, 4.41699999953471e-06, 4.402000000069961e-06, 4.4309999998048966e-06, 4.417000000422888e-06, 4.431000000693075e-06, 4.4030000001527014e-06, 4.41699999953471e-06, 4.443999999992343e-06, 4.4309999998048966e-06, 4.4030000001527014e-06, 4.388999999882515e-06, 4.4030000001527014e-06, 4.374999999612328e-06, 4.429999999722156e-06, 4.389000000770693e-06, 4.388999999882515e-06, 4.3610000002303195e-06, 4.375000000500506e-06, 4.416000000340148e-06, 4.416000000340148e-06, 4.4030000001527014e-06, 4.41699999953471e-06, 4.374999999612328e-06, 4.388999999882515e-06, 4.402999999264523e-06, 4.429999999722156e-06, 4.4030000001527014e-06]</msg>
<status status="PASS" starttime="20201030 11:50:19.546" endtime="20201030 11:50:19.548"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.541" endtime="20201030 11:50:19.548"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.155" endtime="20201030 11:50:19.549"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.155" endtime="20201030 11:50:19.549"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:19.556" endtime="20201030 11:50:19.570"></status>
</kw>
<msg timestamp="20201030 11:50:19.571" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:19.555" endtime="20201030 11:50:19.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:19.574" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:19.572" endtime="20201030 11:50:19.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:19.575" endtime="20201030 11:50:19.576"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.552" endtime="20201030 11:50:19.577"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.551" endtime="20201030 11:50:19.577"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:19.584" endtime="20201030 11:50:19.893"></status>
</kw>
<msg timestamp="20201030 11:50:19.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.297255542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.297259972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:19.582" endtime="20201030 11:50:19.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:19.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.297255542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.297259972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:19.898" endtime="20201030 11:50:19.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:19.908" endtime="20201030 11:50:19.909"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.579" endtime="20201030 11:50:19.910"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.578" endtime="20201030 11:50:19.910"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:19.915" level="INFO">${RESULT} = [{'diff': 4.429999999722156e-06}, {'diff': 4.389000000770693e-06}, {'diff': 4.388999999882515e-06}, {'diff': 4.3610000002303195e-06}, {'diff': 4.375000000500506e-06}, {'diff': 4.416000000340148e-06}, ...</msg>
<status status="PASS" starttime="20201030 11:50:19.911" endtime="20201030 11:50:19.915"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:19.920" level="INFO">${OVERHEAD} = {'diff': [4.429999999722156e-06, 4.389000000770693e-06, 4.388999999882515e-06, 4.3610000002303195e-06, 4.375000000500506e-06, 4.416000000340148e-06, 4.416000000340148e-06, 4.4030000001527014e-06, 4.41...</msg>
<status status="PASS" starttime="20201030 11:50:19.916" endtime="20201030 11:50:19.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:19.925" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:19.924" endtime="20201030 11:50:19.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:19.927" level="INFO">VALUE: [4.429999999722156e-06, 4.389000000770693e-06, 4.388999999882515e-06, 4.3610000002303195e-06, 4.375000000500506e-06, 4.416000000340148e-06, 4.416000000340148e-06, 4.4030000001527014e-06, 4.41699999953471e-06, 4.374999999612328e-06, 4.388999999882515e-06, 4.402999999264523e-06, 4.429999999722156e-06, 4.4030000001527014e-06, 4.4030000001527014e-06, 4.429999999722156e-06, 4.417000000422888e-06, 4.429999999722156e-06, 4.417000000422888e-06, 4.3610000002303195e-06, 4.4309999998048966e-06, 4.388999999882515e-06, 4.416000000340148e-06, 4.417000000422888e-06, 4.4309999998048966e-06, 4.388999999882515e-06, 4.416000000340148e-06, 4.417000000422888e-06, 4.389000000770693e-06, 4.4030000001527014e-06, 4.417000000422888e-06, 4.417000000422888e-06, 4.374999999612328e-06, 4.387999999799774e-06, 4.41699999953471e-06, 4.4030000001527014e-06, 4.332999999689946e-06, 4.4309999998048966e-06, 4.388999999882515e-06, 4.445000000075083e-06, 4.402000000069961e-06, 4.417000000422888e-06, 4.41699999953471e-06, 4.429999999722156e-06, 4.375000000500506e-06, 4.430000000610335e-06, 4.389000000770693e-06, 4.4030000001527014e-06, 4.4030000001527014e-06, 4.388999999882515e-06, 4.374999999612328e-06, 4.45800000026253e-06, 4.41699999953471e-06, 4.402000000069961e-06, 4.417000000422888e-06, 4.417000000422888e-06, 4.429999999722156e-06, 4.416000000340148e-06, 4.4030000001527014e-06, 4.4030000001527014e-06, 4.402000000069961e-06, 4.3610000002303195e-06, 4.457999999374351e-06, 4.429999999722156e-06]</msg>
<status status="PASS" starttime="20201030 11:50:19.926" endtime="20201030 11:50:19.928"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.921" endtime="20201030 11:50:19.928"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.549" endtime="20201030 11:50:19.928"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.549" endtime="20201030 11:50:19.929"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:19.936" endtime="20201030 11:50:19.962"></status>
</kw>
<msg timestamp="20201030 11:50:19.963" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:19.935" endtime="20201030 11:50:19.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:19.965" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:19.964" endtime="20201030 11:50:19.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:19.966" endtime="20201030 11:50:19.968"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.932" endtime="20201030 11:50:19.968"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.931" endtime="20201030 11:50:19.969"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:19.975" endtime="20201030 11:50:20.291"></status>
</kw>
<msg timestamp="20201030 11:50:20.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.676440139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.676444514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:19.974" endtime="20201030 11:50:20.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:20.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.676440139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.676444514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:20.296" endtime="20201030 11:50:20.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:20.306" endtime="20201030 11:50:20.308"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.971" endtime="20201030 11:50:20.308"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.969" endtime="20201030 11:50:20.309"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:20.313" level="INFO">${RESULT} = [{'diff': 4.374999999612328e-06}, {'diff': 4.45800000026253e-06}, {'diff': 4.41699999953471e-06}, {'diff': 4.402000000069961e-06}, {'diff': 4.417000000422888e-06}, {'diff': 4.417000000422888e-06}, {'d...</msg>
<status status="PASS" starttime="20201030 11:50:20.309" endtime="20201030 11:50:20.313"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:20.318" level="INFO">${OVERHEAD} = {'diff': [4.374999999612328e-06, 4.45800000026253e-06, 4.41699999953471e-06, 4.402000000069961e-06, 4.417000000422888e-06, 4.417000000422888e-06, 4.429999999722156e-06, 4.416000000340148e-06, 4.403000...</msg>
<status status="PASS" starttime="20201030 11:50:20.314" endtime="20201030 11:50:20.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:20.322" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:20.321" endtime="20201030 11:50:20.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:20.324" level="INFO">VALUE: [4.374999999612328e-06, 4.45800000026253e-06, 4.41699999953471e-06, 4.402000000069961e-06, 4.417000000422888e-06, 4.417000000422888e-06, 4.429999999722156e-06, 4.416000000340148e-06, 4.4030000001527014e-06, 4.4030000001527014e-06, 4.402000000069961e-06, 4.3610000002303195e-06, 4.457999999374351e-06, 4.429999999722156e-06, 4.4030000001527014e-06, 4.41699999953471e-06, 4.4720000005327165e-06, 4.4309999998048966e-06, 4.415999999451969e-06, 4.431000000693075e-06, 4.389000000770693e-06, 4.41699999953471e-06, 4.348000000042873e-06, 4.416000000340148e-06, 4.4030000001527014e-06, 4.415999999451969e-06, 4.374999999612328e-06, 4.402999999264523e-06, 4.4030000001527014e-06, 4.415999999451969e-06, 4.443999999992343e-06, 4.346999999960133e-06, 4.389000000770693e-06, 4.36200000031306e-06, 4.417000000422888e-06, 4.417000000422888e-06, 4.431000000693075e-06, 4.429999999722156e-06, 4.417000000422888e-06, 4.443999999992343e-06, 4.429999999722156e-06, 4.4030000001527014e-06, 4.4030000001527014e-06, 4.375000000500506e-06, 4.4030000001527014e-06, 4.41699999953471e-06, 4.4309999998048966e-06, 4.417000000422888e-06, 4.388999999882515e-06, 4.417000000422888e-06, 4.402999999264523e-06, 4.4309999998048966e-06, 4.402000000069961e-06, 4.4030000001527014e-06, 4.4030000001527014e-06, 4.416000000340148e-06, 4.4729999997272785e-06, 4.41699999953471e-06, 4.401999999181783e-06, 4.417000000422888e-06, 4.4030000001527014e-06, 4.4030000001527014e-06, 4.417000000422888e-06, 4.4309999998048966e-06]</msg>
<status status="PASS" starttime="20201030 11:50:20.323" endtime="20201030 11:50:20.325"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.318" endtime="20201030 11:50:20.325"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.929" endtime="20201030 11:50:20.326"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.929" endtime="20201030 11:50:20.326"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:20.335" endtime="20201030 11:50:20.349"></status>
</kw>
<msg timestamp="20201030 11:50:20.350" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:20.333" endtime="20201030 11:50:20.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:20.352" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:20.351" endtime="20201030 11:50:20.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:20.354" endtime="20201030 11:50:20.355"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.330" endtime="20201030 11:50:20.356"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.328" endtime="20201030 11:50:20.356"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:20.363" endtime="20201030 11:50:20.684"></status>
</kw>
<msg timestamp="20201030 11:50:20.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.05333825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.053342653, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:20.361" endtime="20201030 11:50:20.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:20.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.05333825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.053342653, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:20.689" endtime="20201030 11:50:20.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:20.699" endtime="20201030 11:50:20.701"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.358" endtime="20201030 11:50:20.701"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.357" endtime="20201030 11:50:20.702"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:20.706" level="INFO">${RESULT} = [{'diff': 4.402999999264523e-06}, {'diff': 4.4309999998048966e-06}, {'diff': 4.402000000069961e-06}, {'diff': 4.4030000001527014e-06}, {'diff': 4.4030000001527014e-06}, {'diff': 4.416000000340148e-06}...</msg>
<status status="PASS" starttime="20201030 11:50:20.703" endtime="20201030 11:50:20.706"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:20.711" level="INFO">${OVERHEAD} = {'diff': [4.402999999264523e-06, 4.4309999998048966e-06, 4.402000000069961e-06, 4.4030000001527014e-06, 4.4030000001527014e-06, 4.416000000340148e-06, 4.4729999997272785e-06, 4.41699999953471e-06, 4.4...</msg>
<status status="PASS" starttime="20201030 11:50:20.707" endtime="20201030 11:50:20.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:20.716" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:20.715" endtime="20201030 11:50:20.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:20.718" level="INFO">VALUE: [4.402999999264523e-06, 4.4309999998048966e-06, 4.402000000069961e-06, 4.4030000001527014e-06, 4.4030000001527014e-06, 4.416000000340148e-06, 4.4729999997272785e-06, 4.41699999953471e-06, 4.401999999181783e-06, 4.417000000422888e-06, 4.4030000001527014e-06, 4.4030000001527014e-06, 4.417000000422888e-06, 4.4309999998048966e-06, 4.429999999722156e-06, 4.416000000340148e-06, 4.375000000500506e-06, 4.4030000001527014e-06, 4.429999999722156e-06, 4.388999999882515e-06, 4.4030000001527014e-06, 4.375000000500506e-06, 4.375000000500506e-06, 4.417000000422888e-06, 4.387999999799774e-06, 4.388999999882515e-06, 4.429999999722156e-06, 4.45800000026253e-06, 4.388999999882515e-06, 4.4030000001527014e-06, 4.417000000422888e-06, 4.4030000001527014e-06, 4.4030000001527014e-06, 4.41699999953471e-06, 4.416000000340148e-06, 4.41699999953471e-06, 4.445000000075083e-06, 4.374999999612328e-06, 4.4729999997272785e-06, 4.41699999953471e-06, 4.430000000610335e-06, 4.415999999451969e-06, 4.41699999953471e-06, 4.388999999882515e-06, 4.416000000340148e-06, 4.3610000002303195e-06, 4.388999999882515e-06, 4.444999999186905e-06, 4.4030000001527014e-06, 4.417000000422888e-06, 4.416000000340148e-06, 4.388999999882515e-06, 4.4030000001527014e-06, 4.485999999914725e-06, 4.4309999998048966e-06, 4.4309999998048966e-06, 4.4030000001527014e-06, 4.388999999882515e-06, 4.443999999992343e-06, 4.417000000422888e-06, 4.4030000001527014e-06, 4.429999999722156e-06, 4.4030000001527014e-06, 4.417000000422888e-06]</msg>
<status status="PASS" starttime="20201030 11:50:20.717" endtime="20201030 11:50:20.719"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.712" endtime="20201030 11:50:20.719"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.327" endtime="20201030 11:50:20.719"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.326" endtime="20201030 11:50:20.720"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:20.728" endtime="20201030 11:50:20.746"></status>
</kw>
<msg timestamp="20201030 11:50:20.746" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:20.726" endtime="20201030 11:50:20.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:20.749" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:20.748" endtime="20201030 11:50:20.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:20.750" endtime="20201030 11:50:20.752"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.723" endtime="20201030 11:50:20.752"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.722" endtime="20201030 11:50:20.753"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:20.759" endtime="20201030 11:50:21.068"></status>
</kw>
<msg timestamp="20201030 11:50:21.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.435210681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.435215097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:20.757" endtime="20201030 11:50:21.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:21.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.435210681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.435215097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:21.073" endtime="20201030 11:50:21.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:21.083" endtime="20201030 11:50:21.085"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.755" endtime="20201030 11:50:21.085"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.753" endtime="20201030 11:50:21.085"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:21.090" level="INFO">${RESULT} = [{'diff': 4.416000000340148e-06}, {'diff': 4.388999999882515e-06}, {'diff': 4.4030000001527014e-06}, {'diff': 4.485999999914725e-06}, {'diff': 4.4309999998048966e-06}, {'diff': 4.4309999998048966e-06}...</msg>
<status status="PASS" starttime="20201030 11:50:21.086" endtime="20201030 11:50:21.090"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:21.095" level="INFO">${OVERHEAD} = {'diff': [4.416000000340148e-06, 4.388999999882515e-06, 4.4030000001527014e-06, 4.485999999914725e-06, 4.4309999998048966e-06, 4.4309999998048966e-06, 4.4030000001527014e-06, 4.388999999882515e-06, 4....</msg>
<status status="PASS" starttime="20201030 11:50:21.091" endtime="20201030 11:50:21.096"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:21.100" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:21.099" endtime="20201030 11:50:21.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:21.102" level="INFO">VALUE: [4.416000000340148e-06, 4.388999999882515e-06, 4.4030000001527014e-06, 4.485999999914725e-06, 4.4309999998048966e-06, 4.4309999998048966e-06, 4.4030000001527014e-06, 4.388999999882515e-06, 4.443999999992343e-06, 4.417000000422888e-06, 4.4030000001527014e-06, 4.429999999722156e-06, 4.4030000001527014e-06, 4.417000000422888e-06, 4.388999999882515e-06, 4.388999999882515e-06, 4.417000000422888e-06, 4.41699999953471e-06, 4.416000000340148e-06, 4.4309999998048966e-06, 4.389000000770693e-06, 4.4309999998048966e-06, 4.41699999953471e-06, 4.429999999722156e-06, 4.429999999722156e-06, 4.417000000422888e-06, 4.443999999992343e-06, 4.402000000069961e-06, 4.429999999722156e-06, 4.416000000340148e-06, 4.41699999953471e-06, 4.4030000001527014e-06, 4.4030000001527014e-06, 4.388999999882515e-06, 4.429999999722156e-06, 4.4030000001527014e-06, 4.430000000610335e-06, 4.360999999342141e-06, 4.415999999451969e-06, 4.417000000422888e-06, 4.415999999451969e-06, 4.388999999882515e-06, 4.4309999998048966e-06, 4.445000000075083e-06, 4.41699999953471e-06, 4.485999999914725e-06, 4.417000000422888e-06, 4.417000000422888e-06, 4.429999999722156e-06, 4.388999999882515e-06, 4.45800000026253e-06, 4.4030000001527014e-06, 4.429999999722156e-06, 4.402000000069961e-06, 4.45800000026253e-06, 4.416000000340148e-06, 4.415999999451969e-06, 4.445000000075083e-06, 4.387999999799774e-06, 4.417000000422888e-06, 4.4030000001527014e-06, 4.402000000069961e-06, 4.415999999451969e-06, 4.417000000422888e-06]</msg>
<status status="PASS" starttime="20201030 11:50:21.101" endtime="20201030 11:50:21.103"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.096" endtime="20201030 11:50:21.103"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.720" endtime="20201030 11:50:21.104"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.720" endtime="20201030 11:50:21.104"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:21.112" endtime="20201030 11:50:21.128"></status>
</kw>
<msg timestamp="20201030 11:50:21.128" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:21.110" endtime="20201030 11:50:21.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:21.130" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:21.129" endtime="20201030 11:50:21.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:21.132" endtime="20201030 11:50:21.133"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.108" endtime="20201030 11:50:21.134"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.106" endtime="20201030 11:50:21.134"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:21.142" endtime="20201030 11:50:21.456"></status>
</kw>
<msg timestamp="20201030 11:50:21.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.821228486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.821232944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:21.140" endtime="20201030 11:50:21.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:21.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.821228486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.821232944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:21.461" endtime="20201030 11:50:21.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:21.471" endtime="20201030 11:50:21.473"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.136" endtime="20201030 11:50:21.473"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.135" endtime="20201030 11:50:21.474"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:21.478" level="INFO">${RESULT} = [{'diff': 4.45800000026253e-06}, {'diff': 4.4030000001527014e-06}, {'diff': 4.429999999722156e-06}, {'diff': 4.402000000069961e-06}, {'diff': 4.45800000026253e-06}, {'diff': 4.416000000340148e-06}, {'...</msg>
<status status="PASS" starttime="20201030 11:50:21.475" endtime="20201030 11:50:21.478"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:21.483" level="INFO">${OVERHEAD} = {'diff': [4.45800000026253e-06, 4.4030000001527014e-06, 4.429999999722156e-06, 4.402000000069961e-06, 4.45800000026253e-06, 4.416000000340148e-06, 4.415999999451969e-06, 4.445000000075083e-06, 4.38799...</msg>
<status status="PASS" starttime="20201030 11:50:21.479" endtime="20201030 11:50:21.483"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:21.487" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:21.486" endtime="20201030 11:50:21.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:21.492" level="INFO">VALUE: [4.45800000026253e-06, 4.4030000001527014e-06, 4.429999999722156e-06, 4.402000000069961e-06, 4.45800000026253e-06, 4.416000000340148e-06, 4.415999999451969e-06, 4.445000000075083e-06, 4.387999999799774e-06, 4.417000000422888e-06, 4.4030000001527014e-06, 4.402000000069961e-06, 4.415999999451969e-06, 4.417000000422888e-06, 4.4030000001527014e-06, 4.4030000001527014e-06, 4.4030000001527014e-06, 4.4030000001527014e-06, 4.4030000001527014e-06, 4.402000000069961e-06, 4.417000000422888e-06, 4.402000000069961e-06, 4.4309999998048966e-06, 4.429999999722156e-06, 4.4030000001527014e-06, 4.36200000031306e-06, 4.4309999998048966e-06, 4.388999999882515e-06, 4.4030000001527014e-06, 4.4030000001527014e-06, 4.417000000422888e-06, 4.417000000422888e-06, 4.4030000001527014e-06, 4.402999999264523e-06, 4.443999999992343e-06, 4.402000000069961e-06, 4.431000000693075e-06, 4.374999999612328e-06, 4.429999999722156e-06, 4.4309999998048966e-06, 4.375000000500506e-06, 4.41699999953471e-06, 4.4309999998048966e-06, 4.41699999953471e-06, 4.417000000422888e-06, 4.4309999998048966e-06, 4.402000000069961e-06, 4.443999999992343e-06, 4.388999999882515e-06, 4.402000000069961e-06, 4.429999999722156e-06, 4.388999999882515e-06, 4.4030000001527014e-06, 4.4030000001527014e-06, 4.415999999451969e-06, 4.417000000422888e-06, 4.445000000075083e-06, 4.430000000610335e-06, 4.402999999264523e-06, 4.374999999612328e-06, 4.402999999264523e-06, 4.445000000075083e-06, 4.4030000001527014e-06, 4.402000000069961e-06]</msg>
<status status="PASS" starttime="20201030 11:50:21.488" endtime="20201030 11:50:21.493"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.484" endtime="20201030 11:50:21.493"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.104" endtime="20201030 11:50:21.493"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.104" endtime="20201030 11:50:21.494"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.794" endtime="20201030 11:50:21.494"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:50:13.709" endtime="20201030 11:50:21.495" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:21.502" endtime="20201030 11:50:21.522"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.501" endtime="20201030 11:50:21.522"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:21.535" endtime="20201030 11:50:21.557"></status>
</kw>
<msg timestamp="20201030 11:50:21.557" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:21.534" endtime="20201030 11:50:21.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:21.560" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:21.558" endtime="20201030 11:50:21.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:21.563" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:50:21.561" endtime="20201030 11:50:21.564"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:21.531" endtime="20201030 11:50:21.564"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:21.529" endtime="20201030 11:50:21.565"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.527" endtime="20201030 11:50:21.565"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:50:21.569" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:50:21.569" endtime="20201030 11:50:21.570"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.566" endtime="20201030 11:50:21.570"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.527" endtime="20201030 11:50:21.570"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.526" endtime="20201030 11:50:21.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:21.571" endtime="20201030 11:50:21.573"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.525" endtime="20201030 11:50:21.574"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.523" endtime="20201030 11:50:21.574"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.499" endtime="20201030 11:50:21.574"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:21.584" endtime="20201030 11:50:21.607"></status>
</kw>
<msg timestamp="20201030 11:50:21.607" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:21.583" endtime="20201030 11:50:21.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:21.610" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:21.608" endtime="20201030 11:50:21.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:21.611" endtime="20201030 11:50:21.613"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.579" endtime="20201030 11:50:21.613"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.577" endtime="20201030 11:50:21.614"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:21.616" endtime="20201030 11:50:21.618"></status>
</kw>
<msg timestamp="20201030 11:50:21.618" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 11:50:21.615" endtime="20201030 11:50:21.618"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:21.622" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 11:50:21.621" endtime="20201030 11:50:21.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:21.624" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 11:50:21.623" endtime="20201030 11:50:21.625"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.619" endtime="20201030 11:50:21.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:21.629" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 11:50:21.628" endtime="20201030 11:50:21.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:21.631" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 11:50:21.630" endtime="20201030 11:50:21.632"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.626" endtime="20201030 11:50:21.632"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:21.638" endtime="20201030 11:50:21.925"></status>
</kw>
<msg timestamp="20201030 11:50:21.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075091958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075099639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:21.637" endtime="20201030 11:50:21.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:21.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075091958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075099639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:21.929" endtime="20201030 11:50:21.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:21.937" endtime="20201030 11:50:21.939"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.634" endtime="20201030 11:50:21.939"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.633" endtime="20201030 11:50:21.940"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:21.944" level="INFO">${RESULT} = [{'diff': 7.680999999995497e-06}, {'diff': 7.902000000004072e-06}, {'diff': 7.875000000004406e-06}, {'diff': 7.902999999989668e-06}, {'diff': 7.903000000003546e-06}, {'diff': 7.944999999995317e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:50:21.940" endtime="20201030 11:50:21.944"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:21.949" level="INFO">${OVERHEAD} = {'diff': [7.680999999995497e-06, 7.902000000004072e-06, 7.875000000004406e-06, 7.902999999989668e-06, 7.903000000003546e-06, 7.944999999995317e-06, 7.930000000003212e-06, 7.944999999995317e-06, 7.9309...</msg>
<status status="PASS" starttime="20201030 11:50:21.945" endtime="20201030 11:50:21.949"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:21.953" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201030 11:50:21.952" endtime="20201030 11:50:21.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:21.956" level="INFO">VALUE: [7.680999999995497e-06, 7.902000000004072e-06, 7.875000000004406e-06, 7.902999999989668e-06, 7.903000000003546e-06, 7.944999999995317e-06, 7.930000000003212e-06, 7.944999999995317e-06, 7.930999999988808e-06, 7.916999999996177e-06, 7.888999999997037e-06, 7.916999999996177e-06, 7.915999999996703e-06, 7.833999999998231e-06, 7.930000000003212e-06, 7.916999999996177e-06, 7.902000000004072e-06, 7.819999999991722e-06, 7.888999999997037e-06, 7.888999999997037e-06, 7.888999999997037e-06, 7.901999999990195e-06, 7.888999999997037e-06, 7.971999999994983e-06, 7.972000000008861e-06, 7.973000000008335e-06, 7.971999999994983e-06, 7.888999999997037e-06, 7.874999999990528e-06, 7.888999999997037e-06, 7.888999999997037e-06, 7.917000000010055e-06, 7.860999999997897e-06, 7.916000000010581e-06, 7.888999999997037e-06, 7.888999999997037e-06, 7.903000000003546e-06, 7.903000000003546e-06, 7.917000000010055e-06, 7.944000000009721e-06, 7.931000000002686e-06, 7.860999999997897e-06, 7.915999999996703e-06, 7.874999999990528e-06, 7.860999999997897e-06, 7.889000000010915e-06, 7.916999999996177e-06, 7.833999999998231e-06, 7.888999999997037e-06, 7.902999999989668e-06]</msg>
<status status="PASS" starttime="20201030 11:50:21.954" endtime="20201030 11:50:21.956"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.950" endtime="20201030 11:50:21.957"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.575" endtime="20201030 11:50:21.957"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:50:21.497" endtime="20201030 11:50:21.958" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:21.966" endtime="20201030 11:50:21.985"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.964" endtime="20201030 11:50:21.986"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:21.998" endtime="20201030 11:50:22.024"></status>
</kw>
<msg timestamp="20201030 11:50:22.024" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:21.997" endtime="20201030 11:50:22.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:22.027" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:22.025" endtime="20201030 11:50:22.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:22.030" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:50:22.028" endtime="20201030 11:50:22.030"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:21.994" endtime="20201030 11:50:22.031"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:21.992" endtime="20201030 11:50:22.031"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.991" endtime="20201030 11:50:22.032"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:50:22.036" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:50:22.035" endtime="20201030 11:50:22.037"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.032" endtime="20201030 11:50:22.037"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.990" endtime="20201030 11:50:22.037"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.989" endtime="20201030 11:50:22.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:22.038" endtime="20201030 11:50:22.039"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.988" endtime="20201030 11:50:22.040"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.986" endtime="20201030 11:50:22.040"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.963" endtime="20201030 11:50:22.041"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:22.049" endtime="20201030 11:50:22.139"></status>
</kw>
<msg timestamp="20201030 11:50:22.140" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:22.048" endtime="20201030 11:50:22.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:22.142" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:22.141" endtime="20201030 11:50:22.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:22.143" endtime="20201030 11:50:22.145"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.045" endtime="20201030 11:50:22.145"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.043" endtime="20201030 11:50:22.146"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:22.148" endtime="20201030 11:50:22.150"></status>
</kw>
<msg timestamp="20201030 11:50:22.150" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 11:50:22.146" endtime="20201030 11:50:22.150"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:22.154" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 11:50:22.153" endtime="20201030 11:50:22.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:22.156" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 11:50:22.155" endtime="20201030 11:50:22.157"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.151" endtime="20201030 11:50:22.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:22.161" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 11:50:22.160" endtime="20201030 11:50:22.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:22.163" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 11:50:22.162" endtime="20201030 11:50:22.164"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.158" endtime="20201030 11:50:22.164"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:22.170" endtime="20201030 11:50:22.476"></status>
</kw>
<msg timestamp="20201030 11:50:22.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.080263569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.080304889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:22.169" endtime="20201030 11:50:22.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:22.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.080263569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.080304889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:22.485" endtime="20201030 11:50:22.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:22.504" endtime="20201030 11:50:22.507"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.166" endtime="20201030 11:50:22.507"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.165" endtime="20201030 11:50:22.508"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:22.513" level="INFO">${RESULT} = [{'diff': 4.131999999999747e-05}, {'diff': 4.129199999999833e-05}, {'diff': 4.122200000000742e-05}, {'diff': 4.1361000000003645e-05}, {'diff': 4.129199999999833e-05}, {'diff': 4.130600000000484e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:50:22.508" endtime="20201030 11:50:22.513"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:22.517" level="INFO">${OVERHEAD} = {'diff': [4.131999999999747e-05, 4.129199999999833e-05, 4.122200000000742e-05, 4.1361000000003645e-05, 4.129199999999833e-05, 4.130600000000484e-05, 4.131999999999747e-05, 4.129199999999833e-05, 4.133...</msg>
<status status="PASS" starttime="20201030 11:50:22.514" endtime="20201030 11:50:22.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:22.521" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201030 11:50:22.520" endtime="20201030 11:50:22.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:22.524" level="INFO">VALUE: [4.131999999999747e-05, 4.129199999999833e-05, 4.122200000000742e-05, 4.1361000000003645e-05, 4.129199999999833e-05, 4.130600000000484e-05, 4.131999999999747e-05, 4.129199999999833e-05, 4.1333000000004505e-05, 4.125000000000656e-05, 4.126399999999919e-05, 4.129199999999833e-05, 4.130600000000484e-05, 4.1375000000010154e-05, 4.130499999999149e-05, 4.129199999999833e-05, 4.129199999999833e-05, 4.129199999999833e-05, 4.12780000000057e-05, 4.1305000000005365e-05, 4.125000000000656e-05, 4.130600000000484e-05, 4.1277000000006225e-05, 4.130499999999149e-05, 4.129199999999833e-05, 4.130499999999149e-05, 4.129199999999833e-05, 4.1347000000011014e-05, 4.130499999999149e-05, 4.1374999999996276e-05, 4.13339999999901e-05, 4.129199999999833e-05, 4.129200000001221e-05, 4.12780000000057e-05, 4.12780000000057e-05, 4.1333000000004505e-05, 4.1305000000005365e-05, 4.136099999998977e-05, 4.1277999999977943e-05, 4.130599999999096e-05, 4.129199999999833e-05, 4.129199999999833e-05, 4.132000000001135e-05, 4.1292000000026086e-05, 4.1375000000010154e-05, 4.12780000000057e-05, 4.126400000001307e-05, 4.130499999999149e-05, 4.130499999999149e-05, 4.1290999999998856e-05]</msg>
<status status="PASS" starttime="20201030 11:50:22.522" endtime="20201030 11:50:22.524"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.518" endtime="20201030 11:50:22.525"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.041" endtime="20201030 11:50:22.525"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:50:21.960" endtime="20201030 11:50:22.526" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:22.534" endtime="20201030 11:50:22.553"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.532" endtime="20201030 11:50:22.554"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:22.567" endtime="20201030 11:50:22.591"></status>
</kw>
<msg timestamp="20201030 11:50:22.592" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:22.566" endtime="20201030 11:50:22.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:22.594" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:22.593" endtime="20201030 11:50:22.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:22.597" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:50:22.595" endtime="20201030 11:50:22.597"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:22.562" endtime="20201030 11:50:22.598"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:22.560" endtime="20201030 11:50:22.598"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.559" endtime="20201030 11:50:22.599"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:50:22.603" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:50:22.602" endtime="20201030 11:50:22.603"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.600" endtime="20201030 11:50:22.603"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.558" endtime="20201030 11:50:22.603"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.557" endtime="20201030 11:50:22.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:22.604" endtime="20201030 11:50:22.606"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.556" endtime="20201030 11:50:22.606"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.554" endtime="20201030 11:50:22.607"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.531" endtime="20201030 11:50:22.607"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:22.616" endtime="20201030 11:50:22.854"></status>
</kw>
<msg timestamp="20201030 11:50:22.855" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:22.614" endtime="20201030 11:50:22.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:22.857" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:22.856" endtime="20201030 11:50:22.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:22.858" endtime="20201030 11:50:22.860"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.612" endtime="20201030 11:50:22.860"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.609" endtime="20201030 11:50:22.861"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:22.863" endtime="20201030 11:50:22.865"></status>
</kw>
<msg timestamp="20201030 11:50:22.866" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 11:50:22.862" endtime="20201030 11:50:22.866"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:22.870" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 11:50:22.869" endtime="20201030 11:50:22.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:22.872" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 11:50:22.871" endtime="20201030 11:50:22.872"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.866" endtime="20201030 11:50:22.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:22.877" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 11:50:22.875" endtime="20201030 11:50:22.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:22.879" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 11:50:22.878" endtime="20201030 11:50:22.879"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.873" endtime="20201030 11:50:22.879"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:22.887" endtime="20201030 11:50:23.179"></status>
</kw>
<msg timestamp="20201030 11:50:23.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.077595097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.077671833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:22.885" endtime="20201030 11:50:23.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:23.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.077595097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.077671833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:23.183" endtime="20201030 11:50:23.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:23.191" endtime="20201030 11:50:23.193"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.882" endtime="20201030 11:50:23.193"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.880" endtime="20201030 11:50:23.194"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:23.197" level="INFO">${RESULT} = [{'diff': 7.673599999999392e-05}, {'diff': 7.613799999998949e-05}, {'diff': 7.612499999999633e-05}, {'diff': 7.612500000001021e-05}, {'diff': 7.612499999999633e-05}, {'diff': 7.615299999999547e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:50:23.194" endtime="20201030 11:50:23.198"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:23.202" level="INFO">${OVERHEAD} = {'diff': [7.673599999999392e-05, 7.613799999998949e-05, 7.612499999999633e-05, 7.612500000001021e-05, 7.612499999999633e-05, 7.615299999999547e-05, 7.62769999999996e-05, 7.62360000000073e-05, 7.593000...</msg>
<status status="PASS" starttime="20201030 11:50:23.198" endtime="20201030 11:50:23.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:23.206" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201030 11:50:23.205" endtime="20201030 11:50:23.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:23.209" level="INFO">VALUE: [7.673599999999392e-05, 7.613799999998949e-05, 7.612499999999633e-05, 7.612500000001021e-05, 7.612499999999633e-05, 7.615299999999547e-05, 7.62769999999996e-05, 7.62360000000073e-05, 7.593000000000183e-05, 7.590300000000216e-05, 7.611099999998983e-05, 7.60969999999972e-05, 7.615299999999547e-05, 7.612500000001021e-05, 7.612499999998246e-05, 7.612499999998246e-05, 7.613899999997509e-05, 7.584700000001776e-05, 7.595900000001432e-05, 7.612499999998246e-05, 7.612499999998246e-05, 7.620799999999428e-05, 7.615299999999547e-05, 7.611099999998983e-05, 7.608299999997681e-05, 7.615299999999547e-05, 7.593000000000183e-05, 7.60000000000205e-05, 7.612500000001021e-05, 7.613900000000284e-05, 7.612500000001021e-05, 7.624999999999993e-05, 7.595899999998657e-05, 7.59310000000013e-05, 7.622300000001414e-05, 7.6151999999996e-05, 7.613900000000284e-05, 7.604099999999892e-05, 7.593000000000183e-05, 7.618099999998074e-05, 7.613900000000284e-05, 7.608300000000456e-05, 7.612499999998246e-05, 7.616599999998863e-05, 7.609800000002442e-05, 7.618000000003677e-05, 7.602800000000576e-05, 7.60000000000205e-05, 7.618100000000849e-05, 7.626399999999256e-05]</msg>
<status status="PASS" starttime="20201030 11:50:23.207" endtime="20201030 11:50:23.209"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.202" endtime="20201030 11:50:23.209"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.608" endtime="20201030 11:50:23.210"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:50:22.528" endtime="20201030 11:50:23.211" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:23.226" endtime="20201030 11:50:23.248"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.223" endtime="20201030 11:50:23.249"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:23.278" endtime="20201030 11:50:23.309"></status>
</kw>
<msg timestamp="20201030 11:50:23.310" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:23.275" endtime="20201030 11:50:23.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:23.314" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:23.312" endtime="20201030 11:50:23.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:23.317" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:50:23.315" endtime="20201030 11:50:23.317"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:23.269" endtime="20201030 11:50:23.318"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:23.264" endtime="20201030 11:50:23.319"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.262" endtime="20201030 11:50:23.319"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:50:23.323" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:50:23.322" endtime="20201030 11:50:23.323"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.320" endtime="20201030 11:50:23.323"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.260" endtime="20201030 11:50:23.323"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.258" endtime="20201030 11:50:23.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:23.324" endtime="20201030 11:50:23.326"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.256" endtime="20201030 11:50:23.326"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.251" endtime="20201030 11:50:23.327"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.220" endtime="20201030 11:50:23.327"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:23.336" endtime="20201030 11:50:23.360"></status>
</kw>
<msg timestamp="20201030 11:50:23.361" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:23.334" endtime="20201030 11:50:23.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:23.363" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:23.362" endtime="20201030 11:50:23.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:23.364" endtime="20201030 11:50:23.366"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.332" endtime="20201030 11:50:23.366"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.330" endtime="20201030 11:50:23.367"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:23.369" endtime="20201030 11:50:23.372"></status>
</kw>
<msg timestamp="20201030 11:50:23.372" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 11:50:23.368" endtime="20201030 11:50:23.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:23.377" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 11:50:23.376" endtime="20201030 11:50:23.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:23.379" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 11:50:23.378" endtime="20201030 11:50:23.379"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.373" endtime="20201030 11:50:23.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:23.383" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 11:50:23.382" endtime="20201030 11:50:23.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:23.385" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 11:50:23.384" endtime="20201030 11:50:23.386"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.380" endtime="20201030 11:50:23.386"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:23.393" endtime="20201030 11:50:23.688"></status>
</kw>
<msg timestamp="20201030 11:50:23.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.104004236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.104005653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:23.391" endtime="20201030 11:50:23.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:23.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.104004236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.104005653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:23.693" endtime="20201030 11:50:23.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:23.701" endtime="20201030 11:50:23.703"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.388" endtime="20201030 11:50:23.703"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.387" endtime="20201030 11:50:23.704"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:23.707" level="INFO">${RESULT} = [{'diff': 1.4170000000035543e-06}, {'diff': 1.4299999999967117e-06}, {'diff': 1.473000000001834e-06}, {'diff': 1.4440000000032205e-06}, {'diff': 1.4310000000100631e-06}, {'diff': 1.4309999999961853e-0...</msg>
<status status="PASS" starttime="20201030 11:50:23.704" endtime="20201030 11:50:23.708"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:23.712" level="INFO">${OVERHEAD} = {'diff': [1.4170000000035543e-06, 1.4299999999967117e-06, 1.473000000001834e-06, 1.4440000000032205e-06, 1.4310000000100631e-06, 1.4309999999961853e-06, 1.4440000000032205e-06, 1.4160000000040807e-06,...</msg>
<status status="PASS" starttime="20201030 11:50:23.708" endtime="20201030 11:50:23.713"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:23.717" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201030 11:50:23.716" endtime="20201030 11:50:23.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:23.719" level="INFO">VALUE: [1.4170000000035543e-06, 1.4299999999967117e-06, 1.473000000001834e-06, 1.4440000000032205e-06, 1.4310000000100631e-06, 1.4309999999961853e-06, 1.4440000000032205e-06, 1.4160000000040807e-06, 1.4169999999896765e-06, 1.4859999999949913e-06, 1.4449999999888163e-06, 1.4309999999961853e-06, 1.4170000000035543e-06, 1.4019999999975719e-06, 1.3890000000044145e-06, 1.4450000000026941e-06, 1.4309999999961853e-06, 1.4169999999896765e-06, 1.4310000000100631e-06, 1.4440000000032205e-06, 1.4440000000032205e-06, 1.4439999999893427e-06, 1.4160000000040807e-06, 1.4159999999902029e-06, 1.4300000000105895e-06, 1.4450000000026941e-06, 1.4579999999958515e-06, 1.4029999999970455e-06, 1.4440000000032205e-06, 1.4029999999970455e-06, 1.4309999999961853e-06, 1.3889999999905367e-06, 1.4440000000032205e-06, 1.4170000000035543e-06, 1.5000000000015001e-06, 1.4170000000035543e-06, 1.4300000000105895e-06, 1.3880000000049408e-06, 1.4449999999888163e-06, 1.4310000000100631e-06, 1.4860000000088691e-06, 1.4030000000109233e-06, 1.4299999999967117e-06, 1.4450000000026941e-06, 1.3609999999913969e-06, 1.4170000000035543e-06, 1.4449999999888163e-06, 1.4580000000097293e-06, 1.4170000000035543e-06, 1.4310000000100631e-06]</msg>
<status status="PASS" starttime="20201030 11:50:23.718" endtime="20201030 11:50:23.720"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.713" endtime="20201030 11:50:23.720"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.328" endtime="20201030 11:50:23.721"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:50:23.215" endtime="20201030 11:50:23.722" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:23.729" endtime="20201030 11:50:23.749"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.728" endtime="20201030 11:50:23.749"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:23.762" endtime="20201030 11:50:23.791"></status>
</kw>
<msg timestamp="20201030 11:50:23.791" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:23.761" endtime="20201030 11:50:23.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:23.794" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:23.792" endtime="20201030 11:50:23.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:23.797" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:50:23.795" endtime="20201030 11:50:23.797"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:23.758" endtime="20201030 11:50:23.798"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:23.756" endtime="20201030 11:50:23.798"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.755" endtime="20201030 11:50:23.798"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:50:23.802" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:50:23.801" endtime="20201030 11:50:23.803"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.799" endtime="20201030 11:50:23.803"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.754" endtime="20201030 11:50:23.803"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.753" endtime="20201030 11:50:23.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:23.804" endtime="20201030 11:50:23.805"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.752" endtime="20201030 11:50:23.806"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.750" endtime="20201030 11:50:23.806"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.726" endtime="20201030 11:50:23.806"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:23.817" endtime="20201030 11:50:23.901"></status>
</kw>
<msg timestamp="20201030 11:50:23.901" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:23.815" endtime="20201030 11:50:23.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:23.904" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:23.902" endtime="20201030 11:50:23.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:23.905" endtime="20201030 11:50:23.906"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.812" endtime="20201030 11:50:23.907"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.809" endtime="20201030 11:50:23.907"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:23.910" endtime="20201030 11:50:23.912"></status>
</kw>
<msg timestamp="20201030 11:50:23.912" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 11:50:23.908" endtime="20201030 11:50:23.912"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:23.916" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 11:50:23.915" endtime="20201030 11:50:23.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:23.918" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 11:50:23.917" endtime="20201030 11:50:23.918"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.913" endtime="20201030 11:50:23.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:23.923" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 11:50:23.922" endtime="20201030 11:50:23.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:23.925" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 11:50:23.924" endtime="20201030 11:50:23.925"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.920" endtime="20201030 11:50:23.926"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:23.932" endtime="20201030 11:50:24.224"></status>
</kw>
<msg timestamp="20201030 11:50:24.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.080365861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0803785, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:50:23.931" endtime="20201030 11:50:24.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:24.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.080365861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0803785, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:50:24.228" endtime="20201030 11:50:24.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:24.236" endtime="20201030 11:50:24.237"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.928" endtime="20201030 11:50:24.238"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.926" endtime="20201030 11:50:24.238"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:24.242" level="INFO">${RESULT} = [{'diff': 1.2639000000008727e-05}, {'diff': 1.2625000000002218e-05}, {'diff': 1.2611000000009587e-05}, {'diff': 1.262499999998834e-05}, {'diff': 1.2665999999994515e-05}, {'diff': 1.262499999998834e-05...</msg>
<status status="PASS" starttime="20201030 11:50:24.239" endtime="20201030 11:50:24.243"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:24.247" level="INFO">${OVERHEAD} = {'diff': [1.2639000000008727e-05, 1.2625000000002218e-05, 1.2611000000009587e-05, 1.262499999998834e-05, 1.2665999999994515e-05, 1.262499999998834e-05, 1.2667000000007866e-05, 1.2625000000002218e-05, ...</msg>
<status status="PASS" starttime="20201030 11:50:24.243" endtime="20201030 11:50:24.248"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:24.252" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201030 11:50:24.251" endtime="20201030 11:50:24.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:24.254" level="INFO">VALUE: [1.2639000000008727e-05, 1.2625000000002218e-05, 1.2611000000009587e-05, 1.262499999998834e-05, 1.2665999999994515e-05, 1.262499999998834e-05, 1.2667000000007866e-05, 1.2625000000002218e-05, 1.2597000000003078e-05, 1.2652000000001884e-05, 1.2665999999994515e-05, 1.2638999999994849e-05, 1.262499999998834e-05, 1.2638999999994849e-05, 1.2653000000001358e-05, 1.2681000000000497e-05, 1.2638999999994849e-05, 1.2625000000002218e-05, 1.2637999999995375e-05, 1.2638999999994849e-05, 1.2666999999993989e-05, 1.262499999998834e-05, 1.2666999999993989e-05, 1.2638999999994849e-05, 1.2653000000001358e-05, 1.25969999999892e-05, 1.2694000000007533e-05, 1.2582999999996569e-05, 1.2638999999994849e-05, 1.2610999999995709e-05, 1.2569000000003938e-05, 1.2651999999988006e-05, 1.2625000000002218e-05, 1.2611000000009587e-05, 1.2625000000002218e-05, 1.2610999999995709e-05, 1.262499999998834e-05, 1.2695000000007006e-05, 1.2666999999993989e-05, 1.2653000000001358e-05, 1.266600000002227e-05, 1.2610999999995709e-05, 1.2639000000008727e-05, 1.2639000000008727e-05, 1.2625000000016096e-05, 1.262499999998834e-05, 1.2625000000016096e-05, 1.2639000000008727e-05, 1.2625000000016096e-05, 1.2639000000008727e-05]</msg>
<status status="PASS" starttime="20201030 11:50:24.253" endtime="20201030 11:50:24.255"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.248" endtime="20201030 11:50:24.255"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.807" endtime="20201030 11:50:24.256"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:50:23.724" endtime="20201030 11:50:24.257" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:24.265" endtime="20201030 11:50:24.284"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.263" endtime="20201030 11:50:24.285"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:24.297" endtime="20201030 11:50:24.321"></status>
</kw>
<msg timestamp="20201030 11:50:24.322" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:24.296" endtime="20201030 11:50:24.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:24.324" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:24.323" endtime="20201030 11:50:24.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:24.330" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:50:24.325" endtime="20201030 11:50:24.331"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:24.293" endtime="20201030 11:50:24.331"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:24.291" endtime="20201030 11:50:24.332"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.290" endtime="20201030 11:50:24.332"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:50:24.336" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:50:24.335" endtime="20201030 11:50:24.336"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.333" endtime="20201030 11:50:24.336"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.289" endtime="20201030 11:50:24.337"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.288" endtime="20201030 11:50:24.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:24.338" endtime="20201030 11:50:24.339"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.287" endtime="20201030 11:50:24.340"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.285" endtime="20201030 11:50:24.340"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.261" endtime="20201030 11:50:24.340"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:24.349" endtime="20201030 11:50:24.586"></status>
</kw>
<msg timestamp="20201030 11:50:24.586" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:24.348" endtime="20201030 11:50:24.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:24.588" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:24.587" endtime="20201030 11:50:24.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:24.590" endtime="20201030 11:50:24.591"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.345" endtime="20201030 11:50:24.592"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.343" endtime="20201030 11:50:24.592"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:24.595" endtime="20201030 11:50:24.596"></status>
</kw>
<msg timestamp="20201030 11:50:24.597" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 11:50:24.593" endtime="20201030 11:50:24.597"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:24.601" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 11:50:24.600" endtime="20201030 11:50:24.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:24.603" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 11:50:24.602" endtime="20201030 11:50:24.603"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.598" endtime="20201030 11:50:24.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:24.608" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 11:50:24.607" endtime="20201030 11:50:24.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:24.611" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 11:50:24.609" endtime="20201030 11:50:24.611"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.605" endtime="20201030 11:50:24.612"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:24.619" endtime="20201030 11:50:24.921"></status>
</kw>
<msg timestamp="20201030 11:50:24.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.080374042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.080398056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:24.617" endtime="20201030 11:50:24.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:24.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.080374042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.080398056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:24.925" endtime="20201030 11:50:24.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:24.933" endtime="20201030 11:50:24.936"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.614" endtime="20201030 11:50:24.936"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.612" endtime="20201030 11:50:24.937"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:24.940" level="INFO">${RESULT} = [{'diff': 2.4013999999988878e-05}, {'diff': 2.4166999999991612e-05}, {'diff': 2.4056000000008404e-05}, {'diff': 2.4042000000001895e-05}, {'diff': 2.3999999999996247e-05}, {'diff': 2.4040999999988544e-...</msg>
<status status="PASS" starttime="20201030 11:50:24.937" endtime="20201030 11:50:24.941"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:24.945" level="INFO">${OVERHEAD} = {'diff': [2.4013999999988878e-05, 2.4166999999991612e-05, 2.4056000000008404e-05, 2.4042000000001895e-05, 2.3999999999996247e-05, 2.4040999999988544e-05, 2.412499999999984e-05, 2.4028000000009264e-05,...</msg>
<status status="PASS" starttime="20201030 11:50:24.942" endtime="20201030 11:50:24.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:24.949" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201030 11:50:24.948" endtime="20201030 11:50:24.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:24.952" level="INFO">VALUE: [2.4013999999988878e-05, 2.4166999999991612e-05, 2.4056000000008404e-05, 2.4042000000001895e-05, 2.3999999999996247e-05, 2.4040999999988544e-05, 2.412499999999984e-05, 2.4028000000009264e-05, 2.4054999999995053e-05, 2.4069999999987157e-05, 2.4082999999994192e-05, 2.4042000000001895e-05, 2.4042000000001895e-05, 2.4054999999995053e-05, 2.4042000000001895e-05, 2.4082999999980315e-05, 2.4054999999995053e-05, 2.4070000000014913e-05, 2.4042000000001895e-05, 2.4013999999988878e-05, 2.40970000000007e-05, 2.4068999999987684e-05, 2.4028000000009264e-05, 2.404100000000242e-05, 2.4042000000001895e-05, 2.4098000000000175e-05, 2.4028000000009264e-05, 2.4054999999995053e-05, 2.4042000000001895e-05, 2.4040999999974666e-05, 2.4055999999994526e-05, 2.4028000000009264e-05, 2.404100000000242e-05, 2.4082999999980315e-05, 2.3957999999990598e-05, 2.4028000000009264e-05, 2.4042000000001895e-05, 2.404199999997414e-05, 2.402799999998151e-05, 2.4055999999994526e-05, 2.4054999999967297e-05, 2.408300000000807e-05, 2.4055000000022808e-05, 2.40970000000007e-05, 2.4055999999994526e-05, 2.4055999999994526e-05, 2.4069999999987157e-05, 2.4042000000001895e-05, 2.4026999999982035e-05, 2.4042000000001895e-05]</msg>
<status status="PASS" starttime="20201030 11:50:24.950" endtime="20201030 11:50:24.952"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.946" endtime="20201030 11:50:24.953"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.341" endtime="20201030 11:50:24.953"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:50:24.259" endtime="20201030 11:50:24.954" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:24.968" endtime="20201030 11:50:24.987"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.966" endtime="20201030 11:50:24.988"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:25.002" endtime="20201030 11:50:25.023"></status>
</kw>
<msg timestamp="20201030 11:50:25.023" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:25.000" endtime="20201030 11:50:25.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:25.026" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:25.024" endtime="20201030 11:50:25.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:25.028" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:50:25.027" endtime="20201030 11:50:25.029"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:24.997" endtime="20201030 11:50:25.029"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:24.994" endtime="20201030 11:50:25.030"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.993" endtime="20201030 11:50:25.030"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:50:25.034" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:50:25.033" endtime="20201030 11:50:25.035"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.031" endtime="20201030 11:50:25.035"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.992" endtime="20201030 11:50:25.035"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.992" endtime="20201030 11:50:25.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:25.036" endtime="20201030 11:50:25.037"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.990" endtime="20201030 11:50:25.038"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.989" endtime="20201030 11:50:25.038"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.965" endtime="20201030 11:50:25.038"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 11:50:25.043" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 11:50:25.051" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 11:50:26.192" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 11:50:25.041" endtime="20201030 11:50:26.192"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 11:50:26.195" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 11:50:26.193" endtime="20201030 11:50:26.195"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.039" endtime="20201030 11:50:26.196"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:26.199" endtime="20201030 11:50:26.219"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.198" endtime="20201030 11:50:26.220"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:26.228" endtime="20201030 11:50:26.243"></status>
</kw>
<msg timestamp="20201030 11:50:26.243" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:26.226" endtime="20201030 11:50:26.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:26.246" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:26.245" endtime="20201030 11:50:26.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:26.247" endtime="20201030 11:50:26.249"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.224" endtime="20201030 11:50:26.250"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.222" endtime="20201030 11:50:26.250"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:26.258" endtime="20201030 11:50:26.554"></status>
</kw>
<msg timestamp="20201030 11:50:26.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018257792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018265819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:26.256" endtime="20201030 11:50:26.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:26.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018257792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018265819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:26.559" endtime="20201030 11:50:26.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:26.567" endtime="20201030 11:50:26.569"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.252" endtime="20201030 11:50:26.569"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.251" endtime="20201030 11:50:26.570"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:26.574" level="INFO">${PHILIP_RES} = [{'diff': 8.027000000000728e-06}, {'diff': 7.986000000001492e-06}, {'diff': 8.014000000000632e-06}, {'diff': 8.014000000000632e-06}, {'diff': 8.055999999999341e-06}, {'diff': 8.041999999999772e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:50:26.571" endtime="20201030 11:50:26.574"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:26.578" level="INFO">${RESULT} = {'diff': [8.027000000000728e-06, 7.986000000001492e-06, 8.014000000000632e-06, 8.014000000000632e-06, 8.055999999999341e-06, 8.041999999999772e-06, 8.068999999999438e-06, 8.041999999999772e-06, 8.0419...</msg>
<status status="PASS" starttime="20201030 11:50:26.575" endtime="20201030 11:50:26.578"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:26.582" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:26.581" endtime="20201030 11:50:26.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:26.585" level="INFO">VALUE: [8.027000000000728e-06, 7.986000000001492e-06, 8.014000000000632e-06, 8.014000000000632e-06, 8.055999999999341e-06, 8.041999999999772e-06, 8.068999999999438e-06, 8.041999999999772e-06, 8.041999999999772e-06, 8.014000000000632e-06, 8.014000000000632e-06, 8.014000000000632e-06, 7.999999999997592e-06, 8.014000000000632e-06, 8.028000000000202e-06, 8.000000000001062e-06, 8.014000000000632e-06, 8.014000000000632e-06, 7.986000000001492e-06, 8.014000000000632e-06, 7.999999999997592e-06, 8.013999999997162e-06, 8.014000000000632e-06, 8.041999999999772e-06, 8.028000000000202e-06, 8.055999999999341e-06, 8.028000000000202e-06, 8.041999999999772e-06, 8.027999999996732e-06, 8.041000000000298e-06, 8.028000000000202e-06, 8.000000000001062e-06, 8.068999999999438e-06, 8.013999999997162e-06, 8.013000000001158e-06, 8.028000000000202e-06, 8.041999999999772e-06, 8.013999999997162e-06, 8.014000000000632e-06, 8.028000000000202e-06, 8.014000000000632e-06, 8.013999999997162e-06, 7.986000000001492e-06, 8.028000000000202e-06, 7.958999999998356e-06, 7.987000000000966e-06, 8.000000000001062e-06, 8.027000000000728e-06, 7.999999999997592e-06, 7.999999999997592e-06]</msg>
<status status="PASS" starttime="20201030 11:50:26.584" endtime="20201030 11:50:26.585"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.579" endtime="20201030 11:50:26.586"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.220" endtime="20201030 11:50:26.586"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.197" endtime="20201030 11:50:26.586"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:26.589" endtime="20201030 11:50:26.608"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.587" endtime="20201030 11:50:26.609"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:26.618" endtime="20201030 11:50:26.630"></status>
</kw>
<msg timestamp="20201030 11:50:26.631" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:26.616" endtime="20201030 11:50:26.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:26.634" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:26.632" endtime="20201030 11:50:26.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:26.635" endtime="20201030 11:50:26.636"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.614" endtime="20201030 11:50:26.637"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.611" endtime="20201030 11:50:26.637"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:26.644" endtime="20201030 11:50:26.930"></status>
</kw>
<msg timestamp="20201030 11:50:26.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020931667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020947042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:26.642" endtime="20201030 11:50:26.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:26.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020931667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020947042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:26.934" endtime="20201030 11:50:26.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:26.942" endtime="20201030 11:50:26.944"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.639" endtime="20201030 11:50:26.945"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.638" endtime="20201030 11:50:26.945"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:26.949" level="INFO">${PHILIP_RES} = [{'diff': 1.537499999999803e-05}, {'diff': 1.529100000000061e-05}, {'diff': 1.5292000000000083e-05}, {'diff': 1.5278000000000513e-05}, {'diff': 1.5250000000001374e-05}, {'diff': 1.5264000000000943e-05...</msg>
<status status="PASS" starttime="20201030 11:50:26.946" endtime="20201030 11:50:26.949"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:26.954" level="INFO">${RESULT} = {'diff': [1.537499999999803e-05, 1.529100000000061e-05, 1.5292000000000083e-05, 1.5278000000000513e-05, 1.5250000000001374e-05, 1.5264000000000943e-05, 1.5262999999998e-05, 1.5278000000000513e-05, 1.5...</msg>
<status status="PASS" starttime="20201030 11:50:26.950" endtime="20201030 11:50:26.954"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:26.958" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:26.957" endtime="20201030 11:50:26.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:26.961" level="INFO">VALUE: [1.537499999999803e-05, 1.529100000000061e-05, 1.5292000000000083e-05, 1.5278000000000513e-05, 1.5250000000001374e-05, 1.5264000000000943e-05, 1.5262999999998e-05, 1.5278000000000513e-05, 1.526300000000147e-05, 1.5264000000000943e-05, 1.5263999999997474e-05, 1.5278000000000513e-05, 1.5235999999998334e-05, 1.5236000000001804e-05, 1.5278000000000513e-05, 1.5250000000001374e-05, 1.529100000000061e-05, 1.5278000000000513e-05, 1.526300000000147e-05, 1.5250000000001374e-05, 1.5262999999998e-05, 1.5264000000000943e-05, 1.5236000000001804e-05, 1.5278000000000513e-05, 1.5292000000000083e-05, 1.530500000000018e-05, 1.5278000000000513e-05, 1.5291999999996614e-05, 1.5222000000002234e-05, 1.5264000000000943e-05, 1.527699999999757e-05, 1.5292000000000083e-05, 1.5292000000000083e-05, 1.5319999999999223e-05, 1.5249999999997904e-05, 1.5264000000000943e-05, 1.5264000000000943e-05, 1.5180000000000055e-05, 1.527699999999757e-05, 1.5222000000002234e-05, 1.5250000000001374e-05, 1.5249999999997904e-05, 1.5250000000001374e-05, 1.5250000000001374e-05, 1.529099999999714e-05, 1.5236000000001804e-05, 1.5292000000000083e-05, 1.5236000000001804e-05, 1.5278000000000513e-05, 1.5263999999997474e-05]</msg>
<status status="PASS" starttime="20201030 11:50:26.959" endtime="20201030 11:50:26.961"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.955" endtime="20201030 11:50:26.962"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.609" endtime="20201030 11:50:26.962"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.587" endtime="20201030 11:50:26.962"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:26.965" endtime="20201030 11:50:26.984"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.963" endtime="20201030 11:50:26.985"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:26.993" endtime="20201030 11:50:27.007"></status>
</kw>
<msg timestamp="20201030 11:50:27.007" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:26.991" endtime="20201030 11:50:27.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:27.010" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:27.008" endtime="20201030 11:50:27.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:27.011" endtime="20201030 11:50:27.012"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.989" endtime="20201030 11:50:27.013"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.987" endtime="20201030 11:50:27.013"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:27.020" endtime="20201030 11:50:27.305"></status>
</kw>
<msg timestamp="20201030 11:50:27.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021884181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021907486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:27.018" endtime="20201030 11:50:27.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:27.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021884181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021907486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:27.309" endtime="20201030 11:50:27.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:27.318" endtime="20201030 11:50:27.319"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.016" endtime="20201030 11:50:27.320"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.014" endtime="20201030 11:50:27.320"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:27.324" level="INFO">${PHILIP_RES} = [{'diff': 2.330500000000124e-05}, {'diff': 2.326300000000253e-05}, {'diff': 2.3235999999999396e-05}, {'diff': 2.3263999999998536e-05}, {'diff': 2.3277999999998106e-05}, {'diff': 2.3263999999998536e-05...</msg>
<status status="PASS" starttime="20201030 11:50:27.321" endtime="20201030 11:50:27.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:27.330" level="INFO">${RESULT} = {'diff': [2.330500000000124e-05, 2.326300000000253e-05, 2.3235999999999396e-05, 2.3263999999998536e-05, 2.3277999999998106e-05, 2.3263999999998536e-05, 2.318100000000059e-05, 2.3221999999999826e-05, 2...</msg>
<status status="PASS" starttime="20201030 11:50:27.325" endtime="20201030 11:50:27.330"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:27.334" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:27.333" endtime="20201030 11:50:27.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:27.337" level="INFO">VALUE: [2.330500000000124e-05, 2.326300000000253e-05, 2.3235999999999396e-05, 2.3263999999998536e-05, 2.3277999999998106e-05, 2.3263999999998536e-05, 2.318100000000059e-05, 2.3221999999999826e-05, 2.3264000000002005e-05, 2.3249999999998966e-05, 2.3264000000002005e-05, 2.3250000000002435e-05, 2.3250000000002435e-05, 2.3262999999999062e-05, 2.3249999999998966e-05, 2.3290999999998202e-05, 2.331900000000081e-05, 2.3291999999997676e-05, 2.3249999999998966e-05, 2.3250000000002435e-05, 2.3194000000000686e-05, 2.3208000000000256e-05, 2.3320000000000285e-05, 2.3221999999999826e-05, 2.3194000000000686e-05, 2.3320000000000285e-05, 2.3306000000000715e-05, 2.3235999999999396e-05, 2.3249999999998966e-05, 2.3193999999997217e-05, 2.3208000000000256e-05, 2.3320000000000285e-05, 2.3277999999998106e-05, 2.32770000000021e-05, 2.3235999999999396e-05, 2.3250000000002435e-05, 2.3249999999998966e-05, 2.3263999999998536e-05, 2.3291999999997676e-05, 2.329100000000167e-05, 2.3221999999999826e-05, 2.3249999999998966e-05, 2.3277999999998106e-05, 2.3249999999998966e-05, 2.3249999999998966e-05, 2.329100000000167e-05, 2.3319999999996815e-05, 2.3292000000001145e-05, 2.3235999999999396e-05, 2.3250000000002435e-05]</msg>
<status status="PASS" starttime="20201030 11:50:27.335" endtime="20201030 11:50:27.337"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.331" endtime="20201030 11:50:27.338"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.985" endtime="20201030 11:50:27.338"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.963" endtime="20201030 11:50:27.338"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:27.340" endtime="20201030 11:50:27.360"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.339" endtime="20201030 11:50:27.360"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:27.369" endtime="20201030 11:50:27.379"></status>
</kw>
<msg timestamp="20201030 11:50:27.380" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:27.367" endtime="20201030 11:50:27.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:27.382" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:27.381" endtime="20201030 11:50:27.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:27.383" endtime="20201030 11:50:27.385"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.364" endtime="20201030 11:50:27.385"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.363" endtime="20201030 11:50:27.386"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:27.392" endtime="20201030 11:50:27.679"></status>
</kw>
<msg timestamp="20201030 11:50:27.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017804431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017836486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:27.391" endtime="20201030 11:50:27.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:27.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017804431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017836486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:27.683" endtime="20201030 11:50:27.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:27.692" endtime="20201030 11:50:27.693"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.388" endtime="20201030 11:50:27.694"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.387" endtime="20201030 11:50:27.694"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:27.698" level="INFO">${PHILIP_RES} = [{'diff': 3.2054999999999584e-05}, {'diff': 3.197200000000164e-05}, {'diff': 3.193099999999893e-05}, {'diff': 3.195800000000207e-05}, {'diff': 3.194399999999903e-05}, {'diff': 3.191699999999936e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:50:27.695" endtime="20201030 11:50:27.698"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:27.702" level="INFO">${RESULT} = {'diff': [3.2054999999999584e-05, 3.197200000000164e-05, 3.193099999999893e-05, 3.195800000000207e-05, 3.194399999999903e-05, 3.191699999999936e-05, 3.193099999999893e-05, 3.194399999999903e-05, 3.193...</msg>
<status status="PASS" starttime="20201030 11:50:27.699" endtime="20201030 11:50:27.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:27.707" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:27.706" endtime="20201030 11:50:27.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:27.709" level="INFO">VALUE: [3.2054999999999584e-05, 3.197200000000164e-05, 3.193099999999893e-05, 3.195800000000207e-05, 3.194399999999903e-05, 3.191699999999936e-05, 3.193099999999893e-05, 3.194399999999903e-05, 3.193099999999893e-05, 3.195800000000207e-05, 3.197199999999817e-05, 3.191700000000283e-05, 3.197199999999817e-05, 3.19579999999986e-05, 3.200000000000078e-05, 3.19579999999986e-05, 3.19579999999986e-05, 3.195800000000207e-05, 3.193099999999893e-05, 3.195800000000207e-05, 3.194399999999903e-05, 3.19579999999986e-05, 3.19440000000025e-05, 3.197199999999817e-05, 3.19579999999986e-05, 3.19440000000025e-05, 3.190299999999979e-05, 3.195800000000207e-05, 3.187500000000065e-05, 3.197199999999817e-05, 3.195800000000207e-05, 3.197200000000164e-05, 3.197199999999817e-05, 3.193000000000293e-05, 3.194399999999903e-05, 3.192999999999946e-05, 3.201400000000035e-05, 3.200000000000078e-05, 3.194399999999903e-05, 3.195800000000207e-05, 3.192999999999946e-05, 3.195800000000207e-05, 3.194399999999903e-05, 3.191699999999936e-05, 3.197200000000164e-05, 3.19579999999986e-05, 3.2082999999998724e-05, 3.198599999999774e-05, 3.195800000000207e-05, 3.197199999999817e-05]</msg>
<status status="PASS" starttime="20201030 11:50:27.708" endtime="20201030 11:50:27.710"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.703" endtime="20201030 11:50:27.710"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.361" endtime="20201030 11:50:27.711"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.338" endtime="20201030 11:50:27.711"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:27.713" endtime="20201030 11:50:27.733"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.712" endtime="20201030 11:50:27.733"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:27.742" endtime="20201030 11:50:27.759"></status>
</kw>
<msg timestamp="20201030 11:50:27.760" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:27.740" endtime="20201030 11:50:27.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:27.762" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:27.761" endtime="20201030 11:50:27.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:27.763" endtime="20201030 11:50:27.765"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.738" endtime="20201030 11:50:27.766"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.735" endtime="20201030 11:50:27.766"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:27.773" endtime="20201030 11:50:28.058"></status>
</kw>
<msg timestamp="20201030 11:50:28.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021915014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021956403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:27.771" endtime="20201030 11:50:28.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:28.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021915014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021956403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:28.062" endtime="20201030 11:50:28.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:28.071" endtime="20201030 11:50:28.073"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.768" endtime="20201030 11:50:28.073"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.767" endtime="20201030 11:50:28.074"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:28.078" level="INFO">${PHILIP_RES} = [{'diff': 4.1388999999999315e-05}, {'diff': 4.143000000000202e-05}, {'diff': 4.136199999999965e-05}, {'diff': 4.1361000000000175e-05}, {'diff': 4.1347000000000605e-05}, {'diff': 4.1374999999999745e-05...</msg>
<status status="PASS" starttime="20201030 11:50:28.074" endtime="20201030 11:50:28.078"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:28.082" level="INFO">${RESULT} = {'diff': [4.1388999999999315e-05, 4.143000000000202e-05, 4.136199999999965e-05, 4.1361000000000175e-05, 4.1347000000000605e-05, 4.1374999999999745e-05, 4.1431000000001494e-05, 4.1361000000000175e-05, ...</msg>
<status status="PASS" starttime="20201030 11:50:28.079" endtime="20201030 11:50:28.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:28.086" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:28.085" endtime="20201030 11:50:28.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:28.089" level="INFO">VALUE: [4.1388999999999315e-05, 4.143000000000202e-05, 4.136199999999965e-05, 4.1361000000000175e-05, 4.1347000000000605e-05, 4.1374999999999745e-05, 4.1431000000001494e-05, 4.1361000000000175e-05, 4.136199999999965e-05, 4.1333000000001036e-05, 4.1361000000000175e-05, 4.1445000000001064e-05, 4.1374999999999745e-05, 4.1361000000000175e-05, 4.1403000000002355e-05, 4.1333000000001036e-05, 4.1431000000001494e-05, 4.1374999999999745e-05, 4.1361000000000175e-05, 4.1403000000002355e-05, 4.1374999999999745e-05, 4.1318999999997996e-05, 4.1403000000002355e-05, 4.1430999999998025e-05, 4.1374999999999745e-05, 4.1374999999999745e-05, 4.134800000000008e-05, 4.1417000000001924e-05, 4.144399999999812e-05, 4.134800000000008e-05, 4.129199999999833e-05, 4.1332999999997566e-05, 4.133399999999704e-05, 4.1347000000000605e-05, 4.1276999999999286e-05, 4.1388999999999315e-05, 4.1402999999998885e-05, 4.1361000000000175e-05, 4.1346999999997136e-05, 4.1402999999998885e-05, 4.1374999999999745e-05, 4.1332999999997566e-05, 4.1402999999998885e-05, 4.1360999999996706e-05, 4.147199999999726e-05, 4.1403000000002355e-05, 4.1332999999997566e-05, 4.1361000000000175e-05, 4.1361000000000175e-05, 4.1402999999998885e-05]</msg>
<status status="PASS" starttime="20201030 11:50:28.088" endtime="20201030 11:50:28.090"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.083" endtime="20201030 11:50:28.091"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.734" endtime="20201030 11:50:28.091"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.711" endtime="20201030 11:50:28.091"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:28.094" endtime="20201030 11:50:28.113"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.092" endtime="20201030 11:50:28.114"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:28.122" endtime="20201030 11:50:28.136"></status>
</kw>
<msg timestamp="20201030 11:50:28.137" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:28.121" endtime="20201030 11:50:28.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:28.139" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:28.138" endtime="20201030 11:50:28.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:28.140" endtime="20201030 11:50:28.142"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.118" endtime="20201030 11:50:28.142"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.116" endtime="20201030 11:50:28.143"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:28.149" endtime="20201030 11:50:28.435"></status>
</kw>
<msg timestamp="20201030 11:50:28.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018200306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018251875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:28.148" endtime="20201030 11:50:28.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:28.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018200306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018251875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:28.439" endtime="20201030 11:50:28.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:28.448" endtime="20201030 11:50:28.449"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.145" endtime="20201030 11:50:28.450"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.143" endtime="20201030 11:50:28.450"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:28.454" level="INFO">${PHILIP_RES} = [{'diff': 5.156900000000131e-05}, {'diff': 5.15270000000026e-05}, {'diff': 5.15279999999986e-05}, {'diff': 5.155599999999774e-05}, {'diff': 5.148599999999989e-05}, {'diff': 5.156899999999784e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:50:28.451" endtime="20201030 11:50:28.455"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:28.459" level="INFO">${RESULT} = {'diff': [5.156900000000131e-05, 5.15270000000026e-05, 5.15279999999986e-05, 5.155599999999774e-05, 5.148599999999989e-05, 5.156899999999784e-05, 5.147200000000032e-05, 5.143100000000109e-05, 5.151399...</msg>
<status status="PASS" starttime="20201030 11:50:28.455" endtime="20201030 11:50:28.460"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:28.464" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:28.463" endtime="20201030 11:50:28.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:28.466" level="INFO">VALUE: [5.156900000000131e-05, 5.15270000000026e-05, 5.15279999999986e-05, 5.155599999999774e-05, 5.148599999999989e-05, 5.156899999999784e-05, 5.147200000000032e-05, 5.143100000000109e-05, 5.151399999999903e-05, 5.148599999999989e-05, 5.14729999999998e-05, 5.149999999999946e-05, 5.155600000000121e-05, 5.151399999999903e-05, 5.149999999999946e-05, 5.156899999999784e-05, 5.154199999999817e-05, 5.158300000000088e-05, 5.145800000000075e-05, 5.151399999999903e-05, 5.156900000000131e-05, 5.147200000000032e-05, 5.149999999999946e-05, 5.156899999999784e-05, 5.144500000000066e-05, 5.151399999999903e-05, 5.155600000000121e-05, 5.144400000000118e-05, 5.147200000000032e-05, 5.147200000000032e-05, 5.155500000000174e-05, 5.148599999999989e-05, 5.148599999999989e-05, 5.15409999999987e-05, 5.159700000000045e-05, 5.15279999999986e-05, 5.1457999999997284e-05, 5.145900000000023e-05, 5.154200000000164e-05, 5.1486999999999367e-05, 5.145900000000023e-05, 5.151399999999903e-05, 5.144499999999719e-05, 5.14729999999998e-05, 5.159700000000045e-05, 5.147200000000032e-05, 5.157000000000078e-05, 5.148599999999989e-05, 5.147200000000032e-05, 5.155599999999774e-05]</msg>
<status status="PASS" starttime="20201030 11:50:28.465" endtime="20201030 11:50:28.467"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.460" endtime="20201030 11:50:28.467"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.115" endtime="20201030 11:50:28.468"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.092" endtime="20201030 11:50:28.468"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:28.471" endtime="20201030 11:50:28.490"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.469" endtime="20201030 11:50:28.491"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:28.499" endtime="20201030 11:50:28.513"></status>
</kw>
<msg timestamp="20201030 11:50:28.513" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:28.497" endtime="20201030 11:50:28.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:28.516" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:28.514" endtime="20201030 11:50:28.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:28.517" endtime="20201030 11:50:28.519"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.495" endtime="20201030 11:50:28.519"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.493" endtime="20201030 11:50:28.519"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:28.526" endtime="20201030 11:50:28.811"></status>
</kw>
<msg timestamp="20201030 11:50:28.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018005903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018068278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:28.524" endtime="20201030 11:50:28.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:28.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018005903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018068278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:28.815" endtime="20201030 11:50:28.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:28.823" endtime="20201030 11:50:28.826"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.522" endtime="20201030 11:50:28.827"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.520" endtime="20201030 11:50:28.827"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:28.831" level="INFO">${PHILIP_RES} = [{'diff': 6.237499999999993e-05}, {'diff': 6.226399999999938e-05}, {'diff': 6.229200000000198e-05}, {'diff': 6.231900000000165e-05}, {'diff': 6.229200000000198e-05}, {'diff': 6.240299999999907e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:50:28.828" endtime="20201030 11:50:28.831"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:28.835" level="INFO">${RESULT} = {'diff': [6.237499999999993e-05, 6.226399999999938e-05, 6.229200000000198e-05, 6.231900000000165e-05, 6.229200000000198e-05, 6.240299999999907e-05, 6.230599999999809e-05, 6.226400000000284e-05, 6.2334...</msg>
<status status="PASS" starttime="20201030 11:50:28.832" endtime="20201030 11:50:28.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:28.839" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:28.838" endtime="20201030 11:50:28.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:28.842" level="INFO">VALUE: [6.237499999999993e-05, 6.226399999999938e-05, 6.229200000000198e-05, 6.231900000000165e-05, 6.229200000000198e-05, 6.240299999999907e-05, 6.230599999999809e-05, 6.226400000000284e-05, 6.23340000000007e-05, 6.234700000000079e-05, 6.234700000000079e-05, 6.23889999999995e-05, 6.227799999999895e-05, 6.226399999999938e-05, 6.23340000000007e-05, 6.231899999999818e-05, 6.237499999999993e-05, 6.226399999999938e-05, 6.229099999999904e-05, 6.229199999999852e-05, 6.234699999999732e-05, 6.232000000000112e-05, 6.230500000000208e-05, 6.227699999999947e-05, 6.241599999999917e-05, 6.227699999999947e-05, 6.231900000000165e-05, 6.23340000000007e-05, 6.226399999999938e-05, 6.23889999999995e-05, 6.229099999999904e-05, 6.236100000000036e-05, 6.234700000000079e-05, 6.230500000000208e-05, 6.23340000000007e-05, 6.227800000000241e-05, 6.23889999999995e-05, 6.226399999999938e-05, 6.231900000000165e-05, 6.234700000000079e-05, 6.233299999999775e-05, 6.232000000000112e-05, 6.23889999999995e-05, 6.22499999999998e-05, 6.226399999999938e-05, 6.229200000000198e-05, 6.234700000000079e-05, 6.227799999999895e-05, 6.238800000000003e-05, 6.227700000000294e-05]</msg>
<status status="PASS" starttime="20201030 11:50:28.840" endtime="20201030 11:50:28.842"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.836" endtime="20201030 11:50:28.843"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.491" endtime="20201030 11:50:28.844"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.468" endtime="20201030 11:50:28.844"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:28.846" endtime="20201030 11:50:28.866"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.845" endtime="20201030 11:50:28.866"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:28.874" endtime="20201030 11:50:28.890"></status>
</kw>
<msg timestamp="20201030 11:50:28.890" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:28.873" endtime="20201030 11:50:28.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:28.893" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:28.891" endtime="20201030 11:50:28.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:28.894" endtime="20201030 11:50:28.898"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.870" endtime="20201030 11:50:28.899"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.868" endtime="20201030 11:50:28.899"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:28.906" endtime="20201030 11:50:29.192"></status>
</kw>
<msg timestamp="20201030 11:50:29.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019262056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019336028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:28.904" endtime="20201030 11:50:29.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:29.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019262056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019336028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:29.196" endtime="20201030 11:50:29.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:29.205" endtime="20201030 11:50:29.206"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.902" endtime="20201030 11:50:29.207"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.900" endtime="20201030 11:50:29.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:29.211" level="INFO">${PHILIP_RES} = [{'diff': 7.397200000000201e-05}, {'diff': 7.381899999999927e-05}, {'diff': 7.379200000000308e-05}, {'diff': 7.388800000000112e-05}, {'diff': 7.381999999999875e-05}, {'diff': 7.382000000000222e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:50:29.208" endtime="20201030 11:50:29.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:29.215" level="INFO">${RESULT} = {'diff': [7.397200000000201e-05, 7.381899999999927e-05, 7.379200000000308e-05, 7.388800000000112e-05, 7.381999999999875e-05, 7.382000000000222e-05, 7.39439999999994e-05, 7.372299999999776e-05, 7.37780...</msg>
<status status="PASS" starttime="20201030 11:50:29.212" endtime="20201030 11:50:29.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:29.220" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:29.219" endtime="20201030 11:50:29.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:29.222" level="INFO">VALUE: [7.397200000000201e-05, 7.381899999999927e-05, 7.379200000000308e-05, 7.388800000000112e-05, 7.381999999999875e-05, 7.382000000000222e-05, 7.39439999999994e-05, 7.372299999999776e-05, 7.377800000000004e-05, 7.391699999999973e-05, 7.379199999999961e-05, 7.379100000000013e-05, 7.377800000000004e-05, 7.379199999999961e-05, 7.383299999999884e-05, 7.377800000000004e-05, 7.379100000000013e-05, 7.379199999999961e-05, 7.381999999999875e-05, 7.387499999999755e-05, 7.380599999999918e-05, 7.383299999999884e-05, 7.384800000000136e-05, 7.380599999999918e-05, 7.377800000000004e-05, 7.386099999999798e-05, 7.379199999999961e-05, 7.377700000000056e-05, 7.379199999999961e-05, 7.379100000000013e-05, 7.37500000000009e-05, 7.397299999999801e-05, 7.381899999999927e-05, 7.379199999999961e-05, 7.379100000000013e-05, 7.380600000000265e-05, 7.383400000000179e-05, 7.383299999999884e-05, 7.388900000000059e-05, 7.373599999999786e-05, 7.379199999999961e-05, 7.377800000000004e-05, 7.381900000000274e-05, 7.377800000000004e-05, 7.381999999999875e-05, 7.381900000000274e-05, 7.388900000000059e-05, 7.379100000000013e-05, 7.380600000000265e-05, 7.388900000000059e-05]</msg>
<status status="PASS" starttime="20201030 11:50:29.221" endtime="20201030 11:50:29.224"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.216" endtime="20201030 11:50:29.224"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.867" endtime="20201030 11:50:29.225"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.844" endtime="20201030 11:50:29.225"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:29.227" endtime="20201030 11:50:29.247"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.226" endtime="20201030 11:50:29.247"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:29.255" endtime="20201030 11:50:29.272"></status>
</kw>
<msg timestamp="20201030 11:50:29.273" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:29.254" endtime="20201030 11:50:29.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:29.275" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:29.274" endtime="20201030 11:50:29.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:29.276" endtime="20201030 11:50:29.278"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.251" endtime="20201030 11:50:29.279"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.249" endtime="20201030 11:50:29.279"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:29.285" endtime="20201030 11:50:29.570"></status>
</kw>
<msg timestamp="20201030 11:50:29.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020168097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020254236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:29.284" endtime="20201030 11:50:29.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:29.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020168097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020254236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:29.575" endtime="20201030 11:50:29.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:29.583" endtime="20201030 11:50:29.585"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.281" endtime="20201030 11:50:29.585"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.280" endtime="20201030 11:50:29.586"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:29.590" level="INFO">${PHILIP_RES} = [{'diff': 8.613899999999897e-05}, {'diff': 8.601400000000231e-05}, {'diff': 8.615200000000253e-05}, {'diff': 8.61249999999994e-05}, {'diff': 8.605499999999808e-05}, {'diff': 8.607000000000059e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:50:29.586" endtime="20201030 11:50:29.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:29.595" level="INFO">${RESULT} = {'diff': [8.613899999999897e-05, 8.601400000000231e-05, 8.615200000000253e-05, 8.61249999999994e-05, 8.605499999999808e-05, 8.607000000000059e-05, 8.609700000000026e-05, 8.606999999999712e-05, 8.61249...</msg>
<status status="PASS" starttime="20201030 11:50:29.591" endtime="20201030 11:50:29.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:29.599" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:29.598" endtime="20201030 11:50:29.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:29.602" level="INFO">VALUE: [8.613899999999897e-05, 8.601400000000231e-05, 8.615200000000253e-05, 8.61249999999994e-05, 8.605499999999808e-05, 8.607000000000059e-05, 8.609700000000026e-05, 8.606999999999712e-05, 8.61249999999994e-05, 8.605600000000102e-05, 8.609700000000026e-05, 8.608300000000069e-05, 8.611099999999983e-05, 8.601399999999884e-05, 8.61249999999994e-05, 8.602799999999841e-05, 8.615299999999854e-05, 8.61249999999994e-05, 8.599999999999927e-05, 8.613899999999897e-05, 8.59859999999997e-05, 8.613799999999949e-05, 8.602799999999841e-05, 8.61249999999994e-05, 8.611099999999983e-05, 8.597200000000013e-05, 8.61249999999994e-05, 8.601399999999884e-05, 8.618099999999768e-05, 8.613799999999949e-05, 8.608300000000069e-05, 8.605599999999755e-05, 8.609700000000026e-05, 8.605499999999808e-05, 8.61249999999994e-05, 8.601399999999884e-05, 8.599999999999927e-05, 8.613900000000244e-05, 8.613899999999897e-05, 8.609700000000026e-05, 8.601400000000231e-05, 8.616700000000158e-05, 8.601399999999884e-05, 8.61660000000021e-05, 8.602800000000188e-05, 8.612500000000287e-05, 8.6153000000002e-05, 8.59859999999997e-05, 8.613900000000244e-05, 8.608300000000069e-05]</msg>
<status status="PASS" starttime="20201030 11:50:29.600" endtime="20201030 11:50:29.602"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.595" endtime="20201030 11:50:29.603"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.248" endtime="20201030 11:50:29.603"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.225" endtime="20201030 11:50:29.603"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:29.606" endtime="20201030 11:50:29.625"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.604" endtime="20201030 11:50:29.626"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:29.634" endtime="20201030 11:50:29.649"></status>
</kw>
<msg timestamp="20201030 11:50:29.649" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:29.632" endtime="20201030 11:50:29.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:29.652" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:29.650" endtime="20201030 11:50:29.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:29.653" endtime="20201030 11:50:29.655"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.630" endtime="20201030 11:50:29.655"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.628" endtime="20201030 11:50:29.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:29.662" endtime="20201030 11:50:29.948"></status>
</kw>
<msg timestamp="20201030 11:50:29.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018446333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018545458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:29.660" endtime="20201030 11:50:29.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:29.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018446333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018545458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:29.952" endtime="20201030 11:50:29.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:29.961" endtime="20201030 11:50:29.963"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.658" endtime="20201030 11:50:29.964"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.656" endtime="20201030 11:50:29.964"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:29.968" level="INFO">${PHILIP_RES} = [{'diff': 9.912500000000199e-05}, {'diff': 9.906999999999971e-05}, {'diff': 9.897200000000272e-05}, {'diff': 9.911099999999895e-05}, {'diff': 9.897199999999926e-05}, {'diff': 9.913900000000156e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:50:29.965" endtime="20201030 11:50:29.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:29.972" level="INFO">${RESULT} = {'diff': [9.912500000000199e-05, 9.906999999999971e-05, 9.897200000000272e-05, 9.911099999999895e-05, 9.897199999999926e-05, 9.913900000000156e-05, 9.904200000000057e-05, 9.904200000000057e-05, 9.8985...</msg>
<status status="PASS" starttime="20201030 11:50:29.969" endtime="20201030 11:50:29.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:29.977" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:29.976" endtime="20201030 11:50:29.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:29.979" level="INFO">VALUE: [9.912500000000199e-05, 9.906999999999971e-05, 9.897200000000272e-05, 9.911099999999895e-05, 9.897199999999926e-05, 9.913900000000156e-05, 9.904200000000057e-05, 9.904200000000057e-05, 9.898599999999882e-05, 9.904200000000057e-05, 9.894500000000306e-05, 9.897200000000272e-05, 9.911099999999895e-05, 9.898599999999882e-05, 9.906900000000024e-05, 9.894400000000012e-05, 9.908299999999981e-05, 9.897199999999926e-05, 9.897200000000272e-05, 9.901400000000143e-05, 9.897199999999926e-05, 9.911099999999895e-05, 9.900000000000186e-05, 9.897200000000272e-05, 9.9028000000001e-05, 9.897199999999926e-05, 9.909699999999938e-05, 9.897199999999926e-05, 9.90410000000011e-05, 9.898599999999882e-05, 9.89999999999984e-05, 9.905500000000067e-05, 9.904200000000057e-05, 9.906900000000024e-05, 9.895900000000263e-05, 9.900000000000186e-05, 9.898599999999882e-05, 9.9028000000001e-05, 9.908299999999981e-05, 9.90419999999971e-05, 9.909699999999938e-05, 9.898599999999882e-05, 9.9028000000001e-05, 9.904200000000057e-05, 9.908299999999981e-05, 9.898599999999882e-05, 9.89860000000023e-05, 9.90549999999972e-05, 9.897199999999926e-05, 9.897199999999926e-05]</msg>
<status status="PASS" starttime="20201030 11:50:29.978" endtime="20201030 11:50:29.987"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.973" endtime="20201030 11:50:29.988"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.626" endtime="20201030 11:50:29.988"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.604" endtime="20201030 11:50:29.988"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:29.991" endtime="20201030 11:50:30.010"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.989" endtime="20201030 11:50:30.011"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:30.019" endtime="20201030 11:50:30.035"></status>
</kw>
<msg timestamp="20201030 11:50:30.036" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:30.018" endtime="20201030 11:50:30.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:30.038" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:30.037" endtime="20201030 11:50:30.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:30.039" endtime="20201030 11:50:30.042"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.015" endtime="20201030 11:50:30.043"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.013" endtime="20201030 11:50:30.043"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:30.049" endtime="20201030 11:50:30.334"></status>
</kw>
<msg timestamp="20201030 11:50:30.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020206417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020319167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:30.048" endtime="20201030 11:50:30.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:30.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020206417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020319167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:30.338" endtime="20201030 11:50:30.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:30.347" endtime="20201030 11:50:30.348"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.045" endtime="20201030 11:50:30.349"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.044" endtime="20201030 11:50:30.349"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:30.353" level="INFO">${PHILIP_RES} = [{'diff': 0.00011274999999999827}, {'diff': 0.00011275000000000174}, {'diff': 0.00011272199999999913}, {'diff': 0.00011269399999999999}, {'diff': 0.00011270899999999903}, {'diff': 0.000112721999999999...</msg>
<status status="PASS" starttime="20201030 11:50:30.350" endtime="20201030 11:50:30.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:30.357" level="INFO">${RESULT} = {'diff': [0.00011274999999999827, 0.00011275000000000174, 0.00011272199999999913, 0.00011269399999999999, 0.00011270899999999903, 0.00011272199999999913, 0.00011270899999999903, 0.0001127220000000026,...</msg>
<status status="PASS" starttime="20201030 11:50:30.354" endtime="20201030 11:50:30.357"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:30.361" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:30.360" endtime="20201030 11:50:30.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:30.364" level="INFO">VALUE: [0.00011274999999999827, 0.00011275000000000174, 0.00011272199999999913, 0.00011269399999999999, 0.00011270899999999903, 0.00011272199999999913, 0.00011270899999999903, 0.0001127220000000026, 0.000112596999999999, 0.00011270800000000303, 0.00011270799999999956, 0.000112903000000001, 0.00011272300000000207, 0.00011270799999999956, 0.00011270899999999903, 0.00011263900000000118, 0.00011276400000000131, 0.00011269500000000293, 0.00011269399999999999, 0.00011272199999999913, 0.00011272199999999913, 0.00011270800000000303, 0.00011277699999999793, 0.00011270799999999956, 0.00011268000000000042, 0.00011269499999999946, 0.00011268000000000042, 0.00011263799999999824, 0.00011269399999999999, 0.0001127090000000025, 0.00011272199999999913, 0.00011261200000000152, 0.00011270799999999956, 0.00011279100000000097, 0.00011283400000000263, 0.00011266700000000032, 0.00011270799999999956, 0.0001127220000000026, 0.00011272199999999913, 0.00011269399999999999, 0.00011269499999999946, 0.00011269399999999999, 0.00011272199999999913, 0.00011269499999999946, 0.0001127220000000026, 0.0001127359999999987, 0.00011270799999999956, 0.00011272199999999913, 0.0001127359999999987, 0.00011256899999999986]</msg>
<status status="PASS" starttime="20201030 11:50:30.362" endtime="20201030 11:50:30.365"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.358" endtime="20201030 11:50:30.366"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.012" endtime="20201030 11:50:30.366"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.989" endtime="20201030 11:50:30.367"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:30.369" endtime="20201030 11:50:30.388"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.367" endtime="20201030 11:50:30.389"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:30.397" endtime="20201030 11:50:30.416"></status>
</kw>
<msg timestamp="20201030 11:50:30.417" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:30.395" endtime="20201030 11:50:30.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:30.419" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:30.418" endtime="20201030 11:50:30.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:30.420" endtime="20201030 11:50:30.422"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.393" endtime="20201030 11:50:30.422"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.391" endtime="20201030 11:50:30.423"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:30.429" endtime="20201030 11:50:30.724"></status>
</kw>
<msg timestamp="20201030 11:50:30.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018968042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019095125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:30.428" endtime="20201030 11:50:30.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:30.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018968042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019095125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:30.734" endtime="20201030 11:50:30.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:30.753" endtime="20201030 11:50:30.756"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.425" endtime="20201030 11:50:30.757"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.423" endtime="20201030 11:50:30.758"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:30.766" level="INFO">${PHILIP_RES} = [{'diff': 0.00012708300000000006}, {'diff': 0.00012709699999999963}, {'diff': 0.00012709699999999963}, {'diff': 0.00012708300000000006}, {'diff': 0.0001270560000000004}, {'diff': 0.0001270830000000000...</msg>
<status status="PASS" starttime="20201030 11:50:30.759" endtime="20201030 11:50:30.767"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:30.777" level="INFO">${RESULT} = {'diff': [0.00012708300000000006, 0.00012709699999999963, 0.00012709699999999963, 0.00012708300000000006, 0.0001270560000000004, 0.00012708300000000006, 0.00012702800000000125, 0.00012709699999999963,...</msg>
<status status="PASS" starttime="20201030 11:50:30.768" endtime="20201030 11:50:30.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:30.785" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:30.784" endtime="20201030 11:50:30.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:30.787" level="INFO">VALUE: [0.00012708300000000006, 0.00012709699999999963, 0.00012709699999999963, 0.00012708300000000006, 0.0001270560000000004, 0.00012708300000000006, 0.00012702800000000125, 0.00012709699999999963, 0.00012705499999999745, 0.00012706999999999996, 0.00012698599999999907, 0.00012708300000000006, 0.00012695799999999993, 0.00012708300000000006, 0.00012697200000000297, 0.00012704200000000082, 0.0001270690000000005, 0.0001269300000000008, 0.00012698599999999907, 0.00012705499999999745, 0.0001271109999999992, 0.00012698599999999907, 0.00012704199999999735, 0.00012709699999999963, 0.00012694400000000036, 0.0001269719999999995, 0.00012709699999999963, 0.0001269589999999994, 0.00012706999999999996, 0.0001270690000000005, 0.00012694400000000036, 0.0001269719999999995, 0.00012709699999999963, 0.00012697200000000297, 0.00012702700000000178, 0.0001271109999999992, 0.0001270690000000005, 0.00012698599999999907, 0.00012697299999999898, 0.0001270560000000004, 0.0001269719999999995, 0.00012709699999999963, 0.00012695799999999993, 0.00012708399999999953, 0.0001271109999999992, 0.00012704100000000135, 0.00012694499999999984, 0.00012704100000000135, 0.00012709699999999963, 0.0001269719999999995]</msg>
<status status="PASS" starttime="20201030 11:50:30.786" endtime="20201030 11:50:30.788"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.778" endtime="20201030 11:50:30.788"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.389" endtime="20201030 11:50:30.789"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.367" endtime="20201030 11:50:30.789"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:30.792" endtime="20201030 11:50:30.811"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.790" endtime="20201030 11:50:30.812"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:30.820" endtime="20201030 11:50:30.840"></status>
</kw>
<msg timestamp="20201030 11:50:30.840" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:30.818" endtime="20201030 11:50:30.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:30.843" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:30.841" endtime="20201030 11:50:30.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:30.844" endtime="20201030 11:50:30.845"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.815" endtime="20201030 11:50:30.846"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.814" endtime="20201030 11:50:30.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:30.853" endtime="20201030 11:50:31.139"></status>
</kw>
<msg timestamp="20201030 11:50:31.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018256111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018398181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:30.851" endtime="20201030 11:50:31.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:31.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018256111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018398181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:31.143" endtime="20201030 11:50:31.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:31.151" endtime="20201030 11:50:31.154"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.848" endtime="20201030 11:50:31.154"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.847" endtime="20201030 11:50:31.155"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:31.159" level="INFO">${PHILIP_RES} = [{'diff': 0.00014207000000000108}, {'diff': 0.00014201399999999934}, {'diff': 0.00014211100000000032}, {'diff': 0.00014199999999999977}, {'diff': 0.00014208300000000118}, {'diff': 0.000142013000000003...</msg>
<status status="PASS" starttime="20201030 11:50:31.155" endtime="20201030 11:50:31.159"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:31.163" level="INFO">${RESULT} = {'diff': [0.00014207000000000108, 0.00014201399999999934, 0.00014211100000000032, 0.00014199999999999977, 0.00014208300000000118, 0.00014201300000000333, 0.0001421249999999999, 0.00014194400000000149,...</msg>
<status status="PASS" starttime="20201030 11:50:31.160" endtime="20201030 11:50:31.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:31.167" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:31.166" endtime="20201030 11:50:31.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:31.169" level="INFO">VALUE: [0.00014207000000000108, 0.00014201399999999934, 0.00014211100000000032, 0.00014199999999999977, 0.00014208300000000118, 0.00014201300000000333, 0.0001421249999999999, 0.00014194400000000149, 0.00014202699999999943, 0.00014215299999999903, 0.00014218100000000164, 0.00014201299999999986, 0.00014202800000000237, 0.0001421249999999999, 0.00014201299999999986, 0.0001421249999999999, 0.00014202800000000237, 0.0001421249999999999, 0.0001420140000000028, 0.00014199999999999977, 0.00014213899999999946, 0.0001420279999999989, 0.00014201399999999934, 0.000142138, 0.00014204199999999848, 0.00014201399999999934, 0.00014215299999999903, 0.00014202699999999943, 0.00014201399999999934, 0.0001420140000000028, 0.00014211100000000032, 0.00014201399999999934, 0.00014216700000000207, 0.00014201399999999934, 0.0001420140000000028, 0.00014211100000000032, 0.00014201399999999934, 0.0001421249999999999, 0.00014199999999999977, 0.0001419860000000002, 0.00014199999999999977, 0.00014212500000000336, 0.0001419730000000001, 0.0001421249999999999, 0.00014199999999999977, 0.00014197199999999716, 0.00014208300000000118, 0.00014211099999999685, 0.00014199999999999977, 0.00014209700000000075]</msg>
<status status="PASS" starttime="20201030 11:50:31.168" endtime="20201030 11:50:31.170"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.163" endtime="20201030 11:50:31.171"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.812" endtime="20201030 11:50:31.171"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.789" endtime="20201030 11:50:31.171"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:31.174" endtime="20201030 11:50:31.193"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.172" endtime="20201030 11:50:31.194"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:31.202" endtime="20201030 11:50:31.221"></status>
</kw>
<msg timestamp="20201030 11:50:31.222" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:31.200" endtime="20201030 11:50:31.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:31.224" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:31.223" endtime="20201030 11:50:31.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:31.225" endtime="20201030 11:50:31.228"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.198" endtime="20201030 11:50:31.228"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.196" endtime="20201030 11:50:31.229"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:31.235" endtime="20201030 11:50:31.529"></status>
</kw>
<msg timestamp="20201030 11:50:31.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018056597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018214389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:31.234" endtime="20201030 11:50:31.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:31.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018056597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018214389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:31.538" endtime="20201030 11:50:31.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:31.556" endtime="20201030 11:50:31.560"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.231" endtime="20201030 11:50:31.561"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.229" endtime="20201030 11:50:31.562"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:31.570" level="INFO">${PHILIP_RES} = [{'diff': 0.00015779200000000035}, {'diff': 0.00015780500000000044}, {'diff': 0.00015779200000000035}, {'diff': 0.0001579299999999971}, {'diff': 0.00015786099999999872}, {'diff': 0.0001578479999999986...</msg>
<status status="PASS" starttime="20201030 11:50:31.563" endtime="20201030 11:50:31.570"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:31.579" level="INFO">${RESULT} = {'diff': [0.00015779200000000035, 0.00015780500000000044, 0.00015779200000000035, 0.0001579299999999971, 0.00015786099999999872, 0.00015784799999999863, 0.00015786099999999872, 0.00015777699999999784,...</msg>
<status status="PASS" starttime="20201030 11:50:31.572" endtime="20201030 11:50:31.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:31.588" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:31.586" endtime="20201030 11:50:31.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:31.593" level="INFO">VALUE: [0.00015779200000000035, 0.00015780500000000044, 0.00015779200000000035, 0.0001579299999999971, 0.00015786099999999872, 0.00015784799999999863, 0.00015786099999999872, 0.00015777699999999784, 0.00015784699999999915, 0.0001578199999999995, 0.0001578749999999983, 0.00015788900000000133, 0.00015777800000000078, 0.00015774999999999817, 0.00015788900000000133, 0.00015783299999999958, 0.00015788900000000133, 0.00015783400000000253, 0.00015782000000000296, 0.00015775000000000164, 0.0001578610000000022, 0.00015787500000000176, 0.00015788900000000133, 0.00015786099999999872, 0.00015780500000000044, 0.00015780500000000044, 0.0001578610000000022, 0.00015784700000000262, 0.0001578610000000022, 0.00015775000000000164, 0.00015787500000000176, 0.0001578749999999983, 0.00015783399999999906, 0.0001578199999999995, 0.0001579030000000009, 0.0001577640000000012, 0.0001578749999999983, 0.00015776299999999827, 0.00015777800000000078, 0.00015775000000000164, 0.00015786099999999872, 0.00015787500000000176, 0.00015774999999999817, 0.0001578199999999995, 0.00015786099999999872, 0.00015769499999999936, 0.00015776300000000174, 0.0001579030000000009, 0.00015788900000000133, 0.0001577640000000012]</msg>
<status status="PASS" starttime="20201030 11:50:31.590" endtime="20201030 11:50:31.595"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.581" endtime="20201030 11:50:31.595"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.194" endtime="20201030 11:50:31.596"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.172" endtime="20201030 11:50:31.596"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:31.598" endtime="20201030 11:50:31.618"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.597" endtime="20201030 11:50:31.618"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:31.626" endtime="20201030 11:50:31.648"></status>
</kw>
<msg timestamp="20201030 11:50:31.648" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:31.625" endtime="20201030 11:50:31.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:31.651" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:31.649" endtime="20201030 11:50:31.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:31.652" endtime="20201030 11:50:31.654"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.622" endtime="20201030 11:50:31.654"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.620" endtime="20201030 11:50:31.655"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:31.661" endtime="20201030 11:50:31.947"></status>
</kw>
<msg timestamp="20201030 11:50:31.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020603403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020777792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:31.659" endtime="20201030 11:50:31.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:31.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020603403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020777792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:31.951" endtime="20201030 11:50:31.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:31.959" endtime="20201030 11:50:31.960"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.657" endtime="20201030 11:50:31.961"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.655" endtime="20201030 11:50:31.961"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:31.965" level="INFO">${PHILIP_RES} = [{'diff': 0.0001743890000000005}, {'diff': 0.0001743890000000005}, {'diff': 0.0001743330000000022}, {'diff': 0.00017422199999999818}, {'diff': 0.0001743049999999996}, {'diff': 0.00017434700000000178},...</msg>
<status status="PASS" starttime="20201030 11:50:31.962" endtime="20201030 11:50:31.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:31.970" level="INFO">${RESULT} = {'diff': [0.0001743890000000005, 0.0001743890000000005, 0.0001743330000000022, 0.00017422199999999818, 0.0001743049999999996, 0.00017434700000000178, 0.00017427799999999993, 0.0001742500000000008, 0.0...</msg>
<status status="PASS" starttime="20201030 11:50:31.966" endtime="20201030 11:50:31.970"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:31.974" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:31.973" endtime="20201030 11:50:31.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:31.977" level="INFO">VALUE: [0.0001743890000000005, 0.0001743890000000005, 0.0001743330000000022, 0.00017422199999999818, 0.0001743049999999996, 0.00017434700000000178, 0.00017427799999999993, 0.0001742500000000008, 0.00017436100000000135, 0.00017423599999999775, 0.0001743469999999983, 0.0001743330000000022, 0.00017433400000000168, 0.0001743330000000022, 0.00017417999999999947, 0.00017433299999999874, 0.00017433400000000168, 0.00017423600000000122, 0.00017430599999999907, 0.00017430599999999907, 0.0001742919999999995, 0.0001743330000000022, 0.00017429100000000003, 0.0001742500000000008, 0.00017431900000000264, 0.0001743330000000022, 0.0001743890000000005, 0.00017433299999999874, 0.00017429100000000003, 0.00017436099999999788, 0.00017430599999999907, 0.00017430599999999907, 0.00017419499999999852, 0.000174276999999997, 0.00017437499999999745, 0.00017430599999999907, 0.00017433299999999874, 0.0001744439999999993, 0.00017431899999999917, 0.0001743890000000005, 0.00017434700000000178, 0.00017429200000000297, 0.0001743200000000021, 0.0001743469999999983, 0.0001743049999999996, 0.00017434700000000178, 0.0001743200000000021, 0.00017422199999999818, 0.00017431899999999917, 0.0001743330000000022]</msg>
<status status="PASS" starttime="20201030 11:50:31.976" endtime="20201030 11:50:31.978"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.971" endtime="20201030 11:50:31.978"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.619" endtime="20201030 11:50:31.979"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.596" endtime="20201030 11:50:31.979"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:31.981" endtime="20201030 11:50:32.001"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.980" endtime="20201030 11:50:32.001"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:32.009" endtime="20201030 11:50:32.030"></status>
</kw>
<msg timestamp="20201030 11:50:32.030" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:32.008" endtime="20201030 11:50:32.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:32.033" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:32.031" endtime="20201030 11:50:32.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:32.034" endtime="20201030 11:50:32.035"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.005" endtime="20201030 11:50:32.036"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.003" endtime="20201030 11:50:32.036"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:32.043" endtime="20201030 11:50:32.337"></status>
</kw>
<msg timestamp="20201030 11:50:32.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019368708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019560111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:32.041" endtime="20201030 11:50:32.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:32.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019368708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019560111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:32.346" endtime="20201030 11:50:32.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:32.364" endtime="20201030 11:50:32.368"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.039" endtime="20201030 11:50:32.369"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.037" endtime="20201030 11:50:32.370"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:32.378" level="INFO">${PHILIP_RES} = [{'diff': 0.00019140300000000318}, {'diff': 0.00019144399999999895}, {'diff': 0.0001915419999999994}, {'diff': 0.00019148599999999766}, {'diff': 0.00019136099999999753}, {'diff': 0.0001915970000000016...</msg>
<status status="PASS" starttime="20201030 11:50:32.371" endtime="20201030 11:50:32.378"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:32.387" level="INFO">${RESULT} = {'diff': [0.00019140300000000318, 0.00019144399999999895, 0.0001915419999999994, 0.00019148599999999766, 0.00019136099999999753, 0.00019159700000000168, 0.00019147300000000103, 0.0001915000000000007, ...</msg>
<status status="PASS" starttime="20201030 11:50:32.380" endtime="20201030 11:50:32.387"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:32.396" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:32.394" endtime="20201030 11:50:32.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:32.401" level="INFO">VALUE: [0.00019140300000000318, 0.00019144399999999895, 0.0001915419999999994, 0.00019148599999999766, 0.00019136099999999753, 0.00019159700000000168, 0.00019147300000000103, 0.0001915000000000007, 0.00019147300000000103, 0.00019148599999999766, 0.00019147200000000156, 0.00019149999999999723, 0.00019151400000000027, 0.00019142999999999938, 0.0001915419999999994, 0.00019152700000000036, 0.00019151400000000027, 0.00019151299999999732, 0.00019147300000000103, 0.00019148600000000113, 0.00019148599999999766, 0.00019161100000000125, 0.0001913749999999971, 0.00019147200000000156, 0.00019148600000000113, 0.0001915419999999994, 0.00019148600000000113, 0.0001915000000000007, 0.00019138900000000014, 0.0001914719999999981, 0.00019152799999999984, 0.0001914029999999997, 0.00019151400000000027, 0.00019140200000000024, 0.0001914450000000019, 0.00019149999999999723, 0.00019155600000000245, 0.00019140300000000318, 0.00019154099999999993, 0.00019141699999999928, 0.00019138900000000014, 0.00019147200000000156, 0.00019148600000000113, 0.00019138900000000014, 0.00019148600000000113, 0.00019145799999999852, 0.00019141699999999928, 0.0001914159999999998, 0.00019148600000000113, 0.00019144499999999842]</msg>
<status status="PASS" starttime="20201030 11:50:32.398" endtime="20201030 11:50:32.402"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.389" endtime="20201030 11:50:32.402"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.002" endtime="20201030 11:50:32.403"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.979" endtime="20201030 11:50:32.403"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:32.405" endtime="20201030 11:50:32.424"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.404" endtime="20201030 11:50:32.425"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:32.433" endtime="20201030 11:50:32.452"></status>
</kw>
<msg timestamp="20201030 11:50:32.453" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:32.432" endtime="20201030 11:50:32.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:32.455" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:32.454" endtime="20201030 11:50:32.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:32.456" endtime="20201030 11:50:32.461"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.429" endtime="20201030 11:50:32.462"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.427" endtime="20201030 11:50:32.462"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:32.468" endtime="20201030 11:50:32.756"></status>
</kw>
<msg timestamp="20201030 11:50:32.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017490611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017700014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:32.467" endtime="20201030 11:50:32.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:32.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017490611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017700014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:32.760" endtime="20201030 11:50:32.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:32.768" endtime="20201030 11:50:32.770"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.464" endtime="20201030 11:50:32.771"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.463" endtime="20201030 11:50:32.772"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:32.776" level="INFO">${PHILIP_RES} = [{'diff': 0.00020940300000000037}, {'diff': 0.00020937500000000123}, {'diff': 0.0002094439999999996}, {'diff': 0.00020940300000000037}, {'diff': 0.00020940199999999742}, {'diff': 0.0002094439999999996...</msg>
<status status="PASS" starttime="20201030 11:50:32.772" endtime="20201030 11:50:32.776"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:32.780" level="INFO">${RESULT} = {'diff': [0.00020940300000000037, 0.00020937500000000123, 0.0002094439999999996, 0.00020940300000000037, 0.00020940199999999742, 0.0002094439999999996, 0.00020947300000000169, 0.00020945899999999865, ...</msg>
<status status="PASS" starttime="20201030 11:50:32.777" endtime="20201030 11:50:32.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:32.784" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:32.783" endtime="20201030 11:50:32.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:32.787" level="INFO">VALUE: [0.00020940300000000037, 0.00020937500000000123, 0.0002094439999999996, 0.00020940300000000037, 0.00020940199999999742, 0.0002094439999999996, 0.00020947300000000169, 0.00020945899999999865, 0.00020955599999999963, 0.00020951400000000092, 0.00020938800000000132, 0.0002094439999999996, 0.00020943000000000003, 0.00020937499999999776, 0.00020947199999999874, 0.00020943000000000003, 0.00020951399999999745, 0.00020936100000000166, 0.0002093609999999982, 0.00020943000000000003, 0.0002094029999999969, 0.00020945899999999865, 0.0002094309999999995, 0.00020937500000000123, 0.00020951400000000092, 0.0002094309999999995, 0.00020943000000000003, 0.00020937500000000123, 0.0002094309999999995, 0.00020941600000000046, 0.0002093890000000008, 0.00020943000000000003, 0.00020947299999999822, 0.00020940300000000037, 0.00020947199999999874, 0.00020941699999999994, 0.00020951399999999745, 0.0002093609999999982, 0.00020930599999999938, 0.0002093609999999982, 0.00020937500000000123, 0.00020937500000000123, 0.00020940300000000037, 0.00020936100000000166, 0.00020937499999999776, 0.00020940199999999742, 0.0002092919999999998, 0.00020937499999999776, 0.00020947299999999822, 0.0002094439999999996]</msg>
<status status="PASS" starttime="20201030 11:50:32.785" endtime="20201030 11:50:32.788"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.781" endtime="20201030 11:50:32.789"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.426" endtime="20201030 11:50:32.789"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.403" endtime="20201030 11:50:32.789"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:32.792" endtime="20201030 11:50:32.811"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.790" endtime="20201030 11:50:32.812"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:32.820" endtime="20201030 11:50:32.843"></status>
</kw>
<msg timestamp="20201030 11:50:32.844" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:32.818" endtime="20201030 11:50:32.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:32.846" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:32.845" endtime="20201030 11:50:32.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:32.847" endtime="20201030 11:50:32.849"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.816" endtime="20201030 11:50:32.849"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.814" endtime="20201030 11:50:32.850"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:32.856" endtime="20201030 11:50:33.151"></status>
</kw>
<msg timestamp="20201030 11:50:33.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017643694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017871792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:32.855" endtime="20201030 11:50:33.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:33.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017643694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017871792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:33.161" endtime="20201030 11:50:33.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:33.179" endtime="20201030 11:50:33.182"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.852" endtime="20201030 11:50:33.183"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.850" endtime="20201030 11:50:33.184"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:33.193" level="INFO">${PHILIP_RES} = [{'diff': 0.0002280979999999995}, {'diff': 0.00022809700000000002}, {'diff': 0.00022807000000000036}, {'diff': 0.00022806900000000088}, {'diff': 0.0002280550000000013}, {'diff': 0.00022809700000000002...</msg>
<status status="PASS" starttime="20201030 11:50:33.186" endtime="20201030 11:50:33.193"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:33.203" level="INFO">${RESULT} = {'diff': [0.0002280979999999995, 0.00022809700000000002, 0.00022807000000000036, 0.00022806900000000088, 0.0002280550000000013, 0.00022809700000000002, 0.00022809700000000002, 0.00022806900000000088, ...</msg>
<status status="PASS" starttime="20201030 11:50:33.195" endtime="20201030 11:50:33.203"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:33.210" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:33.209" endtime="20201030 11:50:33.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:33.213" level="INFO">VALUE: [0.0002280979999999995, 0.00022809700000000002, 0.00022807000000000036, 0.00022806900000000088, 0.0002280550000000013, 0.00022809700000000002, 0.00022809700000000002, 0.00022806900000000088, 0.00022804200000000122, 0.00022804100000000174, 0.00022807000000000036, 0.0002280139999999986, 0.000228194999999997, 0.00022804099999999827, 0.00022804200000000122, 0.00022797299999999937, 0.00022818000000000144, 0.00022801400000000208, 0.00022805600000000079, 0.0002281520000000023, 0.0002279719999999999, 0.00022804199999999775, 0.0002280139999999986, 0.00022812499999999916, 0.00022805499999999784, 0.0002279719999999999, 0.00022801400000000208, 0.00022798599999999947, 0.00022812500000000263, 0.00022812499999999916, 0.00022801400000000208, 0.0002280269999999987, 0.00022816699999999787, 0.00022807000000000036, 0.0002280000000000025, 0.0002280550000000013, 0.00022808299999999698, 0.00022805600000000079, 0.00022804199999999775, 0.0002280000000000025, 0.00022798599999999947, 0.0002280000000000025, 0.0002279719999999999, 0.00022808399999999993, 0.00022790300000000152, 0.00022806900000000088, 0.00022806900000000088, 0.00022807000000000036, 0.00022811100000000306, 0.00022804100000000174]</msg>
<status status="PASS" starttime="20201030 11:50:33.211" endtime="20201030 11:50:33.214"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.205" endtime="20201030 11:50:33.214"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.812" endtime="20201030 11:50:33.215"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.790" endtime="20201030 11:50:33.215"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:33.217" endtime="20201030 11:50:33.237"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.216" endtime="20201030 11:50:33.238"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:33.246" endtime="20201030 11:50:33.270"></status>
</kw>
<msg timestamp="20201030 11:50:33.271" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:33.245" endtime="20201030 11:50:33.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:33.273" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:33.272" endtime="20201030 11:50:33.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:33.275" endtime="20201030 11:50:33.276"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.242" endtime="20201030 11:50:33.277"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.240" endtime="20201030 11:50:33.277"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:33.284" endtime="20201030 11:50:33.570"></status>
</kw>
<msg timestamp="20201030 11:50:33.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018885847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019133, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:50:33.282" endtime="20201030 11:50:33.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:33.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018885847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019133, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:50:33.575" endtime="20201030 11:50:33.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:33.583" endtime="20201030 11:50:33.584"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.279" endtime="20201030 11:50:33.585"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.278" endtime="20201030 11:50:33.585"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:33.589" level="INFO">${PHILIP_RES} = [{'diff': 0.00024715299999999996}, {'diff': 0.00024725000000000094}, {'diff': 0.00024716600000000005}, {'diff': 0.0002471939999999992}, {'diff': 0.0002472909999999967}, {'diff': 0.00024729199999999965...</msg>
<status status="PASS" starttime="20201030 11:50:33.586" endtime="20201030 11:50:33.589"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:33.593" level="INFO">${RESULT} = {'diff': [0.00024715299999999996, 0.00024725000000000094, 0.00024716600000000005, 0.0002471939999999992, 0.0002472909999999967, 0.00024729199999999965, 0.0002472220000000018, 0.0002472780000000001, 0....</msg>
<status status="PASS" starttime="20201030 11:50:33.590" endtime="20201030 11:50:33.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:33.598" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:33.597" endtime="20201030 11:50:33.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:33.600" level="INFO">VALUE: [0.00024715299999999996, 0.00024725000000000094, 0.00024716600000000005, 0.0002471939999999992, 0.0002472909999999967, 0.00024729199999999965, 0.0002472220000000018, 0.0002472780000000001, 0.0002472910000000002, 0.00024726300000000104, 0.0002471669999999995, 0.0002472780000000001, 0.00024733300000000236, 0.00024722199999999833, 0.0002472780000000001, 0.0002472770000000006, 0.00024724999999999747, 0.0002472780000000001, 0.0002472640000000005, 0.0002471390000000004, 0.0002472640000000005, 0.00024737500000000107, 0.0002471809999999991, 0.0002473059999999992, 0.0002472780000000001, 0.0002473199999999988, 0.0002472920000000031, 0.0002472780000000001, 0.0002472780000000001, 0.0002472909999999967, 0.00024715299999999996, 0.0002472780000000001, 0.0002472090000000017, 0.0002472640000000005, 0.0002470969999999982, 0.00024716600000000005, 0.0002472359999999979, 0.0002472359999999979, 0.0002472910000000002, 0.0002472640000000005, 0.0002471390000000004, 0.0002471799999999996, 0.00024723600000000137, 0.0002471799999999996, 0.00024724999999999747, 0.0002473189999999993, 0.0002472909999999967, 0.0002472919999999962, 0.0002472920000000031, 0.00024724999999999747]</msg>
<status status="PASS" starttime="20201030 11:50:33.599" endtime="20201030 11:50:33.601"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.594" endtime="20201030 11:50:33.601"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.238" endtime="20201030 11:50:33.602"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.215" endtime="20201030 11:50:33.602"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:33.604" endtime="20201030 11:50:33.624"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.603" endtime="20201030 11:50:33.624"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:33.632" endtime="20201030 11:50:33.658"></status>
</kw>
<msg timestamp="20201030 11:50:33.659" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:33.631" endtime="20201030 11:50:33.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:33.661" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:33.660" endtime="20201030 11:50:33.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:33.662" endtime="20201030 11:50:33.665"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.628" endtime="20201030 11:50:33.665"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.626" endtime="20201030 11:50:33.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:33.672" endtime="20201030 11:50:33.968"></status>
</kw>
<msg timestamp="20201030 11:50:33.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01894225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0192095, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:50:33.671" endtime="20201030 11:50:33.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:33.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01894225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0192095, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:50:33.978" endtime="20201030 11:50:33.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:33.999" endtime="20201030 11:50:34.003"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.668" endtime="20201030 11:50:34.004"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.667" endtime="20201030 11:50:34.005"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:34.013" level="INFO">${PHILIP_RES} = [{'diff': 0.0002672500000000001}, {'diff': 0.00026730499999999893}, {'diff': 0.00026724999999999666}, {'diff': 0.00026727799999999927}, {'diff': 0.000267222000000001}, {'diff': 0.0002672080000000014},...</msg>
<status status="PASS" starttime="20201030 11:50:34.006" endtime="20201030 11:50:34.014"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:34.022" level="INFO">${RESULT} = {'diff': [0.0002672500000000001, 0.00026730499999999893, 0.00026724999999999666, 0.00026727799999999927, 0.000267222000000001, 0.0002672080000000014, 0.0002672920000000023, 0.00026727799999999927, 0.0...</msg>
<status status="PASS" starttime="20201030 11:50:34.015" endtime="20201030 11:50:34.023"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:34.028" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:34.027" endtime="20201030 11:50:34.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:34.030" level="INFO">VALUE: [0.0002672500000000001, 0.00026730499999999893, 0.00026724999999999666, 0.00026727799999999927, 0.000267222000000001, 0.0002672080000000014, 0.0002672920000000023, 0.00026727799999999927, 0.0002672500000000001, 0.0002671119999999999, 0.0002671669999999987, 0.000267222000000001, 0.0002672500000000001, 0.00026727799999999927, 0.00026723600000000056, 0.00026719499999999785, 0.0002672500000000001, 0.0002671380000000001, 0.00026716599999999924, 0.0002673059999999984, 0.0002673060000000019, 0.00026719400000000185, 0.0002671950000000013, 0.00026726400000000317, 0.00026729199999999884, 0.00026715199999999967, 0.0002672769999999998, 0.0002671670000000022, 0.0002672639999999997, 0.00026713899999999957, 0.0002671669999999987, 0.00026723600000000056, 0.00026711100000000043, 0.0002673470000000011, 0.00026718100000000175, 0.00026719400000000185, 0.0002673610000000007, 0.000267222000000001, 0.0002671800000000023, 0.0002672920000000023, 0.00026727799999999927, 0.00026729199999999884, 0.0002673050000000024, 0.00026731900000000197, 0.00026715299999999914, 0.0002672219999999975, 0.0002672630000000037, 0.00026715199999999967, 0.0002673480000000006, 0.0002672219999999975]</msg>
<status status="PASS" starttime="20201030 11:50:34.029" endtime="20201030 11:50:34.032"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.024" endtime="20201030 11:50:34.032"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.625" endtime="20201030 11:50:34.033"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.602" endtime="20201030 11:50:34.033"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:34.035" endtime="20201030 11:50:34.055"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.034" endtime="20201030 11:50:34.055"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:34.063" endtime="20201030 11:50:34.090"></status>
</kw>
<msg timestamp="20201030 11:50:34.090" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:34.062" endtime="20201030 11:50:34.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:34.093" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:34.091" endtime="20201030 11:50:34.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:34.094" endtime="20201030 11:50:34.096"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.059" endtime="20201030 11:50:34.096"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.057" endtime="20201030 11:50:34.097"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:34.103" endtime="20201030 11:50:34.388"></status>
</kw>
<msg timestamp="20201030 11:50:34.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020032556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020320625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:34.101" endtime="20201030 11:50:34.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:34.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020032556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020320625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:34.392" endtime="20201030 11:50:34.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:34.400" endtime="20201030 11:50:34.402"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.099" endtime="20201030 11:50:34.403"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.097" endtime="20201030 11:50:34.403"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:34.408" level="INFO">${PHILIP_RES} = [{'diff': 0.00028806899999999844}, {'diff': 0.0002881250000000002}, {'diff': 0.00028800000000000006}, {'diff': 0.00028800000000000006}, {'diff': 0.0002880279999999992}, {'diff': 0.00028801399999999963...</msg>
<status status="PASS" starttime="20201030 11:50:34.404" endtime="20201030 11:50:34.408"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:34.413" level="INFO">${RESULT} = {'diff': [0.00028806899999999844, 0.0002881250000000002, 0.00028800000000000006, 0.00028800000000000006, 0.0002880279999999992, 0.00028801399999999963, 0.00028802800000000267, 0.0002880409999999993, 0...</msg>
<status status="PASS" starttime="20201030 11:50:34.409" endtime="20201030 11:50:34.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:34.417" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:34.416" endtime="20201030 11:50:34.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:34.420" level="INFO">VALUE: [0.00028806899999999844, 0.0002881250000000002, 0.00028800000000000006, 0.00028800000000000006, 0.0002880279999999992, 0.00028801399999999963, 0.00028802800000000267, 0.0002880409999999993, 0.00028801399999999963, 0.0002879439999999983, 0.000287985999999997, 0.0002879730000000004, 0.00028791699999999865, 0.0002879860000000005, 0.00028804199999999877, 0.0002880699999999979, 0.0002878889999999995, 0.0002879730000000004, 0.0002879720000000009, 0.0002879730000000004, 0.0002879449999999978, 0.0002880279999999992, 0.00028792999999999874, 0.00028795800000000135, 0.0002879860000000005, 0.0002878059999999981, 0.00028801399999999963, 0.00028798699999999997, 0.0002879720000000009, 0.00028794500000000126, 0.0002880700000000014, 0.00028795899999999736, 0.0002879170000000021, 0.00028795899999999736, 0.00028804199999999877, 0.0002879029999999991, 0.00028809700000000105, 0.0002879439999999983, 0.0002880830000000015, 0.00028791699999999865, 0.00028790200000000654, 0.00028798600000000396, 0.0002879449999999978, 0.00028797199999999745, 0.0002879439999999983, 0.0002880140000000031, 0.0002879029999999991, 0.0002880419999999953, 0.0002880419999999953, 0.00028804099999999583]</msg>
<status status="PASS" starttime="20201030 11:50:34.418" endtime="20201030 11:50:34.420"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.414" endtime="20201030 11:50:34.421"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.056" endtime="20201030 11:50:34.422"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.033" endtime="20201030 11:50:34.422"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:34.424" endtime="20201030 11:50:34.443"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.423" endtime="20201030 11:50:34.444"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:34.452" endtime="20201030 11:50:34.476"></status>
</kw>
<msg timestamp="20201030 11:50:34.477" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:34.451" endtime="20201030 11:50:34.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:34.479" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:34.478" endtime="20201030 11:50:34.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:34.480" endtime="20201030 11:50:34.482"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.448" endtime="20201030 11:50:34.482"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.446" endtime="20201030 11:50:34.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:34.489" endtime="20201030 11:50:34.786"></status>
</kw>
<msg timestamp="20201030 11:50:34.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0182135, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018523083, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:50:34.488" endtime="20201030 11:50:34.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:34.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0182135, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018523083, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:50:34.795" endtime="20201030 11:50:34.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:34.814" endtime="20201030 11:50:34.818"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.485" endtime="20201030 11:50:34.819"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.483" endtime="20201030 11:50:34.820"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:34.828" level="INFO">${PHILIP_RES} = [{'diff': 0.0003095829999999987}, {'diff': 0.0003094860000000012}, {'diff': 0.00030959700000000173}, {'diff': 0.0003094720000000016}, {'diff': 0.0003095140000000003}, {'diff': 0.0003094999999999973}, ...</msg>
<status status="PASS" starttime="20201030 11:50:34.822" endtime="20201030 11:50:34.829"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:34.834" level="INFO">${RESULT} = {'diff': [0.0003095829999999987, 0.0003094860000000012, 0.00030959700000000173, 0.0003094720000000016, 0.0003095140000000003, 0.0003094999999999973, 0.000309555999999999, 0.0003095279999999999, 0.0003...</msg>
<status status="PASS" starttime="20201030 11:50:34.830" endtime="20201030 11:50:34.834"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:34.838" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:34.837" endtime="20201030 11:50:34.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:34.840" level="INFO">VALUE: [0.0003095829999999987, 0.0003094860000000012, 0.00030959700000000173, 0.0003094720000000016, 0.0003095140000000003, 0.0003094999999999973, 0.000309555999999999, 0.0003095279999999999, 0.0003093470000000015, 0.00030961099999999783, 0.0003095140000000003, 0.00030959700000000173, 0.00030950000000000075, 0.0003096110000000013, 0.00030945799999999857, 0.00030955499999999955, 0.00030954199999999946, 0.00030950000000000075, 0.00030950000000000075, 0.00030950000000000075, 0.000309541, 0.00030958300000000216, 0.00030945799999999857, 0.0003094860000000012, 0.0003094730000000011, 0.00030963800000000097, 0.0003095689999999991, 0.0003095279999999999, 0.00030962500000000087, 0.0003094590000000015, 0.00030955499999999955, 0.0003095279999999999, 0.00030968099999999915, 0.000309555999999999, 0.0003095689999999991, 0.0003095140000000003, 0.00030954199999999946, 0.0003095270000000004, 0.0003095279999999999, 0.0003094860000000012, 0.000309443999999999, 0.00030958400000000164, 0.00030963900000000044, 0.00030947199999999814, 0.00030945899999999804, 0.0003094999999999973, 0.0003094999999999973, 0.0003095409999999965, 0.00030940299999999976, 0.0003095420000000029]</msg>
<status status="PASS" starttime="20201030 11:50:34.839" endtime="20201030 11:50:34.841"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.834" endtime="20201030 11:50:34.842"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.445" endtime="20201030 11:50:34.842"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.422" endtime="20201030 11:50:34.842"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:34.844" endtime="20201030 11:50:34.864"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.843" endtime="20201030 11:50:34.864"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:34.873" endtime="20201030 11:50:34.904"></status>
</kw>
<msg timestamp="20201030 11:50:34.904" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:34.871" endtime="20201030 11:50:34.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:34.907" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:34.905" endtime="20201030 11:50:34.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:34.908" endtime="20201030 11:50:34.910"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.868" endtime="20201030 11:50:34.911"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.866" endtime="20201030 11:50:34.911"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:34.918" endtime="20201030 11:50:35.204"></status>
</kw>
<msg timestamp="20201030 11:50:35.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019786028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020117875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:34.916" endtime="20201030 11:50:35.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:35.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019786028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020117875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:35.208" endtime="20201030 11:50:35.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:35.216" endtime="20201030 11:50:35.218"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.914" endtime="20201030 11:50:35.218"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.912" endtime="20201030 11:50:35.219"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:35.222" level="INFO">${PHILIP_RES} = [{'diff': 0.0003318469999999997}, {'diff': 0.0003317230000000025}, {'diff': 0.0003316949999999999}, {'diff': 0.00033172199999999957}, {'diff': 0.00033173599999999914}, {'diff': 0.00033172199999999957}...</msg>
<status status="PASS" starttime="20201030 11:50:35.219" endtime="20201030 11:50:35.223"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:35.226" level="INFO">${RESULT} = {'diff': [0.0003318469999999997, 0.0003317230000000025, 0.0003316949999999999, 0.00033172199999999957, 0.00033173599999999914, 0.00033172199999999957, 0.0003317629999999988, 0.00033161200000000196, 0....</msg>
<status status="PASS" starttime="20201030 11:50:35.223" endtime="20201030 11:50:35.227"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:35.230" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:35.229" endtime="20201030 11:50:35.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:35.233" level="INFO">VALUE: [0.0003318469999999997, 0.0003317230000000025, 0.0003316949999999999, 0.00033172199999999957, 0.00033173599999999914, 0.00033172199999999957, 0.0003317629999999988, 0.00033161200000000196, 0.0003316249999999986, 0.00033172199999999957, 0.000331708, 0.0003317639999999983, 0.00033172299999999905, 0.00033165299999999773, 0.0003316390000000016, 0.00033162500000000206, 0.00033154100000000117, 0.00033168100000000034, 0.00033176400000000175, 0.00033177799999999785, 0.0003316949999999999, 0.0003317639999999983, 0.00033163899999999816, 0.00033163899999999816, 0.0003316659999999978, 0.00033159699999999945, 0.0003317370000000021, 0.0003316530000000012, 0.00033163899999999816, 0.0003316249999999986, 0.00033176400000000175, 0.0003315829999999999, 0.00033177700000000185, 0.00033156899999999684, 0.00033156899999999684, 0.0003316520000000017, 0.0003315420000000041, 0.00033166700000000077, 0.00033159799999999545, 0.00033168100000000034, 0.00033166700000000077, 0.0003316520000000017, 0.0003315690000000038, 0.00033162500000000206, 0.0003317369999999986, 0.00033169400000000043, 0.00033162500000000206, 0.0003317220000000065, 0.0003316530000000012, 0.00033166700000000077]</msg>
<status status="PASS" starttime="20201030 11:50:35.232" endtime="20201030 11:50:35.248"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.227" endtime="20201030 11:50:35.248"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.865" endtime="20201030 11:50:35.249"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.842" endtime="20201030 11:50:35.249"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:35.252" endtime="20201030 11:50:35.271"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.250" endtime="20201030 11:50:35.272"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:35.279" endtime="20201030 11:50:35.311"></status>
</kw>
<msg timestamp="20201030 11:50:35.311" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:35.278" endtime="20201030 11:50:35.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:35.314" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:35.312" endtime="20201030 11:50:35.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:35.315" endtime="20201030 11:50:35.316"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.275" endtime="20201030 11:50:35.317"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.274" endtime="20201030 11:50:35.317"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:35.324" endtime="20201030 11:50:35.624"></status>
</kw>
<msg timestamp="20201030 11:50:35.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019621, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019975556, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:50:35.322" endtime="20201030 11:50:35.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:35.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019621, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019975556, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:50:35.633" endtime="20201030 11:50:35.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:35.647" endtime="20201030 11:50:35.648"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.320" endtime="20201030 11:50:35.649"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.318" endtime="20201030 11:50:35.649"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:35.653" level="INFO">${PHILIP_RES} = [{'diff': 0.00035455599999999893}, {'diff': 0.00035455499999999945}, {'diff': 0.00035454199999999936}, {'diff': 0.0003544729999999975}, {'diff': 0.0003544999999999972}, {'diff': 0.00035442999999999933...</msg>
<status status="PASS" starttime="20201030 11:50:35.650" endtime="20201030 11:50:35.654"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:35.658" level="INFO">${RESULT} = {'diff': [0.00035455599999999893, 0.00035455499999999945, 0.00035454199999999936, 0.0003544729999999975, 0.0003544999999999972, 0.00035442999999999933, 0.00035441599999999976, 0.00035454199999999936, ...</msg>
<status status="PASS" starttime="20201030 11:50:35.654" endtime="20201030 11:50:35.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:35.662" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:35.661" endtime="20201030 11:50:35.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:35.665" level="INFO">VALUE: [0.00035455599999999893, 0.00035455499999999945, 0.00035454199999999936, 0.0003544729999999975, 0.0003544999999999972, 0.00035442999999999933, 0.00035441599999999976, 0.00035454199999999936, 0.0003543890000000001, 0.0003544439999999989, 0.00035454199999999936, 0.0003546529999999999, 0.00035455599999999893, 0.00035440299999999966, 0.0003543470000000014, 0.0003546110000000012, 0.0003543890000000001, 0.00035463900000000034, 0.00035445800000000194, 0.0003545279999999998, 0.0003544860000000011, 0.0003544309999999988, 0.0003544309999999988, 0.00035447199999999804, 0.00035433299999999834, 0.0003544860000000011, 0.00035444500000000184, 0.00035458300000000206, 0.0003544300000000028, 0.0003545560000000024, 0.000354568999999999, 0.00035450000000000065, 0.00035443100000000227, 0.00035442999999999586, 0.0003543610000000044, 0.000354375000000004, 0.00035450000000000065, 0.0003544999999999937, 0.0003544590000000014, 0.00035448599999999414, 0.00035444400000000237, 0.0003544029999999962, 0.0003544720000000015, 0.00035445800000000194, 0.0003544029999999962, 0.00035445800000000194, 0.00035441699999999576, 0.00035441600000000323, 0.00035440300000000313, 0.00035443099999999533]</msg>
<status status="PASS" starttime="20201030 11:50:35.663" endtime="20201030 11:50:35.666"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.659" endtime="20201030 11:50:35.666"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.272" endtime="20201030 11:50:35.667"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.249" endtime="20201030 11:50:35.667"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:35.669" endtime="20201030 11:50:35.688"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.668" endtime="20201030 11:50:35.689"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:35.697" endtime="20201030 11:50:35.727"></status>
</kw>
<msg timestamp="20201030 11:50:35.728" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:35.696" endtime="20201030 11:50:35.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:35.730" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:35.729" endtime="20201030 11:50:35.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:35.731" endtime="20201030 11:50:35.733"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.693" endtime="20201030 11:50:35.733"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.691" endtime="20201030 11:50:35.734"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:35.740" endtime="20201030 11:50:36.027"></status>
</kw>
<msg timestamp="20201030 11:50:36.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019168042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019546028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:35.739" endtime="20201030 11:50:36.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:36.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019168042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019546028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:36.032" endtime="20201030 11:50:36.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:36.040" endtime="20201030 11:50:36.041"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.736" endtime="20201030 11:50:36.042"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.734" endtime="20201030 11:50:36.042"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:36.046" level="INFO">${PHILIP_RES} = [{'diff': 0.0003779860000000003}, {'diff': 0.0003777919999999983}, {'diff': 0.000377818999999998}, {'diff': 0.00037787499999999974}, {'diff': 0.00037787499999999974}, {'diff': 0.0003778470000000006}, ...</msg>
<status status="PASS" starttime="20201030 11:50:36.043" endtime="20201030 11:50:36.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:36.050" level="INFO">${RESULT} = {'diff': [0.0003779860000000003, 0.0003777919999999983, 0.000377818999999998, 0.00037787499999999974, 0.00037787499999999974, 0.0003778470000000006, 0.0003779720000000007, 0.00037787499999999974, 0.00...</msg>
<status status="PASS" starttime="20201030 11:50:36.047" endtime="20201030 11:50:36.050"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:36.054" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:36.053" endtime="20201030 11:50:36.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:36.057" level="INFO">VALUE: [0.0003779860000000003, 0.0003777919999999983, 0.000377818999999998, 0.00037787499999999974, 0.00037787499999999974, 0.0003778470000000006, 0.0003779720000000007, 0.00037787499999999974, 0.00037787499999999974, 0.0003779029999999989, 0.0003778470000000006, 0.0003779439999999981, 0.000377818999999998, 0.00037782000000000093, 0.00037784800000000007, 0.00037786199999999964, 0.00037787499999999974, 0.00037787499999999974, 0.0003778470000000006, 0.0003778470000000006, 0.000377930999999998, 0.00037773600000000004, 0.0003778470000000006, 0.0003777499999999996, 0.00037773600000000004, 0.00037779099999999885, 0.0003778470000000006, 0.0003778049999999984, 0.00037791699999999845, 0.00037773600000000004, 0.0003779029999999989, 0.0003777639999999957, 0.00037787499999999974, 0.00037784800000000007, 0.0003778329999999941, 0.00037786100000000017, 0.00037783300000000103, 0.0003779439999999981, 0.0003778340000000005, 0.00037784800000000007, 0.00037773699999999605, 0.0003779029999999989, 0.0003778470000000006, 0.0003776940000000048, 0.0003779030000000058, 0.00037774999999999614, 0.0003779019999999994, 0.00037786100000000017, 0.0003778470000000006, 0.0003777920000000018]</msg>
<status status="PASS" starttime="20201030 11:50:36.055" endtime="20201030 11:50:36.057"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.051" endtime="20201030 11:50:36.058"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.690" endtime="20201030 11:50:36.058"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.667" endtime="20201030 11:50:36.059"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:36.061" endtime="20201030 11:50:36.080"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.059" endtime="20201030 11:50:36.081"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:36.089" endtime="20201030 11:50:36.120"></status>
</kw>
<msg timestamp="20201030 11:50:36.121" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:36.087" endtime="20201030 11:50:36.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:36.123" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:36.122" endtime="20201030 11:50:36.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:36.124" endtime="20201030 11:50:36.129"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.085" endtime="20201030 11:50:36.129"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.083" endtime="20201030 11:50:36.130"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:36.136" endtime="20201030 11:50:36.421"></status>
</kw>
<msg timestamp="20201030 11:50:36.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019038125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019440333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:36.135" endtime="20201030 11:50:36.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:36.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019038125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019440333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:36.426" endtime="20201030 11:50:36.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:36.434" endtime="20201030 11:50:36.435"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.132" endtime="20201030 11:50:36.436"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.130" endtime="20201030 11:50:36.436"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:36.440" level="INFO">${PHILIP_RES} = [{'diff': 0.0004022080000000011}, {'diff': 0.0004023610000000004}, {'diff': 0.0004022370000000032}, {'diff': 0.0004021799999999985}, {'diff': 0.00040233300000000125}, {'diff': 0.00040218100000000145},...</msg>
<status status="PASS" starttime="20201030 11:50:36.437" endtime="20201030 11:50:36.440"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:36.444" level="INFO">${RESULT} = {'diff': [0.0004022080000000011, 0.0004023610000000004, 0.0004022370000000032, 0.0004021799999999985, 0.00040233300000000125, 0.00040218100000000145, 0.00040227799999999897, 0.00040237499999999995, 0....</msg>
<status status="PASS" starttime="20201030 11:50:36.441" endtime="20201030 11:50:36.444"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:36.448" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:36.447" endtime="20201030 11:50:36.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:36.451" level="INFO">VALUE: [0.0004022080000000011, 0.0004023610000000004, 0.0004022370000000032, 0.0004021799999999985, 0.00040233300000000125, 0.00040218100000000145, 0.00040227799999999897, 0.00040237499999999995, 0.0004021249999999997, 0.0004022220000000007, 0.000402195000000001, 0.0004021669999999984, 0.00040227799999999897, 0.00040219400000000155, 0.00040234699999999735, 0.00040219400000000155, 0.00040219499999999755, 0.0004023329999999978, 0.0004022639999999994, 0.0004022090000000006, 0.0004021389999999993, 0.00040215299999999884, 0.0004021799999999985, 0.00040230499999999864, 0.000402180999999998, 0.00040205599999999786, 0.000402195000000001, 0.00040218100000000145, 0.0004022090000000006, 0.0004021530000000023, 0.0004021120000000031, 0.0004021530000000023, 0.0004022080000000011, 0.00040223600000000026, 0.0004021389999999958, 0.00040218100000000145, 0.0004021389999999958, 0.0004021530000000023, 0.0004021529999999954, 0.00040213900000000274, 0.0004023749999999965, 0.0004022639999999994, 0.0004022090000000006, 0.00040212499999999624, 0.00040224999999999983, 0.0004023189999999982, 0.00040223600000000026, 0.0004023059999999981, 0.00040206899999999796, 0.0004020409999999988]</msg>
<status status="PASS" starttime="20201030 11:50:36.449" endtime="20201030 11:50:36.452"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.445" endtime="20201030 11:50:36.453"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.082" endtime="20201030 11:50:36.453"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.059" endtime="20201030 11:50:36.453"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:36.456" endtime="20201030 11:50:36.475"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.454" endtime="20201030 11:50:36.476"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:36.483" endtime="20201030 11:50:36.521"></status>
</kw>
<msg timestamp="20201030 11:50:36.522" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:36.482" endtime="20201030 11:50:36.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:36.524" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:36.523" endtime="20201030 11:50:36.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:36.525" endtime="20201030 11:50:36.527"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.479" endtime="20201030 11:50:36.527"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.477" endtime="20201030 11:50:36.528"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:36.534" endtime="20201030 11:50:36.818"></status>
</kw>
<msg timestamp="20201030 11:50:36.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021402431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021829458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:36.533" endtime="20201030 11:50:36.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:36.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021402431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021829458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:36.822" endtime="20201030 11:50:36.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:36.830" endtime="20201030 11:50:36.832"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.530" endtime="20201030 11:50:36.833"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.528" endtime="20201030 11:50:36.833"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:36.837" level="INFO">${PHILIP_RES} = [{'diff': 0.00042702699999999996}, {'diff': 0.000426944000000002}, {'diff': 0.00042705600000000205}, {'diff': 0.0004270000000000003}, {'diff': 0.0004270969999999978}, {'diff': 0.0004269579999999981}, ...</msg>
<status status="PASS" starttime="20201030 11:50:36.834" endtime="20201030 11:50:36.837"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:36.841" level="INFO">${RESULT} = {'diff': [0.00042702699999999996, 0.000426944000000002, 0.00042705600000000205, 0.0004270000000000003, 0.0004270969999999978, 0.0004269579999999981, 0.00042708299999999824, 0.00042683300000000146, 0.0...</msg>
<status status="PASS" starttime="20201030 11:50:36.838" endtime="20201030 11:50:36.842"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:36.846" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:36.845" endtime="20201030 11:50:36.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:36.849" level="INFO">VALUE: [0.00042702699999999996, 0.000426944000000002, 0.00042705600000000205, 0.0004270000000000003, 0.0004270969999999978, 0.0004269579999999981, 0.00042708299999999824, 0.00042683300000000146, 0.00042706899999999867, 0.00042701399999999987, 0.00042701399999999987, 0.0004269999999999968, 0.00042694399999999855, 0.0004270000000000003, 0.0004270000000000003, 0.00042701399999999987, 0.0004268610000000006, 0.0004269719999999977, 0.00042701399999999987, 0.00042690199999999984, 0.00042701399999999987, 0.0004269169999999989, 0.00042704199999999554, 0.00042687500000000017, 0.00042694500000000496, 0.00042693099999999845, 0.00042686099999999366, 0.0004270830000000017, 0.0004269860000000042, 0.0004269860000000042, 0.00042698599999999726, 0.0004268060000000018, 0.0004270139999999964, 0.0004269720000000046, 0.0004269579999999981, 0.00042704199999999554, 0.00042694500000000496, 0.0004270700000000016, 0.00042706900000000214, 0.0004270689999999952, 0.0004269730000000041, 0.00042688899999999974, 0.0004269860000000042, 0.00042695900000000453, 0.00042708299999999477, 0.0004269720000000046, 0.00042698599999999726, 0.0004269719999999977, 0.00042693099999999845, 0.000426944999999998]</msg>
<status status="PASS" starttime="20201030 11:50:36.847" endtime="20201030 11:50:36.850"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.842" endtime="20201030 11:50:36.850"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.476" endtime="20201030 11:50:36.851"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.454" endtime="20201030 11:50:36.851"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:36.854" endtime="20201030 11:50:36.873"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.852" endtime="20201030 11:50:36.874"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:36.882" endtime="20201030 11:50:36.918"></status>
</kw>
<msg timestamp="20201030 11:50:36.919" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:36.880" endtime="20201030 11:50:36.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:36.921" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:36.920" endtime="20201030 11:50:36.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:36.922" endtime="20201030 11:50:36.924"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.878" endtime="20201030 11:50:36.924"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.876" endtime="20201030 11:50:36.925"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:36.931" endtime="20201030 11:50:37.230"></status>
</kw>
<msg timestamp="20201030 11:50:37.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020166736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020619431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:36.930" endtime="20201030 11:50:37.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:37.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020166736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020619431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:37.235" endtime="20201030 11:50:37.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:37.243" endtime="20201030 11:50:37.244"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.927" endtime="20201030 11:50:37.245"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.925" endtime="20201030 11:50:37.245"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:37.249" level="INFO">${PHILIP_RES} = [{'diff': 0.0004526949999999995}, {'diff': 0.0004527499999999983}, {'diff': 0.00045275000000000176}, {'diff': 0.00045252800000000065}, {'diff': 0.0004527780000000009}, {'diff': 0.00045262500000000164}...</msg>
<status status="PASS" starttime="20201030 11:50:37.246" endtime="20201030 11:50:37.249"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:37.253" level="INFO">${RESULT} = {'diff': [0.0004526949999999995, 0.0004527499999999983, 0.00045275000000000176, 0.00045252800000000065, 0.0004527780000000009, 0.00045262500000000164, 0.00045262499999999817, 0.0004526390000000012, 0....</msg>
<status status="PASS" starttime="20201030 11:50:37.250" endtime="20201030 11:50:37.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:37.257" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:37.256" endtime="20201030 11:50:37.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:37.260" level="INFO">VALUE: [0.0004526949999999995, 0.0004527499999999983, 0.00045275000000000176, 0.00045252800000000065, 0.0004527780000000009, 0.00045262500000000164, 0.00045262499999999817, 0.0004526390000000012, 0.00045259699999999903, 0.000452694, 0.00045261200000000154, 0.00045266700000000035, 0.0004526390000000012, 0.00045263899999999774, 0.00045262500000000164, 0.0004526530000000008, 0.0004525559999999998, 0.0004526530000000008, 0.0004525559999999998, 0.0004525689999999999, 0.0004526529999999973, 0.000452694, 0.0004526809999999999, 0.00045259699999999903, 0.00045256999999999936, 0.00045258299999999946, 0.0004526529999999973, 0.00045276400000000133, 0.0004526109999999986, 0.0004526250000000051, 0.0004526529999999973, 0.00045263899999999774, 0.00045273700000000167, 0.00045262499999999817, 0.0004526669999999969, 0.00045263899999999774, 0.0004527360000000022, 0.00045269500000000296, 0.00045270800000000305, 0.00045258399999999893, 0.0004526529999999973, 0.0004526940000000035, 0.0004525689999999999, 0.0004526669999999969, 0.00045248600000000194, 0.0004527220000000026, 0.00045263899999999774, 0.0004527220000000026, 0.0004525830000000064, 0.0004527079999999961]</msg>
<status status="PASS" starttime="20201030 11:50:37.258" endtime="20201030 11:50:37.260"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.254" endtime="20201030 11:50:37.261"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.874" endtime="20201030 11:50:37.261"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.851" endtime="20201030 11:50:37.262"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:37.264" endtime="20201030 11:50:37.283"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.263" endtime="20201030 11:50:37.284"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:37.292" endtime="20201030 11:50:37.326"></status>
</kw>
<msg timestamp="20201030 11:50:37.326" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:37.290" endtime="20201030 11:50:37.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:37.329" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:37.327" endtime="20201030 11:50:37.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:37.330" endtime="20201030 11:50:37.332"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.288" endtime="20201030 11:50:37.333"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.286" endtime="20201030 11:50:37.333"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:37.340" endtime="20201030 11:50:37.625"></status>
</kw>
<msg timestamp="20201030 11:50:37.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016755292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017234569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:37.338" endtime="20201030 11:50:37.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:37.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016755292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017234569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:37.629" endtime="20201030 11:50:37.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:37.637" endtime="20201030 11:50:37.639"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.336" endtime="20201030 11:50:37.639"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.334" endtime="20201030 11:50:37.640"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:37.644" level="INFO">${PHILIP_RES} = [{'diff': 0.0004792770000000002}, {'diff': 0.0004793470000000015}, {'diff': 0.00047933299999999845}, {'diff': 0.00047920799999999833}, {'diff': 0.00047911099999999734}, {'diff': 0.0004792640000000001}...</msg>
<status status="PASS" starttime="20201030 11:50:37.641" endtime="20201030 11:50:37.644"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:37.648" level="INFO">${RESULT} = {'diff': [0.0004792770000000002, 0.0004793470000000015, 0.00047933299999999845, 0.00047920799999999833, 0.00047911099999999734, 0.0004792640000000001, 0.0004793470000000015, 0.00047918099999999866, 0....</msg>
<status status="PASS" starttime="20201030 11:50:37.645" endtime="20201030 11:50:37.648"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:37.652" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:37.651" endtime="20201030 11:50:37.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:37.654" level="INFO">VALUE: [0.0004792770000000002, 0.0004793470000000015, 0.00047933299999999845, 0.00047920799999999833, 0.00047911099999999734, 0.0004792640000000001, 0.0004793470000000015, 0.00047918099999999866, 0.0004791799999999992, 0.0004792640000000001, 0.00047923599999999747, 0.0004794590000000015, 0.00047923599999999747, 0.0004791669999999991, 0.0004790700000000016, 0.000478944999999998, 0.00047919400000000223, 0.0004791659999999996, 0.0004791799999999992, 0.0004790829999999982, 0.0004790700000000016, 0.00047918000000000266, 0.0004791529999999995, 0.0004791110000000008, 0.0004792370000000004, 0.0004793059999999988, 0.0004792640000000001, 0.0004791529999999995, 0.0004790829999999982, 0.00047922200000000137, 0.0004791110000000043, 0.00047933299999999845, 0.0004791520000000035, 0.00047923600000000094, 0.0004791520000000035, 0.0004793049999999993, 0.000479153000000003, 0.0004792640000000001, 0.00047916700000000256, 0.0004792500000000005, 0.0004793049999999993, 0.0004791249999999969, 0.00047922199999999443, 0.0004791669999999956, 0.0004791950000000017, 0.00047922300000000084, 0.0004791519999999966, 0.000479235999999994, 0.0004793049999999993, 0.0004792919999999992]</msg>
<status status="PASS" starttime="20201030 11:50:37.653" endtime="20201030 11:50:37.656"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.648" endtime="20201030 11:50:37.657"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.284" endtime="20201030 11:50:37.657"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.262" endtime="20201030 11:50:37.657"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:37.660" endtime="20201030 11:50:37.679"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.658" endtime="20201030 11:50:37.680"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:37.687" endtime="20201030 11:50:37.728"></status>
</kw>
<msg timestamp="20201030 11:50:37.728" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:37.686" endtime="20201030 11:50:37.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:37.730" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:37.729" endtime="20201030 11:50:37.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:37.732" endtime="20201030 11:50:37.733"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.683" endtime="20201030 11:50:37.734"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.682" endtime="20201030 11:50:37.734"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:37.740" endtime="20201030 11:50:38.043"></status>
</kw>
<msg timestamp="20201030 11:50:38.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018126625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018632958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:37.739" endtime="20201030 11:50:38.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:38.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018126625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018632958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:38.047" endtime="20201030 11:50:38.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:38.056" endtime="20201030 11:50:38.057"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.736" endtime="20201030 11:50:38.058"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.735" endtime="20201030 11:50:38.058"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:38.062" level="INFO">${PHILIP_RES} = [{'diff': 0.0005063330000000012}, {'diff': 0.0005063330000000012}, {'diff': 0.000506305999999998}, {'diff': 0.0005062779999999989}, {'diff': 0.0005062499999999998}, {'diff': 0.0005062919999999985}, {'...</msg>
<status status="PASS" starttime="20201030 11:50:38.059" endtime="20201030 11:50:38.062"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:38.067" level="INFO">${RESULT} = {'diff': [0.0005063330000000012, 0.0005063330000000012, 0.000506305999999998, 0.0005062779999999989, 0.0005062499999999998, 0.0005062919999999985, 0.0005061809999999979, 0.0005062230000000001, 0.00050...</msg>
<status status="PASS" starttime="20201030 11:50:38.063" endtime="20201030 11:50:38.067"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:38.071" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:38.070" endtime="20201030 11:50:38.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:38.073" level="INFO">VALUE: [0.0005063330000000012, 0.0005063330000000012, 0.000506305999999998, 0.0005062779999999989, 0.0005062499999999998, 0.0005062919999999985, 0.0005061809999999979, 0.0005062230000000001, 0.0005063049999999986, 0.0005061389999999992, 0.0005062090000000005, 0.0005062360000000002, 0.0005062360000000002, 0.0005062360000000002, 0.0005062639999999993, 0.0005063049999999986, 0.000506305999999998, 0.0005062500000000032, 0.0005062499999999998, 0.0005061799999999984, 0.0005060689999999979, 0.0005062360000000002, 0.0005062639999999993, 0.0005062360000000002, 0.000506193999999998, 0.0005061530000000022, 0.0005061530000000022, 0.000506305999999998, 0.0005063610000000038, 0.0005061389999999957, 0.0005062220000000006, 0.0005061390000000027, 0.0005063339999999972, 0.0005063189999999981, 0.0005062779999999989, 0.0005063049999999986, 0.0005062780000000058, 0.0005060829999999975, 0.0005062220000000006, 0.0005061519999999958, 0.0005062360000000002, 0.0005062920000000054, 0.0005062779999999989, 0.0005062360000000002, 0.0005061529999999953, 0.0005063609999999968, 0.000506195000000001, 0.0005061250000000031, 0.000506208000000001, 0.0005062920000000054]</msg>
<status status="PASS" starttime="20201030 11:50:38.072" endtime="20201030 11:50:38.074"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.068" endtime="20201030 11:50:38.075"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.680" endtime="20201030 11:50:38.075"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.658" endtime="20201030 11:50:38.075"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:38.078" endtime="20201030 11:50:38.097"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.076" endtime="20201030 11:50:38.098"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:38.106" endtime="20201030 11:50:38.144"></status>
</kw>
<msg timestamp="20201030 11:50:38.144" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:38.104" endtime="20201030 11:50:38.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:38.147" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:38.145" endtime="20201030 11:50:38.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:38.148" endtime="20201030 11:50:38.149"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.102" endtime="20201030 11:50:38.150"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.100" endtime="20201030 11:50:38.150"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:38.157" endtime="20201030 11:50:38.444"></status>
</kw>
<msg timestamp="20201030 11:50:38.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016987667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017521722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:38.155" endtime="20201030 11:50:38.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:38.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016987667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017521722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:38.448" endtime="20201030 11:50:38.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:38.456" endtime="20201030 11:50:38.458"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.153" endtime="20201030 11:50:38.459"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.151" endtime="20201030 11:50:38.459"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:38.463" level="INFO">${PHILIP_RES} = [{'diff': 0.0005340549999999986}, {'diff': 0.0005340279999999989}, {'diff': 0.0005340419999999985}, {'diff': 0.0005338749999999996}, {'diff': 0.0005340560000000015}, {'diff': 0.0005340970000000007}, {...</msg>
<status status="PASS" starttime="20201030 11:50:38.460" endtime="20201030 11:50:38.463"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:38.467" level="INFO">${RESULT} = {'diff': [0.0005340549999999986, 0.0005340279999999989, 0.0005340419999999985, 0.0005338749999999996, 0.0005340560000000015, 0.0005340970000000007, 0.0005338049999999983, 0.0005340139999999993, 0.0005...</msg>
<status status="PASS" starttime="20201030 11:50:38.464" endtime="20201030 11:50:38.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:38.471" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:38.470" endtime="20201030 11:50:38.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:38.473" level="INFO">VALUE: [0.0005340549999999986, 0.0005340279999999989, 0.0005340419999999985, 0.0005338749999999996, 0.0005340560000000015, 0.0005340970000000007, 0.0005338049999999983, 0.0005340139999999993, 0.000533943999999998, 0.0005338340000000004, 0.0005341389999999994, 0.0005340139999999993, 0.0005339020000000028, 0.0005341110000000003, 0.000533958999999997, 0.0005340129999999998, 0.0005339999999999998, 0.000534055999999998, 0.0005340139999999993, 0.0005339030000000022, 0.0005339310000000014, 0.0005341249999999999, 0.0005340689999999981, 0.0005340560000000015, 0.0005339440000000015, 0.0005338890000000027, 0.0005341250000000033, 0.0005338750000000031, 0.0005339720000000006, 0.0005340689999999981, 0.000533847000000004, 0.0005339860000000002, 0.0005340690000000051, 0.0005338050000000052, 0.0005339999999999998, 0.0005339999999999998, 0.0005340139999999993, 0.0005341109999999968, 0.0005340280000000058, 0.0005338749999999962, 0.0005339019999999958, 0.0005340269999999994, 0.000534055999999998, 0.0005341800000000022, 0.0005340279999999989, 0.0005340139999999993, 0.0005339860000000002, 0.0005339870000000066, 0.0005340419999999985, 0.0005339999999999998]</msg>
<status status="PASS" starttime="20201030 11:50:38.472" endtime="20201030 11:50:38.474"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.468" endtime="20201030 11:50:38.475"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.098" endtime="20201030 11:50:38.475"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.076" endtime="20201030 11:50:38.475"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:38.478" endtime="20201030 11:50:38.497"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.476" endtime="20201030 11:50:38.498"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:38.506" endtime="20201030 11:50:38.546"></status>
</kw>
<msg timestamp="20201030 11:50:38.546" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:38.504" endtime="20201030 11:50:38.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:38.549" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:38.547" endtime="20201030 11:50:38.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:38.550" endtime="20201030 11:50:38.552"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.502" endtime="20201030 11:50:38.553"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.500" endtime="20201030 11:50:38.553"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:38.560" endtime="20201030 11:50:38.862"></status>
</kw>
<msg timestamp="20201030 11:50:38.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018817958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0193805, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:50:38.558" endtime="20201030 11:50:38.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:38.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018817958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0193805, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:50:38.866" endtime="20201030 11:50:38.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:38.874" endtime="20201030 11:50:38.875"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.556" endtime="20201030 11:50:38.876"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.554" endtime="20201030 11:50:38.876"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:38.880" level="INFO">${PHILIP_RES} = [{'diff': 0.0005625419999999992}, {'diff': 0.000562306000000002}, {'diff': 0.000562291999999999}, {'diff': 0.0005623329999999982}, {'diff': 0.0005623480000000007}, {'diff': 0.0005622780000000029}, {'d...</msg>
<status status="PASS" starttime="20201030 11:50:38.877" endtime="20201030 11:50:38.880"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:38.884" level="INFO">${RESULT} = {'diff': [0.0005625419999999992, 0.000562306000000002, 0.000562291999999999, 0.0005623329999999982, 0.0005623480000000007, 0.0005622780000000029, 0.0005626390000000002, 0.0005623479999999972, 0.000562...</msg>
<status status="PASS" starttime="20201030 11:50:38.881" endtime="20201030 11:50:38.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:38.888" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:38.887" endtime="20201030 11:50:38.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:38.891" level="INFO">VALUE: [0.0005625419999999992, 0.000562306000000002, 0.000562291999999999, 0.0005623329999999982, 0.0005623480000000007, 0.0005622780000000029, 0.0005626390000000002, 0.0005623479999999972, 0.0005623340000000011, 0.0005623199999999981, 0.000562291999999999, 0.0005621809999999984, 0.0005623620000000003, 0.0005622500000000002, 0.0005625279999999996, 0.0005623329999999982, 0.0005622780000000029, 0.0005623480000000007, 0.0005622079999999981, 0.0005623480000000007, 0.0005622499999999968, 0.0005622779999999994, 0.0005624170000000026, 0.0005623339999999977, 0.0005624719999999944, 0.000562387999999997, 0.0005625000000000005, 0.0005622360000000007, 0.0005625829999999984, 0.0005623059999999985, 0.0005623749999999969, 0.0005622500000000002, 0.0005623060000000055, 0.0005623749999999969, 0.0005624299999999957, 0.0005623199999999981, 0.0005625000000000005, 0.0005622220000000011, 0.0005623750000000038, 0.0005623469999999978, 0.0005622500000000002, 0.0005624169999999956, 0.0005625140000000001, 0.0005623329999999982, 0.000562402999999996, 0.0005623889999999965, 0.0005623189999999986, 0.000562403000000003, 0.0005623889999999965, 0.0005625140000000001]</msg>
<status status="PASS" starttime="20201030 11:50:38.889" endtime="20201030 11:50:38.892"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.885" endtime="20201030 11:50:38.893"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.498" endtime="20201030 11:50:38.893"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.476" endtime="20201030 11:50:38.893"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:38.896" endtime="20201030 11:50:38.915"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.894" endtime="20201030 11:50:38.916"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:38.924" endtime="20201030 11:50:38.963"></status>
</kw>
<msg timestamp="20201030 11:50:38.964" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:38.922" endtime="20201030 11:50:38.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:38.966" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:38.965" endtime="20201030 11:50:38.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:38.967" endtime="20201030 11:50:38.969"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.920" endtime="20201030 11:50:38.969"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.918" endtime="20201030 11:50:38.970"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:38.976" endtime="20201030 11:50:39.262"></status>
</kw>
<msg timestamp="20201030 11:50:39.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017813347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018404694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:38.975" endtime="20201030 11:50:39.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:39.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017813347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018404694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:39.266" endtime="20201030 11:50:39.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:39.274" endtime="20201030 11:50:39.276"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.972" endtime="20201030 11:50:39.276"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.970" endtime="20201030 11:50:39.277"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:39.280" level="INFO">${PHILIP_RES} = [{'diff': 0.000591346999999999}, {'diff': 0.0005914030000000008}, {'diff': 0.0005913609999999986}, {'diff': 0.0005914719999999991}, {'diff': 0.0005915829999999997}, {'diff': 0.0005914859999999987}, {'...</msg>
<status status="PASS" starttime="20201030 11:50:39.277" endtime="20201030 11:50:39.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:39.285" level="INFO">${RESULT} = {'diff': [0.000591346999999999, 0.0005914030000000008, 0.0005913609999999986, 0.0005914719999999991, 0.0005915829999999997, 0.0005914859999999987, 0.000591444, 0.0005914579999999996, 0.000591526999999...</msg>
<status status="PASS" starttime="20201030 11:50:39.282" endtime="20201030 11:50:39.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:39.290" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:39.289" endtime="20201030 11:50:39.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:39.292" level="INFO">VALUE: [0.000591346999999999, 0.0005914030000000008, 0.0005913609999999986, 0.0005914719999999991, 0.0005915829999999997, 0.0005914859999999987, 0.000591444, 0.0005914579999999996, 0.0005915269999999979, 0.0005915280000000009, 0.0005915139999999978, 0.0005914579999999996, 0.0005914160000000009, 0.0005914309999999999, 0.000591444, 0.0005914309999999999, 0.0005915550000000006, 0.0005914449999999995, 0.000591429999999997, 0.0005915270000000014, 0.0005914160000000009, 0.0005914170000000003, 0.0005913889999999977, 0.0005914860000000022, 0.0005914720000000026, 0.000591667000000004, 0.0005913059999999998, 0.0005914589999999956, 0.0005913479999999985, 0.0005915420000000005, 0.0005913749999999982, 0.0005914999999999948, 0.0005913609999999986, 0.0005912779999999937, 0.000591556, 0.0005913610000000055, 0.0005914029999999973, 0.0005914590000000025, 0.0005915139999999944, 0.0005913889999999977, 0.0005915139999999944, 0.000591556, 0.0005913189999999999, 0.0005915699999999996, 0.0005915690000000001, 0.0005915420000000005, 0.0005914029999999973, 0.0005915280000000009, 0.0005915000000000017, 0.000591458000000003]</msg>
<status status="PASS" starttime="20201030 11:50:39.291" endtime="20201030 11:50:39.293"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.286" endtime="20201030 11:50:39.293"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.916" endtime="20201030 11:50:39.294"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.894" endtime="20201030 11:50:39.294"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:39.296" endtime="20201030 11:50:39.316"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.295" endtime="20201030 11:50:39.316"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:39.324" endtime="20201030 11:50:39.370"></status>
</kw>
<msg timestamp="20201030 11:50:39.370" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:39.323" endtime="20201030 11:50:39.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:39.373" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:39.371" endtime="20201030 11:50:39.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:39.374" endtime="20201030 11:50:39.375"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.320" endtime="20201030 11:50:39.376"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.318" endtime="20201030 11:50:39.376"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:39.383" endtime="20201030 11:50:39.678"></status>
</kw>
<msg timestamp="20201030 11:50:39.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019258042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019879486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:39.381" endtime="20201030 11:50:39.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:39.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019258042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019879486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:39.683" endtime="20201030 11:50:39.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:39.691" endtime="20201030 11:50:39.692"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.378" endtime="20201030 11:50:39.693"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.377" endtime="20201030 11:50:39.693"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:39.697" level="INFO">${PHILIP_RES} = [{'diff': 0.0006214439999999988}, {'diff': 0.0006212779999999994}, {'diff': 0.0006214450000000017}, {'diff': 0.0006215279999999997}, {'diff': 0.0006212500000000003}, {'diff': 0.000621389}, {'diff': 0....</msg>
<status status="PASS" starttime="20201030 11:50:39.694" endtime="20201030 11:50:39.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:39.701" level="INFO">${RESULT} = {'diff': [0.0006214439999999988, 0.0006212779999999994, 0.0006214450000000017, 0.0006215279999999997, 0.0006212500000000003, 0.000621389, 0.0006213200000000016, 0.0006212360000000007, 0.00062134799999...</msg>
<status status="PASS" starttime="20201030 11:50:39.698" endtime="20201030 11:50:39.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:39.705" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:39.704" endtime="20201030 11:50:39.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:39.708" level="INFO">VALUE: [0.0006214439999999988, 0.0006212779999999994, 0.0006214450000000017, 0.0006215279999999997, 0.0006212500000000003, 0.000621389, 0.0006213200000000016, 0.0006212360000000007, 0.0006213479999999973, 0.0006215000000000005, 0.0006215279999999997, 0.0006214999999999971, 0.0006213750000000004, 0.0006213329999999982, 0.0006214440000000022, 0.0006214590000000013, 0.0006213190000000021, 0.0006213059999999986, 0.0006214029999999995, 0.0006214309999999987, 0.0006214589999999978, 0.0006214719999999979, 0.0006214859999999975, 0.0006212919999999955, 0.0006214159999999996, 0.0006212779999999959, 0.0006213610000000008, 0.0006213330000000017, 0.0006214029999999995, 0.0006213200000000016, 0.0006213190000000021, 0.0006212640000000033, 0.0006214029999999995, 0.0006214859999999975, 0.0006214299999999992, 0.0006214580000000053, 0.0006213470000000013, 0.0006213469999999943, 0.0006214999999999971, 0.0006213609999999939, 0.000621389, 0.0006214029999999995, 0.0006213610000000008, 0.0006213750000000004, 0.000621291000000003, 0.0006214720000000049, 0.0006214159999999996, 0.0006215139999999966, 0.0006214159999999996, 0.0006214029999999995]</msg>
<status status="PASS" starttime="20201030 11:50:39.706" endtime="20201030 11:50:39.709"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.702" endtime="20201030 11:50:39.709"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.317" endtime="20201030 11:50:39.710"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.294" endtime="20201030 11:50:39.710"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:39.712" endtime="20201030 11:50:39.731"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.711" endtime="20201030 11:50:39.732"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:39.740" endtime="20201030 11:50:39.787"></status>
</kw>
<msg timestamp="20201030 11:50:39.787" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:39.738" endtime="20201030 11:50:39.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:39.789" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:39.788" endtime="20201030 11:50:39.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:39.791" endtime="20201030 11:50:39.795"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.736" endtime="20201030 11:50:39.796"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.734" endtime="20201030 11:50:39.796"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:39.803" endtime="20201030 11:50:40.089"></status>
</kw>
<msg timestamp="20201030 11:50:40.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020370847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021022889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:39.801" endtime="20201030 11:50:40.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:40.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020370847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021022889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:40.094" endtime="20201030 11:50:40.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:40.102" endtime="20201030 11:50:40.103"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.799" endtime="20201030 11:50:40.104"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.797" endtime="20201030 11:50:40.104"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:40.108" level="INFO">${PHILIP_RES} = [{'diff': 0.0006520419999999985}, {'diff': 0.0006521529999999991}, {'diff': 0.0006519999999999998}, {'diff': 0.0006521110000000004}, {'diff': 0.0006520970000000008}, {'diff': 0.0006520410000000025}, {...</msg>
<status status="PASS" starttime="20201030 11:50:40.105" endtime="20201030 11:50:40.108"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:40.112" level="INFO">${RESULT} = {'diff': [0.0006520419999999985, 0.0006521529999999991, 0.0006519999999999998, 0.0006521110000000004, 0.0006520970000000008, 0.0006520410000000025, 0.0006520419999999985, 0.0006520830000000012, 0.0006...</msg>
<status status="PASS" starttime="20201030 11:50:40.109" endtime="20201030 11:50:40.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:40.116" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:40.115" endtime="20201030 11:50:40.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:40.119" level="INFO">VALUE: [0.0006520419999999985, 0.0006521529999999991, 0.0006519999999999998, 0.0006521110000000004, 0.0006520970000000008, 0.0006520410000000025, 0.0006520419999999985, 0.0006520830000000012, 0.0006521110000000004, 0.0006520980000000003, 0.0006519580000000011, 0.0006521249999999999, 0.0006520690000000016, 0.0006521110000000004, 0.0006520270000000029, 0.0006521669999999986, 0.0006520139999999994, 0.000652139000000003, 0.0006519860000000002, 0.0006519999999999998, 0.0006519730000000001, 0.0006519169999999949, 0.0006519580000000011, 0.0006520419999999985, 0.0006520699999999977, 0.000652139000000003, 0.0006522779999999992, 0.0006518610000000036, 0.0006520419999999985, 0.0006520969999999973, 0.0006519999999999998, 0.0006521530000000025, 0.0006519730000000001, 0.0006519860000000002, 0.0006520559999999981, 0.0006520279999999989, 0.0006520559999999981, 0.0006520549999999986, 0.0006518610000000036, 0.0006519719999999937, 0.0006519580000000011, 0.0006521670000000021, 0.0006521249999999965, 0.0006522919999999988, 0.0006521810000000017, 0.0006520839999999972, 0.0006520969999999973, 0.0006520700000000046, 0.000651945000000001, 0.0006518890000000027]</msg>
<status status="PASS" starttime="20201030 11:50:40.117" endtime="20201030 11:50:40.120"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.113" endtime="20201030 11:50:40.121"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.733" endtime="20201030 11:50:40.121"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.710" endtime="20201030 11:50:40.121"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:40.124" endtime="20201030 11:50:40.143"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.122" endtime="20201030 11:50:40.143"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:40.151" endtime="20201030 11:50:40.199"></status>
</kw>
<msg timestamp="20201030 11:50:40.200" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:40.150" endtime="20201030 11:50:40.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:40.202" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:40.201" endtime="20201030 11:50:40.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:40.203" endtime="20201030 11:50:40.205"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.147" endtime="20201030 11:50:40.205"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.145" endtime="20201030 11:50:40.206"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:40.212" endtime="20201030 11:50:40.512"></status>
</kw>
<msg timestamp="20201030 11:50:40.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020899528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021582903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:40.211" endtime="20201030 11:50:40.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:40.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020899528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021582903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:40.516" endtime="20201030 11:50:40.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:40.524" endtime="20201030 11:50:40.525"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.208" endtime="20201030 11:50:40.526"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.206" endtime="20201030 11:50:40.526"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:40.530" level="INFO">${PHILIP_RES} = [{'diff': 0.000683375}, {'diff': 0.000683375}, {'diff': 0.0006832230000000002}, {'diff': 0.0006833470000000008}, {'diff': 0.0006834720000000009}, {'diff': 0.0006833470000000008}, {'diff': 0.0006832909...</msg>
<status status="PASS" starttime="20201030 11:50:40.527" endtime="20201030 11:50:40.530"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:40.535" level="INFO">${RESULT} = {'diff': [0.000683375, 0.000683375, 0.0006832230000000002, 0.0006833470000000008, 0.0006834720000000009, 0.0006833470000000008, 0.0006832909999999991, 0.0006834170000000021, 0.0006834309999999982, 0.0...</msg>
<status status="PASS" starttime="20201030 11:50:40.531" endtime="20201030 11:50:40.535"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:40.539" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:40.538" endtime="20201030 11:50:40.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:40.541" level="INFO">VALUE: [0.000683375, 0.000683375, 0.0006832230000000002, 0.0006833470000000008, 0.0006834720000000009, 0.0006833470000000008, 0.0006832909999999991, 0.0006834170000000021, 0.0006834309999999982, 0.0006833059999999981, 0.0006831110000000001, 0.0006831389999999993, 0.0006833189999999982, 0.0006833329999999978, 0.0006831939999999981, 0.0006832360000000037, 0.000683375, 0.0006834169999999987, 0.0006831939999999981, 0.000683375, 0.000683485999999997, 0.0006834159999999992, 0.0006833059999999946, 0.0006832359999999968, 0.0006834590000000043, 0.0006832080000000046, 0.0006832910000000025, 0.0006834579999999979, 0.0006833470000000008, 0.0006833200000000011, 0.0006833340000000007, 0.0006834019999999996, 0.0006834029999999991, 0.0006833609999999934, 0.0006832220000000042, 0.0006832360000000037, 0.0006832640000000029, 0.0006832499999999964, 0.0006831249999999997, 0.0006833339999999938, 0.0006833060000000016, 0.000683375, 0.0006832640000000029, 0.0006834159999999992, 0.0006832910000000025, 0.0006832229999999967, 0.0006833200000000011, 0.0006831659999999989, 0.0006831810000000049, 0.0006832359999999968]</msg>
<status status="PASS" starttime="20201030 11:50:40.540" endtime="20201030 11:50:40.548"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.536" endtime="20201030 11:50:40.549"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.144" endtime="20201030 11:50:40.549"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.122" endtime="20201030 11:50:40.549"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:40.552" endtime="20201030 11:50:40.571"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.550" endtime="20201030 11:50:40.572"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:40.580" endtime="20201030 11:50:40.631"></status>
</kw>
<msg timestamp="20201030 11:50:40.631" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:40.578" endtime="20201030 11:50:40.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:40.634" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:40.632" endtime="20201030 11:50:40.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:40.635" endtime="20201030 11:50:40.636"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.576" endtime="20201030 11:50:40.637"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.574" endtime="20201030 11:50:40.637"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:40.644" endtime="20201030 11:50:40.930"></status>
</kw>
<msg timestamp="20201030 11:50:40.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019571194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02028675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:40.642" endtime="20201030 11:50:40.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:40.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019571194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02028675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:40.934" endtime="20201030 11:50:40.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:40.943" endtime="20201030 11:50:40.945"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.639" endtime="20201030 11:50:40.945"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.638" endtime="20201030 11:50:40.946"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:40.950" level="INFO">${PHILIP_RES} = [{'diff': 0.0007155559999999991}, {'diff': 0.0007156949999999988}, {'diff': 0.0007156390000000006}, {'diff': 0.0007156109999999979}, {'diff': 0.0007153749999999973}, {'diff': 0.0007153469999999981}, {...</msg>
<status status="PASS" starttime="20201030 11:50:40.946" endtime="20201030 11:50:40.950"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:40.954" level="INFO">${RESULT} = {'diff': [0.0007155559999999991, 0.0007156949999999988, 0.0007156390000000006, 0.0007156109999999979, 0.0007153749999999973, 0.0007153469999999981, 0.0007153199999999985, 0.0007154299999999995, 0.0007...</msg>
<status status="PASS" starttime="20201030 11:50:40.951" endtime="20201030 11:50:40.954"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:40.958" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:40.957" endtime="20201030 11:50:40.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:40.960" level="INFO">VALUE: [0.0007155559999999991, 0.0007156949999999988, 0.0007156390000000006, 0.0007156109999999979, 0.0007153749999999973, 0.0007153469999999981, 0.0007153199999999985, 0.0007154299999999995, 0.0007153610000000012, 0.000715236000000001, 0.0007151529999999996, 0.000715445000000002, 0.000715318999999999, 0.0007151940000000023, 0.0007154449999999986, 0.0007152640000000002, 0.0007154019999999969, 0.000715318999999999, 0.0007153329999999986, 0.0007153479999999976, 0.0007153329999999986, 0.0007150829999999983, 0.000715318999999999, 0.0007152640000000002, 0.0007151949999999949, 0.0007151670000000027, 0.0007152220000000015, 0.0007152220000000015, 0.0007152500000000006, 0.0007155410000000001, 0.0007153059999999989, 0.0007153889999999968, 0.0007152080000000019, 0.0007153749999999973, 0.0007152219999999945, 0.0007153609999999977, 0.0007154170000000029, 0.0007152639999999932, 0.000715236000000001, 0.0007152779999999997, 0.0007151939999999954, 0.000715416999999996, 0.0007153750000000042, 0.0007153750000000042, 0.0007153889999999968, 0.0007155000000000009, 0.0007153190000000059, 0.0007154310000000025, 0.0007153199999999985, 0.0007154580000000021]</msg>
<status status="PASS" starttime="20201030 11:50:40.959" endtime="20201030 11:50:40.961"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.955" endtime="20201030 11:50:40.962"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.572" endtime="20201030 11:50:40.962"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.550" endtime="20201030 11:50:40.962"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:40.965" endtime="20201030 11:50:40.984"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.963" endtime="20201030 11:50:40.985"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:40.993" endtime="20201030 11:50:41.044"></status>
</kw>
<msg timestamp="20201030 11:50:41.044" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:40.991" endtime="20201030 11:50:41.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:41.047" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:41.045" endtime="20201030 11:50:41.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:41.048" endtime="20201030 11:50:41.050"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.989" endtime="20201030 11:50:41.051"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.987" endtime="20201030 11:50:41.051"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:41.057" endtime="20201030 11:50:41.356"></status>
</kw>
<msg timestamp="20201030 11:50:41.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018694375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019442806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:41.056" endtime="20201030 11:50:41.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:41.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018694375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019442806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:41.361" endtime="20201030 11:50:41.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:41.369" endtime="20201030 11:50:41.370"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.053" endtime="20201030 11:50:41.371"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.052" endtime="20201030 11:50:41.371"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:41.375" level="INFO">${PHILIP_RES} = [{'diff': 0.0007484310000000008}, {'diff': 0.0007485560000000009}, {'diff': 0.0007483059999999972}, {'diff': 0.0007484170000000012}, {'diff': 0.0007482919999999976}, {'diff': 0.0007482920000000011}, {...</msg>
<status status="PASS" starttime="20201030 11:50:41.372" endtime="20201030 11:50:41.375"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:41.379" level="INFO">${RESULT} = {'diff': [0.0007484310000000008, 0.0007485560000000009, 0.0007483059999999972, 0.0007484170000000012, 0.0007482919999999976, 0.0007482920000000011, 0.0007483339999999998, 0.0007483889999999986, 0.0007...</msg>
<status status="PASS" starttime="20201030 11:50:41.376" endtime="20201030 11:50:41.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:41.383" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:41.382" endtime="20201030 11:50:41.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:41.386" level="INFO">VALUE: [0.0007484310000000008, 0.0007485560000000009, 0.0007483059999999972, 0.0007484170000000012, 0.0007482919999999976, 0.0007482920000000011, 0.0007483339999999998, 0.0007483889999999986, 0.0007483050000000012, 0.0007484589999999999, 0.0007482779999999981, 0.0007483060000000007, 0.0007482359999999993, 0.0007483879999999991, 0.0007483060000000007, 0.0007484719999999966, 0.0007484999999999992, 0.0007483470000000034, 0.0007483750000000025, 0.0007484020000000022, 0.0007484030000000017, 0.0007483610000000029, 0.0007484310000000008, 0.0007486109999999963, 0.0007484160000000017, 0.0007484310000000008, 0.0007483199999999968, 0.0007483190000000042, 0.0007482219999999998, 0.0007483750000000025, 0.0007484170000000012, 0.0007483610000000029, 0.0007483469999999964, 0.0007484030000000017, 0.000748554999999998, 0.0007484300000000013, 0.000748472, 0.0007483890000000021, 0.0007484450000000004, 0.000748360999999996, 0.0007483469999999964, 0.0007484030000000017, 0.000748472, 0.0007482909999999982, 0.0007481940000000006, 0.0007481110000000027, 0.0007481250000000023, 0.0007479999999999987, 0.000748068999999997, 0.0007480139999999982]</msg>
<status status="PASS" starttime="20201030 11:50:41.384" endtime="20201030 11:50:41.387"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.380" endtime="20201030 11:50:41.388"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.985" endtime="20201030 11:50:41.388"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.963" endtime="20201030 11:50:41.388"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:41.391" endtime="20201030 11:50:41.410"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.389" endtime="20201030 11:50:41.411"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:41.419" endtime="20201030 11:50:41.470"></status>
</kw>
<msg timestamp="20201030 11:50:41.471" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:41.417" endtime="20201030 11:50:41.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:41.473" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:41.472" endtime="20201030 11:50:41.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:41.474" endtime="20201030 11:50:41.476"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.415" endtime="20201030 11:50:41.476"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.413" endtime="20201030 11:50:41.477"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:41.483" endtime="20201030 11:50:41.768"></status>
</kw>
<msg timestamp="20201030 11:50:41.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019821236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020602819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:41.482" endtime="20201030 11:50:41.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:41.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019821236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020602819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:41.773" endtime="20201030 11:50:41.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:41.780" endtime="20201030 11:50:41.782"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.479" endtime="20201030 11:50:41.783"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.477" endtime="20201030 11:50:41.783"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:41.787" level="INFO">${PHILIP_RES} = [{'diff': 0.0007815830000000024}, {'diff': 0.0007813890000000004}, {'diff': 0.000781403}, {'diff': 0.0007813610000000012}, {'diff': 0.0007814440000000027}, {'diff': 0.0007815840000000018}, {'diff': 0....</msg>
<status status="PASS" starttime="20201030 11:50:41.784" endtime="20201030 11:50:41.787"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:41.792" level="INFO">${RESULT} = {'diff': [0.0007815830000000024, 0.0007813890000000004, 0.000781403, 0.0007813610000000012, 0.0007814440000000027, 0.0007815840000000018, 0.0007814169999999995, 0.0007814579999999988, 0.00078145799999...</msg>
<status status="PASS" starttime="20201030 11:50:41.788" endtime="20201030 11:50:41.792"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:41.796" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:41.795" endtime="20201030 11:50:41.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:41.798" level="INFO">VALUE: [0.0007815830000000024, 0.0007813890000000004, 0.000781403, 0.0007813610000000012, 0.0007814440000000027, 0.0007815840000000018, 0.0007814169999999995, 0.0007814579999999988, 0.0007814579999999988, 0.0007815000000000009, 0.0007814999999999975, 0.0007813189999999991, 0.0007814309999999991, 0.000781513999999997, 0.0007817640000000042, 0.0007817499999999977, 0.000781707999999999, 0.0007816530000000002, 0.0007816799999999999, 0.0007817639999999973, 0.0007818200000000025, 0.000781917, 0.0007816250000000011, 0.0007817640000000042, 0.0007818200000000025, 0.0007815829999999954, 0.000781708000000006, 0.0007816250000000011, 0.0007816390000000006, 0.0007816660000000003, 0.000781707999999999, 0.0007817910000000039, 0.0007816390000000006, 0.0007816380000000012, 0.0007817219999999986, 0.000781805999999996, 0.0007818330000000026, 0.0007818750000000013, 0.0007816809999999993, 0.0007816669999999998, 0.0007817499999999977, 0.0007817639999999973, 0.0007818750000000013, 0.0007818749999999944, 0.0007817499999999977, 0.0007817090000000054, 0.0007817779999999969, 0.0007816250000000011, 0.0007817499999999977, 0.0007817919999999964]</msg>
<status status="PASS" starttime="20201030 11:50:41.797" endtime="20201030 11:50:41.799"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.792" endtime="20201030 11:50:41.800"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.411" endtime="20201030 11:50:41.800"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.389" endtime="20201030 11:50:41.800"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:41.803" endtime="20201030 11:50:41.822"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.801" endtime="20201030 11:50:41.823"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:41.830" endtime="20201030 11:50:41.886"></status>
</kw>
<msg timestamp="20201030 11:50:41.887" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:41.829" endtime="20201030 11:50:41.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:41.889" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:41.888" endtime="20201030 11:50:41.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:41.890" endtime="20201030 11:50:41.892"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.826" endtime="20201030 11:50:41.894"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.824" endtime="20201030 11:50:41.895"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:41.908" endtime="20201030 11:50:42.201"></status>
</kw>
<msg timestamp="20201030 11:50:42.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019867222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020683069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:41.905" endtime="20201030 11:50:42.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:42.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019867222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020683069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:42.206" endtime="20201030 11:50:42.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:42.214" endtime="20201030 11:50:42.215"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.899" endtime="20201030 11:50:42.216"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.896" endtime="20201030 11:50:42.216"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:42.220" level="INFO">${PHILIP_RES} = [{'diff': 0.000815846999999998}, {'diff': 0.0008159579999999986}, {'diff': 0.0008158189999999989}, {'diff': 0.0008157909999999997}, {'diff': 0.0008158890000000002}, {'diff': 0.0008158470000000015}, {'...</msg>
<status status="PASS" starttime="20201030 11:50:42.217" endtime="20201030 11:50:42.220"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:42.224" level="INFO">${RESULT} = {'diff': [0.000815846999999998, 0.0008159579999999986, 0.0008158189999999989, 0.0008157909999999997, 0.0008158890000000002, 0.0008158470000000015, 0.0008158610000000011, 0.0008155969999999978, 0.00081...</msg>
<status status="PASS" starttime="20201030 11:50:42.221" endtime="20201030 11:50:42.224"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:42.228" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:42.227" endtime="20201030 11:50:42.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:42.231" level="INFO">VALUE: [0.000815846999999998, 0.0008159579999999986, 0.0008158189999999989, 0.0008157909999999997, 0.0008158890000000002, 0.0008158470000000015, 0.0008158610000000011, 0.0008155969999999978, 0.0008157500000000005, 0.0008158610000000011, 0.0008159440000000025, 0.0008156949999999982, 0.0008156669999999991, 0.0008157359999999975, 0.0008158060000000023, 0.0008157780000000031, 0.0008156250000000004, 0.0008159169999999993, 0.0008158330000000019, 0.0008157359999999975, 0.0008157909999999963, 0.0008158750000000006, 0.0008156799999999992, 0.0008159859999999977, 0.0008158750000000006, 0.0008160139999999969, 0.0008157770000000036, 0.0008159719999999981, 0.0008158050000000028, 0.0008159029999999998, 0.0008159159999999999, 0.0008158470000000015, 0.0008157640000000035, 0.000815749999999997, 0.0008158330000000019, 0.0008156529999999995, 0.0008158750000000006, 0.000815749999999997, 0.0008157079999999983, 0.0008156529999999995, 0.0008154720000000046, 0.0008153200000000013, 0.0008155419999999955, 0.0008154720000000046, 0.0008154169999999988, 0.0008155830000000017, 0.0008155969999999943, 0.0008153889999999997, 0.0008153329999999945, 0.0008155140000000033]</msg>
<status status="PASS" starttime="20201030 11:50:42.229" endtime="20201030 11:50:42.231"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.225" endtime="20201030 11:50:42.232"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.823" endtime="20201030 11:50:42.232"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.800" endtime="20201030 11:50:42.233"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:42.235" endtime="20201030 11:50:42.254"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.234" endtime="20201030 11:50:42.255"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:42.263" endtime="20201030 11:50:42.320"></status>
</kw>
<msg timestamp="20201030 11:50:42.320" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:42.261" endtime="20201030 11:50:42.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:42.323" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:42.321" endtime="20201030 11:50:42.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:42.324" endtime="20201030 11:50:42.326"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.259" endtime="20201030 11:50:42.327"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.257" endtime="20201030 11:50:42.327"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:42.333" endtime="20201030 11:50:42.618"></status>
</kw>
<msg timestamp="20201030 11:50:42.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019560125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020410681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:42.332" endtime="20201030 11:50:42.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:42.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019560125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020410681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:42.622" endtime="20201030 11:50:42.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:42.630" endtime="20201030 11:50:42.632"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.329" endtime="20201030 11:50:42.632"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.328" endtime="20201030 11:50:42.633"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:42.637" level="INFO">${PHILIP_RES} = [{'diff': 0.0008505559999999988}, {'diff': 0.000850680999999999}, {'diff': 0.0008507079999999986}, {'diff': 0.0008505559999999988}, {'diff': 0.0008507080000000021}, {'diff': 0.0008507220000000017}, {'...</msg>
<status status="PASS" starttime="20201030 11:50:42.634" endtime="20201030 11:50:42.637"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:42.640" level="INFO">${RESULT} = {'diff': [0.0008505559999999988, 0.000850680999999999, 0.0008507079999999986, 0.0008505559999999988, 0.0008507080000000021, 0.0008507220000000017, 0.0008506799999999995, 0.0008507360000000012, 0.00085...</msg>
<status status="PASS" starttime="20201030 11:50:42.638" endtime="20201030 11:50:42.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:42.645" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:42.644" endtime="20201030 11:50:42.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:42.647" level="INFO">VALUE: [0.0008505559999999988, 0.000850680999999999, 0.0008507079999999986, 0.0008505559999999988, 0.0008507080000000021, 0.0008507220000000017, 0.0008506799999999995, 0.0008507360000000012, 0.0008506249999999972, 0.0008507640000000004, 0.0008506250000000007, 0.000850695000000002, 0.000850778, 0.0008507229999999977, 0.0008506390000000003, 0.0008506249999999937, 0.0008506529999999998, 0.0008505280000000032, 0.0008508049999999961, 0.0008505690000000024, 0.0008506110000000011, 0.000850680999999999, 0.0008506250000000007, 0.0008506529999999998, 0.0008505280000000032, 0.0008507229999999977, 0.0008507220000000051, 0.0008505559999999954, 0.0008506390000000003, 0.0008506949999999985, 0.0008505970000000015, 0.0008506669999999994, 0.0008506799999999995, 0.000850500000000004, 0.0008506110000000011, 0.0008506659999999999, 0.0008506250000000007, 0.0008508060000000026, 0.0008506250000000007, 0.0008506529999999998, 0.0008506669999999994, 0.0008505419999999958, 0.0008507079999999986, 0.0008508059999999956, 0.0008506110000000011, 0.0008506799999999995, 0.0008508330000000022, 0.0008507639999999969, 0.0008508190000000027, 0.0008508190000000027]</msg>
<status status="PASS" starttime="20201030 11:50:42.646" endtime="20201030 11:50:42.649"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.641" endtime="20201030 11:50:42.649"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.255" endtime="20201030 11:50:42.650"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.233" endtime="20201030 11:50:42.650"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:42.652" endtime="20201030 11:50:42.672"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.651" endtime="20201030 11:50:42.672"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:42.680" endtime="20201030 11:50:42.738"></status>
</kw>
<msg timestamp="20201030 11:50:42.739" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:42.679" endtime="20201030 11:50:42.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:42.744" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:42.741" endtime="20201030 11:50:42.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:42.746" endtime="20201030 11:50:42.749"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.676" endtime="20201030 11:50:42.750"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.674" endtime="20201030 11:50:42.751"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:42.765" endtime="20201030 11:50:43.057"></status>
</kw>
<msg timestamp="20201030 11:50:43.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0192855, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020171417, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:50:42.761" endtime="20201030 11:50:43.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:43.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0192855, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020171417, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:50:43.061" endtime="20201030 11:50:43.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:43.069" endtime="20201030 11:50:43.070"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.756" endtime="20201030 11:50:43.071"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.752" endtime="20201030 11:50:43.071"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:43.075" level="INFO">${PHILIP_RES} = [{'diff': 0.000885917}, {'diff': 0.0008860420000000001}, {'diff': 0.0008860559999999996}, {'diff': 0.0008859579999999992}, {'diff': 0.0008861799999999968}, {'diff': 0.0008862079999999994}, {'diff': 0....</msg>
<status status="PASS" starttime="20201030 11:50:43.072" endtime="20201030 11:50:43.075"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:43.080" level="INFO">${RESULT} = {'diff': [0.000885917, 0.0008860420000000001, 0.0008860559999999996, 0.0008859579999999992, 0.0008861799999999968, 0.0008862079999999994, 0.0008861530000000006, 0.0008859590000000021, 0.00088604200000...</msg>
<status status="PASS" starttime="20201030 11:50:43.076" endtime="20201030 11:50:43.080"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:43.084" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:43.083" endtime="20201030 11:50:43.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:43.087" level="INFO">VALUE: [0.000885917, 0.0008860420000000001, 0.0008860559999999996, 0.0008859579999999992, 0.0008861799999999968, 0.0008862079999999994, 0.0008861530000000006, 0.0008859590000000021, 0.0008860420000000001, 0.0008859999999999979, 0.0008860699999999992, 0.0008858749999999978, 0.0008860420000000001, 0.0008859580000000061, 0.0008861520000000012, 0.0008859030000000004, 0.000885917, 0.0008858750000000012, 0.0008859030000000004, 0.000885917, 0.0008860699999999957, 0.0008861670000000002, 0.0008859579999999992, 0.0008859579999999992, 0.0008858060000000029, 0.0008858880000000013, 0.0008857780000000037, 0.0008858619999999942, 0.0008858889999999939, 0.0008859309999999995, 0.0008858610000000017, 0.0008858329999999956, 0.0008859579999999992, 0.000885917, 0.0008857910000000038, 0.0008861530000000006, 0.000886012999999998, 0.0008859030000000004, 0.0008862079999999994, 0.000885834000000002, 0.0008858749999999943, 0.0008857359999999981, 0.0008860269999999976, 0.0008860970000000024, 0.0008859439999999996, 0.0008858750000000012, 0.0008860830000000028, 0.0008859580000000061, 0.0008860140000000044, 0.0008861669999999933]</msg>
<status status="PASS" starttime="20201030 11:50:43.085" endtime="20201030 11:50:43.087"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.081" endtime="20201030 11:50:43.088"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.673" endtime="20201030 11:50:43.088"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.650" endtime="20201030 11:50:43.088"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:43.091" endtime="20201030 11:50:43.110"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.089" endtime="20201030 11:50:43.111"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:43.119" endtime="20201030 11:50:43.179"></status>
</kw>
<msg timestamp="20201030 11:50:43.179" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:43.117" endtime="20201030 11:50:43.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:43.182" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:43.180" endtime="20201030 11:50:43.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:43.183" endtime="20201030 11:50:43.184"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.115" endtime="20201030 11:50:43.185"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.113" endtime="20201030 11:50:43.185"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:43.192" endtime="20201030 11:50:43.477"></status>
</kw>
<msg timestamp="20201030 11:50:43.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017734875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018657097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:43.190" endtime="20201030 11:50:43.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:43.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017734875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018657097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:43.481" endtime="20201030 11:50:43.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:43.489" endtime="20201030 11:50:43.491"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.188" endtime="20201030 11:50:43.492"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.186" endtime="20201030 11:50:43.492"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:43.496" level="INFO">${PHILIP_RES} = [{'diff': 0.0009222220000000003}, {'diff': 0.0009221530000000019}, {'diff': 0.0009221249999999993}, {'diff': 0.0009221389999999989}, {'diff': 0.0009220279999999983}, {'diff': 0.0009218200000000003}, {...</msg>
<status status="PASS" starttime="20201030 11:50:43.493" endtime="20201030 11:50:43.496"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:43.500" level="INFO">${RESULT} = {'diff': [0.0009222220000000003, 0.0009221530000000019, 0.0009221249999999993, 0.0009221389999999989, 0.0009220279999999983, 0.0009218200000000003, 0.0009220830000000006, 0.0009218479999999994, 0.0009...</msg>
<status status="PASS" starttime="20201030 11:50:43.497" endtime="20201030 11:50:43.500"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:43.504" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:43.503" endtime="20201030 11:50:43.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:43.506" level="INFO">VALUE: [0.0009222220000000003, 0.0009221530000000019, 0.0009221249999999993, 0.0009221389999999989, 0.0009220279999999983, 0.0009218200000000003, 0.0009220830000000006, 0.0009218479999999994, 0.0009220139999999988, 0.0009218339999999998, 0.0009217779999999981, 0.0009219450000000004, 0.0009219999999999992, 0.0009220280000000018, 0.0009218060000000042, 0.0009218750000000026, 0.0009219170000000013, 0.0009218750000000026, 0.0009218189999999973, 0.0009220409999999984, 0.0009219159999999949, 0.0009306249999999974, 0.0009219440000000009, 0.0009220830000000041, 0.0009221950000000007, 0.0009219720000000001, 0.0009219310000000008, 0.0009220140000000057, 0.0009220409999999984, 0.000921959, 0.0009219999999999992, 0.000922070000000004, 0.0009219440000000009, 0.0009219170000000013, 0.0009220279999999983, 0.0009221110000000032, 0.0009219720000000001, 0.0009219869999999991, 0.0009220559999999975, 0.0009220829999999972, 0.0009220139999999988, 0.0009220980000000031, 0.0009222220000000003, 0.0009219720000000001, 0.0009220829999999972, 0.0009219299999999944, 0.0009219999999999923, 0.0009220420000000118, 0.000922152999999995, 0.0009220560000000044]</msg>
<status status="PASS" starttime="20201030 11:50:43.505" endtime="20201030 11:50:43.507"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.500" endtime="20201030 11:50:43.508"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.111" endtime="20201030 11:50:43.508"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.089" endtime="20201030 11:50:43.508"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:43.510" endtime="20201030 11:50:43.531"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.509" endtime="20201030 11:50:43.532"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:43.549" endtime="20201030 11:50:43.616"></status>
</kw>
<msg timestamp="20201030 11:50:43.617" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:43.546" endtime="20201030 11:50:43.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:43.622" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:43.619" endtime="20201030 11:50:43.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:43.624" endtime="20201030 11:50:43.633"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.540" endtime="20201030 11:50:43.634"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.536" endtime="20201030 11:50:43.635"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:43.649" endtime="20201030 11:50:43.941"></status>
</kw>
<msg timestamp="20201030 11:50:43.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030118639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031078319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:43.646" endtime="20201030 11:50:43.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:43.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030118639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031078319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:43.945" endtime="20201030 11:50:43.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:43.953" endtime="20201030 11:50:43.954"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.640" endtime="20201030 11:50:43.955"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.637" endtime="20201030 11:50:43.955"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:43.959" level="INFO">${PHILIP_RES} = [{'diff': 0.000959680000000001}, {'diff': 0.0009593479999999988}, {'diff': 0.0009597229999999957}, {'diff': 0.0009595420000000007}, {'diff': 0.0009594309999999967}, {'diff': 0.000959388999999998}, {'d...</msg>
<status status="PASS" starttime="20201030 11:50:43.956" endtime="20201030 11:50:43.959"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:43.963" level="INFO">${RESULT} = {'diff': [0.000959680000000001, 0.0009593479999999988, 0.0009597229999999957, 0.0009595420000000007, 0.0009594309999999967, 0.000959388999999998, 0.0009593469999999993, 0.0009595280000000012, 0.000959...</msg>
<status status="PASS" starttime="20201030 11:50:43.960" endtime="20201030 11:50:43.963"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:43.967" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:43.966" endtime="20201030 11:50:43.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:43.970" level="INFO">VALUE: [0.000959680000000001, 0.0009593479999999988, 0.0009597229999999957, 0.0009595420000000007, 0.0009594309999999967, 0.000959388999999998, 0.0009593469999999993, 0.0009595280000000012, 0.000959611000000006, 0.0009593619999999983, 0.0009594299999999972, 0.0009596109999999991, 0.0009595270000000017, 0.0009595140000000016, 0.0009594580000000033, 0.0009596810000000039, 0.000959583, 0.0009596529999999978, 0.0009596249999999987, 0.000959583, 0.0009595280000000012, 0.000959500000000002, 0.0009593199999999996, 0.000959583, 0.0009596949999999965, 0.0009595420000000007, 0.0009596389999999982, 0.0009594439999999968, 0.0009596249999999987, 0.0009597500000000023, 0.0009596109999999991, 0.0009595420000000007, 0.0009594449999999963, 0.0009597080000000036, 0.0009594440000000037, 0.0009594030000000114, 0.0009595690000000073, 0.0009594580000000102, 0.0009594450000000032, 0.0009595419999999938, 0.0009593749999999984, 0.0009593890000000049, 0.0009595129999999952, 0.0009597229999999957, 0.000959500000000002, 0.0009597219999999962, 0.0009596119999999986, 0.0009595409999999943, 0.0009594309999999967, 0.000959598000000006]</msg>
<status status="PASS" starttime="20201030 11:50:43.969" endtime="20201030 11:50:43.971"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.964" endtime="20201030 11:50:43.972"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.533" endtime="20201030 11:50:43.972"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.508" endtime="20201030 11:50:43.973"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:43.975" endtime="20201030 11:50:43.994"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.973" endtime="20201030 11:50:43.995"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:44.003" endtime="20201030 11:50:44.066"></status>
</kw>
<msg timestamp="20201030 11:50:44.067" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:44.002" endtime="20201030 11:50:44.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:44.069" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:44.068" endtime="20201030 11:50:44.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:44.070" endtime="20201030 11:50:44.072"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.999" endtime="20201030 11:50:44.073"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.997" endtime="20201030 11:50:44.073"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:44.079" endtime="20201030 11:50:44.365"></status>
</kw>
<msg timestamp="20201030 11:50:44.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017952181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018949, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:50:44.078" endtime="20201030 11:50:44.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:44.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017952181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018949, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:50:44.369" endtime="20201030 11:50:44.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:44.377" endtime="20201030 11:50:44.379"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.075" endtime="20201030 11:50:44.379"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.074" endtime="20201030 11:50:44.380"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:44.383" level="INFO">${PHILIP_RES} = [{'diff': 0.0009968189999999995}, {'diff': 0.000996707999999999}, {'diff': 0.0009965969999999984}, {'diff': 0.0009965140000000004}, {'diff': 0.0009964299999999995}, {'diff': 0.0009967080000000024}, {'...</msg>
<status status="PASS" starttime="20201030 11:50:44.380" endtime="20201030 11:50:44.384"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:44.388" level="INFO">${RESULT} = {'diff': [0.0009968189999999995, 0.000996707999999999, 0.0009965969999999984, 0.0009965140000000004, 0.0009964299999999995, 0.0009967080000000024, 0.0009965830000000023, 0.0009965140000000004, 0.00099...</msg>
<status status="PASS" starttime="20201030 11:50:44.384" endtime="20201030 11:50:44.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:44.392" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:44.391" endtime="20201030 11:50:44.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:44.395" level="INFO">VALUE: [0.0009968189999999995, 0.000996707999999999, 0.0009965969999999984, 0.0009965140000000004, 0.0009964299999999995, 0.0009967080000000024, 0.0009965830000000023, 0.0009965140000000004, 0.000996625000000001, 0.000996443999999999, 0.0009966390000000006, 0.000996541, 0.0009968200000000024, 0.000996542000000003, 0.0009965560000000026, 0.0009965000000000043, 0.000996847000000002, 0.0009966669999999997, 0.0009967219999999985, 0.0009966809999999993, 0.0009966390000000006, 0.0009964860000000048, 0.000996638000000001, 0.0009966950000000058, 0.0009967769999999973, 0.0009965280000000035, 0.000996459000000005, 0.000996430999999999, 0.0009965279999999965, 0.0009967080000000059, 0.0009964999999999974, 0.0009968199999999955, 0.0009965829999999953, 0.0009965549999999962, 0.0009968049999999964, 0.0009966949999999988, 0.0009966669999999997, 0.000996596999999995, 0.000996541999999996, 0.000996416, 0.000996443999999999, 0.0009966530000000001, 0.0009965560000000095, 0.0009965829999999953, 0.0009965839999999948, 0.000996736000000012, 0.0009967220000000054, 0.0009966950000000058, 0.000996542000000003, 0.0009966530000000001]</msg>
<status status="PASS" starttime="20201030 11:50:44.394" endtime="20201030 11:50:44.396"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.389" endtime="20201030 11:50:44.396"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.995" endtime="20201030 11:50:44.397"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.973" endtime="20201030 11:50:44.397"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:44.399" endtime="20201030 11:50:44.418"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.398" endtime="20201030 11:50:44.419"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:44.427" endtime="20201030 11:50:44.497"></status>
</kw>
<msg timestamp="20201030 11:50:44.497" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:44.426" endtime="20201030 11:50:44.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:44.503" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:44.500" endtime="20201030 11:50:44.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:44.505" endtime="20201030 11:50:44.508"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.423" endtime="20201030 11:50:44.509"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.421" endtime="20201030 11:50:44.510"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:44.524" endtime="20201030 11:50:44.826"></status>
</kw>
<msg timestamp="20201030 11:50:44.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02074425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021779611, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:44.521" endtime="20201030 11:50:44.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:44.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02074425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021779611, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:44.830" endtime="20201030 11:50:44.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:44.838" endtime="20201030 11:50:44.840"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.515" endtime="20201030 11:50:44.840"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.511" endtime="20201030 11:50:44.841"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:44.844" level="INFO">${PHILIP_RES} = [{'diff': 0.001035361000000002}, {'diff': 0.0010353339999999989}, {'diff': 0.0010353609999999985}, {'diff': 0.0010353470000000024}, {'diff': 0.0010354170000000003}, {'diff': 0.0010352219999999988}, {'...</msg>
<status status="PASS" starttime="20201030 11:50:44.841" endtime="20201030 11:50:44.845"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:44.848" level="INFO">${RESULT} = {'diff': [0.001035361000000002, 0.0010353339999999989, 0.0010353609999999985, 0.0010353470000000024, 0.0010354170000000003, 0.0010352219999999988, 0.001035346999999999, 0.0010352359999999984, 0.001035...</msg>
<status status="PASS" starttime="20201030 11:50:44.845" endtime="20201030 11:50:44.848"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:44.853" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:44.852" endtime="20201030 11:50:44.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:44.855" level="INFO">VALUE: [0.001035361000000002, 0.0010353339999999989, 0.0010353609999999985, 0.0010353470000000024, 0.0010354170000000003, 0.0010352219999999988, 0.001035346999999999, 0.0010352359999999984, 0.001035152000000001, 0.0010354439999999965, 0.0010353479999999984, 0.0010352500000000014, 0.0010354030000000042, 0.0010354440000000034, 0.0010354030000000042, 0.0010353339999999989, 0.0010351939999999962, 0.001035374999999998, 0.0010354309999999964, 0.0010353889999999977, 0.0010351809999999961, 0.0010353609999999985, 0.0010353889999999977, 0.0010354859999999952, 0.0010352080000000027, 0.001035346999999999, 0.0010353890000000046, 0.0010355979999999987, 0.0010353329999999994, 0.0010352220000000023, 0.0010353059999999997, 0.0010354719999999956, 0.0010353059999999997, 0.0010355139999999943, 0.0010355699999999995, 0.0010355979999999987, 0.0010356250000000053, 0.0010356249999999984, 0.0010356250000000053, 0.0010355000000000086, 0.0010353200000000062, 0.0010357079999999963, 0.0010356110000000057, 0.0010354859999999882, 0.0010353339999999989, 0.0010354860000000021, 0.001035346999999992, 0.0010354030000000042, 0.0010354579999999891, 0.0010354590000000025]</msg>
<status status="PASS" starttime="20201030 11:50:44.854" endtime="20201030 11:50:44.856"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.849" endtime="20201030 11:50:44.856"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.420" endtime="20201030 11:50:44.857"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.397" endtime="20201030 11:50:44.857"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:44.859" endtime="20201030 11:50:44.879"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.858" endtime="20201030 11:50:44.879"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:44.887" endtime="20201030 11:50:44.951"></status>
</kw>
<msg timestamp="20201030 11:50:44.952" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:44.886" endtime="20201030 11:50:44.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:44.954" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:44.953" endtime="20201030 11:50:44.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:44.955" endtime="20201030 11:50:44.958"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.883" endtime="20201030 11:50:44.958"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.881" endtime="20201030 11:50:44.959"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:44.965" endtime="20201030 11:50:45.251"></status>
</kw>
<msg timestamp="20201030 11:50:45.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017831069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018905625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:44.964" endtime="20201030 11:50:45.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:45.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017831069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018905625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:45.255" endtime="20201030 11:50:45.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:45.263" endtime="20201030 11:50:45.265"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.961" endtime="20201030 11:50:45.265"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.959" endtime="20201030 11:50:45.266"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:45.270" level="INFO">${PHILIP_RES} = [{'diff': 0.0010745559999999973}, {'diff': 0.0010745559999999973}, {'diff': 0.0010748049999999981}, {'diff': 0.001074584}, {'diff': 0.0010745550000000013}, {'diff': 0.0010744859999999995}, {'diff': 0....</msg>
<status status="PASS" starttime="20201030 11:50:45.267" endtime="20201030 11:50:45.270"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:45.274" level="INFO">${RESULT} = {'diff': [0.0010745559999999973, 0.0010745559999999973, 0.0010748049999999981, 0.001074584, 0.0010745550000000013, 0.0010744859999999995, 0.0010744589999999998, 0.0010743060000000006, 0.00107433300000...</msg>
<status status="PASS" starttime="20201030 11:50:45.271" endtime="20201030 11:50:45.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:45.278" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:45.277" endtime="20201030 11:50:45.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:45.280" level="INFO">VALUE: [0.0010745559999999973, 0.0010745559999999973, 0.0010748049999999981, 0.001074584, 0.0010745550000000013, 0.0010744859999999995, 0.0010744589999999998, 0.0010743060000000006, 0.0010743330000000002, 0.0010744019999999986, 0.0010742780000000014, 0.0010743330000000002, 0.001074389000000002, 0.0010744589999999998, 0.0010744170000000011, 0.0010745560000000043, 0.0010747499999999993, 0.0010745279999999982, 0.0010746950000000005, 0.0010748049999999981, 0.001074582999999997, 0.001074499999999999, 0.0010743470000000033, 0.0010746390000000022, 0.0010745409999999983, 0.001074681000000001, 0.001074694000000001, 0.001074582999999997, 0.0010744029999999946, 0.0010746109999999962, 0.001074582999999997, 0.0010746379999999958, 0.0010746390000000022, 0.0010744310000000007, 0.0010744440000000008, 0.0010746669999999944, 0.001074694000000001, 0.0010747220000000002, 0.0010745689999999974, 0.0010745689999999974, 0.001074666000000002, 0.0010744450000000072, 0.0010744859999999995, 0.001074471999999993, 0.0010745139999999986, 0.0010744589999999998, 0.0010746249999999957, 0.0010745689999999974, 0.001074597999999996, 0.0010744580000000004]</msg>
<status status="PASS" starttime="20201030 11:50:45.279" endtime="20201030 11:50:45.282"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.275" endtime="20201030 11:50:45.283"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.880" endtime="20201030 11:50:45.283"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.857" endtime="20201030 11:50:45.283"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:45.285" endtime="20201030 11:50:45.305"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.284" endtime="20201030 11:50:45.305"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:45.313" endtime="20201030 11:50:45.385"></status>
</kw>
<msg timestamp="20201030 11:50:45.386" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:45.312" endtime="20201030 11:50:45.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:45.391" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:45.388" endtime="20201030 11:50:45.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:45.393" endtime="20201030 11:50:45.396"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.309" endtime="20201030 11:50:45.398"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.307" endtime="20201030 11:50:45.399"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:45.412" endtime="20201030 11:50:45.704"></status>
</kw>
<msg timestamp="20201030 11:50:45.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018571903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019686028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:45.409" endtime="20201030 11:50:45.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:45.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018571903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019686028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:45.708" endtime="20201030 11:50:45.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:45.716" endtime="20201030 11:50:45.718"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.403" endtime="20201030 11:50:45.718"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.400" endtime="20201030 11:50:45.719"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:45.723" level="INFO">${PHILIP_RES} = [{'diff': 0.0011141250000000005}, {'diff': 0.0011139029999999994}, {'diff': 0.0011139590000000012}, {'diff': 0.001113929999999999}, {'diff': 0.0011138610000000007}, {'diff': 0.0011139860000000008}, {'...</msg>
<status status="PASS" starttime="20201030 11:50:45.719" endtime="20201030 11:50:45.723"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:45.727" level="INFO">${RESULT} = {'diff': [0.0011141250000000005, 0.0011139029999999994, 0.0011139590000000012, 0.001113929999999999, 0.0011138610000000007, 0.0011139860000000008, 0.0011139720000000013, 0.001114193999999999, 0.001113...</msg>
<status status="PASS" starttime="20201030 11:50:45.724" endtime="20201030 11:50:45.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:45.732" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:45.731" endtime="20201030 11:50:45.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:45.734" level="INFO">VALUE: [0.0011141250000000005, 0.0011139029999999994, 0.0011139590000000012, 0.001113929999999999, 0.0011138610000000007, 0.0011139860000000008, 0.0011139720000000013, 0.001114193999999999, 0.001113916999999999, 0.0011139450000000016, 0.0011138189999999985, 0.0011140560000000022, 0.0011140690000000023, 0.001113916999999999, 0.0011140970000000014, 0.0011139719999999978, 0.001113916999999999, 0.0011136809999999983, 0.0011141250000000005, 0.0011139579999999982, 0.0011139579999999982, 0.0011139579999999982, 0.0011139719999999978, 0.001113916999999999, 0.001113999999999997, 0.0011139159999999995, 0.0011141669999999992, 0.0011141659999999998, 0.0011143610000000012, 0.0011145000000000044, 0.0011145000000000044, 0.0011145699999999953, 0.0011145129999999975, 0.0011145840000000018, 0.0011143060000000024, 0.0011144439999999992, 0.0011143610000000012, 0.0011145829999999954, 0.0011145000000000044, 0.0011143470000000016, 0.001114111000000001, 0.001114430999999999, 0.0011144720000000052, 0.0011145000000000044, 0.0011144719999999914, 0.0011144579999999987, 0.0011145419999999961, 0.0011143610000000082, 0.0011143190000000025, 0.0011143610000000082]</msg>
<status status="PASS" starttime="20201030 11:50:45.733" endtime="20201030 11:50:45.739"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.728" endtime="20201030 11:50:45.739"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.306" endtime="20201030 11:50:45.740"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.283" endtime="20201030 11:50:45.740"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:45.743" endtime="20201030 11:50:45.762"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.741" endtime="20201030 11:50:45.762"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:45.771" endtime="20201030 11:50:45.841"></status>
</kw>
<msg timestamp="20201030 11:50:45.841" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:45.769" endtime="20201030 11:50:45.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:45.844" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:45.842" endtime="20201030 11:50:45.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:45.845" endtime="20201030 11:50:45.846"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.766" endtime="20201030 11:50:45.847"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.764" endtime="20201030 11:50:45.847"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:45.854" endtime="20201030 11:50:46.140"></status>
</kw>
<msg timestamp="20201030 11:50:46.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018699181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019853486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:45.852" endtime="20201030 11:50:46.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:46.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018699181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019853486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:46.145" endtime="20201030 11:50:46.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:46.153" endtime="20201030 11:50:46.154"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.850" endtime="20201030 11:50:46.155"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.848" endtime="20201030 11:50:46.155"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:46.159" level="INFO">${PHILIP_RES} = [{'diff': 0.0011543050000000013}, {'diff': 0.0011542910000000017}, {'diff': 0.0011540830000000002}, {'diff': 0.0011543479999999995}, {'diff': 0.0011543060000000008}, {'diff': 0.0011543750000000026}, {...</msg>
<status status="PASS" starttime="20201030 11:50:46.156" endtime="20201030 11:50:46.159"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:46.165" level="INFO">${RESULT} = {'diff': [0.0011543050000000013, 0.0011542910000000017, 0.0011540830000000002, 0.0011543479999999995, 0.0011543060000000008, 0.0011543750000000026, 0.0011540560000000005, 0.0011542639999999986, 0.0011...</msg>
<status status="PASS" starttime="20201030 11:50:46.160" endtime="20201030 11:50:46.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:46.174" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:46.172" endtime="20201030 11:50:46.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:46.179" level="INFO">VALUE: [0.0011543050000000013, 0.0011542910000000017, 0.0011540830000000002, 0.0011543479999999995, 0.0011543060000000008, 0.0011543750000000026, 0.0011540560000000005, 0.0011542639999999986, 0.0011541530000000015, 0.0011541109999999993, 0.0011542919999999977, 0.0011541950000000037, 0.0011541940000000042, 0.0011540830000000002, 0.0011542500000000025, 0.0011543609999999996, 0.0011542079999999968, 0.0011540969999999998, 0.001154457999999997, 0.0011543749999999992, 0.0011541670000000046, 0.0011542369999999955, 0.0011541659999999981, 0.0011542780000000016, 0.0011543609999999996, 0.0011542639999999951, 0.0011542780000000016, 0.0011542919999999943, 0.0011544029999999983, 0.0011544860000000032, 0.0011545690000000011, 0.0011544859999999962, 0.0011544590000000035, 0.001154264000000002, 0.001154235999999996, 0.0011541659999999981, 0.001154375000000006, 0.001154347, 0.0011542500000000094, 0.001154055000000001, 0.001154347, 0.0011541939999999973, 0.0011541939999999973, 0.001154236000000003, 0.0011545280000000019, 0.0011543749999999992, 0.0011543049999999944, 0.0011542080000000038, 0.0011540410000000084, 0.0011540140000000088]</msg>
<status status="PASS" starttime="20201030 11:50:46.176" endtime="20201030 11:50:46.180"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.167" endtime="20201030 11:50:46.182"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.763" endtime="20201030 11:50:46.183"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.740" endtime="20201030 11:50:46.183"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:46.188" endtime="20201030 11:50:46.209"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.185" endtime="20201030 11:50:46.210"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:46.227" endtime="20201030 11:50:46.303"></status>
</kw>
<msg timestamp="20201030 11:50:46.303" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:46.224" endtime="20201030 11:50:46.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:46.306" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:46.304" endtime="20201030 11:50:46.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:46.307" endtime="20201030 11:50:46.309"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.218" endtime="20201030 11:50:46.310"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.215" endtime="20201030 11:50:46.310"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:46.317" endtime="20201030 11:50:46.603"></status>
</kw>
<msg timestamp="20201030 11:50:46.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03004725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031243347, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:46.315" endtime="20201030 11:50:46.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:46.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03004725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031243347, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:46.607" endtime="20201030 11:50:46.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:46.615" endtime="20201030 11:50:46.617"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.313" endtime="20201030 11:50:46.617"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.311" endtime="20201030 11:50:46.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:46.621" level="INFO">${PHILIP_RES} = [{'diff': 0.0011960970000000001}, {'diff': 0.0011959159999999983}, {'diff': 0.0011962220000000037}, {'diff': 0.0011959999999999957}, {'diff': 0.0011960830000000006}, {'diff': 0.0011958609999999995}, {...</msg>
<status status="PASS" starttime="20201030 11:50:46.618" endtime="20201030 11:50:46.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:46.625" level="INFO">${RESULT} = {'diff': [0.0011960970000000001, 0.0011959159999999983, 0.0011962220000000037, 0.0011959999999999957, 0.0011960830000000006, 0.0011958609999999995, 0.0011960419999999944, 0.0011960419999999944, 0.0011...</msg>
<status status="PASS" starttime="20201030 11:50:46.622" endtime="20201030 11:50:46.626"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:46.630" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:46.629" endtime="20201030 11:50:46.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:46.632" level="INFO">VALUE: [0.0011960970000000001, 0.0011959159999999983, 0.0011962220000000037, 0.0011959999999999957, 0.0011960830000000006, 0.0011958609999999995, 0.0011960419999999944, 0.0011960419999999944, 0.0011960420000000013, 0.0011961389999999988, 0.0011959719999999965, 0.001195874999999999, 0.0011958609999999995, 0.0011960970000000001, 0.0011961109999999997, 0.0011960280000000018, 0.0011962640000000024, 0.0011962080000000042, 0.0011961940000000046, 0.0011960700000000005, 0.0011960830000000006, 0.0011960830000000006, 0.0011961809999999976, 0.0011960129999999958, 0.0011961659999999985, 0.001196084, 0.0011962220000000107, 0.001196084, 0.0011960140000000091, 0.0011959019999999987, 0.0011959450000000038, 0.0011958190000000007, 0.0011957779999999946, 0.0011961799999999911, 0.0011960280000000018, 0.0011958889999999917, 0.0011960139999999952, 0.0011962080000000042, 0.0011956669999999975, 0.0011952920000000006, 0.0011953199999999997, 0.0011952500000000088, 0.0011954169999999903, 0.0011955419999999939, 0.0011955969999999927, 0.0011956669999999975, 0.0011952500000000088, 0.0011953330000000068, 0.001195471999999989, 0.0011953340000000062]</msg>
<status status="PASS" starttime="20201030 11:50:46.631" endtime="20201030 11:50:46.634"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.626" endtime="20201030 11:50:46.634"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.212" endtime="20201030 11:50:46.635"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.184" endtime="20201030 11:50:46.635"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.196" endtime="20201030 11:50:46.635"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:50:24.962" endtime="20201030 11:50:46.636" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 11:50:04.523" endtime="20201030 11:50:46.645"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 11:50:46.716" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 11:50:46.724" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 11:50:47.900" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 11:50:46.715" endtime="20201030 11:50:47.902"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 11:50:47.907" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 11:50:47.904" endtime="20201030 11:50:47.907"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.714" endtime="20201030 11:50:47.909"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:47.913" endtime="20201030 11:50:48.099"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.910" endtime="20201030 11:50:48.099"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:48.112" endtime="20201030 11:50:48.133"></status>
</kw>
<msg timestamp="20201030 11:50:48.133" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['n: 2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3c...</msg>
<status status="PASS" starttime="20201030 11:50:48.110" endtime="20201030 11:50:48.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:48.136" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['n: 2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3c...</msg>
<status status="PASS" starttime="20201030 11:50:48.134" endtime="20201030 11:50:48.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:48.139" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:50:48.137" endtime="20201030 11:50:48.139"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:48.108" endtime="20201030 11:50:48.140"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:48.106" endtime="20201030 11:50:48.140"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.104" endtime="20201030 11:50:48.141"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:50:48.145" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:50:48.145" endtime="20201030 11:50:48.146"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.141" endtime="20201030 11:50:48.146"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.104" endtime="20201030 11:50:48.146"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.103" endtime="20201030 11:50:48.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:48.147" endtime="20201030 11:50:48.149"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.102" endtime="20201030 11:50:48.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:48.150" endtime="20201030 11:50:48.151"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.100" endtime="20201030 11:50:48.152"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.712" endtime="20201030 11:50:48.152"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:48.158" endtime="20201030 11:50:48.178"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.157" endtime="20201030 11:50:48.178"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:48.192" endtime="20201030 11:50:48.213"></status>
</kw>
<msg timestamp="20201030 11:50:48.214" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:48.190" endtime="20201030 11:50:48.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:48.216" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:48.215" endtime="20201030 11:50:48.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:48.219" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:50:48.217" endtime="20201030 11:50:48.219"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:48.187" endtime="20201030 11:50:48.220"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:48.185" endtime="20201030 11:50:48.220"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.184" endtime="20201030 11:50:48.221"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:50:48.224" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:50:48.224" endtime="20201030 11:50:48.225"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.222" endtime="20201030 11:50:48.225"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.183" endtime="20201030 11:50:48.225"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.182" endtime="20201030 11:50:48.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:48.226" endtime="20201030 11:50:48.228"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.181" endtime="20201030 11:50:48.228"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.179" endtime="20201030 11:50:48.229"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.155" endtime="20201030 11:50:48.229"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:48.240" endtime="20201030 11:50:48.258"></status>
</kw>
<msg timestamp="20201030 11:50:48.259" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:48.239" endtime="20201030 11:50:48.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:48.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:48.260" endtime="20201030 11:50:48.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:48.262" endtime="20201030 11:50:48.264"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.235" endtime="20201030 11:50:48.264"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.233" endtime="20201030 11:50:48.265"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:48.271" endtime="20201030 11:50:48.560"></status>
</kw>
<msg timestamp="20201030 11:50:48.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.076290764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.076296347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:48.270" endtime="20201030 11:50:48.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:48.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.076290764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.076296347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:48.565" endtime="20201030 11:50:48.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:48.573" endtime="20201030 11:50:48.575"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.267" endtime="20201030 11:50:48.575"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.266" endtime="20201030 11:50:48.576"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:48.580" level="INFO">${RESULT} = [{'diff': 5.583000000003446e-06}, {'diff': 5.653000000008235e-06}, {'diff': 5.625000000009095e-06}, {'diff': 5.625000000009095e-06}, {'diff': 5.638000000002252e-06}, {'diff': 5.583000000003446e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:50:48.577" endtime="20201030 11:50:48.580"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:48.584" level="INFO">${ACCURACY} = {'diff': [5.583000000003446e-06, 5.653000000008235e-06, 5.625000000009095e-06, 5.625000000009095e-06, 5.638000000002252e-06, 5.583000000003446e-06, 5.611000000002586e-06, 5.624999999995217e-06, 5.6389...</msg>
<status status="PASS" starttime="20201030 11:50:48.581" endtime="20201030 11:50:48.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:48.589" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201030 11:50:48.588" endtime="20201030 11:50:48.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:48.592" level="INFO">VALUE: [5.583000000003446e-06, 5.653000000008235e-06, 5.625000000009095e-06, 5.625000000009095e-06, 5.638000000002252e-06, 5.583000000003446e-06, 5.611000000002586e-06, 5.624999999995217e-06, 5.638999999987848e-06, 5.624999999995217e-06, 5.611000000002586e-06, 5.624999999995217e-06, 5.625000000009095e-06, 5.639000000001726e-06, 5.611000000002586e-06, 5.624999999995217e-06, 5.596999999996077e-06, 5.611000000002586e-06, 5.638999999987848e-06, 5.652999999994357e-06, 5.653000000008235e-06, 5.5689999999969375e-06, 5.708000000007041e-06, 5.611000000002586e-06, 5.611000000002586e-06, 5.639000000001726e-06, 5.597999999995551e-06, 5.694000000000532e-06, 5.597000000009955e-06, 5.624999999995217e-06, 5.611000000002586e-06, 5.597000000009955e-06, 5.611000000002586e-06, 5.611000000002586e-06, 5.610999999988708e-06, 5.610999999988708e-06, 5.5550000000043065e-06, 5.611000000002586e-06, 5.638000000002252e-06, 5.665999999987514e-06, 5.611000000002586e-06, 5.624999999995217e-06, 5.583000000003446e-06, 5.610999999988708e-06, 5.597999999995551e-06, 5.596999999996077e-06, 5.611000000002586e-06, 5.611000000002586e-06, 5.652999999994357e-06, 5.624999999995217e-06]</msg>
<status status="PASS" starttime="20201030 11:50:48.590" endtime="20201030 11:50:48.592"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.585" endtime="20201030 11:50:48.593"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:48.596" endtime="20201030 11:50:48.615"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.595" endtime="20201030 11:50:48.616"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.594" endtime="20201030 11:50:48.616"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.231" endtime="20201030 11:50:48.617"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.230" endtime="20201030 11:50:48.617"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:48.625" endtime="20201030 11:50:48.641"></status>
</kw>
<msg timestamp="20201030 11:50:48.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:48.624" endtime="20201030 11:50:48.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:48.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:48.643" endtime="20201030 11:50:48.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:48.645" endtime="20201030 11:50:48.646"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.621" endtime="20201030 11:50:48.647"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.619" endtime="20201030 11:50:48.647"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:48.654" endtime="20201030 11:50:48.942"></status>
</kw>
<msg timestamp="20201030 11:50:48.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020277958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020283597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:48.652" endtime="20201030 11:50:48.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:48.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020277958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020283597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:48.946" endtime="20201030 11:50:48.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:48.954" endtime="20201030 11:50:48.956"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.650" endtime="20201030 11:50:48.957"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.648" endtime="20201030 11:50:48.957"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:48.961" level="INFO">${RESULT} = [{'diff': 5.639000000001726e-06}, {'diff': 5.61199999999859e-06}, {'diff': 5.6389999999982565e-06}, {'diff': 5.6389999999982565e-06}, {'diff': 5.610999999999117e-06}, {'diff': 5.624999999998687e-06}, ...</msg>
<status status="PASS" starttime="20201030 11:50:48.958" endtime="20201030 11:50:48.961"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:48.966" level="INFO">${ACCURACY} = {'diff': [5.639000000001726e-06, 5.61199999999859e-06, 5.6389999999982565e-06, 5.6389999999982565e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.6389999999982565e-06, 5.681000000000436e-06, 5.59...</msg>
<status status="PASS" starttime="20201030 11:50:48.962" endtime="20201030 11:50:48.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:48.970" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201030 11:50:48.969" endtime="20201030 11:50:48.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:48.973" level="INFO">VALUE: [5.639000000001726e-06, 5.61199999999859e-06, 5.6389999999982565e-06, 5.6389999999982565e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.6389999999982565e-06, 5.681000000000436e-06, 5.596999999999547e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.6389999999982565e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.596999999999547e-06, 5.637999999998783e-06, 5.540999999997798e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.625000000002156e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.610999999999117e-06, 5.695000000000006e-06, 5.6529999999978264e-06, 5.5839999999994505e-06, 5.596999999999547e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.625000000002156e-06, 5.667000000000866e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.666999999997396e-06, 5.610999999999117e-06, 5.681000000000436e-06, 5.596999999999547e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.694000000000532e-06, 5.569999999999881e-06, 5.653000000001296e-06, 5.59800000000249e-06, 5.6389999999982565e-06, 5.625000000002156e-06, 5.596999999999547e-06]</msg>
<status status="PASS" starttime="20201030 11:50:48.972" endtime="20201030 11:50:48.973"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.967" endtime="20201030 11:50:48.974"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:48.978" endtime="20201030 11:50:48.997"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.976" endtime="20201030 11:50:48.997"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.975" endtime="20201030 11:50:48.998"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.618" endtime="20201030 11:50:48.998"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.617" endtime="20201030 11:50:48.998"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:49.007" endtime="20201030 11:50:49.023"></status>
</kw>
<msg timestamp="20201030 11:50:49.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:49.005" endtime="20201030 11:50:49.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:49.026" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:49.024" endtime="20201030 11:50:49.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:49.027" endtime="20201030 11:50:49.028"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.003" endtime="20201030 11:50:49.029"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.001" endtime="20201030 11:50:49.030"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:49.036" endtime="20201030 11:50:49.321"></status>
</kw>
<msg timestamp="20201030 11:50:49.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020709278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020714875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:49.035" endtime="20201030 11:50:49.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:49.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020709278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020714875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:49.326" endtime="20201030 11:50:49.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:49.334" endtime="20201030 11:50:49.336"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.032" endtime="20201030 11:50:49.336"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.030" endtime="20201030 11:50:49.337"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:49.341" level="INFO">${RESULT} = [{'diff': 5.596999999999547e-06}, {'diff': 5.639000000001726e-06}, {'diff': 5.667000000000866e-06}, {'diff': 5.639000000001726e-06}, {'diff': 5.5839999999994505e-06}, {'diff': 5.611000000002586e-06}, ...</msg>
<status status="PASS" starttime="20201030 11:50:49.337" endtime="20201030 11:50:49.341"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:49.345" level="INFO">${ACCURACY} = {'diff': [5.596999999999547e-06, 5.639000000001726e-06, 5.667000000000866e-06, 5.639000000001726e-06, 5.5839999999994505e-06, 5.611000000002586e-06, 5.596999999999547e-06, 5.596999999999547e-06, 5.611...</msg>
<status status="PASS" starttime="20201030 11:50:49.342" endtime="20201030 11:50:49.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:49.349" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201030 11:50:49.348" endtime="20201030 11:50:49.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:49.352" level="INFO">VALUE: [5.596999999999547e-06, 5.639000000001726e-06, 5.667000000000866e-06, 5.639000000001726e-06, 5.5839999999994505e-06, 5.611000000002586e-06, 5.596999999999547e-06, 5.596999999999547e-06, 5.611000000002586e-06, 5.610999999999117e-06, 5.596999999999547e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.6389999999982565e-06, 5.5979999999990204e-06, 5.625000000002156e-06, 5.653000000001296e-06, 5.611000000002586e-06, 5.569000000000407e-06, 5.611000000002586e-06, 5.596999999999547e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.610999999999117e-06, 5.625000000002156e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.611000000002586e-06, 5.625000000002156e-06, 5.625000000002156e-06, 5.611000000002586e-06, 5.625000000002156e-06, 5.596999999999547e-06, 5.610999999999117e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.653000000001296e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.5979999999990204e-06, 5.625000000002156e-06, 5.625000000002156e-06, 5.624999999998687e-06, 5.582999999999977e-06, 5.5839999999994505e-06, 5.625000000002156e-06]</msg>
<status status="PASS" starttime="20201030 11:50:49.350" endtime="20201030 11:50:49.352"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.346" endtime="20201030 11:50:49.353"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:49.356" endtime="20201030 11:50:49.376"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.355" endtime="20201030 11:50:49.376"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.354" endtime="20201030 11:50:49.376"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.999" endtime="20201030 11:50:49.377"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.998" endtime="20201030 11:50:49.377"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:49.386" endtime="20201030 11:50:49.404"></status>
</kw>
<msg timestamp="20201030 11:50:49.405" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:49.384" endtime="20201030 11:50:49.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:49.407" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:49.406" endtime="20201030 11:50:49.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:49.409" endtime="20201030 11:50:49.410"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.381" endtime="20201030 11:50:49.411"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.379" endtime="20201030 11:50:49.411"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:49.417" endtime="20201030 11:50:49.705"></status>
</kw>
<msg timestamp="20201030 11:50:49.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023908917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023914556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:49.416" endtime="20201030 11:50:49.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:49.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023908917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023914556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:49.709" endtime="20201030 11:50:49.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:49.717" endtime="20201030 11:50:49.719"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.413" endtime="20201030 11:50:49.719"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.412" endtime="20201030 11:50:49.720"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:49.724" level="INFO">${RESULT} = [{'diff': 5.639000000001726e-06}, {'diff': 5.61199999999859e-06}, {'diff': 5.5839999999994505e-06}, {'diff': 5.569000000000407e-06}, {'diff': 5.582999999999977e-06}, {'diff': 5.6529999999978264e-06}, ...</msg>
<status status="PASS" starttime="20201030 11:50:49.721" endtime="20201030 11:50:49.724"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:49.728" level="INFO">${ACCURACY} = {'diff': [5.639000000001726e-06, 5.61199999999859e-06, 5.5839999999994505e-06, 5.569000000000407e-06, 5.582999999999977e-06, 5.6529999999978264e-06, 5.5979999999990204e-06, 5.6389999999982565e-06, 5.6...</msg>
<status status="PASS" starttime="20201030 11:50:49.725" endtime="20201030 11:50:49.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:49.732" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201030 11:50:49.731" endtime="20201030 11:50:49.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:49.735" level="INFO">VALUE: [5.639000000001726e-06, 5.61199999999859e-06, 5.5839999999994505e-06, 5.569000000000407e-06, 5.582999999999977e-06, 5.6529999999978264e-06, 5.5979999999990204e-06, 5.6389999999982565e-06, 5.624999999998687e-06, 5.5839999999994505e-06, 5.651999999998353e-06, 5.624999999998687e-06, 5.597000000003016e-06, 5.666000000001392e-06, 5.611000000002586e-06, 5.695000000000006e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.555000000000837e-06, 5.638000000002252e-06, 5.6529999999978264e-06, 5.57000000000335e-06, 5.61200000000206e-06, 5.625000000002156e-06, 5.625000000002156e-06, 5.624999999998687e-06, 5.61199999999859e-06, 5.5979999999990204e-06, 5.611000000002586e-06, 5.624999999998687e-06, 5.6389999999982565e-06, 5.695000000000006e-06, 5.610999999999117e-06, 5.625000000002156e-06, 5.624999999998687e-06, 5.582999999999977e-06, 5.6389999999982565e-06, 5.624999999998687e-06, 5.638000000002252e-06, 5.596999999999547e-06, 5.611000000002586e-06, 5.5979999999990204e-06, 5.610999999999117e-06, 5.611000000002586e-06, 5.58400000000292e-06, 5.596999999999547e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.625000000002156e-06]</msg>
<status status="PASS" starttime="20201030 11:50:49.733" endtime="20201030 11:50:49.736"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.729" endtime="20201030 11:50:49.737"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:49.740" endtime="20201030 11:50:49.760"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.739" endtime="20201030 11:50:49.760"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.738" endtime="20201030 11:50:49.760"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.378" endtime="20201030 11:50:49.761"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.377" endtime="20201030 11:50:49.761"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:49.770" endtime="20201030 11:50:49.787"></status>
</kw>
<msg timestamp="20201030 11:50:49.788" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:49.768" endtime="20201030 11:50:49.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:49.790" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:49.789" endtime="20201030 11:50:49.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:49.791" endtime="20201030 11:50:49.793"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.765" endtime="20201030 11:50:49.794"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.763" endtime="20201030 11:50:49.794"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:49.800" endtime="20201030 11:50:50.085"></status>
</kw>
<msg timestamp="20201030 11:50:50.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021693222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021698847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:49.799" endtime="20201030 11:50:50.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:50.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021693222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021698847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:50.089" endtime="20201030 11:50:50.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:50.097" endtime="20201030 11:50:50.099"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.796" endtime="20201030 11:50:50.099"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.795" endtime="20201030 11:50:50.100"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:50.104" level="INFO">${RESULT} = [{'diff': 5.624999999998687e-06}, {'diff': 5.596999999999547e-06}, {'diff': 5.639000000001726e-06}, {'diff': 5.596999999999547e-06}, {'diff': 5.680999999996966e-06}, {'diff': 5.61200000000206e-06}, {'...</msg>
<status status="PASS" starttime="20201030 11:50:50.100" endtime="20201030 11:50:50.104"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:50.109" level="INFO">${ACCURACY} = {'diff': [5.624999999998687e-06, 5.596999999999547e-06, 5.639000000001726e-06, 5.596999999999547e-06, 5.680999999996966e-06, 5.61200000000206e-06, 5.596999999999547e-06, 5.624999999998687e-06, 5.63900...</msg>
<status status="PASS" starttime="20201030 11:50:50.105" endtime="20201030 11:50:50.109"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:50.114" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201030 11:50:50.112" endtime="20201030 11:50:50.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:50.116" level="INFO">VALUE: [5.624999999998687e-06, 5.596999999999547e-06, 5.639000000001726e-06, 5.596999999999547e-06, 5.680999999996966e-06, 5.61200000000206e-06, 5.596999999999547e-06, 5.624999999998687e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.541999999997271e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.653000000001296e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.5979999999990204e-06, 5.624999999998687e-06, 5.582999999999977e-06, 5.596999999999547e-06, 5.597000000003016e-06, 5.639000000001726e-06, 5.6529999999978264e-06, 5.582999999999977e-06, 5.6389999999982565e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.680000000000962e-06, 5.625000000002156e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.61199999999859e-06, 5.653000000001296e-06, 5.596999999999547e-06, 5.624999999998687e-06, 5.639000000001726e-06, 5.653000000001296e-06, 5.610999999999117e-06, 5.681000000000436e-06, 5.596999999999547e-06, 5.666000000001392e-06, 5.6389999999982565e-06, 5.624999999998687e-06, 5.639000000001726e-06, 5.625000000002156e-06, 5.6389999999982565e-06]</msg>
<status status="PASS" starttime="20201030 11:50:50.115" endtime="20201030 11:50:50.117"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.110" endtime="20201030 11:50:50.117"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:50.121" endtime="20201030 11:50:50.141"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.120" endtime="20201030 11:50:50.142"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.118" endtime="20201030 11:50:50.142"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.762" endtime="20201030 11:50:50.142"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.761" endtime="20201030 11:50:50.142"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:50.151" endtime="20201030 11:50:50.167"></status>
</kw>
<msg timestamp="20201030 11:50:50.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:50.150" endtime="20201030 11:50:50.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:50.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:50.169" endtime="20201030 11:50:50.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:50.171" endtime="20201030 11:50:50.173"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.147" endtime="20201030 11:50:50.173"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.145" endtime="20201030 11:50:50.174"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:50.180" endtime="20201030 11:50:50.468"></status>
</kw>
<msg timestamp="20201030 11:50:50.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022235319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022240917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:50.179" endtime="20201030 11:50:50.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:50.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022235319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022240917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:50.472" endtime="20201030 11:50:50.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:50.480" endtime="20201030 11:50:50.482"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.176" endtime="20201030 11:50:50.483"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.174" endtime="20201030 11:50:50.483"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:50.487" level="INFO">${RESULT} = [{'diff': 5.5979999999990204e-06}, {'diff': 5.61199999999859e-06}, {'diff': 5.610999999999117e-06}, {'diff': 5.624999999998687e-06}, {'diff': 5.6389999999982565e-06}, {'diff': 5.6389999999982565e-06},...</msg>
<status status="PASS" starttime="20201030 11:50:50.484" endtime="20201030 11:50:50.487"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:50.491" level="INFO">${ACCURACY} = {'diff': [5.5979999999990204e-06, 5.61199999999859e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.6389999999982565e-06, 5.6389999999982565e-06, 5.611000000002586e-06, 5.639000000001726e-06, 5.62...</msg>
<status status="PASS" starttime="20201030 11:50:50.488" endtime="20201030 11:50:50.491"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:50.495" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201030 11:50:50.494" endtime="20201030 11:50:50.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:50.498" level="INFO">VALUE: [5.5979999999990204e-06, 5.61199999999859e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.6389999999982565e-06, 5.6389999999982565e-06, 5.611000000002586e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.639000000001726e-06, 5.625000000002156e-06, 5.680000000000962e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.6389999999982565e-06, 5.610999999999117e-06, 5.639000000001726e-06, 5.596999999999547e-06, 5.596999999999547e-06, 5.611000000002586e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.596999999999547e-06, 5.611000000002586e-06, 5.6529999999978264e-06, 5.610999999999117e-06, 5.5839999999994505e-06, 5.5839999999994505e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.708000000000102e-06, 5.596999999999547e-06, 5.596999999999547e-06, 5.625000000002156e-06, 5.569000000000407e-06, 5.611000000002586e-06, 5.651999999998353e-06, 5.610999999999117e-06, 5.611000000002586e-06, 5.611000000002586e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.639000000001726e-06, 5.652000000001822e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.61199999999859e-06, 5.625000000002156e-06]</msg>
<status status="PASS" starttime="20201030 11:50:50.496" endtime="20201030 11:50:50.498"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.492" endtime="20201030 11:50:50.499"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:50.502" endtime="20201030 11:50:50.522"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.501" endtime="20201030 11:50:50.523"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.500" endtime="20201030 11:50:50.523"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.143" endtime="20201030 11:50:50.523"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.143" endtime="20201030 11:50:50.523"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:50.532" endtime="20201030 11:50:50.553"></status>
</kw>
<msg timestamp="20201030 11:50:50.554" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:50.530" endtime="20201030 11:50:50.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:50.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:50.555" endtime="20201030 11:50:50.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:50.557" endtime="20201030 11:50:50.559"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.528" endtime="20201030 11:50:50.559"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.526" endtime="20201030 11:50:50.560"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:50.566" endtime="20201030 11:50:50.852"></status>
</kw>
<msg timestamp="20201030 11:50:50.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023195083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023200708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:50.565" endtime="20201030 11:50:50.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:50.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023195083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023200708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:50.856" endtime="20201030 11:50:50.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:50.865" endtime="20201030 11:50:50.866"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.562" endtime="20201030 11:50:50.867"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.560" endtime="20201030 11:50:50.867"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:50.871" level="INFO">${RESULT} = [{'diff': 5.625000000002156e-06}, {'diff': 5.6389999999982565e-06}, {'diff': 5.624999999998687e-06}, {'diff': 5.652000000001822e-06}, {'diff': 5.61199999999859e-06}, {'diff': 5.5979999999990204e-06}, ...</msg>
<status status="PASS" starttime="20201030 11:50:50.868" endtime="20201030 11:50:50.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:50.875" level="INFO">${ACCURACY} = {'diff': [5.625000000002156e-06, 5.6389999999982565e-06, 5.624999999998687e-06, 5.652000000001822e-06, 5.61199999999859e-06, 5.5979999999990204e-06, 5.596999999999547e-06, 5.624999999998687e-06, 5.625...</msg>
<status status="PASS" starttime="20201030 11:50:50.872" endtime="20201030 11:50:50.875"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:50.880" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201030 11:50:50.879" endtime="20201030 11:50:50.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:50.882" level="INFO">VALUE: [5.625000000002156e-06, 5.6389999999982565e-06, 5.624999999998687e-06, 5.652000000001822e-06, 5.61199999999859e-06, 5.5979999999990204e-06, 5.596999999999547e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.611000000002586e-06, 5.611000000002586e-06, 5.625000000002156e-06, 5.625000000002156e-06, 5.681000000000436e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.610999999999117e-06, 5.680000000000962e-06, 5.596999999999547e-06, 5.695000000000006e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.6389999999982565e-06, 5.5979999999990204e-06, 5.610999999999117e-06, 5.596999999999547e-06, 5.639000000001726e-06, 5.5979999999990204e-06, 5.625000000002156e-06, 5.555000000000837e-06, 5.596999999999547e-06, 5.597000000003016e-06, 5.624999999998687e-06, 5.6389999999982565e-06, 5.625000000002156e-06, 5.5979999999990204e-06, 5.624999999998687e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.569000000000407e-06, 5.610999999999117e-06, 5.582999999999977e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.625000000002156e-06]</msg>
<status status="PASS" starttime="20201030 11:50:50.881" endtime="20201030 11:50:50.890"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.876" endtime="20201030 11:50:50.891"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:50.894" endtime="20201030 11:50:50.914"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.893" endtime="20201030 11:50:50.914"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.892" endtime="20201030 11:50:50.915"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.524" endtime="20201030 11:50:50.915"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.524" endtime="20201030 11:50:50.915"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:50.924" endtime="20201030 11:50:50.942"></status>
</kw>
<msg timestamp="20201030 11:50:50.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:50.922" endtime="20201030 11:50:50.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:50.945" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:50.943" endtime="20201030 11:50:50.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:50.946" endtime="20201030 11:50:50.947"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.919" endtime="20201030 11:50:50.948"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.917" endtime="20201030 11:50:50.948"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:50.954" endtime="20201030 11:50:51.243"></status>
</kw>
<msg timestamp="20201030 11:50:51.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022976014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022981639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:50.953" endtime="20201030 11:50:51.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:51.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022976014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022981639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:51.247" endtime="20201030 11:50:51.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:51.255" endtime="20201030 11:50:51.257"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.950" endtime="20201030 11:50:51.257"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.949" endtime="20201030 11:50:51.257"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:51.261" level="INFO">${RESULT} = [{'diff': 5.625000000002156e-06}, {'diff': 5.624999999998687e-06}, {'diff': 5.596999999999547e-06}, {'diff': 5.639000000001726e-06}, {'diff': 5.625000000002156e-06}, {'diff': 5.596999999999547e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:50:51.258" endtime="20201030 11:50:51.262"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:51.266" level="INFO">${ACCURACY} = {'diff': [5.625000000002156e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.639000000001726e-06, 5.625000000002156e-06, 5.596999999999547e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.6249...</msg>
<status status="PASS" starttime="20201030 11:50:51.262" endtime="20201030 11:50:51.267"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:51.271" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201030 11:50:51.270" endtime="20201030 11:50:51.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:51.273" level="INFO">VALUE: [5.625000000002156e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.639000000001726e-06, 5.625000000002156e-06, 5.596999999999547e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.596999999999547e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.611000000002586e-06, 5.6389999999982565e-06, 5.667000000000866e-06, 5.610999999999117e-06, 5.61199999999859e-06, 5.625000000002156e-06, 5.625000000002156e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.639000000001726e-06, 5.596999999999547e-06, 5.610999999999117e-06, 5.554999999997368e-06, 5.596999999999547e-06, 5.639000000001726e-06, 5.555999999996841e-06, 5.5979999999990204e-06, 5.596999999999547e-06, 5.624999999998687e-06, 5.637999999998783e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.610999999999117e-06, 5.681000000000436e-06, 5.5979999999990204e-06, 5.694000000000532e-06, 5.681000000000436e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.5979999999990204e-06, 5.5689999999969375e-06, 5.610999999999117e-06, 5.637999999998783e-06, 5.610999999999117e-06, 5.625000000002156e-06]</msg>
<status status="PASS" starttime="20201030 11:50:51.272" endtime="20201030 11:50:51.274"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.267" endtime="20201030 11:50:51.275"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:51.278" endtime="20201030 11:50:51.298"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.277" endtime="20201030 11:50:51.298"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.276" endtime="20201030 11:50:51.298"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.916" endtime="20201030 11:50:51.299"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.915" endtime="20201030 11:50:51.299"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:51.307" endtime="20201030 11:50:51.323"></status>
</kw>
<msg timestamp="20201030 11:50:51.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:51.306" endtime="20201030 11:50:51.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:51.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:51.325" endtime="20201030 11:50:51.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:51.327" endtime="20201030 11:50:51.329"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.303" endtime="20201030 11:50:51.329"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.301" endtime="20201030 11:50:51.330"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:51.336" endtime="20201030 11:50:51.625"></status>
</kw>
<msg timestamp="20201030 11:50:51.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021016931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021022542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:51.335" endtime="20201030 11:50:51.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:51.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021016931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021022542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:51.629" endtime="20201030 11:50:51.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:51.637" endtime="20201030 11:50:51.639"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.332" endtime="20201030 11:50:51.640"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.330" endtime="20201030 11:50:51.640"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:51.644" level="INFO">${RESULT} = [{'diff': 5.611000000002586e-06}, {'diff': 5.596999999999547e-06}, {'diff': 5.624999999998687e-06}, {'diff': 5.610999999999117e-06}, {'diff': 5.610999999999117e-06}, {'diff': 5.695000000000006e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:50:51.641" endtime="20201030 11:50:51.644"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:51.648" level="INFO">${ACCURACY} = {'diff': [5.611000000002586e-06, 5.596999999999547e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.695000000000006e-06, 5.6389999999982565e-06, 5.5839999999994505e-06, 5.65...</msg>
<status status="PASS" starttime="20201030 11:50:51.645" endtime="20201030 11:50:51.648"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:51.652" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201030 11:50:51.651" endtime="20201030 11:50:51.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:51.655" level="INFO">VALUE: [5.611000000002586e-06, 5.596999999999547e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.695000000000006e-06, 5.6389999999982565e-06, 5.5839999999994505e-06, 5.6529999999978264e-06, 5.610999999999117e-06, 5.5839999999994505e-06, 5.596999999999547e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.639000000001726e-06, 5.638000000002252e-06, 5.625000000002156e-06, 5.61200000000206e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.5839999999994505e-06, 5.625000000002156e-06, 5.611000000002586e-06, 5.653000000001296e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.611000000002586e-06, 5.625000000002156e-06, 5.542000000000741e-06, 5.610999999999117e-06, 5.5979999999990204e-06, 5.665999999997923e-06, 5.6389999999982565e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.596999999999547e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.611000000002586e-06, 5.639000000001726e-06, 5.639000000001726e-06, 5.639000000001726e-06, 5.639000000001726e-06]</msg>
<status status="PASS" starttime="20201030 11:50:51.654" endtime="20201030 11:50:51.656"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.649" endtime="20201030 11:50:51.656"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:51.660" endtime="20201030 11:50:51.679"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.658" endtime="20201030 11:50:51.680"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.657" endtime="20201030 11:50:51.680"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.300" endtime="20201030 11:50:51.680"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.299" endtime="20201030 11:50:51.680"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:51.689" endtime="20201030 11:50:51.709"></status>
</kw>
<msg timestamp="20201030 11:50:51.709" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:51.688" endtime="20201030 11:50:51.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:51.712" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:51.710" endtime="20201030 11:50:51.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:51.713" endtime="20201030 11:50:51.714"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.685" endtime="20201030 11:50:51.715"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.683" endtime="20201030 11:50:51.715"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:51.721" endtime="20201030 11:50:52.008"></status>
</kw>
<msg timestamp="20201030 11:50:52.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021372153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021377764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:51.720" endtime="20201030 11:50:52.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:52.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021372153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021377764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:52.012" endtime="20201030 11:50:52.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:52.020" endtime="20201030 11:50:52.022"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.717" endtime="20201030 11:50:52.022"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.716" endtime="20201030 11:50:52.023"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:52.027" level="INFO">${RESULT} = [{'diff': 5.610999999999117e-06}, {'diff': 5.694000000000532e-06}, {'diff': 5.596999999999547e-06}, {'diff': 5.582999999999977e-06}, {'diff': 5.596999999999547e-06}, {'diff': 5.6389999999982565e-06}, ...</msg>
<status status="PASS" starttime="20201030 11:50:52.024" endtime="20201030 11:50:52.027"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:52.031" level="INFO">${ACCURACY} = {'diff': [5.610999999999117e-06, 5.694000000000532e-06, 5.596999999999547e-06, 5.582999999999977e-06, 5.596999999999547e-06, 5.6389999999982565e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.610...</msg>
<status status="PASS" starttime="20201030 11:50:52.028" endtime="20201030 11:50:52.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:52.035" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201030 11:50:52.034" endtime="20201030 11:50:52.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:52.038" level="INFO">VALUE: [5.610999999999117e-06, 5.694000000000532e-06, 5.596999999999547e-06, 5.582999999999977e-06, 5.596999999999547e-06, 5.6389999999982565e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.653000000001296e-06, 5.625000000002156e-06, 5.5979999999990204e-06, 5.6389999999982565e-06, 5.653000000001296e-06, 5.708000000000102e-06, 5.624999999998687e-06, 5.5979999999990204e-06, 5.610999999999117e-06, 5.667000000000866e-06, 5.611000000002586e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.596999999999547e-06, 5.611000000002586e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.639000000001726e-06, 5.6389999999982565e-06, 5.596999999999547e-06, 5.652000000001822e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.582999999999977e-06, 5.596999999999547e-06, 5.610999999999117e-06, 5.596999999999547e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.681000000000436e-06, 5.624999999998687e-06, 5.569000000000407e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.611000000002586e-06, 5.624999999998687e-06, 5.6389999999982565e-06, 5.624999999998687e-06]</msg>
<status status="PASS" starttime="20201030 11:50:52.036" endtime="20201030 11:50:52.039"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.032" endtime="20201030 11:50:52.040"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:52.044" endtime="20201030 11:50:52.063"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.042" endtime="20201030 11:50:52.064"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.041" endtime="20201030 11:50:52.064"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.681" endtime="20201030 11:50:52.064"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.681" endtime="20201030 11:50:52.064"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:52.073" endtime="20201030 11:50:52.091"></status>
</kw>
<msg timestamp="20201030 11:50:52.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:52.071" endtime="20201030 11:50:52.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:52.094" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:52.093" endtime="20201030 11:50:52.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:52.095" endtime="20201030 11:50:52.097"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.069" endtime="20201030 11:50:52.097"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.067" endtime="20201030 11:50:52.098"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:52.104" endtime="20201030 11:50:52.388"></status>
</kw>
<msg timestamp="20201030 11:50:52.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024434375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02444, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 11:50:52.103" endtime="20201030 11:50:52.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:52.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024434375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02444, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 11:50:52.392" endtime="20201030 11:50:52.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:52.400" endtime="20201030 11:50:52.402"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.100" endtime="20201030 11:50:52.403"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.098" endtime="20201030 11:50:52.403"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:52.407" level="INFO">${RESULT} = [{'diff': 5.624999999998687e-06}, {'diff': 5.624999999998687e-06}, {'diff': 5.59800000000249e-06}, {'diff': 5.596999999999547e-06}, {'diff': 5.639000000001726e-06}, {'diff': 5.610999999999117e-06}, {'...</msg>
<status status="PASS" starttime="20201030 11:50:52.404" endtime="20201030 11:50:52.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:52.412" level="INFO">${ACCURACY} = {'diff': [5.624999999998687e-06, 5.624999999998687e-06, 5.59800000000249e-06, 5.596999999999547e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.653000000001296e-06, 5.596999999999547e-06, 5.62499...</msg>
<status status="PASS" starttime="20201030 11:50:52.408" endtime="20201030 11:50:52.412"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:52.416" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201030 11:50:52.415" endtime="20201030 11:50:52.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:52.419" level="INFO">VALUE: [5.624999999998687e-06, 5.624999999998687e-06, 5.59800000000249e-06, 5.596999999999547e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.653000000001296e-06, 5.596999999999547e-06, 5.624999999998687e-06, 5.5839999999994505e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.61199999999859e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.58400000000292e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.6389999999982565e-06, 5.556000000000311e-06, 5.596999999999547e-06, 5.569000000000407e-06, 5.59800000000249e-06, 5.596999999999547e-06, 5.569999999999881e-06, 5.6389999999982565e-06, 5.625000000002156e-06, 5.625000000002156e-06, 5.611000000002586e-06, 5.624999999998687e-06, 5.639000000001726e-06, 5.6389999999982565e-06, 5.610999999999117e-06, 5.611000000002586e-06, 5.596999999999547e-06, 5.611000000002586e-06, 5.639000000001726e-06, 5.596999999999547e-06, 5.5839999999994505e-06, 5.569000000000407e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.611000000002586e-06, 5.582999999999977e-06, 5.555999999996841e-06, 5.624999999998687e-06]</msg>
<status status="PASS" starttime="20201030 11:50:52.417" endtime="20201030 11:50:52.419"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.413" endtime="20201030 11:50:52.420"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:52.424" endtime="20201030 11:50:52.443"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.422" endtime="20201030 11:50:52.444"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.421" endtime="20201030 11:50:52.444"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.065" endtime="20201030 11:50:52.444"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.065" endtime="20201030 11:50:52.444"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:52.453" endtime="20201030 11:50:52.469"></status>
</kw>
<msg timestamp="20201030 11:50:52.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:52.451" endtime="20201030 11:50:52.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:52.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:52.471" endtime="20201030 11:50:52.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:52.473" endtime="20201030 11:50:52.475"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.449" endtime="20201030 11:50:52.475"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.447" endtime="20201030 11:50:52.476"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:52.482" endtime="20201030 11:50:52.770"></status>
</kw>
<msg timestamp="20201030 11:50:52.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021153097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021158722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:52.480" endtime="20201030 11:50:52.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:52.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021153097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021158722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:52.775" endtime="20201030 11:50:52.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:52.783" endtime="20201030 11:50:52.785"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.478" endtime="20201030 11:50:52.785"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.476" endtime="20201030 11:50:52.786"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:52.790" level="INFO">${RESULT} = [{'diff': 5.625000000002156e-06}, {'diff': 5.610999999999117e-06}, {'diff': 5.625000000002156e-06}, {'diff': 5.610999999999117e-06}, {'diff': 5.625000000002156e-06}, {'diff': 5.625000000002156e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:50:52.787" endtime="20201030 11:50:52.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:52.794" level="INFO">${ACCURACY} = {'diff': [5.625000000002156e-06, 5.610999999999117e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.625000000002156e-06, 5.625000000002156e-06, 5.639000000001726e-06, 5.5839999999994505e-06, 5.611...</msg>
<status status="PASS" starttime="20201030 11:50:52.791" endtime="20201030 11:50:52.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:52.798" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201030 11:50:52.797" endtime="20201030 11:50:52.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:52.801" level="INFO">VALUE: [5.625000000002156e-06, 5.610999999999117e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.625000000002156e-06, 5.625000000002156e-06, 5.639000000001726e-06, 5.5839999999994505e-06, 5.611000000002586e-06, 5.596999999999547e-06, 5.625000000002156e-06, 5.6389999999982565e-06, 5.597000000003016e-06, 5.596999999999547e-06, 5.6389999999982565e-06, 5.611000000002586e-06, 5.611000000002586e-06, 5.596999999999547e-06, 5.596999999999547e-06, 5.625000000002156e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.653000000001296e-06, 5.6389999999982565e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.638000000002252e-06, 5.5839999999994505e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.639000000001726e-06, 5.611000000002586e-06, 5.667000000000866e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.6529999999978264e-06, 5.582999999999977e-06, 5.624999999998687e-06, 5.611000000002586e-06, 5.653000000001296e-06, 5.625000000002156e-06, 5.582999999999977e-06, 5.596999999999547e-06, 5.639000000001726e-06, 5.6389999999982565e-06, 5.6389999999982565e-06, 5.639000000001726e-06, 5.625000000002156e-06]</msg>
<status status="PASS" starttime="20201030 11:50:52.799" endtime="20201030 11:50:52.802"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.795" endtime="20201030 11:50:52.802"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:52.806" endtime="20201030 11:50:52.825"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.804" endtime="20201030 11:50:52.826"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.803" endtime="20201030 11:50:52.826"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.445" endtime="20201030 11:50:52.826"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.445" endtime="20201030 11:50:52.826"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:52.835" endtime="20201030 11:50:52.855"></status>
</kw>
<msg timestamp="20201030 11:50:52.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:52.833" endtime="20201030 11:50:52.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:52.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:52.857" endtime="20201030 11:50:52.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:52.859" endtime="20201030 11:50:52.861"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.831" endtime="20201030 11:50:52.861"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.829" endtime="20201030 11:50:52.862"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:52.868" endtime="20201030 11:50:53.154"></status>
</kw>
<msg timestamp="20201030 11:50:53.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020966153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020971764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:52.867" endtime="20201030 11:50:53.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:53.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020966153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020971764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:53.159" endtime="20201030 11:50:53.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:53.167" endtime="20201030 11:50:53.169"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.864" endtime="20201030 11:50:53.170"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.862" endtime="20201030 11:50:53.170"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:53.174" level="INFO">${RESULT} = [{'diff': 5.610999999999117e-06}, {'diff': 5.694000000000532e-06}, {'diff': 5.624999999998687e-06}, {'diff': 5.6389999999982565e-06}, {'diff': 5.624999999998687e-06}, {'diff': 5.665999999997923e-06}, ...</msg>
<status status="PASS" starttime="20201030 11:50:53.171" endtime="20201030 11:50:53.175"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:53.179" level="INFO">${ACCURACY} = {'diff': [5.610999999999117e-06, 5.694000000000532e-06, 5.624999999998687e-06, 5.6389999999982565e-06, 5.624999999998687e-06, 5.665999999997923e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.638...</msg>
<status status="PASS" starttime="20201030 11:50:53.175" endtime="20201030 11:50:53.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:53.183" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201030 11:50:53.182" endtime="20201030 11:50:53.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:53.186" level="INFO">VALUE: [5.610999999999117e-06, 5.694000000000532e-06, 5.624999999998687e-06, 5.6389999999982565e-06, 5.624999999998687e-06, 5.665999999997923e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.6389999999982565e-06, 5.653000000001296e-06, 5.651999999998353e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.596999999999547e-06, 5.596999999999547e-06, 5.596999999999547e-06, 5.596999999999547e-06, 5.528000000001171e-06, 5.5839999999994505e-06, 5.610999999999117e-06, 5.653000000001296e-06, 5.624999999998687e-06, 5.611000000002586e-06, 5.596999999999547e-06, 5.555000000000837e-06, 5.596999999999547e-06, 5.680999999996966e-06, 5.624999999998687e-06, 5.61199999999859e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.611000000002586e-06, 5.639000000001726e-06, 5.637999999998783e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.653000000001296e-06, 5.583000000003446e-06, 5.6389999999982565e-06, 5.653000000001296e-06, 5.625000000002156e-06]</msg>
<status status="PASS" starttime="20201030 11:50:53.184" endtime="20201030 11:50:53.187"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.179" endtime="20201030 11:50:53.188"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:53.191" endtime="20201030 11:50:53.211"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.190" endtime="20201030 11:50:53.211"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.189" endtime="20201030 11:50:53.212"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.827" endtime="20201030 11:50:53.212"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.827" endtime="20201030 11:50:53.212"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:53.220" endtime="20201030 11:50:53.237"></status>
</kw>
<msg timestamp="20201030 11:50:53.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:53.219" endtime="20201030 11:50:53.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:53.240" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:53.239" endtime="20201030 11:50:53.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:53.241" endtime="20201030 11:50:53.243"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.216" endtime="20201030 11:50:53.243"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.214" endtime="20201030 11:50:53.244"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:53.250" endtime="20201030 11:50:53.539"></status>
</kw>
<msg timestamp="20201030 11:50:53.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022039375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022044986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:53.249" endtime="20201030 11:50:53.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:53.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022039375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022044986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:53.543" endtime="20201030 11:50:53.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:53.551" endtime="20201030 11:50:53.553"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.246" endtime="20201030 11:50:53.554"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.244" endtime="20201030 11:50:53.554"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:53.558" level="INFO">${RESULT} = [{'diff': 5.610999999999117e-06}, {'diff': 5.610999999999117e-06}, {'diff': 5.638000000002252e-06}, {'diff': 5.625000000002156e-06}, {'diff': 5.624999999998687e-06}, {'diff': 5.611000000002586e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:50:53.555" endtime="20201030 11:50:53.558"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:53.563" level="INFO">${ACCURACY} = {'diff': [5.610999999999117e-06, 5.610999999999117e-06, 5.638000000002252e-06, 5.625000000002156e-06, 5.624999999998687e-06, 5.611000000002586e-06, 5.610999999999117e-06, 5.694000000000532e-06, 5.6109...</msg>
<status status="PASS" starttime="20201030 11:50:53.559" endtime="20201030 11:50:53.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:53.567" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201030 11:50:53.566" endtime="20201030 11:50:53.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:53.570" level="INFO">VALUE: [5.610999999999117e-06, 5.610999999999117e-06, 5.638000000002252e-06, 5.625000000002156e-06, 5.624999999998687e-06, 5.611000000002586e-06, 5.610999999999117e-06, 5.694000000000532e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.555000000000837e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.637999999998783e-06, 5.639000000001726e-06, 5.625000000002156e-06, 5.5979999999990204e-06, 5.5839999999994505e-06, 5.625000000002156e-06, 5.639000000001726e-06, 5.596999999999547e-06, 5.554999999997368e-06, 5.610999999999117e-06, 5.596999999999547e-06, 5.625000000002156e-06, 5.61199999999859e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.667000000000866e-06, 5.611000000002586e-06, 5.624999999998687e-06, 5.639000000001726e-06, 5.611000000002586e-06, 5.625000000002156e-06, 5.637999999998783e-06, 5.6389999999982565e-06, 5.569000000000407e-06, 5.541999999997271e-06, 5.611000000002586e-06, 5.6389999999982565e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.569000000000407e-06, 5.610999999999117e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.596999999999547e-06, 5.666000000001392e-06]</msg>
<status status="PASS" starttime="20201030 11:50:53.568" endtime="20201030 11:50:53.570"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.564" endtime="20201030 11:50:53.571"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:53.575" endtime="20201030 11:50:53.594"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.573" endtime="20201030 11:50:53.595"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.572" endtime="20201030 11:50:53.595"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.213" endtime="20201030 11:50:53.595"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.212" endtime="20201030 11:50:53.595"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:53.604" endtime="20201030 11:50:53.619"></status>
</kw>
<msg timestamp="20201030 11:50:53.619" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:53.602" endtime="20201030 11:50:53.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:53.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:53.620" endtime="20201030 11:50:53.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:53.623" endtime="20201030 11:50:53.624"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.600" endtime="20201030 11:50:53.625"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.598" endtime="20201030 11:50:53.625"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:53.632" endtime="20201030 11:50:53.918"></status>
</kw>
<msg timestamp="20201030 11:50:53.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020531236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020536903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:53.630" endtime="20201030 11:50:53.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:53.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020531236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020536903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:53.922" endtime="20201030 11:50:53.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:53.931" endtime="20201030 11:50:53.932"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.628" endtime="20201030 11:50:53.933"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.626" endtime="20201030 11:50:53.933"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:53.937" level="INFO">${RESULT} = [{'diff': 5.666999999997396e-06}, {'diff': 5.637999999998783e-06}, {'diff': 5.596999999999547e-06}, {'diff': 5.639000000001726e-06}, {'diff': 5.610999999999117e-06}, {'diff': 5.596999999999547e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:50:53.934" endtime="20201030 11:50:53.937"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:53.941" level="INFO">${ACCURACY} = {'diff': [5.666999999997396e-06, 5.637999999998783e-06, 5.596999999999547e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.596999999999547e-06, 5.582999999999977e-06, 5.624999999998687e-06, 5.5699...</msg>
<status status="PASS" starttime="20201030 11:50:53.938" endtime="20201030 11:50:53.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:53.946" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201030 11:50:53.945" endtime="20201030 11:50:53.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:53.948" level="INFO">VALUE: [5.666999999997396e-06, 5.637999999998783e-06, 5.596999999999547e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.596999999999547e-06, 5.582999999999977e-06, 5.624999999998687e-06, 5.569999999999881e-06, 5.610999999999117e-06, 5.639000000001726e-06, 5.611000000002586e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.569000000000407e-06, 5.653000000001296e-06, 5.625000000002156e-06, 5.625000000002156e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.5839999999994505e-06, 5.597000000003016e-06, 5.625000000002156e-06, 5.569999999999881e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.610999999999117e-06, 5.569999999999881e-06, 5.625000000002156e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.625000000002156e-06, 5.637999999998783e-06, 5.653000000001296e-06, 5.625000000002156e-06, 5.625000000002156e-06, 5.624999999998687e-06, 5.611000000002586e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.6389999999982565e-06, 5.610999999999117e-06, 5.6389999999982565e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.596999999999547e-06, 5.569999999999881e-06]</msg>
<status status="PASS" starttime="20201030 11:50:53.947" endtime="20201030 11:50:53.949"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.942" endtime="20201030 11:50:53.949"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:53.953" endtime="20201030 11:50:53.972"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.952" endtime="20201030 11:50:53.973"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.950" endtime="20201030 11:50:53.973"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.596" endtime="20201030 11:50:53.974"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.596" endtime="20201030 11:50:53.974"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:53.982" endtime="20201030 11:50:54.002"></status>
</kw>
<msg timestamp="20201030 11:50:54.002" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:53.981" endtime="20201030 11:50:54.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:54.005" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:54.003" endtime="20201030 11:50:54.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:54.006" endtime="20201030 11:50:54.007"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.978" endtime="20201030 11:50:54.008"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.976" endtime="20201030 11:50:54.008"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:54.015" endtime="20201030 11:50:54.302"></status>
</kw>
<msg timestamp="20201030 11:50:54.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024057389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024063014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:54.013" endtime="20201030 11:50:54.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:54.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024057389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024063014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:54.306" endtime="20201030 11:50:54.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:54.314" endtime="20201030 11:50:54.316"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.011" endtime="20201030 11:50:54.316"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.009" endtime="20201030 11:50:54.317"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:54.320" level="INFO">${RESULT} = [{'diff': 5.625000000002156e-06}, {'diff': 5.610999999999117e-06}, {'diff': 5.597000000003016e-06}, {'diff': 5.611000000002586e-06}, {'diff': 5.610999999999117e-06}, {'diff': 5.667000000000866e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:50:54.317" endtime="20201030 11:50:54.321"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:54.325" level="INFO">${ACCURACY} = {'diff': [5.625000000002156e-06, 5.610999999999117e-06, 5.597000000003016e-06, 5.611000000002586e-06, 5.610999999999117e-06, 5.667000000000866e-06, 5.611000000002586e-06, 5.597000000003016e-06, 5.6109...</msg>
<status status="PASS" starttime="20201030 11:50:54.322" endtime="20201030 11:50:54.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:54.329" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201030 11:50:54.328" endtime="20201030 11:50:54.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:54.332" level="INFO">VALUE: [5.625000000002156e-06, 5.610999999999117e-06, 5.597000000003016e-06, 5.611000000002586e-06, 5.610999999999117e-06, 5.667000000000866e-06, 5.611000000002586e-06, 5.597000000003016e-06, 5.610999999999117e-06, 5.6389999999982565e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.597000000003016e-06, 5.5839999999994505e-06, 5.5839999999994505e-06, 5.637999999998783e-06, 5.610999999999117e-06, 5.5839999999994505e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.582999999999977e-06, 5.667000000000866e-06, 5.596999999999547e-06, 5.596999999999547e-06, 5.6529999999978264e-06, 5.610999999999117e-06, 5.596999999999547e-06, 5.6389999999982565e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.653000000001296e-06, 5.569000000000407e-06, 5.582999999999977e-06, 5.542000000000741e-06, 5.639000000001726e-06, 5.694000000000532e-06, 5.6529999999978264e-06, 5.639000000001726e-06, 5.639000000001726e-06, 5.596999999999547e-06, 5.528000000001171e-06, 5.5839999999994505e-06, 5.596999999999547e-06, 5.625000000002156e-06, 5.638000000002252e-06, 5.610999999999117e-06, 5.541999999997271e-06, 5.625000000002156e-06, 5.611000000002586e-06]</msg>
<status status="PASS" starttime="20201030 11:50:54.330" endtime="20201030 11:50:54.333"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.325" endtime="20201030 11:50:54.334"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:54.337" endtime="20201030 11:50:54.357"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.336" endtime="20201030 11:50:54.357"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.335" endtime="20201030 11:50:54.358"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.975" endtime="20201030 11:50:54.358"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.974" endtime="20201030 11:50:54.358"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:54.367" endtime="20201030 11:50:54.383"></status>
</kw>
<msg timestamp="20201030 11:50:54.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:54.365" endtime="20201030 11:50:54.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:54.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:54.385" endtime="20201030 11:50:54.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:54.387" endtime="20201030 11:50:54.389"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.363" endtime="20201030 11:50:54.389"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.360" endtime="20201030 11:50:54.390"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:54.396" endtime="20201030 11:50:54.682"></status>
</kw>
<msg timestamp="20201030 11:50:54.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021513361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021518931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:54.395" endtime="20201030 11:50:54.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:54.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021513361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021518931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:54.686" endtime="20201030 11:50:54.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:54.694" endtime="20201030 11:50:54.696"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.392" endtime="20201030 11:50:54.696"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.390" endtime="20201030 11:50:54.697"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:54.701" level="INFO">${RESULT} = [{'diff': 5.569999999999881e-06}, {'diff': 5.582999999999977e-06}, {'diff': 5.610999999999117e-06}, {'diff': 5.6389999999982565e-06}, {'diff': 5.637999999998783e-06}, {'diff': 5.680000000000962e-06}, ...</msg>
<status status="PASS" starttime="20201030 11:50:54.698" endtime="20201030 11:50:54.701"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:54.706" level="INFO">${ACCURACY} = {'diff': [5.569999999999881e-06, 5.582999999999977e-06, 5.610999999999117e-06, 5.6389999999982565e-06, 5.637999999998783e-06, 5.680000000000962e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.596...</msg>
<status status="PASS" starttime="20201030 11:50:54.702" endtime="20201030 11:50:54.706"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:54.710" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201030 11:50:54.709" endtime="20201030 11:50:54.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:54.713" level="INFO">VALUE: [5.569999999999881e-06, 5.582999999999977e-06, 5.610999999999117e-06, 5.6389999999982565e-06, 5.637999999998783e-06, 5.680000000000962e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.596999999999547e-06, 5.637999999998783e-06, 5.556000000000311e-06, 5.624999999998687e-06, 5.61199999999859e-06, 5.667000000000866e-06, 5.610999999999117e-06, 5.639000000001726e-06, 5.665999999997923e-06, 5.610999999999117e-06, 5.681000000000436e-06, 5.680000000000962e-06, 5.569000000000407e-06, 5.680000000000962e-06, 5.625000000002156e-06, 5.6389999999982565e-06, 5.610999999999117e-06, 5.653000000001296e-06, 5.596999999999547e-06, 5.639000000001726e-06, 5.637999999998783e-06, 5.611000000002586e-06, 5.569000000000407e-06, 5.596999999999547e-06, 5.5839999999994505e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.555000000000837e-06, 5.610999999999117e-06, 5.625000000002156e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.625000000002156e-06, 5.651999999998353e-06, 5.61200000000206e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.597000000003016e-06]</msg>
<status status="PASS" starttime="20201030 11:50:54.711" endtime="20201030 11:50:54.713"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.707" endtime="20201030 11:50:54.714"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:54.718" endtime="20201030 11:50:54.737"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.716" endtime="20201030 11:50:54.737"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.715" endtime="20201030 11:50:54.738"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.359" endtime="20201030 11:50:54.738"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.358" endtime="20201030 11:50:54.738"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:54.747" endtime="20201030 11:50:54.764"></status>
</kw>
<msg timestamp="20201030 11:50:54.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:54.745" endtime="20201030 11:50:54.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:54.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:54.766" endtime="20201030 11:50:54.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:54.768" endtime="20201030 11:50:54.770"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.743" endtime="20201030 11:50:54.770"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.741" endtime="20201030 11:50:54.771"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:54.777" endtime="20201030 11:50:55.067"></status>
</kw>
<msg timestamp="20201030 11:50:55.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023205458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023211125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:54.776" endtime="20201030 11:50:55.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:55.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023205458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023211125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:55.071" endtime="20201030 11:50:55.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:55.079" endtime="20201030 11:50:55.081"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.773" endtime="20201030 11:50:55.081"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.772" endtime="20201030 11:50:55.082"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:55.086" level="INFO">${RESULT} = [{'diff': 5.666999999997396e-06}, {'diff': 5.637999999998783e-06}, {'diff': 5.625000000002156e-06}, {'diff': 5.611000000002586e-06}, {'diff': 5.59800000000249e-06}, {'diff': 5.596999999999547e-06}, {'...</msg>
<status status="PASS" starttime="20201030 11:50:55.083" endtime="20201030 11:50:55.086"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:55.090" level="INFO">${ACCURACY} = {'diff': [5.666999999997396e-06, 5.637999999998783e-06, 5.625000000002156e-06, 5.611000000002586e-06, 5.59800000000249e-06, 5.596999999999547e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.62499...</msg>
<status status="PASS" starttime="20201030 11:50:55.087" endtime="20201030 11:50:55.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:55.094" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201030 11:50:55.093" endtime="20201030 11:50:55.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:55.097" level="INFO">VALUE: [5.666999999997396e-06, 5.637999999998783e-06, 5.625000000002156e-06, 5.611000000002586e-06, 5.59800000000249e-06, 5.596999999999547e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.5979999999990204e-06, 5.625000000002156e-06, 5.582999999999977e-06, 5.625000000002156e-06, 5.61200000000206e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.541999999997271e-06, 5.542000000000741e-06, 5.596999999999547e-06, 5.6389999999982565e-06, 5.610999999999117e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.569000000000407e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.665999999997923e-06, 5.6389999999982565e-06, 5.639000000001726e-06, 5.597000000003016e-06, 5.611000000002586e-06, 5.610999999999117e-06, 5.596999999999547e-06, 5.639000000001726e-06, 5.6389999999982565e-06, 5.625000000002156e-06, 5.624999999998687e-06, 5.652000000001822e-06, 5.639000000001726e-06, 5.667000000000866e-06, 5.582999999999977e-06, 5.681000000000436e-06, 5.637999999998783e-06, 5.625000000002156e-06, 5.625000000002156e-06, 5.5839999999994505e-06, 5.625000000002156e-06, 5.624999999998687e-06]</msg>
<status status="PASS" starttime="20201030 11:50:55.095" endtime="20201030 11:50:55.097"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.091" endtime="20201030 11:50:55.098"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:55.102" endtime="20201030 11:50:55.121"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.100" endtime="20201030 11:50:55.122"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.099" endtime="20201030 11:50:55.122"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.739" endtime="20201030 11:50:55.122"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.739" endtime="20201030 11:50:55.122"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:55.131" endtime="20201030 11:50:55.147"></status>
</kw>
<msg timestamp="20201030 11:50:55.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:55.129" endtime="20201030 11:50:55.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:55.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:55.149" endtime="20201030 11:50:55.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:55.151" endtime="20201030 11:50:55.153"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.127" endtime="20201030 11:50:55.153"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.125" endtime="20201030 11:50:55.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:55.160" endtime="20201030 11:50:55.444"></status>
</kw>
<msg timestamp="20201030 11:50:55.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020876556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020882181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:55.159" endtime="20201030 11:50:55.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:55.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020876556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020882181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:55.449" endtime="20201030 11:50:55.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:55.457" endtime="20201030 11:50:55.458"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.156" endtime="20201030 11:50:55.459"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.154" endtime="20201030 11:50:55.459"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:55.463" level="INFO">${RESULT} = [{'diff': 5.624999999998687e-06}, {'diff': 5.653000000001296e-06}, {'diff': 5.610999999999117e-06}, {'diff': 5.6529999999978264e-06}, {'diff': 5.624999999998687e-06}, {'diff': 5.596999999999547e-06}, ...</msg>
<status status="PASS" starttime="20201030 11:50:55.460" endtime="20201030 11:50:55.464"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:55.468" level="INFO">${ACCURACY} = {'diff': [5.624999999998687e-06, 5.653000000001296e-06, 5.610999999999117e-06, 5.6529999999978264e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.610999999999117e-06, 5.695000000000006e-06, 5.638...</msg>
<status status="PASS" starttime="20201030 11:50:55.464" endtime="20201030 11:50:55.468"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:55.472" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201030 11:50:55.471" endtime="20201030 11:50:55.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:55.474" level="INFO">VALUE: [5.624999999998687e-06, 5.653000000001296e-06, 5.610999999999117e-06, 5.6529999999978264e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.610999999999117e-06, 5.695000000000006e-06, 5.6389999999982565e-06, 5.596999999999547e-06, 5.596999999999547e-06, 5.610999999999117e-06, 5.6389999999982565e-06, 5.569999999999881e-06, 5.597000000003016e-06, 5.5979999999990204e-06, 5.6389999999982565e-06, 5.610999999999117e-06, 5.680000000000962e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.5979999999990204e-06, 5.610999999999117e-06, 5.596999999999547e-06, 5.582999999999977e-06, 5.639000000001726e-06, 5.596999999999547e-06, 5.58400000000292e-06, 5.625000000002156e-06, 5.625000000002156e-06, 5.611000000002586e-06, 5.61200000000206e-06, 5.625000000002156e-06, 5.611000000002586e-06, 5.569999999999881e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.6389999999982565e-06, 5.625000000002156e-06, 5.625000000002156e-06, 5.6389999999982565e-06, 5.610999999999117e-06, 5.582999999999977e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.61199999999859e-06]</msg>
<status status="PASS" starttime="20201030 11:50:55.473" endtime="20201030 11:50:55.476"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.468" endtime="20201030 11:50:55.477"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:55.480" endtime="20201030 11:50:55.499"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.479" endtime="20201030 11:50:55.500"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.477" endtime="20201030 11:50:55.500"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.123" endtime="20201030 11:50:55.501"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.123" endtime="20201030 11:50:55.501"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:55.509" endtime="20201030 11:50:55.529"></status>
</kw>
<msg timestamp="20201030 11:50:55.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:55.508" endtime="20201030 11:50:55.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:55.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:55.530" endtime="20201030 11:50:55.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:55.533" endtime="20201030 11:50:55.534"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.505" endtime="20201030 11:50:55.535"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.503" endtime="20201030 11:50:55.535"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:55.542" endtime="20201030 11:50:55.826"></status>
</kw>
<msg timestamp="20201030 11:50:55.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024281792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024287389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:55.540" endtime="20201030 11:50:55.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:55.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024281792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024287389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:55.830" endtime="20201030 11:50:55.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:55.838" endtime="20201030 11:50:55.840"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.538" endtime="20201030 11:50:55.841"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.536" endtime="20201030 11:50:55.841"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:55.845" level="INFO">${RESULT} = [{'diff': 5.596999999999547e-06}, {'diff': 5.611000000002586e-06}, {'diff': 5.610999999999117e-06}, {'diff': 5.625000000002156e-06}, {'diff': 5.666999999997396e-06}, {'diff': 5.5979999999990204e-06}, ...</msg>
<status status="PASS" starttime="20201030 11:50:55.842" endtime="20201030 11:50:55.845"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:55.850" level="INFO">${ACCURACY} = {'diff': [5.596999999999547e-06, 5.611000000002586e-06, 5.610999999999117e-06, 5.625000000002156e-06, 5.666999999997396e-06, 5.5979999999990204e-06, 5.556000000000311e-06, 5.639000000001726e-06, 5.596...</msg>
<status status="PASS" starttime="20201030 11:50:55.846" endtime="20201030 11:50:55.850"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:55.854" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201030 11:50:55.853" endtime="20201030 11:50:55.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:55.857" level="INFO">VALUE: [5.596999999999547e-06, 5.611000000002586e-06, 5.610999999999117e-06, 5.625000000002156e-06, 5.666999999997396e-06, 5.5979999999990204e-06, 5.556000000000311e-06, 5.639000000001726e-06, 5.596999999999547e-06, 5.5979999999990204e-06, 5.639000000001726e-06, 5.611000000002586e-06, 5.596999999999547e-06, 5.611000000002586e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.639000000001726e-06, 5.6389999999982565e-06, 5.694000000000532e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.625000000002156e-06, 5.569000000000407e-06, 5.61200000000206e-06, 5.610999999999117e-06, 5.597000000003016e-06, 5.625000000002156e-06, 5.596999999999547e-06, 5.624999999998687e-06, 5.526999999998228e-06, 5.625000000002156e-06, 5.624999999998687e-06, 5.667000000000866e-06, 5.569999999999881e-06, 5.639000000001726e-06, 5.596999999999547e-06, 5.625000000002156e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.651999999998353e-06, 5.639000000001726e-06, 5.597000000003016e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.625000000002156e-06, 5.681000000000436e-06, 5.639000000001726e-06]</msg>
<status status="PASS" starttime="20201030 11:50:55.856" endtime="20201030 11:50:55.858"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.851" endtime="20201030 11:50:55.858"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:55.862" endtime="20201030 11:50:55.881"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.860" endtime="20201030 11:50:55.882"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.859" endtime="20201030 11:50:55.882"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.502" endtime="20201030 11:50:55.882"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.501" endtime="20201030 11:50:55.883"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:55.891" endtime="20201030 11:50:55.910"></status>
</kw>
<msg timestamp="20201030 11:50:55.911" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:55.889" endtime="20201030 11:50:55.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:55.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:55.912" endtime="20201030 11:50:55.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:55.914" endtime="20201030 11:50:55.916"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.887" endtime="20201030 11:50:55.917"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.885" endtime="20201030 11:50:55.917"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:55.923" endtime="20201030 11:50:56.208"></status>
</kw>
<msg timestamp="20201030 11:50:56.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024356542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024362167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:55.922" endtime="20201030 11:50:56.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:56.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024356542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024362167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:56.213" endtime="20201030 11:50:56.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:56.222" endtime="20201030 11:50:56.223"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.919" endtime="20201030 11:50:56.224"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.918" endtime="20201030 11:50:56.224"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:56.228" level="INFO">${RESULT} = [{'diff': 5.625000000002156e-06}, {'diff': 5.625000000002156e-06}, {'diff': 5.639000000001726e-06}, {'diff': 5.624999999998687e-06}, {'diff': 5.624999999998687e-06}, {'diff': 5.582999999999977e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:50:56.225" endtime="20201030 11:50:56.228"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:56.232" level="INFO">${ACCURACY} = {'diff': [5.625000000002156e-06, 5.625000000002156e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.582999999999977e-06, 5.611000000002586e-06, 5.610999999999117e-06, 5.6110...</msg>
<status status="PASS" starttime="20201030 11:50:56.229" endtime="20201030 11:50:56.232"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:56.237" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201030 11:50:56.236" endtime="20201030 11:50:56.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:56.239" level="INFO">VALUE: [5.625000000002156e-06, 5.625000000002156e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.582999999999977e-06, 5.611000000002586e-06, 5.610999999999117e-06, 5.611000000002586e-06, 5.639000000001726e-06, 5.59800000000249e-06, 5.625000000002156e-06, 5.624999999998687e-06, 5.611000000002586e-06, 5.61200000000206e-06, 5.639000000001726e-06, 5.694000000000532e-06, 5.639000000001726e-06, 5.625000000002156e-06, 5.6389999999982565e-06, 5.624999999998687e-06, 5.611000000002586e-06, 5.596999999999547e-06, 5.6389999999982565e-06, 5.6389999999982565e-06, 5.637999999998783e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.582999999999977e-06, 5.639000000001726e-06, 5.6389999999982565e-06, 5.611000000002586e-06, 5.611000000002586e-06, 5.6529999999978264e-06, 5.597000000003016e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.596999999999547e-06, 5.653000000001296e-06, 5.6389999999982565e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.639000000001726e-06, 5.637999999998783e-06, 5.639000000001726e-06, 5.639000000001726e-06]</msg>
<status status="PASS" starttime="20201030 11:50:56.238" endtime="20201030 11:50:56.244"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.233" endtime="20201030 11:50:56.245"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:56.249" endtime="20201030 11:50:56.268"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.247" endtime="20201030 11:50:56.269"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.246" endtime="20201030 11:50:56.269"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.883" endtime="20201030 11:50:56.269"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.883" endtime="20201030 11:50:56.269"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:56.278" endtime="20201030 11:50:56.297"></status>
</kw>
<msg timestamp="20201030 11:50:56.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:56.277" endtime="20201030 11:50:56.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:56.300" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:56.298" endtime="20201030 11:50:56.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:56.301" endtime="20201030 11:50:56.303"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.274" endtime="20201030 11:50:56.303"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.272" endtime="20201030 11:50:56.304"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:56.310" endtime="20201030 11:50:56.594"></status>
</kw>
<msg timestamp="20201030 11:50:56.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024333472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024339111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:56.308" endtime="20201030 11:50:56.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:56.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024333472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024339111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:56.598" endtime="20201030 11:50:56.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:56.606" endtime="20201030 11:50:56.608"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.306" endtime="20201030 11:50:56.608"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.304" endtime="20201030 11:50:56.609"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:56.613" level="INFO">${RESULT} = [{'diff': 5.639000000001726e-06}, {'diff': 5.611000000002586e-06}, {'diff': 5.569999999999881e-06}, {'diff': 5.6389999999982565e-06}, {'diff': 5.611000000002586e-06}, {'diff': 5.611000000002586e-06}, ...</msg>
<status status="PASS" starttime="20201030 11:50:56.609" endtime="20201030 11:50:56.613"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:56.617" level="INFO">${ACCURACY} = {'diff': [5.639000000001726e-06, 5.611000000002586e-06, 5.569999999999881e-06, 5.6389999999982565e-06, 5.611000000002586e-06, 5.611000000002586e-06, 5.569000000000407e-06, 5.59800000000249e-06, 5.5980...</msg>
<status status="PASS" starttime="20201030 11:50:56.614" endtime="20201030 11:50:56.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:56.621" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201030 11:50:56.620" endtime="20201030 11:50:56.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:56.624" level="INFO">VALUE: [5.639000000001726e-06, 5.611000000002586e-06, 5.569999999999881e-06, 5.6389999999982565e-06, 5.611000000002586e-06, 5.611000000002586e-06, 5.569000000000407e-06, 5.59800000000249e-06, 5.59800000000249e-06, 5.653000000001296e-06, 5.610999999999117e-06, 5.5979999999990204e-06, 5.639000000001726e-06, 5.638000000002252e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.680000000000962e-06, 5.596999999999547e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.5979999999990204e-06, 5.611000000002586e-06, 5.625000000002156e-06, 5.651999999998353e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.694000000000532e-06, 5.611000000002586e-06, 5.61199999999859e-06, 5.624999999998687e-06, 5.5979999999990204e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.582999999999977e-06, 5.61199999999859e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.6389999999982565e-06, 5.624999999998687e-06, 5.652000000001822e-06, 5.610999999999117e-06, 5.527000000001697e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.541999999997271e-06, 5.611000000002586e-06, 5.639000000001726e-06]</msg>
<status status="PASS" starttime="20201030 11:50:56.622" endtime="20201030 11:50:56.625"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.617" endtime="20201030 11:50:56.626"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:56.629" endtime="20201030 11:50:56.649"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.628" endtime="20201030 11:50:56.649"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.627" endtime="20201030 11:50:56.650"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.270" endtime="20201030 11:50:56.650"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.270" endtime="20201030 11:50:56.650"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:56.658" endtime="20201030 11:50:56.673"></status>
</kw>
<msg timestamp="20201030 11:50:56.674" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:56.657" endtime="20201030 11:50:56.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:56.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:56.675" endtime="20201030 11:50:56.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:56.677" endtime="20201030 11:50:56.679"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.654" endtime="20201030 11:50:56.680"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.652" endtime="20201030 11:50:56.680"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:56.686" endtime="20201030 11:50:56.971"></status>
</kw>
<msg timestamp="20201030 11:50:56.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020613361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020619014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:56.685" endtime="20201030 11:50:56.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:56.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020613361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020619014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:56.975" endtime="20201030 11:50:56.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:56.983" endtime="20201030 11:50:56.985"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.682" endtime="20201030 11:50:56.985"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.681" endtime="20201030 11:50:56.986"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:56.989" level="INFO">${RESULT} = [{'diff': 5.653000000001296e-06}, {'diff': 5.6529999999978264e-06}, {'diff': 5.5979999999990204e-06}, {'diff': 5.666000000001392e-06}, {'diff': 5.624999999998687e-06}, {'diff': 5.582999999999977e-06},...</msg>
<status status="PASS" starttime="20201030 11:50:56.986" endtime="20201030 11:50:56.990"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:56.995" level="INFO">${ACCURACY} = {'diff': [5.653000000001296e-06, 5.6529999999978264e-06, 5.5979999999990204e-06, 5.666000000001392e-06, 5.624999999998687e-06, 5.582999999999977e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.59...</msg>
<status status="PASS" starttime="20201030 11:50:56.990" endtime="20201030 11:50:56.995"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:56.999" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201030 11:50:56.998" endtime="20201030 11:50:56.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:57.002" level="INFO">VALUE: [5.653000000001296e-06, 5.6529999999978264e-06, 5.5979999999990204e-06, 5.666000000001392e-06, 5.624999999998687e-06, 5.582999999999977e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.625000000002156e-06, 5.639000000001726e-06, 5.6389999999982565e-06, 5.597000000003016e-06, 5.624999999998687e-06, 5.5839999999994505e-06, 5.625000000002156e-06, 5.624999999998687e-06, 5.555999999996841e-06, 5.582999999999977e-06, 5.611000000002586e-06, 5.582999999999977e-06, 5.611000000002586e-06, 5.624999999998687e-06, 5.694000000000532e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.637999999998783e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.5839999999994505e-06, 5.569000000000407e-06, 5.610999999999117e-06, 5.5839999999994505e-06, 5.624999999998687e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.625000000002156e-06, 5.624999999998687e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.653000000001296e-06, 5.651999999998353e-06, 5.625000000002156e-06, 5.597000000003016e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.639000000001726e-06]</msg>
<status status="PASS" starttime="20201030 11:50:57.000" endtime="20201030 11:50:57.002"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.995" endtime="20201030 11:50:57.003"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:57.006" endtime="20201030 11:50:57.026"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.005" endtime="20201030 11:50:57.026"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.004" endtime="20201030 11:50:57.027"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.651" endtime="20201030 11:50:57.027"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.650" endtime="20201030 11:50:57.027"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:57.036" endtime="20201030 11:50:57.054"></status>
</kw>
<msg timestamp="20201030 11:50:57.054" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:57.034" endtime="20201030 11:50:57.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:57.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:57.055" endtime="20201030 11:50:57.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:57.058" endtime="20201030 11:50:57.059"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.032" endtime="20201030 11:50:57.060"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.030" endtime="20201030 11:50:57.060"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:57.067" endtime="20201030 11:50:57.355"></status>
</kw>
<msg timestamp="20201030 11:50:57.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020177083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020182708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:57.065" endtime="20201030 11:50:57.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:57.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020177083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020182708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:57.359" endtime="20201030 11:50:57.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:57.367" endtime="20201030 11:50:57.369"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.063" endtime="20201030 11:50:57.369"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.061" endtime="20201030 11:50:57.370"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:57.374" level="INFO">${RESULT} = [{'diff': 5.625000000002156e-06}, {'diff': 5.694000000000532e-06}, {'diff': 5.681000000000436e-06}, {'diff': 5.639000000001726e-06}, {'diff': 5.624999999998687e-06}, {'diff': 5.596999999999547e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:50:57.370" endtime="20201030 11:50:57.374"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:57.378" level="INFO">${ACCURACY} = {'diff': [5.625000000002156e-06, 5.694000000000532e-06, 5.681000000000436e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.596999999999547e-06, 5.624999999998687e-06, 5.5969...</msg>
<status status="PASS" starttime="20201030 11:50:57.375" endtime="20201030 11:50:57.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:57.382" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201030 11:50:57.381" endtime="20201030 11:50:57.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:57.385" level="INFO">VALUE: [5.625000000002156e-06, 5.694000000000532e-06, 5.681000000000436e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.596999999999547e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.554999999997368e-06, 5.625000000002156e-06, 5.625000000002156e-06, 5.639000000001726e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.582999999999977e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.653000000001296e-06, 5.666999999997396e-06, 5.5979999999990204e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.527999999997701e-06, 5.610999999999117e-06, 5.58400000000292e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.708000000000102e-06, 5.596999999999547e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.6389999999982565e-06, 5.611000000002586e-06, 5.625000000002156e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.61200000000206e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.625000000002156e-06, 5.596999999999547e-06, 5.625000000002156e-06, 5.639000000001726e-06, 5.624999999998687e-06]</msg>
<status status="PASS" starttime="20201030 11:50:57.383" endtime="20201030 11:50:57.385"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.378" endtime="20201030 11:50:57.386"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:57.389" endtime="20201030 11:50:57.409"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.388" endtime="20201030 11:50:57.409"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.387" endtime="20201030 11:50:57.410"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.028" endtime="20201030 11:50:57.410"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.027" endtime="20201030 11:50:57.410"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:57.419" endtime="20201030 11:50:57.438"></status>
</kw>
<msg timestamp="20201030 11:50:57.438" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:57.417" endtime="20201030 11:50:57.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:57.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:57.439" endtime="20201030 11:50:57.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:57.442" endtime="20201030 11:50:57.443"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.415" endtime="20201030 11:50:57.444"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.413" endtime="20201030 11:50:57.445"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:57.451" endtime="20201030 11:50:57.737"></status>
</kw>
<msg timestamp="20201030 11:50:57.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024095389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024101, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:50:57.449" endtime="20201030 11:50:57.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:57.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024095389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024101, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:50:57.741" endtime="20201030 11:50:57.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:57.750" endtime="20201030 11:50:57.751"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.447" endtime="20201030 11:50:57.752"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.445" endtime="20201030 11:50:57.752"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:57.756" level="INFO">${RESULT} = [{'diff': 5.611000000002586e-06}, {'diff': 5.610999999999117e-06}, {'diff': 5.639000000001726e-06}, {'diff': 5.5979999999990204e-06}, {'diff': 5.610999999999117e-06}, {'diff': 5.624999999998687e-06}, ...</msg>
<status status="PASS" starttime="20201030 11:50:57.753" endtime="20201030 11:50:57.756"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:57.760" level="INFO">${ACCURACY} = {'diff': [5.611000000002586e-06, 5.610999999999117e-06, 5.639000000001726e-06, 5.5979999999990204e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.639000000001726e-06, 5.651999999998353e-06, 5.639...</msg>
<status status="PASS" starttime="20201030 11:50:57.757" endtime="20201030 11:50:57.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:57.765" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201030 11:50:57.764" endtime="20201030 11:50:57.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:57.767" level="INFO">VALUE: [5.611000000002586e-06, 5.610999999999117e-06, 5.639000000001726e-06, 5.5979999999990204e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.639000000001726e-06, 5.651999999998353e-06, 5.639000000001726e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.5839999999994505e-06, 5.596999999999547e-06, 5.653000000001296e-06, 5.639000000001726e-06, 5.638000000002252e-06, 5.610999999999117e-06, 5.61199999999859e-06, 5.569999999999881e-06, 5.556000000000311e-06, 5.610999999999117e-06, 5.6389999999982565e-06, 5.624999999998687e-06, 5.556000000000311e-06, 5.597000000003016e-06, 5.653000000001296e-06, 5.680999999996966e-06, 5.610999999999117e-06, 5.6389999999982565e-06, 5.611000000002586e-06, 5.624999999998687e-06, 5.582999999999977e-06, 5.610999999999117e-06, 5.611000000002586e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.639000000001726e-06, 5.5979999999990204e-06, 5.667000000000866e-06, 5.569000000000407e-06, 5.625000000002156e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.639000000001726e-06, 5.651999999998353e-06, 5.596999999999547e-06, 5.624999999998687e-06, 5.667000000000866e-06, 5.569999999999881e-06]</msg>
<status status="PASS" starttime="20201030 11:50:57.766" endtime="20201030 11:50:57.769"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.761" endtime="20201030 11:50:57.769"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:57.773" endtime="20201030 11:50:57.792"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.771" endtime="20201030 11:50:57.793"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.770" endtime="20201030 11:50:57.793"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.411" endtime="20201030 11:50:57.793"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.410" endtime="20201030 11:50:57.793"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:57.802" endtime="20201030 11:50:57.819"></status>
</kw>
<msg timestamp="20201030 11:50:57.820" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:57.801" endtime="20201030 11:50:57.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:57.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:57.821" endtime="20201030 11:50:57.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:57.823" endtime="20201030 11:50:57.825"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.798" endtime="20201030 11:50:57.825"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.796" endtime="20201030 11:50:57.826"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:57.832" endtime="20201030 11:50:58.117"></status>
</kw>
<msg timestamp="20201030 11:50:58.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022548903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022554514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:57.831" endtime="20201030 11:50:58.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:58.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022548903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022554514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:58.121" endtime="20201030 11:50:58.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:58.129" endtime="20201030 11:50:58.131"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.828" endtime="20201030 11:50:58.131"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.826" endtime="20201030 11:50:58.132"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:58.136" level="INFO">${RESULT} = [{'diff': 5.611000000002586e-06}, {'diff': 5.6389999999982565e-06}, {'diff': 5.639000000001726e-06}, {'diff': 5.611000000002586e-06}, {'diff': 5.61200000000206e-06}, {'diff': 5.611000000002586e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:50:58.133" endtime="20201030 11:50:58.136"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:58.141" level="INFO">${ACCURACY} = {'diff': [5.611000000002586e-06, 5.6389999999982565e-06, 5.639000000001726e-06, 5.611000000002586e-06, 5.61200000000206e-06, 5.611000000002586e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.5840...</msg>
<status status="PASS" starttime="20201030 11:50:58.137" endtime="20201030 11:50:58.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:58.145" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201030 11:50:58.144" endtime="20201030 11:50:58.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:58.148" level="INFO">VALUE: [5.611000000002586e-06, 5.6389999999982565e-06, 5.639000000001726e-06, 5.611000000002586e-06, 5.61200000000206e-06, 5.611000000002586e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.58400000000292e-06, 5.624999999998687e-06, 5.611000000002586e-06, 5.596999999999547e-06, 5.625000000002156e-06, 5.624999999998687e-06, 5.5839999999994505e-06, 5.610999999999117e-06, 5.6389999999982565e-06, 5.596999999999547e-06, 5.625000000002156e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.61200000000206e-06, 5.667000000000866e-06, 5.639000000001726e-06, 5.625000000002156e-06, 5.596999999999547e-06, 5.624999999998687e-06, 5.597000000003016e-06, 5.611000000002586e-06, 5.556000000000311e-06, 5.666000000001392e-06, 5.610999999999117e-06, 5.625000000002156e-06, 5.624999999998687e-06, 5.694000000000532e-06, 5.610999999999117e-06, 5.639000000001726e-06, 5.625000000002156e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.625000000002156e-06, 5.596999999999547e-06, 5.624999999998687e-06, 5.6389999999982565e-06, 5.59800000000249e-06, 5.596999999999547e-06, 5.596999999999547e-06]</msg>
<status status="PASS" starttime="20201030 11:50:58.146" endtime="20201030 11:50:58.148"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.141" endtime="20201030 11:50:58.149"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:58.153" endtime="20201030 11:50:58.172"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.151" endtime="20201030 11:50:58.173"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.150" endtime="20201030 11:50:58.173"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.794" endtime="20201030 11:50:58.173"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.794" endtime="20201030 11:50:58.173"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:58.182" endtime="20201030 11:50:58.206"></status>
</kw>
<msg timestamp="20201030 11:50:58.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:58.180" endtime="20201030 11:50:58.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:58.208" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:58.207" endtime="20201030 11:50:58.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:58.209" endtime="20201030 11:50:58.211"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.178" endtime="20201030 11:50:58.212"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.176" endtime="20201030 11:50:58.212"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:58.218" endtime="20201030 11:50:58.506"></status>
</kw>
<msg timestamp="20201030 11:50:58.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024530542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024536139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:58.217" endtime="20201030 11:50:58.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:58.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024530542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024536139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:58.510" endtime="20201030 11:50:58.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:58.518" endtime="20201030 11:50:58.520"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.214" endtime="20201030 11:50:58.521"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.213" endtime="20201030 11:50:58.521"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:58.525" level="INFO">${RESULT} = [{'diff': 5.596999999999547e-06}, {'diff': 5.611000000002586e-06}, {'diff': 5.542000000000741e-06}, {'diff': 5.610999999999117e-06}, {'diff': 5.59800000000249e-06}, {'diff': 5.624999999998687e-06}, {'...</msg>
<status status="PASS" starttime="20201030 11:50:58.522" endtime="20201030 11:50:58.525"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:58.529" level="INFO">${ACCURACY} = {'diff': [5.596999999999547e-06, 5.611000000002586e-06, 5.542000000000741e-06, 5.610999999999117e-06, 5.59800000000249e-06, 5.624999999998687e-06, 5.611000000002586e-06, 5.667000000000866e-06, 5.58399...</msg>
<status status="PASS" starttime="20201030 11:50:58.526" endtime="20201030 11:50:58.529"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:58.533" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201030 11:50:58.532" endtime="20201030 11:50:58.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:58.536" level="INFO">VALUE: [5.596999999999547e-06, 5.611000000002586e-06, 5.542000000000741e-06, 5.610999999999117e-06, 5.59800000000249e-06, 5.624999999998687e-06, 5.611000000002586e-06, 5.667000000000866e-06, 5.5839999999994505e-06, 5.596999999999547e-06, 5.624999999998687e-06, 5.681000000000436e-06, 5.582999999999977e-06, 5.61199999999859e-06, 5.569000000000407e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.6389999999982565e-06, 5.597000000003016e-06, 5.59800000000249e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.5839999999994505e-06, 5.582999999999977e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.5979999999990204e-06, 5.6389999999982565e-06, 5.624999999998687e-06, 5.6389999999982565e-06, 5.625000000002156e-06, 5.611000000002586e-06, 5.569000000000407e-06, 5.58400000000292e-06, 5.611000000002586e-06, 5.5979999999990204e-06, 5.625000000002156e-06, 5.6389999999982565e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.6389999999982565e-06, 5.708000000000102e-06, 5.624999999998687e-06, 5.6389999999982565e-06, 5.624999999998687e-06, 5.582999999999977e-06]</msg>
<status status="PASS" starttime="20201030 11:50:58.534" endtime="20201030 11:50:58.537"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.530" endtime="20201030 11:50:58.537"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:58.541" endtime="20201030 11:50:58.560"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.539" endtime="20201030 11:50:58.561"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.538" endtime="20201030 11:50:58.561"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.174" endtime="20201030 11:50:58.561"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.174" endtime="20201030 11:50:58.562"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:58.570" endtime="20201030 11:50:58.587"></status>
</kw>
<msg timestamp="20201030 11:50:58.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:58.568" endtime="20201030 11:50:58.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:58.590" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:58.589" endtime="20201030 11:50:58.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:58.591" endtime="20201030 11:50:58.593"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.566" endtime="20201030 11:50:58.594"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.564" endtime="20201030 11:50:58.594"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:58.600" endtime="20201030 11:50:58.888"></status>
</kw>
<msg timestamp="20201030 11:50:58.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023157847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023163444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:58.599" endtime="20201030 11:50:58.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:58.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023157847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023163444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:58.892" endtime="20201030 11:50:58.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:58.900" endtime="20201030 11:50:58.902"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.596" endtime="20201030 11:50:58.903"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.595" endtime="20201030 11:50:58.903"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:58.907" level="INFO">${RESULT} = [{'diff': 5.596999999999547e-06}, {'diff': 5.6389999999982565e-06}, {'diff': 5.624999999998687e-06}, {'diff': 5.596999999999547e-06}, {'diff': 5.610999999999117e-06}, {'diff': 5.639000000001726e-06}, ...</msg>
<status status="PASS" starttime="20201030 11:50:58.904" endtime="20201030 11:50:58.907"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:58.911" level="INFO">${ACCURACY} = {'diff': [5.596999999999547e-06, 5.6389999999982565e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.610999999999117e-06, 5.639000000001726e-06, 5.596999999999547e-06, 5.624999999998687e-06, 5.611...</msg>
<status status="PASS" starttime="20201030 11:50:58.908" endtime="20201030 11:50:58.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:58.915" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201030 11:50:58.914" endtime="20201030 11:50:58.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:58.918" level="INFO">VALUE: [5.596999999999547e-06, 5.6389999999982565e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.610999999999117e-06, 5.639000000001726e-06, 5.596999999999547e-06, 5.624999999998687e-06, 5.611000000002586e-06, 5.625000000002156e-06, 5.624999999998687e-06, 5.597000000003016e-06, 5.597000000003016e-06, 5.5979999999990204e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.5979999999990204e-06, 5.625000000002156e-06, 5.569000000000407e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.597000000003016e-06, 5.582999999999977e-06, 5.6389999999982565e-06, 5.596999999999547e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.556000000000311e-06, 5.639000000001726e-06, 5.596999999999547e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.637999999998783e-06, 5.596999999999547e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.638000000002252e-06, 5.59800000000249e-06, 5.596999999999547e-06, 5.625000000002156e-06, 5.637999999998783e-06, 5.625000000002156e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.61200000000206e-06]</msg>
<status status="PASS" starttime="20201030 11:50:58.916" endtime="20201030 11:50:58.919"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.912" endtime="20201030 11:50:58.920"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:58.923" endtime="20201030 11:50:58.943"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.922" endtime="20201030 11:50:58.943"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.921" endtime="20201030 11:50:58.944"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.562" endtime="20201030 11:50:58.944"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.562" endtime="20201030 11:50:58.944"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:58.953" endtime="20201030 11:50:58.970"></status>
</kw>
<msg timestamp="20201030 11:50:58.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:58.951" endtime="20201030 11:50:58.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:58.973" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:58.972" endtime="20201030 11:50:58.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:58.974" endtime="20201030 11:50:58.976"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.949" endtime="20201030 11:50:58.976"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.946" endtime="20201030 11:50:58.977"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:58.983" endtime="20201030 11:50:59.269"></status>
</kw>
<msg timestamp="20201030 11:50:59.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022368125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022373764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:58.981" endtime="20201030 11:50:59.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:59.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022368125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022373764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:59.274" endtime="20201030 11:50:59.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.282" endtime="20201030 11:50:59.284"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.979" endtime="20201030 11:50:59.284"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.977" endtime="20201030 11:50:59.285"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:59.288" level="INFO">${RESULT} = [{'diff': 5.639000000001726e-06}, {'diff': 5.556000000000311e-06}, {'diff': 5.624999999998687e-06}, {'diff': 5.569999999999881e-06}, {'diff': 5.596999999999547e-06}, {'diff': 5.610999999999117e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:50:59.285" endtime="20201030 11:50:59.289"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:59.293" level="INFO">${ACCURACY} = {'diff': [5.639000000001726e-06, 5.556000000000311e-06, 5.624999999998687e-06, 5.569999999999881e-06, 5.596999999999547e-06, 5.610999999999117e-06, 5.61199999999859e-06, 5.5979999999990204e-06, 5.6250...</msg>
<status status="PASS" starttime="20201030 11:50:59.289" endtime="20201030 11:50:59.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:59.298" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201030 11:50:59.297" endtime="20201030 11:50:59.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:59.300" level="INFO">VALUE: [5.639000000001726e-06, 5.556000000000311e-06, 5.624999999998687e-06, 5.569999999999881e-06, 5.596999999999547e-06, 5.610999999999117e-06, 5.61199999999859e-06, 5.5979999999990204e-06, 5.625000000002156e-06, 5.596999999999547e-06, 5.569000000000407e-06, 5.5839999999994505e-06, 5.610999999999117e-06, 5.528000000001171e-06, 5.651999999998353e-06, 5.639000000001726e-06, 5.596999999999547e-06, 5.6389999999982565e-06, 5.653000000001296e-06, 5.625000000002156e-06, 5.625000000002156e-06, 5.5979999999990204e-06, 5.624999999998687e-06, 5.569000000000407e-06, 5.625000000002156e-06, 5.625000000002156e-06, 5.596999999999547e-06, 5.569000000000407e-06, 5.610999999999117e-06, 5.639000000001726e-06, 5.625000000002156e-06, 5.653000000001296e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.625000000002156e-06, 5.625000000002156e-06, 5.679999999997493e-06, 5.610999999999117e-06, 5.611000000002586e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.667000000000866e-06, 5.582999999999977e-06, 5.59800000000249e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.6389999999982565e-06]</msg>
<status status="PASS" starttime="20201030 11:50:59.299" endtime="20201030 11:50:59.301"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.294" endtime="20201030 11:50:59.302"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:59.305" endtime="20201030 11:50:59.325"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.304" endtime="20201030 11:50:59.325"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.303" endtime="20201030 11:50:59.326"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.945" endtime="20201030 11:50:59.326"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.944" endtime="20201030 11:50:59.326"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.335" endtime="20201030 11:50:59.352"></status>
</kw>
<msg timestamp="20201030 11:50:59.353" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:59.333" endtime="20201030 11:50:59.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:59.355" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:59.354" endtime="20201030 11:50:59.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.356" endtime="20201030 11:50:59.358"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.331" endtime="20201030 11:50:59.358"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.329" endtime="20201030 11:50:59.359"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.365" endtime="20201030 11:50:59.653"></status>
</kw>
<msg timestamp="20201030 11:50:59.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022178958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022184569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:59.364" endtime="20201030 11:50:59.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:59.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022178958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022184569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:59.657" endtime="20201030 11:50:59.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.666" endtime="20201030 11:50:59.667"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.361" endtime="20201030 11:50:59.668"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.359" endtime="20201030 11:50:59.668"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:59.672" level="INFO">${RESULT} = [{'diff': 5.611000000002586e-06}, {'diff': 5.625000000002156e-06}, {'diff': 5.624999999998687e-06}, {'diff': 5.596999999999547e-06}, {'diff': 5.555000000000837e-06}, {'diff': 5.610999999999117e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:50:59.669" endtime="20201030 11:50:59.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:59.676" level="INFO">${ACCURACY} = {'diff': [5.611000000002586e-06, 5.625000000002156e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.555000000000837e-06, 5.610999999999117e-06, 5.625000000002156e-06, 5.652000000001822e-06, 5.6109...</msg>
<status status="PASS" starttime="20201030 11:50:59.673" endtime="20201030 11:50:59.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:59.681" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201030 11:50:59.680" endtime="20201030 11:50:59.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:59.683" level="INFO">VALUE: [5.611000000002586e-06, 5.625000000002156e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.555000000000837e-06, 5.610999999999117e-06, 5.625000000002156e-06, 5.652000000001822e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.582999999999977e-06, 5.639000000001726e-06, 5.666999999997396e-06, 5.6389999999982565e-06, 5.639000000001726e-06, 5.596999999999547e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.625000000002156e-06, 5.639000000001726e-06, 5.5839999999994505e-06, 5.624999999998687e-06, 5.5979999999990204e-06, 5.6389999999982565e-06, 5.624999999998687e-06, 5.625000000002156e-06, 5.653000000001296e-06, 5.653000000001296e-06, 5.639000000001726e-06, 5.5839999999994505e-06, 5.5839999999994505e-06, 5.5979999999990204e-06, 5.5979999999990204e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.611000000002586e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.639000000001726e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.596999999999547e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.666999999997396e-06, 5.624999999998687e-06, 5.624999999998687e-06]</msg>
<status status="PASS" starttime="20201030 11:50:59.682" endtime="20201030 11:50:59.684"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.677" endtime="20201030 11:50:59.685"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:59.688" endtime="20201030 11:50:59.708"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.687" endtime="20201030 11:50:59.708"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.686" endtime="20201030 11:50:59.709"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.327" endtime="20201030 11:50:59.709"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.326" endtime="20201030 11:50:59.709"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.718" endtime="20201030 11:50:59.734"></status>
</kw>
<msg timestamp="20201030 11:50:59.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:59.716" endtime="20201030 11:50:59.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:59.737" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:59.735" endtime="20201030 11:50:59.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.738" endtime="20201030 11:50:59.739"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.713" endtime="20201030 11:50:59.740"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.711" endtime="20201030 11:50:59.740"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.747" endtime="20201030 11:51:00.033"></status>
</kw>
<msg timestamp="20201030 11:51:00.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021186958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021213597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:59.745" endtime="20201030 11:51:00.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021186958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021213597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:00.037" endtime="20201030 11:51:00.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.045" endtime="20201030 11:51:00.047"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.743" endtime="20201030 11:51:00.047"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.741" endtime="20201030 11:51:00.048"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:00.052" level="INFO">${RESULT} = [{'diff': 2.663900000000191e-05}, {'diff': 2.2763999999998036e-05}, {'diff': 1.9915999999998296e-05}, {'diff': 2.088899999999963e-05}, {'diff': 2.180499999999974e-05}, {'diff': 2.563900000000091e-05},...</msg>
<status status="PASS" starttime="20201030 11:51:00.049" endtime="20201030 11:51:00.052"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:00.056" level="INFO">${ACCURACY} = {'diff': [2.663900000000191e-05, 2.2763999999998036e-05, 1.9915999999998296e-05, 2.088899999999963e-05, 2.180499999999974e-05, 2.563900000000091e-05, 2.280500000000074e-05, 2.183299999999888e-05, 2.08...</msg>
<status status="PASS" starttime="20201030 11:51:00.053" endtime="20201030 11:51:00.056"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.060" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201030 11:51:00.059" endtime="20201030 11:51:00.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.063" level="INFO">VALUE: [2.663900000000191e-05, 2.2763999999998036e-05, 1.9915999999998296e-05, 2.088899999999963e-05, 2.180499999999974e-05, 2.563900000000091e-05, 2.280500000000074e-05, 2.183299999999888e-05, 2.087500000000006e-05, 2.087500000000006e-05, 2.4693999999998717e-05, 2.088899999999963e-05, 2.184699999999845e-05, 1.8971999999999045e-05, 2.269499999999966e-05, 1.983300000000035e-05, 2.5582999999999162e-05, 2.3777999999998606e-05, 2.3778000000002075e-05, 2.2763999999998036e-05, 2.563900000000091e-05, 1.8957999999999475e-05, 2.0901999999999726e-05, 2.279100000000117e-05, 2.4680000000002617e-05, 2.469500000000166e-05, 2.2806000000000215e-05, 2.09029999999992e-05, 2.280500000000074e-05, 2.183300000000235e-05, 1.993100000000081e-05, 2.4764000000000036e-05, 1.8985999999998615e-05, 2.086100000000049e-05, 2.4707999999998287e-05, 2.1722000000001795e-05, 1.987499999999906e-05, 2.4750000000000466e-05, 2.186099999999802e-05, 1.8971999999999045e-05, 2.2777999999997606e-05, 2.4722000000001326e-05, 2.566700000000005e-05, 2.3735999999999896e-05, 2.4708000000001756e-05, 2.3806000000001215e-05, 1.993100000000081e-05, 2.4764000000000036e-05, 1.8930000000000335e-05, 2.088899999999963e-05]</msg>
<status status="PASS" starttime="20201030 11:51:00.062" endtime="20201030 11:51:00.065"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.057" endtime="20201030 11:51:00.066"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:00.069" endtime="20201030 11:51:00.089"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.068" endtime="20201030 11:51:00.089"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.067" endtime="20201030 11:51:00.089"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.710" endtime="20201030 11:51:00.090"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.709" endtime="20201030 11:51:00.090"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.098" endtime="20201030 11:51:00.115"></status>
</kw>
<msg timestamp="20201030 11:51:00.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:00.097" endtime="20201030 11:51:00.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:00.117" endtime="20201030 11:51:00.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.119" endtime="20201030 11:51:00.121"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.094" endtime="20201030 11:51:00.121"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.092" endtime="20201030 11:51:00.122"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.128" endtime="20201030 11:51:00.415"></status>
</kw>
<msg timestamp="20201030 11:51:00.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022032042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022045264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:00.127" endtime="20201030 11:51:00.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022032042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022045264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:00.419" endtime="20201030 11:51:00.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.427" endtime="20201030 11:51:00.429"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.124" endtime="20201030 11:51:00.429"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.122" endtime="20201030 11:51:00.430"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:00.434" level="INFO">${RESULT} = [{'diff': 1.3221999999996764e-05}, {'diff': 2.08890000000031e-05}, {'diff': 2.0888000000000156e-05}, {'diff': 2.3820000000000785e-05}, {'diff': 1.994500000000038e-05}, {'diff': 2.562500000000134e-05},...</msg>
<status status="PASS" starttime="20201030 11:51:00.430" endtime="20201030 11:51:00.434"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:00.439" level="INFO">${ACCURACY} = {'diff': [1.3221999999996764e-05, 2.08890000000031e-05, 2.0888000000000156e-05, 2.3820000000000785e-05, 1.994500000000038e-05, 2.562500000000134e-05, 1.9915999999998296e-05, 2.2792000000000645e-05, 2....</msg>
<status status="PASS" starttime="20201030 11:51:00.435" endtime="20201030 11:51:00.439"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.443" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201030 11:51:00.442" endtime="20201030 11:51:00.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.445" level="INFO">VALUE: [1.3221999999996764e-05, 2.08890000000031e-05, 2.0888000000000156e-05, 2.3820000000000785e-05, 1.994500000000038e-05, 2.562500000000134e-05, 1.9915999999998296e-05, 2.2792000000000645e-05, 2.086100000000049e-05, 2.4707999999998287e-05, 1.98890000000021e-05, 2.461100000000077e-05, 2.0792000000002114e-05, 2.3791999999998176e-05, 2.09029999999992e-05, 2.2777999999997606e-05, 2.191699999999977e-05, 2.2806000000000215e-05, 2.187500000000106e-05, 1.9944000000000905e-05, 2.2792000000000645e-05, 2.2735999999998896e-05, 2.2763999999998036e-05, 2.087500000000006e-05, 2.3792000000001645e-05, 2.470900000000123e-05, 2.181899999999931e-05, 2.27770000000016e-05, 2.469499999999819e-05, 2.4721999999997857e-05, 2.1805999999999215e-05, 2.087500000000006e-05, 2.183299999999888e-05, 2.3735999999999896e-05, 2.3749999999999466e-05, 1.8999999999998185e-05, 1.9944000000000905e-05, 2.3735999999999896e-05, 2.3749999999999466e-05, 2.4708000000001756e-05, 2.468099999999862e-05, 2.186100000000149e-05, 2.3749999999999466e-05, 2.568099999999962e-05, 2.3722000000000326e-05, 2.4736000000000896e-05, 2.287499999999859e-05, 1.9930000000001336e-05, 2.2819999999999785e-05, 2.3722000000000326e-05]</msg>
<status status="PASS" starttime="20201030 11:51:00.444" endtime="20201030 11:51:00.446"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.439" endtime="20201030 11:51:00.447"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:00.451" endtime="20201030 11:51:00.470"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.449" endtime="20201030 11:51:00.471"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.448" endtime="20201030 11:51:00.471"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.091" endtime="20201030 11:51:00.471"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.090" endtime="20201030 11:51:00.471"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.480" endtime="20201030 11:51:00.498"></status>
</kw>
<msg timestamp="20201030 11:51:00.498" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:00.478" endtime="20201030 11:51:00.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:00.500" endtime="20201030 11:51:00.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.502" endtime="20201030 11:51:00.504"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.476" endtime="20201030 11:51:00.504"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.474" endtime="20201030 11:51:00.505"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.511" endtime="20201030 11:51:00.796"></status>
</kw>
<msg timestamp="20201030 11:51:00.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022476389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022510639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:00.510" endtime="20201030 11:51:00.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022476389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022510639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:00.800" endtime="20201030 11:51:00.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.809" endtime="20201030 11:51:00.810"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.507" endtime="20201030 11:51:00.811"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.505" endtime="20201030 11:51:00.811"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:00.815" level="INFO">${RESULT} = [{'diff': 3.424999999999956e-05}, {'diff': 2.4735999999997427e-05}, {'diff': 2.2818999999996842e-05}, {'diff': 2.2792000000000645e-05}, {'diff': 2.470900000000123e-05}, {'diff': 2.565300000000048e-05}...</msg>
<status status="PASS" starttime="20201030 11:51:00.812" endtime="20201030 11:51:00.815"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:00.819" level="INFO">${ACCURACY} = {'diff': [3.424999999999956e-05, 2.4735999999997427e-05, 2.2818999999996842e-05, 2.2792000000000645e-05, 2.470900000000123e-05, 2.565300000000048e-05, 2.279100000000117e-05, 2.183300000000235e-05, 1.9...</msg>
<status status="PASS" starttime="20201030 11:51:00.816" endtime="20201030 11:51:00.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.824" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201030 11:51:00.823" endtime="20201030 11:51:00.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.826" level="INFO">VALUE: [3.424999999999956e-05, 2.4735999999997427e-05, 2.2818999999996842e-05, 2.2792000000000645e-05, 2.470900000000123e-05, 2.565300000000048e-05, 2.279100000000117e-05, 2.183300000000235e-05, 1.9958000000000475e-05, 2.4736000000000896e-05, 2.1778000000000075e-05, 2.181899999999931e-05, 1.993100000000081e-05, 1.9901999999998726e-05, 2.1833999999998355e-05, 2.5652000000001007e-05, 2.1819999999998785e-05, 2.570899999999876e-05, 2.3722000000000326e-05, 2.563899999999744e-05, 2.084700000000092e-05, 2.09029999999992e-05, 2.470900000000123e-05, 2.088899999999963e-05, 2.0901999999999726e-05, 1.987499999999906e-05, 2.2819999999999785e-05, 2.4722000000001326e-05, 1.895899999999895e-05, 1.990300000000167e-05, 2.4736000000000896e-05, 2.087500000000006e-05, 2.4707999999998287e-05, 2.183299999999888e-05, 2.465299999999948e-05, 2.276300000000203e-05, 2.08890000000031e-05, 1.993100000000081e-05, 2.3749999999999466e-05, 2.087500000000006e-05, 2.186100000000149e-05, 1.990300000000167e-05, 2.468099999999862e-05, 2.184700000000192e-05, 2.566700000000005e-05, 2.3735999999999896e-05, 1.9943999999997436e-05, 1.9972000000000045e-05, 2.4764000000000036e-05, 1.8957999999999475e-05]</msg>
<status status="PASS" starttime="20201030 11:51:00.825" endtime="20201030 11:51:00.827"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.820" endtime="20201030 11:51:00.827"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:00.831" endtime="20201030 11:51:00.850"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.829" endtime="20201030 11:51:00.851"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.828" endtime="20201030 11:51:00.851"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.472" endtime="20201030 11:51:00.852"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.472" endtime="20201030 11:51:00.852"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.860" endtime="20201030 11:51:00.880"></status>
</kw>
<msg timestamp="20201030 11:51:00.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:00.859" endtime="20201030 11:51:00.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:00.881" endtime="20201030 11:51:00.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.884" endtime="20201030 11:51:00.885"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.856" endtime="20201030 11:51:00.886"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.854" endtime="20201030 11:51:00.886"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.893" endtime="20201030 11:51:01.179"></status>
</kw>
<msg timestamp="20201030 11:51:01.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023931819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023952667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:00.891" endtime="20201030 11:51:01.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:01.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023931819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023952667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:01.184" endtime="20201030 11:51:01.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:01.192" endtime="20201030 11:51:01.193"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.889" endtime="20201030 11:51:01.194"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.887" endtime="20201030 11:51:01.194"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:01.198" level="INFO">${RESULT} = [{'diff': 2.0848000000000394e-05}, {'diff': 2.5721999999998857e-05}, {'diff': 2.4722000000001326e-05}, {'diff': 1.99029999999982e-05}, {'diff': 1.9930000000001336e-05}, {'diff': 2.2778000000001075e-05...</msg>
<status status="PASS" starttime="20201030 11:51:01.195" endtime="20201030 11:51:01.198"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:01.203" level="INFO">${ACCURACY} = {'diff': [2.0848000000000394e-05, 2.5721999999998857e-05, 2.4722000000001326e-05, 1.99029999999982e-05, 1.9930000000001336e-05, 2.2778000000001075e-05, 2.2764000000001505e-05, 2.563900000000091e-05, 2...</msg>
<status status="PASS" starttime="20201030 11:51:01.199" endtime="20201030 11:51:01.203"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:01.207" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201030 11:51:01.206" endtime="20201030 11:51:01.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:01.209" level="INFO">VALUE: [2.0848000000000394e-05, 2.5721999999998857e-05, 2.4722000000001326e-05, 1.99029999999982e-05, 1.9930000000001336e-05, 2.2778000000001075e-05, 2.2764000000001505e-05, 2.563900000000091e-05, 2.373699999999937e-05, 2.4750000000000466e-05, 2.4707999999998287e-05, 2.087500000000006e-05, 2.0888000000000156e-05, 2.0888000000000156e-05, 2.562500000000134e-05, 2.091699999999877e-05, 1.9958000000000475e-05, 2.1861999999997495e-05, 2.563900000000091e-05, 1.8957999999999475e-05, 2.5666000000000577e-05, 2.2763999999998036e-05, 2.468099999999862e-05, 2.088899999999963e-05, 2.4722000000001326e-05, 2.462500000000034e-05, 2.1848000000001394e-05, 2.469499999999819e-05, 1.991700000000124e-05, 2.0888000000000156e-05, 1.991700000000124e-05, 1.9929999999997866e-05, 2.283299999999988e-05, 2.2819999999999785e-05, 2.1778000000000075e-05, 2.183299999999888e-05, 2.3749999999999466e-05, 2.1764000000000505e-05, 2.283299999999988e-05, 2.283299999999988e-05, 2.09029999999992e-05, 2.4694000000002186e-05, 2.368100000000109e-05, 1.991700000000124e-05, 2.5680000000000147e-05, 2.4694000000002186e-05, 2.2763999999998036e-05, 2.184699999999845e-05, 2.088899999999963e-05, 2.3777999999998606e-05]</msg>
<status status="PASS" starttime="20201030 11:51:01.208" endtime="20201030 11:51:01.211"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.203" endtime="20201030 11:51:01.212"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:01.215" endtime="20201030 11:51:01.235"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.214" endtime="20201030 11:51:01.235"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.213" endtime="20201030 11:51:01.235"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.853" endtime="20201030 11:51:01.236"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.852" endtime="20201030 11:51:01.236"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:01.244" endtime="20201030 11:51:01.264"></status>
</kw>
<msg timestamp="20201030 11:51:01.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:01.243" endtime="20201030 11:51:01.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:01.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:01.266" endtime="20201030 11:51:01.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:01.268" endtime="20201030 11:51:01.270"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.240" endtime="20201030 11:51:01.270"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.238" endtime="20201030 11:51:01.271"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:01.277" endtime="20201030 11:51:01.563"></status>
</kw>
<msg timestamp="20201030 11:51:01.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021509847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02151925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:01.276" endtime="20201030 11:51:01.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:01.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021509847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02151925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:01.568" endtime="20201030 11:51:01.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:01.576" endtime="20201030 11:51:01.577"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.273" endtime="20201030 11:51:01.578"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.271" endtime="20201030 11:51:01.578"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:01.582" level="INFO">${RESULT} = [{'diff': 9.403000000001577e-06}, {'diff': 2.087500000000006e-05}, {'diff': 2.4693999999998717e-05}, {'diff': 2.184699999999845e-05}, {'diff': 2.086100000000049e-05}, {'diff': 2.3749999999999466e-05},...</msg>
<status status="PASS" starttime="20201030 11:51:01.579" endtime="20201030 11:51:01.583"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:01.587" level="INFO">${ACCURACY} = {'diff': [9.403000000001577e-06, 2.087500000000006e-05, 2.4693999999998717e-05, 2.184699999999845e-05, 2.086100000000049e-05, 2.3749999999999466e-05, 2.088899999999963e-05, 2.2764000000001505e-05, 1.9...</msg>
<status status="PASS" starttime="20201030 11:51:01.583" endtime="20201030 11:51:01.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:01.592" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201030 11:51:01.591" endtime="20201030 11:51:01.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:01.594" level="INFO">VALUE: [9.403000000001577e-06, 2.087500000000006e-05, 2.4693999999998717e-05, 2.184699999999845e-05, 2.086100000000049e-05, 2.3749999999999466e-05, 2.088899999999963e-05, 2.2764000000001505e-05, 1.9901999999998726e-05, 1.9901999999998726e-05, 2.0958000000001475e-05, 2.4764000000000036e-05, 2.0901999999999726e-05, 2.087500000000006e-05, 2.088899999999963e-05, 2.37229999999998e-05, 2.2764000000001505e-05, 2.470900000000123e-05, 2.3749999999999466e-05, 2.284699999999945e-05, 2.5638000000001437e-05, 1.8943999999999905e-05, 2.562500000000134e-05, 1.993100000000081e-05, 2.4708000000001756e-05, 1.993100000000081e-05, 2.087500000000006e-05, 2.3722000000000326e-05, 1.8971999999999045e-05, 2.2806000000000215e-05, 2.5708000000002756e-05, 1.995899999999995e-05, 1.9000000000001654e-05, 2.466700000000252e-05, 2.086100000000049e-05, 2.566700000000005e-05, 2.566700000000005e-05, 2.186099999999802e-05, 2.5666000000000577e-05, 2.3735999999999896e-05, 2.180499999999974e-05, 2.091700000000224e-05, 2.563900000000091e-05, 2.563900000000091e-05, 2.2790999999997702e-05, 2.565299999999701e-05, 2.468099999999862e-05, 1.990300000000167e-05, 2.093099999999834e-05, 2.3806000000001215e-05]</msg>
<status status="PASS" starttime="20201030 11:51:01.593" endtime="20201030 11:51:01.595"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.588" endtime="20201030 11:51:01.596"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:01.599" endtime="20201030 11:51:01.619"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.598" endtime="20201030 11:51:01.619"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.597" endtime="20201030 11:51:01.619"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.237" endtime="20201030 11:51:01.620"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.236" endtime="20201030 11:51:01.620"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:01.628" endtime="20201030 11:51:01.648"></status>
</kw>
<msg timestamp="20201030 11:51:01.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:01.627" endtime="20201030 11:51:01.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:01.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:01.650" endtime="20201030 11:51:01.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:01.652" endtime="20201030 11:51:01.654"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.624" endtime="20201030 11:51:01.654"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.622" endtime="20201030 11:51:01.655"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:01.661" endtime="20201030 11:51:01.950"></status>
</kw>
<msg timestamp="20201030 11:51:01.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024447861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024456347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:01.660" endtime="20201030 11:51:01.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:01.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024447861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024456347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:01.954" endtime="20201030 11:51:01.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:01.962" endtime="20201030 11:51:01.964"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.657" endtime="20201030 11:51:01.964"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.655" endtime="20201030 11:51:01.965"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:01.969" level="INFO">${RESULT} = [{'diff': 8.485999999998523e-06}, {'diff': 2.2792000000000645e-05}, {'diff': 2.180499999999974e-05}, {'diff': 2.5736000000001896e-05}, {'diff': 2.5721999999998857e-05}, {'diff': 2.27770000000016e-05},...</msg>
<status status="PASS" starttime="20201030 11:51:01.966" endtime="20201030 11:51:01.969"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:01.973" level="INFO">${ACCURACY} = {'diff': [8.485999999998523e-06, 2.2792000000000645e-05, 2.180499999999974e-05, 2.5736000000001896e-05, 2.5721999999998857e-05, 2.27770000000016e-05, 1.993099999999734e-05, 1.9916000000001766e-05, 2.2...</msg>
<status status="PASS" starttime="20201030 11:51:01.970" endtime="20201030 11:51:01.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:01.977" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201030 11:51:01.976" endtime="20201030 11:51:01.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:01.980" level="INFO">VALUE: [8.485999999998523e-06, 2.2792000000000645e-05, 2.180499999999974e-05, 2.5736000000001896e-05, 2.5721999999998857e-05, 2.27770000000016e-05, 1.993099999999734e-05, 1.9916000000001766e-05, 2.2778000000001075e-05, 2.5721999999998857e-05, 2.3764000000002505e-05, 2.465299999999948e-05, 2.0901999999999726e-05, 2.3805999999997746e-05, 2.5736000000001896e-05, 2.37229999999998e-05, 2.091699999999877e-05, 2.0958000000001475e-05, 2.3777999999998606e-05, 2.181899999999931e-05, 2.27770000000016e-05, 2.184699999999845e-05, 2.2778000000001075e-05, 2.094499999999791e-05, 2.187500000000106e-05, 2.084700000000092e-05, 2.088899999999963e-05, 1.895899999999895e-05, 2.0972000000001045e-05, 2.4721999999997857e-05, 2.3763999999999036e-05, 2.2819999999999785e-05, 2.3749999999999466e-05, 2.0901999999999726e-05, 2.4708000000001756e-05, 2.184699999999845e-05, 2.469499999999819e-05, 2.09029999999992e-05, 2.0930000000002336e-05, 2.373700000000284e-05, 2.3763999999999036e-05, 2.088899999999963e-05, 2.184699999999845e-05, 2.2778000000001075e-05, 2.466700000000252e-05, 2.3763999999999036e-05, 1.993100000000081e-05, 2.2764000000001505e-05, 2.4750000000000466e-05, 2.4708000000001756e-05]</msg>
<status status="PASS" starttime="20201030 11:51:01.978" endtime="20201030 11:51:01.980"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.974" endtime="20201030 11:51:01.981"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:01.985" endtime="20201030 11:51:02.004"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.983" endtime="20201030 11:51:02.005"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.982" endtime="20201030 11:51:02.005"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.621" endtime="20201030 11:51:02.005"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.620" endtime="20201030 11:51:02.005"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:02.014" endtime="20201030 11:51:02.030"></status>
</kw>
<msg timestamp="20201030 11:51:02.030" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:02.012" endtime="20201030 11:51:02.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:02.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:02.031" endtime="20201030 11:51:02.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:02.034" endtime="20201030 11:51:02.035"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.010" endtime="20201030 11:51:02.036"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.008" endtime="20201030 11:51:02.036"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:02.043" endtime="20201030 11:51:02.329"></status>
</kw>
<msg timestamp="20201030 11:51:02.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020799278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020832639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:02.041" endtime="20201030 11:51:02.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:02.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020799278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020832639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:02.333" endtime="20201030 11:51:02.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:02.341" endtime="20201030 11:51:02.343"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.039" endtime="20201030 11:51:02.343"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.037" endtime="20201030 11:51:02.344"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:02.347" level="INFO">${RESULT} = [{'diff': 3.3360999999999114e-05}, {'diff': 2.4708000000001756e-05}, {'diff': 2.4693999999998717e-05}, {'diff': 2.4777000000000132e-05}, {'diff': 2.0888000000000156e-05}, {'diff': 2.0930000000002336e-...</msg>
<status status="PASS" starttime="20201030 11:51:02.344" endtime="20201030 11:51:02.348"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:02.352" level="INFO">${ACCURACY} = {'diff': [3.3360999999999114e-05, 2.4708000000001756e-05, 2.4693999999998717e-05, 2.4777000000000132e-05, 2.0888000000000156e-05, 2.0930000000002336e-05, 2.183299999999888e-05, 2.187500000000106e-05, ...</msg>
<status status="PASS" starttime="20201030 11:51:02.348" endtime="20201030 11:51:02.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:02.356" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201030 11:51:02.355" endtime="20201030 11:51:02.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:02.359" level="INFO">VALUE: [3.3360999999999114e-05, 2.4708000000001756e-05, 2.4693999999998717e-05, 2.4777000000000132e-05, 2.0888000000000156e-05, 2.0930000000002336e-05, 2.183299999999888e-05, 2.187500000000106e-05, 2.2806000000000215e-05, 1.98890000000021e-05, 2.086100000000049e-05, 2.09029999999992e-05, 2.2806000000000215e-05, 2.183299999999888e-05, 2.3708000000000756e-05, 2.093099999999834e-05, 2.283299999999988e-05, 2.4693999999998717e-05, 2.2778000000001075e-05, 2.4721999999997857e-05, 2.086100000000049e-05, 1.9944000000000905e-05, 2.1929999999999866e-05, 2.3735999999999896e-05, 1.9901999999998726e-05, 2.566700000000005e-05, 2.4707999999998287e-05, 2.186100000000149e-05, 2.470899999999776e-05, 2.5651999999997538e-05, 2.181899999999931e-05, 2.3735999999999896e-05, 2.08890000000031e-05, 1.998699999999909e-05, 2.570899999999876e-05, 1.993100000000081e-05, 2.4693999999998717e-05, 2.3820000000000785e-05, 2.184700000000192e-05, 2.2763999999998036e-05, 1.993100000000081e-05, 1.9027999999997325e-05, 2.4707999999998287e-05, 2.4707999999998287e-05, 2.187499999999759e-05, 1.9972000000000045e-05, 2.0915999999999296e-05, 2.090300000000267e-05, 2.4750000000000466e-05, 1.9915999999998296e-05]</msg>
<status status="PASS" starttime="20201030 11:51:02.357" endtime="20201030 11:51:02.360"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.352" endtime="20201030 11:51:02.361"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:02.364" endtime="20201030 11:51:02.384"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.363" endtime="20201030 11:51:02.384"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.362" endtime="20201030 11:51:02.385"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.006" endtime="20201030 11:51:02.385"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.006" endtime="20201030 11:51:02.385"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:02.394" endtime="20201030 11:51:02.415"></status>
</kw>
<msg timestamp="20201030 11:51:02.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:02.392" endtime="20201030 11:51:02.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:02.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:02.417" endtime="20201030 11:51:02.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:02.419" endtime="20201030 11:51:02.421"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.389" endtime="20201030 11:51:02.421"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.387" endtime="20201030 11:51:02.422"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:02.428" endtime="20201030 11:51:02.713"></status>
</kw>
<msg timestamp="20201030 11:51:02.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022830222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022854917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:02.426" endtime="20201030 11:51:02.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:02.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022830222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022854917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:02.717" endtime="20201030 11:51:02.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:02.725" endtime="20201030 11:51:02.727"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.424" endtime="20201030 11:51:02.727"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.422" endtime="20201030 11:51:02.728"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:02.731" level="INFO">${RESULT} = [{'diff': 2.469499999999819e-05}, {'diff': 2.2763999999998036e-05}, {'diff': 2.1820000000002254e-05}, {'diff': 1.993100000000081e-05}, {'diff': 2.4680000000002617e-05}, {'diff': 1.8957999999999475e-05...</msg>
<status status="PASS" starttime="20201030 11:51:02.728" endtime="20201030 11:51:02.732"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:02.736" level="INFO">${ACCURACY} = {'diff': [2.469499999999819e-05, 2.2763999999998036e-05, 2.1820000000002254e-05, 1.993100000000081e-05, 2.4680000000002617e-05, 1.8957999999999475e-05, 2.186100000000149e-05, 2.088899999999963e-05, 2....</msg>
<status status="PASS" starttime="20201030 11:51:02.732" endtime="20201030 11:51:02.737"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:02.741" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201030 11:51:02.740" endtime="20201030 11:51:02.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:02.743" level="INFO">VALUE: [2.469499999999819e-05, 2.2763999999998036e-05, 2.1820000000002254e-05, 1.993100000000081e-05, 2.4680000000002617e-05, 1.8957999999999475e-05, 2.186100000000149e-05, 2.088899999999963e-05, 2.4722000000001326e-05, 1.8971999999999045e-05, 2.4721999999997857e-05, 2.088899999999963e-05, 2.3693999999997717e-05, 1.9901999999998726e-05, 2.4736000000000896e-05, 2.2805999999996746e-05, 1.8985999999998615e-05, 1.9985999999999615e-05, 1.9915999999998296e-05, 2.3776999999999132e-05, 2.5736000000001896e-05, 2.562500000000134e-05, 2.3735999999999896e-05, 2.0901999999999726e-05, 2.088899999999963e-05, 2.2806000000000215e-05, 1.987500000000253e-05, 1.9901999999998726e-05, 2.470900000000123e-05, 2.088899999999963e-05, 2.4778000000003075e-05, 2.379100000000217e-05, 1.8971999999999045e-05, 2.087500000000006e-05, 2.4764000000000036e-05, 2.4707999999998287e-05, 2.088899999999963e-05, 2.3693999999997717e-05, 1.9943999999997436e-05, 2.4694000000002186e-05, 2.3735999999999896e-05, 2.3763999999999036e-05, 2.2792000000000645e-05, 1.994500000000038e-05, 2.183299999999888e-05, 2.3735999999999896e-05, 2.3735999999999896e-05, 2.4708000000001756e-05, 2.3722000000000326e-05, 1.9000000000001654e-05]</msg>
<status status="PASS" starttime="20201030 11:51:02.742" endtime="20201030 11:51:02.744"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.737" endtime="20201030 11:51:02.745"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:02.748" endtime="20201030 11:51:02.768"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.747" endtime="20201030 11:51:02.768"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.746" endtime="20201030 11:51:02.768"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.386" endtime="20201030 11:51:02.769"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.385" endtime="20201030 11:51:02.769"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:02.777" endtime="20201030 11:51:02.793"></status>
</kw>
<msg timestamp="20201030 11:51:02.793" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:02.776" endtime="20201030 11:51:02.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:02.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:02.794" endtime="20201030 11:51:02.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:02.797" endtime="20201030 11:51:02.799"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.773" endtime="20201030 11:51:02.799"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.771" endtime="20201030 11:51:02.800"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:02.806" endtime="20201030 11:51:03.092"></status>
</kw>
<msg timestamp="20201030 11:51:03.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020836347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020848611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:02.805" endtime="20201030 11:51:03.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020836347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020848611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:03.097" endtime="20201030 11:51:03.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.105" endtime="20201030 11:51:03.107"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.802" endtime="20201030 11:51:03.107"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.800" endtime="20201030 11:51:03.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:03.112" level="INFO">${RESULT} = [{'diff': 1.2263999999997943e-05}, {'diff': 2.2763999999998036e-05}, {'diff': 2.4764000000000036e-05}, {'diff': 2.2818999999996842e-05}, {'diff': 2.087500000000006e-05}, {'diff': 2.3763999999999036e-0...</msg>
<status status="PASS" starttime="20201030 11:51:03.108" endtime="20201030 11:51:03.112"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:03.116" level="INFO">${ACCURACY} = {'diff': [1.2263999999997943e-05, 2.2763999999998036e-05, 2.4764000000000036e-05, 2.2818999999996842e-05, 2.087500000000006e-05, 2.3763999999999036e-05, 1.8943999999999905e-05, 1.993100000000081e-05, ...</msg>
<status status="PASS" starttime="20201030 11:51:03.112" endtime="20201030 11:51:03.116"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.120" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201030 11:51:03.119" endtime="20201030 11:51:03.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.123" level="INFO">VALUE: [1.2263999999997943e-05, 2.2763999999998036e-05, 2.4764000000000036e-05, 2.2818999999996842e-05, 2.087500000000006e-05, 2.3763999999999036e-05, 1.8943999999999905e-05, 1.993100000000081e-05, 2.181899999999931e-05, 2.3763999999999036e-05, 2.47230000000008e-05, 2.279100000000117e-05, 2.280500000000074e-05, 2.086100000000049e-05, 2.4694000000002186e-05, 2.3679999999998147e-05, 2.2806000000000215e-05, 2.3735999999999896e-05, 2.086100000000049e-05, 2.1819999999998785e-05, 2.0929999999998866e-05, 2.184700000000192e-05, 2.468099999999862e-05, 2.184700000000192e-05, 1.991699999999777e-05, 1.9929999999997866e-05, 1.9943999999997436e-05, 1.8957999999999475e-05, 2.088899999999963e-05, 1.991700000000124e-05, 2.188900000000063e-05, 2.4693999999998717e-05, 2.4665999999999577e-05, 2.3722000000000326e-05, 2.563899999999744e-05, 1.98890000000021e-05, 2.469500000000166e-05, 2.093099999999834e-05, 2.57230000000018e-05, 1.9944000000000905e-05, 2.1778000000000075e-05, 2.1847999999997925e-05, 1.991699999999777e-05, 1.993099999999734e-05, 2.4707999999998287e-05, 2.0806000000001684e-05, 2.087500000000006e-05, 2.566700000000005e-05, 2.4707999999998287e-05, 2.4708000000001756e-05]</msg>
<status status="PASS" starttime="20201030 11:51:03.121" endtime="20201030 11:51:03.123"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.116" endtime="20201030 11:51:03.124"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:03.127" endtime="20201030 11:51:03.147"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.126" endtime="20201030 11:51:03.147"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.125" endtime="20201030 11:51:03.148"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.770" endtime="20201030 11:51:03.148"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.769" endtime="20201030 11:51:03.148"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.157" endtime="20201030 11:51:03.176"></status>
</kw>
<msg timestamp="20201030 11:51:03.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:03.155" endtime="20201030 11:51:03.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:03.177" endtime="20201030 11:51:03.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.180" endtime="20201030 11:51:03.182"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.153" endtime="20201030 11:51:03.182"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.150" endtime="20201030 11:51:03.183"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.189" endtime="20201030 11:51:03.474"></status>
</kw>
<msg timestamp="20201030 11:51:03.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023537292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023572486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:03.187" endtime="20201030 11:51:03.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023537292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023572486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:03.478" endtime="20201030 11:51:03.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.486" endtime="20201030 11:51:03.488"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.185" endtime="20201030 11:51:03.489"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.183" endtime="20201030 11:51:03.489"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:03.493" level="INFO">${RESULT} = [{'diff': 3.519399999999881e-05}, {'diff': 2.184699999999845e-05}, {'diff': 2.4679999999999147e-05}, {'diff': 2.3735999999999896e-05}, {'diff': 2.087500000000006e-05}, {'diff': 2.27229999999988e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:51:03.490" endtime="20201030 11:51:03.493"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:03.497" level="INFO">${ACCURACY} = {'diff': [3.519399999999881e-05, 2.184699999999845e-05, 2.4679999999999147e-05, 2.3735999999999896e-05, 2.087500000000006e-05, 2.27229999999988e-05, 1.991700000000124e-05, 2.4736000000000896e-05, 2.46...</msg>
<status status="PASS" starttime="20201030 11:51:03.494" endtime="20201030 11:51:03.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.501" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201030 11:51:03.500" endtime="20201030 11:51:03.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.504" level="INFO">VALUE: [3.519399999999881e-05, 2.184699999999845e-05, 2.4679999999999147e-05, 2.3735999999999896e-05, 2.087500000000006e-05, 2.27229999999988e-05, 1.991700000000124e-05, 2.4736000000000896e-05, 2.469499999999819e-05, 2.3749999999999466e-05, 2.3708000000000756e-05, 2.565300000000048e-05, 1.902699999999785e-05, 1.9916000000001766e-05, 2.469499999999819e-05, 2.2792000000000645e-05, 2.0901999999999726e-05, 1.9944000000000905e-05, 2.3804999999998272e-05, 2.3792000000001645e-05, 2.279100000000117e-05, 2.2749999999998466e-05, 2.088899999999963e-05, 2.3735999999999896e-05, 2.184699999999845e-05, 2.2764000000001505e-05, 2.183299999999888e-05, 2.186099999999802e-05, 1.991700000000124e-05, 2.370900000000023e-05, 2.470900000000123e-05, 2.279100000000117e-05, 2.37229999999998e-05, 2.2778000000001075e-05, 2.184699999999845e-05, 1.88890000000011e-05, 2.1805999999999215e-05, 2.468099999999862e-05, 2.3749999999999466e-05, 2.5707999999999287e-05, 1.997299999999952e-05, 2.4750000000000466e-05, 2.4722000000001326e-05, 2.0888000000000156e-05, 1.8943999999999905e-05, 1.993100000000081e-05, 2.5582999999999162e-05, 2.565300000000048e-05, 2.0834000000000824e-05, 2.183300000000235e-05]</msg>
<status status="PASS" starttime="20201030 11:51:03.502" endtime="20201030 11:51:03.505"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.498" endtime="20201030 11:51:03.506"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:03.510" endtime="20201030 11:51:03.529"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.508" endtime="20201030 11:51:03.530"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.507" endtime="20201030 11:51:03.530"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.149" endtime="20201030 11:51:03.530"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.148" endtime="20201030 11:51:03.530"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.539" endtime="20201030 11:51:03.562"></status>
</kw>
<msg timestamp="20201030 11:51:03.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:03.537" endtime="20201030 11:51:03.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:03.564" endtime="20201030 11:51:03.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.566" endtime="20201030 11:51:03.568"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.535" endtime="20201030 11:51:03.568"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.533" endtime="20201030 11:51:03.568"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.575" endtime="20201030 11:51:03.861"></status>
</kw>
<msg timestamp="20201030 11:51:03.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022973833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023000417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:03.573" endtime="20201030 11:51:03.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022973833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023000417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:03.866" endtime="20201030 11:51:03.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.874" endtime="20201030 11:51:03.876"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.571" endtime="20201030 11:51:03.876"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.569" endtime="20201030 11:51:03.877"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:03.881" level="INFO">${RESULT} = [{'diff': 2.6583999999999636e-05}, {'diff': 1.9972000000000045e-05}, {'diff': 2.2930000000000866e-05}, {'diff': 2.565300000000048e-05}, {'diff': 2.088899999999963e-05}, {'diff': 1.9958000000000475e-05...</msg>
<status status="PASS" starttime="20201030 11:51:03.877" endtime="20201030 11:51:03.881"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:03.886" level="INFO">${ACCURACY} = {'diff': [2.6583999999999636e-05, 1.9972000000000045e-05, 2.2930000000000866e-05, 2.565300000000048e-05, 2.088899999999963e-05, 1.9958000000000475e-05, 2.3763999999999036e-05, 2.466699999999905e-05, 1...</msg>
<status status="PASS" starttime="20201030 11:51:03.882" endtime="20201030 11:51:03.886"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.890" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201030 11:51:03.889" endtime="20201030 11:51:03.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.893" level="INFO">VALUE: [2.6583999999999636e-05, 1.9972000000000045e-05, 2.2930000000000866e-05, 2.565300000000048e-05, 2.088899999999963e-05, 1.9958000000000475e-05, 2.3763999999999036e-05, 2.466699999999905e-05, 1.9943999999997436e-05, 1.9000000000001654e-05, 2.4722000000001326e-05, 1.8957999999999475e-05, 2.6583000000000162e-05, 2.279100000000117e-05, 2.2750000000001935e-05, 2.1834000000001824e-05, 2.4679999999999147e-05, 1.988899999999863e-05, 2.088899999999963e-05, 2.088899999999963e-05, 2.563900000000091e-05, 2.1805999999999215e-05, 2.3708000000000756e-05, 1.9943999999997436e-05, 2.3791999999998176e-05, 2.3750000000002935e-05, 2.565300000000048e-05, 2.2778000000001075e-05, 1.9901999999998726e-05, 1.9915999999998296e-05, 2.4707999999998287e-05, 2.565300000000048e-05, 2.469500000000166e-05, 2.566700000000005e-05, 1.8971999999999045e-05, 2.665299999999801e-05, 1.993100000000081e-05, 2.468099999999862e-05, 2.088899999999963e-05, 2.2806000000000215e-05, 2.0861999999999964e-05, 2.4707999999998287e-05, 2.087500000000006e-05, 2.5666000000000577e-05, 2.184700000000192e-05, 2.3735999999999896e-05, 2.2777999999997606e-05, 2.3777999999998606e-05, 1.991700000000124e-05, 1.991699999999777e-05]</msg>
<status status="PASS" starttime="20201030 11:51:03.891" endtime="20201030 11:51:03.894"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.887" endtime="20201030 11:51:03.894"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:03.898" endtime="20201030 11:51:03.917"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.896" endtime="20201030 11:51:03.918"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.895" endtime="20201030 11:51:03.918"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.531" endtime="20201030 11:51:03.918"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.531" endtime="20201030 11:51:03.918"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.927" endtime="20201030 11:51:03.944"></status>
</kw>
<msg timestamp="20201030 11:51:03.945" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:03.926" endtime="20201030 11:51:03.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.947" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:03.946" endtime="20201030 11:51:03.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.948" endtime="20201030 11:51:03.950"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.923" endtime="20201030 11:51:03.950"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.921" endtime="20201030 11:51:03.951"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.957" endtime="20201030 11:51:04.261"></status>
</kw>
<msg timestamp="20201030 11:51:04.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021817819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021847319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:03.956" endtime="20201030 11:51:04.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021817819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021847319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:04.271" endtime="20201030 11:51:04.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.280" endtime="20201030 11:51:04.282"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.953" endtime="20201030 11:51:04.283"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.951" endtime="20201030 11:51:04.283"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:04.287" level="INFO">${RESULT} = [{'diff': 2.9500000000001747e-05}, {'diff': 2.09029999999992e-05}, {'diff': 2.3805999999997746e-05}, {'diff': 2.5651999999997538e-05}, {'diff': 2.2819999999999785e-05}, {'diff': 1.991699999999777e-05}...</msg>
<status status="PASS" starttime="20201030 11:51:04.284" endtime="20201030 11:51:04.287"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:04.291" level="INFO">${ACCURACY} = {'diff': [2.9500000000001747e-05, 2.09029999999992e-05, 2.3805999999997746e-05, 2.5651999999997538e-05, 2.2819999999999785e-05, 1.991699999999777e-05, 2.468100000000209e-05, 2.088899999999963e-05, 1.9...</msg>
<status status="PASS" starttime="20201030 11:51:04.288" endtime="20201030 11:51:04.291"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.296" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201030 11:51:04.295" endtime="20201030 11:51:04.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.298" level="INFO">VALUE: [2.9500000000001747e-05, 2.09029999999992e-05, 2.3805999999997746e-05, 2.5651999999997538e-05, 2.2819999999999785e-05, 1.991699999999777e-05, 2.468100000000209e-05, 2.088899999999963e-05, 1.9929999999997866e-05, 2.183300000000235e-05, 2.181899999999931e-05, 2.3694000000001186e-05, 2.090300000000267e-05, 2.088899999999963e-05, 2.3735999999999896e-05, 1.9944000000000905e-05, 2.181899999999931e-05, 2.1819999999998785e-05, 2.5707999999999287e-05, 2.09029999999992e-05, 2.373699999999937e-05, 2.183299999999888e-05, 1.998699999999909e-05, 1.9944000000000905e-05, 2.086100000000049e-05, 2.3749999999999466e-05, 2.088899999999963e-05, 2.3749999999999466e-05, 2.2764000000001505e-05, 2.566700000000005e-05, 1.9944000000000905e-05, 2.4777999999999606e-05, 2.086100000000049e-05, 2.2763999999998036e-05, 2.4721999999997857e-05, 2.093100000000181e-05, 2.086100000000049e-05, 2.2790999999997702e-05, 2.4708000000001756e-05, 2.569499999999919e-05, 2.4693999999998717e-05, 2.3749999999999466e-05, 2.1819999999998785e-05, 2.2778000000001075e-05, 2.4750000000000466e-05, 2.188900000000063e-05, 2.373699999999937e-05, 2.468099999999862e-05, 1.9985999999999615e-05, 2.5680000000000147e-05]</msg>
<status status="PASS" starttime="20201030 11:51:04.297" endtime="20201030 11:51:04.299"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.292" endtime="20201030 11:51:04.299"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:04.303" endtime="20201030 11:51:04.323"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.302" endtime="20201030 11:51:04.323"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.300" endtime="20201030 11:51:04.323"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.919" endtime="20201030 11:51:04.324"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.919" endtime="20201030 11:51:04.324"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.333" endtime="20201030 11:51:04.351"></status>
</kw>
<msg timestamp="20201030 11:51:04.351" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:04.331" endtime="20201030 11:51:04.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.354" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:04.352" endtime="20201030 11:51:04.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.355" endtime="20201030 11:51:04.357"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.328" endtime="20201030 11:51:04.357"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.326" endtime="20201030 11:51:04.358"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.364" endtime="20201030 11:51:04.650"></status>
</kw>
<msg timestamp="20201030 11:51:04.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023304333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023317542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:04.363" endtime="20201030 11:51:04.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023304333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023317542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:04.654" endtime="20201030 11:51:04.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.663" endtime="20201030 11:51:04.665"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.360" endtime="20201030 11:51:04.665"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.358" endtime="20201030 11:51:04.666"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:04.669" level="INFO">${RESULT} = [{'diff': 1.3209000000000137e-05}, {'diff': 2.4721999999997857e-05}, {'diff': 2.4679999999999147e-05}, {'diff': 2.3749999999999466e-05}, {'diff': 2.287500000000206e-05}, {'diff': 2.2819999999999785e-0...</msg>
<status status="PASS" starttime="20201030 11:51:04.666" endtime="20201030 11:51:04.670"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:04.674" level="INFO">${ACCURACY} = {'diff': [1.3209000000000137e-05, 2.4721999999997857e-05, 2.4679999999999147e-05, 2.3749999999999466e-05, 2.287500000000206e-05, 2.2819999999999785e-05, 2.1805999999999215e-05, 1.8973000000001988e-05,...</msg>
<status status="PASS" starttime="20201030 11:51:04.670" endtime="20201030 11:51:04.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.678" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201030 11:51:04.677" endtime="20201030 11:51:04.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.681" level="INFO">VALUE: [1.3209000000000137e-05, 2.4721999999997857e-05, 2.4679999999999147e-05, 2.3749999999999466e-05, 2.287500000000206e-05, 2.2819999999999785e-05, 2.1805999999999215e-05, 1.8973000000001988e-05, 2.565300000000048e-05, 1.9930000000001336e-05, 2.468099999999862e-05, 2.366700000000152e-05, 2.3764000000002505e-05, 2.4750000000000466e-05, 2.5680000000000147e-05, 2.4722000000001326e-05, 2.2806000000000215e-05, 2.2778000000001075e-05, 2.1834000000001824e-05, 2.370900000000023e-05, 2.2806000000000215e-05, 2.4833999999997886e-05, 2.2791999999997176e-05, 2.3735999999999896e-05, 1.897299999999852e-05, 2.186099999999802e-05, 2.5707999999999287e-05, 1.8973000000001988e-05, 2.47230000000008e-05, 1.9929999999997866e-05, 2.4722000000001326e-05, 2.280500000000074e-05, 2.2819999999999785e-05, 2.288900000000163e-05, 2.3777999999998606e-05, 2.568099999999962e-05, 2.1819999999998785e-05, 2.4708000000001756e-05, 2.088899999999963e-05, 1.9944000000000905e-05, 2.4708000000001756e-05, 2.5583999999998636e-05, 2.4708000000001756e-05, 2.563900000000091e-05, 2.187499999999759e-05, 2.1000000000000185e-05, 2.563900000000091e-05, 2.563900000000091e-05, 2.3735999999999896e-05, 2.4665999999999577e-05]</msg>
<status status="PASS" starttime="20201030 11:51:04.679" endtime="20201030 11:51:04.682"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.675" endtime="20201030 11:51:04.683"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:04.687" endtime="20201030 11:51:04.706"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.685" endtime="20201030 11:51:04.707"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.684" endtime="20201030 11:51:04.707"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.325" endtime="20201030 11:51:04.707"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.324" endtime="20201030 11:51:04.707"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.716" endtime="20201030 11:51:04.733"></status>
</kw>
<msg timestamp="20201030 11:51:04.733" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:04.715" endtime="20201030 11:51:04.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.736" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:04.734" endtime="20201030 11:51:04.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.737" endtime="20201030 11:51:04.738"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.712" endtime="20201030 11:51:04.739"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.710" endtime="20201030 11:51:04.739"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.746" endtime="20201030 11:51:05.032"></status>
</kw>
<msg timestamp="20201030 11:51:05.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02161575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021646181, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:04.744" endtime="20201030 11:51:05.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02161575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021646181, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:05.036" endtime="20201030 11:51:05.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.044" endtime="20201030 11:51:05.046"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.742" endtime="20201030 11:51:05.046"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.740" endtime="20201030 11:51:05.047"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:05.051" level="INFO">${RESULT} = [{'diff': 3.0431000000000902e-05}, {'diff': 2.4736000000000896e-05}, {'diff': 2.286099999999902e-05}, {'diff': 2.472299999999733e-05}, {'diff': 2.1833999999998355e-05}, {'diff': 2.2763999999998036e-05...</msg>
<status status="PASS" starttime="20201030 11:51:05.048" endtime="20201030 11:51:05.051"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:05.056" level="INFO">${ACCURACY} = {'diff': [3.0431000000000902e-05, 2.4736000000000896e-05, 2.286099999999902e-05, 2.472299999999733e-05, 2.1833999999998355e-05, 2.2763999999998036e-05, 2.0901999999999726e-05, 2.2791999999997176e-05, ...</msg>
<status status="PASS" starttime="20201030 11:51:05.052" endtime="20201030 11:51:05.056"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.060" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201030 11:51:05.059" endtime="20201030 11:51:05.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.063" level="INFO">VALUE: [3.0431000000000902e-05, 2.4736000000000896e-05, 2.286099999999902e-05, 2.472299999999733e-05, 2.1833999999998355e-05, 2.2763999999998036e-05, 2.0901999999999726e-05, 2.2791999999997176e-05, 2.2749999999998466e-05, 2.187500000000106e-05, 2.1791999999999645e-05, 1.987500000000253e-05, 2.5637999999997968e-05, 1.9930000000001336e-05, 2.462500000000034e-05, 2.087500000000006e-05, 2.2833999999999355e-05, 1.99029999999982e-05, 2.2763999999998036e-05, 2.2764000000001505e-05, 1.991700000000124e-05, 2.3749999999999466e-05, 1.8971999999999045e-05, 1.9957999999997006e-05, 1.901300000000175e-05, 2.183299999999888e-05, 2.184700000000192e-05, 2.468099999999862e-05, 2.0901999999999726e-05, 2.1862000000000964e-05, 2.3735999999999896e-05, 2.17770000000006e-05, 2.2778000000001075e-05, 2.283300000000335e-05, 2.4736000000000896e-05, 2.3763999999999036e-05, 1.993100000000081e-05, 2.366699999999805e-05, 2.661100000000277e-05, 2.0027999999998325e-05, 2.4750000000000466e-05, 2.4679999999999147e-05, 2.3735999999999896e-05, 2.3708000000000756e-05, 2.188900000000063e-05, 2.2778000000001075e-05, 2.2806000000000215e-05, 2.186099999999802e-05, 2.5694000000003187e-05, 1.905500000000046e-05]</msg>
<status status="PASS" starttime="20201030 11:51:05.062" endtime="20201030 11:51:05.064"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.057" endtime="20201030 11:51:05.064"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:05.068" endtime="20201030 11:51:05.087"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.066" endtime="20201030 11:51:05.088"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.065" endtime="20201030 11:51:05.088"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.708" endtime="20201030 11:51:05.089"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.708" endtime="20201030 11:51:05.089"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.097" endtime="20201030 11:51:05.114"></status>
</kw>
<msg timestamp="20201030 11:51:05.115" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:05.096" endtime="20201030 11:51:05.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:05.116" endtime="20201030 11:51:05.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.118" endtime="20201030 11:51:05.120"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.093" endtime="20201030 11:51:05.120"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.091" endtime="20201030 11:51:05.121"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.127" endtime="20201030 11:51:05.424"></status>
</kw>
<msg timestamp="20201030 11:51:05.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022116722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022142375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:05.126" endtime="20201030 11:51:05.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022116722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022142375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:05.428" endtime="20201030 11:51:05.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.436" endtime="20201030 11:51:05.438"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.123" endtime="20201030 11:51:05.439"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.121" endtime="20201030 11:51:05.439"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:05.443" level="INFO">${RESULT} = [{'diff': 2.565300000000048e-05}, {'diff': 2.4707999999998287e-05}, {'diff': 1.986099999999949e-05}, {'diff': 2.468099999999862e-05}, {'diff': 2.284699999999945e-05}, {'diff': 2.090300000000267e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:51:05.440" endtime="20201030 11:51:05.443"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:05.447" level="INFO">${ACCURACY} = {'diff': [2.565300000000048e-05, 2.4707999999998287e-05, 1.986099999999949e-05, 2.468099999999862e-05, 2.284699999999945e-05, 2.090300000000267e-05, 2.4708000000001756e-05, 2.1834000000001824e-05, 2.2...</msg>
<status status="PASS" starttime="20201030 11:51:05.444" endtime="20201030 11:51:05.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.452" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201030 11:51:05.451" endtime="20201030 11:51:05.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.454" level="INFO">VALUE: [2.565300000000048e-05, 2.4707999999998287e-05, 1.986099999999949e-05, 2.468099999999862e-05, 2.284699999999945e-05, 2.090300000000267e-05, 2.4708000000001756e-05, 2.1834000000001824e-05, 2.2806000000000215e-05, 1.9930000000001336e-05, 2.4707999999998287e-05, 1.8957999999999475e-05, 2.094499999999791e-05, 2.0929999999998866e-05, 1.986099999999949e-05, 1.9930000000001336e-05, 1.991700000000124e-05, 2.086100000000049e-05, 2.5707999999999287e-05, 1.9972000000000045e-05, 2.087500000000006e-05, 2.4680000000002617e-05, 2.1833999999998355e-05, 2.2792000000000645e-05, 1.9972000000000045e-05, 2.280500000000074e-05, 2.4679999999999147e-05, 2.086100000000049e-05, 2.1847999999997925e-05, 2.088899999999963e-05, 2.373699999999937e-05, 2.088899999999963e-05, 2.184700000000192e-05, 2.4693999999998717e-05, 2.1819999999998785e-05, 2.2749999999998466e-05, 2.3777999999998606e-05, 2.3778000000002075e-05, 2.4665999999999577e-05, 2.084700000000092e-05, 2.566700000000005e-05, 1.991699999999777e-05, 2.566700000000005e-05, 2.1806000000002684e-05, 2.088899999999963e-05, 2.3750000000002935e-05, 2.4665999999999577e-05, 1.8944000000003375e-05, 1.9848000000002863e-05, 1.991700000000124e-05]</msg>
<status status="PASS" starttime="20201030 11:51:05.453" endtime="20201030 11:51:05.455"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.448" endtime="20201030 11:51:05.455"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:05.459" endtime="20201030 11:51:05.478"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.458" endtime="20201030 11:51:05.479"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.456" endtime="20201030 11:51:05.479"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.090" endtime="20201030 11:51:05.480"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.089" endtime="20201030 11:51:05.480"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.488" endtime="20201030 11:51:05.507"></status>
</kw>
<msg timestamp="20201030 11:51:05.507" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:05.487" endtime="20201030 11:51:05.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.510" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:05.508" endtime="20201030 11:51:05.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.511" endtime="20201030 11:51:05.513"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.484" endtime="20201030 11:51:05.513"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.482" endtime="20201030 11:51:05.514"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.520" endtime="20201030 11:51:05.805"></status>
</kw>
<msg timestamp="20201030 11:51:05.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022944708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022973292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:05.518" endtime="20201030 11:51:05.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022944708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022973292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:05.809" endtime="20201030 11:51:05.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.818" endtime="20201030 11:51:05.819"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.516" endtime="20201030 11:51:05.820"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.514" endtime="20201030 11:51:05.820"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:05.824" level="INFO">${RESULT} = [{'diff': 2.8583999999998166e-05}, {'diff': 2.3847999999999925e-05}, {'diff': 2.2749999999998466e-05}, {'diff': 2.2735999999998896e-05}, {'diff': 2.280500000000074e-05}, {'diff': 2.4764000000000036e-0...</msg>
<status status="PASS" starttime="20201030 11:51:05.821" endtime="20201030 11:51:05.824"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:05.828" level="INFO">${ACCURACY} = {'diff': [2.8583999999998166e-05, 2.3847999999999925e-05, 2.2749999999998466e-05, 2.2735999999998896e-05, 2.280500000000074e-05, 2.4764000000000036e-05, 2.0888000000000156e-05, 2.2778000000001075e-05,...</msg>
<status status="PASS" starttime="20201030 11:51:05.825" endtime="20201030 11:51:05.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.833" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201030 11:51:05.832" endtime="20201030 11:51:05.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.835" level="INFO">VALUE: [2.8583999999998166e-05, 2.3847999999999925e-05, 2.2749999999998466e-05, 2.2735999999998896e-05, 2.280500000000074e-05, 2.4764000000000036e-05, 2.0888000000000156e-05, 2.2778000000001075e-05, 2.4792000000002645e-05, 2.09029999999992e-05, 2.2764000000001505e-05, 2.4750000000000466e-05, 2.4750000000000466e-05, 1.991700000000124e-05, 1.9958000000000475e-05, 2.283299999999988e-05, 1.997300000000299e-05, 1.993099999999734e-05, 2.5693999999999717e-05, 2.186099999999802e-05, 2.184700000000192e-05, 2.3722000000000326e-05, 2.090300000000267e-05, 2.2819999999999785e-05, 2.4736000000000896e-05, 2.1791999999999645e-05, 2.2778000000001075e-05, 1.8985999999998615e-05, 2.3778000000002075e-05, 2.5707999999999287e-05, 2.4680000000002617e-05, 1.995899999999995e-05, 2.5707999999999287e-05, 1.8985999999998615e-05, 2.088899999999963e-05, 2.2792000000000645e-05, 2.3735999999999896e-05, 2.2792000000000645e-05, 2.3735999999999896e-05, 2.186099999999802e-05, 2.09029999999992e-05, 2.0014000000002224e-05, 2.3721999999996857e-05, 2.3763999999999036e-05, 2.3777999999998606e-05, 1.8971999999999045e-05, 2.2834000000002824e-05, 2.084700000000092e-05, 2.5721999999998857e-05, 2.3776999999999132e-05]</msg>
<status status="PASS" starttime="20201030 11:51:05.834" endtime="20201030 11:51:05.837"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.829" endtime="20201030 11:51:05.837"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:05.841" endtime="20201030 11:51:05.860"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.840" endtime="20201030 11:51:05.861"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.838" endtime="20201030 11:51:05.861"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.481" endtime="20201030 11:51:05.862"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.480" endtime="20201030 11:51:05.862"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.871" endtime="20201030 11:51:05.890"></status>
</kw>
<msg timestamp="20201030 11:51:05.890" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:05.869" endtime="20201030 11:51:05.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.893" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:05.891" endtime="20201030 11:51:05.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.894" endtime="20201030 11:51:05.896"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.867" endtime="20201030 11:51:05.896"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.864" endtime="20201030 11:51:05.897"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.903" endtime="20201030 11:51:06.188"></status>
</kw>
<msg timestamp="20201030 11:51:06.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022710556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022737167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:05.901" endtime="20201030 11:51:06.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:06.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022710556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022737167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:06.193" endtime="20201030 11:51:06.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:06.201" endtime="20201030 11:51:06.203"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.899" endtime="20201030 11:51:06.203"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.897" endtime="20201030 11:51:06.204"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:06.208" level="INFO">${RESULT} = [{'diff': 2.6610999999999302e-05}, {'diff': 2.279100000000117e-05}, {'diff': 2.5707999999999287e-05}, {'diff': 2.3778000000002075e-05}, {'diff': 2.4693999999998717e-05}, {'diff': 1.9958000000000475e-0...</msg>
<status status="PASS" starttime="20201030 11:51:06.204" endtime="20201030 11:51:06.208"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:06.213" level="INFO">${ACCURACY} = {'diff': [2.6610999999999302e-05, 2.279100000000117e-05, 2.5707999999999287e-05, 2.3778000000002075e-05, 2.4693999999998717e-05, 1.9958000000000475e-05, 2.563900000000091e-05, 1.894499999999938e-05, 2...</msg>
<status status="PASS" starttime="20201030 11:51:06.209" endtime="20201030 11:51:06.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:06.217" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201030 11:51:06.216" endtime="20201030 11:51:06.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:06.220" level="INFO">VALUE: [2.6610999999999302e-05, 2.279100000000117e-05, 2.5707999999999287e-05, 2.3778000000002075e-05, 2.4693999999998717e-05, 1.9958000000000475e-05, 2.563900000000091e-05, 1.894499999999938e-05, 2.4764000000000036e-05, 2.1957999999999006e-05, 2.080499999999874e-05, 2.3763999999999036e-05, 2.565300000000048e-05, 2.27770000000016e-05, 2.183300000000235e-05, 2.09029999999992e-05, 2.187499999999759e-05, 2.184699999999845e-05, 2.4708000000001756e-05, 2.1819999999998785e-05, 2.565300000000048e-05, 2.466699999999905e-05, 2.086099999999702e-05, 2.183299999999888e-05, 2.09029999999992e-05, 2.2806000000000215e-05, 2.3708000000000756e-05, 1.8957999999999475e-05, 2.087500000000006e-05, 2.369499999999719e-05, 2.3735999999999896e-05, 2.1848000000001394e-05, 1.8985999999998615e-05, 2.3749999999999466e-05, 1.988899999999863e-05, 2.088899999999963e-05, 2.286099999999902e-05, 2.5680000000000147e-05, 2.566700000000005e-05, 2.0901999999999726e-05, 2.468099999999862e-05, 2.465299999999948e-05, 2.2792000000000645e-05, 1.9915999999998296e-05, 2.4680000000002617e-05, 2.1778000000000075e-05, 2.4693999999998717e-05, 2.3776999999999132e-05, 2.180499999999974e-05, 2.3762999999999562e-05]</msg>
<status status="PASS" starttime="20201030 11:51:06.218" endtime="20201030 11:51:06.220"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.214" endtime="20201030 11:51:06.221"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:06.225" endtime="20201030 11:51:06.244"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.223" endtime="20201030 11:51:06.245"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.222" endtime="20201030 11:51:06.245"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.863" endtime="20201030 11:51:06.245"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.862" endtime="20201030 11:51:06.245"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:06.254" endtime="20201030 11:51:06.270"></status>
</kw>
<msg timestamp="20201030 11:51:06.271" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:06.253" endtime="20201030 11:51:06.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:06.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:06.272" endtime="20201030 11:51:06.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:06.274" endtime="20201030 11:51:06.276"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.250" endtime="20201030 11:51:06.277"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.248" endtime="20201030 11:51:06.277"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:06.283" endtime="20201030 11:51:06.570"></status>
</kw>
<msg timestamp="20201030 11:51:06.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021018056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021036111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:06.282" endtime="20201030 11:51:06.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:06.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021018056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021036111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:06.574" endtime="20201030 11:51:06.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:06.583" endtime="20201030 11:51:06.584"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.279" endtime="20201030 11:51:06.585"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.278" endtime="20201030 11:51:06.585"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:06.589" level="INFO">${RESULT} = [{'diff': 1.805499999999946e-05}, {'diff': 1.9901999999998726e-05}, {'diff': 2.086100000000049e-05}, {'diff': 2.2763999999998036e-05}, {'diff': 2.3708000000000756e-05}, {'diff': 2.086100000000049e-05}...</msg>
<status status="PASS" starttime="20201030 11:51:06.586" endtime="20201030 11:51:06.589"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:06.593" level="INFO">${ACCURACY} = {'diff': [1.805499999999946e-05, 1.9901999999998726e-05, 2.086100000000049e-05, 2.2763999999998036e-05, 2.3708000000000756e-05, 2.086100000000049e-05, 2.088899999999963e-05, 2.468099999999862e-05, 2.2...</msg>
<status status="PASS" starttime="20201030 11:51:06.590" endtime="20201030 11:51:06.593"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:06.598" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201030 11:51:06.597" endtime="20201030 11:51:06.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:06.600" level="INFO">VALUE: [1.805499999999946e-05, 1.9901999999998726e-05, 2.086100000000049e-05, 2.2763999999998036e-05, 2.3708000000000756e-05, 2.086100000000049e-05, 2.088899999999963e-05, 2.468099999999862e-05, 2.2805999999996746e-05, 2.4680000000002617e-05, 2.094499999999791e-05, 1.9861999999998964e-05, 2.086100000000049e-05, 2.468099999999862e-05, 2.181899999999931e-05, 2.470900000000123e-05, 2.4736000000000896e-05, 2.2806000000000215e-05, 2.091699999999877e-05, 2.3820000000000785e-05, 2.3764000000002505e-05, 2.565300000000048e-05, 2.187500000000106e-05, 2.1833999999998355e-05, 2.469500000000166e-05, 2.184699999999845e-05, 2.184700000000192e-05, 2.184699999999845e-05, 2.4750000000000466e-05, 2.4750000000000466e-05, 1.9887999999999156e-05, 2.0972000000001045e-05, 1.991699999999777e-05, 2.2819999999999785e-05, 2.5652000000001007e-05, 2.2806000000000215e-05, 2.086100000000049e-05, 1.9930000000001336e-05, 2.566700000000005e-05, 2.2777999999997606e-05, 2.2819999999999785e-05, 2.091700000000224e-05, 1.9930000000001336e-05, 2.379100000000217e-05, 1.991699999999777e-05, 2.3763999999999036e-05, 2.57230000000018e-05, 2.09029999999992e-05, 2.087500000000006e-05, 2.3722000000000326e-05]</msg>
<status status="PASS" starttime="20201030 11:51:06.599" endtime="20201030 11:51:06.601"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.594" endtime="20201030 11:51:06.602"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:06.605" endtime="20201030 11:51:06.625"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.604" endtime="20201030 11:51:06.625"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.603" endtime="20201030 11:51:06.626"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.246" endtime="20201030 11:51:06.626"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.246" endtime="20201030 11:51:06.626"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:06.635" endtime="20201030 11:51:06.655"></status>
</kw>
<msg timestamp="20201030 11:51:06.655" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:06.633" endtime="20201030 11:51:06.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:06.658" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:06.656" endtime="20201030 11:51:06.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:06.659" endtime="20201030 11:51:06.660"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.631" endtime="20201030 11:51:06.661"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.629" endtime="20201030 11:51:06.661"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:06.668" endtime="20201030 11:51:06.954"></status>
</kw>
<msg timestamp="20201030 11:51:06.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022105431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022112042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:06.666" endtime="20201030 11:51:06.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:06.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022105431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022112042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:06.959" endtime="20201030 11:51:06.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:06.967" endtime="20201030 11:51:06.969"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.664" endtime="20201030 11:51:06.969"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.662" endtime="20201030 11:51:06.970"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:06.974" level="INFO">${RESULT} = [{'diff': 6.611000000000117e-06}, {'diff': 2.184700000000192e-05}, {'diff': 2.565300000000048e-05}, {'diff': 2.283299999999988e-05}, {'diff': 2.088899999999963e-05}, {'diff': 2.2833999999999355e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:51:06.971" endtime="20201030 11:51:06.974"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:06.978" level="INFO">${ACCURACY} = {'diff': [6.611000000000117e-06, 2.184700000000192e-05, 2.565300000000048e-05, 2.283299999999988e-05, 2.088899999999963e-05, 2.2833999999999355e-05, 2.184700000000192e-05, 2.2778000000001075e-05, 2.46...</msg>
<status status="PASS" starttime="20201030 11:51:06.975" endtime="20201030 11:51:06.978"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:06.982" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201030 11:51:06.981" endtime="20201030 11:51:06.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:06.985" level="INFO">VALUE: [6.611000000000117e-06, 2.184700000000192e-05, 2.565300000000048e-05, 2.283299999999988e-05, 2.088899999999963e-05, 2.2833999999999355e-05, 2.184700000000192e-05, 2.2778000000001075e-05, 2.469500000000166e-05, 2.1847999999997925e-05, 2.5665999999997108e-05, 2.3763999999999036e-05, 1.9930000000001336e-05, 2.1762999999997562e-05, 2.3722000000000326e-05, 2.088899999999963e-05, 2.1805999999999215e-05, 2.1888000000001157e-05, 2.184699999999845e-05, 2.086100000000049e-05, 1.8957999999999475e-05, 2.0915999999999296e-05, 2.4750000000000466e-05, 2.569499999999919e-05, 1.993100000000081e-05, 1.8971999999999045e-05, 2.281900000000031e-05, 2.087500000000006e-05, 1.994500000000038e-05, 2.184699999999845e-05, 2.3735999999999896e-05, 2.186100000000149e-05, 2.47230000000008e-05, 2.0972000000001045e-05, 2.469499999999819e-05, 2.2750000000001935e-05, 1.9013999999997755e-05, 2.2778000000001075e-05, 2.2790999999997702e-05, 2.3708000000000756e-05, 2.279100000000117e-05, 1.9985999999999615e-05, 2.5693999999999717e-05, 2.4721999999997857e-05, 2.3764000000002505e-05, 1.9944000000000905e-05, 1.993100000000081e-05, 2.181899999999931e-05, 2.4750000000000466e-05, 2.4735999999997427e-05]</msg>
<status status="PASS" starttime="20201030 11:51:06.984" endtime="20201030 11:51:06.987"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.979" endtime="20201030 11:51:06.987"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:06.991" endtime="20201030 11:51:07.010"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.989" endtime="20201030 11:51:07.011"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.988" endtime="20201030 11:51:07.011"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.627" endtime="20201030 11:51:07.012"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.627" endtime="20201030 11:51:07.012"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.020" endtime="20201030 11:51:07.038"></status>
</kw>
<msg timestamp="20201030 11:51:07.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:07.019" endtime="20201030 11:51:07.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:07.040" endtime="20201030 11:51:07.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.043" endtime="20201030 11:51:07.044"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.016" endtime="20201030 11:51:07.045"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.014" endtime="20201030 11:51:07.045"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.052" endtime="20201030 11:51:07.337"></status>
</kw>
<msg timestamp="20201030 11:51:07.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023326583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023339931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:07.050" endtime="20201030 11:51:07.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023326583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023339931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:07.341" endtime="20201030 11:51:07.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.350" endtime="20201030 11:51:07.352"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.047" endtime="20201030 11:51:07.352"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.046" endtime="20201030 11:51:07.352"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:07.356" level="INFO">${RESULT} = [{'diff': 1.3347999999999832e-05}, {'diff': 1.994500000000038e-05}, {'diff': 2.2792000000000645e-05}, {'diff': 2.465299999999948e-05}, {'diff': 2.2764000000001505e-05}, {'diff': 2.2777999999997606e-05...</msg>
<status status="PASS" starttime="20201030 11:51:07.353" endtime="20201030 11:51:07.357"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:07.362" level="INFO">${ACCURACY} = {'diff': [1.3347999999999832e-05, 1.994500000000038e-05, 2.2792000000000645e-05, 2.465299999999948e-05, 2.2764000000001505e-05, 2.2777999999997606e-05, 2.3764000000002505e-05, 2.4693999999998717e-05, ...</msg>
<status status="PASS" starttime="20201030 11:51:07.357" endtime="20201030 11:51:07.362"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.366" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201030 11:51:07.365" endtime="20201030 11:51:07.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.369" level="INFO">VALUE: [1.3347999999999832e-05, 1.994500000000038e-05, 2.2792000000000645e-05, 2.465299999999948e-05, 2.2764000000001505e-05, 2.2777999999997606e-05, 2.3764000000002505e-05, 2.4693999999998717e-05, 2.088899999999963e-05, 2.566700000000005e-05, 2.3776999999999132e-05, 1.9958000000000475e-05, 2.183300000000235e-05, 1.984699999999992e-05, 2.2806000000000215e-05, 2.086100000000049e-05, 2.087500000000006e-05, 2.2792000000000645e-05, 1.9985999999999615e-05, 2.186099999999802e-05, 2.2735999999998896e-05, 2.366700000000152e-05, 2.181899999999931e-05, 2.2735999999998896e-05, 2.2749999999998466e-05, 2.2792000000000645e-05, 2.0861999999999964e-05, 2.280500000000074e-05, 2.179100000000017e-05, 2.1847999999997925e-05, 2.3777999999998606e-05, 2.2806000000000215e-05, 1.995899999999995e-05, 2.2762999999998562e-05, 2.2749999999998466e-05, 2.5680000000000147e-05, 1.993099999999734e-05, 2.281900000000031e-05, 2.180499999999974e-05, 2.2790999999997702e-05, 1.9944000000000905e-05, 2.3749999999999466e-05, 2.284700000000292e-05, 2.4750000000000466e-05, 2.279100000000117e-05, 1.9930000000001336e-05, 1.9916000000001766e-05, 2.088899999999963e-05, 2.3763999999999036e-05, 2.3749999999999466e-05]</msg>
<status status="PASS" starttime="20201030 11:51:07.367" endtime="20201030 11:51:07.369"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.362" endtime="20201030 11:51:07.370"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:07.374" endtime="20201030 11:51:07.393"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.372" endtime="20201030 11:51:07.394"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.371" endtime="20201030 11:51:07.394"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.013" endtime="20201030 11:51:07.394"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.012" endtime="20201030 11:51:07.394"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.403" endtime="20201030 11:51:07.420"></status>
</kw>
<msg timestamp="20201030 11:51:07.421" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:07.402" endtime="20201030 11:51:07.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.423" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:07.422" endtime="20201030 11:51:07.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.424" endtime="20201030 11:51:07.426"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.399" endtime="20201030 11:51:07.426"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.397" endtime="20201030 11:51:07.427"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.433" endtime="20201030 11:51:07.720"></status>
</kw>
<msg timestamp="20201030 11:51:07.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022459153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022493444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:07.432" endtime="20201030 11:51:07.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022459153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022493444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:07.724" endtime="20201030 11:51:07.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.733" endtime="20201030 11:51:07.734"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.429" endtime="20201030 11:51:07.735"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.427" endtime="20201030 11:51:07.735"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:07.739" level="INFO">${RESULT} = [{'diff': 3.4291000000002264e-05}, {'diff': 1.9972000000000045e-05}, {'diff': 2.183299999999888e-05}, {'diff': 2.1862000000000964e-05}, {'diff': 1.993100000000081e-05}, {'diff': 2.3763999999999036e-05...</msg>
<status status="PASS" starttime="20201030 11:51:07.736" endtime="20201030 11:51:07.739"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:07.743" level="INFO">${ACCURACY} = {'diff': [3.4291000000002264e-05, 1.9972000000000045e-05, 2.183299999999888e-05, 2.1862000000000964e-05, 1.993100000000081e-05, 2.3763999999999036e-05, 1.994500000000038e-05, 2.373699999999937e-05, 1....</msg>
<status status="PASS" starttime="20201030 11:51:07.740" endtime="20201030 11:51:07.743"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.748" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201030 11:51:07.747" endtime="20201030 11:51:07.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.750" level="INFO">VALUE: [3.4291000000002264e-05, 1.9972000000000045e-05, 2.183299999999888e-05, 2.1862000000000964e-05, 1.993100000000081e-05, 2.3763999999999036e-05, 1.994500000000038e-05, 2.373699999999937e-05, 1.9915999999998296e-05, 2.280500000000074e-05, 2.1834000000001824e-05, 2.565300000000048e-05, 2.2736000000002365e-05, 2.4736000000000896e-05, 1.993100000000081e-05, 2.566700000000005e-05, 2.088899999999963e-05, 1.8957999999999475e-05, 2.4750000000000466e-05, 2.283299999999988e-05, 1.997299999999952e-05, 2.3749999999999466e-05, 2.3749999999999466e-05, 2.280500000000074e-05, 2.4680000000002617e-05, 2.3735999999999896e-05, 2.186100000000149e-05, 2.086099999999702e-05, 2.2806000000000215e-05, 2.09029999999992e-05, 2.3722000000000326e-05, 2.087500000000006e-05, 1.9958000000000475e-05, 1.8943999999999905e-05, 2.3792000000001645e-05, 2.5707999999999287e-05, 1.993100000000081e-05, 2.2790999999997702e-05, 2.087500000000006e-05, 2.4750000000000466e-05, 2.565300000000048e-05, 2.3722000000000326e-05, 2.0848000000000394e-05, 2.086100000000049e-05, 1.98890000000021e-05, 2.184699999999845e-05, 2.2764000000001505e-05, 2.280500000000074e-05, 2.370900000000023e-05, 2.2763999999998036e-05]</msg>
<status status="PASS" starttime="20201030 11:51:07.749" endtime="20201030 11:51:07.751"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.744" endtime="20201030 11:51:07.752"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:07.755" endtime="20201030 11:51:07.775"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.754" endtime="20201030 11:51:07.775"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.753" endtime="20201030 11:51:07.775"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.395" endtime="20201030 11:51:07.776"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.395" endtime="20201030 11:51:07.776"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.785" endtime="20201030 11:51:07.806"></status>
</kw>
<msg timestamp="20201030 11:51:07.806" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:07.783" endtime="20201030 11:51:07.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:07.807" endtime="20201030 11:51:07.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.810" endtime="20201030 11:51:07.811"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.780" endtime="20201030 11:51:07.812"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.778" endtime="20201030 11:51:07.812"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.818" endtime="20201030 11:51:08.104"></status>
</kw>
<msg timestamp="20201030 11:51:08.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022725222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022745167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:07.817" endtime="20201030 11:51:08.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022725222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022745167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:08.108" endtime="20201030 11:51:08.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.117" endtime="20201030 11:51:08.118"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.814" endtime="20201030 11:51:08.119"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.813" endtime="20201030 11:51:08.119"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:08.123" level="INFO">${RESULT} = [{'diff': 1.994500000000038e-05}, {'diff': 1.984699999999992e-05}, {'diff': 2.2776999999998132e-05}, {'diff': 1.9916000000001766e-05}, {'diff': 2.4764000000000036e-05}, {'diff': 2.186100000000149e-05}...</msg>
<status status="PASS" starttime="20201030 11:51:08.120" endtime="20201030 11:51:08.123"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:08.127" level="INFO">${ACCURACY} = {'diff': [1.994500000000038e-05, 1.984699999999992e-05, 2.2776999999998132e-05, 1.9916000000001766e-05, 2.4764000000000036e-05, 2.186100000000149e-05, 2.2749999999998466e-05, 2.3735999999999896e-05, 1...</msg>
<status status="PASS" starttime="20201030 11:51:08.124" endtime="20201030 11:51:08.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.132" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201030 11:51:08.131" endtime="20201030 11:51:08.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.134" level="INFO">VALUE: [1.994500000000038e-05, 1.984699999999992e-05, 2.2776999999998132e-05, 1.9916000000001766e-05, 2.4764000000000036e-05, 2.186100000000149e-05, 2.2749999999998466e-05, 2.3735999999999896e-05, 1.990300000000167e-05, 1.9944000000000905e-05, 2.194499999999891e-05, 2.19030000000002e-05, 2.3777999999998606e-05, 1.991700000000124e-05, 2.3722000000000326e-05, 2.3735999999999896e-05, 2.184699999999845e-05, 2.4693999999998717e-05, 2.4750000000000466e-05, 2.0929999999998866e-05, 1.993100000000081e-05, 2.087500000000006e-05, 2.1791999999999645e-05, 2.187500000000106e-05, 2.2763999999998036e-05, 1.8971999999999045e-05, 2.3722000000000326e-05, 2.184699999999845e-05, 1.9902000000002196e-05, 2.565300000000048e-05, 2.286099999999902e-05, 2.0056000000000934e-05, 2.566700000000005e-05, 1.990300000000167e-05, 2.3735999999999896e-05, 2.566700000000005e-05, 2.468099999999862e-05, 2.0848000000000394e-05, 2.4736000000000896e-05, 2.4722000000001326e-05, 2.5624999999997872e-05, 2.183299999999888e-05, 2.3805999999997746e-05, 2.086100000000049e-05, 2.088899999999963e-05, 1.9930000000001336e-05, 2.566700000000005e-05, 2.379100000000217e-05, 2.284699999999945e-05, 2.4750000000000466e-05]</msg>
<status status="PASS" starttime="20201030 11:51:08.133" endtime="20201030 11:51:08.136"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.128" endtime="20201030 11:51:08.137"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:08.140" endtime="20201030 11:51:08.160"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.139" endtime="20201030 11:51:08.160"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.138" endtime="20201030 11:51:08.160"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.777" endtime="20201030 11:51:08.161"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.776" endtime="20201030 11:51:08.161"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.169" endtime="20201030 11:51:08.190"></status>
</kw>
<msg timestamp="20201030 11:51:08.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:08.168" endtime="20201030 11:51:08.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:08.191" endtime="20201030 11:51:08.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.194" endtime="20201030 11:51:08.195"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.165" endtime="20201030 11:51:08.196"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.163" endtime="20201030 11:51:08.196"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.203" endtime="20201030 11:51:08.489"></status>
</kw>
<msg timestamp="20201030 11:51:08.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024658111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024675236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:08.201" endtime="20201030 11:51:08.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024658111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024675236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:08.494" endtime="20201030 11:51:08.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.502" endtime="20201030 11:51:08.504"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.199" endtime="20201030 11:51:08.504"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.197" endtime="20201030 11:51:08.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:08.508" level="INFO">${RESULT} = [{'diff': 1.712499999999978e-05}, {'diff': 2.47230000000008e-05}, {'diff': 2.1834000000001824e-05}, {'diff': 2.184699999999845e-05}, {'diff': 1.9930000000001336e-05}, {'diff': 2.094500000000138e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:51:08.505" endtime="20201030 11:51:08.509"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:08.514" level="INFO">${ACCURACY} = {'diff': [1.712499999999978e-05, 2.47230000000008e-05, 2.1834000000001824e-05, 2.184699999999845e-05, 1.9930000000001336e-05, 2.094500000000138e-05, 2.3749999999999466e-05, 2.183300000000235e-05, 2.56...</msg>
<status status="PASS" starttime="20201030 11:51:08.509" endtime="20201030 11:51:08.514"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.518" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201030 11:51:08.517" endtime="20201030 11:51:08.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.521" level="INFO">VALUE: [1.712499999999978e-05, 2.47230000000008e-05, 2.1834000000001824e-05, 2.184699999999845e-05, 1.9930000000001336e-05, 2.094500000000138e-05, 2.3749999999999466e-05, 2.183300000000235e-05, 2.566700000000005e-05, 2.381900000000131e-05, 2.179100000000017e-05, 2.4777000000000132e-05, 2.184699999999845e-05, 1.9957999999997006e-05, 2.47230000000008e-05, 2.566700000000005e-05, 2.565300000000048e-05, 2.468099999999862e-05, 2.3749999999999466e-05, 2.1848000000001394e-05, 2.470900000000123e-05, 2.3735999999999896e-05, 2.088899999999963e-05, 2.3805999999997746e-05, 2.3805999999997746e-05, 2.3749999999999466e-05, 1.9944000000000905e-05, 2.1805999999999215e-05, 2.3735999999999896e-05, 2.4708000000001756e-05, 2.2764000000001505e-05, 2.181900000000278e-05, 2.4693999999998717e-05, 2.565300000000048e-05, 2.184699999999845e-05, 2.3749999999999466e-05, 2.2792000000000645e-05, 2.470899999999776e-05, 2.1819999999998785e-05, 2.2763999999998036e-05, 2.4707999999998287e-05, 2.184699999999845e-05, 2.2763999999998036e-05, 2.568099999999962e-05, 2.183299999999888e-05, 2.283299999999988e-05, 2.4722000000001326e-05, 2.37229999999998e-05, 2.3750000000002935e-05, 2.087500000000006e-05]</msg>
<status status="PASS" starttime="20201030 11:51:08.519" endtime="20201030 11:51:08.522"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.515" endtime="20201030 11:51:08.522"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:08.526" endtime="20201030 11:51:08.545"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.524" endtime="20201030 11:51:08.546"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.523" endtime="20201030 11:51:08.546"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.162" endtime="20201030 11:51:08.546"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.161" endtime="20201030 11:51:08.546"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.555" endtime="20201030 11:51:08.571"></status>
</kw>
<msg timestamp="20201030 11:51:08.572" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:08.554" endtime="20201030 11:51:08.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:08.573" endtime="20201030 11:51:08.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.575" endtime="20201030 11:51:08.577"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.551" endtime="20201030 11:51:08.577"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.549" endtime="20201030 11:51:08.578"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.584" endtime="20201030 11:51:08.873"></status>
</kw>
<msg timestamp="20201030 11:51:08.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020922514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020929042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:08.583" endtime="20201030 11:51:08.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020922514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020929042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:08.877" endtime="20201030 11:51:08.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.886" endtime="20201030 11:51:08.888"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.580" endtime="20201030 11:51:08.888"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.578" endtime="20201030 11:51:08.888"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:08.892" level="INFO">${RESULT} = [{'diff': 6.5279999999987015e-06}, {'diff': 2.19030000000002e-05}, {'diff': 1.9027999999997325e-05}, {'diff': 1.9930000000001336e-05}, {'diff': 2.568099999999962e-05}, {'diff': 2.2792000000000645e-05}...</msg>
<status status="PASS" starttime="20201030 11:51:08.889" endtime="20201030 11:51:08.893"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:08.897" level="INFO">${ACCURACY} = {'diff': [6.5279999999987015e-06, 2.19030000000002e-05, 1.9027999999997325e-05, 1.9930000000001336e-05, 2.568099999999962e-05, 2.2792000000000645e-05, 1.991700000000124e-05, 2.2777999999997606e-05, 2....</msg>
<status status="PASS" starttime="20201030 11:51:08.893" endtime="20201030 11:51:08.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.901" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201030 11:51:08.900" endtime="20201030 11:51:08.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.904" level="INFO">VALUE: [6.5279999999987015e-06, 2.19030000000002e-05, 1.9027999999997325e-05, 1.9930000000001336e-05, 2.568099999999962e-05, 2.2792000000000645e-05, 1.991700000000124e-05, 2.2777999999997606e-05, 2.4750000000000466e-05, 2.1833999999998355e-05, 1.993100000000081e-05, 1.9915999999998296e-05, 2.47230000000008e-05, 2.283299999999988e-05, 2.4764000000000036e-05, 2.373700000000284e-05, 2.183300000000235e-05, 2.1791999999999645e-05, 2.3749999999999466e-05, 2.565300000000048e-05, 2.565300000000048e-05, 2.187500000000106e-05, 2.283299999999988e-05, 1.990300000000167e-05, 2.4679999999999147e-05, 2.1833999999998355e-05, 2.088899999999963e-05, 2.09029999999992e-05, 2.4736000000000896e-05, 2.09029999999992e-05, 2.184699999999845e-05, 2.2806000000000215e-05, 2.091700000000224e-05, 2.19030000000002e-05, 1.993100000000081e-05, 2.4721999999997857e-05, 2.181899999999931e-05, 2.2764000000001505e-05, 1.990300000000167e-05, 1.8957999999999475e-05, 2.5666000000000577e-05, 2.188900000000063e-05, 2.091699999999877e-05, 2.366700000000152e-05, 1.9930000000001336e-05, 2.181899999999931e-05, 2.183299999999888e-05, 2.4722000000001326e-05, 2.181899999999931e-05, 2.086099999999702e-05]</msg>
<status status="PASS" starttime="20201030 11:51:08.902" endtime="20201030 11:51:08.904"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.897" endtime="20201030 11:51:08.905"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:08.908" endtime="20201030 11:51:08.928"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.907" endtime="20201030 11:51:08.929"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.906" endtime="20201030 11:51:08.929"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.547" endtime="20201030 11:51:08.929"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.547" endtime="20201030 11:51:08.929"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.938" endtime="20201030 11:51:08.963"></status>
</kw>
<msg timestamp="20201030 11:51:08.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:08.936" endtime="20201030 11:51:08.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.965" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:08.964" endtime="20201030 11:51:08.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.966" endtime="20201030 11:51:08.968"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.934" endtime="20201030 11:51:08.969"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.932" endtime="20201030 11:51:08.969"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.975" endtime="20201030 11:51:09.262"></status>
</kw>
<msg timestamp="20201030 11:51:09.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024887042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024904056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:08.974" endtime="20201030 11:51:09.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024887042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024904056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:09.266" endtime="20201030 11:51:09.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.275" endtime="20201030 11:51:09.276"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.971" endtime="20201030 11:51:09.277"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.970" endtime="20201030 11:51:09.277"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:09.281" level="INFO">${RESULT} = [{'diff': 1.7013999999999224e-05}, {'diff': 2.086100000000049e-05}, {'diff': 2.3749999999999466e-05}, {'diff': 2.466699999999905e-05}, {'diff': 2.45970000000012e-05}, {'diff': 1.9042000000000364e-05},...</msg>
<status status="PASS" starttime="20201030 11:51:09.278" endtime="20201030 11:51:09.282"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:09.286" level="INFO">${ACCURACY} = {'diff': [1.7013999999999224e-05, 2.086100000000049e-05, 2.3749999999999466e-05, 2.466699999999905e-05, 2.45970000000012e-05, 1.9042000000000364e-05, 2.3778000000002075e-05, 2.187500000000106e-05, 2.0...</msg>
<status status="PASS" starttime="20201030 11:51:09.282" endtime="20201030 11:51:09.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.290" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201030 11:51:09.289" endtime="20201030 11:51:09.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.293" level="INFO">VALUE: [1.7013999999999224e-05, 2.086100000000049e-05, 2.3749999999999466e-05, 2.466699999999905e-05, 2.45970000000012e-05, 1.9042000000000364e-05, 2.3778000000002075e-05, 2.187500000000106e-05, 2.087500000000006e-05, 2.2806000000000215e-05, 2.086100000000049e-05, 2.4749999999996997e-05, 2.2847999999998925e-05, 2.5722000000002326e-05, 2.5652000000001007e-05, 2.181899999999931e-05, 1.9943999999997436e-05, 2.2749999999998466e-05, 2.181899999999931e-05, 2.3722000000000326e-05, 2.470900000000123e-05, 2.0888000000000156e-05, 2.3735999999999896e-05, 2.3805999999997746e-05, 2.4750000000000466e-05, 2.2736000000002365e-05, 2.09029999999992e-05, 2.3792000000001645e-05, 2.4764000000000036e-05, 1.8986000000002085e-05, 2.183299999999888e-05, 2.466699999999905e-05, 2.2763999999998036e-05, 2.5624999999997872e-05, 2.4708000000001756e-05, 1.9972000000000045e-05, 1.9972000000000045e-05, 1.993100000000081e-05, 2.1833999999998355e-05, 1.99029999999982e-05, 1.9930000000001336e-05, 2.2833999999999355e-05, 2.5665999999997108e-05, 2.4694000000002186e-05, 1.993100000000081e-05, 2.1820000000002254e-05, 1.9915999999998296e-05, 2.0929999999998866e-05, 1.9958000000000475e-05, 2.2764000000001505e-05]</msg>
<status status="PASS" starttime="20201030 11:51:09.291" endtime="20201030 11:51:09.294"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.286" endtime="20201030 11:51:09.295"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:09.298" endtime="20201030 11:51:09.318"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.297" endtime="20201030 11:51:09.318"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.296" endtime="20201030 11:51:09.319"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.930" endtime="20201030 11:51:09.319"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.930" endtime="20201030 11:51:09.319"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.328" endtime="20201030 11:51:09.344"></status>
</kw>
<msg timestamp="20201030 11:51:09.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:09.326" endtime="20201030 11:51:09.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:09.346" endtime="20201030 11:51:09.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.348" endtime="20201030 11:51:09.350"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.324" endtime="20201030 11:51:09.351"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.322" endtime="20201030 11:51:09.351"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.357" endtime="20201030 11:51:09.643"></status>
</kw>
<msg timestamp="20201030 11:51:09.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021839333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021859264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:09.356" endtime="20201030 11:51:09.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021839333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021859264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:09.647" endtime="20201030 11:51:09.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.655" endtime="20201030 11:51:09.657"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.353" endtime="20201030 11:51:09.658"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.352" endtime="20201030 11:51:09.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:09.662" level="INFO">${RESULT} = [{'diff': 1.993100000000081e-05}, {'diff': 2.184699999999845e-05}, {'diff': 2.186099999999802e-05}, {'diff': 2.088899999999963e-05}, {'diff': 2.566700000000005e-05}, {'diff': 2.2792000000000645e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:51:09.659" endtime="20201030 11:51:09.662"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:09.667" level="INFO">${ACCURACY} = {'diff': [1.993100000000081e-05, 2.184699999999845e-05, 2.186099999999802e-05, 2.088899999999963e-05, 2.566700000000005e-05, 2.2792000000000645e-05, 2.2792000000000645e-05, 2.3651999999999007e-05, 2.2...</msg>
<status status="PASS" starttime="20201030 11:51:09.663" endtime="20201030 11:51:09.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.672" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201030 11:51:09.670" endtime="20201030 11:51:09.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.674" level="INFO">VALUE: [1.993100000000081e-05, 2.184699999999845e-05, 2.186099999999802e-05, 2.088899999999963e-05, 2.566700000000005e-05, 2.2792000000000645e-05, 2.2792000000000645e-05, 2.3651999999999007e-05, 2.2721999999999326e-05, 2.283299999999988e-05, 2.0013999999998755e-05, 2.4694000000002186e-05, 1.994500000000038e-05, 2.0861999999999964e-05, 2.568099999999962e-05, 2.0764000000002975e-05, 1.983300000000035e-05, 2.0957999999998006e-05, 2.1848000000001394e-05, 2.3749999999999466e-05, 2.466699999999905e-05, 2.3735999999999896e-05, 1.991700000000124e-05, 1.9915999999998296e-05, 2.4708000000001756e-05, 2.3763999999999036e-05, 2.279100000000117e-05, 1.993100000000081e-05, 2.565299999999701e-05, 2.086100000000049e-05, 1.9972000000000045e-05, 2.3749999999999466e-05, 2.087500000000006e-05, 2.3735999999999896e-05, 2.3735999999999896e-05, 1.9916000000001766e-05, 2.4722000000001326e-05, 2.1778000000000075e-05, 2.183300000000235e-05, 2.088899999999963e-05, 2.086100000000049e-05, 2.087500000000006e-05, 2.5666000000000577e-05, 2.566700000000005e-05, 2.37229999999998e-05, 2.562500000000134e-05, 2.087500000000006e-05, 2.2833999999999355e-05, 2.286100000000249e-05, 2.0834000000000824e-05]</msg>
<status status="PASS" starttime="20201030 11:51:09.673" endtime="20201030 11:51:09.675"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.668" endtime="20201030 11:51:09.676"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:09.679" endtime="20201030 11:51:09.699"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.678" endtime="20201030 11:51:09.699"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.677" endtime="20201030 11:51:09.700"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.320" endtime="20201030 11:51:09.700"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.320" endtime="20201030 11:51:09.700"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.709" endtime="20201030 11:51:09.726"></status>
</kw>
<msg timestamp="20201030 11:51:09.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:09.707" endtime="20201030 11:51:09.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:09.728" endtime="20201030 11:51:09.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.730" endtime="20201030 11:51:09.732"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.705" endtime="20201030 11:51:09.732"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.703" endtime="20201030 11:51:09.733"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.739" endtime="20201030 11:51:10.026"></status>
</kw>
<msg timestamp="20201030 11:51:10.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022810139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022843431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:09.738" endtime="20201030 11:51:10.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:10.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022810139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022843431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:10.030" endtime="20201030 11:51:10.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.039" endtime="20201030 11:51:10.040"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.735" endtime="20201030 11:51:10.041"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.733" endtime="20201030 11:51:10.041"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:10.045" level="INFO">${RESULT} = [{'diff': 3.329200000000074e-05}, {'diff': 1.9972000000000045e-05}, {'diff': 2.3806000000001215e-05}, {'diff': 2.3735999999999896e-05}, {'diff': 2.090300000000267e-05}, {'diff': 2.183299999999888e-05}...</msg>
<status status="PASS" starttime="20201030 11:51:10.042" endtime="20201030 11:51:10.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:10.049" level="INFO">${ACCURACY} = {'diff': [3.329200000000074e-05, 1.9972000000000045e-05, 2.3806000000001215e-05, 2.3735999999999896e-05, 2.090300000000267e-05, 2.183299999999888e-05, 2.3792000000001645e-05, 1.8943999999999905e-05, 2...</msg>
<status status="PASS" starttime="20201030 11:51:10.046" endtime="20201030 11:51:10.050"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:10.054" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201030 11:51:10.053" endtime="20201030 11:51:10.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:10.057" level="INFO">VALUE: [3.329200000000074e-05, 1.9972000000000045e-05, 2.3806000000001215e-05, 2.3735999999999896e-05, 2.090300000000267e-05, 2.183299999999888e-05, 2.3792000000001645e-05, 1.8943999999999905e-05, 2.0013999999998755e-05, 2.4722000000001326e-05, 2.4736000000000896e-05, 1.99029999999982e-05, 2.2749999999998466e-05, 2.3735999999999896e-05, 2.2792000000000645e-05, 2.283299999999988e-05, 2.187499999999759e-05, 2.1819999999998785e-05, 2.086100000000049e-05, 1.9944000000000905e-05, 1.9028000000000794e-05, 2.566700000000005e-05, 1.9929999999997866e-05, 1.9943999999997436e-05, 2.094499999999791e-05, 2.0888000000000156e-05, 2.181899999999931e-05, 2.3735999999999896e-05, 2.3792000000001645e-05, 2.088899999999963e-05, 1.9014000000001224e-05, 2.569499999999919e-05, 2.2806000000000215e-05, 2.2777999999997606e-05, 2.184699999999845e-05, 2.283299999999988e-05, 2.286099999999902e-05, 2.566700000000005e-05, 2.6596999999999732e-05, 2.091699999999877e-05, 1.994500000000038e-05, 1.991700000000124e-05, 2.4679999999999147e-05, 1.9972000000000045e-05, 2.0958000000001475e-05, 2.3806000000001215e-05, 2.563899999999744e-05, 2.3776999999999132e-05, 1.9014000000001224e-05, 2.4764000000000036e-05]</msg>
<status status="PASS" starttime="20201030 11:51:10.055" endtime="20201030 11:51:10.057"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.050" endtime="20201030 11:51:10.058"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:10.062" endtime="20201030 11:51:10.081"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.060" endtime="20201030 11:51:10.082"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.059" endtime="20201030 11:51:10.082"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.701" endtime="20201030 11:51:10.082"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.700" endtime="20201030 11:51:10.082"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.091" endtime="20201030 11:51:10.110"></status>
</kw>
<msg timestamp="20201030 11:51:10.110" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:10.089" endtime="20201030 11:51:10.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:10.113" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:10.111" endtime="20201030 11:51:10.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.114" endtime="20201030 11:51:10.115"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.087" endtime="20201030 11:51:10.116"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.085" endtime="20201030 11:51:10.116"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.123" endtime="20201030 11:51:10.409"></status>
</kw>
<msg timestamp="20201030 11:51:10.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022377375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022393472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:10.121" endtime="20201030 11:51:10.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:10.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022377375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022393472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:10.413" endtime="20201030 11:51:10.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.422" endtime="20201030 11:51:10.423"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.119" endtime="20201030 11:51:10.424"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.117" endtime="20201030 11:51:10.425"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:10.429" level="INFO">${RESULT} = [{'diff': 1.609699999999964e-05}, {'diff': 2.087500000000006e-05}, {'diff': 2.5624999999997872e-05}, {'diff': 2.1848000000001394e-05}, {'diff': 2.283299999999988e-05}, {'diff': 2.1819999999998785e-05}...</msg>
<status status="PASS" starttime="20201030 11:51:10.425" endtime="20201030 11:51:10.429"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:10.433" level="INFO">${ACCURACY} = {'diff': [1.609699999999964e-05, 2.087500000000006e-05, 2.5624999999997872e-05, 2.1848000000001394e-05, 2.283299999999988e-05, 2.1819999999998785e-05, 2.1805999999999215e-05, 2.5638000000001437e-05, 2...</msg>
<status status="PASS" starttime="20201030 11:51:10.430" endtime="20201030 11:51:10.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:10.438" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201030 11:51:10.437" endtime="20201030 11:51:10.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:10.441" level="INFO">VALUE: [1.609699999999964e-05, 2.087500000000006e-05, 2.5624999999997872e-05, 2.1848000000001394e-05, 2.283299999999988e-05, 2.1819999999998785e-05, 2.1805999999999215e-05, 2.5638000000001437e-05, 2.4707999999998287e-05, 1.995899999999995e-05, 2.3749999999999466e-05, 2.4721999999997857e-05, 2.088899999999963e-05, 1.895899999999895e-05, 2.273699999999837e-05, 2.3762999999999562e-05, 2.086100000000049e-05, 2.3722000000000326e-05, 2.47230000000008e-05, 2.4764000000000036e-05, 2.1819999999998785e-05, 2.1862000000000964e-05, 1.9999999999999185e-05, 2.3749999999999466e-05, 1.993099999999734e-05, 2.568100000000309e-05, 2.184699999999845e-05, 2.186100000000149e-05, 2.2819999999999785e-05, 2.3749999999999466e-05, 2.5610999999998302e-05, 2.468100000000209e-05, 2.086100000000049e-05, 2.2762999999998562e-05, 2.2792000000000645e-05, 1.986100000000296e-05, 2.3722000000000326e-05, 2.087500000000006e-05, 2.288900000000163e-05, 2.184699999999845e-05, 2.0847999999996925e-05, 2.2792000000000645e-05, 2.468099999999862e-05, 2.184700000000192e-05, 2.183299999999888e-05, 2.465299999999948e-05, 1.993100000000081e-05, 2.565300000000048e-05, 1.9972000000000045e-05, 2.188899999999716e-05]</msg>
<status status="PASS" starttime="20201030 11:51:10.440" endtime="20201030 11:51:10.443"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.434" endtime="20201030 11:51:10.443"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:10.447" endtime="20201030 11:51:10.467"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.446" endtime="20201030 11:51:10.467"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.444" endtime="20201030 11:51:10.467"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.083" endtime="20201030 11:51:10.468"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.083" endtime="20201030 11:51:10.468"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.477" endtime="20201030 11:51:10.496"></status>
</kw>
<msg timestamp="20201030 11:51:10.496" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:10.475" endtime="20201030 11:51:10.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:10.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:10.497" endtime="20201030 11:51:10.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.500" endtime="20201030 11:51:10.501"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.472" endtime="20201030 11:51:10.502"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.470" endtime="20201030 11:51:10.502"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.509" endtime="20201030 11:51:10.795"></status>
</kw>
<msg timestamp="20201030 11:51:10.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023743944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023774375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:10.507" endtime="20201030 11:51:10.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:10.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023743944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023774375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:10.799" endtime="20201030 11:51:10.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.808" endtime="20201030 11:51:10.809"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.505" endtime="20201030 11:51:10.810"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.503" endtime="20201030 11:51:10.810"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:10.814" level="INFO">${RESULT} = [{'diff': 3.0431000000000902e-05}, {'diff': 2.3749999999999466e-05}, {'diff': 2.087500000000006e-05}, {'diff': 2.186100000000149e-05}, {'diff': 1.993100000000081e-05}, {'diff': 2.270899999999923e-05},...</msg>
<status status="PASS" starttime="20201030 11:51:10.811" endtime="20201030 11:51:10.814"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:10.819" level="INFO">${ACCURACY} = {'diff': [3.0431000000000902e-05, 2.3749999999999466e-05, 2.087500000000006e-05, 2.186100000000149e-05, 1.993100000000081e-05, 2.270899999999923e-05, 2.565300000000048e-05, 2.4707999999998287e-05, 2.2...</msg>
<status status="PASS" starttime="20201030 11:51:10.815" endtime="20201030 11:51:10.820"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:10.824" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201030 11:51:10.823" endtime="20201030 11:51:10.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:10.826" level="INFO">VALUE: [3.0431000000000902e-05, 2.3749999999999466e-05, 2.087500000000006e-05, 2.186100000000149e-05, 1.993100000000081e-05, 2.270899999999923e-05, 2.565300000000048e-05, 2.4707999999998287e-05, 2.2819999999999785e-05, 2.5735999999998427e-05, 1.9972000000000045e-05, 2.561100000000177e-05, 2.2778000000001075e-05, 1.8971999999999045e-05, 2.2818999999996842e-05, 2.4750000000000466e-05, 2.281900000000031e-05, 2.565300000000048e-05, 2.086100000000049e-05, 1.9915999999998296e-05, 2.566700000000005e-05, 2.088899999999963e-05, 2.2777999999997606e-05, 1.991700000000124e-05, 2.4694000000002186e-05, 2.2792000000000645e-05, 2.3776999999999132e-05, 2.4736000000000896e-05, 2.4736000000000896e-05, 2.086100000000049e-05, 1.991699999999777e-05, 2.4707999999998287e-05, 2.088899999999963e-05, 2.094500000000138e-05, 2.1819999999998785e-05, 2.088899999999963e-05, 1.991699999999777e-05, 2.469500000000166e-05, 2.3735999999999896e-05, 2.4694000000002186e-05, 2.2819999999999785e-05, 1.995899999999995e-05, 2.0901999999999726e-05, 2.183299999999888e-05, 2.2750000000001935e-05, 2.4665999999999577e-05, 2.088899999999963e-05, 2.186099999999802e-05, 2.288899999999816e-05, 2.5708000000002756e-05]</msg>
<status status="PASS" starttime="20201030 11:51:10.825" endtime="20201030 11:51:10.827"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.820" endtime="20201030 11:51:10.828"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:10.831" endtime="20201030 11:51:10.851"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.830" endtime="20201030 11:51:10.851"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.829" endtime="20201030 11:51:10.852"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.469" endtime="20201030 11:51:10.852"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.468" endtime="20201030 11:51:10.852"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.861" endtime="20201030 11:51:10.877"></status>
</kw>
<msg timestamp="20201030 11:51:10.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:10.859" endtime="20201030 11:51:10.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:10.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:10.879" endtime="20201030 11:51:10.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.881" endtime="20201030 11:51:10.883"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.857" endtime="20201030 11:51:10.884"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.855" endtime="20201030 11:51:10.884"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.891" endtime="20201030 11:51:11.179"></status>
</kw>
<msg timestamp="20201030 11:51:11.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021288819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021309639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:10.889" endtime="20201030 11:51:11.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021288819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021309639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:11.183" endtime="20201030 11:51:11.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.191" endtime="20201030 11:51:11.193"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.886" endtime="20201030 11:51:11.194"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.885" endtime="20201030 11:51:11.194"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:11.198" level="INFO">${RESULT} = [{'diff': 2.0819999999997785e-05}, {'diff': 2.4694000000002186e-05}, {'diff': 1.991700000000124e-05}, {'diff': 2.4750000000000466e-05}, {'diff': 1.991699999999777e-05}, {'diff': 2.468100000000209e-05}...</msg>
<status status="PASS" starttime="20201030 11:51:11.195" endtime="20201030 11:51:11.198"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:11.202" level="INFO">${ACCURACY} = {'diff': [2.0819999999997785e-05, 2.4694000000002186e-05, 1.991700000000124e-05, 2.4750000000000466e-05, 1.991699999999777e-05, 2.468100000000209e-05, 1.991700000000124e-05, 2.088899999999963e-05, 2.5...</msg>
<status status="PASS" starttime="20201030 11:51:11.199" endtime="20201030 11:51:11.203"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.207" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201030 11:51:11.206" endtime="20201030 11:51:11.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.209" level="INFO">VALUE: [2.0819999999997785e-05, 2.4694000000002186e-05, 1.991700000000124e-05, 2.4750000000000466e-05, 1.991699999999777e-05, 2.468100000000209e-05, 1.991700000000124e-05, 2.088899999999963e-05, 2.565300000000048e-05, 2.4707999999998287e-05, 2.0819999999997785e-05, 2.569499999999919e-05, 2.4735999999997427e-05, 2.366700000000152e-05, 2.1833999999998355e-05, 2.4804999999999272e-05, 1.997299999999952e-05, 2.3806000000001215e-05, 2.08890000000031e-05, 2.4750000000000466e-05, 2.5693999999999717e-05, 2.087500000000006e-05, 2.3763999999999036e-05, 2.3806000000001215e-05, 2.4764000000000036e-05, 2.3722000000000326e-05, 2.0848000000000394e-05, 2.3805999999997746e-05, 2.093100000000181e-05, 2.08890000000031e-05, 2.088899999999963e-05, 2.3722000000000326e-05, 2.4707999999998287e-05, 2.09029999999992e-05, 2.5693999999999717e-05, 2.4722000000001326e-05, 2.090300000000267e-05, 2.181899999999931e-05, 2.088899999999963e-05, 2.5624999999997872e-05, 2.2792000000000645e-05, 2.1902000000000726e-05, 1.9972000000000045e-05, 1.993099999999734e-05, 2.184699999999845e-05, 2.4679999999999147e-05, 1.9887999999999156e-05, 1.9958000000000475e-05, 2.181899999999931e-05, 2.468100000000209e-05]</msg>
<status status="PASS" starttime="20201030 11:51:11.208" endtime="20201030 11:51:11.210"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.203" endtime="20201030 11:51:11.210"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:11.214" endtime="20201030 11:51:11.234"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.213" endtime="20201030 11:51:11.234"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.212" endtime="20201030 11:51:11.234"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.853" endtime="20201030 11:51:11.235"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.852" endtime="20201030 11:51:11.235"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.244" endtime="20201030 11:51:11.265"></status>
</kw>
<msg timestamp="20201030 11:51:11.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:11.242" endtime="20201030 11:51:11.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:11.267" endtime="20201030 11:51:11.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.270" endtime="20201030 11:51:11.271"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.239" endtime="20201030 11:51:11.272"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.237" endtime="20201030 11:51:11.272"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.279" endtime="20201030 11:51:11.564"></status>
</kw>
<msg timestamp="20201030 11:51:11.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025269194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025285278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:11.277" endtime="20201030 11:51:11.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025269194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025285278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:11.568" endtime="20201030 11:51:11.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.576" endtime="20201030 11:51:11.578"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.275" endtime="20201030 11:51:11.579"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.273" endtime="20201030 11:51:11.579"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:11.583" level="INFO">${RESULT} = [{'diff': 1.6084000000003013e-05}, {'diff': 2.473700000000037e-05}, {'diff': 2.3776999999999132e-05}, {'diff': 2.186100000000149e-05}, {'diff': 1.9930000000001336e-05}, {'diff': 2.562500000000134e-05}...</msg>
<status status="PASS" starttime="20201030 11:51:11.580" endtime="20201030 11:51:11.583"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:11.587" level="INFO">${ACCURACY} = {'diff': [1.6084000000003013e-05, 2.473700000000037e-05, 2.3776999999999132e-05, 2.186100000000149e-05, 1.9930000000001336e-05, 2.562500000000134e-05, 2.2778000000001075e-05, 2.27770000000016e-05, 1.9...</msg>
<status status="PASS" starttime="20201030 11:51:11.584" endtime="20201030 11:51:11.587"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.592" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201030 11:51:11.591" endtime="20201030 11:51:11.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.594" level="INFO">VALUE: [1.6084000000003013e-05, 2.473700000000037e-05, 2.3776999999999132e-05, 2.186100000000149e-05, 1.9930000000001336e-05, 2.562500000000134e-05, 2.2778000000001075e-05, 2.27770000000016e-05, 1.995899999999995e-05, 2.3776999999999132e-05, 2.086100000000049e-05, 1.998699999999909e-05, 2.286100000000249e-05, 2.088899999999963e-05, 1.8999999999998185e-05, 2.087500000000006e-05, 2.183299999999888e-05, 1.8985999999998615e-05, 2.4708000000001756e-05, 2.3763999999999036e-05, 2.3750000000002935e-05, 2.2806000000000215e-05, 1.9042000000000364e-05, 2.3763999999999036e-05, 2.470900000000123e-05, 2.088899999999963e-05, 2.4707999999998287e-05, 2.2818999999996842e-05, 2.195900000000195e-05, 2.087500000000006e-05, 2.2778000000001075e-05, 2.3749999999999466e-05, 1.991700000000124e-05, 2.186100000000149e-05, 2.188900000000063e-05, 2.5666000000000577e-05, 2.5624999999997872e-05, 1.9915999999998296e-05, 1.99029999999982e-05, 2.5707999999999287e-05, 1.8971999999999045e-05, 2.3749999999999466e-05, 2.4791999999999176e-05, 2.287500000000206e-05, 2.4693999999998717e-05, 2.2777999999997606e-05, 2.566700000000005e-05, 2.3777999999998606e-05, 2.4693999999998717e-05, 2.4736000000000896e-05]</msg>
<status status="PASS" starttime="20201030 11:51:11.593" endtime="20201030 11:51:11.601"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.588" endtime="20201030 11:51:11.601"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:11.605" endtime="20201030 11:51:11.625"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.604" endtime="20201030 11:51:11.625"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.602" endtime="20201030 11:51:11.626"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.236" endtime="20201030 11:51:11.626"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.235" endtime="20201030 11:51:11.626"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.635" endtime="20201030 11:51:11.654"></status>
</kw>
<msg timestamp="20201030 11:51:11.655" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:11.633" endtime="20201030 11:51:11.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:11.656" endtime="20201030 11:51:11.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.658" endtime="20201030 11:51:11.660"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.631" endtime="20201030 11:51:11.660"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.628" endtime="20201030 11:51:11.661"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.667" endtime="20201030 11:51:11.953"></status>
</kw>
<msg timestamp="20201030 11:51:11.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021082514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021141708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:11.666" endtime="20201030 11:51:11.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021082514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021141708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:11.957" endtime="20201030 11:51:11.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.965" endtime="20201030 11:51:11.967"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.663" endtime="20201030 11:51:11.967"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.661" endtime="20201030 11:51:11.968"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:11.972" level="INFO">${RESULT} = [{'diff': 5.9193999999998526e-05}, {'diff': 5.5263999999999314e-05}, {'diff': 5.141700000000152e-05}, {'diff': 5.051300000000203e-05}, {'diff': 5.2485999999997424e-05}, {'diff': 5.145900000000023e-05}...</msg>
<status status="PASS" starttime="20201030 11:51:11.969" endtime="20201030 11:51:11.972"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:11.977" level="INFO">${ACCURACY} = {'diff': [5.9193999999998526e-05, 5.5263999999999314e-05, 5.141700000000152e-05, 5.051300000000203e-05, 5.2485999999997424e-05, 5.145900000000023e-05, 5.045799999999975e-05, 5.336100000000177e-05, 5.1...</msg>
<status status="PASS" starttime="20201030 11:51:11.973" endtime="20201030 11:51:11.977"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.981" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201030 11:51:11.980" endtime="20201030 11:51:11.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.984" level="INFO">VALUE: [5.9193999999998526e-05, 5.5263999999999314e-05, 5.141700000000152e-05, 5.051300000000203e-05, 5.2485999999997424e-05, 5.145900000000023e-05, 5.045799999999975e-05, 5.336100000000177e-05, 5.151399999999903e-05, 5.526299999999984e-05, 5.434699999999973e-05, 5.630499999999955e-05, 5.048599999999889e-05, 5.051399999999803e-05, 5.437499999999887e-05, 5.334699999999873e-05, 5.341700000000005e-05, 5.055500000000074e-05, 4.954199999999964e-05, 5.136099999999977e-05, 5.049999999999846e-05, 5.6235999999997704e-05, 5.341700000000005e-05, 5.149999999999946e-05, 4.952800000000007e-05, 5.05140000000015e-05, 5.441700000000105e-05, 5.436100000000277e-05, 5.050000000000193e-05, 5.6250000000000744e-05, 5.050000000000193e-05, 5.3402000000001004e-05, 5.531899999999812e-05, 5.0388000000001903e-05, 5.145800000000075e-05, 5.149999999999946e-05, 5.2443999999998714e-05, 5.6193999999998995e-05, 5.331899999999959e-05, 5.343099999999962e-05, 5.529100000000245e-05, 4.95270000000006e-05, 5.151399999999903e-05, 5.531900000000159e-05, 5.144400000000118e-05, 5.6264000000000314e-05, 5.238899999999991e-05, 5.238899999999991e-05, 5.6250000000000744e-05, 5.43609999999993e-05]</msg>
<status status="PASS" starttime="20201030 11:51:11.983" endtime="20201030 11:51:11.985"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.978" endtime="20201030 11:51:11.985"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:11.989" endtime="20201030 11:51:12.008"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.987" endtime="20201030 11:51:12.009"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.986" endtime="20201030 11:51:12.009"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.627" endtime="20201030 11:51:12.010"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.626" endtime="20201030 11:51:12.010"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.018" endtime="20201030 11:51:12.046"></status>
</kw>
<msg timestamp="20201030 11:51:12.046" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:12.017" endtime="20201030 11:51:12.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:12.047" endtime="20201030 11:51:12.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.050" endtime="20201030 11:51:12.051"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.014" endtime="20201030 11:51:12.052"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.012" endtime="20201030 11:51:12.052"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.059" endtime="20201030 11:51:12.349"></status>
</kw>
<msg timestamp="20201030 11:51:12.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024181986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024231583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:12.057" endtime="20201030 11:51:12.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024181986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024231583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:12.353" endtime="20201030 11:51:12.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.361" endtime="20201030 11:51:12.363"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.055" endtime="20201030 11:51:12.363"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.053" endtime="20201030 11:51:12.364"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:12.368" level="INFO">${RESULT} = [{'diff': 4.959700000000192e-05}, {'diff': 5.531999999999759e-05}, {'diff': 5.534700000000073e-05}, {'diff': 4.954199999999964e-05}, {'diff': 5.620899999999804e-05}, {'diff': 5.334800000000167e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:12.364" endtime="20201030 11:51:12.368"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:12.372" level="INFO">${ACCURACY} = {'diff': [4.959700000000192e-05, 5.531999999999759e-05, 5.534700000000073e-05, 4.954199999999964e-05, 5.620899999999804e-05, 5.334800000000167e-05, 5.145800000000075e-05, 5.147200000000032e-05, 5.4262...</msg>
<status status="PASS" starttime="20201030 11:51:12.369" endtime="20201030 11:51:12.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.376" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201030 11:51:12.375" endtime="20201030 11:51:12.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.379" level="INFO">VALUE: [4.959700000000192e-05, 5.531999999999759e-05, 5.534700000000073e-05, 4.954199999999964e-05, 5.620899999999804e-05, 5.334800000000167e-05, 5.145800000000075e-05, 5.147200000000032e-05, 5.426299999999884e-05, 5.144400000000118e-05, 5.240299999999948e-05, 4.95140000000005e-05, 5.5222000000000604e-05, 5.5263999999999314e-05, 5.143099999999762e-05, 5.337499999999787e-05, 5.244500000000166e-05, 5.047199999999932e-05, 5.138899999999891e-05, 5.055600000000021e-05, 5.434699999999973e-05, 5.5249999999999744e-05, 5.6207999999998565e-05, 5.05140000000015e-05, 5.6277999999999884e-05, 5.145800000000075e-05, 5.043000000000061e-05, 5.05270000000016e-05, 5.148600000000336e-05, 5.430500000000102e-05, 4.95140000000005e-05, 5.247200000000132e-05, 5.05140000000015e-05, 5.5263999999999314e-05, 5.140299999999848e-05, 5.334800000000167e-05, 5.140299999999848e-05, 5.6264000000000314e-05, 5.3402000000001004e-05, 5.5263999999999314e-05, 5.529099999999898e-05, 5.433300000000016e-05, 5.144500000000066e-05, 5.431900000000059e-05, 5.532000000000106e-05, 5.2443999999998714e-05, 5.6221999999998135e-05, 5.6207999999998565e-05, 5.241699999999905e-05, 5.047199999999932e-05]</msg>
<status status="PASS" starttime="20201030 11:51:12.377" endtime="20201030 11:51:12.380"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.373" endtime="20201030 11:51:12.380"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:12.384" endtime="20201030 11:51:12.403"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.382" endtime="20201030 11:51:12.404"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.381" endtime="20201030 11:51:12.404"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.011" endtime="20201030 11:51:12.404"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.010" endtime="20201030 11:51:12.405"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.413" endtime="20201030 11:51:12.432"></status>
</kw>
<msg timestamp="20201030 11:51:12.433" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:12.412" endtime="20201030 11:51:12.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:12.434" endtime="20201030 11:51:12.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.436" endtime="20201030 11:51:12.438"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.409" endtime="20201030 11:51:12.439"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.407" endtime="20201030 11:51:12.439"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.446" endtime="20201030 11:51:12.734"></status>
</kw>
<msg timestamp="20201030 11:51:12.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021211542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021277292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:12.444" endtime="20201030 11:51:12.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021211542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021277292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:12.738" endtime="20201030 11:51:12.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.747" endtime="20201030 11:51:12.749"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.441" endtime="20201030 11:51:12.749"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.440" endtime="20201030 11:51:12.750"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:12.757" level="INFO">${RESULT} = [{'diff': 6.574999999999984e-05}, {'diff': 5.5249999999999744e-05}, {'diff': 5.1457999999997284e-05}, {'diff': 5.1416000000002043e-05}, {'diff': 5.333299999999916e-05}, {'diff': 5.433399999999963e-05}...</msg>
<status status="PASS" starttime="20201030 11:51:12.750" endtime="20201030 11:51:12.758"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:12.767" level="INFO">${ACCURACY} = {'diff': [6.574999999999984e-05, 5.5249999999999744e-05, 5.1457999999997284e-05, 5.1416000000002043e-05, 5.333299999999916e-05, 5.433399999999963e-05, 5.6207999999998565e-05, 5.5277999999998884e-05, 5...</msg>
<status status="PASS" starttime="20201030 11:51:12.759" endtime="20201030 11:51:12.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.777" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201030 11:51:12.775" endtime="20201030 11:51:12.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.782" level="INFO">VALUE: [6.574999999999984e-05, 5.5249999999999744e-05, 5.1457999999997284e-05, 5.1416000000002043e-05, 5.333299999999916e-05, 5.433399999999963e-05, 5.6207999999998565e-05, 5.5277999999998884e-05, 5.238899999999991e-05, 5.240299999999948e-05, 5.530499999999855e-05, 4.954100000000017e-05, 5.432000000000006e-05, 5.048600000000236e-05, 5.4291999999997453e-05, 5.1429999999998144e-05, 5.240299999999948e-05, 5.147200000000032e-05, 5.531900000000159e-05, 5.145800000000075e-05, 5.331999999999906e-05, 5.043100000000009e-05, 5.6208000000002034e-05, 5.6236000000001174e-05, 5.143100000000109e-05, 5.527800000000235e-05, 4.955499999999974e-05, 5.054200000000064e-05, 5.3457999999999284e-05, 5.145800000000075e-05, 5.145800000000075e-05, 5.6193999999998995e-05, 5.5263999999999314e-05, 5.144500000000066e-05, 5.145900000000023e-05, 5.431900000000059e-05, 5.333299999999916e-05, 4.95409999999967e-05, 5.427700000000188e-05, 5.152800000000207e-05, 5.055500000000074e-05, 5.145900000000023e-05, 5.619499999999847e-05, 5.33470000000022e-05, 5.051299999999856e-05, 5.337500000000134e-05, 5.340300000000048e-05, 5.2429999999999144e-05, 5.5249999999999744e-05, 5.334699999999873e-05]</msg>
<status status="PASS" starttime="20201030 11:51:12.779" endtime="20201030 11:51:12.786"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.769" endtime="20201030 11:51:12.787"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:12.795" endtime="20201030 11:51:12.817"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.792" endtime="20201030 11:51:12.819"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.789" endtime="20201030 11:51:12.819"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.405" endtime="20201030 11:51:12.820"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.405" endtime="20201030 11:51:12.820"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.840" endtime="20201030 11:51:12.860"></status>
</kw>
<msg timestamp="20201030 11:51:12.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:12.836" endtime="20201030 11:51:12.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:12.862" endtime="20201030 11:51:12.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.866" endtime="20201030 11:51:12.867"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.830" endtime="20201030 11:51:12.868"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.826" endtime="20201030 11:51:12.868"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.875" endtime="20201030 11:51:13.161"></status>
</kw>
<msg timestamp="20201030 11:51:13.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036199125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036264931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:12.874" endtime="20201030 11:51:13.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036199125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036264931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:13.166" endtime="20201030 11:51:13.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.174" endtime="20201030 11:51:13.176"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.871" endtime="20201030 11:51:13.177"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.869" endtime="20201030 11:51:13.177"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:13.181" level="INFO">${RESULT} = [{'diff': 6.580600000000159e-05}, {'diff': 5.2417000000005987e-05}, {'diff': 5.6236000000001174e-05}, {'diff': 5.336100000000177e-05}, {'diff': 5.1459000000003696e-05}, {'diff': 5.4180000000000894e-05...</msg>
<status status="PASS" starttime="20201030 11:51:13.178" endtime="20201030 11:51:13.181"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:13.186" level="INFO">${ACCURACY} = {'diff': [6.580600000000159e-05, 5.2417000000005987e-05, 5.6236000000001174e-05, 5.336100000000177e-05, 5.1459000000003696e-05, 5.4180000000000894e-05, 5.241699999999905e-05, 5.052800000000107e-05, 5....</msg>
<status status="PASS" starttime="20201030 11:51:13.182" endtime="20201030 11:51:13.187"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.191" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201030 11:51:13.190" endtime="20201030 11:51:13.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.194" level="INFO">VALUE: [6.580600000000159e-05, 5.2417000000005987e-05, 5.6236000000001174e-05, 5.336100000000177e-05, 5.1459000000003696e-05, 5.4180000000000894e-05, 5.241699999999905e-05, 5.052800000000107e-05, 5.430599999999702e-05, 5.6222000000001604e-05, 5.431899999999712e-05, 5.5277999999998884e-05, 5.432000000000353e-05, 5.433399999999616e-05, 5.240299999999948e-05, 5.047200000000279e-05, 5.2443999999998714e-05, 5.1443999999997714e-05, 5.1471999999996854e-05, 5.05140000000015e-05, 5.147299999999633e-05, 5.519500000000094e-05, 5.529099999999898e-05, 5.6236000000001174e-05, 5.620900000000151e-05, 5.1485999999996424e-05, 5.527800000000582e-05, 5.5236000000000174e-05, 5.238899999999991e-05, 5.340300000000048e-05, 5.347200000000579e-05, 5.141699999999805e-05, 5.523699999999965e-05, 5.241699999999905e-05, 5.329099999999698e-05, 5.43340000000031e-05, 4.952800000000007e-05, 5.4291999999997453e-05, 5.33749999999944e-05, 5.236100000000077e-05, 5.5263999999999314e-05, 5.441699999999411e-05, 5.144499999999719e-05, 5.5249999999999744e-05, 5.5277999999998884e-05, 5.051399999999456e-05, 5.238899999999991e-05, 5.237500000000034e-05, 5.1457999999997284e-05, 5.1471999999996854e-05]</msg>
<status status="PASS" starttime="20201030 11:51:13.192" endtime="20201030 11:51:13.194"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.187" endtime="20201030 11:51:13.195"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:13.199" endtime="20201030 11:51:13.218"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.197" endtime="20201030 11:51:13.219"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.196" endtime="20201030 11:51:13.219"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.822" endtime="20201030 11:51:13.219"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.821" endtime="20201030 11:51:13.220"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.229" endtime="20201030 11:51:13.253"></status>
</kw>
<msg timestamp="20201030 11:51:13.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:13.227" endtime="20201030 11:51:13.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:13.254" endtime="20201030 11:51:13.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.257" endtime="20201030 11:51:13.258"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.224" endtime="20201030 11:51:13.259"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.222" endtime="20201030 11:51:13.259"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.267" endtime="20201030 11:51:13.556"></status>
</kw>
<msg timestamp="20201030 11:51:13.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025143333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025191931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:13.266" endtime="20201030 11:51:13.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025143333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025191931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:13.560" endtime="20201030 11:51:13.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.569" endtime="20201030 11:51:13.570"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.262" endtime="20201030 11:51:13.571"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.260" endtime="20201030 11:51:13.571"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:13.576" level="INFO">${RESULT} = [{'diff': 4.859800000000039e-05}, {'diff': 5.527800000000235e-05}, {'diff': 4.954100000000017e-05}, {'diff': 5.434699999999973e-05}, {'diff': 5.531900000000159e-05}, {'diff': 5.15140000000025e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:13.572" endtime="20201030 11:51:13.576"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:13.580" level="INFO">${ACCURACY} = {'diff': [4.859800000000039e-05, 5.527800000000235e-05, 4.954100000000017e-05, 5.434699999999973e-05, 5.531900000000159e-05, 5.15140000000025e-05, 4.955499999999974e-05, 5.430500000000102e-05, 5.43190...</msg>
<status status="PASS" starttime="20201030 11:51:13.577" endtime="20201030 11:51:13.580"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.584" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201030 11:51:13.583" endtime="20201030 11:51:13.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.587" level="INFO">VALUE: [4.859800000000039e-05, 5.527800000000235e-05, 4.954100000000017e-05, 5.434699999999973e-05, 5.531900000000159e-05, 5.15140000000025e-05, 4.955499999999974e-05, 5.430500000000102e-05, 5.431900000000059e-05, 5.330500000000002e-05, 5.334699999999873e-05, 5.429099999999798e-05, 5.237500000000034e-05, 5.334800000000167e-05, 5.340299999999701e-05, 5.630600000000249e-05, 5.241699999999905e-05, 5.14729999999998e-05, 5.433299999999669e-05, 5.4388000000002434e-05, 5.6207999999998565e-05, 5.044499999999966e-05, 5.2415999999999574e-05, 5.5263999999999314e-05, 5.054200000000064e-05, 5.2443999999998714e-05, 5.622299999999761e-05, 5.33609999999983e-05, 5.048599999999889e-05, 5.145900000000023e-05, 5.050000000000193e-05, 5.048599999999889e-05, 5.431899999999712e-05, 5.33470000000022e-05, 4.961100000000149e-05, 5.2429999999999144e-05, 5.5263999999999314e-05, 5.1388000000002904e-05, 5.33609999999983e-05, 5.241699999999905e-05, 5.431899999999712e-05, 5.145800000000075e-05, 5.5277999999998884e-05, 5.236100000000077e-05, 5.337499999999787e-05, 5.337499999999787e-05, 5.6236000000001174e-05, 5.240299999999948e-05, 4.956999999999878e-05, 5.145800000000075e-05]</msg>
<status status="PASS" starttime="20201030 11:51:13.586" endtime="20201030 11:51:13.588"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.581" endtime="20201030 11:51:13.588"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:13.592" endtime="20201030 11:51:13.612"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.591" endtime="20201030 11:51:13.612"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.589" endtime="20201030 11:51:13.613"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.220" endtime="20201030 11:51:13.613"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.220" endtime="20201030 11:51:13.613"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.622" endtime="20201030 11:51:13.644"></status>
</kw>
<msg timestamp="20201030 11:51:13.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:13.620" endtime="20201030 11:51:13.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:13.645" endtime="20201030 11:51:13.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.648" endtime="20201030 11:51:13.649"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.618" endtime="20201030 11:51:13.650"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.616" endtime="20201030 11:51:13.651"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.657" endtime="20201030 11:51:13.943"></status>
</kw>
<msg timestamp="20201030 11:51:13.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023526625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023580944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:13.656" endtime="20201030 11:51:13.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023526625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023580944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:13.948" endtime="20201030 11:51:13.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.956" endtime="20201030 11:51:13.958"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.653" endtime="20201030 11:51:13.958"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.651" endtime="20201030 11:51:13.959"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:13.963" level="INFO">${RESULT} = [{'diff': 5.431900000000059e-05}, {'diff': 5.047199999999932e-05}, {'diff': 5.334800000000167e-05}, {'diff': 5.2429999999999144e-05}, {'diff': 5.15270000000026e-05}, {'diff': 5.145800000000075e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:13.960" endtime="20201030 11:51:13.963"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:13.967" level="INFO">${ACCURACY} = {'diff': [5.431900000000059e-05, 5.047199999999932e-05, 5.334800000000167e-05, 5.2429999999999144e-05, 5.15270000000026e-05, 5.145800000000075e-05, 5.143000000000161e-05, 5.530499999999855e-05, 5.2416...</msg>
<status status="PASS" starttime="20201030 11:51:13.964" endtime="20201030 11:51:13.968"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.972" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201030 11:51:13.971" endtime="20201030 11:51:13.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.975" level="INFO">VALUE: [5.431900000000059e-05, 5.047199999999932e-05, 5.334800000000167e-05, 5.2429999999999144e-05, 5.15270000000026e-05, 5.145800000000075e-05, 5.143000000000161e-05, 5.530499999999855e-05, 5.2416000000003043e-05, 5.145800000000075e-05, 5.615300000000323e-05, 5.430600000000049e-05, 5.430600000000049e-05, 5.336100000000177e-05, 5.055500000000074e-05, 5.054200000000064e-05, 5.6291999999999454e-05, 5.6250000000000744e-05, 5.337499999999787e-05, 5.438899999999844e-05, 4.956999999999878e-05, 5.051399999999803e-05, 5.1443999999997714e-05, 5.337500000000134e-05, 5.6249999999997274e-05, 5.2457999999998284e-05, 5.537499999999987e-05, 5.233300000000163e-05, 5.630499999999955e-05, 5.149999999999946e-05, 5.144400000000118e-05, 5.047199999999932e-05, 5.147200000000032e-05, 5.3471999999998854e-05, 5.527699999999941e-05, 5.238899999999991e-05, 4.955599999999921e-05, 5.43609999999993e-05, 5.05140000000015e-05, 5.433399999999963e-05, 5.4291999999997453e-05, 5.24730000000008e-05, 5.33609999999983e-05, 5.240299999999948e-05, 5.334699999999873e-05, 5.341700000000005e-05, 5.2415999999999574e-05, 5.334699999999873e-05, 4.954199999999964e-05, 5.144400000000118e-05]</msg>
<status status="PASS" starttime="20201030 11:51:13.973" endtime="20201030 11:51:13.976"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.968" endtime="20201030 11:51:13.977"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:13.981" endtime="20201030 11:51:14.000"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.979" endtime="20201030 11:51:14.001"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.978" endtime="20201030 11:51:14.001"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.614" endtime="20201030 11:51:14.002"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.613" endtime="20201030 11:51:14.002"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.011" endtime="20201030 11:51:14.031"></status>
</kw>
<msg timestamp="20201030 11:51:14.032" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:14.009" endtime="20201030 11:51:14.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:14.033" endtime="20201030 11:51:14.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.036" endtime="20201030 11:51:14.038"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.007" endtime="20201030 11:51:14.038"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.004" endtime="20201030 11:51:14.039"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.046" endtime="20201030 11:51:14.344"></status>
</kw>
<msg timestamp="20201030 11:51:14.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021697306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021757361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:14.045" endtime="20201030 11:51:14.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021697306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021757361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:14.354" endtime="20201030 11:51:14.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.371" endtime="20201030 11:51:14.373"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.041" endtime="20201030 11:51:14.373"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.039" endtime="20201030 11:51:14.374"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:14.378" level="INFO">${RESULT} = [{'diff': 6.005499999999983e-05}, {'diff': 5.043100000000009e-05}, {'diff': 5.527699999999941e-05}, {'diff': 5.533300000000116e-05}, {'diff': 5.530600000000149e-05}, {'diff': 5.243100000000209e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:14.375" endtime="20201030 11:51:14.378"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:14.383" level="INFO">${ACCURACY} = {'diff': [6.005499999999983e-05, 5.043100000000009e-05, 5.527699999999941e-05, 5.533300000000116e-05, 5.530600000000149e-05, 5.243100000000209e-05, 5.336100000000177e-05, 5.438900000000191e-05, 5.6194...</msg>
<status status="PASS" starttime="20201030 11:51:14.379" endtime="20201030 11:51:14.383"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.387" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201030 11:51:14.386" endtime="20201030 11:51:14.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.390" level="INFO">VALUE: [6.005499999999983e-05, 5.043100000000009e-05, 5.527699999999941e-05, 5.533300000000116e-05, 5.530600000000149e-05, 5.243100000000209e-05, 5.336100000000177e-05, 5.438900000000191e-05, 5.6194000000002464e-05, 5.33609999999983e-05, 5.616699999999933e-05, 5.5277999999998884e-05, 5.3443999999999714e-05, 5.1457999999997284e-05, 5.0473000000002266e-05, 5.055600000000021e-05, 5.048599999999889e-05, 5.337500000000134e-05, 5.158300000000088e-05, 5.334699999999873e-05, 5.5249999999999744e-05, 4.959699999999845e-05, 5.530499999999855e-05, 5.6207999999998565e-05, 5.148599999999989e-05, 4.955599999999921e-05, 5.5305999999998023e-05, 5.240299999999948e-05, 5.4401999999998535e-05, 5.049999999999846e-05, 5.336100000000177e-05, 5.533300000000116e-05, 5.338900000000091e-05, 5.049999999999846e-05, 5.343099999999962e-05, 5.533299999999769e-05, 5.050000000000193e-05, 5.337499999999787e-05, 5.245899999999776e-05, 5.1443999999997714e-05, 5.0472999999998797e-05, 5.6194000000002464e-05, 5.157000000000078e-05, 5.144400000000118e-05, 5.2388000000000434e-05, 5.3457999999999284e-05, 5.144400000000118e-05, 5.6236000000001174e-05, 5.151399999999903e-05, 5.051399999999803e-05]</msg>
<status status="PASS" starttime="20201030 11:51:14.388" endtime="20201030 11:51:14.390"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.384" endtime="20201030 11:51:14.391"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:14.395" endtime="20201030 11:51:14.414"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.393" endtime="20201030 11:51:14.415"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.392" endtime="20201030 11:51:14.415"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.003" endtime="20201030 11:51:14.415"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.002" endtime="20201030 11:51:14.415"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.424" endtime="20201030 11:51:14.443"></status>
</kw>
<msg timestamp="20201030 11:51:14.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:14.422" endtime="20201030 11:51:14.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.447" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:14.445" endtime="20201030 11:51:14.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.448" endtime="20201030 11:51:14.450"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.420" endtime="20201030 11:51:14.450"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.418" endtime="20201030 11:51:14.451"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.458" endtime="20201030 11:51:14.744"></status>
</kw>
<msg timestamp="20201030 11:51:14.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020033514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020082181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:14.456" endtime="20201030 11:51:14.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020033514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020082181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:14.749" endtime="20201030 11:51:14.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.757" endtime="20201030 11:51:14.759"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.453" endtime="20201030 11:51:14.759"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.451" endtime="20201030 11:51:14.760"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:14.764" level="INFO">${RESULT} = [{'diff': 4.8667000000002236e-05}, {'diff': 5.141700000000152e-05}, {'diff': 5.331999999999906e-05}, {'diff': 5.431899999999712e-05}, {'diff': 5.248600000000089e-05}, {'diff': 5.0473000000002266e-05},...</msg>
<status status="PASS" starttime="20201030 11:51:14.760" endtime="20201030 11:51:14.764"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:14.768" level="INFO">${ACCURACY} = {'diff': [4.8667000000002236e-05, 5.141700000000152e-05, 5.331999999999906e-05, 5.431899999999712e-05, 5.248600000000089e-05, 5.0473000000002266e-05, 5.336100000000177e-05, 5.432000000000006e-05, 4.96...</msg>
<status status="PASS" starttime="20201030 11:51:14.765" endtime="20201030 11:51:14.768"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.772" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201030 11:51:14.771" endtime="20201030 11:51:14.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.775" level="INFO">VALUE: [4.8667000000002236e-05, 5.141700000000152e-05, 5.331999999999906e-05, 5.431899999999712e-05, 5.248600000000089e-05, 5.0473000000002266e-05, 5.336100000000177e-05, 5.432000000000006e-05, 4.961100000000149e-05, 5.5236000000000174e-05, 5.429100000000145e-05, 5.051399999999803e-05, 5.0459000000002696e-05, 5.337500000000134e-05, 5.622299999999761e-05, 5.5277999999998884e-05, 5.432000000000006e-05, 5.6208000000002034e-05, 5.144400000000118e-05, 5.337500000000134e-05, 5.2443999999998714e-05, 5.440300000000148e-05, 5.049999999999846e-05, 5.6208000000002034e-05, 5.234699999999773e-05, 5.3430000000000144e-05, 5.5263999999999314e-05, 5.240299999999948e-05, 5.241700000000252e-05, 5.433399999999963e-05, 5.054200000000064e-05, 5.049999999999846e-05, 5.040300000000095e-05, 5.148599999999989e-05, 5.057000000000325e-05, 5.050000000000193e-05, 5.238899999999991e-05, 5.2415999999999574e-05, 5.054200000000064e-05, 5.6179999999999425e-05, 5.147200000000032e-05, 4.947200000000179e-05, 5.048599999999889e-05, 5.051399999999803e-05, 5.331899999999959e-05, 5.5249999999999744e-05, 5.5222000000000604e-05, 5.05270000000016e-05, 5.054200000000064e-05, 5.333399999999863e-05]</msg>
<status status="PASS" starttime="20201030 11:51:14.773" endtime="20201030 11:51:14.775"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.769" endtime="20201030 11:51:14.776"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:14.779" endtime="20201030 11:51:14.799"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.778" endtime="20201030 11:51:14.799"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.777" endtime="20201030 11:51:14.800"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.416" endtime="20201030 11:51:14.800"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.416" endtime="20201030 11:51:14.800"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.809" endtime="20201030 11:51:14.830"></status>
</kw>
<msg timestamp="20201030 11:51:14.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:14.807" endtime="20201030 11:51:14.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:14.831" endtime="20201030 11:51:14.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.834" endtime="20201030 11:51:14.835"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.805" endtime="20201030 11:51:14.836"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.803" endtime="20201030 11:51:14.836"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.843" endtime="20201030 11:51:15.128"></status>
</kw>
<msg timestamp="20201030 11:51:15.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022051583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022103958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:14.841" endtime="20201030 11:51:15.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022051583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022103958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:15.132" endtime="20201030 11:51:15.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.140" endtime="20201030 11:51:15.142"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.839" endtime="20201030 11:51:15.142"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.837" endtime="20201030 11:51:15.143"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:15.147" level="INFO">${RESULT} = [{'diff': 5.237500000000034e-05}, {'diff': 5.237500000000034e-05}, {'diff': 5.234800000000067e-05}, {'diff': 5.43479999999992e-05}, {'diff': 5.333299999999916e-05}, {'diff': 5.6236000000001174e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:15.143" endtime="20201030 11:51:15.147"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:15.151" level="INFO">${ACCURACY} = {'diff': [5.237500000000034e-05, 5.237500000000034e-05, 5.234800000000067e-05, 5.43479999999992e-05, 5.333299999999916e-05, 5.6236000000001174e-05, 5.429200000000092e-05, 5.334800000000167e-05, 5.5249...</msg>
<status status="PASS" starttime="20201030 11:51:15.148" endtime="20201030 11:51:15.151"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.155" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201030 11:51:15.154" endtime="20201030 11:51:15.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.158" level="INFO">VALUE: [5.237500000000034e-05, 5.237500000000034e-05, 5.234800000000067e-05, 5.43479999999992e-05, 5.333299999999916e-05, 5.6236000000001174e-05, 5.429200000000092e-05, 5.334800000000167e-05, 5.5249999999999744e-05, 5.143100000000109e-05, 5.5263999999999314e-05, 5.5444000000001714e-05, 5.5249999999999744e-05, 4.955599999999921e-05, 5.33470000000022e-05, 5.047199999999932e-05, 5.5263999999999314e-05, 5.145900000000023e-05, 5.147200000000032e-05, 5.6235999999997704e-05, 5.333399999999863e-05, 5.526299999999984e-05, 5.434699999999973e-05, 5.051399999999803e-05, 5.243099999999862e-05, 5.427800000000135e-05, 5.429099999999798e-05, 5.5249999999999744e-05, 5.430600000000049e-05, 5.140299999999848e-05, 5.438899999999844e-05, 5.33479999999982e-05, 5.2429999999999144e-05, 5.238899999999991e-05, 4.95270000000006e-05, 5.620899999999804e-05, 5.336100000000177e-05, 5.151399999999903e-05, 5.526299999999984e-05, 5.2388000000000434e-05, 5.33609999999983e-05, 5.336200000000124e-05, 4.955599999999921e-05, 5.2388000000000434e-05, 5.6235999999997704e-05, 5.05140000000015e-05, 5.145900000000023e-05, 5.334699999999873e-05, 5.429200000000092e-05, 5.527699999999941e-05]</msg>
<status status="PASS" starttime="20201030 11:51:15.156" endtime="20201030 11:51:15.159"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.152" endtime="20201030 11:51:15.160"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:15.164" endtime="20201030 11:51:15.183"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.162" endtime="20201030 11:51:15.184"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.161" endtime="20201030 11:51:15.184"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.801" endtime="20201030 11:51:15.184"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.800" endtime="20201030 11:51:15.184"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.193" endtime="20201030 11:51:15.211"></status>
</kw>
<msg timestamp="20201030 11:51:15.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:15.191" endtime="20201030 11:51:15.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.214" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:15.213" endtime="20201030 11:51:15.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.215" endtime="20201030 11:51:15.217"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.189" endtime="20201030 11:51:15.217"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.187" endtime="20201030 11:51:15.218"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.224" endtime="20201030 11:51:15.511"></status>
</kw>
<msg timestamp="20201030 11:51:15.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019717042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019761792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:15.223" endtime="20201030 11:51:15.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019717042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019761792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:15.515" endtime="20201030 11:51:15.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.524" endtime="20201030 11:51:15.525"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.220" endtime="20201030 11:51:15.526"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.218" endtime="20201030 11:51:15.526"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:15.530" level="INFO">${RESULT} = [{'diff': 4.474999999999965e-05}, {'diff': 5.33609999999983e-05}, {'diff': 5.155599999999774e-05}, {'diff': 5.048599999999889e-05}, {'diff': 5.6208000000002034e-05}, {'diff': 5.6221999999998135e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:51:15.527" endtime="20201030 11:51:15.530"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:15.535" level="INFO">${ACCURACY} = {'diff': [4.474999999999965e-05, 5.33609999999983e-05, 5.155599999999774e-05, 5.048599999999889e-05, 5.6208000000002034e-05, 5.6221999999998135e-05, 5.53610000000003e-05, 5.134699999999673e-05, 5.5195...</msg>
<status status="PASS" starttime="20201030 11:51:15.531" endtime="20201030 11:51:15.536"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.540" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201030 11:51:15.539" endtime="20201030 11:51:15.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.542" level="INFO">VALUE: [4.474999999999965e-05, 5.33609999999983e-05, 5.155599999999774e-05, 5.048599999999889e-05, 5.6208000000002034e-05, 5.6221999999998135e-05, 5.53610000000003e-05, 5.134699999999673e-05, 5.519500000000094e-05, 5.047199999999932e-05, 5.634699999999826e-05, 5.143000000000161e-05, 5.154200000000164e-05, 5.1416000000002043e-05, 5.151399999999903e-05, 5.429200000000092e-05, 5.440300000000148e-05, 5.5263999999999314e-05, 5.056900000000031e-05, 5.431900000000059e-05, 4.958399999999835e-05, 5.240299999999948e-05, 5.251400000000003e-05, 5.054200000000064e-05, 5.6319999999998593e-05, 5.532000000000106e-05, 5.53610000000003e-05, 5.33470000000022e-05, 5.437499999999887e-05, 5.333299999999916e-05, 5.4401999999998535e-05, 5.334800000000167e-05, 5.151399999999903e-05, 5.525000000000321e-05, 4.958299999999888e-05, 5.5249999999999744e-05, 4.9445000000002126e-05, 5.533300000000116e-05, 5.144500000000066e-05, 5.048600000000236e-05, 5.437499999999887e-05, 5.33340000000021e-05, 5.241699999999905e-05, 5.440299999999801e-05, 5.6236000000001174e-05, 5.2457999999998284e-05, 5.6207999999998565e-05, 4.961100000000149e-05, 5.0487000000001836e-05, 5.531899999999812e-05]</msg>
<status status="PASS" starttime="20201030 11:51:15.541" endtime="20201030 11:51:15.543"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.536" endtime="20201030 11:51:15.544"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:15.547" endtime="20201030 11:51:15.566"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.546" endtime="20201030 11:51:15.567"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.544" endtime="20201030 11:51:15.567"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.185" endtime="20201030 11:51:15.568"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.185" endtime="20201030 11:51:15.568"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.576" endtime="20201030 11:51:15.598"></status>
</kw>
<msg timestamp="20201030 11:51:15.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:15.575" endtime="20201030 11:51:15.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.601" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:15.599" endtime="20201030 11:51:15.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.602" endtime="20201030 11:51:15.604"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.572" endtime="20201030 11:51:15.604"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.570" endtime="20201030 11:51:15.605"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.611" endtime="20201030 11:51:15.901"></status>
</kw>
<msg timestamp="20201030 11:51:15.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023047972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023095667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:15.609" endtime="20201030 11:51:15.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023047972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023095667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:15.905" endtime="20201030 11:51:15.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.914" endtime="20201030 11:51:15.915"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.607" endtime="20201030 11:51:15.916"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.605" endtime="20201030 11:51:15.916"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:15.920" level="INFO">${RESULT} = [{'diff': 4.7695000000000376e-05}, {'diff': 5.048599999999889e-05}, {'diff': 5.2415999999999574e-05}, {'diff': 5.149999999999946e-05}, {'diff': 5.334699999999873e-05}, {'diff': 5.2388000000000434e-05}...</msg>
<status status="PASS" starttime="20201030 11:51:15.917" endtime="20201030 11:51:15.920"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:15.924" level="INFO">${ACCURACY} = {'diff': [4.7695000000000376e-05, 5.048599999999889e-05, 5.2415999999999574e-05, 5.149999999999946e-05, 5.334699999999873e-05, 5.2388000000000434e-05, 5.241699999999905e-05, 5.14729999999998e-05, 5.43...</msg>
<status status="PASS" starttime="20201030 11:51:15.921" endtime="20201030 11:51:15.925"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.929" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201030 11:51:15.928" endtime="20201030 11:51:15.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.931" level="INFO">VALUE: [4.7695000000000376e-05, 5.048599999999889e-05, 5.2415999999999574e-05, 5.149999999999946e-05, 5.334699999999873e-05, 5.2388000000000434e-05, 5.241699999999905e-05, 5.14729999999998e-05, 5.431900000000059e-05, 5.5222000000000604e-05, 5.433300000000016e-05, 5.5249999999999744e-05, 5.241700000000252e-05, 5.240299999999948e-05, 5.431900000000059e-05, 5.431900000000059e-05, 5.6235999999997704e-05, 5.5263999999999314e-05, 5.141700000000152e-05, 5.430599999999702e-05, 5.056900000000031e-05, 5.340300000000048e-05, 5.047199999999932e-05, 5.241699999999905e-05, 5.336100000000177e-05, 5.5263999999999314e-05, 5.5263999999999314e-05, 5.2430000000002613e-05, 5.240300000000295e-05, 5.5249999999999744e-05, 5.240299999999948e-05, 5.333299999999916e-05, 5.423699999999865e-05, 5.5263999999999314e-05, 5.054200000000064e-05, 5.334699999999873e-05, 4.958299999999888e-05, 5.049999999999846e-05, 5.430600000000049e-05, 4.952800000000007e-05, 5.430500000000102e-05, 5.048599999999889e-05, 5.437499999999887e-05, 5.336100000000177e-05, 5.5263999999999314e-05, 5.336199999999777e-05, 5.5249999999999744e-05, 5.247299999999733e-05, 5.049999999999846e-05, 5.529200000000192e-05]</msg>
<status status="PASS" starttime="20201030 11:51:15.930" endtime="20201030 11:51:15.932"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.925" endtime="20201030 11:51:15.933"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:15.936" endtime="20201030 11:51:15.956"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.935" endtime="20201030 11:51:15.956"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.934" endtime="20201030 11:51:15.956"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.569" endtime="20201030 11:51:15.957"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.568" endtime="20201030 11:51:15.957"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.966" endtime="20201030 11:51:15.985"></status>
</kw>
<msg timestamp="20201030 11:51:15.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:15.964" endtime="20201030 11:51:15.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:15.986" endtime="20201030 11:51:15.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.989" endtime="20201030 11:51:15.990"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.961" endtime="20201030 11:51:15.991"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.959" endtime="20201030 11:51:15.991"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.997" endtime="20201030 11:51:16.282"></status>
</kw>
<msg timestamp="20201030 11:51:16.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020825847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020874375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:15.996" endtime="20201030 11:51:16.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020825847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020874375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:16.286" endtime="20201030 11:51:16.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.294" endtime="20201030 11:51:16.296"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.993" endtime="20201030 11:51:16.296"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.992" endtime="20201030 11:51:16.297"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:16.301" level="INFO">${RESULT} = [{'diff': 4.852799999999907e-05}, {'diff': 5.434699999999973e-05}, {'diff': 5.4401999999998535e-05}, {'diff': 5.5277999999998884e-05}, {'diff': 5.2443999999998714e-05}, {'diff': 4.961099999999802e-05}...</msg>
<status status="PASS" starttime="20201030 11:51:16.298" endtime="20201030 11:51:16.301"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:16.305" level="INFO">${ACCURACY} = {'diff': [4.852799999999907e-05, 5.434699999999973e-05, 5.4401999999998535e-05, 5.5277999999998884e-05, 5.2443999999998714e-05, 4.961099999999802e-05, 5.436200000000224e-05, 5.24730000000008e-05, 5.04...</msg>
<status status="PASS" starttime="20201030 11:51:16.302" endtime="20201030 11:51:16.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.309" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201030 11:51:16.308" endtime="20201030 11:51:16.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.312" level="INFO">VALUE: [4.852799999999907e-05, 5.434699999999973e-05, 5.4401999999998535e-05, 5.5277999999998884e-05, 5.2443999999998714e-05, 4.961099999999802e-05, 5.436200000000224e-05, 5.24730000000008e-05, 5.044499999999966e-05, 5.33609999999983e-05, 5.530499999999855e-05, 5.144499999999719e-05, 5.244500000000166e-05, 5.345899999999876e-05, 5.147200000000032e-05, 5.634700000000173e-05, 5.429100000000145e-05, 5.049999999999846e-05, 5.337500000000134e-05, 5.6305999999999023e-05, 5.15140000000025e-05, 5.238899999999991e-05, 5.526400000000278e-05, 5.627700000000041e-05, 5.537499999999987e-05, 5.237500000000034e-05, 5.144500000000066e-05, 5.143100000000109e-05, 5.429100000000145e-05, 5.149999999999946e-05, 5.244400000000218e-05, 5.336100000000177e-05, 5.534700000000073e-05, 5.3402000000001004e-05, 5.430600000000049e-05, 5.6222000000001604e-05, 5.340300000000048e-05, 4.961100000000149e-05, 5.433300000000016e-05, 5.145800000000075e-05, 5.530499999999855e-05, 4.954199999999964e-05, 5.054200000000064e-05, 5.6277999999999884e-05, 5.526299999999984e-05, 5.044400000000018e-05, 5.530600000000149e-05, 5.526300000000331e-05, 5.6277999999999884e-05, 5.337499999999787e-05]</msg>
<status status="PASS" starttime="20201030 11:51:16.310" endtime="20201030 11:51:16.313"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.306" endtime="20201030 11:51:16.314"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:16.318" endtime="20201030 11:51:16.337"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.316" endtime="20201030 11:51:16.337"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.315" endtime="20201030 11:51:16.338"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.958" endtime="20201030 11:51:16.338"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.957" endtime="20201030 11:51:16.338"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.347" endtime="20201030 11:51:16.366"></status>
</kw>
<msg timestamp="20201030 11:51:16.367" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:16.345" endtime="20201030 11:51:16.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:16.368" endtime="20201030 11:51:16.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.370" endtime="20201030 11:51:16.372"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.343" endtime="20201030 11:51:16.372"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.341" endtime="20201030 11:51:16.373"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.379" endtime="20201030 11:51:16.665"></status>
</kw>
<msg timestamp="20201030 11:51:16.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021263903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021309625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:16.378" endtime="20201030 11:51:16.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021263903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021309625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:16.669" endtime="20201030 11:51:16.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.677" endtime="20201030 11:51:16.679"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.375" endtime="20201030 11:51:16.679"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.373" endtime="20201030 11:51:16.680"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:16.684" level="INFO">${RESULT} = [{'diff': 4.572199999999804e-05}, {'diff': 4.955599999999921e-05}, {'diff': 5.530499999999855e-05}, {'diff': 5.2415999999999574e-05}, {'diff': 5.431900000000059e-05}, {'diff': 5.6277999999999884e-05},...</msg>
<status status="PASS" starttime="20201030 11:51:16.681" endtime="20201030 11:51:16.684"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:16.689" level="INFO">${ACCURACY} = {'diff': [4.572199999999804e-05, 4.955599999999921e-05, 5.530499999999855e-05, 5.2415999999999574e-05, 5.431900000000059e-05, 5.6277999999999884e-05, 4.958299999999888e-05, 5.2415999999999574e-05, 5.0...</msg>
<status status="PASS" starttime="20201030 11:51:16.685" endtime="20201030 11:51:16.689"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.693" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201030 11:51:16.692" endtime="20201030 11:51:16.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.696" level="INFO">VALUE: [4.572199999999804e-05, 4.955599999999921e-05, 5.530499999999855e-05, 5.2415999999999574e-05, 5.431900000000059e-05, 5.6277999999999884e-05, 4.958299999999888e-05, 5.2415999999999574e-05, 5.051399999999803e-05, 5.6235999999997704e-05, 5.147200000000032e-05, 5.151399999999903e-05, 5.337500000000134e-05, 5.6264000000000314e-05, 5.533300000000116e-05, 5.337500000000134e-05, 5.051299999999856e-05, 5.15279999999986e-05, 5.33479999999982e-05, 5.531900000000159e-05, 5.537499999999987e-05, 5.151399999999903e-05, 5.431899999999712e-05, 5.143100000000109e-05, 5.331899999999959e-05, 5.340300000000048e-05, 5.5291999999998453e-05, 5.538900000000291e-05, 5.151399999999903e-05, 5.337499999999787e-05, 5.529200000000192e-05, 5.240299999999948e-05, 5.333299999999916e-05, 5.6235999999997704e-05, 5.5249999999999744e-05, 5.430600000000049e-05, 5.534699999999726e-05, 5.2429999999999144e-05, 5.5305999999998023e-05, 5.5277999999998884e-05, 5.33609999999983e-05, 5.5249999999999744e-05, 5.143100000000109e-05, 5.4235999999999174e-05, 5.432000000000006e-05, 5.433300000000016e-05, 5.240299999999948e-05, 5.33609999999983e-05, 5.432000000000006e-05, 5.054200000000064e-05]</msg>
<status status="PASS" starttime="20201030 11:51:16.694" endtime="20201030 11:51:16.700"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.690" endtime="20201030 11:51:16.701"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:16.705" endtime="20201030 11:51:16.724"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.703" endtime="20201030 11:51:16.725"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.702" endtime="20201030 11:51:16.725"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.339" endtime="20201030 11:51:16.726"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.339" endtime="20201030 11:51:16.726"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.734" endtime="20201030 11:51:16.753"></status>
</kw>
<msg timestamp="20201030 11:51:16.753" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:16.733" endtime="20201030 11:51:16.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:16.754" endtime="20201030 11:51:16.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.757" endtime="20201030 11:51:16.758"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.730" endtime="20201030 11:51:16.759"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.728" endtime="20201030 11:51:16.759"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.766" endtime="20201030 11:51:17.054"></status>
</kw>
<msg timestamp="20201030 11:51:17.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020735639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020797611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:16.764" endtime="20201030 11:51:17.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020735639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020797611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:17.058" endtime="20201030 11:51:17.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.066" endtime="20201030 11:51:17.068"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.762" endtime="20201030 11:51:17.068"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.760" endtime="20201030 11:51:17.069"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:17.073" level="INFO">${RESULT} = [{'diff': 6.197200000000042e-05}, {'diff': 5.5263999999999314e-05}, {'diff': 5.240299999999948e-05}, {'diff': 5.531899999999812e-05}, {'diff': 5.343099999999962e-05}, {'diff': 5.527800000000235e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:51:17.070" endtime="20201030 11:51:17.073"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:17.077" level="INFO">${ACCURACY} = {'diff': [6.197200000000042e-05, 5.5263999999999314e-05, 5.240299999999948e-05, 5.531899999999812e-05, 5.343099999999962e-05, 5.527800000000235e-05, 5.145900000000023e-05, 5.529099999999898e-05, 5.145...</msg>
<status status="PASS" starttime="20201030 11:51:17.074" endtime="20201030 11:51:17.077"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.081" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201030 11:51:17.080" endtime="20201030 11:51:17.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.084" level="INFO">VALUE: [6.197200000000042e-05, 5.5263999999999314e-05, 5.240299999999948e-05, 5.531899999999812e-05, 5.343099999999962e-05, 5.527800000000235e-05, 5.145900000000023e-05, 5.529099999999898e-05, 5.145900000000023e-05, 5.237500000000034e-05, 5.348600000000189e-05, 5.240299999999948e-05, 5.533300000000116e-05, 5.432000000000006e-05, 5.145900000000023e-05, 5.431900000000059e-05, 4.955599999999921e-05, 5.430600000000049e-05, 5.238899999999991e-05, 5.336200000000124e-05, 4.952800000000007e-05, 5.530600000000149e-05, 5.431899999999712e-05, 5.240299999999948e-05, 5.433300000000016e-05, 5.5291999999998453e-05, 5.430600000000049e-05, 5.3443999999999714e-05, 5.051399999999803e-05, 5.6221999999998135e-05, 5.5263999999999314e-05, 5.045799999999975e-05, 5.43609999999993e-05, 5.530499999999855e-05, 5.5263999999999314e-05, 5.6249999999997274e-05, 5.431900000000059e-05, 5.238899999999991e-05, 5.6249999999997274e-05, 5.5277999999998884e-05, 5.241699999999905e-05, 5.041700000000052e-05, 5.147200000000032e-05, 4.95140000000005e-05, 5.238899999999991e-05, 5.6235999999997704e-05, 5.052800000000107e-05, 5.33479999999982e-05, 5.250000000000046e-05, 4.961100000000149e-05]</msg>
<status status="PASS" starttime="20201030 11:51:17.082" endtime="20201030 11:51:17.085"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.078" endtime="20201030 11:51:17.085"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:17.089" endtime="20201030 11:51:17.108"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.087" endtime="20201030 11:51:17.109"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.086" endtime="20201030 11:51:17.109"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.727" endtime="20201030 11:51:17.109"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.726" endtime="20201030 11:51:17.109"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.118" endtime="20201030 11:51:17.140"></status>
</kw>
<msg timestamp="20201030 11:51:17.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:17.117" endtime="20201030 11:51:17.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.143" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:17.141" endtime="20201030 11:51:17.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.144" endtime="20201030 11:51:17.145"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.114" endtime="20201030 11:51:17.146"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.112" endtime="20201030 11:51:17.146"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.153" endtime="20201030 11:51:17.439"></status>
</kw>
<msg timestamp="20201030 11:51:17.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023783403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023826222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:17.151" endtime="20201030 11:51:17.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023783403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023826222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:17.443" endtime="20201030 11:51:17.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.452" endtime="20201030 11:51:17.453"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.148" endtime="20201030 11:51:17.454"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.147" endtime="20201030 11:51:17.454"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:17.458" level="INFO">${RESULT} = [{'diff': 4.2818999999999496e-05}, {'diff': 5.5291999999998453e-05}, {'diff': 5.240299999999948e-05}, {'diff': 5.048599999999889e-05}, {'diff': 5.048600000000236e-05}, {'diff': 5.441699999999758e-05},...</msg>
<status status="PASS" starttime="20201030 11:51:17.455" endtime="20201030 11:51:17.458"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:17.462" level="INFO">${ACCURACY} = {'diff': [4.2818999999999496e-05, 5.5291999999998453e-05, 5.240299999999948e-05, 5.048599999999889e-05, 5.048600000000236e-05, 5.441699999999758e-05, 5.434699999999973e-05, 5.433300000000016e-05, 5.04...</msg>
<status status="PASS" starttime="20201030 11:51:17.459" endtime="20201030 11:51:17.463"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.467" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201030 11:51:17.466" endtime="20201030 11:51:17.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.469" level="INFO">VALUE: [4.2818999999999496e-05, 5.5291999999998453e-05, 5.240299999999948e-05, 5.048599999999889e-05, 5.048600000000236e-05, 5.441699999999758e-05, 5.434699999999973e-05, 5.433300000000016e-05, 5.0472999999998797e-05, 5.049999999999846e-05, 5.430600000000049e-05, 5.5263999999999314e-05, 5.237500000000034e-05, 5.432000000000006e-05, 5.1471999999996854e-05, 5.333299999999916e-05, 5.05140000000015e-05, 5.6235999999997704e-05, 5.241699999999905e-05, 5.337500000000134e-05, 5.6250000000000744e-05, 5.438900000000191e-05, 5.1457999999997284e-05, 4.951399999999703e-05, 5.238899999999991e-05, 5.144500000000066e-05, 4.957000000000225e-05, 5.052800000000107e-05, 5.050000000000193e-05, 5.049999999999846e-05, 5.052800000000107e-05, 5.241700000000252e-05, 5.5263999999999314e-05, 5.523699999999965e-05, 5.433300000000016e-05, 5.33609999999983e-05, 5.050000000000193e-05, 5.5291999999998453e-05, 5.24730000000008e-05, 5.24730000000008e-05, 5.330599999999949e-05, 5.433300000000016e-05, 5.337499999999787e-05, 5.050000000000193e-05, 5.2457999999998284e-05, 5.430500000000102e-05, 5.236100000000077e-05, 5.054200000000064e-05, 5.055599999999674e-05, 5.336100000000177e-05]</msg>
<status status="PASS" starttime="20201030 11:51:17.468" endtime="20201030 11:51:17.471"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.463" endtime="20201030 11:51:17.472"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:17.475" endtime="20201030 11:51:17.495"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.474" endtime="20201030 11:51:17.495"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.473" endtime="20201030 11:51:17.495"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.110" endtime="20201030 11:51:17.496"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.110" endtime="20201030 11:51:17.496"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.504" endtime="20201030 11:51:17.532"></status>
</kw>
<msg timestamp="20201030 11:51:17.533" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:17.503" endtime="20201030 11:51:17.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:17.534" endtime="20201030 11:51:17.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.537" endtime="20201030 11:51:17.539"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.500" endtime="20201030 11:51:17.539"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.498" endtime="20201030 11:51:17.540"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.547" endtime="20201030 11:51:17.832"></status>
</kw>
<msg timestamp="20201030 11:51:17.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024228806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024291792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:17.545" endtime="20201030 11:51:17.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024228806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024291792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:17.837" endtime="20201030 11:51:17.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.845" endtime="20201030 11:51:17.846"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.542" endtime="20201030 11:51:17.847"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.540" endtime="20201030 11:51:17.847"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:17.851" level="INFO">${RESULT} = [{'diff': 6.298600000000099e-05}, {'diff': 5.341700000000005e-05}, {'diff': 5.433399999999963e-05}, {'diff': 5.438899999999844e-05}, {'diff': 5.6250000000000744e-05}, {'diff': 5.145900000000023e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:51:17.848" endtime="20201030 11:51:17.852"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:17.856" level="INFO">${ACCURACY} = {'diff': [6.298600000000099e-05, 5.341700000000005e-05, 5.433399999999963e-05, 5.438899999999844e-05, 5.6250000000000744e-05, 5.145900000000023e-05, 5.156900000000131e-05, 5.241699999999905e-05, 4.961...</msg>
<status status="PASS" starttime="20201030 11:51:17.852" endtime="20201030 11:51:17.856"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.861" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201030 11:51:17.860" endtime="20201030 11:51:17.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.863" level="INFO">VALUE: [6.298600000000099e-05, 5.341700000000005e-05, 5.433399999999963e-05, 5.438899999999844e-05, 5.6250000000000744e-05, 5.145900000000023e-05, 5.156900000000131e-05, 5.241699999999905e-05, 4.961100000000149e-05, 5.05140000000015e-05, 5.149999999999946e-05, 5.2499999999996994e-05, 5.048600000000236e-05, 5.426400000000178e-05, 4.96530000000002e-05, 5.437499999999887e-05, 5.5387999999999965e-05, 5.2402000000000004e-05, 5.534699999999726e-05, 5.527800000000235e-05, 5.05409999999977e-05, 5.534700000000073e-05, 5.333299999999916e-05, 5.429200000000092e-05, 5.15279999999986e-05, 5.6221999999998135e-05, 5.048599999999889e-05, 5.154200000000164e-05, 5.6208000000002034e-05, 5.631899999999912e-05, 5.048599999999889e-05, 5.248600000000089e-05, 5.144400000000118e-05, 5.238899999999991e-05, 5.434699999999973e-05, 5.430500000000102e-05, 5.534700000000073e-05, 5.333299999999916e-05, 5.534700000000073e-05, 5.238899999999991e-05, 5.15270000000026e-05, 5.427800000000135e-05, 5.5222000000000604e-05, 5.536199999999977e-05, 5.143000000000161e-05, 5.4291999999997453e-05, 5.237500000000034e-05, 5.154200000000164e-05, 5.433300000000016e-05, 5.440300000000148e-05]</msg>
<status status="PASS" starttime="20201030 11:51:17.862" endtime="20201030 11:51:17.864"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.857" endtime="20201030 11:51:17.865"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:17.868" endtime="20201030 11:51:17.888"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.867" endtime="20201030 11:51:17.888"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.866" endtime="20201030 11:51:17.889"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.497" endtime="20201030 11:51:17.889"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.496" endtime="20201030 11:51:17.889"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.897" endtime="20201030 11:51:17.919"></status>
</kw>
<msg timestamp="20201030 11:51:17.920" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:17.896" endtime="20201030 11:51:17.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:17.921" endtime="20201030 11:51:17.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.923" endtime="20201030 11:51:17.925"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.893" endtime="20201030 11:51:17.925"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.891" endtime="20201030 11:51:17.926"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.932" endtime="20201030 11:51:18.218"></status>
</kw>
<msg timestamp="20201030 11:51:18.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022972681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023016556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:17.931" endtime="20201030 11:51:18.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:18.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022972681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023016556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:18.222" endtime="20201030 11:51:18.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:18.230" endtime="20201030 11:51:18.232"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.928" endtime="20201030 11:51:18.232"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.926" endtime="20201030 11:51:18.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:18.237" level="INFO">${RESULT} = [{'diff': 4.3875000000002246e-05}, {'diff': 5.151299999999956e-05}, {'diff': 5.5263999999999314e-05}, {'diff': 5.049999999999846e-05}, {'diff': 5.238899999999991e-05}, {'diff': 5.145800000000075e-05},...</msg>
<status status="PASS" starttime="20201030 11:51:18.234" endtime="20201030 11:51:18.237"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:18.241" level="INFO">${ACCURACY} = {'diff': [4.3875000000002246e-05, 5.151299999999956e-05, 5.5263999999999314e-05, 5.049999999999846e-05, 5.238899999999991e-05, 5.145800000000075e-05, 5.056900000000031e-05, 5.0473000000002266e-05, 5.1...</msg>
<status status="PASS" starttime="20201030 11:51:18.238" endtime="20201030 11:51:18.241"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:18.245" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201030 11:51:18.244" endtime="20201030 11:51:18.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:18.248" level="INFO">VALUE: [4.3875000000002246e-05, 5.151299999999956e-05, 5.5263999999999314e-05, 5.049999999999846e-05, 5.238899999999991e-05, 5.145800000000075e-05, 5.056900000000031e-05, 5.0473000000002266e-05, 5.141700000000152e-05, 5.144400000000118e-05, 5.237500000000034e-05, 5.048599999999889e-05, 5.326300000000131e-05, 5.2429999999999144e-05, 5.3430000000000144e-05, 5.6235999999997704e-05, 4.948600000000136e-05, 5.4263999999998314e-05, 5.33470000000022e-05, 5.043100000000009e-05, 5.5291999999998453e-05, 5.238899999999991e-05, 5.151399999999903e-05, 5.6291999999999454e-05, 5.238899999999991e-05, 5.048599999999889e-05, 5.334699999999873e-05, 5.333300000000263e-05, 5.05409999999977e-05, 5.629200000000292e-05, 4.95140000000005e-05, 5.041600000000104e-05, 5.143100000000109e-05, 5.148599999999989e-05, 5.15140000000025e-05, 5.4277999999997883e-05, 5.334800000000167e-05, 5.243100000000209e-05, 5.143000000000161e-05, 5.051399999999803e-05, 5.620899999999804e-05, 5.141700000000152e-05, 5.047199999999932e-05, 5.247200000000132e-05, 5.243099999999862e-05, 5.5249999999999744e-05, 5.141699999999805e-05, 5.240299999999948e-05, 5.049999999999846e-05, 5.529200000000192e-05]</msg>
<status status="PASS" starttime="20201030 11:51:18.246" endtime="20201030 11:51:18.248"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.242" endtime="20201030 11:51:18.249"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:18.253" endtime="20201030 11:51:18.272"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.251" endtime="20201030 11:51:18.273"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.250" endtime="20201030 11:51:18.273"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.890" endtime="20201030 11:51:18.273"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.889" endtime="20201030 11:51:18.273"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:18.282" endtime="20201030 11:51:18.306"></status>
</kw>
<msg timestamp="20201030 11:51:18.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:18.280" endtime="20201030 11:51:18.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:18.309" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:18.307" endtime="20201030 11:51:18.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:18.310" endtime="20201030 11:51:18.311"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.278" endtime="20201030 11:51:18.312"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.276" endtime="20201030 11:51:18.312"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:18.319" endtime="20201030 11:51:18.604"></status>
</kw>
<msg timestamp="20201030 11:51:18.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025434431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025495472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:18.317" endtime="20201030 11:51:18.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:18.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025434431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025495472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:18.608" endtime="20201030 11:51:18.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:18.616" endtime="20201030 11:51:18.618"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.315" endtime="20201030 11:51:18.619"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.313" endtime="20201030 11:51:18.619"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:18.623" level="INFO">${RESULT} = [{'diff': 6.104100000000126e-05}, {'diff': 5.433300000000016e-05}, {'diff': 5.431900000000059e-05}, {'diff': 5.237500000000034e-05}, {'diff': 5.055500000000074e-05}, {'diff': 5.5263999999999314e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:51:18.620" endtime="20201030 11:51:18.623"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:18.627" level="INFO">${ACCURACY} = {'diff': [6.104100000000126e-05, 5.433300000000016e-05, 5.431900000000059e-05, 5.237500000000034e-05, 5.055500000000074e-05, 5.5263999999999314e-05, 5.626300000000084e-05, 5.343100000000309e-05, 5.144...</msg>
<status status="PASS" starttime="20201030 11:51:18.624" endtime="20201030 11:51:18.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:18.631" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201030 11:51:18.630" endtime="20201030 11:51:18.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:18.634" level="INFO">VALUE: [6.104100000000126e-05, 5.433300000000016e-05, 5.431900000000059e-05, 5.237500000000034e-05, 5.055500000000074e-05, 5.5263999999999314e-05, 5.626300000000084e-05, 5.343100000000309e-05, 5.144499999999719e-05, 5.532000000000106e-05, 5.334699999999873e-05, 5.434800000000267e-05, 5.531899999999812e-05, 5.431900000000059e-05, 5.438899999999844e-05, 5.3387999999997965e-05, 5.054100000000117e-05, 5.147200000000032e-05, 5.626299999999737e-05, 5.430599999999702e-05, 5.244400000000218e-05, 5.348600000000189e-05, 5.33470000000022e-05, 5.437499999999887e-05, 5.529099999999898e-05, 5.344499999999919e-05, 5.533300000000116e-05, 5.140300000000195e-05, 5.536099999999683e-05, 5.333299999999916e-05, 5.345899999999876e-05, 5.433300000000016e-05, 5.5305999999998023e-05, 5.430500000000102e-05, 5.541699999999858e-05, 5.338900000000091e-05, 5.620900000000151e-05, 5.345899999999876e-05, 5.2415999999999574e-05, 4.961100000000149e-05, 5.623699999999718e-05, 5.056999999999978e-05, 5.141699999999805e-05, 4.961100000000149e-05, 5.434699999999973e-05, 5.2430000000002613e-05, 5.630499999999955e-05, 5.143100000000109e-05, 5.437499999999887e-05, 5.616699999999933e-05]</msg>
<status status="PASS" starttime="20201030 11:51:18.632" endtime="20201030 11:51:18.635"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.628" endtime="20201030 11:51:18.636"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:18.640" endtime="20201030 11:51:18.659"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.638" endtime="20201030 11:51:18.660"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.637" endtime="20201030 11:51:18.660"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.274" endtime="20201030 11:51:18.660"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.274" endtime="20201030 11:51:18.660"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:18.669" endtime="20201030 11:51:18.688"></status>
</kw>
<msg timestamp="20201030 11:51:18.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:18.668" endtime="20201030 11:51:18.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:18.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:18.690" endtime="20201030 11:51:18.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:18.692" endtime="20201030 11:51:18.694"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.665" endtime="20201030 11:51:18.694"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.663" endtime="20201030 11:51:18.695"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:18.701" endtime="20201030 11:51:18.987"></status>
</kw>
<msg timestamp="20201030 11:51:18.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020301944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02034575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:18.699" endtime="20201030 11:51:18.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:18.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020301944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02034575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:18.991" endtime="20201030 11:51:18.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:18.999" endtime="20201030 11:51:19.001"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.697" endtime="20201030 11:51:19.001"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.695" endtime="20201030 11:51:19.002"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:19.006" level="INFO">${RESULT} = [{'diff': 4.38060000000004e-05}, {'diff': 5.1443999999997714e-05}, {'diff': 5.526400000000278e-05}, {'diff': 5.5208000000001034e-05}, {'diff': 5.5263999999999314e-05}, {'diff': 5.144499999999719e-05},...</msg>
<status status="PASS" starttime="20201030 11:51:19.003" endtime="20201030 11:51:19.006"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:19.011" level="INFO">${ACCURACY} = {'diff': [4.38060000000004e-05, 5.1443999999997714e-05, 5.526400000000278e-05, 5.5208000000001034e-05, 5.5263999999999314e-05, 5.144499999999719e-05, 5.433300000000016e-05, 5.240299999999948e-05, 5.62...</msg>
<status status="PASS" starttime="20201030 11:51:19.007" endtime="20201030 11:51:19.011"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:19.015" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201030 11:51:19.014" endtime="20201030 11:51:19.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:19.018" level="INFO">VALUE: [4.38060000000004e-05, 5.1443999999997714e-05, 5.526400000000278e-05, 5.5208000000001034e-05, 5.5263999999999314e-05, 5.144499999999719e-05, 5.433300000000016e-05, 5.240299999999948e-05, 5.6277999999999884e-05, 5.43609999999993e-05, 5.331899999999959e-05, 5.5249999999999744e-05, 5.145800000000075e-05, 5.145900000000023e-05, 5.2402000000000004e-05, 5.43609999999993e-05, 5.148600000000336e-05, 5.5249999999999744e-05, 5.334699999999873e-05, 5.141700000000152e-05, 5.5249999999999744e-05, 5.429200000000092e-05, 5.143099999999762e-05, 5.055500000000074e-05, 5.333300000000263e-05, 5.238899999999991e-05, 5.525000000000321e-05, 5.6264000000000314e-05, 5.337500000000134e-05, 5.429200000000092e-05, 5.431899999999712e-05, 5.61809999999989e-05, 5.429200000000092e-05, 5.050000000000193e-05, 5.6221999999998135e-05, 5.144500000000066e-05, 5.331900000000306e-05, 5.050000000000193e-05, 5.055600000000021e-05, 5.432000000000006e-05, 5.2415999999999574e-05, 5.049999999999846e-05, 5.334699999999873e-05, 5.148599999999989e-05, 5.430500000000102e-05, 5.240299999999948e-05, 5.237500000000034e-05, 5.056900000000031e-05, 5.050000000000193e-05, 5.240299999999948e-05]</msg>
<status status="PASS" starttime="20201030 11:51:19.016" endtime="20201030 11:51:19.018"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.012" endtime="20201030 11:51:19.019"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:19.023" endtime="20201030 11:51:19.042"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.021" endtime="20201030 11:51:19.043"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.020" endtime="20201030 11:51:19.043"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.661" endtime="20201030 11:51:19.043"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.661" endtime="20201030 11:51:19.043"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:19.052" endtime="20201030 11:51:19.074"></status>
</kw>
<msg timestamp="20201030 11:51:19.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:19.050" endtime="20201030 11:51:19.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:19.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:19.076" endtime="20201030 11:51:19.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:19.078" endtime="20201030 11:51:19.080"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.048" endtime="20201030 11:51:19.080"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.046" endtime="20201030 11:51:19.080"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:19.087" endtime="20201030 11:51:19.376"></status>
</kw>
<msg timestamp="20201030 11:51:19.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024133514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024198319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:19.085" endtime="20201030 11:51:19.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:19.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024133514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024198319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:19.380" endtime="20201030 11:51:19.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:19.388" endtime="20201030 11:51:19.390"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.083" endtime="20201030 11:51:19.391"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.081" endtime="20201030 11:51:19.391"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:19.395" level="INFO">${RESULT} = [{'diff': 6.480500000000111e-05}, {'diff': 5.3416000000000574e-05}, {'diff': 5.5263999999999314e-05}, {'diff': 5.141700000000152e-05}, {'diff': 5.6235999999997704e-05}, {'diff': 5.530499999999855e-05}...</msg>
<status status="PASS" starttime="20201030 11:51:19.392" endtime="20201030 11:51:19.395"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:19.399" level="INFO">${ACCURACY} = {'diff': [6.480500000000111e-05, 5.3416000000000574e-05, 5.5263999999999314e-05, 5.141700000000152e-05, 5.6235999999997704e-05, 5.530499999999855e-05, 5.429200000000092e-05, 5.041700000000052e-05, 5.2...</msg>
<status status="PASS" starttime="20201030 11:51:19.396" endtime="20201030 11:51:19.399"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:19.403" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201030 11:51:19.402" endtime="20201030 11:51:19.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:19.406" level="INFO">VALUE: [6.480500000000111e-05, 5.3416000000000574e-05, 5.5263999999999314e-05, 5.141700000000152e-05, 5.6235999999997704e-05, 5.530499999999855e-05, 5.429200000000092e-05, 5.041700000000052e-05, 5.233300000000163e-05, 5.438900000000191e-05, 5.045899999999923e-05, 5.338900000000091e-05, 5.4415999999998105e-05, 5.048599999999889e-05, 5.049999999999846e-05, 5.440299999999801e-05, 5.047199999999932e-05, 5.050000000000193e-05, 5.15140000000025e-05, 5.33479999999982e-05, 5.052699999999813e-05, 5.245800000000175e-05, 5.336100000000177e-05, 5.147200000000032e-05, 5.633299999999869e-05, 5.2430000000002613e-05, 5.1471999999996854e-05, 4.956999999999878e-05, 5.141699999999805e-05, 5.054200000000064e-05, 5.333399999999863e-05, 5.619500000000194e-05, 5.341700000000005e-05, 5.330600000000296e-05, 5.33609999999983e-05, 5.1487000000002836e-05, 5.627700000000041e-05, 5.43609999999993e-05, 5.247200000000132e-05, 5.24730000000008e-05, 5.048599999999889e-05, 5.056900000000031e-05, 5.615299999999976e-05, 5.53610000000003e-05, 4.95409999999967e-05, 5.145800000000075e-05, 5.341700000000005e-05, 5.715300000000076e-05, 5.432000000000006e-05, 5.055600000000021e-05]</msg>
<status status="PASS" starttime="20201030 11:51:19.404" endtime="20201030 11:51:19.407"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.400" endtime="20201030 11:51:19.407"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:19.411" endtime="20201030 11:51:19.430"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.409" endtime="20201030 11:51:19.431"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.408" endtime="20201030 11:51:19.431"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.044" endtime="20201030 11:51:19.431"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.044" endtime="20201030 11:51:19.431"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:19.440" endtime="20201030 11:51:19.461"></status>
</kw>
<msg timestamp="20201030 11:51:19.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:19.438" endtime="20201030 11:51:19.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:19.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:19.462" endtime="20201030 11:51:19.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:19.465" endtime="20201030 11:51:19.466"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.436" endtime="20201030 11:51:19.467"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.434" endtime="20201030 11:51:19.467"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:19.474" endtime="20201030 11:51:19.759"></status>
</kw>
<msg timestamp="20201030 11:51:19.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022968556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023015236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:19.472" endtime="20201030 11:51:19.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:19.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022968556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023015236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:19.764" endtime="20201030 11:51:19.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:19.772" endtime="20201030 11:51:19.773"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.470" endtime="20201030 11:51:19.774"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.468" endtime="20201030 11:51:19.774"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:19.778" level="INFO">${RESULT} = [{'diff': 4.668000000000033e-05}, {'diff': 5.154100000000217e-05}, {'diff': 5.344500000000266e-05}, {'diff': 5.6208000000002034e-05}, {'diff': 5.336200000000124e-05}, {'diff': 5.530600000000149e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:51:19.775" endtime="20201030 11:51:19.778"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:19.782" level="INFO">${ACCURACY} = {'diff': [4.668000000000033e-05, 5.154100000000217e-05, 5.344500000000266e-05, 5.6208000000002034e-05, 5.336200000000124e-05, 5.530600000000149e-05, 5.15279999999986e-05, 5.047200000000279e-05, 5.2402...</msg>
<status status="PASS" starttime="20201030 11:51:19.779" endtime="20201030 11:51:19.783"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:19.787" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201030 11:51:19.786" endtime="20201030 11:51:19.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:19.789" level="INFO">VALUE: [4.668000000000033e-05, 5.154100000000217e-05, 5.344500000000266e-05, 5.6208000000002034e-05, 5.336200000000124e-05, 5.530600000000149e-05, 5.15279999999986e-05, 5.047200000000279e-05, 5.240299999999948e-05, 5.244500000000166e-05, 5.2443999999998714e-05, 5.236100000000077e-05, 5.051399999999803e-05, 4.959700000000192e-05, 5.623700000000065e-05, 5.531900000000159e-05, 5.431900000000059e-05, 5.244499999999819e-05, 5.629099999999998e-05, 5.529099999999898e-05, 5.3401999999997535e-05, 5.623700000000065e-05, 5.15140000000025e-05, 5.338899999999744e-05, 5.338900000000091e-05, 5.054199999999717e-05, 5.437499999999887e-05, 5.237500000000034e-05, 4.958300000000235e-05, 5.052800000000107e-05, 5.237500000000034e-05, 5.6236000000001174e-05, 5.051399999999803e-05, 4.955499999999974e-05, 5.2429999999999144e-05, 5.2443999999998714e-05, 5.33340000000021e-05, 4.95140000000005e-05, 5.055500000000074e-05, 5.147200000000032e-05, 5.052800000000107e-05, 5.2415999999999574e-05, 5.338899999999744e-05, 5.05270000000016e-05, 5.045799999999975e-05, 5.5305999999998023e-05, 5.530499999999855e-05, 5.429200000000092e-05, 5.051399999999803e-05, 5.244499999999819e-05]</msg>
<status status="PASS" starttime="20201030 11:51:19.788" endtime="20201030 11:51:19.791"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.783" endtime="20201030 11:51:19.791"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:19.795" endtime="20201030 11:51:19.814"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.794" endtime="20201030 11:51:19.815"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.792" endtime="20201030 11:51:19.815"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.432" endtime="20201030 11:51:19.816"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.432" endtime="20201030 11:51:19.816"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:19.824" endtime="20201030 11:51:19.845"></status>
</kw>
<msg timestamp="20201030 11:51:19.846" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:19.823" endtime="20201030 11:51:19.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:19.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:19.847" endtime="20201030 11:51:19.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:19.849" endtime="20201030 11:51:19.851"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.820" endtime="20201030 11:51:19.851"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.818" endtime="20201030 11:51:19.852"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:19.858" endtime="20201030 11:51:20.143"></status>
</kw>
<msg timestamp="20201030 11:51:20.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020330014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020368111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:19.856" endtime="20201030 11:51:20.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:20.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020330014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020368111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:20.147" endtime="20201030 11:51:20.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:20.155" endtime="20201030 11:51:20.157"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.854" endtime="20201030 11:51:20.158"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.852" endtime="20201030 11:51:20.158"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:20.162" level="INFO">${RESULT} = [{'diff': 3.8097000000000825e-05}, {'diff': 5.243099999999862e-05}, {'diff': 5.34869999999979e-05}, {'diff': 5.330500000000002e-05}, {'diff': 5.058299999999988e-05}, {'diff': 4.956899999999931e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:20.159" endtime="20201030 11:51:20.162"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:20.167" level="INFO">${ACCURACY} = {'diff': [3.8097000000000825e-05, 5.243099999999862e-05, 5.34869999999979e-05, 5.330500000000002e-05, 5.058299999999988e-05, 4.956899999999931e-05, 5.055500000000074e-05, 5.4387999999998965e-05, 5.623...</msg>
<status status="PASS" starttime="20201030 11:51:20.163" endtime="20201030 11:51:20.167"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:20.171" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201030 11:51:20.170" endtime="20201030 11:51:20.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:20.174" level="INFO">VALUE: [3.8097000000000825e-05, 5.243099999999862e-05, 5.34869999999979e-05, 5.330500000000002e-05, 5.058299999999988e-05, 4.956899999999931e-05, 5.055500000000074e-05, 5.4387999999998965e-05, 5.6236000000001174e-05, 5.533299999999769e-05, 5.337500000000134e-05, 5.4277999999997883e-05, 5.343099999999962e-05, 5.631899999999912e-05, 5.145900000000023e-05, 5.2457999999998284e-05, 5.6305999999999023e-05, 5.529100000000245e-05, 5.33609999999983e-05, 5.056999999999978e-05, 5.530600000000149e-05, 5.250000000000046e-05, 5.530600000000149e-05, 4.950000000000093e-05, 5.427699999999841e-05, 5.2471999999997854e-05, 5.527699999999941e-05, 5.238899999999991e-05, 5.5263999999999314e-05, 5.337499999999787e-05, 5.056999999999978e-05, 5.433399999999963e-05, 5.2485999999997424e-05, 5.5263999999999314e-05, 5.144500000000066e-05, 5.052800000000107e-05, 5.048599999999889e-05, 5.53610000000003e-05, 5.6236000000001174e-05, 5.2457999999998284e-05, 5.622300000000108e-05, 5.437500000000234e-05, 5.145800000000075e-05, 5.056999999999978e-05, 5.050000000000193e-05, 5.140299999999848e-05, 5.438900000000191e-05, 5.155599999999774e-05, 5.045799999999975e-05, 5.43609999999993e-05]</msg>
<status status="PASS" starttime="20201030 11:51:20.172" endtime="20201030 11:51:20.175"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.168" endtime="20201030 11:51:20.175"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:20.179" endtime="20201030 11:51:20.198"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.177" endtime="20201030 11:51:20.199"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.176" endtime="20201030 11:51:20.199"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.817" endtime="20201030 11:51:20.199"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.816" endtime="20201030 11:51:20.199"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:20.208" endtime="20201030 11:51:20.230"></status>
</kw>
<msg timestamp="20201030 11:51:20.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:20.206" endtime="20201030 11:51:20.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:20.233" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:20.232" endtime="20201030 11:51:20.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:20.234" endtime="20201030 11:51:20.236"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.204" endtime="20201030 11:51:20.236"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.202" endtime="20201030 11:51:20.237"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:20.243" endtime="20201030 11:51:20.529"></status>
</kw>
<msg timestamp="20201030 11:51:20.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023640431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023701431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:20.242" endtime="20201030 11:51:20.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:20.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023640431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023701431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:20.534" endtime="20201030 11:51:20.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:20.542" endtime="20201030 11:51:20.544"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.239" endtime="20201030 11:51:20.544"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.237" endtime="20201030 11:51:20.545"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:20.549" level="INFO">${RESULT} = [{'diff': 6.0999999999998555e-05}, {'diff': 5.054100000000117e-05}, {'diff': 5.045799999999975e-05}, {'diff': 5.234699999999773e-05}, {'diff': 5.33340000000021e-05}, {'diff': 5.05140000000015e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:20.545" endtime="20201030 11:51:20.549"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:20.553" level="INFO">${ACCURACY} = {'diff': [6.0999999999998555e-05, 5.054100000000117e-05, 5.045799999999975e-05, 5.234699999999773e-05, 5.33340000000021e-05, 5.05140000000015e-05, 5.527699999999941e-05, 5.055500000000074e-05, 5.42910...</msg>
<status status="PASS" starttime="20201030 11:51:20.549" endtime="20201030 11:51:20.553"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:20.557" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201030 11:51:20.556" endtime="20201030 11:51:20.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:20.559" level="INFO">VALUE: [6.0999999999998555e-05, 5.054100000000117e-05, 5.045799999999975e-05, 5.234699999999773e-05, 5.33340000000021e-05, 5.05140000000015e-05, 5.527699999999941e-05, 5.055500000000074e-05, 5.429100000000145e-05, 5.144500000000066e-05, 5.429100000000145e-05, 5.141700000000152e-05, 5.333399999999863e-05, 5.341700000000005e-05, 5.140299999999848e-05, 5.532000000000106e-05, 5.433300000000016e-05, 5.145900000000023e-05, 5.6291999999999454e-05, 5.240299999999948e-05, 4.95140000000005e-05, 5.529200000000192e-05, 5.6305999999999023e-05, 5.4277999999997883e-05, 5.051399999999803e-05, 5.241699999999905e-05, 5.052800000000107e-05, 5.6222000000001604e-05, 5.240299999999948e-05, 5.530499999999855e-05, 5.244400000000218e-05, 5.430600000000049e-05, 5.337499999999787e-05, 5.054100000000117e-05, 5.233299999999816e-05, 5.431900000000059e-05, 5.530600000000149e-05, 5.437500000000234e-05, 5.615299999999976e-05, 5.43609999999993e-05, 5.527800000000235e-05, 5.5222000000000604e-05, 5.143000000000161e-05, 5.244500000000166e-05, 5.53480000000002e-05, 5.048600000000236e-05, 5.526400000000278e-05, 5.047199999999932e-05, 5.6264000000000314e-05, 5.237499999999687e-05]</msg>
<status status="PASS" starttime="20201030 11:51:20.558" endtime="20201030 11:51:20.560"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.553" endtime="20201030 11:51:20.561"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:20.564" endtime="20201030 11:51:20.584"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.563" endtime="20201030 11:51:20.585"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.562" endtime="20201030 11:51:20.585"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.200" endtime="20201030 11:51:20.585"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.200" endtime="20201030 11:51:20.585"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:20.595" endtime="20201030 11:51:20.617"></status>
</kw>
<msg timestamp="20201030 11:51:20.617" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:20.593" endtime="20201030 11:51:20.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:20.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:20.618" endtime="20201030 11:51:20.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:20.621" endtime="20201030 11:51:20.622"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.590" endtime="20201030 11:51:20.623"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.588" endtime="20201030 11:51:20.623"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:20.630" endtime="20201030 11:51:20.916"></status>
</kw>
<msg timestamp="20201030 11:51:20.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024773694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024838514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:20.628" endtime="20201030 11:51:20.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:20.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024773694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024838514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:20.920" endtime="20201030 11:51:20.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:20.928" endtime="20201030 11:51:20.930"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.626" endtime="20201030 11:51:20.930"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.624" endtime="20201030 11:51:20.931"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:20.935" level="INFO">${RESULT} = [{'diff': 6.482000000000016e-05}, {'diff': 5.058399999999935e-05}, {'diff': 5.143099999999762e-05}, {'diff': 5.5263999999999314e-05}, {'diff': 5.33609999999983e-05}, {'diff': 5.3443999999999714e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:51:20.932" endtime="20201030 11:51:20.935"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:20.939" level="INFO">${ACCURACY} = {'diff': [6.482000000000016e-05, 5.058399999999935e-05, 5.143099999999762e-05, 5.5263999999999314e-05, 5.33609999999983e-05, 5.3443999999999714e-05, 5.238899999999991e-05, 5.15279999999986e-05, 5.0485...</msg>
<status status="PASS" starttime="20201030 11:51:20.936" endtime="20201030 11:51:20.939"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:20.943" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201030 11:51:20.942" endtime="20201030 11:51:20.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:20.946" level="INFO">VALUE: [6.482000000000016e-05, 5.058399999999935e-05, 5.143099999999762e-05, 5.5263999999999314e-05, 5.33609999999983e-05, 5.3443999999999714e-05, 5.238899999999991e-05, 5.15279999999986e-05, 5.048599999999889e-05, 5.145900000000023e-05, 5.537499999999987e-05, 5.336199999999777e-05, 5.348600000000189e-05, 5.048600000000236e-05, 5.154100000000217e-05, 5.050000000000193e-05, 5.427699999999841e-05, 5.343099999999962e-05, 5.5249999999999744e-05, 5.055500000000074e-05, 5.143100000000109e-05, 5.53610000000003e-05, 5.5263999999999314e-05, 5.143100000000109e-05, 5.250000000000046e-05, 5.143100000000109e-05, 5.148599999999989e-05, 5.056900000000031e-05, 5.6194000000002464e-05, 5.4388000000002434e-05, 5.044400000000018e-05, 5.048599999999889e-05, 5.3457999999999284e-05, 5.620900000000151e-05, 5.534700000000073e-05, 5.136199999999924e-05, 5.433300000000016e-05, 5.616699999999933e-05, 5.15279999999986e-05, 5.238899999999991e-05, 5.6277999999999884e-05, 5.533300000000116e-05, 5.048599999999889e-05, 5.529099999999898e-05, 5.5263999999999314e-05, 5.048600000000236e-05, 5.247200000000132e-05, 5.527699999999941e-05, 5.244400000000218e-05, 5.6235999999997704e-05]</msg>
<status status="PASS" starttime="20201030 11:51:20.945" endtime="20201030 11:51:20.948"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.940" endtime="20201030 11:51:20.948"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:20.952" endtime="20201030 11:51:20.971"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.950" endtime="20201030 11:51:20.972"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.949" endtime="20201030 11:51:20.972"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.586" endtime="20201030 11:51:20.972"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.586" endtime="20201030 11:51:20.973"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:20.981" endtime="20201030 11:51:21.004"></status>
</kw>
<msg timestamp="20201030 11:51:21.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:20.979" endtime="20201030 11:51:21.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:21.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:21.005" endtime="20201030 11:51:21.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:21.007" endtime="20201030 11:51:21.009"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.977" endtime="20201030 11:51:21.010"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.975" endtime="20201030 11:51:21.010"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:21.016" endtime="20201030 11:51:21.303"></status>
</kw>
<msg timestamp="20201030 11:51:21.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024139681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024204611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:21.015" endtime="20201030 11:51:21.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:21.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024139681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024204611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:21.307" endtime="20201030 11:51:21.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:21.315" endtime="20201030 11:51:21.317"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.012" endtime="20201030 11:51:21.317"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.011" endtime="20201030 11:51:21.318"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:21.322" level="INFO">${RESULT} = [{'diff': 6.493000000000124e-05}, {'diff': 5.237500000000034e-05}, {'diff': 5.427699999999841e-05}, {'diff': 5.440300000000148e-05}, {'diff': 5.238899999999991e-05}, {'diff': 5.6291999999999454e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:51:21.319" endtime="20201030 11:51:21.322"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:21.327" level="INFO">${ACCURACY} = {'diff': [6.493000000000124e-05, 5.237500000000034e-05, 5.427699999999841e-05, 5.440300000000148e-05, 5.238899999999991e-05, 5.6291999999999454e-05, 5.34730000000018e-05, 5.430600000000049e-05, 5.6222...</msg>
<status status="PASS" starttime="20201030 11:51:21.323" endtime="20201030 11:51:21.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:21.331" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201030 11:51:21.330" endtime="20201030 11:51:21.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:21.334" level="INFO">VALUE: [6.493000000000124e-05, 5.237500000000034e-05, 5.427699999999841e-05, 5.440300000000148e-05, 5.238899999999991e-05, 5.6291999999999454e-05, 5.34730000000018e-05, 5.430600000000049e-05, 5.6222000000001604e-05, 5.058299999999988e-05, 5.048599999999889e-05, 5.143100000000109e-05, 5.15270000000026e-05, 5.143100000000109e-05, 5.523699999999965e-05, 5.240299999999948e-05, 5.154200000000164e-05, 5.049999999999846e-05, 5.333299999999916e-05, 5.344499999999919e-05, 5.432000000000006e-05, 5.247200000000132e-05, 5.6235999999997704e-05, 5.047199999999932e-05, 5.632000000000206e-05, 5.430600000000049e-05, 5.622300000000108e-05, 5.25279999999996e-05, 5.6305999999999023e-05, 5.4249999999998744e-05, 5.431900000000059e-05, 5.537499999999987e-05, 5.238899999999991e-05, 5.5249999999999744e-05, 5.537499999999987e-05, 5.245899999999776e-05, 5.251400000000003e-05, 4.951399999999703e-05, 5.240299999999948e-05, 5.152800000000207e-05, 5.145800000000075e-05, 5.336100000000177e-05, 5.155599999999774e-05, 5.334699999999873e-05, 5.1429999999998144e-05, 5.6236000000001174e-05, 5.058299999999988e-05, 5.33470000000022e-05, 5.5263999999999314e-05, 5.633300000000216e-05]</msg>
<status status="PASS" starttime="20201030 11:51:21.332" endtime="20201030 11:51:21.334"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.328" endtime="20201030 11:51:21.335"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:21.339" endtime="20201030 11:51:21.358"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.337" endtime="20201030 11:51:21.359"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.336" endtime="20201030 11:51:21.359"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.973" endtime="20201030 11:51:21.359"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.973" endtime="20201030 11:51:21.359"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:21.368" endtime="20201030 11:51:21.390"></status>
</kw>
<msg timestamp="20201030 11:51:21.391" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:21.366" endtime="20201030 11:51:21.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:21.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:21.392" endtime="20201030 11:51:21.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:21.394" endtime="20201030 11:51:21.396"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.364" endtime="20201030 11:51:21.396"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.362" endtime="20201030 11:51:21.397"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:21.403" endtime="20201030 11:51:21.690"></status>
</kw>
<msg timestamp="20201030 11:51:21.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024256833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024303514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:21.402" endtime="20201030 11:51:21.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:21.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024256833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024303514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:21.695" endtime="20201030 11:51:21.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:21.703" endtime="20201030 11:51:21.705"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.399" endtime="20201030 11:51:21.705"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.397" endtime="20201030 11:51:21.706"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:21.710" level="INFO">${RESULT} = [{'diff': 4.6680999999999806e-05}, {'diff': 5.430600000000049e-05}, {'diff': 5.430500000000102e-05}, {'diff': 5.148599999999989e-05}, {'diff': 5.056999999999978e-05}, {'diff': 5.043000000000061e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:51:21.706" endtime="20201030 11:51:21.710"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:21.714" level="INFO">${ACCURACY} = {'diff': [4.6680999999999806e-05, 5.430600000000049e-05, 5.430500000000102e-05, 5.148599999999989e-05, 5.056999999999978e-05, 5.043000000000061e-05, 5.33609999999983e-05, 5.3430000000000144e-05, 5.243...</msg>
<status status="PASS" starttime="20201030 11:51:21.710" endtime="20201030 11:51:21.714"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:21.718" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201030 11:51:21.717" endtime="20201030 11:51:21.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:21.720" level="INFO">VALUE: [4.6680999999999806e-05, 5.430600000000049e-05, 5.430500000000102e-05, 5.148599999999989e-05, 5.056999999999978e-05, 5.043000000000061e-05, 5.33609999999983e-05, 5.3430000000000144e-05, 5.243099999999862e-05, 5.5249999999999744e-05, 5.237500000000034e-05, 5.236100000000077e-05, 5.2429999999999144e-05, 5.623700000000065e-05, 5.530500000000202e-05, 5.438899999999844e-05, 5.243099999999862e-05, 5.523699999999965e-05, 5.430499999999755e-05, 5.045800000000322e-05, 5.3443999999999714e-05, 5.6222000000001604e-05, 5.6222000000001604e-05, 5.333299999999916e-05, 4.959699999999845e-05, 5.150000000000293e-05, 5.331899999999959e-05, 5.5249999999999744e-05, 5.433300000000016e-05, 5.238899999999991e-05, 5.145800000000075e-05, 5.041699999999705e-05, 5.5249999999999744e-05, 5.047200000000279e-05, 5.151399999999903e-05, 5.531999999999759e-05, 5.333299999999916e-05, 5.241699999999905e-05, 5.61809999999989e-05, 5.534700000000073e-05, 5.244499999999819e-05, 5.3429999999996675e-05, 5.33609999999983e-05, 5.240299999999948e-05, 5.138900000000238e-05, 5.6277999999999884e-05, 5.2429999999999144e-05, 4.95140000000005e-05, 5.141699999999805e-05, 5.1416000000002043e-05]</msg>
<status status="PASS" starttime="20201030 11:51:21.719" endtime="20201030 11:51:21.725"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.715" endtime="20201030 11:51:21.726"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:21.730" endtime="20201030 11:51:21.749"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.728" endtime="20201030 11:51:21.750"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.727" endtime="20201030 11:51:21.750"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.360" endtime="20201030 11:51:21.750"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.360" endtime="20201030 11:51:21.750"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:21.759" endtime="20201030 11:51:21.783"></status>
</kw>
<msg timestamp="20201030 11:51:21.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:21.757" endtime="20201030 11:51:21.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:21.786" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:21.784" endtime="20201030 11:51:21.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:21.787" endtime="20201030 11:51:21.788"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.755" endtime="20201030 11:51:21.789"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.753" endtime="20201030 11:51:21.789"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:21.796" endtime="20201030 11:51:22.083"></status>
</kw>
<msg timestamp="20201030 11:51:22.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024988, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025042361, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:51:21.794" endtime="20201030 11:51:22.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:22.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024988, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025042361, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:51:22.087" endtime="20201030 11:51:22.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:22.096" endtime="20201030 11:51:22.097"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.792" endtime="20201030 11:51:22.098"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.790" endtime="20201030 11:51:22.098"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:22.102" level="INFO">${RESULT} = [{'diff': 5.43609999999993e-05}, {'diff': 5.526400000000278e-05}, {'diff': 5.437500000000234e-05}, {'diff': 5.333300000000263e-05}, {'diff': 5.145800000000075e-05}, {'diff': 5.1401999999999004e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:22.099" endtime="20201030 11:51:22.102"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:22.106" level="INFO">${ACCURACY} = {'diff': [5.43609999999993e-05, 5.526400000000278e-05, 5.437500000000234e-05, 5.333300000000263e-05, 5.145800000000075e-05, 5.1401999999999004e-05, 5.233300000000163e-05, 5.055500000000074e-05, 5.6249...</msg>
<status status="PASS" starttime="20201030 11:51:22.103" endtime="20201030 11:51:22.106"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:22.111" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201030 11:51:22.110" endtime="20201030 11:51:22.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:22.113" level="INFO">VALUE: [5.43609999999993e-05, 5.526400000000278e-05, 5.437500000000234e-05, 5.333300000000263e-05, 5.145800000000075e-05, 5.1401999999999004e-05, 5.233300000000163e-05, 5.055500000000074e-05, 5.6249999999997274e-05, 5.627700000000041e-05, 5.5221999999997134e-05, 5.050000000000193e-05, 5.054199999999717e-05, 5.1415999999998574e-05, 5.6235999999997704e-05, 5.536099999999683e-05, 5.238899999999991e-05, 5.051399999999803e-05, 5.436199999999877e-05, 5.151399999999903e-05, 5.344499999999919e-05, 5.426400000000178e-05, 5.2443999999998714e-05, 5.3430000000000144e-05, 5.5263999999999314e-05, 5.054200000000064e-05, 5.437499999999887e-05, 5.145900000000023e-05, 5.337500000000134e-05, 5.147200000000032e-05, 5.2443999999998714e-05, 5.629200000000292e-05, 5.622300000000108e-05, 5.2429999999999144e-05, 5.15140000000025e-05, 5.519500000000094e-05, 5.241699999999905e-05, 4.956900000000278e-05, 5.144500000000066e-05, 5.1457999999997284e-05, 5.151399999999903e-05, 5.144500000000066e-05, 5.6236000000001174e-05, 5.148599999999989e-05, 5.1457999999997284e-05, 5.3415999999997105e-05, 5.434699999999973e-05, 5.054200000000064e-05, 5.715299999999729e-05, 5.051399999999803e-05]</msg>
<status status="PASS" starttime="20201030 11:51:22.112" endtime="20201030 11:51:22.115"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.107" endtime="20201030 11:51:22.115"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:22.119" endtime="20201030 11:51:22.138"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.117" endtime="20201030 11:51:22.139"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.116" endtime="20201030 11:51:22.139"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.751" endtime="20201030 11:51:22.139"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.751" endtime="20201030 11:51:22.140"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:22.148" endtime="20201030 11:51:22.170"></status>
</kw>
<msg timestamp="20201030 11:51:22.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:22.147" endtime="20201030 11:51:22.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:22.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:22.171" endtime="20201030 11:51:22.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:22.174" endtime="20201030 11:51:22.175"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.144" endtime="20201030 11:51:22.176"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.142" endtime="20201030 11:51:22.176"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:22.183" endtime="20201030 11:51:22.469"></status>
</kw>
<msg timestamp="20201030 11:51:22.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022628083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022669014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:22.181" endtime="20201030 11:51:22.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:22.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022628083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022669014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:22.473" endtime="20201030 11:51:22.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:22.481" endtime="20201030 11:51:22.483"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.178" endtime="20201030 11:51:22.483"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.177" endtime="20201030 11:51:22.484"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:22.488" level="INFO">${RESULT} = [{'diff': 4.0931000000000994e-05}, {'diff': 5.33479999999982e-05}, {'diff': 5.2415999999999574e-05}, {'diff': 5.5249999999999744e-05}, {'diff': 5.048599999999889e-05}, {'diff': 5.622300000000108e-05},...</msg>
<status status="PASS" starttime="20201030 11:51:22.484" endtime="20201030 11:51:22.488"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:22.493" level="INFO">${ACCURACY} = {'diff': [4.0931000000000994e-05, 5.33479999999982e-05, 5.2415999999999574e-05, 5.5249999999999744e-05, 5.048599999999889e-05, 5.622300000000108e-05, 5.147200000000032e-05, 5.631899999999912e-05, 5.43...</msg>
<status status="PASS" starttime="20201030 11:51:22.489" endtime="20201030 11:51:22.493"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:22.497" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201030 11:51:22.496" endtime="20201030 11:51:22.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:22.500" level="INFO">VALUE: [4.0931000000000994e-05, 5.33479999999982e-05, 5.2415999999999574e-05, 5.5249999999999744e-05, 5.048599999999889e-05, 5.622300000000108e-05, 5.147200000000032e-05, 5.631899999999912e-05, 5.430600000000049e-05, 5.433300000000016e-05, 5.336100000000177e-05, 5.237500000000034e-05, 5.6236000000001174e-05, 5.334699999999873e-05, 5.0473000000002266e-05, 5.058299999999988e-05, 5.237500000000034e-05, 5.334699999999873e-05, 5.059699999999945e-05, 5.6207999999998565e-05, 5.5249999999999744e-05, 5.136099999999977e-05, 5.059700000000292e-05, 5.143099999999762e-05, 5.241699999999905e-05, 5.055500000000074e-05, 5.5263999999999314e-05, 5.427699999999841e-05, 5.144400000000118e-05, 5.2402000000000004e-05, 5.241699999999905e-05, 5.241700000000252e-05, 5.238899999999991e-05, 5.33340000000021e-05, 5.048599999999889e-05, 5.333299999999916e-05, 5.048599999999889e-05, 5.047200000000279e-05, 5.336100000000177e-05, 5.4415999999998105e-05, 5.237500000000034e-05, 5.619500000000194e-05, 5.5263999999999314e-05, 5.433300000000016e-05, 5.1443999999997714e-05, 5.6250000000000744e-05, 5.533400000000063e-05, 5.430499999999755e-05, 5.5236000000000174e-05, 5.713899999999772e-05]</msg>
<status status="PASS" starttime="20201030 11:51:22.498" endtime="20201030 11:51:22.500"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.494" endtime="20201030 11:51:22.501"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:22.505" endtime="20201030 11:51:22.524"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.503" endtime="20201030 11:51:22.525"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.502" endtime="20201030 11:51:22.525"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.140" endtime="20201030 11:51:22.525"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.140" endtime="20201030 11:51:22.525"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:22.534" endtime="20201030 11:51:22.556"></status>
</kw>
<msg timestamp="20201030 11:51:22.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:22.532" endtime="20201030 11:51:22.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:22.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:22.558" endtime="20201030 11:51:22.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:22.560" endtime="20201030 11:51:22.562"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.530" endtime="20201030 11:51:22.562"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.528" endtime="20201030 11:51:22.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:22.569" endtime="20201030 11:51:22.858"></status>
</kw>
<msg timestamp="20201030 11:51:22.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023688458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023743861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:22.568" endtime="20201030 11:51:22.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:22.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023688458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023743861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:22.862" endtime="20201030 11:51:22.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:22.870" endtime="20201030 11:51:22.872"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.565" endtime="20201030 11:51:22.873"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.563" endtime="20201030 11:51:22.873"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:22.877" level="INFO">${RESULT} = [{'diff': 5.540300000000248e-05}, {'diff': 5.336100000000177e-05}, {'diff': 5.6222000000001604e-05}, {'diff': 5.429200000000092e-05}, {'diff': 4.943099999999909e-05}, {'diff': 5.6305999999999023e-05},...</msg>
<status status="PASS" starttime="20201030 11:51:22.874" endtime="20201030 11:51:22.877"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:22.881" level="INFO">${ACCURACY} = {'diff': [5.540300000000248e-05, 5.336100000000177e-05, 5.6222000000001604e-05, 5.429200000000092e-05, 4.943099999999909e-05, 5.6305999999999023e-05, 5.333299999999916e-05, 5.620900000000151e-05, 5.24...</msg>
<status status="PASS" starttime="20201030 11:51:22.878" endtime="20201030 11:51:22.881"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:22.885" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201030 11:51:22.884" endtime="20201030 11:51:22.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:22.888" level="INFO">VALUE: [5.540300000000248e-05, 5.336100000000177e-05, 5.6222000000001604e-05, 5.429200000000092e-05, 4.943099999999909e-05, 5.6305999999999023e-05, 5.333299999999916e-05, 5.620900000000151e-05, 5.240299999999948e-05, 5.347200000000232e-05, 5.1429999999998144e-05, 5.048600000000236e-05, 5.237500000000034e-05, 4.95140000000005e-05, 5.537499999999987e-05, 5.240299999999948e-05, 5.05270000000016e-05, 5.629099999999998e-05, 5.158300000000088e-05, 5.334800000000167e-05, 5.143100000000109e-05, 5.6264000000000314e-05, 5.5277999999998884e-05, 5.431900000000059e-05, 5.237500000000034e-05, 5.15279999999986e-05, 5.433399999999963e-05, 5.049999999999846e-05, 5.5263999999999314e-05, 5.333299999999916e-05, 5.534699999999726e-05, 5.247200000000132e-05, 5.240299999999948e-05, 5.5263999999999314e-05, 5.051399999999803e-05, 5.156900000000131e-05, 5.237500000000034e-05, 5.5263999999999314e-05, 5.431900000000059e-05, 5.527699999999941e-05, 5.047199999999932e-05, 5.05140000000015e-05, 5.633300000000216e-05, 5.33609999999983e-05, 4.952800000000007e-05, 5.337499999999787e-05, 5.430600000000049e-05, 5.333299999999916e-05, 5.633399999999816e-05, 5.045799999999975e-05]</msg>
<status status="PASS" starttime="20201030 11:51:22.886" endtime="20201030 11:51:22.889"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.882" endtime="20201030 11:51:22.889"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:22.893" endtime="20201030 11:51:22.912"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.891" endtime="20201030 11:51:22.913"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.890" endtime="20201030 11:51:22.913"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.526" endtime="20201030 11:51:22.913"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.526" endtime="20201030 11:51:22.913"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:22.922" endtime="20201030 11:51:22.948"></status>
</kw>
<msg timestamp="20201030 11:51:22.949" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:22.920" endtime="20201030 11:51:22.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:22.951" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:22.950" endtime="20201030 11:51:22.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:22.952" endtime="20201030 11:51:22.954"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.918" endtime="20201030 11:51:22.954"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.916" endtime="20201030 11:51:22.955"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:22.961" endtime="20201030 11:51:23.247"></status>
</kw>
<msg timestamp="20201030 11:51:23.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022446875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022500361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:22.959" endtime="20201030 11:51:23.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:23.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022446875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022500361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:23.252" endtime="20201030 11:51:23.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:23.260" endtime="20201030 11:51:23.261"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.957" endtime="20201030 11:51:23.262"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.955" endtime="20201030 11:51:23.262"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:23.266" level="INFO">${RESULT} = [{'diff': 5.3485999999998424e-05}, {'diff': 5.343099999999962e-05}, {'diff': 5.6250000000000744e-05}, {'diff': 5.440300000000148e-05}, {'diff': 5.433300000000016e-05}, {'diff': 5.332000000000253e-05},...</msg>
<status status="PASS" starttime="20201030 11:51:23.263" endtime="20201030 11:51:23.267"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:23.270" level="INFO">${ACCURACY} = {'diff': [5.3485999999998424e-05, 5.343099999999962e-05, 5.6250000000000744e-05, 5.440300000000148e-05, 5.433300000000016e-05, 5.332000000000253e-05, 5.33479999999982e-05, 5.049999999999846e-05, 5.247...</msg>
<status status="PASS" starttime="20201030 11:51:23.267" endtime="20201030 11:51:23.271"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:23.275" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201030 11:51:23.274" endtime="20201030 11:51:23.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:23.277" level="INFO">VALUE: [5.3485999999998424e-05, 5.343099999999962e-05, 5.6250000000000744e-05, 5.440300000000148e-05, 5.433300000000016e-05, 5.332000000000253e-05, 5.33479999999982e-05, 5.049999999999846e-05, 5.2471999999997854e-05, 5.049999999999846e-05, 5.145800000000075e-05, 5.4458000000000284e-05, 5.6222000000001604e-05, 5.048599999999889e-05, 5.33609999999983e-05, 5.154200000000164e-05, 5.431899999999712e-05, 5.158400000000035e-05, 5.145800000000075e-05, 5.440300000000148e-05, 5.432000000000006e-05, 5.6236000000001174e-05, 5.154199999999817e-05, 5.6264000000000314e-05, 5.432000000000006e-05, 5.152800000000207e-05, 5.6221999999998135e-05, 5.529099999999898e-05, 5.3485999999998424e-05, 5.048599999999889e-05, 5.240299999999948e-05, 5.5236000000000174e-05, 5.149999999999946e-05, 5.058299999999988e-05, 5.334699999999873e-05, 5.333299999999916e-05, 5.537499999999987e-05, 5.525000000000321e-05, 5.047200000000279e-05, 5.141700000000152e-05, 5.051399999999803e-05, 5.255499999999927e-05, 5.147200000000032e-05, 5.53610000000003e-05, 5.43609999999993e-05, 5.059699999999945e-05, 5.631900000000259e-05, 5.5263999999999314e-05, 5.433300000000016e-05, 5.533300000000116e-05]</msg>
<status status="PASS" starttime="20201030 11:51:23.276" endtime="20201030 11:51:23.279"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.271" endtime="20201030 11:51:23.279"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:23.283" endtime="20201030 11:51:23.303"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.282" endtime="20201030 11:51:23.303"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.280" endtime="20201030 11:51:23.303"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.914" endtime="20201030 11:51:23.304"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.914" endtime="20201030 11:51:23.304"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:23.312" endtime="20201030 11:51:23.335"></status>
</kw>
<msg timestamp="20201030 11:51:23.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:23.311" endtime="20201030 11:51:23.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:23.338" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:23.337" endtime="20201030 11:51:23.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:23.339" endtime="20201030 11:51:23.341"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.308" endtime="20201030 11:51:23.341"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.306" endtime="20201030 11:51:23.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:23.348" endtime="20201030 11:51:23.635"></status>
</kw>
<msg timestamp="20201030 11:51:23.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02387575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023971125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:23.347" endtime="20201030 11:51:23.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:23.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02387575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023971125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:23.639" endtime="20201030 11:51:23.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:23.647" endtime="20201030 11:51:23.649"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.344" endtime="20201030 11:51:23.650"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.343" endtime="20201030 11:51:23.650"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:23.654" level="INFO">${RESULT} = [{'diff': 9.537499999999824e-05}, {'diff': 8.294500000000093e-05}, {'diff': 8.206899999999712e-05}, {'diff': 8.391699999999933e-05}, {'diff': 8.104199999999992e-05}, {'diff': 8.198599999999917e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:23.651" endtime="20201030 11:51:23.654"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:23.659" level="INFO">${ACCURACY} = {'diff': [9.537499999999824e-05, 8.294500000000093e-05, 8.206899999999712e-05, 8.391699999999933e-05, 8.104199999999992e-05, 8.198599999999917e-05, 8.206900000000059e-05, 8.67920000000022e-05, 8.39579...</msg>
<status status="PASS" starttime="20201030 11:51:23.655" endtime="20201030 11:51:23.659"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:23.664" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201030 11:51:23.662" endtime="20201030 11:51:23.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:23.666" level="INFO">VALUE: [9.537499999999824e-05, 8.294500000000093e-05, 8.206899999999712e-05, 8.391699999999933e-05, 8.104199999999992e-05, 8.198599999999917e-05, 8.206900000000059e-05, 8.67920000000022e-05, 8.395799999999856e-05, 8.491700000000033e-05, 8.574999999999902e-05, 8.104099999999698e-05, 8.392999999999942e-05, 8.205500000000102e-05, 8.390299999999976e-05, 8.486099999999858e-05, 8.298600000000017e-05, 8.198699999999864e-05, 8.498600000000217e-05, 8.294500000000093e-05, 8.294400000000146e-05, 8.681900000000187e-05, 8.486099999999858e-05, 8.590300000000176e-05, 8.299999999999974e-05, 8.00970000000012e-05, 8.580600000000077e-05, 8.387500000000062e-05, 8.402799999999988e-05, 8.102800000000035e-05, 8.292999999999842e-05, 8.591699999999786e-05, 8.287499999999962e-05, 8.301400000000278e-05, 8.397199999999813e-05, 8.101400000000078e-05, 8.484799999999848e-05, 8.388900000000019e-05, 8.023600000000089e-05, 8.682000000000134e-05, 8.012500000000033e-05, 8.294400000000146e-05, 8.59310000000009e-05, 8.294399999999799e-05, 8.308300000000116e-05, 8.388800000000071e-05, 8.19719999999996e-05, 8.48330000000029e-05, 8.593000000000142e-05, 8.202800000000135e-05]</msg>
<status status="PASS" starttime="20201030 11:51:23.665" endtime="20201030 11:51:23.667"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.660" endtime="20201030 11:51:23.667"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:23.671" endtime="20201030 11:51:23.690"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.669" endtime="20201030 11:51:23.691"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.668" endtime="20201030 11:51:23.691"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.305" endtime="20201030 11:51:23.692"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.304" endtime="20201030 11:51:23.692"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:23.700" endtime="20201030 11:51:23.722"></status>
</kw>
<msg timestamp="20201030 11:51:23.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:23.699" endtime="20201030 11:51:23.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:23.725" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:23.724" endtime="20201030 11:51:23.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:23.726" endtime="20201030 11:51:23.728"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.696" endtime="20201030 11:51:23.728"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.694" endtime="20201030 11:51:23.729"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:23.735" endtime="20201030 11:51:24.021"></status>
</kw>
<msg timestamp="20201030 11:51:24.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022870514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022941069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:23.733" endtime="20201030 11:51:24.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:24.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022870514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022941069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:24.026" endtime="20201030 11:51:24.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:24.034" endtime="20201030 11:51:24.035"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.731" endtime="20201030 11:51:24.036"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.729" endtime="20201030 11:51:24.036"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:24.040" level="INFO">${RESULT} = [{'diff': 7.055499999999992e-05}, {'diff': 8.10970000000022e-05}, {'diff': 8.39720000000016e-05}, {'diff': 8.486099999999858e-05}, {'diff': 8.582000000000034e-05}, {'diff': 8.58050000000013e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 11:51:24.037" endtime="20201030 11:51:24.041"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:24.044" level="INFO">${ACCURACY} = {'diff': [7.055499999999992e-05, 8.10970000000022e-05, 8.39720000000016e-05, 8.486099999999858e-05, 8.582000000000034e-05, 8.58050000000013e-05, 8.204099999999798e-05, 8.581900000000087e-05, 8.2987000...</msg>
<status status="PASS" starttime="20201030 11:51:24.041" endtime="20201030 11:51:24.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:24.049" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201030 11:51:24.048" endtime="20201030 11:51:24.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:24.051" level="INFO">VALUE: [7.055499999999992e-05, 8.10970000000022e-05, 8.39720000000016e-05, 8.486099999999858e-05, 8.582000000000034e-05, 8.58050000000013e-05, 8.204099999999798e-05, 8.581900000000087e-05, 8.298700000000311e-05, 8.287499999999962e-05, 8.584799999999948e-05, 8.201399999999831e-05, 8.595900000000004e-05, 8.106899999999959e-05, 8.295799999999756e-05, 8.494399999999999e-05, 8.204099999999798e-05, 8.486100000000205e-05, 8.490299999999729e-05, 8.209699999999973e-05, 8.104199999999992e-05, 8.198599999999917e-05, 8.201399999999831e-05, 8.581900000000087e-05, 8.58050000000013e-05, 8.105500000000002e-05, 8.583300000000044e-05, 8.487500000000162e-05, 8.393100000000236e-05, 8.39729999999976e-05, 8.391699999999933e-05, 8.104199999999992e-05, 8.298600000000017e-05, 8.491700000000033e-05, 8.487499999999815e-05, 8.397300000000107e-05, 8.204200000000092e-05, 8.588899999999872e-05, 8.583399999999991e-05, 8.105599999999949e-05, 8.294400000000146e-05, 8.102800000000035e-05, 8.199999999999874e-05, 8.488800000000171e-05, 8.290299999999876e-05, 8.299999999999974e-05, 8.490300000000076e-05, 8.677699999999969e-05, 8.580499999999783e-05, 8.294499999999747e-05]</msg>
<status status="PASS" starttime="20201030 11:51:24.050" endtime="20201030 11:51:24.052"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.045" endtime="20201030 11:51:24.053"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:24.056" endtime="20201030 11:51:24.076"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.055" endtime="20201030 11:51:24.076"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.054" endtime="20201030 11:51:24.077"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.693" endtime="20201030 11:51:24.077"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.692" endtime="20201030 11:51:24.077"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:24.086" endtime="20201030 11:51:24.109"></status>
</kw>
<msg timestamp="20201030 11:51:24.109" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:24.084" endtime="20201030 11:51:24.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:24.112" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:24.110" endtime="20201030 11:51:24.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:24.113" endtime="20201030 11:51:24.114"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.082" endtime="20201030 11:51:24.115"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.079" endtime="20201030 11:51:24.115"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:24.122" endtime="20201030 11:51:24.407"></status>
</kw>
<msg timestamp="20201030 11:51:24.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024409181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024504764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:24.120" endtime="20201030 11:51:24.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:24.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024409181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024504764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:24.411" endtime="20201030 11:51:24.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:24.420" endtime="20201030 11:51:24.421"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.118" endtime="20201030 11:51:24.422"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.116" endtime="20201030 11:51:24.422"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:24.426" level="INFO">${RESULT} = [{'diff': 9.558299999999978e-05}, {'diff': 8.390299999999976e-05}, {'diff': 8.105599999999949e-05}, {'diff': 8.398600000000117e-05}, {'diff': 8.205600000000049e-05}, {'diff': 8.101400000000078e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:24.423" endtime="20201030 11:51:24.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:24.430" level="INFO">${ACCURACY} = {'diff': [9.558299999999978e-05, 8.390299999999976e-05, 8.105599999999949e-05, 8.398600000000117e-05, 8.205600000000049e-05, 8.101400000000078e-05, 8.688899999999972e-05, 8.583399999999991e-05, 8.2124...</msg>
<status status="PASS" starttime="20201030 11:51:24.427" endtime="20201030 11:51:24.430"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:24.435" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201030 11:51:24.434" endtime="20201030 11:51:24.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:24.437" level="INFO">VALUE: [9.558299999999978e-05, 8.390299999999976e-05, 8.105599999999949e-05, 8.398600000000117e-05, 8.205600000000049e-05, 8.101400000000078e-05, 8.688899999999972e-05, 8.583399999999991e-05, 8.212499999999887e-05, 8.105599999999949e-05, 8.495899999999904e-05, 8.104199999999992e-05, 8.297300000000007e-05, 8.586099999999958e-05, 8.586099999999958e-05, 8.198599999999917e-05, 8.390299999999976e-05, 8.498699999999818e-05, 8.5847e-05, 8.398600000000117e-05, 8.105500000000002e-05, 8.204199999999745e-05, 8.311099999999683e-05, 8.390200000000028e-05, 8.199999999999874e-05, 8.015299999999947e-05, 8.488900000000119e-05, 8.679199999999873e-05, 8.4846999999999e-05, 8.684699999999754e-05, 8.394400000000246e-05, 8.67920000000022e-05, 8.306999999999759e-05, 8.011200000000024e-05, 8.588799999999924e-05, 8.592999999999795e-05, 8.586199999999905e-05, 8.302799999999888e-05, 8.292999999999842e-05, 8.209800000000267e-05, 8.587499999999915e-05, 8.581900000000087e-05, 8.395800000000203e-05, 8.499999999999827e-05, 8.195800000000003e-05, 8.495799999999956e-05, 8.106899999999959e-05, 8.198599999999917e-05, 8.11109999999983e-05, 8.105600000000296e-05]</msg>
<status status="PASS" starttime="20201030 11:51:24.436" endtime="20201030 11:51:24.439"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.431" endtime="20201030 11:51:24.439"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:24.443" endtime="20201030 11:51:24.462"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.441" endtime="20201030 11:51:24.463"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.440" endtime="20201030 11:51:24.463"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.078" endtime="20201030 11:51:24.464"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.077" endtime="20201030 11:51:24.464"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:24.472" endtime="20201030 11:51:24.497"></status>
</kw>
<msg timestamp="20201030 11:51:24.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:24.471" endtime="20201030 11:51:24.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:24.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:24.498" endtime="20201030 11:51:24.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:24.501" endtime="20201030 11:51:24.502"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.468" endtime="20201030 11:51:24.503"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.466" endtime="20201030 11:51:24.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:24.510" endtime="20201030 11:51:24.795"></status>
</kw>
<msg timestamp="20201030 11:51:24.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024611306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024695208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:24.508" endtime="20201030 11:51:24.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:24.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024611306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024695208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:24.800" endtime="20201030 11:51:24.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:24.808" endtime="20201030 11:51:24.810"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.506" endtime="20201030 11:51:24.810"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.504" endtime="20201030 11:51:24.810"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:24.814" level="INFO">${RESULT} = [{'diff': 8.390200000000028e-05}, {'diff': 8.198600000000264e-05}, {'diff': 8.295800000000103e-05}, {'diff': 8.688899999999972e-05}, {'diff': 8.313799999999996e-05}, {'diff': 8.587499999999915e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:24.811" endtime="20201030 11:51:24.815"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:24.819" level="INFO">${ACCURACY} = {'diff': [8.390200000000028e-05, 8.198600000000264e-05, 8.295800000000103e-05, 8.688899999999972e-05, 8.313799999999996e-05, 8.587499999999915e-05, 8.588900000000219e-05, 8.295800000000103e-05, 8.1999...</msg>
<status status="PASS" starttime="20201030 11:51:24.815" endtime="20201030 11:51:24.820"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:24.824" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201030 11:51:24.823" endtime="20201030 11:51:24.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:24.826" level="INFO">VALUE: [8.390200000000028e-05, 8.198600000000264e-05, 8.295800000000103e-05, 8.688899999999972e-05, 8.313799999999996e-05, 8.587499999999915e-05, 8.588900000000219e-05, 8.295800000000103e-05, 8.199999999999874e-05, 8.595800000000056e-05, 8.676399999999959e-05, 8.498600000000217e-05, 8.295799999999756e-05, 8.583399999999991e-05, 8.688899999999972e-05, 8.104199999999992e-05, 8.298600000000017e-05, 8.586099999999958e-05, 8.111100000000177e-05, 8.388900000000019e-05, 8.218100000000061e-05, 8.104199999999992e-05, 8.387500000000062e-05, 8.204200000000092e-05, 8.583299999999697e-05, 8.387499999999715e-05, 8.294399999999799e-05, 8.402799999999988e-05, 8.391699999999933e-05, 8.106999999999906e-05, 8.404199999999945e-05, 8.583300000000044e-05, 8.584800000000295e-05, 8.591599999999838e-05, 8.102800000000035e-05, 8.675000000000002e-05, 8.209699999999973e-05, 8.102800000000035e-05, 8.102700000000088e-05, 8.677799999999916e-05, 8.582000000000034e-05, 8.215199999999853e-05, 8.586100000000305e-05, 8.673600000000045e-05, 8.388900000000019e-05, 8.493000000000042e-05, 8.102800000000035e-05, 8.391699999999933e-05, 8.679099999999926e-05, 8.39720000000016e-05]</msg>
<status status="PASS" starttime="20201030 11:51:24.825" endtime="20201030 11:51:24.827"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.820" endtime="20201030 11:51:24.828"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:24.831" endtime="20201030 11:51:24.851"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.830" endtime="20201030 11:51:24.851"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.829" endtime="20201030 11:51:24.852"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.465" endtime="20201030 11:51:24.852"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.464" endtime="20201030 11:51:24.852"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:24.861" endtime="20201030 11:51:24.883"></status>
</kw>
<msg timestamp="20201030 11:51:24.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:24.859" endtime="20201030 11:51:24.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:24.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:24.885" endtime="20201030 11:51:24.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:24.887" endtime="20201030 11:51:24.889"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.857" endtime="20201030 11:51:24.889"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.855" endtime="20201030 11:51:24.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:24.896" endtime="20201030 11:51:25.183"></status>
</kw>
<msg timestamp="20201030 11:51:25.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023165472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023237028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:24.895" endtime="20201030 11:51:25.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023165472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023237028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:25.187" endtime="20201030 11:51:25.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.195" endtime="20201030 11:51:25.197"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.892" endtime="20201030 11:51:25.198"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.890" endtime="20201030 11:51:25.198"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:25.202" level="INFO">${RESULT} = [{'diff': 7.15560000000004e-05}, {'diff': 8.679199999999873e-05}, {'diff': 8.200000000000221e-05}, {'diff': 8.1152000000001e-05}, {'diff': 8.297199999999713e-05}, {'diff': 8.488899999999772e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 11:51:25.199" endtime="20201030 11:51:25.202"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:25.206" level="INFO">${ACCURACY} = {'diff': [7.15560000000004e-05, 8.679199999999873e-05, 8.200000000000221e-05, 8.1152000000001e-05, 8.297199999999713e-05, 8.488899999999772e-05, 8.402799999999988e-05, 8.68059999999983e-05, 8.58609999...</msg>
<status status="PASS" starttime="20201030 11:51:25.203" endtime="20201030 11:51:25.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.211" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201030 11:51:25.210" endtime="20201030 11:51:25.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.213" level="INFO">VALUE: [7.15560000000004e-05, 8.679199999999873e-05, 8.200000000000221e-05, 8.1152000000001e-05, 8.297199999999713e-05, 8.488899999999772e-05, 8.402799999999988e-05, 8.68059999999983e-05, 8.586099999999958e-05, 8.309700000000073e-05, 8.4846999999999e-05, 8.298600000000017e-05, 8.022199999999785e-05, 8.393100000000236e-05, 8.01389999999999e-05, 8.393000000000289e-05, 8.104100000000045e-05, 8.116600000000057e-05, 8.391599999999985e-05, 8.679100000000273e-05, 8.116700000000004e-05, 8.584799999999948e-05, 8.306999999999759e-05, 8.48050000000003e-05, 8.388900000000019e-05, 8.498600000000217e-05, 8.201399999999831e-05, 8.30980000000002e-05, 8.488900000000119e-05, 8.104199999999992e-05, 8.297300000000007e-05, 8.491700000000033e-05, 8.41249999999974e-05, 8.105500000000002e-05, 8.21109999999993e-05, 8.29720000000006e-05, 8.488900000000119e-05, 8.105599999999949e-05, 8.388900000000019e-05, 8.575000000000249e-05, 8.488900000000119e-05, 8.595800000000056e-05, 8.676399999999959e-05, 8.208300000000016e-05, 8.301299999999984e-05, 8.394500000000193e-05, 8.201399999999831e-05, 8.402700000000041e-05, 8.199999999999874e-05, 8.292999999999842e-05]</msg>
<status status="PASS" starttime="20201030 11:51:25.212" endtime="20201030 11:51:25.214"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.207" endtime="20201030 11:51:25.214"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:25.218" endtime="20201030 11:51:25.237"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.216" endtime="20201030 11:51:25.238"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.215" endtime="20201030 11:51:25.238"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.853" endtime="20201030 11:51:25.238"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.852" endtime="20201030 11:51:25.239"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.247" endtime="20201030 11:51:25.271"></status>
</kw>
<msg timestamp="20201030 11:51:25.271" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:25.246" endtime="20201030 11:51:25.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:25.272" endtime="20201030 11:51:25.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.275" endtime="20201030 11:51:25.276"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.243" endtime="20201030 11:51:25.277"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.241" endtime="20201030 11:51:25.277"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.284" endtime="20201030 11:51:25.569"></status>
</kw>
<msg timestamp="20201030 11:51:25.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023349597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023427778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:25.282" endtime="20201030 11:51:25.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023349597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023427778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:25.573" endtime="20201030 11:51:25.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.582" endtime="20201030 11:51:25.583"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.279" endtime="20201030 11:51:25.584"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.278" endtime="20201030 11:51:25.584"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:25.588" level="INFO">${RESULT} = [{'diff': 7.818100000000008e-05}, {'diff': 8.205600000000049e-05}, {'diff': 8.391599999999985e-05}, {'diff': 8.49729999999986e-05}, {'diff': 8.486099999999858e-05}, {'diff': 8.690299999999929e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:25.585" endtime="20201030 11:51:25.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:25.592" level="INFO">${ACCURACY} = {'diff': [7.818100000000008e-05, 8.205600000000049e-05, 8.391599999999985e-05, 8.49729999999986e-05, 8.486099999999858e-05, 8.690299999999929e-05, 8.298600000000017e-05, 8.39590000000015e-05, 8.677699...</msg>
<status status="PASS" starttime="20201030 11:51:25.589" endtime="20201030 11:51:25.593"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.597" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201030 11:51:25.596" endtime="20201030 11:51:25.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.599" level="INFO">VALUE: [7.818100000000008e-05, 8.205600000000049e-05, 8.391599999999985e-05, 8.49729999999986e-05, 8.486099999999858e-05, 8.690299999999929e-05, 8.298600000000017e-05, 8.39590000000015e-05, 8.677699999999969e-05, 8.295800000000103e-05, 8.398600000000117e-05, 8.4846999999999e-05, 8.395799999999856e-05, 8.390200000000028e-05, 8.587500000000262e-05, 8.683399999999744e-05, 8.199999999999874e-05, 8.400000000000074e-05, 8.675000000000002e-05, 8.29309999999979e-05, 8.298600000000017e-05, 8.108399999999863e-05, 8.587499999999915e-05, 8.583300000000044e-05, 8.109699999999873e-05, 8.49309999999999e-05, 8.294500000000093e-05, 8.390299999999976e-05, 8.395800000000203e-05, 8.198599999999917e-05, 8.494499999999947e-05, 8.582000000000034e-05, 8.305600000000149e-05, 8.400000000000074e-05, 8.297300000000007e-05, 8.397199999999813e-05, 8.201399999999831e-05, 8.488900000000119e-05, 8.308300000000116e-05, 8.011100000000076e-05, 8.395800000000203e-05, 8.208300000000016e-05, 8.29720000000006e-05, 8.404199999999945e-05, 8.199999999999874e-05, 8.20130000000023e-05, 8.298600000000017e-05, 8.297199999999713e-05, 8.388899999999672e-05, 8.591699999999786e-05]</msg>
<status status="PASS" starttime="20201030 11:51:25.598" endtime="20201030 11:51:25.601"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.593" endtime="20201030 11:51:25.601"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:25.605" endtime="20201030 11:51:25.624"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.604" endtime="20201030 11:51:25.625"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.602" endtime="20201030 11:51:25.625"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.240" endtime="20201030 11:51:25.626"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.239" endtime="20201030 11:51:25.626"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.634" endtime="20201030 11:51:25.657"></status>
</kw>
<msg timestamp="20201030 11:51:25.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:25.633" endtime="20201030 11:51:25.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:25.658" endtime="20201030 11:51:25.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.661" endtime="20201030 11:51:25.663"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.630" endtime="20201030 11:51:25.663"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.628" endtime="20201030 11:51:25.664"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.671" endtime="20201030 11:51:25.958"></status>
</kw>
<msg timestamp="20201030 11:51:25.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023120597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023190236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:25.669" endtime="20201030 11:51:25.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023120597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023190236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:25.962" endtime="20201030 11:51:25.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.970" endtime="20201030 11:51:25.972"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.666" endtime="20201030 11:51:25.972"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.664" endtime="20201030 11:51:25.973"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:25.976" level="INFO">${RESULT} = [{'diff': 6.963899999999981e-05}, {'diff': 8.198599999999917e-05}, {'diff': 8.212500000000234e-05}, {'diff': 8.58059999999973e-05}, {'diff': 8.688800000000024e-05}, {'diff': 8.011100000000076e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:25.973" endtime="20201030 11:51:25.977"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:25.981" level="INFO">${ACCURACY} = {'diff': [6.963899999999981e-05, 8.198599999999917e-05, 8.212500000000234e-05, 8.58059999999973e-05, 8.688800000000024e-05, 8.011100000000076e-05, 8.212499999999887e-05, 8.295800000000103e-05, 8.40000...</msg>
<status status="PASS" starttime="20201030 11:51:25.977" endtime="20201030 11:51:25.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.986" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201030 11:51:25.985" endtime="20201030 11:51:25.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.988" level="INFO">VALUE: [6.963899999999981e-05, 8.198599999999917e-05, 8.212500000000234e-05, 8.58059999999973e-05, 8.688800000000024e-05, 8.011100000000076e-05, 8.212499999999887e-05, 8.295800000000103e-05, 8.400000000000074e-05, 8.294399999999799e-05, 8.298600000000017e-05, 8.008300000000163e-05, 8.213899999999844e-05, 8.199999999999874e-05, 8.11390000000009e-05, 8.105599999999949e-05, 8.207000000000006e-05, 8.294400000000146e-05, 8.20130000000023e-05, 8.388900000000019e-05, 8.294499999999747e-05, 8.302800000000235e-05, 8.301399999999931e-05, 8.20130000000023e-05, 8.309700000000073e-05, 8.58050000000013e-05, 8.486099999999858e-05, 8.209699999999973e-05, 8.393000000000289e-05, 8.59310000000009e-05, 8.294500000000093e-05, 8.695800000000156e-05, 8.487500000000162e-05, 8.397199999999813e-05, 8.4846999999999e-05, 8.302799999999888e-05, 8.20130000000023e-05, 8.408399999999816e-05, 8.405499999999955e-05, 8.5847e-05, 8.695800000000156e-05, 8.494399999999999e-05, 8.587500000000262e-05, 8.494499999999947e-05, 8.018000000000261e-05, 8.402799999999988e-05, 8.391599999999985e-05, 8.588899999999872e-05, 8.67920000000022e-05, 8.397199999999813e-05]</msg>
<status status="PASS" starttime="20201030 11:51:25.987" endtime="20201030 11:51:25.989"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.982" endtime="20201030 11:51:25.990"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:25.993" endtime="20201030 11:51:26.013"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.992" endtime="20201030 11:51:26.013"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.991" endtime="20201030 11:51:26.014"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.627" endtime="20201030 11:51:26.014"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.626" endtime="20201030 11:51:26.014"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.023" endtime="20201030 11:51:26.043"></status>
</kw>
<msg timestamp="20201030 11:51:26.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:26.021" endtime="20201030 11:51:26.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.046" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:26.045" endtime="20201030 11:51:26.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.047" endtime="20201030 11:51:26.048"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.018" endtime="20201030 11:51:26.049"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.016" endtime="20201030 11:51:26.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.056" endtime="20201030 11:51:26.345"></status>
</kw>
<msg timestamp="20201030 11:51:26.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021738667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021824444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:26.054" endtime="20201030 11:51:26.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021738667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021824444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:26.350" endtime="20201030 11:51:26.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.358" endtime="20201030 11:51:26.360"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.052" endtime="20201030 11:51:26.360"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.050" endtime="20201030 11:51:26.361"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:26.364" level="INFO">${RESULT} = [{'diff': 8.577699999999869e-05}, {'diff': 8.208399999999963e-05}, {'diff': 8.297199999999713e-05}, {'diff': 8.580499999999783e-05}, {'diff': 8.104199999999992e-05}, {'diff': 8.495799999999956e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:26.361" endtime="20201030 11:51:26.365"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:26.369" level="INFO">${ACCURACY} = {'diff': [8.577699999999869e-05, 8.208399999999963e-05, 8.297199999999713e-05, 8.580499999999783e-05, 8.104199999999992e-05, 8.495799999999956e-05, 8.294399999999799e-05, 8.201400000000178e-05, 8.1014...</msg>
<status status="PASS" starttime="20201030 11:51:26.365" endtime="20201030 11:51:26.369"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.373" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201030 11:51:26.372" endtime="20201030 11:51:26.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.376" level="INFO">VALUE: [8.577699999999869e-05, 8.208399999999963e-05, 8.297199999999713e-05, 8.580499999999783e-05, 8.104199999999992e-05, 8.495799999999956e-05, 8.294399999999799e-05, 8.201400000000178e-05, 8.101400000000078e-05, 8.020799999999828e-05, 8.58059999999973e-05, 8.19589999999995e-05, 8.29590000000005e-05, 8.580600000000077e-05, 8.499999999999827e-05, 8.201400000000178e-05, 8.391699999999933e-05, 8.676300000000012e-05, 8.198600000000264e-05, 8.688899999999972e-05, 8.195900000000297e-05, 8.580600000000077e-05, 8.388900000000019e-05, 8.390200000000028e-05, 8.21109999999993e-05, 8.587499999999915e-05, 8.583300000000044e-05, 8.105500000000002e-05, 8.401400000000031e-05, 8.394399999999899e-05, 8.391699999999933e-05, 8.391599999999985e-05, 8.590199999999881e-05, 8.5847e-05, 8.191599999999785e-05, 8.023600000000089e-05, 8.486099999999858e-05, 8.683400000000091e-05, 8.677799999999916e-05, 8.119499999999918e-05, 8.390200000000028e-05, 8.486200000000152e-05, 8.388900000000019e-05, 8.298600000000017e-05, 8.495899999999904e-05, 8.486100000000205e-05, 8.009800000000067e-05, 8.207000000000006e-05, 8.398600000000117e-05, 8.29720000000006e-05]</msg>
<status status="PASS" starttime="20201030 11:51:26.374" endtime="20201030 11:51:26.376"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.369" endtime="20201030 11:51:26.377"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:26.380" endtime="20201030 11:51:26.400"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.379" endtime="20201030 11:51:26.400"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.378" endtime="20201030 11:51:26.401"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.015" endtime="20201030 11:51:26.401"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.014" endtime="20201030 11:51:26.401"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.410" endtime="20201030 11:51:26.430"></status>
</kw>
<msg timestamp="20201030 11:51:26.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:26.408" endtime="20201030 11:51:26.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.433" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:26.431" endtime="20201030 11:51:26.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.434" endtime="20201030 11:51:26.435"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.406" endtime="20201030 11:51:26.436"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.404" endtime="20201030 11:51:26.436"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.443" endtime="20201030 11:51:26.728"></status>
</kw>
<msg timestamp="20201030 11:51:26.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021517361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021586972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:26.441" endtime="20201030 11:51:26.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021517361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021586972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:26.733" endtime="20201030 11:51:26.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.741" endtime="20201030 11:51:26.742"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.439" endtime="20201030 11:51:26.743"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.437" endtime="20201030 11:51:26.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:26.747" level="INFO">${RESULT} = [{'diff': 6.961100000000067e-05}, {'diff': 8.108399999999863e-05}, {'diff': 8.295799999999756e-05}, {'diff': 8.576300000000259e-05}, {'diff': 8.58189999999974e-05}, {'diff': 8.581900000000087e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:26.744" endtime="20201030 11:51:26.748"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:26.751" level="INFO">${ACCURACY} = {'diff': [6.961100000000067e-05, 8.108399999999863e-05, 8.295799999999756e-05, 8.576300000000259e-05, 8.58189999999974e-05, 8.581900000000087e-05, 8.104100000000045e-05, 8.592999999999795e-05, 8.20839...</msg>
<status status="PASS" starttime="20201030 11:51:26.748" endtime="20201030 11:51:26.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.756" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201030 11:51:26.755" endtime="20201030 11:51:26.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.758" level="INFO">VALUE: [6.961100000000067e-05, 8.108399999999863e-05, 8.295799999999756e-05, 8.576300000000259e-05, 8.58189999999974e-05, 8.581900000000087e-05, 8.104100000000045e-05, 8.592999999999795e-05, 8.208399999999963e-05, 8.294499999999747e-05, 8.298699999999964e-05, 8.680600000000177e-05, 8.583300000000044e-05, 8.586100000000305e-05, 8.586099999999958e-05, 8.394499999999847e-05, 8.198700000000211e-05, 8.680600000000177e-05, 8.102700000000088e-05, 8.201400000000178e-05, 8.204099999999798e-05, 8.294500000000093e-05, 8.487499999999815e-05, 8.590299999999829e-05, 8.301399999999931e-05, 8.292999999999842e-05, 8.106899999999959e-05, 8.294500000000093e-05, 8.401400000000031e-05, 8.58059999999973e-05, 8.106999999999906e-05, 8.676399999999959e-05, 8.495899999999904e-05, 8.677799999999916e-05, 8.391599999999985e-05, 8.583299999999697e-05, 8.202800000000135e-05, 8.39859999999977e-05, 8.393100000000236e-05, 8.200000000000221e-05, 8.592999999999795e-05, 8.199999999999874e-05, 8.487500000000162e-05, 8.676399999999959e-05, 8.393000000000289e-05, 8.687500000000015e-05, 8.676399999999959e-05, 8.488900000000119e-05, 8.201399999999831e-05, 8.102799999999688e-05]</msg>
<status status="PASS" starttime="20201030 11:51:26.757" endtime="20201030 11:51:26.764"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.752" endtime="20201030 11:51:26.765"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:26.768" endtime="20201030 11:51:26.788"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.767" endtime="20201030 11:51:26.788"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.766" endtime="20201030 11:51:26.789"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.402" endtime="20201030 11:51:26.789"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.401" endtime="20201030 11:51:26.789"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.230" endtime="20201030 11:51:26.789"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201030 11:50:48.153" endtime="20201030 11:51:26.790" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:26.799" endtime="20201030 11:51:26.818"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.798" endtime="20201030 11:51:26.819"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.832" endtime="20201030 11:51:26.853"></status>
</kw>
<msg timestamp="20201030 11:51:26.854" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:26.830" endtime="20201030 11:51:26.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.856" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:26.855" endtime="20201030 11:51:26.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.859" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:51:26.857" endtime="20201030 11:51:26.859"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:26.828" endtime="20201030 11:51:26.860"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:26.825" endtime="20201030 11:51:26.861"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.824" endtime="20201030 11:51:26.861"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:51:26.865" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:51:26.864" endtime="20201030 11:51:26.865"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.862" endtime="20201030 11:51:26.865"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.823" endtime="20201030 11:51:26.865"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.823" endtime="20201030 11:51:26.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.866" endtime="20201030 11:51:26.868"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.821" endtime="20201030 11:51:26.868"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.820" endtime="20201030 11:51:26.869"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.796" endtime="20201030 11:51:26.869"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.880" endtime="20201030 11:51:26.899"></status>
</kw>
<msg timestamp="20201030 11:51:26.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:26.879" endtime="20201030 11:51:26.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:26.901" endtime="20201030 11:51:26.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.904" endtime="20201030 11:51:26.906"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.875" endtime="20201030 11:51:26.906"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.873" endtime="20201030 11:51:26.907"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.913" endtime="20201030 11:51:27.198"></status>
</kw>
<msg timestamp="20201030 11:51:27.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075254042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.07526225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:26.911" endtime="20201030 11:51:27.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075254042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.07526225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:27.202" endtime="20201030 11:51:27.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.210" endtime="20201030 11:51:27.212"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.909" endtime="20201030 11:51:27.213"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.907" endtime="20201030 11:51:27.213"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:27.217" level="INFO">${RESULT} = [{'diff': 8.208000000009541e-06}, {'diff': 8.167000000003366e-06}, {'diff': 8.195000000002506e-06}, {'diff': 8.165999999990015e-06}, {'diff': 8.194999999988628e-06}, {'diff': 8.208999999995137e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:51:27.214" endtime="20201030 11:51:27.217"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:27.221" level="INFO">${ACCURACY} = {'diff': [8.208000000009541e-06, 8.167000000003366e-06, 8.195000000002506e-06, 8.165999999990015e-06, 8.194999999988628e-06, 8.208999999995137e-06, 8.207999999995663e-06, 8.180999999995997e-06, 8.1799...</msg>
<status status="PASS" starttime="20201030 11:51:27.218" endtime="20201030 11:51:27.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.226" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201030 11:51:27.225" endtime="20201030 11:51:27.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.229" level="INFO">VALUE: [8.208000000009541e-06, 8.167000000003366e-06, 8.195000000002506e-06, 8.165999999990015e-06, 8.194999999988628e-06, 8.208999999995137e-06, 8.207999999995663e-06, 8.180999999995997e-06, 8.179999999996523e-06, 8.180999999995997e-06, 8.111000000005086e-06, 8.180999999995997e-06, 8.167000000003366e-06, 8.195000000002506e-06, 8.181000000009875e-06, 8.139000000004226e-06, 8.207999999995663e-06, 8.195000000002506e-06, 8.207999999995663e-06, 8.166999999989488e-06, 8.207999999995663e-06, 8.180999999995997e-06, 8.194000000003032e-06, 8.222000000002172e-06, 8.223000000001646e-06, 8.207999999995663e-06, 8.23600000000868e-06, 8.179999999996523e-06, 8.222000000002172e-06, 8.180999999995997e-06, 8.167000000003366e-06, 8.194000000003032e-06, 8.223000000001646e-06, 8.181000000009875e-06, 8.193999999989154e-06, 8.180000000010401e-06, 8.193999999989154e-06, 8.207999999995663e-06, 8.179999999996523e-06, 8.194000000003032e-06, 8.194999999988628e-06, 8.180999999995997e-06, 8.222000000002172e-06, 8.151999999997384e-06, 8.111000000005086e-06, 8.263999999993943e-06, 8.222000000002172e-06, 8.180000000010401e-06, 8.209000000009015e-06, 8.180999999995997e-06]</msg>
<status status="PASS" starttime="20201030 11:51:27.227" endtime="20201030 11:51:27.229"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.222" endtime="20201030 11:51:27.229"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:27.233" endtime="20201030 11:51:27.252"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.232" endtime="20201030 11:51:27.253"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.230" endtime="20201030 11:51:27.253"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.871" endtime="20201030 11:51:27.254"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.871" endtime="20201030 11:51:27.254"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.263" endtime="20201030 11:51:27.280"></status>
</kw>
<msg timestamp="20201030 11:51:27.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:27.261" endtime="20201030 11:51:27.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.283" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:27.282" endtime="20201030 11:51:27.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.284" endtime="20201030 11:51:27.286"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.258" endtime="20201030 11:51:27.286"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.256" endtime="20201030 11:51:27.287"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.293" endtime="20201030 11:51:27.580"></status>
</kw>
<msg timestamp="20201030 11:51:27.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022898431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022906639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:27.291" endtime="20201030 11:51:27.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022898431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022906639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:27.584" endtime="20201030 11:51:27.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.592" endtime="20201030 11:51:27.594"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.289" endtime="20201030 11:51:27.594"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.287" endtime="20201030 11:51:27.595"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:27.599" level="INFO">${RESULT} = [{'diff': 8.207999999999133e-06}, {'diff': 8.194999999999036e-06}, {'diff': 8.209000000002076e-06}, {'diff': 8.193999999999563e-06}, {'diff': 8.208000000002602e-06}, {'diff': 8.179999999999993e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:51:27.595" endtime="20201030 11:51:27.599"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:27.604" level="INFO">${ACCURACY} = {'diff': [8.207999999999133e-06, 8.194999999999036e-06, 8.209000000002076e-06, 8.193999999999563e-06, 8.208000000002602e-06, 8.179999999999993e-06, 8.236000000001742e-06, 8.180999999999466e-06, 8.2219...</msg>
<status status="PASS" starttime="20201030 11:51:27.600" endtime="20201030 11:51:27.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.608" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201030 11:51:27.607" endtime="20201030 11:51:27.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.611" level="INFO">VALUE: [8.207999999999133e-06, 8.194999999999036e-06, 8.209000000002076e-06, 8.193999999999563e-06, 8.208000000002602e-06, 8.179999999999993e-06, 8.236000000001742e-06, 8.180999999999466e-06, 8.221999999998703e-06, 8.193999999999563e-06, 8.250000000001312e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.194999999999036e-06, 8.166999999999897e-06, 8.179999999999993e-06, 8.207999999999133e-06, 8.166999999999897e-06, 8.193999999999563e-06, 8.208999999998606e-06, 8.180999999999466e-06, 8.180999999999466e-06, 8.194999999999036e-06, 8.180999999999466e-06, 8.194000000003032e-06, 8.166999999999897e-06, 8.222000000002172e-06, 8.207999999999133e-06, 8.194999999999036e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.194999999999036e-06, 8.193999999999563e-06, 8.222000000002172e-06, 8.221999999998703e-06, 8.222000000002172e-06, 8.179999999999993e-06, 8.193999999999563e-06, 8.221999999998703e-06, 8.166000000000423e-06, 8.179999999999993e-06, 8.221999999998703e-06, 8.180999999999466e-06, 8.208999999998606e-06, 8.180999999999466e-06, 8.193999999999563e-06, 8.194000000003032e-06, 8.194999999999036e-06, 8.180999999999466e-06]</msg>
<status status="PASS" starttime="20201030 11:51:27.609" endtime="20201030 11:51:27.611"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.605" endtime="20201030 11:51:27.612"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:27.615" endtime="20201030 11:51:27.635"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.614" endtime="20201030 11:51:27.635"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.613" endtime="20201030 11:51:27.636"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.255" endtime="20201030 11:51:27.636"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.254" endtime="20201030 11:51:27.636"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.645" endtime="20201030 11:51:27.662"></status>
</kw>
<msg timestamp="20201030 11:51:27.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:27.644" endtime="20201030 11:51:27.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:27.663" endtime="20201030 11:51:27.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.666" endtime="20201030 11:51:27.667"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.641" endtime="20201030 11:51:27.668"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.639" endtime="20201030 11:51:27.668"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.674" endtime="20201030 11:51:27.961"></status>
</kw>
<msg timestamp="20201030 11:51:27.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022495986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022504167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:27.673" endtime="20201030 11:51:27.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022495986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022504167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:27.965" endtime="20201030 11:51:27.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.974" endtime="20201030 11:51:27.975"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.670" endtime="20201030 11:51:27.976"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.669" endtime="20201030 11:51:27.976"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:27.980" level="INFO">${RESULT} = [{'diff': 8.180999999999466e-06}, {'diff': 8.151999999997384e-06}, {'diff': 8.179999999999993e-06}, {'diff': 8.193999999999563e-06}, {'diff': 8.193999999999563e-06}, {'diff': 8.193999999999563e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:51:27.977" endtime="20201030 11:51:27.980"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:27.984" level="INFO">${ACCURACY} = {'diff': [8.180999999999466e-06, 8.151999999997384e-06, 8.179999999999993e-06, 8.193999999999563e-06, 8.193999999999563e-06, 8.193999999999563e-06, 8.194999999999036e-06, 8.153000000000327e-06, 8.1949...</msg>
<status status="PASS" starttime="20201030 11:51:27.981" endtime="20201030 11:51:27.985"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.989" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201030 11:51:27.988" endtime="20201030 11:51:27.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.991" level="INFO">VALUE: [8.180999999999466e-06, 8.151999999997384e-06, 8.179999999999993e-06, 8.193999999999563e-06, 8.193999999999563e-06, 8.193999999999563e-06, 8.194999999999036e-06, 8.153000000000327e-06, 8.194999999999036e-06, 8.180999999999466e-06, 8.179999999999993e-06, 8.209000000002076e-06, 8.152000000000853e-06, 8.208000000002602e-06, 8.235999999998272e-06, 8.222000000002172e-06, 8.237000000001216e-06, 8.264000000000882e-06, 8.193999999999563e-06, 8.180999999999466e-06, 8.166999999999897e-06, 8.207999999999133e-06, 8.195000000002506e-06, 8.194000000003032e-06, 8.209000000002076e-06, 8.209000000002076e-06, 8.193999999999563e-06, 8.125000000001187e-06, 8.193999999999563e-06, 8.264000000000882e-06, 8.179999999999993e-06, 8.193999999999563e-06, 8.209000000002076e-06, 8.207999999999133e-06, 8.208999999998606e-06, 8.180999999999466e-06, 8.222000000002172e-06, 8.194000000003032e-06, 8.166999999999897e-06, 8.166000000000423e-06, 8.194000000003032e-06, 8.207999999999133e-06, 8.166999999999897e-06, 8.222000000002172e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.223000000001646e-06, 8.221999999998703e-06, 8.221999999998703e-06, 8.166999999999897e-06]</msg>
<status status="PASS" starttime="20201030 11:51:27.990" endtime="20201030 11:51:27.992"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.985" endtime="20201030 11:51:27.992"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:27.996" endtime="20201030 11:51:28.016"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.994" endtime="20201030 11:51:28.016"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.993" endtime="20201030 11:51:28.016"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.637" endtime="20201030 11:51:28.017"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.636" endtime="20201030 11:51:28.017"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.026" endtime="20201030 11:51:28.045"></status>
</kw>
<msg timestamp="20201030 11:51:28.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:28.024" endtime="20201030 11:51:28.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.048" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:28.046" endtime="20201030 11:51:28.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.049" endtime="20201030 11:51:28.050"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.021" endtime="20201030 11:51:28.051"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.019" endtime="20201030 11:51:28.051"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.058" endtime="20201030 11:51:28.342"></status>
</kw>
<msg timestamp="20201030 11:51:28.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023597417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023605625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:28.056" endtime="20201030 11:51:28.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023597417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023605625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:28.346" endtime="20201030 11:51:28.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.354" endtime="20201030 11:51:28.356"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.054" endtime="20201030 11:51:28.357"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.052" endtime="20201030 11:51:28.357"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:28.361" level="INFO">${RESULT} = [{'diff': 8.208000000002602e-06}, {'diff': 8.249999999997842e-06}, {'diff': 8.193999999999563e-06}, {'diff': 8.180999999999466e-06}, {'diff': 8.195000000002506e-06}, {'diff': 8.166999999999897e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:51:28.358" endtime="20201030 11:51:28.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:28.365" level="INFO">${ACCURACY} = {'diff': [8.208000000002602e-06, 8.249999999997842e-06, 8.193999999999563e-06, 8.180999999999466e-06, 8.195000000002506e-06, 8.166999999999897e-06, 8.166999999999897e-06, 8.208999999998606e-06, 8.1799...</msg>
<status status="PASS" starttime="20201030 11:51:28.362" endtime="20201030 11:51:28.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.370" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201030 11:51:28.369" endtime="20201030 11:51:28.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.372" level="INFO">VALUE: [8.208000000002602e-06, 8.249999999997842e-06, 8.193999999999563e-06, 8.180999999999466e-06, 8.195000000002506e-06, 8.166999999999897e-06, 8.166999999999897e-06, 8.208999999998606e-06, 8.179999999999993e-06, 8.166999999999897e-06, 8.221999999998703e-06, 8.237000000001216e-06, 8.208999999998606e-06, 8.166000000000423e-06, 8.139000000000757e-06, 8.179999999999993e-06, 8.180999999999466e-06, 8.222000000002172e-06, 8.179999999999993e-06, 8.180999999999466e-06, 8.166999999999897e-06, 8.181000000002936e-06, 8.209000000002076e-06, 8.222000000002172e-06, 8.223000000001646e-06, 8.221999999998703e-06, 8.208000000002602e-06, 8.208999999998606e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.139000000000757e-06, 8.180999999999466e-06, 8.180999999999466e-06, 8.125000000001187e-06, 8.263999999997412e-06, 8.207999999999133e-06, 8.236000000001742e-06, 8.180999999999466e-06, 8.207999999999133e-06, 8.208000000002602e-06, 8.166999999999897e-06, 8.222000000002172e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.152999999996857e-06, 8.193999999999563e-06, 8.193999999999563e-06]</msg>
<status status="PASS" starttime="20201030 11:51:28.371" endtime="20201030 11:51:28.374"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.366" endtime="20201030 11:51:28.374"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:28.378" endtime="20201030 11:51:28.397"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.376" endtime="20201030 11:51:28.398"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.375" endtime="20201030 11:51:28.398"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.018" endtime="20201030 11:51:28.398"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.017" endtime="20201030 11:51:28.398"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.407" endtime="20201030 11:51:28.426"></status>
</kw>
<msg timestamp="20201030 11:51:28.426" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:28.405" endtime="20201030 11:51:28.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:28.427" endtime="20201030 11:51:28.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.430" endtime="20201030 11:51:28.432"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.403" endtime="20201030 11:51:28.432"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.401" endtime="20201030 11:51:28.432"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.439" endtime="20201030 11:51:28.724"></status>
</kw>
<msg timestamp="20201030 11:51:28.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023688875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023697083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:28.437" endtime="20201030 11:51:28.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023688875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023697083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:28.728" endtime="20201030 11:51:28.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.737" endtime="20201030 11:51:28.738"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.435" endtime="20201030 11:51:28.739"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.433" endtime="20201030 11:51:28.739"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:28.743" level="INFO">${RESULT} = [{'diff': 8.207999999999133e-06}, {'diff': 8.180999999999466e-06}, {'diff': 8.179999999999993e-06}, {'diff': 8.180999999999466e-06}, {'diff': 8.208000000002602e-06}, {'diff': 8.166000000000423e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:51:28.740" endtime="20201030 11:51:28.743"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:28.748" level="INFO">${ACCURACY} = {'diff': [8.207999999999133e-06, 8.180999999999466e-06, 8.179999999999993e-06, 8.180999999999466e-06, 8.208000000002602e-06, 8.166000000000423e-06, 8.277999999996982e-06, 8.222000000002172e-06, 8.2219...</msg>
<status status="PASS" starttime="20201030 11:51:28.744" endtime="20201030 11:51:28.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.753" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201030 11:51:28.752" endtime="20201030 11:51:28.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.755" level="INFO">VALUE: [8.207999999999133e-06, 8.180999999999466e-06, 8.179999999999993e-06, 8.180999999999466e-06, 8.208000000002602e-06, 8.166000000000423e-06, 8.277999999996982e-06, 8.222000000002172e-06, 8.221999999998703e-06, 8.193999999999563e-06, 8.194999999999036e-06, 8.208999999998606e-06, 8.193999999999563e-06, 8.208999999998606e-06, 8.263999999997412e-06, 8.207999999999133e-06, 8.179999999999993e-06, 8.208999999998606e-06, 8.264000000000882e-06, 8.221999999998703e-06, 8.236000000001742e-06, 8.139000000000757e-06, 8.180999999999466e-06, 8.264000000000882e-06, 8.208000000002602e-06, 8.166999999999897e-06, 8.181000000002936e-06, 8.152000000000853e-06, 8.179999999999993e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.250000000001312e-06, 8.207999999999133e-06, 8.179999999999993e-06, 8.166999999999897e-06, 8.194999999999036e-06, 8.193999999999563e-06, 8.195000000002506e-06, 8.180999999999466e-06, 8.209000000002076e-06, 8.194999999999036e-06, 8.207999999999133e-06, 8.195000000002506e-06, 8.194999999999036e-06, 8.222000000002172e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.221999999998703e-06, 8.222999999998176e-06, 8.152000000000853e-06]</msg>
<status status="PASS" starttime="20201030 11:51:28.754" endtime="20201030 11:51:28.756"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.749" endtime="20201030 11:51:28.756"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:28.760" endtime="20201030 11:51:28.780"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.758" endtime="20201030 11:51:28.780"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.757" endtime="20201030 11:51:28.780"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.399" endtime="20201030 11:51:28.781"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.399" endtime="20201030 11:51:28.781"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.789" endtime="20201030 11:51:28.811"></status>
</kw>
<msg timestamp="20201030 11:51:28.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:28.788" endtime="20201030 11:51:28.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.814" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:28.812" endtime="20201030 11:51:28.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.815" endtime="20201030 11:51:28.816"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.785" endtime="20201030 11:51:28.817"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.783" endtime="20201030 11:51:28.817"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.824" endtime="20201030 11:51:29.110"></status>
</kw>
<msg timestamp="20201030 11:51:29.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023118361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023126556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:28.822" endtime="20201030 11:51:29.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:29.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023118361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023126556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:29.114" endtime="20201030 11:51:29.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:29.123" endtime="20201030 11:51:29.124"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.820" endtime="20201030 11:51:29.125"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.818" endtime="20201030 11:51:29.125"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:29.129" level="INFO">${RESULT} = [{'diff': 8.194999999999036e-06}, {'diff': 8.152999999996857e-06}, {'diff': 8.180999999999466e-06}, {'diff': 8.166000000000423e-06}, {'diff': 8.209000000002076e-06}, {'diff': 8.195000000002506e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:51:29.126" endtime="20201030 11:51:29.129"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:29.133" level="INFO">${ACCURACY} = {'diff': [8.194999999999036e-06, 8.152999999996857e-06, 8.180999999999466e-06, 8.166000000000423e-06, 8.209000000002076e-06, 8.195000000002506e-06, 8.139000000000757e-06, 8.180999999999466e-06, 8.1809...</msg>
<status status="PASS" starttime="20201030 11:51:29.130" endtime="20201030 11:51:29.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:29.138" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201030 11:51:29.137" endtime="20201030 11:51:29.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:29.140" level="INFO">VALUE: [8.194999999999036e-06, 8.152999999996857e-06, 8.180999999999466e-06, 8.166000000000423e-06, 8.209000000002076e-06, 8.195000000002506e-06, 8.139000000000757e-06, 8.180999999999466e-06, 8.180999999999466e-06, 8.222000000002172e-06, 8.208999999998606e-06, 8.207999999999133e-06, 8.236000000001742e-06, 8.167000000003366e-06, 8.166999999999897e-06, 8.250000000001312e-06, 8.179999999999993e-06, 8.207999999999133e-06, 8.222999999998176e-06, 8.222000000002172e-06, 8.152000000000853e-06, 8.193999999999563e-06, 8.250000000001312e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.179999999999993e-06, 8.181000000002936e-06, 8.179999999999993e-06, 8.152000000000853e-06, 8.208000000002602e-06, 8.223000000001646e-06, 8.223000000001646e-06, 8.181000000002936e-06, 8.179999999999993e-06, 8.235999999998272e-06, 8.193999999999563e-06, 8.221999999998703e-06, 8.138999999997287e-06, 8.153000000000327e-06, 8.179999999999993e-06, 8.195000000002506e-06, 8.166000000000423e-06, 8.236000000001742e-06, 8.193999999999563e-06, 8.153000000000327e-06, 8.194999999999036e-06, 8.193999999999563e-06, 8.235999999998272e-06, 8.194999999999036e-06, 8.180999999999466e-06]</msg>
<status status="PASS" starttime="20201030 11:51:29.139" endtime="20201030 11:51:29.141"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.134" endtime="20201030 11:51:29.141"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:29.145" endtime="20201030 11:51:29.164"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.144" endtime="20201030 11:51:29.165"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.142" endtime="20201030 11:51:29.165"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.782" endtime="20201030 11:51:29.166"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.781" endtime="20201030 11:51:29.166"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:29.174" endtime="20201030 11:51:29.194"></status>
</kw>
<msg timestamp="20201030 11:51:29.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:29.173" endtime="20201030 11:51:29.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:29.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:29.196" endtime="20201030 11:51:29.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:29.198" endtime="20201030 11:51:29.200"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.170" endtime="20201030 11:51:29.200"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.168" endtime="20201030 11:51:29.200"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:29.207" endtime="20201030 11:51:29.492"></status>
</kw>
<msg timestamp="20201030 11:51:29.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025142056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025150236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:29.205" endtime="20201030 11:51:29.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:29.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025142056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025150236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:29.496" endtime="20201030 11:51:29.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:29.505" endtime="20201030 11:51:29.506"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.203" endtime="20201030 11:51:29.507"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.201" endtime="20201030 11:51:29.507"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:29.511" level="INFO">${RESULT} = [{'diff': 8.179999999999993e-06}, {'diff': 8.235999999998272e-06}, {'diff': 8.194999999999036e-06}, {'diff': 8.222000000002172e-06}, {'diff': 8.193999999999563e-06}, {'diff': 8.180999999999466e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:51:29.508" endtime="20201030 11:51:29.511"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:29.515" level="INFO">${ACCURACY} = {'diff': [8.179999999999993e-06, 8.235999999998272e-06, 8.194999999999036e-06, 8.222000000002172e-06, 8.193999999999563e-06, 8.180999999999466e-06, 8.250000000001312e-06, 8.193999999999563e-06, 8.1809...</msg>
<status status="PASS" starttime="20201030 11:51:29.512" endtime="20201030 11:51:29.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:29.520" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201030 11:51:29.519" endtime="20201030 11:51:29.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:29.522" level="INFO">VALUE: [8.179999999999993e-06, 8.235999999998272e-06, 8.194999999999036e-06, 8.222000000002172e-06, 8.193999999999563e-06, 8.180999999999466e-06, 8.250000000001312e-06, 8.193999999999563e-06, 8.180999999999466e-06, 8.166999999999897e-06, 8.249999999997842e-06, 8.193999999999563e-06, 8.264000000000882e-06, 8.209000000002076e-06, 8.166000000000423e-06, 8.194999999999036e-06, 8.194999999999036e-06, 8.193999999999563e-06, 8.221999999998703e-06, 8.179999999999993e-06, 8.138000000001283e-06, 8.194999999999036e-06, 8.179999999999993e-06, 8.223000000001646e-06, 8.193999999999563e-06, 8.110999999998147e-06, 8.179999999999993e-06, 8.153000000000327e-06, 8.180999999999466e-06, 8.235999999998272e-06, 8.208000000002602e-06, 8.193999999999563e-06, 8.278000000000452e-06, 8.222000000002172e-06, 8.209000000002076e-06, 8.193999999999563e-06, 8.195000000002506e-06, 8.139000000000757e-06, 8.179999999999993e-06, 8.193999999999563e-06, 8.179999999999993e-06, 8.194999999999036e-06, 8.222000000002172e-06, 8.207999999999133e-06, 8.194000000003032e-06, 8.208000000002602e-06, 8.193999999999563e-06, 8.179999999999993e-06, 8.166999999999897e-06, 8.124999999997717e-06]</msg>
<status status="PASS" starttime="20201030 11:51:29.521" endtime="20201030 11:51:29.526"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.516" endtime="20201030 11:51:29.527"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:29.530" endtime="20201030 11:51:29.550"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.529" endtime="20201030 11:51:29.550"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.528" endtime="20201030 11:51:29.551"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.167" endtime="20201030 11:51:29.551"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.166" endtime="20201030 11:51:29.551"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:29.559" endtime="20201030 11:51:29.576"></status>
</kw>
<msg timestamp="20201030 11:51:29.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:29.558" endtime="20201030 11:51:29.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:29.578" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:29.577" endtime="20201030 11:51:29.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:29.579" endtime="20201030 11:51:29.581"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.555" endtime="20201030 11:51:29.582"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.553" endtime="20201030 11:51:29.582"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:29.588" endtime="20201030 11:51:29.874"></status>
</kw>
<msg timestamp="20201030 11:51:29.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021672236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021680389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:29.587" endtime="20201030 11:51:29.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:29.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021672236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021680389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:29.878" endtime="20201030 11:51:29.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:29.887" endtime="20201030 11:51:29.888"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.584" endtime="20201030 11:51:29.889"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.583" endtime="20201030 11:51:29.889"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:29.893" level="INFO">${RESULT} = [{'diff': 8.153000000000327e-06}, {'diff': 8.180999999999466e-06}, {'diff': 8.193999999999563e-06}, {'diff': 8.221999999998703e-06}, {'diff': 8.236000000001742e-06}, {'diff': 8.193999999999563e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:51:29.890" endtime="20201030 11:51:29.893"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:29.944" level="INFO">${ACCURACY} = {'diff': [8.153000000000327e-06, 8.180999999999466e-06, 8.193999999999563e-06, 8.221999999998703e-06, 8.236000000001742e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.1949...</msg>
<status status="PASS" starttime="20201030 11:51:29.894" endtime="20201030 11:51:29.944"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:29.948" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201030 11:51:29.947" endtime="20201030 11:51:29.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:29.950" level="INFO">VALUE: [8.153000000000327e-06, 8.180999999999466e-06, 8.193999999999563e-06, 8.221999999998703e-06, 8.236000000001742e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.194999999999036e-06, 8.124999999997717e-06, 8.208999999998606e-06, 8.208000000002602e-06, 8.180999999999466e-06, 8.180999999999466e-06, 8.221999999998703e-06, 8.181000000002936e-06, 8.193999999999563e-06, 8.208999999998606e-06, 8.222999999998176e-06, 8.181000000002936e-06, 8.209000000002076e-06, 8.207999999999133e-06, 8.139000000000757e-06, 8.179999999999993e-06, 8.138999999997287e-06, 8.207999999999133e-06, 8.235999999998272e-06, 8.194000000003032e-06, 8.179999999999993e-06, 8.137999999997814e-06, 8.208000000002602e-06, 8.221999999998703e-06, 8.179999999999993e-06, 8.138000000001283e-06, 8.179999999999993e-06, 8.194000000003032e-06, 8.208999999998606e-06, 8.221999999998703e-06, 8.179999999999993e-06, 8.166999999999897e-06, 8.222000000002172e-06, 8.193999999999563e-06, 8.223000000001646e-06, 8.264000000000882e-06, 8.193999999999563e-06, 8.236000000001742e-06, 8.180999999999466e-06, 8.180999999999466e-06, 8.263999999997412e-06, 8.193999999999563e-06]</msg>
<status status="PASS" starttime="20201030 11:51:29.949" endtime="20201030 11:51:29.951"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.944" endtime="20201030 11:51:29.952"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:29.955" endtime="20201030 11:51:29.975"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.954" endtime="20201030 11:51:29.975"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.953" endtime="20201030 11:51:29.976"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.552" endtime="20201030 11:51:29.976"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.551" endtime="20201030 11:51:29.976"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:29.984" endtime="20201030 11:51:30.008"></status>
</kw>
<msg timestamp="20201030 11:51:30.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:29.983" endtime="20201030 11:51:30.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:30.011" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:30.009" endtime="20201030 11:51:30.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:30.012" endtime="20201030 11:51:30.014"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.980" endtime="20201030 11:51:30.014"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.978" endtime="20201030 11:51:30.015"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:30.021" endtime="20201030 11:51:30.306"></status>
</kw>
<msg timestamp="20201030 11:51:30.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023700417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023708611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:30.020" endtime="20201030 11:51:30.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:30.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023700417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023708611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:30.310" endtime="20201030 11:51:30.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:30.319" endtime="20201030 11:51:30.320"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.017" endtime="20201030 11:51:30.321"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.015" endtime="20201030 11:51:30.321"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:30.325" level="INFO">${RESULT} = [{'diff': 8.193999999999563e-06}, {'diff': 8.221999999998703e-06}, {'diff': 8.193999999999563e-06}, {'diff': 8.221999999998703e-06}, {'diff': 8.193999999999563e-06}, {'diff': 8.194999999999036e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:51:30.322" endtime="20201030 11:51:30.326"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:30.329" level="INFO">${ACCURACY} = {'diff': [8.193999999999563e-06, 8.221999999998703e-06, 8.193999999999563e-06, 8.221999999998703e-06, 8.193999999999563e-06, 8.194999999999036e-06, 8.263999999997412e-06, 8.153000000000327e-06, 8.2079...</msg>
<status status="PASS" starttime="20201030 11:51:30.326" endtime="20201030 11:51:30.330"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:30.334" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201030 11:51:30.333" endtime="20201030 11:51:30.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:30.337" level="INFO">VALUE: [8.193999999999563e-06, 8.221999999998703e-06, 8.193999999999563e-06, 8.221999999998703e-06, 8.193999999999563e-06, 8.194999999999036e-06, 8.263999999997412e-06, 8.153000000000327e-06, 8.207999999999133e-06, 8.209000000002076e-06, 8.166999999999897e-06, 8.193999999999563e-06, 8.166999999999897e-06, 8.124999999997717e-06, 8.180999999999466e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.110999999998147e-06, 8.222000000002172e-06, 8.208000000002602e-06, 8.207999999999133e-06, 8.195000000002506e-06, 8.166999999999897e-06, 8.181000000002936e-06, 8.209000000002076e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.278000000000452e-06, 8.223000000001646e-06, 8.207999999999133e-06, 8.236999999997746e-06, 8.221999999998703e-06, 8.180999999999466e-06, 8.180999999999466e-06, 8.179999999999993e-06, 8.180999999999466e-06, 8.263999999997412e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.194999999999036e-06, 8.207999999999133e-06, 8.235999999998272e-06, 8.179999999999993e-06, 8.207999999999133e-06, 8.139000000000757e-06, 8.194000000003032e-06, 8.194999999999036e-06, 8.193999999999563e-06, 8.207999999999133e-06]</msg>
<status status="PASS" starttime="20201030 11:51:30.336" endtime="20201030 11:51:30.338"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.330" endtime="20201030 11:51:30.338"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:30.342" endtime="20201030 11:51:30.361"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.340" endtime="20201030 11:51:30.362"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.339" endtime="20201030 11:51:30.362"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.977" endtime="20201030 11:51:30.362"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.976" endtime="20201030 11:51:30.363"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:30.371" endtime="20201030 11:51:30.390"></status>
</kw>
<msg timestamp="20201030 11:51:30.390" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:30.370" endtime="20201030 11:51:30.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:30.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:30.392" endtime="20201030 11:51:30.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:30.394" endtime="20201030 11:51:30.396"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.367" endtime="20201030 11:51:30.396"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.365" endtime="20201030 11:51:30.396"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:30.403" endtime="20201030 11:51:30.688"></status>
</kw>
<msg timestamp="20201030 11:51:30.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024072056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024080236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:30.401" endtime="20201030 11:51:30.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:30.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024072056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024080236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:30.692" endtime="20201030 11:51:30.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:30.701" endtime="20201030 11:51:30.702"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.399" endtime="20201030 11:51:30.703"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.397" endtime="20201030 11:51:30.703"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:30.707" level="INFO">${RESULT} = [{'diff': 8.179999999999993e-06}, {'diff': 8.193999999999563e-06}, {'diff': 8.179999999999993e-06}, {'diff': 8.096999999998578e-06}, {'diff': 8.194999999999036e-06}, {'diff': 8.166000000000423e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:51:30.704" endtime="20201030 11:51:30.707"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:30.712" level="INFO">${ACCURACY} = {'diff': [8.179999999999993e-06, 8.193999999999563e-06, 8.179999999999993e-06, 8.096999999998578e-06, 8.194999999999036e-06, 8.166000000000423e-06, 8.195000000002506e-06, 8.166999999999897e-06, 8.1949...</msg>
<status status="PASS" starttime="20201030 11:51:30.708" endtime="20201030 11:51:30.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:30.717" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201030 11:51:30.716" endtime="20201030 11:51:30.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:30.719" level="INFO">VALUE: [8.179999999999993e-06, 8.193999999999563e-06, 8.179999999999993e-06, 8.096999999998578e-06, 8.194999999999036e-06, 8.166000000000423e-06, 8.195000000002506e-06, 8.166999999999897e-06, 8.194999999999036e-06, 8.179999999999993e-06, 8.181000000002936e-06, 8.222000000002172e-06, 8.207999999999133e-06, 8.223000000001646e-06, 8.263999999997412e-06, 8.194999999999036e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.222000000002172e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.194999999999036e-06, 8.195000000002506e-06, 8.180999999999466e-06, 8.195000000002506e-06, 8.180999999999466e-06, 8.166000000000423e-06, 8.222000000002172e-06, 8.180999999999466e-06, 8.139000000000757e-06, 8.193999999999563e-06, 8.194999999999036e-06, 8.250000000001312e-06, 8.193999999999563e-06, 8.166999999999897e-06, 8.221999999998703e-06, 8.194999999999036e-06, 8.208999999998606e-06, 8.097000000002047e-06, 8.208999999998606e-06, 8.153000000000327e-06, 8.222000000002172e-06, 8.209000000002076e-06, 8.193999999999563e-06, 8.166999999999897e-06, 8.208000000002602e-06, 8.209000000002076e-06]</msg>
<status status="PASS" starttime="20201030 11:51:30.718" endtime="20201030 11:51:30.720"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.713" endtime="20201030 11:51:30.720"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:30.724" endtime="20201030 11:51:30.744"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.723" endtime="20201030 11:51:30.744"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.721" endtime="20201030 11:51:30.745"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.363" endtime="20201030 11:51:30.745"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.363" endtime="20201030 11:51:30.745"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:30.754" endtime="20201030 11:51:30.771"></status>
</kw>
<msg timestamp="20201030 11:51:30.772" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:30.752" endtime="20201030 11:51:30.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:30.774" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:30.773" endtime="20201030 11:51:30.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:30.775" endtime="20201030 11:51:30.777"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.750" endtime="20201030 11:51:30.778"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.748" endtime="20201030 11:51:30.778"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:30.784" endtime="20201030 11:51:31.071"></status>
</kw>
<msg timestamp="20201030 11:51:31.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023621153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023629347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:30.783" endtime="20201030 11:51:31.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:31.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023621153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023629347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:31.075" endtime="20201030 11:51:31.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:31.083" endtime="20201030 11:51:31.085"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.780" endtime="20201030 11:51:31.085"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.779" endtime="20201030 11:51:31.086"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:31.090" level="INFO">${RESULT} = [{'diff': 8.193999999999563e-06}, {'diff': 8.208999999998606e-06}, {'diff': 8.277999999996982e-06}, {'diff': 8.237000000001216e-06}, {'diff': 8.235999999998272e-06}, {'diff': 8.193999999999563e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:51:31.087" endtime="20201030 11:51:31.090"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:31.094" level="INFO">${ACCURACY} = {'diff': [8.193999999999563e-06, 8.208999999998606e-06, 8.277999999996982e-06, 8.237000000001216e-06, 8.235999999998272e-06, 8.193999999999563e-06, 8.180999999999466e-06, 8.195000000002506e-06, 8.2080...</msg>
<status status="PASS" starttime="20201030 11:51:31.091" endtime="20201030 11:51:31.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:31.098" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201030 11:51:31.097" endtime="20201030 11:51:31.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:31.101" level="INFO">VALUE: [8.193999999999563e-06, 8.208999999998606e-06, 8.277999999996982e-06, 8.237000000001216e-06, 8.235999999998272e-06, 8.193999999999563e-06, 8.180999999999466e-06, 8.195000000002506e-06, 8.208000000002602e-06, 8.208000000002602e-06, 8.222000000002172e-06, 8.209000000002076e-06, 8.207999999999133e-06, 8.179999999999993e-06, 8.208999999998606e-06, 8.207999999999133e-06, 8.166999999999897e-06, 8.209000000002076e-06, 8.180999999999466e-06, 8.180999999999466e-06, 8.179999999999993e-06, 8.179999999999993e-06, 8.167000000003366e-06, 8.166000000000423e-06, 8.193999999999563e-06, 8.221999999998703e-06, 8.193999999999563e-06, 8.179999999999993e-06, 8.194999999999036e-06, 8.222000000002172e-06, 8.222000000002172e-06, 8.138000000001283e-06, 8.193999999999563e-06, 8.194000000003032e-06, 8.193999999999563e-06, 8.193999999999563e-06, 8.221999999998703e-06, 8.221999999998703e-06, 8.180999999999466e-06, 8.221999999998703e-06, 8.208000000002602e-06, 8.221999999998703e-06, 8.166999999999897e-06, 8.221999999998703e-06, 8.180999999999466e-06, 8.193999999999563e-06, 8.194999999999036e-06, 8.194999999999036e-06, 8.193999999999563e-06, 8.166999999999897e-06]</msg>
<status status="PASS" starttime="20201030 11:51:31.099" endtime="20201030 11:51:31.101"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.095" endtime="20201030 11:51:31.102"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:31.106" endtime="20201030 11:51:31.125"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.104" endtime="20201030 11:51:31.126"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.103" endtime="20201030 11:51:31.126"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.746" endtime="20201030 11:51:31.126"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.745" endtime="20201030 11:51:31.126"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:31.135" endtime="20201030 11:51:31.153"></status>
</kw>
<msg timestamp="20201030 11:51:31.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:31.133" endtime="20201030 11:51:31.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:31.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:31.155" endtime="20201030 11:51:31.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:31.157" endtime="20201030 11:51:31.159"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.131" endtime="20201030 11:51:31.159"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.129" endtime="20201030 11:51:31.160"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:31.166" endtime="20201030 11:51:31.453"></status>
</kw>
<msg timestamp="20201030 11:51:31.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024070778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024078958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:31.165" endtime="20201030 11:51:31.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:31.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024070778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024078958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:31.457" endtime="20201030 11:51:31.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:31.466" endtime="20201030 11:51:31.467"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.162" endtime="20201030 11:51:31.468"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.160" endtime="20201030 11:51:31.468"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:31.472" level="INFO">${RESULT} = [{'diff': 8.179999999999993e-06}, {'diff': 8.193999999999563e-06}, {'diff': 8.193999999999563e-06}, {'diff': 8.207999999999133e-06}, {'diff': 8.207999999999133e-06}, {'diff': 8.207999999999133e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:51:31.469" endtime="20201030 11:51:31.473"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:31.477" level="INFO">${ACCURACY} = {'diff': [8.179999999999993e-06, 8.193999999999563e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.235999999998272e-06, 8.222000000002172e-06, 8.2079...</msg>
<status status="PASS" starttime="20201030 11:51:31.473" endtime="20201030 11:51:31.477"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:31.481" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201030 11:51:31.480" endtime="20201030 11:51:31.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:31.484" level="INFO">VALUE: [8.179999999999993e-06, 8.193999999999563e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.235999999998272e-06, 8.222000000002172e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.138999999997287e-06, 8.193999999999563e-06, 8.180999999999466e-06, 8.207999999999133e-06, 8.222000000002172e-06, 8.194999999999036e-06, 8.195000000002506e-06, 8.221999999998703e-06, 8.208999999998606e-06, 8.207999999999133e-06, 8.209000000002076e-06, 8.180999999999466e-06, 8.209000000002076e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.208000000002602e-06, 8.180999999999466e-06, 8.208999999998606e-06, 8.166999999999897e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.181000000002936e-06, 8.139000000000757e-06, 8.222000000002172e-06, 8.153000000000327e-06, 8.222999999998176e-06, 8.166999999999897e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.194999999999036e-06, 8.194999999999036e-06, 8.195000000002506e-06, 8.166000000000423e-06, 8.223000000001646e-06, 8.180999999999466e-06, 8.193999999999563e-06, 8.179999999999993e-06]</msg>
<status status="PASS" starttime="20201030 11:51:31.482" endtime="20201030 11:51:31.485"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.477" endtime="20201030 11:51:31.486"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:31.489" endtime="20201030 11:51:31.509"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.488" endtime="20201030 11:51:31.509"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.487" endtime="20201030 11:51:31.509"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.127" endtime="20201030 11:51:31.510"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.127" endtime="20201030 11:51:31.510"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:31.518" endtime="20201030 11:51:31.536"></status>
</kw>
<msg timestamp="20201030 11:51:31.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:31.517" endtime="20201030 11:51:31.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:31.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:31.537" endtime="20201030 11:51:31.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:31.540" endtime="20201030 11:51:31.541"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.514" endtime="20201030 11:51:31.542"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.512" endtime="20201030 11:51:31.542"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:31.548" endtime="20201030 11:51:31.837"></status>
</kw>
<msg timestamp="20201030 11:51:31.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022250653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022258819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:31.547" endtime="20201030 11:51:31.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:31.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022250653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022258819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:31.842" endtime="20201030 11:51:31.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:31.850" endtime="20201030 11:51:31.852"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.544" endtime="20201030 11:51:31.852"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.543" endtime="20201030 11:51:31.853"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:31.856" level="INFO">${RESULT} = [{'diff': 8.166000000000423e-06}, {'diff': 8.166999999999897e-06}, {'diff': 8.250000000001312e-06}, {'diff': 8.208999999998606e-06}, {'diff': 8.208999999998606e-06}, {'diff': 8.139000000000757e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:51:31.853" endtime="20201030 11:51:31.857"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:31.861" level="INFO">${ACCURACY} = {'diff': [8.166000000000423e-06, 8.166999999999897e-06, 8.250000000001312e-06, 8.208999999998606e-06, 8.208999999998606e-06, 8.139000000000757e-06, 8.179999999999993e-06, 8.222000000002172e-06, 8.2360...</msg>
<status status="PASS" starttime="20201030 11:51:31.857" endtime="20201030 11:51:31.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:31.866" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201030 11:51:31.865" endtime="20201030 11:51:31.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:31.868" level="INFO">VALUE: [8.166000000000423e-06, 8.166999999999897e-06, 8.250000000001312e-06, 8.208999999998606e-06, 8.208999999998606e-06, 8.139000000000757e-06, 8.179999999999993e-06, 8.222000000002172e-06, 8.236000000001742e-06, 8.166999999999897e-06, 8.179999999999993e-06, 8.111000000001617e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.153000000000327e-06, 8.195000000002506e-06, 8.195000000002506e-06, 8.250000000001312e-06, 8.193999999999563e-06, 8.236000000001742e-06, 8.139000000000757e-06, 8.209000000002076e-06, 8.166999999999897e-06, 8.194999999999036e-06, 8.208999999998606e-06, 8.222999999998176e-06, 8.207999999999133e-06, 8.180999999999466e-06, 8.179999999999993e-06, 8.209000000002076e-06, 8.11200000000109e-06, 8.180999999999466e-06, 8.179999999999993e-06, 8.193999999999563e-06, 8.194999999999036e-06, 8.180999999999466e-06, 8.194999999999036e-06, 8.166000000000423e-06, 8.194999999999036e-06, 8.180999999999466e-06, 8.124999999997717e-06, 8.208000000002602e-06, 8.166999999999897e-06, 8.166000000000423e-06, 8.208999999998606e-06, 8.153000000000327e-06, 8.179999999999993e-06, 8.166000000000423e-06, 8.179999999999993e-06, 8.194999999999036e-06]</msg>
<status status="PASS" starttime="20201030 11:51:31.867" endtime="20201030 11:51:31.873"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.862" endtime="20201030 11:51:31.874"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:31.878" endtime="20201030 11:51:31.897"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.876" endtime="20201030 11:51:31.898"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.875" endtime="20201030 11:51:31.898"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.511" endtime="20201030 11:51:31.898"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.510" endtime="20201030 11:51:31.898"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:31.907" endtime="20201030 11:51:31.922"></status>
</kw>
<msg timestamp="20201030 11:51:31.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:31.905" endtime="20201030 11:51:31.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:31.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:31.924" endtime="20201030 11:51:31.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:31.926" endtime="20201030 11:51:31.928"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.903" endtime="20201030 11:51:31.928"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.901" endtime="20201030 11:51:31.929"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:31.935" endtime="20201030 11:51:32.221"></status>
</kw>
<msg timestamp="20201030 11:51:32.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020622403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020630583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:31.934" endtime="20201030 11:51:32.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:32.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020622403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020630583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:32.225" endtime="20201030 11:51:32.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:32.234" endtime="20201030 11:51:32.235"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.931" endtime="20201030 11:51:32.236"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.929" endtime="20201030 11:51:32.236"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:32.240" level="INFO">${RESULT} = [{'diff': 8.179999999999993e-06}, {'diff': 8.194000000003032e-06}, {'diff': 8.193999999999563e-06}, {'diff': 8.180999999999466e-06}, {'diff': 8.208999999998606e-06}, {'diff': 8.153000000000327e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:51:32.237" endtime="20201030 11:51:32.240"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:32.244" level="INFO">${ACCURACY} = {'diff': [8.179999999999993e-06, 8.194000000003032e-06, 8.193999999999563e-06, 8.180999999999466e-06, 8.208999999998606e-06, 8.153000000000327e-06, 8.193999999999563e-06, 8.180999999999466e-06, 8.2079...</msg>
<status status="PASS" starttime="20201030 11:51:32.241" endtime="20201030 11:51:32.244"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:32.249" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201030 11:51:32.248" endtime="20201030 11:51:32.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:32.251" level="INFO">VALUE: [8.179999999999993e-06, 8.194000000003032e-06, 8.193999999999563e-06, 8.180999999999466e-06, 8.208999999998606e-06, 8.153000000000327e-06, 8.193999999999563e-06, 8.180999999999466e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.208999999998606e-06, 8.153000000000327e-06, 8.193999999999563e-06, 8.166999999999897e-06, 8.195000000002506e-06, 8.193999999999563e-06, 8.208000000002602e-06, 8.166000000000423e-06, 8.221999999998703e-06, 8.166000000000423e-06, 8.221999999998703e-06, 8.209000000002076e-06, 8.180999999999466e-06, 8.207999999999133e-06, 8.179999999999993e-06, 8.235999999998272e-06, 8.195000000002506e-06, 8.208000000002602e-06, 8.166999999999897e-06, 8.277999999996982e-06, 8.207999999999133e-06, 8.166999999999897e-06, 8.193999999999563e-06, 8.222999999998176e-06, 8.194999999999036e-06, 8.208000000002602e-06, 8.235999999998272e-06, 8.193999999999563e-06, 8.166999999999897e-06, 8.207999999999133e-06, 8.153000000000327e-06, 8.179999999999993e-06, 8.179999999999993e-06, 8.166999999999897e-06, 8.221999999998703e-06, 8.208999999998606e-06, 8.166999999999897e-06, 8.193999999999563e-06, 8.193999999999563e-06, 8.166000000000423e-06]</msg>
<status status="PASS" starttime="20201030 11:51:32.250" endtime="20201030 11:51:32.252"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.245" endtime="20201030 11:51:32.252"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:32.256" endtime="20201030 11:51:32.275"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.254" endtime="20201030 11:51:32.276"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.253" endtime="20201030 11:51:32.276"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.899" endtime="20201030 11:51:32.276"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.899" endtime="20201030 11:51:32.277"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:32.285" endtime="20201030 11:51:32.305"></status>
</kw>
<msg timestamp="20201030 11:51:32.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:32.284" endtime="20201030 11:51:32.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:32.308" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:32.307" endtime="20201030 11:51:32.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:32.309" endtime="20201030 11:51:32.311"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.281" endtime="20201030 11:51:32.311"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.279" endtime="20201030 11:51:32.312"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:32.318" endtime="20201030 11:51:32.603"></status>
</kw>
<msg timestamp="20201030 11:51:32.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024182583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024190792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:32.317" endtime="20201030 11:51:32.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:32.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024182583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024190792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:32.607" endtime="20201030 11:51:32.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:32.615" endtime="20201030 11:51:32.617"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.314" endtime="20201030 11:51:32.618"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.313" endtime="20201030 11:51:32.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:32.622" level="INFO">${RESULT} = [{'diff': 8.208999999998606e-06}, {'diff': 8.250000000001312e-06}, {'diff': 8.208000000002602e-06}, {'diff': 8.180999999999466e-06}, {'diff': 8.180999999999466e-06}, {'diff': 8.221999999998703e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:51:32.619" endtime="20201030 11:51:32.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:32.626" level="INFO">${ACCURACY} = {'diff': [8.208999999998606e-06, 8.250000000001312e-06, 8.208000000002602e-06, 8.180999999999466e-06, 8.180999999999466e-06, 8.221999999998703e-06, 8.195000000002506e-06, 8.208999999998606e-06, 8.1949...</msg>
<status status="PASS" starttime="20201030 11:51:32.623" endtime="20201030 11:51:32.626"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:32.631" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201030 11:51:32.630" endtime="20201030 11:51:32.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:32.634" level="INFO">VALUE: [8.208999999998606e-06, 8.250000000001312e-06, 8.208000000002602e-06, 8.180999999999466e-06, 8.180999999999466e-06, 8.221999999998703e-06, 8.195000000002506e-06, 8.208999999998606e-06, 8.194999999999036e-06, 8.180999999999466e-06, 8.221999999998703e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.194999999999036e-06, 8.179999999999993e-06, 8.207999999999133e-06, 8.222000000002172e-06, 8.223000000001646e-06, 8.195000000002506e-06, 8.125000000001187e-06, 8.179999999999993e-06, 8.153000000000327e-06, 8.209000000002076e-06, 8.236000000001742e-06, 8.193999999999563e-06, 8.193999999999563e-06, 8.166999999999897e-06, 8.209000000002076e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.193999999999563e-06, 8.180999999999466e-06, 8.181000000002936e-06, 8.167000000003366e-06, 8.166000000000423e-06, 8.180999999999466e-06, 8.222000000002172e-06, 8.193999999999563e-06, 8.208000000002602e-06, 8.179999999999993e-06, 8.207999999999133e-06, 8.153000000000327e-06, 8.180999999999466e-06, 8.139000000000757e-06, 8.208000000002602e-06, 8.208999999998606e-06, 8.179999999999993e-06, 8.207999999999133e-06, 8.166999999999897e-06, 8.195000000002506e-06]</msg>
<status status="PASS" starttime="20201030 11:51:32.632" endtime="20201030 11:51:32.635"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.627" endtime="20201030 11:51:32.635"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:32.639" endtime="20201030 11:51:32.658"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.637" endtime="20201030 11:51:32.659"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.636" endtime="20201030 11:51:32.659"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.278" endtime="20201030 11:51:32.659"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.277" endtime="20201030 11:51:32.659"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:32.668" endtime="20201030 11:51:32.685"></status>
</kw>
<msg timestamp="20201030 11:51:32.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:32.667" endtime="20201030 11:51:32.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:32.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:32.687" endtime="20201030 11:51:32.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:32.689" endtime="20201030 11:51:32.691"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.664" endtime="20201030 11:51:32.691"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.662" endtime="20201030 11:51:32.692"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:32.698" endtime="20201030 11:51:32.984"></status>
</kw>
<msg timestamp="20201030 11:51:32.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023125528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023133708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:32.697" endtime="20201030 11:51:32.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:32.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023125528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023133708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:32.989" endtime="20201030 11:51:32.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:32.997" endtime="20201030 11:51:32.999"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.694" endtime="20201030 11:51:32.999"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.692" endtime="20201030 11:51:32.999"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:33.004" level="INFO">${RESULT} = [{'diff': 8.179999999999993e-06}, {'diff': 8.222000000002172e-06}, {'diff': 8.153000000000327e-06}, {'diff': 8.193999999999563e-06}, {'diff': 8.235999999998272e-06}, {'diff': 8.195000000002506e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:51:33.000" endtime="20201030 11:51:33.004"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:33.008" level="INFO">${ACCURACY} = {'diff': [8.179999999999993e-06, 8.222000000002172e-06, 8.153000000000327e-06, 8.193999999999563e-06, 8.235999999998272e-06, 8.195000000002506e-06, 8.195000000002506e-06, 8.180999999999466e-06, 8.1669...</msg>
<status status="PASS" starttime="20201030 11:51:33.005" endtime="20201030 11:51:33.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:33.013" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201030 11:51:33.012" endtime="20201030 11:51:33.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:33.015" level="INFO">VALUE: [8.179999999999993e-06, 8.222000000002172e-06, 8.153000000000327e-06, 8.193999999999563e-06, 8.235999999998272e-06, 8.195000000002506e-06, 8.195000000002506e-06, 8.180999999999466e-06, 8.166999999999897e-06, 8.221999999998703e-06, 8.180999999999466e-06, 8.179999999999993e-06, 8.166999999999897e-06, 8.180999999999466e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.180999999999466e-06, 8.195000000002506e-06, 8.180999999999466e-06, 8.223000000001646e-06, 8.194999999999036e-06, 8.222000000002172e-06, 8.208000000002602e-06, 8.111000000001617e-06, 8.221999999998703e-06, 8.222999999998176e-06, 8.194999999999036e-06, 8.153000000000327e-06, 8.222000000002172e-06, 8.207999999999133e-06, 8.236000000001742e-06, 8.193999999999563e-06, 8.208000000002602e-06, 8.207999999999133e-06, 8.181000000002936e-06, 8.193999999999563e-06, 8.179999999999993e-06, 8.207999999999133e-06, 8.236000000001742e-06, 8.179999999999993e-06, 8.209000000002076e-06, 8.221999999998703e-06, 8.194999999999036e-06, 8.207999999999133e-06, 8.194999999999036e-06, 8.166999999999897e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.236000000001742e-06, 8.207999999999133e-06]</msg>
<status status="PASS" starttime="20201030 11:51:33.014" endtime="20201030 11:51:33.016"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.009" endtime="20201030 11:51:33.017"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:33.020" endtime="20201030 11:51:33.040"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.019" endtime="20201030 11:51:33.040"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.018" endtime="20201030 11:51:33.041"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.660" endtime="20201030 11:51:33.041"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.660" endtime="20201030 11:51:33.041"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:33.049" endtime="20201030 11:51:33.072"></status>
</kw>
<msg timestamp="20201030 11:51:33.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:33.048" endtime="20201030 11:51:33.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:33.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:33.073" endtime="20201030 11:51:33.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:33.076" endtime="20201030 11:51:33.077"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.045" endtime="20201030 11:51:33.078"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.043" endtime="20201030 11:51:33.078"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:33.084" endtime="20201030 11:51:33.372"></status>
</kw>
<msg timestamp="20201030 11:51:33.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023455361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023463569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:33.083" endtime="20201030 11:51:33.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:33.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023455361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023463569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:33.376" endtime="20201030 11:51:33.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:33.385" endtime="20201030 11:51:33.386"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.080" endtime="20201030 11:51:33.387"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.079" endtime="20201030 11:51:33.387"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:33.391" level="INFO">${RESULT} = [{'diff': 8.207999999999133e-06}, {'diff': 8.167000000003366e-06}, {'diff': 8.193999999999563e-06}, {'diff': 8.207999999999133e-06}, {'diff': 8.193999999999563e-06}, {'diff': 8.193999999999563e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:51:33.388" endtime="20201030 11:51:33.391"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:33.395" level="INFO">${ACCURACY} = {'diff': [8.207999999999133e-06, 8.167000000003366e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.208999999998606e-06, 8.1109...</msg>
<status status="PASS" starttime="20201030 11:51:33.392" endtime="20201030 11:51:33.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:33.400" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201030 11:51:33.399" endtime="20201030 11:51:33.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:33.402" level="INFO">VALUE: [8.207999999999133e-06, 8.167000000003366e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.208999999998606e-06, 8.110999999998147e-06, 8.250000000001312e-06, 8.222000000002172e-06, 8.166000000000423e-06, 8.193999999999563e-06, 8.264000000000882e-06, 8.222000000002172e-06, 8.194000000003032e-06, 8.180999999999466e-06, 8.139000000000757e-06, 8.166999999999897e-06, 8.194999999999036e-06, 8.194000000003032e-06, 8.221999999998703e-06, 8.235999999998272e-06, 8.193999999999563e-06, 8.208999999998606e-06, 8.153000000000327e-06, 8.179999999999993e-06, 8.193999999999563e-06, 8.193999999999563e-06, 8.209000000002076e-06, 8.193999999999563e-06, 8.195000000002506e-06, 8.151999999997384e-06, 8.207999999999133e-06, 8.209000000002076e-06, 8.207999999999133e-06, 8.166000000000423e-06, 8.139000000000757e-06, 8.193999999999563e-06, 8.193999999999563e-06, 8.208000000002602e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.153000000000327e-06, 8.166000000000423e-06, 8.222000000002172e-06, 8.250000000001312e-06, 8.179999999999993e-06]</msg>
<status status="PASS" starttime="20201030 11:51:33.401" endtime="20201030 11:51:33.403"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.396" endtime="20201030 11:51:33.403"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:33.407" endtime="20201030 11:51:33.426"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.405" endtime="20201030 11:51:33.427"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.404" endtime="20201030 11:51:33.427"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.042" endtime="20201030 11:51:33.427"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.041" endtime="20201030 11:51:33.428"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:33.436" endtime="20201030 11:51:33.455"></status>
</kw>
<msg timestamp="20201030 11:51:33.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:33.435" endtime="20201030 11:51:33.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:33.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:33.456" endtime="20201030 11:51:33.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:33.459" endtime="20201030 11:51:33.460"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.432" endtime="20201030 11:51:33.461"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.430" endtime="20201030 11:51:33.461"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:33.468" endtime="20201030 11:51:33.753"></status>
</kw>
<msg timestamp="20201030 11:51:33.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023636139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023644333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:33.466" endtime="20201030 11:51:33.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:33.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023636139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023644333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:33.757" endtime="20201030 11:51:33.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:33.765" endtime="20201030 11:51:33.767"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.464" endtime="20201030 11:51:33.767"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.462" endtime="20201030 11:51:33.768"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:33.772" level="INFO">${RESULT} = [{'diff': 8.193999999999563e-06}, {'diff': 8.207999999999133e-06}, {'diff': 8.222000000002172e-06}, {'diff': 8.208000000002602e-06}, {'diff': 8.193999999999563e-06}, {'diff': 8.179999999999993e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:51:33.769" endtime="20201030 11:51:33.772"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:33.776" level="INFO">${ACCURACY} = {'diff': [8.193999999999563e-06, 8.207999999999133e-06, 8.222000000002172e-06, 8.208000000002602e-06, 8.193999999999563e-06, 8.179999999999993e-06, 8.221999999998703e-06, 8.180999999999466e-06, 8.1809...</msg>
<status status="PASS" starttime="20201030 11:51:33.773" endtime="20201030 11:51:33.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:33.781" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201030 11:51:33.780" endtime="20201030 11:51:33.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:33.783" level="INFO">VALUE: [8.193999999999563e-06, 8.207999999999133e-06, 8.222000000002172e-06, 8.208000000002602e-06, 8.193999999999563e-06, 8.179999999999993e-06, 8.221999999998703e-06, 8.180999999999466e-06, 8.180999999999466e-06, 8.237000000001216e-06, 8.153000000000327e-06, 8.180999999999466e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.222000000002172e-06, 8.194999999999036e-06, 8.193999999999563e-06, 8.180999999999466e-06, 8.179999999999993e-06, 8.194999999999036e-06, 8.209000000002076e-06, 8.111000000001617e-06, 8.194999999999036e-06, 8.209000000002076e-06, 8.222000000002172e-06, 8.222999999998176e-06, 8.193999999999563e-06, 8.179999999999993e-06, 8.194999999999036e-06, 8.194000000003032e-06, 8.152000000000853e-06, 8.207999999999133e-06, 8.195000000002506e-06, 8.207999999999133e-06, 8.153000000000327e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.180999999999466e-06, 8.221999999998703e-06, 8.180999999999466e-06, 8.208000000002602e-06, 8.180999999999466e-06, 8.179999999999993e-06, 8.166999999999897e-06, 8.221999999998703e-06, 8.180999999999466e-06, 8.208999999998606e-06]</msg>
<status status="PASS" starttime="20201030 11:51:33.782" endtime="20201030 11:51:33.785"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.777" endtime="20201030 11:51:33.786"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:33.790" endtime="20201030 11:51:33.809"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.788" endtime="20201030 11:51:33.810"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.787" endtime="20201030 11:51:33.810"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.429" endtime="20201030 11:51:33.810"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.428" endtime="20201030 11:51:33.811"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:33.819" endtime="20201030 11:51:33.836"></status>
</kw>
<msg timestamp="20201030 11:51:33.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:33.818" endtime="20201030 11:51:33.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:33.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:33.838" endtime="20201030 11:51:33.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:33.840" endtime="20201030 11:51:33.842"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.815" endtime="20201030 11:51:33.842"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.813" endtime="20201030 11:51:33.843"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:33.849" endtime="20201030 11:51:34.135"></status>
</kw>
<msg timestamp="20201030 11:51:34.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022618083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022626278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:33.848" endtime="20201030 11:51:34.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:34.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022618083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022626278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:34.139" endtime="20201030 11:51:34.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:34.148" endtime="20201030 11:51:34.149"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.845" endtime="20201030 11:51:34.150"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.844" endtime="20201030 11:51:34.150"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:34.154" level="INFO">${RESULT} = [{'diff': 8.194999999999036e-06}, {'diff': 8.153000000000327e-06}, {'diff': 8.221999999998703e-06}, {'diff': 8.208000000002602e-06}, {'diff': 8.208000000002602e-06}, {'diff': 8.180999999999466e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:51:34.151" endtime="20201030 11:51:34.155"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:34.159" level="INFO">${ACCURACY} = {'diff': [8.194999999999036e-06, 8.153000000000327e-06, 8.221999999998703e-06, 8.208000000002602e-06, 8.208000000002602e-06, 8.180999999999466e-06, 8.193999999999563e-06, 8.180999999999466e-06, 8.1799...</msg>
<status status="PASS" starttime="20201030 11:51:34.155" endtime="20201030 11:51:34.159"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:34.164" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201030 11:51:34.163" endtime="20201030 11:51:34.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:34.166" level="INFO">VALUE: [8.194999999999036e-06, 8.153000000000327e-06, 8.221999999998703e-06, 8.208000000002602e-06, 8.208000000002602e-06, 8.180999999999466e-06, 8.193999999999563e-06, 8.180999999999466e-06, 8.179999999999993e-06, 8.194999999999036e-06, 8.125000000001187e-06, 8.193999999999563e-06, 8.221999999998703e-06, 8.180999999999466e-06, 8.207999999999133e-06, 8.209000000002076e-06, 8.195000000002506e-06, 8.195000000002506e-06, 8.193999999999563e-06, 8.179999999999993e-06, 8.138999999997287e-06, 8.221999999998703e-06, 8.221999999998703e-06, 8.207999999999133e-06, 8.180999999999466e-06, 8.111000000001617e-06, 8.180999999999466e-06, 8.194999999999036e-06, 8.193999999999563e-06, 8.236000000001742e-06, 8.194999999999036e-06, 8.221999999998703e-06, 8.180999999999466e-06, 8.194999999999036e-06, 8.181000000002936e-06, 8.208999999998606e-06, 8.209000000002076e-06, 8.222999999998176e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.194999999999036e-06, 8.166999999999897e-06, 8.125000000001187e-06, 8.193999999999563e-06, 8.179999999999993e-06, 8.125000000001187e-06, 8.153000000000327e-06, 8.221999999998703e-06, 8.195000000002506e-06, 8.263000000001408e-06]</msg>
<status status="PASS" starttime="20201030 11:51:34.165" endtime="20201030 11:51:34.167"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.160" endtime="20201030 11:51:34.168"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:34.172" endtime="20201030 11:51:34.192"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.170" endtime="20201030 11:51:34.192"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.169" endtime="20201030 11:51:34.193"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.812" endtime="20201030 11:51:34.193"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.811" endtime="20201030 11:51:34.193"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:34.202" endtime="20201030 11:51:34.222"></status>
</kw>
<msg timestamp="20201030 11:51:34.223" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:34.200" endtime="20201030 11:51:34.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:34.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:34.224" endtime="20201030 11:51:34.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:34.226" endtime="20201030 11:51:34.228"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.198" endtime="20201030 11:51:34.228"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.196" endtime="20201030 11:51:34.229"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:34.235" endtime="20201030 11:51:34.522"></status>
</kw>
<msg timestamp="20201030 11:51:34.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021787806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021795972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:34.234" endtime="20201030 11:51:34.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:34.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021787806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021795972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:34.527" endtime="20201030 11:51:34.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:34.536" endtime="20201030 11:51:34.538"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.231" endtime="20201030 11:51:34.538"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.229" endtime="20201030 11:51:34.539"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:34.543" level="INFO">${RESULT} = [{'diff': 8.166000000000423e-06}, {'diff': 8.221999999998703e-06}, {'diff': 8.180999999999466e-06}, {'diff': 8.152000000000853e-06}, {'diff': 8.264000000000882e-06}, {'diff': 8.195000000002506e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:51:34.540" endtime="20201030 11:51:34.543"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:34.547" level="INFO">${ACCURACY} = {'diff': [8.166000000000423e-06, 8.221999999998703e-06, 8.180999999999466e-06, 8.152000000000853e-06, 8.264000000000882e-06, 8.195000000002506e-06, 8.195000000002506e-06, 8.111000000001617e-06, 8.2079...</msg>
<status status="PASS" starttime="20201030 11:51:34.544" endtime="20201030 11:51:34.547"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:34.551" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201030 11:51:34.550" endtime="20201030 11:51:34.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:34.554" level="INFO">VALUE: [8.166000000000423e-06, 8.221999999998703e-06, 8.180999999999466e-06, 8.152000000000853e-06, 8.264000000000882e-06, 8.195000000002506e-06, 8.195000000002506e-06, 8.111000000001617e-06, 8.207999999999133e-06, 8.194999999999036e-06, 8.179999999999993e-06, 8.194999999999036e-06, 8.208999999998606e-06, 8.235999999998272e-06, 8.194999999999036e-06, 8.222999999998176e-06, 8.207999999999133e-06, 8.179999999999993e-06, 8.166999999999897e-06, 8.153000000000327e-06, 8.209000000002076e-06, 8.166999999999897e-06, 8.139000000000757e-06, 8.193999999999563e-06, 8.193999999999563e-06, 8.166999999999897e-06, 8.194000000003032e-06, 8.235999999998272e-06, 8.180999999999466e-06, 8.153000000000327e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.209000000002076e-06, 8.153000000000327e-06, 8.180999999999466e-06, 8.193999999999563e-06, 8.208999999998606e-06, 8.208999999998606e-06, 8.194999999999036e-06, 8.208999999998606e-06, 8.193999999999563e-06, 8.166999999999897e-06, 8.195000000002506e-06, 8.193999999999563e-06, 8.194999999999036e-06, 8.179999999999993e-06, 8.207999999999133e-06, 8.166999999999897e-06, 8.223000000001646e-06, 8.222000000002172e-06]</msg>
<status status="PASS" starttime="20201030 11:51:34.552" endtime="20201030 11:51:34.555"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.548" endtime="20201030 11:51:34.555"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:34.559" endtime="20201030 11:51:34.578"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.557" endtime="20201030 11:51:34.579"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.556" endtime="20201030 11:51:34.579"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.194" endtime="20201030 11:51:34.579"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.193" endtime="20201030 11:51:34.579"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:34.588" endtime="20201030 11:51:34.606"></status>
</kw>
<msg timestamp="20201030 11:51:34.606" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:34.586" endtime="20201030 11:51:34.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:34.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:34.607" endtime="20201030 11:51:34.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:34.610" endtime="20201030 11:51:34.611"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.584" endtime="20201030 11:51:34.612"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.582" endtime="20201030 11:51:34.612"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:34.619" endtime="20201030 11:51:34.904"></status>
</kw>
<msg timestamp="20201030 11:51:34.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022433458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022441639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:34.617" endtime="20201030 11:51:34.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:34.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022433458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022441639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:34.908" endtime="20201030 11:51:34.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:34.917" endtime="20201030 11:51:34.918"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.615" endtime="20201030 11:51:34.919"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.613" endtime="20201030 11:51:34.919"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:34.923" level="INFO">${RESULT} = [{'diff': 8.180999999999466e-06}, {'diff': 8.209000000002076e-06}, {'diff': 8.207999999999133e-06}, {'diff': 8.194999999999036e-06}, {'diff': 8.237000000001216e-06}, {'diff': 8.193999999999563e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:51:34.920" endtime="20201030 11:51:34.924"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:34.928" level="INFO">${ACCURACY} = {'diff': [8.180999999999466e-06, 8.209000000002076e-06, 8.207999999999133e-06, 8.194999999999036e-06, 8.237000000001216e-06, 8.193999999999563e-06, 8.110999999998147e-06, 8.208999999998606e-06, 8.1939...</msg>
<status status="PASS" starttime="20201030 11:51:34.924" endtime="20201030 11:51:34.928"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:34.932" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201030 11:51:34.931" endtime="20201030 11:51:34.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:34.934" level="INFO">VALUE: [8.180999999999466e-06, 8.209000000002076e-06, 8.207999999999133e-06, 8.194999999999036e-06, 8.237000000001216e-06, 8.193999999999563e-06, 8.110999999998147e-06, 8.208999999998606e-06, 8.193999999999563e-06, 8.221999999998703e-06, 8.179999999999993e-06, 8.278000000000452e-06, 8.180999999999466e-06, 8.180999999999466e-06, 8.125000000001187e-06, 8.179999999999993e-06, 8.179999999999993e-06, 8.181000000002936e-06, 8.166000000000423e-06, 8.221999999998703e-06, 8.222000000002172e-06, 8.165999999996953e-06, 8.180999999999466e-06, 8.193999999999563e-06, 8.166000000000423e-06, 8.195000000002506e-06, 8.152999999996857e-06, 8.236000000001742e-06, 8.209000000002076e-06, 8.235999999998272e-06, 8.153000000000327e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.138000000001283e-06, 8.137999999997814e-06, 8.110999999998147e-06, 8.208000000002602e-06, 8.236000000001742e-06, 8.166999999999897e-06, 8.222999999998176e-06, 8.222000000002172e-06, 8.180999999999466e-06, 8.152999999996857e-06, 8.207999999999133e-06, 8.180999999999466e-06, 8.179999999999993e-06, 8.193999999999563e-06, 8.208999999998606e-06, 8.221999999998703e-06, 8.222000000002172e-06]</msg>
<status status="PASS" starttime="20201030 11:51:34.933" endtime="20201030 11:51:34.936"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.928" endtime="20201030 11:51:34.937"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:34.940" endtime="20201030 11:51:34.960"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.939" endtime="20201030 11:51:34.960"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.938" endtime="20201030 11:51:34.960"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.580" endtime="20201030 11:51:34.961"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.580" endtime="20201030 11:51:34.961"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:34.969" endtime="20201030 11:51:34.987"></status>
</kw>
<msg timestamp="20201030 11:51:34.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:34.968" endtime="20201030 11:51:34.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:34.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:34.989" endtime="20201030 11:51:34.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:34.991" endtime="20201030 11:51:34.993"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.965" endtime="20201030 11:51:34.993"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.963" endtime="20201030 11:51:34.994"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:35.000" endtime="20201030 11:51:35.285"></status>
</kw>
<msg timestamp="20201030 11:51:35.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022724903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022733125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:34.998" endtime="20201030 11:51:35.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:35.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022724903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022733125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:35.289" endtime="20201030 11:51:35.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:35.298" endtime="20201030 11:51:35.299"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.996" endtime="20201030 11:51:35.300"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.994" endtime="20201030 11:51:35.300"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:35.304" level="INFO">${RESULT} = [{'diff': 8.221999999998703e-06}, {'diff': 8.207999999999133e-06}, {'diff': 8.166999999999897e-06}, {'diff': 8.153000000000327e-06}, {'diff': 8.209000000002076e-06}, {'diff': 8.181000000002936e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:51:35.301" endtime="20201030 11:51:35.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:35.309" level="INFO">${ACCURACY} = {'diff': [8.221999999998703e-06, 8.207999999999133e-06, 8.166999999999897e-06, 8.153000000000327e-06, 8.209000000002076e-06, 8.181000000002936e-06, 8.222000000002172e-06, 8.193999999999563e-06, 8.1949...</msg>
<status status="PASS" starttime="20201030 11:51:35.305" endtime="20201030 11:51:35.309"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:35.314" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201030 11:51:35.313" endtime="20201030 11:51:35.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:35.316" level="INFO">VALUE: [8.221999999998703e-06, 8.207999999999133e-06, 8.166999999999897e-06, 8.153000000000327e-06, 8.209000000002076e-06, 8.181000000002936e-06, 8.222000000002172e-06, 8.193999999999563e-06, 8.194999999999036e-06, 8.166999999999897e-06, 8.223000000001646e-06, 8.193999999999563e-06, 8.139000000000757e-06, 8.208999999998606e-06, 8.180999999999466e-06, 8.181000000002936e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.194999999999036e-06, 8.193999999999563e-06, 8.194999999999036e-06, 8.166999999999897e-06, 8.179999999999993e-06, 8.236000000001742e-06, 8.193999999999563e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.291000000000548e-06, 8.208999999998606e-06, 8.180999999999466e-06, 8.152000000000853e-06, 8.207999999999133e-06, 8.179999999999993e-06, 8.179999999999993e-06, 8.166000000000423e-06, 8.222999999998176e-06, 8.179999999999993e-06, 8.208999999998606e-06, 8.207999999999133e-06, 8.208000000002602e-06, 8.194999999999036e-06, 8.194999999999036e-06, 8.193999999999563e-06, 8.193999999999563e-06, 8.166000000000423e-06, 8.209000000002076e-06, 8.194999999999036e-06, 8.193999999999563e-06, 8.166999999999897e-06]</msg>
<status status="PASS" starttime="20201030 11:51:35.315" endtime="20201030 11:51:35.317"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.310" endtime="20201030 11:51:35.317"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:35.321" endtime="20201030 11:51:35.340"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.319" endtime="20201030 11:51:35.341"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.318" endtime="20201030 11:51:35.341"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.962" endtime="20201030 11:51:35.342"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.961" endtime="20201030 11:51:35.342"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:35.350" endtime="20201030 11:51:35.369"></status>
</kw>
<msg timestamp="20201030 11:51:35.370" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:35.349" endtime="20201030 11:51:35.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:35.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:35.371" endtime="20201030 11:51:35.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:35.373" endtime="20201030 11:51:35.375"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.346" endtime="20201030 11:51:35.375"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.344" endtime="20201030 11:51:35.376"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:35.382" endtime="20201030 11:51:35.670"></status>
</kw>
<msg timestamp="20201030 11:51:35.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023746667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023754847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:35.381" endtime="20201030 11:51:35.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:35.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023746667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023754847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:35.674" endtime="20201030 11:51:35.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:35.683" endtime="20201030 11:51:35.684"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.378" endtime="20201030 11:51:35.685"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.376" endtime="20201030 11:51:35.685"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:35.689" level="INFO">${RESULT} = [{'diff': 8.179999999999993e-06}, {'diff': 8.207999999999133e-06}, {'diff': 8.193999999999563e-06}, {'diff': 8.221999999998703e-06}, {'diff': 8.208999999998606e-06}, {'diff': 8.207999999999133e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:51:35.686" endtime="20201030 11:51:35.689"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:35.693" level="INFO">${ACCURACY} = {'diff': [8.179999999999993e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.221999999998703e-06, 8.208999999998606e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.153000000000327e-06, 8.2079...</msg>
<status status="PASS" starttime="20201030 11:51:35.690" endtime="20201030 11:51:35.693"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:35.698" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201030 11:51:35.697" endtime="20201030 11:51:35.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:35.700" level="INFO">VALUE: [8.179999999999993e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.221999999998703e-06, 8.208999999998606e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.153000000000327e-06, 8.207999999999133e-06, 8.194999999999036e-06, 8.208000000002602e-06, 8.221999999998703e-06, 8.207999999999133e-06, 8.209000000002076e-06, 8.222000000002172e-06, 8.207999999999133e-06, 8.165999999996953e-06, 8.195000000002506e-06, 8.208000000002602e-06, 8.194999999999036e-06, 8.207999999999133e-06, 8.222999999998176e-06, 8.222000000002172e-06, 8.249999999997842e-06, 8.208000000002602e-06, 8.179999999999993e-06, 8.166999999999897e-06, 8.194999999999036e-06, 8.278000000000452e-06, 8.195000000002506e-06, 8.221999999998703e-06, 8.166999999999897e-06, 8.221999999998703e-06, 8.151999999997384e-06, 8.096999999998578e-06, 8.180999999999466e-06, 8.208999999998606e-06, 8.166999999999897e-06, 8.194999999999036e-06, 8.221999999998703e-06, 8.221999999998703e-06, 8.180999999999466e-06, 8.264000000000882e-06, 8.194000000003032e-06, 8.250000000001312e-06, 8.222000000002172e-06, 8.179999999999993e-06, 8.221999999998703e-06, 8.208999999998606e-06, 8.166000000000423e-06]</msg>
<status status="PASS" starttime="20201030 11:51:35.699" endtime="20201030 11:51:35.701"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.694" endtime="20201030 11:51:35.701"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:35.705" endtime="20201030 11:51:35.724"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.703" endtime="20201030 11:51:35.725"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.702" endtime="20201030 11:51:35.725"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.343" endtime="20201030 11:51:35.725"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.342" endtime="20201030 11:51:35.726"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:35.734" endtime="20201030 11:51:35.750"></status>
</kw>
<msg timestamp="20201030 11:51:35.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:35.733" endtime="20201030 11:51:35.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:35.753" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:35.752" endtime="20201030 11:51:35.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:35.754" endtime="20201030 11:51:35.756"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.730" endtime="20201030 11:51:35.756"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.728" endtime="20201030 11:51:35.757"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:35.763" endtime="20201030 11:51:36.048"></status>
</kw>
<msg timestamp="20201030 11:51:36.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021605722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021613889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:35.762" endtime="20201030 11:51:36.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:36.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021605722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021613889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:36.053" endtime="20201030 11:51:36.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:36.061" endtime="20201030 11:51:36.062"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.759" endtime="20201030 11:51:36.063"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.757" endtime="20201030 11:51:36.063"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:36.067" level="INFO">${RESULT} = [{'diff': 8.166999999999897e-06}, {'diff': 8.221999999998703e-06}, {'diff': 8.181000000002936e-06}, {'diff': 8.221999999998703e-06}, {'diff': 8.193999999999563e-06}, {'diff': 8.152000000000853e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:51:36.064" endtime="20201030 11:51:36.068"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:36.072" level="INFO">${ACCURACY} = {'diff': [8.166999999999897e-06, 8.221999999998703e-06, 8.181000000002936e-06, 8.221999999998703e-06, 8.193999999999563e-06, 8.152000000000853e-06, 8.166000000000423e-06, 8.221999999998703e-06, 8.1810...</msg>
<status status="PASS" starttime="20201030 11:51:36.068" endtime="20201030 11:51:36.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:36.076" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201030 11:51:36.075" endtime="20201030 11:51:36.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:36.079" level="INFO">VALUE: [8.166999999999897e-06, 8.221999999998703e-06, 8.181000000002936e-06, 8.221999999998703e-06, 8.193999999999563e-06, 8.152000000000853e-06, 8.166000000000423e-06, 8.221999999998703e-06, 8.181000000002936e-06, 8.166999999999897e-06, 8.264000000000882e-06, 8.096999999998578e-06, 8.166999999999897e-06, 8.179999999999993e-06, 8.193999999999563e-06, 8.181000000002936e-06, 8.152000000000853e-06, 8.194999999999036e-06, 8.194999999999036e-06, 8.193999999999563e-06, 8.208999999998606e-06, 8.125000000001187e-06, 8.180999999999466e-06, 8.193999999999563e-06, 8.208000000002602e-06, 8.263999999997412e-06, 8.180999999999466e-06, 8.166000000000423e-06, 8.194999999999036e-06, 8.179999999999993e-06, 8.208999999998606e-06, 8.221999999998703e-06, 8.179999999999993e-06, 8.194999999999036e-06, 8.193999999999563e-06, 8.208000000002602e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.194999999999036e-06, 8.195000000002506e-06, 8.124999999997717e-06, 8.193999999999563e-06, 8.194999999999036e-06, 8.194999999999036e-06, 8.167000000003366e-06, 8.179999999999993e-06, 8.236000000001742e-06, 8.222999999998176e-06, 8.208000000002602e-06, 8.207999999999133e-06]</msg>
<status status="PASS" starttime="20201030 11:51:36.077" endtime="20201030 11:51:36.080"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.072" endtime="20201030 11:51:36.081"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:36.084" endtime="20201030 11:51:36.104"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.083" endtime="20201030 11:51:36.104"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.082" endtime="20201030 11:51:36.105"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.726" endtime="20201030 11:51:36.105"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.726" endtime="20201030 11:51:36.105"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:36.113" endtime="20201030 11:51:36.133"></status>
</kw>
<msg timestamp="20201030 11:51:36.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:36.112" endtime="20201030 11:51:36.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:36.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:36.134" endtime="20201030 11:51:36.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:36.137" endtime="20201030 11:51:36.138"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.109" endtime="20201030 11:51:36.139"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.107" endtime="20201030 11:51:36.139"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:36.146" endtime="20201030 11:51:36.432"></status>
</kw>
<msg timestamp="20201030 11:51:36.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024062306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024070514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:36.144" endtime="20201030 11:51:36.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:36.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024062306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024070514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:36.436" endtime="20201030 11:51:36.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:36.444" endtime="20201030 11:51:36.446"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.142" endtime="20201030 11:51:36.446"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.140" endtime="20201030 11:51:36.447"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:36.450" level="INFO">${RESULT} = [{'diff': 8.208000000002602e-06}, {'diff': 8.207999999999133e-06}, {'diff': 8.193999999999563e-06}, {'diff': 8.166000000000423e-06}, {'diff': 8.180999999999466e-06}, {'diff': 8.209000000002076e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:51:36.447" endtime="20201030 11:51:36.451"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:36.455" level="INFO">${ACCURACY} = {'diff': [8.208000000002602e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.166000000000423e-06, 8.180999999999466e-06, 8.209000000002076e-06, 8.223000000001646e-06, 8.222000000002172e-06, 8.2079...</msg>
<status status="PASS" starttime="20201030 11:51:36.451" endtime="20201030 11:51:36.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:36.460" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201030 11:51:36.459" endtime="20201030 11:51:36.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:36.462" level="INFO">VALUE: [8.208000000002602e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.166000000000423e-06, 8.180999999999466e-06, 8.209000000002076e-06, 8.223000000001646e-06, 8.222000000002172e-06, 8.207999999999133e-06, 8.194000000003032e-06, 8.236000000001742e-06, 8.208999999998606e-06, 8.208999999998606e-06, 8.222000000002172e-06, 8.179999999999993e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.195000000002506e-06, 8.139000000000757e-06, 8.180999999999466e-06, 8.194999999999036e-06, 8.194999999999036e-06, 8.223000000001646e-06, 8.208000000002602e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.110999999998147e-06, 8.207999999999133e-06, 8.208999999998606e-06, 8.208000000002602e-06, 8.207999999999133e-06, 8.208999999998606e-06, 8.194999999999036e-06, 8.166000000000423e-06, 8.179999999999993e-06, 8.222000000002172e-06, 8.207999999999133e-06, 8.194999999999036e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.179999999999993e-06, 8.208000000002602e-06, 8.208999999998606e-06, 8.207999999999133e-06, 8.181000000002936e-06, 8.167000000003366e-06, 8.193999999999563e-06, 8.249999999997842e-06, 8.194999999999036e-06]</msg>
<status status="PASS" starttime="20201030 11:51:36.461" endtime="20201030 11:51:36.463"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.456" endtime="20201030 11:51:36.464"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:36.467" endtime="20201030 11:51:36.487"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.466" endtime="20201030 11:51:36.487"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.465" endtime="20201030 11:51:36.488"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.106" endtime="20201030 11:51:36.488"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.105" endtime="20201030 11:51:36.488"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:36.497" endtime="20201030 11:51:36.516"></status>
</kw>
<msg timestamp="20201030 11:51:36.517" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:36.495" endtime="20201030 11:51:36.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:36.519" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:36.518" endtime="20201030 11:51:36.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:36.520" endtime="20201030 11:51:36.522"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.493" endtime="20201030 11:51:36.522"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.490" endtime="20201030 11:51:36.523"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:36.529" endtime="20201030 11:51:36.818"></status>
</kw>
<msg timestamp="20201030 11:51:36.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022798181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022806403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:36.528" endtime="20201030 11:51:36.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:36.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022798181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022806403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:36.822" endtime="20201030 11:51:36.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:36.831" endtime="20201030 11:51:36.833"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.525" endtime="20201030 11:51:36.834"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.523" endtime="20201030 11:51:36.834"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:36.838" level="INFO">${RESULT} = [{'diff': 8.221999999998703e-06}, {'diff': 8.194000000003032e-06}, {'diff': 8.193999999999563e-06}, {'diff': 8.207999999999133e-06}, {'diff': 8.235999999998272e-06}, {'diff': 8.193999999999563e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:51:36.835" endtime="20201030 11:51:36.839"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:36.843" level="INFO">${ACCURACY} = {'diff': [8.221999999998703e-06, 8.194000000003032e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.235999999998272e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.1809...</msg>
<status status="PASS" starttime="20201030 11:51:36.839" endtime="20201030 11:51:36.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:36.847" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201030 11:51:36.846" endtime="20201030 11:51:36.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:36.849" level="INFO">VALUE: [8.221999999998703e-06, 8.194000000003032e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.235999999998272e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.180999999999466e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.235999999998272e-06, 8.180999999999466e-06, 8.180999999999466e-06, 8.208999999998606e-06, 8.221999999998703e-06, 8.194999999999036e-06, 8.209000000002076e-06, 8.166000000000423e-06, 8.166000000000423e-06, 8.193999999999563e-06, 8.166000000000423e-06, 8.180999999999466e-06, 8.166000000000423e-06, 8.152000000000853e-06, 8.166000000000423e-06, 8.194999999999036e-06, 8.209000000002076e-06, 8.194999999999036e-06, 8.221999999998703e-06, 8.221999999998703e-06, 8.180999999999466e-06, 8.194999999999036e-06, 8.208000000002602e-06, 8.207999999999133e-06, 8.180999999999466e-06, 8.181000000002936e-06, 8.139000000000757e-06, 8.180999999999466e-06, 8.207999999999133e-06, 8.209000000002076e-06, 8.207999999999133e-06, 8.181000000002936e-06, 8.166999999999897e-06, 8.235999999998272e-06, 8.207999999999133e-06, 8.179999999999993e-06, 8.166000000000423e-06, 8.139000000000757e-06, 8.221999999998703e-06]</msg>
<status status="PASS" starttime="20201030 11:51:36.848" endtime="20201030 11:51:36.850"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.843" endtime="20201030 11:51:36.851"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:36.854" endtime="20201030 11:51:36.874"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.853" endtime="20201030 11:51:36.874"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.852" endtime="20201030 11:51:36.875"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.489" endtime="20201030 11:51:36.875"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.488" endtime="20201030 11:51:36.875"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:36.884" endtime="20201030 11:51:36.901"></status>
</kw>
<msg timestamp="20201030 11:51:36.901" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:36.882" endtime="20201030 11:51:36.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:36.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:36.903" endtime="20201030 11:51:36.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:36.905" endtime="20201030 11:51:36.907"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.880" endtime="20201030 11:51:36.907"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.877" endtime="20201030 11:51:36.907"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:36.914" endtime="20201030 11:51:37.200"></status>
</kw>
<msg timestamp="20201030 11:51:37.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022607569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022615792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:36.912" endtime="20201030 11:51:37.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:37.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022607569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022615792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:37.204" endtime="20201030 11:51:37.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:37.212" endtime="20201030 11:51:37.214"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.910" endtime="20201030 11:51:37.214"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.908" endtime="20201030 11:51:37.215"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:37.219" level="INFO">${RESULT} = [{'diff': 8.222999999998176e-06}, {'diff': 8.166999999999897e-06}, {'diff': 8.194999999999036e-06}, {'diff': 8.166999999999897e-06}, {'diff': 8.180999999999466e-06}, {'diff': 8.179999999999993e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:51:37.215" endtime="20201030 11:51:37.219"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:37.223" level="INFO">${ACCURACY} = {'diff': [8.222999999998176e-06, 8.166999999999897e-06, 8.194999999999036e-06, 8.166999999999897e-06, 8.180999999999466e-06, 8.179999999999993e-06, 8.249999999997842e-06, 8.180999999999466e-06, 8.2360...</msg>
<status status="PASS" starttime="20201030 11:51:37.220" endtime="20201030 11:51:37.223"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:37.227" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201030 11:51:37.226" endtime="20201030 11:51:37.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:37.229" level="INFO">VALUE: [8.222999999998176e-06, 8.166999999999897e-06, 8.194999999999036e-06, 8.166999999999897e-06, 8.180999999999466e-06, 8.179999999999993e-06, 8.249999999997842e-06, 8.180999999999466e-06, 8.236000000001742e-06, 8.180999999999466e-06, 8.236000000001742e-06, 8.180999999999466e-06, 8.166999999999897e-06, 8.180999999999466e-06, 8.180999999999466e-06, 8.166000000000423e-06, 8.207999999999133e-06, 8.166000000000423e-06, 8.193999999999563e-06, 8.194999999999036e-06, 8.207999999999133e-06, 8.180999999999466e-06, 8.193999999999563e-06, 8.194000000003032e-06, 8.166999999999897e-06, 8.180999999999466e-06, 8.193999999999563e-06, 8.166999999999897e-06, 8.193999999999563e-06, 8.166000000000423e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.194000000003032e-06, 8.193999999999563e-06, 8.222999999998176e-06, 8.166999999999897e-06, 8.193999999999563e-06, 8.193999999999563e-06, 8.263999999997412e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.139000000000757e-06, 8.221999999998703e-06, 8.166999999999897e-06, 8.179999999999993e-06, 8.208000000002602e-06, 8.180999999999466e-06, 8.179999999999993e-06, 8.194000000003032e-06]</msg>
<status status="PASS" starttime="20201030 11:51:37.228" endtime="20201030 11:51:37.235"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.224" endtime="20201030 11:51:37.236"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:37.239" endtime="20201030 11:51:37.259"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.238" endtime="20201030 11:51:37.259"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.237" endtime="20201030 11:51:37.260"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.876" endtime="20201030 11:51:37.260"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.875" endtime="20201030 11:51:37.260"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:37.269" endtime="20201030 11:51:37.291"></status>
</kw>
<msg timestamp="20201030 11:51:37.292" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:37.267" endtime="20201030 11:51:37.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:37.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:37.293" endtime="20201030 11:51:37.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:37.295" endtime="20201030 11:51:37.297"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.265" endtime="20201030 11:51:37.297"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.262" endtime="20201030 11:51:37.298"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:37.304" endtime="20201030 11:51:37.589"></status>
</kw>
<msg timestamp="20201030 11:51:37.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024582097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024590278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:37.302" endtime="20201030 11:51:37.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:37.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024582097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024590278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:37.594" endtime="20201030 11:51:37.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:37.602" endtime="20201030 11:51:37.604"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.300" endtime="20201030 11:51:37.604"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.298" endtime="20201030 11:51:37.605"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:37.608" level="INFO">${RESULT} = [{'diff': 8.180999999999466e-06}, {'diff': 8.180999999999466e-06}, {'diff': 8.193999999999563e-06}, {'diff': 8.221999999998703e-06}, {'diff': 8.166000000000423e-06}, {'diff': 8.208000000002602e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:51:37.605" endtime="20201030 11:51:37.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:37.613" level="INFO">${ACCURACY} = {'diff': [8.180999999999466e-06, 8.180999999999466e-06, 8.193999999999563e-06, 8.221999999998703e-06, 8.166000000000423e-06, 8.208000000002602e-06, 8.222000000002172e-06, 8.195000000002506e-06, 8.1520...</msg>
<status status="PASS" starttime="20201030 11:51:37.609" endtime="20201030 11:51:37.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:37.618" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201030 11:51:37.617" endtime="20201030 11:51:37.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:37.620" level="INFO">VALUE: [8.180999999999466e-06, 8.180999999999466e-06, 8.193999999999563e-06, 8.221999999998703e-06, 8.166000000000423e-06, 8.208000000002602e-06, 8.222000000002172e-06, 8.195000000002506e-06, 8.152000000000853e-06, 8.153000000000327e-06, 8.194999999999036e-06, 8.264000000000882e-06, 8.166000000000423e-06, 8.179999999999993e-06, 8.179999999999993e-06, 8.193999999999563e-06, 8.208999999998606e-06, 8.193999999999563e-06, 8.194999999999036e-06, 8.195000000002506e-06, 8.180999999999466e-06, 8.221999999998703e-06, 8.194000000003032e-06, 8.193999999999563e-06, 8.179999999999993e-06, 8.209000000002076e-06, 8.263999999997412e-06, 8.194999999999036e-06, 8.193999999999563e-06, 8.194999999999036e-06, 8.180999999999466e-06, 8.139000000000757e-06, 8.180999999999466e-06, 8.193999999999563e-06, 8.235999999998272e-06, 8.166999999999897e-06, 8.221999999998703e-06, 8.179999999999993e-06, 8.153000000000327e-06, 8.194999999999036e-06, 8.236999999997746e-06, 8.139000000000757e-06, 8.194999999999036e-06, 8.235999999998272e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.208999999998606e-06, 8.125000000001187e-06, 8.208999999998606e-06]</msg>
<status status="PASS" starttime="20201030 11:51:37.619" endtime="20201030 11:51:37.621"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.614" endtime="20201030 11:51:37.622"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:37.625" endtime="20201030 11:51:37.645"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.624" endtime="20201030 11:51:37.645"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.623" endtime="20201030 11:51:37.645"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.261" endtime="20201030 11:51:37.646"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.260" endtime="20201030 11:51:37.646"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:37.654" endtime="20201030 11:51:37.669"></status>
</kw>
<msg timestamp="20201030 11:51:37.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:37.653" endtime="20201030 11:51:37.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:37.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:37.671" endtime="20201030 11:51:37.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:37.673" endtime="20201030 11:51:37.675"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.650" endtime="20201030 11:51:37.675"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.648" endtime="20201030 11:51:37.676"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:37.682" endtime="20201030 11:51:37.969"></status>
</kw>
<msg timestamp="20201030 11:51:37.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020540208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020548431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:37.680" endtime="20201030 11:51:37.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:37.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020540208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020548431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:37.973" endtime="20201030 11:51:37.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:37.981" endtime="20201030 11:51:37.983"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.678" endtime="20201030 11:51:37.983"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.676" endtime="20201030 11:51:37.984"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:37.988" level="INFO">${RESULT} = [{'diff': 8.222999999998176e-06}, {'diff': 8.180999999999466e-06}, {'diff': 8.153000000000327e-06}, {'diff': 8.194000000003032e-06}, {'diff': 8.194999999999036e-06}, {'diff': 8.139000000000757e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:51:37.985" endtime="20201030 11:51:37.988"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:37.992" level="INFO">${ACCURACY} = {'diff': [8.222999999998176e-06, 8.180999999999466e-06, 8.153000000000327e-06, 8.194000000003032e-06, 8.194999999999036e-06, 8.139000000000757e-06, 8.209000000002076e-06, 8.166999999999897e-06, 8.2090...</msg>
<status status="PASS" starttime="20201030 11:51:37.989" endtime="20201030 11:51:37.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:37.996" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201030 11:51:37.995" endtime="20201030 11:51:37.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:37.999" level="INFO">VALUE: [8.222999999998176e-06, 8.180999999999466e-06, 8.153000000000327e-06, 8.194000000003032e-06, 8.194999999999036e-06, 8.139000000000757e-06, 8.209000000002076e-06, 8.166999999999897e-06, 8.209000000002076e-06, 8.166999999999897e-06, 8.264000000000882e-06, 8.208999999998606e-06, 8.166999999999897e-06, 8.221999999998703e-06, 8.222999999998176e-06, 8.236000000001742e-06, 8.179999999999993e-06, 8.179999999999993e-06, 8.179999999999993e-06, 8.194999999999036e-06, 8.139000000000757e-06, 8.193999999999563e-06, 8.166000000000423e-06, 8.166999999999897e-06, 8.194999999999036e-06, 8.194999999999036e-06, 8.165999999996953e-06, 8.193999999999563e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.208999999998606e-06, 8.193999999999563e-06, 8.194000000003032e-06, 8.193999999999563e-06, 8.153000000000327e-06, 8.125000000001187e-06, 8.180999999999466e-06, 8.209000000002076e-06, 8.153000000000327e-06, 8.139000000000757e-06, 8.208000000002602e-06, 8.264000000000882e-06, 8.223000000001646e-06, 8.221999999998703e-06, 8.111000000001617e-06, 8.221999999998703e-06, 8.180999999999466e-06, 8.194999999999036e-06, 8.179999999999993e-06, 8.222000000002172e-06]</msg>
<status status="PASS" starttime="20201030 11:51:37.997" endtime="20201030 11:51:37.999"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.993" endtime="20201030 11:51:38.000"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:38.004" endtime="20201030 11:51:38.023"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.002" endtime="20201030 11:51:38.024"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.001" endtime="20201030 11:51:38.024"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.647" endtime="20201030 11:51:38.024"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.646" endtime="20201030 11:51:38.024"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:38.033" endtime="20201030 11:51:38.052"></status>
</kw>
<msg timestamp="20201030 11:51:38.052" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:38.031" endtime="20201030 11:51:38.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:38.055" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:38.053" endtime="20201030 11:51:38.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:38.056" endtime="20201030 11:51:38.057"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.029" endtime="20201030 11:51:38.058"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.027" endtime="20201030 11:51:38.058"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:38.065" endtime="20201030 11:51:38.352"></status>
</kw>
<msg timestamp="20201030 11:51:38.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023756833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023765042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:38.063" endtime="20201030 11:51:38.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:38.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023756833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023765042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:38.356" endtime="20201030 11:51:38.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:38.365" endtime="20201030 11:51:38.366"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.061" endtime="20201030 11:51:38.367"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.059" endtime="20201030 11:51:38.367"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:38.371" level="INFO">${RESULT} = [{'diff': 8.208999999998606e-06}, {'diff': 8.166000000000423e-06}, {'diff': 8.179999999999993e-06}, {'diff': 8.166999999999897e-06}, {'diff': 8.207999999999133e-06}, {'diff': 8.236000000001742e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:51:38.368" endtime="20201030 11:51:38.372"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:38.375" level="INFO">${ACCURACY} = {'diff': [8.208999999998606e-06, 8.166000000000423e-06, 8.179999999999993e-06, 8.166999999999897e-06, 8.207999999999133e-06, 8.236000000001742e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.2219...</msg>
<status status="PASS" starttime="20201030 11:51:38.372" endtime="20201030 11:51:38.376"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:38.380" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201030 11:51:38.379" endtime="20201030 11:51:38.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:38.382" level="INFO">VALUE: [8.208999999998606e-06, 8.166000000000423e-06, 8.179999999999993e-06, 8.166999999999897e-06, 8.207999999999133e-06, 8.236000000001742e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.221999999998703e-06, 8.180999999999466e-06, 8.207999999999133e-06, 8.195000000002506e-06, 8.166999999999897e-06, 8.111000000001617e-06, 8.208999999998606e-06, 8.166999999999897e-06, 8.221999999998703e-06, 8.194000000003032e-06, 8.193999999999563e-06, 8.193999999999563e-06, 8.223000000001646e-06, 8.153000000000327e-06, 8.181000000002936e-06, 8.207999999999133e-06, 8.194999999999036e-06, 8.236000000001742e-06, 8.222999999998176e-06, 8.207999999999133e-06, 8.179999999999993e-06, 8.193999999999563e-06, 8.179999999999993e-06, 8.193999999999563e-06, 8.179999999999993e-06, 8.221999999998703e-06, 8.235999999998272e-06, 8.166000000000423e-06, 8.194999999999036e-06, 8.235999999998272e-06, 8.208000000002602e-06, 8.236000000001742e-06, 8.166999999999897e-06, 8.166999999999897e-06, 8.235999999998272e-06, 8.194999999999036e-06, 8.236000000001742e-06, 8.209000000002076e-06, 8.235999999998272e-06, 8.195000000002506e-06, 8.194999999999036e-06, 8.207999999999133e-06]</msg>
<status status="PASS" starttime="20201030 11:51:38.381" endtime="20201030 11:51:38.384"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.376" endtime="20201030 11:51:38.384"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:38.388" endtime="20201030 11:51:38.407"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.387" endtime="20201030 11:51:38.408"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.385" endtime="20201030 11:51:38.408"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.025" endtime="20201030 11:51:38.409"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.025" endtime="20201030 11:51:38.409"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:38.417" endtime="20201030 11:51:38.438"></status>
</kw>
<msg timestamp="20201030 11:51:38.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:38.416" endtime="20201030 11:51:38.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:38.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:38.440" endtime="20201030 11:51:38.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:38.442" endtime="20201030 11:51:38.444"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.413" endtime="20201030 11:51:38.444"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.411" endtime="20201030 11:51:38.445"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:38.451" endtime="20201030 11:51:38.738"></status>
</kw>
<msg timestamp="20201030 11:51:38.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02130325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021320958, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:38.449" endtime="20201030 11:51:38.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:38.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02130325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021320958, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:38.742" endtime="20201030 11:51:38.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:38.751" endtime="20201030 11:51:38.752"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.447" endtime="20201030 11:51:38.753"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.445" endtime="20201030 11:51:38.753"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:38.757" level="INFO">${RESULT} = [{'diff': 1.7708000000001695e-05}, {'diff': 2.2541999999996926e-05}, {'diff': 2.443100000000184e-05}, {'diff': 2.444500000000141e-05}, {'diff': 2.5401999999997288e-05}, {'diff': 2.345899999999998e-05}...</msg>
<status status="PASS" starttime="20201030 11:51:38.754" endtime="20201030 11:51:38.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:38.762" level="INFO">${ACCURACY} = {'diff': [1.7708000000001695e-05, 2.2541999999996926e-05, 2.443100000000184e-05, 2.444500000000141e-05, 2.5401999999997288e-05, 2.345899999999998e-05, 2.3415999999998327e-05, 2.1527999999999825e-05, 2...</msg>
<status status="PASS" starttime="20201030 11:51:38.758" endtime="20201030 11:51:38.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:38.767" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201030 11:51:38.766" endtime="20201030 11:51:38.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:38.769" level="INFO">VALUE: [1.7708000000001695e-05, 2.2541999999996926e-05, 2.443100000000184e-05, 2.444500000000141e-05, 2.5401999999997288e-05, 2.345899999999998e-05, 2.3415999999998327e-05, 2.1527999999999825e-05, 2.5319999999998816e-05, 2.1541999999999395e-05, 2.344500000000041e-05, 2.543100000000284e-05, 2.440299999999923e-05, 2.537500000000109e-05, 2.5319999999998816e-05, 2.6305000000000772e-05, 2.0584000000000574e-05, 2.1570000000002004e-05, 2.062499999999981e-05, 1.962499999999881e-05, 2.438899999999966e-05, 2.3458000000000506e-05, 2.437500000000009e-05, 2.440299999999923e-05, 2.1527999999999825e-05, 2.537499999999762e-05, 2.441700000000227e-05, 2.1541999999999395e-05, 2.056899999999806e-05, 2.2569999999999535e-05, 2.062499999999981e-05, 2.2499999999998216e-05, 2.055499999999849e-05, 2.344500000000041e-05, 2.534700000000195e-05, 2.6319000000000342e-05, 2.4388000000000187e-05, 2.059700000000067e-05, 2.5401999999997288e-05, 2.3458000000000506e-05, 2.537500000000109e-05, 2.6333999999999386e-05, 2.5277000000000632e-05, 2.440299999999923e-05, 2.4401999999999757e-05, 2.443099999999837e-05, 2.445900000000098e-05, 2.6306000000000246e-05, 2.345899999999998e-05, 2.343099999999737e-05]</msg>
<status status="PASS" starttime="20201030 11:51:38.768" endtime="20201030 11:51:38.770"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.763" endtime="20201030 11:51:38.770"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:38.774" endtime="20201030 11:51:38.793"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.773" endtime="20201030 11:51:38.794"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.771" endtime="20201030 11:51:38.794"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.410" endtime="20201030 11:51:38.795"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.409" endtime="20201030 11:51:38.795"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:38.803" endtime="20201030 11:51:38.823"></status>
</kw>
<msg timestamp="20201030 11:51:38.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:38.802" endtime="20201030 11:51:38.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:38.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:38.824" endtime="20201030 11:51:38.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:38.827" endtime="20201030 11:51:38.828"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.799" endtime="20201030 11:51:38.829"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.797" endtime="20201030 11:51:38.829"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:38.836" endtime="20201030 11:51:39.123"></status>
</kw>
<msg timestamp="20201030 11:51:39.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022191181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022213667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:38.834" endtime="20201030 11:51:39.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:39.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022191181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022213667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:39.128" endtime="20201030 11:51:39.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:39.136" endtime="20201030 11:51:39.138"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.832" endtime="20201030 11:51:39.138"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.830" endtime="20201030 11:51:39.139"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:39.143" level="INFO">${RESULT} = [{'diff': 2.2485999999998646e-05}, {'diff': 2.437500000000009e-05}, {'diff': 2.063899999999938e-05}, {'diff': 2.445900000000098e-05}, {'diff': 2.6332999999999912e-05}, {'diff': 2.5332999999998912e-05}...</msg>
<status status="PASS" starttime="20201030 11:51:39.139" endtime="20201030 11:51:39.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:39.147" level="INFO">${ACCURACY} = {'diff': [2.2485999999998646e-05, 2.437500000000009e-05, 2.063899999999938e-05, 2.445900000000098e-05, 2.6332999999999912e-05, 2.5332999999998912e-05, 2.261099999999877e-05, 2.158299999999863e-05, 2.3...</msg>
<status status="PASS" starttime="20201030 11:51:39.144" endtime="20201030 11:51:39.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:39.151" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201030 11:51:39.150" endtime="20201030 11:51:39.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:39.154" level="INFO">VALUE: [2.2485999999998646e-05, 2.437500000000009e-05, 2.063899999999938e-05, 2.445900000000098e-05, 2.6332999999999912e-05, 2.5332999999998912e-05, 2.261099999999877e-05, 2.158299999999863e-05, 2.343100000000084e-05, 1.965300000000142e-05, 2.337499999999909e-05, 2.1527999999999825e-05, 2.255500000000049e-05, 2.158299999999863e-05, 2.538900000000066e-05, 2.0570000000001004e-05, 2.062499999999981e-05, 2.541700000000327e-05, 2.3458000000000506e-05, 2.341700000000127e-05, 2.158299999999863e-05, 2.2555999999999965e-05, 2.347299999999955e-05, 2.0556000000001434e-05, 2.065300000000242e-05, 2.538899999999719e-05, 2.5332999999998912e-05, 2.3458000000000506e-05, 2.440299999999923e-05, 2.2527999999997356e-05, 2.6360999999999052e-05, 2.3444000000000936e-05, 2.1514000000000255e-05, 2.3444000000000936e-05, 2.6305000000000772e-05, 2.3415999999998327e-05, 2.162500000000081e-05, 2.062499999999981e-05, 2.7290999999998733e-05, 2.2486000000002115e-05, 2.3472000000000076e-05, 2.2514000000001255e-05, 2.4443999999998467e-05, 2.3472000000000076e-05, 2.1527999999999825e-05, 2.05830000000011e-05, 2.0570000000001004e-05, 2.059700000000067e-05, 2.348699999999912e-05, 2.540300000000023e-05]</msg>
<status status="PASS" starttime="20201030 11:51:39.152" endtime="20201030 11:51:39.154"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.148" endtime="20201030 11:51:39.155"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:39.159" endtime="20201030 11:51:39.178"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.157" endtime="20201030 11:51:39.179"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.156" endtime="20201030 11:51:39.179"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.796" endtime="20201030 11:51:39.179"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.795" endtime="20201030 11:51:39.179"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:39.188" endtime="20201030 11:51:39.210"></status>
</kw>
<msg timestamp="20201030 11:51:39.210" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:39.187" endtime="20201030 11:51:39.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:39.213" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:39.211" endtime="20201030 11:51:39.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:39.214" endtime="20201030 11:51:39.215"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.184" endtime="20201030 11:51:39.216"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.182" endtime="20201030 11:51:39.216"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:39.223" endtime="20201030 11:51:39.508"></status>
</kw>
<msg timestamp="20201030 11:51:39.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024439042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024448181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:39.221" endtime="20201030 11:51:39.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:39.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024439042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024448181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:39.512" endtime="20201030 11:51:39.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:39.520" endtime="20201030 11:51:39.522"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.218" endtime="20201030 11:51:39.523"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.217" endtime="20201030 11:51:39.523"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:39.527" level="INFO">${RESULT} = [{'diff': 9.138999999998287e-06}, {'diff': 2.7250000000002966e-05}, {'diff': 2.5401999999997288e-05}, {'diff': 2.4444000000001936e-05}, {'diff': 2.438900000000313e-05}, {'diff': 2.543099999999937e-05}...</msg>
<status status="PASS" starttime="20201030 11:51:39.524" endtime="20201030 11:51:39.527"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:39.531" level="INFO">${ACCURACY} = {'diff': [9.138999999998287e-06, 2.7250000000002966e-05, 2.5401999999997288e-05, 2.4444000000001936e-05, 2.438900000000313e-05, 2.543099999999937e-05, 2.2472000000002545e-05, 2.537499999999762e-05, 2....</msg>
<status status="PASS" starttime="20201030 11:51:39.528" endtime="20201030 11:51:39.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:39.536" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201030 11:51:39.534" endtime="20201030 11:51:39.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:39.539" level="INFO">VALUE: [9.138999999998287e-06, 2.7250000000002966e-05, 2.5401999999997288e-05, 2.4444000000001936e-05, 2.438900000000313e-05, 2.543099999999937e-05, 2.2472000000002545e-05, 2.537499999999762e-05, 2.5416000000000327e-05, 2.3542000000001395e-05, 2.3458000000000506e-05, 2.061100000000024e-05, 2.062499999999981e-05, 2.5402000000000757e-05, 2.2486000000002115e-05, 2.341700000000127e-05, 2.154099999999992e-05, 2.6332999999999912e-05, 2.1513999999996786e-05, 2.5360999999998052e-05, 2.1569999999998535e-05, 2.065299999999895e-05, 2.440299999999923e-05, 2.538900000000066e-05, 2.251300000000178e-05, 2.5416000000000327e-05, 2.438899999999966e-05, 2.2513999999997786e-05, 2.2514000000001255e-05, 2.061100000000024e-05, 2.4472000000001076e-05, 2.3499999999999216e-05, 2.3472000000000076e-05, 2.1527999999999825e-05, 2.062499999999981e-05, 2.3472000000000076e-05, 2.437500000000009e-05, 2.1541999999999395e-05, 2.2555999999999965e-05, 2.15969999999982e-05, 2.063899999999938e-05, 1.966699999999752e-05, 2.158299999999863e-05, 2.6319000000000342e-05, 2.636100000000252e-05, 2.2528000000000825e-05, 2.5360999999998052e-05, 2.3458000000000506e-05, 2.5348000000001425e-05, 2.6319999999999816e-05]</msg>
<status status="PASS" starttime="20201030 11:51:39.537" endtime="20201030 11:51:39.540"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.532" endtime="20201030 11:51:39.540"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:39.544" endtime="20201030 11:51:39.563"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.542" endtime="20201030 11:51:39.564"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.541" endtime="20201030 11:51:39.564"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.180" endtime="20201030 11:51:39.564"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.180" endtime="20201030 11:51:39.565"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:39.573" endtime="20201030 11:51:39.591"></status>
</kw>
<msg timestamp="20201030 11:51:39.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:39.572" endtime="20201030 11:51:39.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:39.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:39.593" endtime="20201030 11:51:39.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:39.595" endtime="20201030 11:51:39.597"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.569" endtime="20201030 11:51:39.597"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.567" endtime="20201030 11:51:39.598"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:39.604" endtime="20201030 11:51:39.891"></status>
</kw>
<msg timestamp="20201030 11:51:39.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020939556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020977306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:39.603" endtime="20201030 11:51:39.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:39.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020939556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020977306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:39.895" endtime="20201030 11:51:39.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:39.903" endtime="20201030 11:51:39.905"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.600" endtime="20201030 11:51:39.906"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.598" endtime="20201030 11:51:39.906"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:39.910" level="INFO">${RESULT} = [{'diff': 3.774999999999959e-05}, {'diff': 2.4486000000000646e-05}, {'diff': 2.7249999999999497e-05}, {'diff': 2.3472000000000076e-05}, {'diff': 2.5346999999998482e-05}, {'diff': 2.538900000000066e-05...</msg>
<status status="PASS" starttime="20201030 11:51:39.907" endtime="20201030 11:51:39.910"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:39.915" level="INFO">${ACCURACY} = {'diff': [3.774999999999959e-05, 2.4486000000000646e-05, 2.7249999999999497e-05, 2.3472000000000076e-05, 2.5346999999998482e-05, 2.538900000000066e-05, 2.6360999999999052e-05, 2.1541999999999395e-05, ...</msg>
<status status="PASS" starttime="20201030 11:51:39.911" endtime="20201030 11:51:39.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:39.919" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201030 11:51:39.918" endtime="20201030 11:51:39.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:39.922" level="INFO">VALUE: [3.774999999999959e-05, 2.4486000000000646e-05, 2.7249999999999497e-05, 2.3472000000000076e-05, 2.5346999999998482e-05, 2.538900000000066e-05, 2.6360999999999052e-05, 2.1541999999999395e-05, 2.2485999999998646e-05, 2.2514000000001255e-05, 2.4513999999999786e-05, 2.6277000000001632e-05, 1.961099999999924e-05, 2.6319999999999816e-05, 2.347299999999955e-05, 2.3485999999999646e-05, 2.7249999999999497e-05, 2.1541999999999395e-05, 2.0513999999999255e-05, 2.6305000000000772e-05, 2.538899999999719e-05, 2.155499999999949e-05, 2.5347999999997956e-05, 2.7249999999999497e-05, 2.054099999999892e-05, 2.1570000000002004e-05, 2.4430000000002366e-05, 2.6374999999998622e-05, 2.3472000000000076e-05, 1.962499999999881e-05, 2.2471999999999076e-05, 2.05969999999972e-05, 2.1583999999998105e-05, 2.54169999999998e-05, 2.438899999999966e-05, 2.6332999999999912e-05, 2.0637999999999906e-05, 2.2514000000001255e-05, 2.343099999999737e-05, 2.537500000000109e-05, 2.5416000000000327e-05, 2.4444000000001936e-05, 2.3444000000000936e-05, 2.3528000000001825e-05, 2.4430000000002366e-05, 2.2541999999996926e-05, 2.3485999999999646e-05, 2.062499999999981e-05, 2.3486000000003115e-05, 2.2500000000001685e-05]</msg>
<status status="PASS" starttime="20201030 11:51:39.920" endtime="20201030 11:51:39.923"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.916" endtime="20201030 11:51:39.923"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:39.927" endtime="20201030 11:51:39.946"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.925" endtime="20201030 11:51:39.947"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.924" endtime="20201030 11:51:39.947"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.565" endtime="20201030 11:51:39.947"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.565" endtime="20201030 11:51:39.947"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:39.956" endtime="20201030 11:51:39.973"></status>
</kw>
<msg timestamp="20201030 11:51:39.973" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:39.954" endtime="20201030 11:51:39.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:39.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:39.974" endtime="20201030 11:51:39.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:39.977" endtime="20201030 11:51:39.978"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.952" endtime="20201030 11:51:39.979"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.950" endtime="20201030 11:51:39.979"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:39.986" endtime="20201030 11:51:40.274"></status>
</kw>
<msg timestamp="20201030 11:51:40.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019942139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019977972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:39.984" endtime="20201030 11:51:40.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:40.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019942139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019977972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:40.279" endtime="20201030 11:51:40.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:40.287" endtime="20201030 11:51:40.289"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.982" endtime="20201030 11:51:40.289"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.980" endtime="20201030 11:51:40.290"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:40.294" level="INFO">${RESULT} = [{'diff': 3.5832999999999005e-05}, {'diff': 2.538900000000066e-05}, {'diff': 2.1527999999999825e-05}, {'diff': 2.2542000000000395e-05}, {'diff': 2.2513999999997786e-05}, {'diff': 2.1555999999998965e-0...</msg>
<status status="PASS" starttime="20201030 11:51:40.291" endtime="20201030 11:51:40.294"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:40.298" level="INFO">${ACCURACY} = {'diff': [3.5832999999999005e-05, 2.538900000000066e-05, 2.1527999999999825e-05, 2.2542000000000395e-05, 2.2513999999997786e-05, 2.1555999999998965e-05, 2.438899999999966e-05, 2.152700000000035e-05, 2...</msg>
<status status="PASS" starttime="20201030 11:51:40.295" endtime="20201030 11:51:40.298"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:40.302" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201030 11:51:40.301" endtime="20201030 11:51:40.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:40.305" level="INFO">VALUE: [3.5832999999999005e-05, 2.538900000000066e-05, 2.1527999999999825e-05, 2.2542000000000395e-05, 2.2513999999997786e-05, 2.1555999999998965e-05, 2.438899999999966e-05, 2.152700000000035e-05, 2.2500000000001685e-05, 2.1486000000001115e-05, 2.4415999999999327e-05, 2.15969999999982e-05, 2.54169999999998e-05, 2.2514000000001255e-05, 2.3444000000000936e-05, 2.1527999999999825e-05, 2.1555999999998965e-05, 2.537500000000109e-05, 2.6291000000001202e-05, 2.44169999999988e-05, 2.3443999999997467e-05, 2.633300000000338e-05, 2.0584000000000574e-05, 2.536100000000152e-05, 2.6291999999997206e-05, 1.962499999999881e-05, 2.443100000000184e-05, 2.05830000000011e-05, 2.44169999999988e-05, 2.4401999999999757e-05, 2.6305000000000772e-05, 2.2569999999999535e-05, 2.2526999999997882e-05, 2.1527999999999825e-05, 2.1555999999998965e-05, 2.5429999999999897e-05, 2.1555999999998965e-05, 2.2485999999998646e-05, 2.058299999999763e-05, 2.1514000000000255e-05, 2.534700000000195e-05, 2.543099999999937e-05, 2.6360999999999052e-05, 2.056900000000153e-05, 2.440299999999923e-05, 2.44169999999988e-05, 2.05969999999972e-05, 2.6305000000000772e-05, 2.44030000000027e-05, 2.543099999999937e-05]</msg>
<status status="PASS" starttime="20201030 11:51:40.303" endtime="20201030 11:51:40.306"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.299" endtime="20201030 11:51:40.306"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:40.310" endtime="20201030 11:51:40.329"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.308" endtime="20201030 11:51:40.330"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.307" endtime="20201030 11:51:40.330"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.948" endtime="20201030 11:51:40.330"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.948" endtime="20201030 11:51:40.330"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:40.339" endtime="20201030 11:51:40.361"></status>
</kw>
<msg timestamp="20201030 11:51:40.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:40.337" endtime="20201030 11:51:40.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:40.364" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:40.362" endtime="20201030 11:51:40.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:40.365" endtime="20201030 11:51:40.366"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.335" endtime="20201030 11:51:40.367"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.333" endtime="20201030 11:51:40.367"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:40.374" endtime="20201030 11:51:40.660"></status>
</kw>
<msg timestamp="20201030 11:51:40.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023883736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023891944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:40.372" endtime="20201030 11:51:40.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:40.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023883736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023891944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:40.664" endtime="20201030 11:51:40.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:40.673" endtime="20201030 11:51:40.674"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.370" endtime="20201030 11:51:40.675"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.368" endtime="20201030 11:51:40.675"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:40.679" level="INFO">${RESULT} = [{'diff': 8.207999999999133e-06}, {'diff': 2.061099999999677e-05}, {'diff': 2.54169999999998e-05}, {'diff': 2.1541999999999395e-05}, {'diff': 2.2528000000000825e-05}, {'diff': 2.4472000000001076e-05},...</msg>
<status status="PASS" starttime="20201030 11:51:40.676" endtime="20201030 11:51:40.679"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:40.683" level="INFO">${ACCURACY} = {'diff': [8.207999999999133e-06, 2.061099999999677e-05, 2.54169999999998e-05, 2.1541999999999395e-05, 2.2528000000000825e-05, 2.4472000000001076e-05, 1.9528000000001294e-05, 2.437500000000009e-05, 2.1...</msg>
<status status="PASS" starttime="20201030 11:51:40.680" endtime="20201030 11:51:40.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:40.688" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201030 11:51:40.687" endtime="20201030 11:51:40.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:40.690" level="INFO">VALUE: [8.207999999999133e-06, 2.061099999999677e-05, 2.54169999999998e-05, 2.1541999999999395e-05, 2.2528000000000825e-05, 2.4472000000001076e-05, 1.9528000000001294e-05, 2.437500000000009e-05, 2.1555999999998965e-05, 2.0569999999997535e-05, 2.5388000000001187e-05, 2.062499999999981e-05, 2.44030000000027e-05, 2.6333999999999386e-05, 2.062499999999981e-05, 2.3514000000002255e-05, 2.3429999999997897e-05, 2.438899999999966e-05, 2.062499999999981e-05, 2.158299999999863e-05, 2.6292000000000676e-05, 2.536100000000152e-05, 2.338899999999866e-05, 2.056900000000153e-05, 2.2513999999997786e-05, 2.161100000000124e-05, 1.962499999999881e-05, 2.3472000000000076e-05, 2.2542000000000395e-05, 1.966700000000099e-05, 2.2528000000000825e-05, 2.6305000000000772e-05, 2.4457999999998037e-05, 2.356900000000106e-05, 2.343099999999737e-05, 2.6305000000000772e-05, 2.0584000000000574e-05, 2.0570000000001004e-05, 2.4444000000001936e-05, 2.063899999999938e-05, 2.64170000000008e-05, 2.3513999999998786e-05, 2.061100000000024e-05, 2.345899999999998e-05, 2.3499999999999216e-05, 2.162499999999734e-05, 2.4401999999999757e-05, 2.247299999999855e-05, 2.3514000000002255e-05, 2.4457999999998037e-05]</msg>
<status status="PASS" starttime="20201030 11:51:40.689" endtime="20201030 11:51:40.692"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.684" endtime="20201030 11:51:40.692"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:40.696" endtime="20201030 11:51:40.715"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.695" endtime="20201030 11:51:40.716"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.693" endtime="20201030 11:51:40.716"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.331" endtime="20201030 11:51:40.717"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.331" endtime="20201030 11:51:40.717"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:40.725" endtime="20201030 11:51:40.748"></status>
</kw>
<msg timestamp="20201030 11:51:40.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:40.724" endtime="20201030 11:51:40.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:40.750" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:40.749" endtime="20201030 11:51:40.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:40.752" endtime="20201030 11:51:40.753"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.721" endtime="20201030 11:51:40.754"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.719" endtime="20201030 11:51:40.754"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:40.760" endtime="20201030 11:51:41.046"></status>
</kw>
<msg timestamp="20201030 11:51:41.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024358514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024386722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:40.759" endtime="20201030 11:51:41.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024358514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024386722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:41.050" endtime="20201030 11:51:41.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.058" endtime="20201030 11:51:41.060"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.756" endtime="20201030 11:51:41.061"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.755" endtime="20201030 11:51:41.061"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:41.065" level="INFO">${RESULT} = [{'diff': 2.8207999999998318e-05}, {'diff': 2.534700000000195e-05}, {'diff': 2.44169999999988e-05}, {'diff': 2.538899999999719e-05}, {'diff': 2.4457999999998037e-05}, {'diff': 2.6250000000001966e-05},...</msg>
<status status="PASS" starttime="20201030 11:51:41.062" endtime="20201030 11:51:41.065"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:41.070" level="INFO">${ACCURACY} = {'diff': [2.8207999999998318e-05, 2.534700000000195e-05, 2.44169999999988e-05, 2.538899999999719e-05, 2.4457999999998037e-05, 2.6250000000001966e-05, 2.155499999999949e-05, 2.534700000000195e-05, 2.44...</msg>
<status status="PASS" starttime="20201030 11:51:41.066" endtime="20201030 11:51:41.070"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.074" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201030 11:51:41.073" endtime="20201030 11:51:41.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.077" level="INFO">VALUE: [2.8207999999998318e-05, 2.534700000000195e-05, 2.44169999999988e-05, 2.538899999999719e-05, 2.4457999999998037e-05, 2.6250000000001966e-05, 2.155499999999949e-05, 2.534700000000195e-05, 2.44169999999988e-05, 2.5416000000000327e-05, 2.2513999999997786e-05, 2.0584000000000574e-05, 2.055499999999849e-05, 2.34169999999978e-05, 2.5362000000000995e-05, 2.061100000000024e-05, 2.062500000000328e-05, 2.3499999999999216e-05, 2.2485999999998646e-05, 2.1527999999999825e-05, 2.44169999999988e-05, 2.347299999999955e-05, 2.7278000000002106e-05, 2.061100000000024e-05, 2.0570000000001004e-05, 2.5332999999998912e-05, 2.4443999999998467e-05, 2.061100000000024e-05, 2.5360999999998052e-05, 2.6277000000001632e-05, 2.158299999999863e-05, 2.156899999999906e-05, 2.05969999999972e-05, 2.536100000000152e-05, 2.6305000000000772e-05, 2.437500000000009e-05, 2.2500000000001685e-05, 2.3444000000000936e-05, 2.337499999999909e-05, 2.3458000000000506e-05, 2.1541999999999395e-05, 2.148700000000059e-05, 2.059700000000067e-05, 2.3485999999999646e-05, 2.347299999999955e-05, 2.3444000000000936e-05, 2.2527999999997356e-05, 2.6374999999998622e-05, 2.6332999999999912e-05, 2.255500000000049e-05]</msg>
<status status="PASS" starttime="20201030 11:51:41.076" endtime="20201030 11:51:41.078"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.071" endtime="20201030 11:51:41.078"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:41.082" endtime="20201030 11:51:41.101"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.080" endtime="20201030 11:51:41.102"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.079" endtime="20201030 11:51:41.102"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.718" endtime="20201030 11:51:41.102"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.717" endtime="20201030 11:51:41.103"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.111" endtime="20201030 11:51:41.129"></status>
</kw>
<msg timestamp="20201030 11:51:41.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:41.110" endtime="20201030 11:51:41.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:41.131" endtime="20201030 11:51:41.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.133" endtime="20201030 11:51:41.135"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.107" endtime="20201030 11:51:41.135"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.105" endtime="20201030 11:51:41.136"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.142" endtime="20201030 11:51:41.430"></status>
</kw>
<msg timestamp="20201030 11:51:41.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020341611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020366042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:41.141" endtime="20201030 11:51:41.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020341611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020366042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:41.435" endtime="20201030 11:51:41.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.443" endtime="20201030 11:51:41.445"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.138" endtime="20201030 11:51:41.446"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.136" endtime="20201030 11:51:41.446"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:41.450" level="INFO">${RESULT} = [{'diff': 2.443100000000184e-05}, {'diff': 2.6278000000001106e-05}, {'diff': 2.344500000000041e-05}, {'diff': 2.252700000000135e-05}, {'diff': 2.445900000000098e-05}, {'diff': 2.2514000000001255e-05},...</msg>
<status status="PASS" starttime="20201030 11:51:41.447" endtime="20201030 11:51:41.450"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:41.454" level="INFO">${ACCURACY} = {'diff': [2.443100000000184e-05, 2.6278000000001106e-05, 2.344500000000041e-05, 2.252700000000135e-05, 2.445900000000098e-05, 2.2514000000001255e-05, 2.1514000000000255e-05, 2.438900000000313e-05, 2.2...</msg>
<status status="PASS" starttime="20201030 11:51:41.451" endtime="20201030 11:51:41.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.458" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201030 11:51:41.457" endtime="20201030 11:51:41.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.461" level="INFO">VALUE: [2.443100000000184e-05, 2.6278000000001106e-05, 2.344500000000041e-05, 2.252700000000135e-05, 2.445900000000098e-05, 2.2514000000001255e-05, 2.1514000000000255e-05, 2.438900000000313e-05, 2.2457999999999506e-05, 2.4443999999998467e-05, 2.5402000000000757e-05, 2.6347999999998956e-05, 2.2528000000000825e-05, 2.2528000000000825e-05, 2.5334000000001855e-05, 2.158299999999863e-05, 2.3499999999999216e-05, 2.343099999999737e-05, 2.345899999999998e-05, 2.6332999999999912e-05, 1.963900000000185e-05, 2.6319999999999816e-05, 2.1527999999999825e-05, 2.15830000000021e-05, 2.262500000000181e-05, 2.0570000000001004e-05, 2.5332999999998912e-05, 2.444499999999794e-05, 2.061100000000024e-05, 2.343099999999737e-05, 2.1458000000001975e-05, 2.6347999999998956e-05, 2.5429999999999897e-05, 2.6374999999998622e-05, 2.1569999999998535e-05, 2.3458000000000506e-05, 2.2486000000002115e-05, 2.444500000000141e-05, 2.6360999999999052e-05, 2.1541999999999395e-05, 2.2499999999998216e-05, 2.1583999999998105e-05, 2.345899999999998e-05, 2.538900000000066e-05, 2.3416000000001796e-05, 2.3499999999999216e-05, 2.3500000000002685e-05, 2.6319000000000342e-05, 2.5304999999999772e-05, 2.254100000000092e-05]</msg>
<status status="PASS" starttime="20201030 11:51:41.459" endtime="20201030 11:51:41.462"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.455" endtime="20201030 11:51:41.462"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:41.466" endtime="20201030 11:51:41.485"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.464" endtime="20201030 11:51:41.486"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.463" endtime="20201030 11:51:41.486"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.103" endtime="20201030 11:51:41.486"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.103" endtime="20201030 11:51:41.487"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.495" endtime="20201030 11:51:41.517"></status>
</kw>
<msg timestamp="20201030 11:51:41.517" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:41.494" endtime="20201030 11:51:41.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.520" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:41.518" endtime="20201030 11:51:41.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.521" endtime="20201030 11:51:41.522"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.491" endtime="20201030 11:51:41.523"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.489" endtime="20201030 11:51:41.523"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.530" endtime="20201030 11:51:41.816"></status>
</kw>
<msg timestamp="20201030 11:51:41.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023177583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023211583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:41.528" endtime="20201030 11:51:41.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023177583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023211583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:41.820" endtime="20201030 11:51:41.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.829" endtime="20201030 11:51:41.830"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.526" endtime="20201030 11:51:41.831"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.524" endtime="20201030 11:51:41.831"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:41.835" level="INFO">${RESULT} = [{'diff': 3.399999999999931e-05}, {'diff': 2.062499999999981e-05}, {'diff': 2.3499999999999216e-05}, {'diff': 2.2457999999999506e-05}, {'diff': 2.2429999999996897e-05}, {'diff': 2.6249999999998497e-05...</msg>
<status status="PASS" starttime="20201030 11:51:41.832" endtime="20201030 11:51:41.835"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:41.839" level="INFO">${ACCURACY} = {'diff': [3.399999999999931e-05, 2.062499999999981e-05, 2.3499999999999216e-05, 2.2457999999999506e-05, 2.2429999999996897e-05, 2.6249999999998497e-05, 2.4444000000001936e-05, 2.1541999999999395e-05, ...</msg>
<status status="PASS" starttime="20201030 11:51:41.836" endtime="20201030 11:51:41.840"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.844" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201030 11:51:41.843" endtime="20201030 11:51:41.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.846" level="INFO">VALUE: [3.399999999999931e-05, 2.062499999999981e-05, 2.3499999999999216e-05, 2.2457999999999506e-05, 2.2429999999996897e-05, 2.6249999999998497e-05, 2.4444000000001936e-05, 2.1541999999999395e-05, 2.248699999999812e-05, 2.4401999999999757e-05, 2.0513999999999255e-05, 2.6332999999999912e-05, 2.063899999999938e-05, 2.5401999999997288e-05, 2.5332999999998912e-05, 2.437500000000009e-05, 2.1527999999999825e-05, 2.536100000000152e-05, 2.3513999999998786e-05, 2.443099999999837e-05, 2.534700000000195e-05, 2.1500000000000685e-05, 2.343100000000084e-05, 2.0570000000001004e-05, 2.4415999999999327e-05, 2.256900000000006e-05, 2.158299999999863e-05, 2.5304999999999772e-05, 2.1541999999999395e-05, 2.0569999999997535e-05, 2.6306000000000246e-05, 2.0555999999997965e-05, 2.345899999999998e-05, 2.061100000000024e-05, 2.5360999999998052e-05, 2.6319000000000342e-05, 2.5318999999999342e-05, 2.0570000000001004e-05, 2.6387999999998718e-05, 2.156900000000253e-05, 2.443099999999837e-05, 2.055499999999849e-05, 2.0584000000000574e-05, 2.438899999999966e-05, 2.3485999999999646e-05, 2.5402000000000757e-05, 2.5348000000001425e-05, 2.438899999999966e-05, 2.6278000000001106e-05, 2.1528000000003295e-05]</msg>
<status status="PASS" starttime="20201030 11:51:41.845" endtime="20201030 11:51:41.848"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.840" endtime="20201030 11:51:41.848"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:41.852" endtime="20201030 11:51:41.872"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.851" endtime="20201030 11:51:41.872"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.849" endtime="20201030 11:51:41.873"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.487" endtime="20201030 11:51:41.873"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.487" endtime="20201030 11:51:41.873"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.881" endtime="20201030 11:51:41.903"></status>
</kw>
<msg timestamp="20201030 11:51:41.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:41.880" endtime="20201030 11:51:41.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:41.904" endtime="20201030 11:51:41.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.907" endtime="20201030 11:51:41.909"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.877" endtime="20201030 11:51:41.909"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.875" endtime="20201030 11:51:41.910"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.917" endtime="20201030 11:51:42.202"></status>
</kw>
<msg timestamp="20201030 11:51:42.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023655667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023676264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:41.915" endtime="20201030 11:51:42.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:42.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023655667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023676264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:42.206" endtime="20201030 11:51:42.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:42.215" endtime="20201030 11:51:42.216"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.912" endtime="20201030 11:51:42.217"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.910" endtime="20201030 11:51:42.217"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:42.221" level="INFO">${RESULT} = [{'diff': 2.059700000000067e-05}, {'diff': 2.0541999999998395e-05}, {'diff': 2.6360999999999052e-05}, {'diff': 2.444499999999794e-05}, {'diff': 2.5360999999998052e-05}, {'diff': 2.3458000000000506e-05...</msg>
<status status="PASS" starttime="20201030 11:51:42.218" endtime="20201030 11:51:42.222"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:42.226" level="INFO">${ACCURACY} = {'diff': [2.059700000000067e-05, 2.0541999999998395e-05, 2.6360999999999052e-05, 2.444499999999794e-05, 2.5360999999998052e-05, 2.3458000000000506e-05, 2.6291000000001202e-05, 2.3415999999998327e-05, ...</msg>
<status status="PASS" starttime="20201030 11:51:42.222" endtime="20201030 11:51:42.227"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:42.231" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201030 11:51:42.230" endtime="20201030 11:51:42.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:42.233" level="INFO">VALUE: [2.059700000000067e-05, 2.0541999999998395e-05, 2.6360999999999052e-05, 2.444499999999794e-05, 2.5360999999998052e-05, 2.3458000000000506e-05, 2.6291000000001202e-05, 2.3415999999998327e-05, 2.25969999999992e-05, 2.6360999999999052e-05, 2.6332999999999912e-05, 2.4401999999999757e-05, 2.6319999999999816e-05, 2.5346999999998482e-05, 2.540300000000023e-05, 2.1584000000001574e-05, 2.343100000000084e-05, 2.3430000000001366e-05, 2.437500000000009e-05, 2.536100000000152e-05, 2.155500000000296e-05, 2.0679999999998616e-05, 2.2471999999999076e-05, 2.2513999999997786e-05, 2.637500000000209e-05, 2.6362000000001995e-05, 2.3472000000000076e-05, 2.2555999999999965e-05, 2.0584000000000574e-05, 2.6249999999998497e-05, 2.5346999999998482e-05, 2.438899999999966e-05, 2.2555999999999965e-05, 2.3485999999999646e-05, 2.155500000000296e-05, 2.343099999999737e-05, 2.2583999999999105e-05, 2.6319000000000342e-05, 2.2472000000002545e-05, 2.1541999999999395e-05, 2.6319999999999816e-05, 2.4388000000000187e-05, 2.2528000000000825e-05, 2.6360999999999052e-05, 1.963900000000185e-05, 2.0556000000001434e-05, 2.154099999999992e-05, 2.538900000000066e-05, 2.6360999999999052e-05, 2.061100000000024e-05]</msg>
<status status="PASS" starttime="20201030 11:51:42.232" endtime="20201030 11:51:42.238"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.227" endtime="20201030 11:51:42.239"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:42.243" endtime="20201030 11:51:42.262"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.241" endtime="20201030 11:51:42.263"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.240" endtime="20201030 11:51:42.263"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.874" endtime="20201030 11:51:42.263"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.873" endtime="20201030 11:51:42.264"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:42.272" endtime="20201030 11:51:42.294"></status>
</kw>
<msg timestamp="20201030 11:51:42.295" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:42.271" endtime="20201030 11:51:42.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:42.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:42.296" endtime="20201030 11:51:42.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:42.298" endtime="20201030 11:51:42.300"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.268" endtime="20201030 11:51:42.300"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.266" endtime="20201030 11:51:42.301"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:42.307" endtime="20201030 11:51:42.593"></status>
</kw>
<msg timestamp="20201030 11:51:42.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024962569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024995681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:42.305" endtime="20201030 11:51:42.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:42.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024962569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024995681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:42.598" endtime="20201030 11:51:42.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:42.606" endtime="20201030 11:51:42.608"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.303" endtime="20201030 11:51:42.608"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.301" endtime="20201030 11:51:42.609"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:42.613" level="INFO">${RESULT} = [{'diff': 3.311199999999834e-05}, {'diff': 2.062499999999981e-05}, {'diff': 2.2471999999999076e-05}, {'diff': 2.3430000000001366e-05}, {'diff': 2.2500000000001685e-05}, {'diff': 2.538900000000066e-05}...</msg>
<status status="PASS" starttime="20201030 11:51:42.609" endtime="20201030 11:51:42.613"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:42.617" level="INFO">${ACCURACY} = {'diff': [3.311199999999834e-05, 2.062499999999981e-05, 2.2471999999999076e-05, 2.3430000000001366e-05, 2.2500000000001685e-05, 2.538900000000066e-05, 1.965300000000142e-05, 2.6292000000000676e-05, 2....</msg>
<status status="PASS" starttime="20201030 11:51:42.614" endtime="20201030 11:51:42.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:42.621" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201030 11:51:42.620" endtime="20201030 11:51:42.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:42.624" level="INFO">VALUE: [3.311199999999834e-05, 2.062499999999981e-05, 2.2471999999999076e-05, 2.3430000000001366e-05, 2.2500000000001685e-05, 2.538900000000066e-05, 1.965300000000142e-05, 2.6292000000000676e-05, 2.3472000000000076e-05, 2.3540999999998452e-05, 2.4430000000002366e-05, 2.345899999999998e-05, 2.056900000000153e-05, 2.5346999999998482e-05, 2.6360999999999052e-05, 2.6332999999999912e-05, 2.44030000000027e-05, 2.3430000000001366e-05, 2.5278000000000106e-05, 2.345899999999998e-05, 2.443100000000184e-05, 2.3513999999998786e-05, 2.5318999999999342e-05, 2.3429999999997897e-05, 2.440299999999923e-05, 2.2542000000000395e-05, 2.059700000000067e-05, 2.436100000000052e-05, 2.1471999999998076e-05, 2.5360999999998052e-05, 2.1541999999999395e-05, 2.059700000000067e-05, 2.6319999999999816e-05, 1.961099999999924e-05, 2.156899999999906e-05, 2.063899999999938e-05, 1.9708000000000225e-05, 2.5346999999998482e-05, 2.3528000000001825e-05, 1.962500000000228e-05, 2.538899999999719e-05, 1.9666000000001516e-05, 2.44169999999988e-05, 2.722299999999983e-05, 2.2485999999998646e-05, 2.4429999999998897e-05, 2.6346999999999482e-05, 2.6319000000000342e-05, 1.968100000000056e-05, 2.438899999999966e-05]</msg>
<status status="PASS" starttime="20201030 11:51:42.622" endtime="20201030 11:51:42.624"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.617" endtime="20201030 11:51:42.625"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:42.628" endtime="20201030 11:51:42.648"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.627" endtime="20201030 11:51:42.648"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.626" endtime="20201030 11:51:42.649"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.264" endtime="20201030 11:51:42.649"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.264" endtime="20201030 11:51:42.649"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:42.658" endtime="20201030 11:51:42.679"></status>
</kw>
<msg timestamp="20201030 11:51:42.680" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:42.656" endtime="20201030 11:51:42.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:42.682" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:42.681" endtime="20201030 11:51:42.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:42.683" endtime="20201030 11:51:42.685"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.654" endtime="20201030 11:51:42.685"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.652" endtime="20201030 11:51:42.686"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:42.692" endtime="20201030 11:51:42.978"></status>
</kw>
<msg timestamp="20201030 11:51:42.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021198903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021218556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:42.690" endtime="20201030 11:51:42.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:42.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021198903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021218556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:42.983" endtime="20201030 11:51:42.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:42.991" endtime="20201030 11:51:42.993"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.688" endtime="20201030 11:51:42.993"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.686" endtime="20201030 11:51:42.994"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:42.998" level="INFO">${RESULT} = [{'diff': 1.965299999999795e-05}, {'diff': 2.44169999999988e-05}, {'diff': 2.5332999999998912e-05}, {'diff': 2.05830000000011e-05}, {'diff': 2.44169999999988e-05}, {'diff': 2.055499999999849e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:51:42.994" endtime="20201030 11:51:42.998"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:43.002" level="INFO">${ACCURACY} = {'diff': [1.965299999999795e-05, 2.44169999999988e-05, 2.5332999999998912e-05, 2.05830000000011e-05, 2.44169999999988e-05, 2.055499999999849e-05, 2.5360999999998052e-05, 2.6319000000000342e-05, 2.4415...</msg>
<status status="PASS" starttime="20201030 11:51:42.999" endtime="20201030 11:51:43.002"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:43.006" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201030 11:51:43.005" endtime="20201030 11:51:43.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:43.009" level="INFO">VALUE: [1.965299999999795e-05, 2.44169999999988e-05, 2.5332999999998912e-05, 2.05830000000011e-05, 2.44169999999988e-05, 2.055499999999849e-05, 2.5360999999998052e-05, 2.6319000000000342e-05, 2.4415999999999327e-05, 2.156899999999906e-05, 2.245899999999898e-05, 2.5304999999999772e-05, 2.6320000000003285e-05, 2.063899999999938e-05, 2.443100000000184e-05, 2.1556000000002434e-05, 2.6319999999999816e-05, 2.3472000000000076e-05, 2.161099999999777e-05, 2.2513999999997786e-05, 2.2500000000001685e-05, 2.6277000000001632e-05, 2.255500000000049e-05, 2.6306000000000246e-05, 2.156899999999906e-05, 2.4334000000000855e-05, 2.536100000000152e-05, 2.3430000000001366e-05, 2.6319999999999816e-05, 2.538900000000066e-05, 2.1569999999998535e-05, 2.6332999999999912e-05, 2.1541999999999395e-05, 2.6319000000000342e-05, 2.251300000000178e-05, 2.540300000000023e-05, 2.2485999999998646e-05, 2.4444000000001936e-05, 2.3499999999999216e-05, 2.2499999999998216e-05, 2.437499999999662e-05, 2.15830000000021e-05, 2.062499999999981e-05, 2.537500000000109e-05, 2.2443999999999936e-05, 2.05969999999972e-05, 2.338899999999866e-05, 2.538899999999719e-05, 2.4472000000001076e-05, 2.2486000000002115e-05]</msg>
<status status="PASS" starttime="20201030 11:51:43.007" endtime="20201030 11:51:43.010"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.003" endtime="20201030 11:51:43.011"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:43.014" endtime="20201030 11:51:43.034"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.013" endtime="20201030 11:51:43.034"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.012" endtime="20201030 11:51:43.035"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.650" endtime="20201030 11:51:43.035"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.649" endtime="20201030 11:51:43.035"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:43.044" endtime="20201030 11:51:43.064"></status>
</kw>
<msg timestamp="20201030 11:51:43.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:43.042" endtime="20201030 11:51:43.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:43.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:43.065" endtime="20201030 11:51:43.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:43.068" endtime="20201030 11:51:43.069"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.040" endtime="20201030 11:51:43.070"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.037" endtime="20201030 11:51:43.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:43.077" endtime="20201030 11:51:43.362"></status>
</kw>
<msg timestamp="20201030 11:51:43.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021984292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022019181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:43.075" endtime="20201030 11:51:43.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:43.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021984292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022019181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:43.367" endtime="20201030 11:51:43.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:43.375" endtime="20201030 11:51:43.377"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.073" endtime="20201030 11:51:43.377"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.071" endtime="20201030 11:51:43.378"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:43.381" level="INFO">${RESULT} = [{'diff': 3.4888999999999754e-05}, {'diff': 2.636100000000252e-05}, {'diff': 2.255500000000049e-05}, {'diff': 2.6333999999999386e-05}, {'diff': 2.344500000000041e-05}, {'diff': 2.3444000000000936e-05}...</msg>
<status status="PASS" starttime="20201030 11:51:43.378" endtime="20201030 11:51:43.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:43.386" level="INFO">${ACCURACY} = {'diff': [3.4888999999999754e-05, 2.636100000000252e-05, 2.255500000000049e-05, 2.6333999999999386e-05, 2.344500000000041e-05, 2.3444000000000936e-05, 2.2542000000000395e-05, 2.3485999999999646e-05, 2...</msg>
<status status="PASS" starttime="20201030 11:51:43.382" endtime="20201030 11:51:43.387"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:43.391" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201030 11:51:43.390" endtime="20201030 11:51:43.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:43.394" level="INFO">VALUE: [3.4888999999999754e-05, 2.636100000000252e-05, 2.255500000000049e-05, 2.6333999999999386e-05, 2.344500000000041e-05, 2.3444000000000936e-05, 2.2542000000000395e-05, 2.3485999999999646e-05, 2.3500000000002685e-05, 2.438899999999966e-05, 2.2458000000002976e-05, 2.438899999999966e-05, 2.343100000000084e-05, 2.0584000000000574e-05, 2.0584000000000574e-05, 2.2540999999997452e-05, 2.062499999999981e-05, 2.4415999999999327e-05, 2.444500000000141e-05, 2.063899999999938e-05, 2.059700000000067e-05, 2.5332999999998912e-05, 2.44169999999988e-05, 2.3430000000001366e-05, 2.1555999999998965e-05, 2.1500000000000685e-05, 2.05830000000011e-05, 2.4457999999998037e-05, 2.2528000000000825e-05, 2.3472000000000076e-05, 2.3458000000000506e-05, 2.6292000000000676e-05, 2.055500000000196e-05, 2.538900000000066e-05, 2.1583999999998105e-05, 2.6278000000001106e-05, 2.44169999999988e-05, 2.5346999999998482e-05, 2.061100000000024e-05, 2.2514000000001255e-05, 2.44169999999988e-05, 2.2542000000000395e-05, 2.6360999999999052e-05, 2.437500000000009e-05, 2.5346999999998482e-05, 2.343099999999737e-05, 2.4457999999998037e-05, 2.534700000000195e-05, 2.1527999999999825e-05, 2.15830000000021e-05]</msg>
<status status="PASS" starttime="20201030 11:51:43.392" endtime="20201030 11:51:43.394"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.387" endtime="20201030 11:51:43.395"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:43.398" endtime="20201030 11:51:43.418"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.397" endtime="20201030 11:51:43.418"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.396" endtime="20201030 11:51:43.419"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.036" endtime="20201030 11:51:43.419"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.035" endtime="20201030 11:51:43.419"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:43.428" endtime="20201030 11:51:43.450"></status>
</kw>
<msg timestamp="20201030 11:51:43.451" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:43.426" endtime="20201030 11:51:43.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:43.453" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:43.452" endtime="20201030 11:51:43.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:43.454" endtime="20201030 11:51:43.456"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.424" endtime="20201030 11:51:43.456"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.422" endtime="20201030 11:51:43.457"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:43.463" endtime="20201030 11:51:43.753"></status>
</kw>
<msg timestamp="20201030 11:51:43.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024868583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024894958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:43.462" endtime="20201030 11:51:43.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:43.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024868583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024894958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:43.757" endtime="20201030 11:51:43.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:43.766" endtime="20201030 11:51:43.767"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.459" endtime="20201030 11:51:43.768"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.457" endtime="20201030 11:51:43.768"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:43.772" level="INFO">${RESULT} = [{'diff': 2.6374999999998622e-05}, {'diff': 2.540300000000023e-05}, {'diff': 2.2514000000001255e-05}, {'diff': 2.2499999999998216e-05}, {'diff': 2.0584000000000574e-05}, {'diff': 2.441700000000227e-05...</msg>
<status status="PASS" starttime="20201030 11:51:43.769" endtime="20201030 11:51:43.772"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:43.776" level="INFO">${ACCURACY} = {'diff': [2.6374999999998622e-05, 2.540300000000023e-05, 2.2514000000001255e-05, 2.2499999999998216e-05, 2.0584000000000574e-05, 2.441700000000227e-05, 2.437500000000009e-05, 2.4401999999999757e-05, 2...</msg>
<status status="PASS" starttime="20201030 11:51:43.773" endtime="20201030 11:51:43.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:43.781" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201030 11:51:43.780" endtime="20201030 11:51:43.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:43.783" level="INFO">VALUE: [2.6374999999998622e-05, 2.540300000000023e-05, 2.2514000000001255e-05, 2.2499999999998216e-05, 2.0584000000000574e-05, 2.441700000000227e-05, 2.437500000000009e-05, 2.4401999999999757e-05, 2.156899999999906e-05, 2.2555999999999965e-05, 2.1527999999999825e-05, 2.1542000000002864e-05, 2.156899999999906e-05, 2.1527999999999825e-05, 2.1570000000002004e-05, 2.4444000000001936e-05, 2.2485999999998646e-05, 2.2514000000001255e-05, 2.44169999999988e-05, 2.3485999999999646e-05, 2.44169999999988e-05, 2.440299999999923e-05, 2.444499999999794e-05, 2.063899999999938e-05, 2.1500000000000685e-05, 2.3458000000000506e-05, 2.059700000000067e-05, 2.063899999999938e-05, 2.3513999999998786e-05, 2.438899999999966e-05, 2.3514000000002255e-05, 2.3499999999999216e-05, 2.3485999999999646e-05, 2.056899999999806e-05, 1.9680000000001086e-05, 2.6319000000000342e-05, 2.256900000000006e-05, 2.347300000000302e-05, 2.438899999999966e-05, 2.6306000000000246e-05, 2.5360999999998052e-05, 2.056900000000153e-05, 2.1570000000002004e-05, 2.1570000000002004e-05, 2.6304999999997303e-05, 2.061099999999677e-05, 2.155499999999949e-05, 2.537500000000109e-05, 2.055499999999849e-05, 2.061100000000024e-05]</msg>
<status status="PASS" starttime="20201030 11:51:43.782" endtime="20201030 11:51:43.784"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.777" endtime="20201030 11:51:43.784"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:43.788" endtime="20201030 11:51:43.807"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.787" endtime="20201030 11:51:43.808"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.785" endtime="20201030 11:51:43.808"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.420" endtime="20201030 11:51:43.809"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.419" endtime="20201030 11:51:43.809"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:43.817" endtime="20201030 11:51:43.837"></status>
</kw>
<msg timestamp="20201030 11:51:43.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:43.816" endtime="20201030 11:51:43.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:43.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:43.838" endtime="20201030 11:51:43.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:43.841" endtime="20201030 11:51:43.843"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.813" endtime="20201030 11:51:43.843"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.811" endtime="20201030 11:51:43.844"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:43.850" endtime="20201030 11:51:44.137"></status>
</kw>
<msg timestamp="20201030 11:51:44.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022090667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022125583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:43.849" endtime="20201030 11:51:44.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:44.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022090667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022125583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:44.141" endtime="20201030 11:51:44.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:44.150" endtime="20201030 11:51:44.151"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.846" endtime="20201030 11:51:44.152"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.844" endtime="20201030 11:51:44.152"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:44.156" level="INFO">${RESULT} = [{'diff': 3.491599999999942e-05}, {'diff': 2.05830000000011e-05}, {'diff': 2.44169999999988e-05}, {'diff': 2.3458000000000506e-05}, {'diff': 2.441700000000227e-05}, {'diff': 2.438899999999966e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:44.153" endtime="20201030 11:51:44.156"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:44.160" level="INFO">${ACCURACY} = {'diff': [3.491599999999942e-05, 2.05830000000011e-05, 2.44169999999988e-05, 2.3458000000000506e-05, 2.441700000000227e-05, 2.438899999999966e-05, 1.959699999999967e-05, 2.3444000000000936e-05, 2.2472...</msg>
<status status="PASS" starttime="20201030 11:51:44.157" endtime="20201030 11:51:44.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:44.165" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201030 11:51:44.164" endtime="20201030 11:51:44.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:44.167" level="INFO">VALUE: [3.491599999999942e-05, 2.05830000000011e-05, 2.44169999999988e-05, 2.3458000000000506e-05, 2.441700000000227e-05, 2.438899999999966e-05, 1.959699999999967e-05, 2.3444000000000936e-05, 2.2472000000002545e-05, 2.2471999999999076e-05, 2.066700000000199e-05, 2.1556000000002434e-05, 2.441700000000227e-05, 2.3500000000002685e-05, 2.2513999999997786e-05, 2.2485999999998646e-05, 2.0556000000001434e-05, 2.437500000000009e-05, 2.1541999999999395e-05, 2.3444000000000936e-05, 2.633300000000338e-05, 2.154099999999992e-05, 2.347299999999955e-05, 2.538900000000066e-05, 2.347300000000302e-05, 2.0556000000001434e-05, 2.05830000000011e-05, 2.154099999999992e-05, 2.538899999999719e-05, 2.3416000000001796e-05, 2.6346999999999482e-05, 2.3512999999999312e-05, 2.537499999999762e-05, 2.2528000000000825e-05, 2.536100000000152e-05, 2.440299999999923e-05, 2.5346999999998482e-05, 2.6346999999999482e-05, 2.537499999999762e-05, 2.6292000000000676e-05, 2.154099999999992e-05, 2.2471999999999076e-05, 2.4429999999998897e-05, 2.4401999999999757e-05, 2.1569999999998535e-05, 2.1584000000001574e-05, 2.538900000000066e-05, 2.443099999999837e-05, 2.537499999999762e-05, 2.2486000000002115e-05]</msg>
<status status="PASS" starttime="20201030 11:51:44.166" endtime="20201030 11:51:44.169"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.161" endtime="20201030 11:51:44.169"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:44.173" endtime="20201030 11:51:44.192"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.171" endtime="20201030 11:51:44.193"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.170" endtime="20201030 11:51:44.193"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.810" endtime="20201030 11:51:44.193"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.809" endtime="20201030 11:51:44.194"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:44.202" endtime="20201030 11:51:44.224"></status>
</kw>
<msg timestamp="20201030 11:51:44.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:44.201" endtime="20201030 11:51:44.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:44.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:44.225" endtime="20201030 11:51:44.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:44.228" endtime="20201030 11:51:44.229"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.198" endtime="20201030 11:51:44.230"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.196" endtime="20201030 11:51:44.230"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:44.236" endtime="20201030 11:51:44.523"></status>
</kw>
<msg timestamp="20201030 11:51:44.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024065139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024085764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:44.235" endtime="20201030 11:51:44.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:44.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024065139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024085764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:44.527" endtime="20201030 11:51:44.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:44.536" endtime="20201030 11:51:44.537"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.232" endtime="20201030 11:51:44.538"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.231" endtime="20201030 11:51:44.538"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:44.542" level="INFO">${RESULT} = [{'diff': 2.062499999999981e-05}, {'diff': 2.2514000000001255e-05}, {'diff': 2.345899999999998e-05}, {'diff': 2.7290999999998733e-05}, {'diff': 2.6290999999997733e-05}, {'diff': 2.547300000000155e-05}...</msg>
<status status="PASS" starttime="20201030 11:51:44.539" endtime="20201030 11:51:44.542"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:44.547" level="INFO">${ACCURACY} = {'diff': [2.062499999999981e-05, 2.2514000000001255e-05, 2.345899999999998e-05, 2.7290999999998733e-05, 2.6290999999997733e-05, 2.547300000000155e-05, 2.3472000000000076e-05, 2.1555999999998965e-05, 2...</msg>
<status status="PASS" starttime="20201030 11:51:44.543" endtime="20201030 11:51:44.547"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:44.552" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201030 11:51:44.551" endtime="20201030 11:51:44.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:44.554" level="INFO">VALUE: [2.062499999999981e-05, 2.2514000000001255e-05, 2.345899999999998e-05, 2.7290999999998733e-05, 2.6290999999997733e-05, 2.547300000000155e-05, 2.3472000000000076e-05, 2.1555999999998965e-05, 2.2514000000001255e-05, 2.2472000000002545e-05, 2.2514000000001255e-05, 2.5348000000001425e-05, 2.4443999999998467e-05, 2.063899999999938e-05, 2.2500000000001685e-05, 2.059700000000067e-05, 2.2542000000000395e-05, 2.5443999999999467e-05, 2.437500000000009e-05, 2.4444000000001936e-05, 2.1556000000002434e-05, 2.437500000000009e-05, 2.3472000000000076e-05, 2.156899999999906e-05, 2.3444000000000936e-05, 2.2485999999998646e-05, 2.1527999999999825e-05, 2.3513999999998786e-05, 2.1514000000000255e-05, 2.1541999999999395e-05, 2.3472000000000076e-05, 2.54169999999998e-05, 2.6304999999997303e-05, 2.1527999999999825e-05, 2.156900000000253e-05, 2.3499999999999216e-05, 2.4415999999999327e-05, 2.2471999999999076e-05, 2.540299999999676e-05, 2.3514000000002255e-05, 2.3458000000000506e-05, 2.0527999999998825e-05, 2.444500000000141e-05, 2.6360999999999052e-05, 2.443099999999837e-05, 2.4401999999999757e-05, 2.062499999999981e-05, 2.063899999999938e-05, 2.6291000000001202e-05, 2.3444000000000936e-05]</msg>
<status status="PASS" starttime="20201030 11:51:44.553" endtime="20201030 11:51:44.555"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.548" endtime="20201030 11:51:44.555"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:44.559" endtime="20201030 11:51:44.578"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.557" endtime="20201030 11:51:44.579"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.556" endtime="20201030 11:51:44.579"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.195" endtime="20201030 11:51:44.580"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.194" endtime="20201030 11:51:44.580"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:44.588" endtime="20201030 11:51:44.610"></status>
</kw>
<msg timestamp="20201030 11:51:44.611" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:44.587" endtime="20201030 11:51:44.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:44.613" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:44.612" endtime="20201030 11:51:44.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:44.614" endtime="20201030 11:51:44.616"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.584" endtime="20201030 11:51:44.617"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.582" endtime="20201030 11:51:44.617"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:44.623" endtime="20201030 11:51:44.911"></status>
</kw>
<msg timestamp="20201030 11:51:44.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024816403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024825556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:44.622" endtime="20201030 11:51:44.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:44.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024816403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024825556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:44.915" endtime="20201030 11:51:44.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:44.923" endtime="20201030 11:51:44.925"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.619" endtime="20201030 11:51:44.926"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.618" endtime="20201030 11:51:44.926"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:44.930" level="INFO">${RESULT} = [{'diff': 9.152999999997857e-06}, {'diff': 1.9638000000002376e-05}, {'diff': 2.341700000000127e-05}, {'diff': 2.5360999999998052e-05}, {'diff': 2.1514000000000255e-05}, {'diff': 2.536100000000152e-05}...</msg>
<status status="PASS" starttime="20201030 11:51:44.927" endtime="20201030 11:51:44.930"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:44.934" level="INFO">${ACCURACY} = {'diff': [9.152999999997857e-06, 1.9638000000002376e-05, 2.341700000000127e-05, 2.5360999999998052e-05, 2.1514000000000255e-05, 2.536100000000152e-05, 2.15969999999982e-05, 2.5360999999998052e-05, 2.1...</msg>
<status status="PASS" starttime="20201030 11:51:44.931" endtime="20201030 11:51:44.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:44.938" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201030 11:51:44.937" endtime="20201030 11:51:44.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:44.941" level="INFO">VALUE: [9.152999999997857e-06, 1.9638000000002376e-05, 2.341700000000127e-05, 2.5360999999998052e-05, 2.1514000000000255e-05, 2.536100000000152e-05, 2.15969999999982e-05, 2.5360999999998052e-05, 2.1514000000000255e-05, 2.6319000000000342e-05, 2.5402000000000757e-05, 2.536100000000152e-05, 2.438899999999966e-05, 2.4443999999998467e-05, 2.3499999999999216e-05, 2.05830000000011e-05, 2.537500000000109e-05, 2.2554999999997022e-05, 2.636100000000252e-05, 2.2499999999998216e-05, 2.4401999999999757e-05, 2.154099999999992e-05, 2.2514000000001255e-05, 2.243099999999984e-05, 2.538899999999719e-05, 2.2499999999998216e-05, 2.2499999999998216e-05, 2.056899999999806e-05, 2.3500000000002685e-05, 2.344500000000041e-05, 2.538900000000066e-05, 2.6360999999999052e-05, 2.2485999999998646e-05, 2.6361999999998526e-05, 2.3444000000000936e-05, 2.1514000000000255e-05, 2.0598000000000144e-05, 2.3499999999999216e-05, 2.3458000000000506e-05, 2.6319000000000342e-05, 2.6360999999999052e-05, 2.0555999999997965e-05, 2.1471999999998076e-05, 2.2486000000002115e-05, 2.6292000000000676e-05, 2.1583999999998105e-05, 2.2542000000000395e-05, 2.343100000000084e-05, 2.2443999999999936e-05, 2.3443999999997467e-05]</msg>
<status status="PASS" starttime="20201030 11:51:44.939" endtime="20201030 11:51:44.942"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.935" endtime="20201030 11:51:44.942"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:44.946" endtime="20201030 11:51:44.966"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.944" endtime="20201030 11:51:44.966"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.943" endtime="20201030 11:51:44.967"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.581" endtime="20201030 11:51:44.967"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.580" endtime="20201030 11:51:44.967"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:44.976" endtime="20201030 11:51:44.997"></status>
</kw>
<msg timestamp="20201030 11:51:44.997" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:44.974" endtime="20201030 11:51:44.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:45.000" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:44.998" endtime="20201030 11:51:45.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:45.001" endtime="20201030 11:51:45.003"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.971" endtime="20201030 11:51:45.003"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.969" endtime="20201030 11:51:45.004"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:45.010" endtime="20201030 11:51:45.295"></status>
</kw>
<msg timestamp="20201030 11:51:45.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024499694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024526958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:45.008" endtime="20201030 11:51:45.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:45.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024499694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024526958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:45.299" endtime="20201030 11:51:45.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:45.308" endtime="20201030 11:51:45.309"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.006" endtime="20201030 11:51:45.310"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.004" endtime="20201030 11:51:45.310"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:45.314" level="INFO">${RESULT} = [{'diff': 2.7264000000002536e-05}, {'diff': 2.0598000000000144e-05}, {'diff': 2.1584000000001574e-05}, {'diff': 2.44169999999988e-05}, {'diff': 2.6305000000000772e-05}, {'diff': 2.061100000000024e-05}...</msg>
<status status="PASS" starttime="20201030 11:51:45.311" endtime="20201030 11:51:45.314"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:45.318" level="INFO">${ACCURACY} = {'diff': [2.7264000000002536e-05, 2.0598000000000144e-05, 2.1584000000001574e-05, 2.44169999999988e-05, 2.6305000000000772e-05, 2.061100000000024e-05, 2.254100000000092e-05, 2.148700000000059e-05, 2.0...</msg>
<status status="PASS" starttime="20201030 11:51:45.315" endtime="20201030 11:51:45.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:45.323" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201030 11:51:45.322" endtime="20201030 11:51:45.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:45.325" level="INFO">VALUE: [2.7264000000002536e-05, 2.0598000000000144e-05, 2.1584000000001574e-05, 2.44169999999988e-05, 2.6305000000000772e-05, 2.061100000000024e-05, 2.254100000000092e-05, 2.148700000000059e-05, 2.062499999999981e-05, 2.156900000000253e-05, 2.2514000000001255e-05, 2.1500000000000685e-05, 2.3458000000000506e-05, 2.6360999999999052e-05, 2.347299999999955e-05, 2.1583999999998105e-05, 2.156899999999906e-05, 2.543099999999937e-05, 2.44169999999988e-05, 2.1541999999999395e-05, 2.3443999999997467e-05, 2.437500000000009e-05, 2.156899999999906e-05, 2.5443999999999467e-05, 2.437500000000009e-05, 2.6319000000000342e-05, 2.058299999999763e-05, 2.158299999999863e-05, 2.254100000000092e-05, 2.1583999999998105e-05, 2.436100000000052e-05, 2.059700000000067e-05, 1.9680000000001086e-05, 2.243099999999984e-05, 2.6306000000000246e-05, 2.6305999999996776e-05, 2.1555999999998965e-05, 2.44169999999988e-05, 2.059700000000067e-05, 2.444499999999794e-05, 2.05830000000011e-05, 2.440299999999923e-05, 2.159700000000167e-05, 2.1541999999999395e-05, 2.34169999999978e-05, 2.6346999999999482e-05, 2.54169999999998e-05, 2.2513999999997786e-05, 2.1485999999997646e-05, 2.536100000000152e-05]</msg>
<status status="PASS" starttime="20201030 11:51:45.324" endtime="20201030 11:51:45.327"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.319" endtime="20201030 11:51:45.327"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:45.331" endtime="20201030 11:51:45.350"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.329" endtime="20201030 11:51:45.351"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.328" endtime="20201030 11:51:45.351"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.968" endtime="20201030 11:51:45.352"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.967" endtime="20201030 11:51:45.352"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:45.360" endtime="20201030 11:51:45.380"></status>
</kw>
<msg timestamp="20201030 11:51:45.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:45.359" endtime="20201030 11:51:45.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:45.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:45.381" endtime="20201030 11:51:45.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:45.384" endtime="20201030 11:51:45.385"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.356" endtime="20201030 11:51:45.386"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.354" endtime="20201030 11:51:45.386"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:45.393" endtime="20201030 11:51:45.678"></status>
</kw>
<msg timestamp="20201030 11:51:45.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021580972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021605431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:45.391" endtime="20201030 11:51:45.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:45.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021580972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021605431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:45.682" endtime="20201030 11:51:45.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:45.690" endtime="20201030 11:51:45.692"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.389" endtime="20201030 11:51:45.693"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.387" endtime="20201030 11:51:45.693"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:45.697" level="INFO">${RESULT} = [{'diff': 2.445900000000098e-05}, {'diff': 2.1541999999999395e-05}, {'diff': 2.6319000000000342e-05}, {'diff': 2.4458000000001506e-05}, {'diff': 2.540300000000023e-05}, {'diff': 2.4472000000001076e-05...</msg>
<status status="PASS" starttime="20201030 11:51:45.694" endtime="20201030 11:51:45.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:45.702" level="INFO">${ACCURACY} = {'diff': [2.445900000000098e-05, 2.1541999999999395e-05, 2.6319000000000342e-05, 2.4458000000001506e-05, 2.540300000000023e-05, 2.4472000000001076e-05, 2.6291999999997206e-05, 2.3458000000000506e-05, ...</msg>
<status status="PASS" starttime="20201030 11:51:45.698" endtime="20201030 11:51:45.702"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:45.706" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201030 11:51:45.705" endtime="20201030 11:51:45.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:45.709" level="INFO">VALUE: [2.445900000000098e-05, 2.1541999999999395e-05, 2.6319000000000342e-05, 2.4458000000001506e-05, 2.540300000000023e-05, 2.4472000000001076e-05, 2.6291999999997206e-05, 2.3458000000000506e-05, 2.436099999999705e-05, 2.3458000000000506e-05, 2.3458000000000506e-05, 2.6402000000001757e-05, 2.443099999999837e-05, 2.2472000000002545e-05, 2.438899999999966e-05, 2.152700000000035e-05, 2.344500000000041e-05, 2.2542000000000395e-05, 2.5429999999999897e-05, 2.05969999999972e-05, 2.059700000000067e-05, 2.3429999999997897e-05, 2.5360999999998052e-05, 2.2569999999999535e-05, 2.062499999999981e-05, 2.0598000000000144e-05, 2.2486000000002115e-05, 2.440299999999923e-05, 2.440299999999923e-05, 2.4458000000001506e-05, 2.055499999999849e-05, 2.436100000000052e-05, 2.2499999999998216e-05, 2.6319999999999816e-05, 2.437500000000009e-05, 2.6360999999999052e-05, 2.5402000000000757e-05, 2.440299999999923e-05, 2.44169999999988e-05, 2.534700000000195e-05, 2.2499999999998216e-05, 2.2528000000000825e-05, 2.538900000000066e-05, 2.2513999999997786e-05, 2.6332999999999912e-05, 2.2542000000000395e-05, 2.158299999999863e-05, 2.344500000000041e-05, 2.1526999999996882e-05, 2.3499999999999216e-05]</msg>
<status status="PASS" starttime="20201030 11:51:45.708" endtime="20201030 11:51:45.710"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.703" endtime="20201030 11:51:45.710"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:45.714" endtime="20201030 11:51:45.733"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.712" endtime="20201030 11:51:45.734"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.711" endtime="20201030 11:51:45.734"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.353" endtime="20201030 11:51:45.734"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.352" endtime="20201030 11:51:45.735"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:45.743" endtime="20201030 11:51:45.763"></status>
</kw>
<msg timestamp="20201030 11:51:45.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:45.741" endtime="20201030 11:51:45.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:45.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:45.764" endtime="20201030 11:51:45.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:45.767" endtime="20201030 11:51:45.768"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.739" endtime="20201030 11:51:45.769"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.737" endtime="20201030 11:51:45.769"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:45.775" endtime="20201030 11:51:46.064"></status>
</kw>
<msg timestamp="20201030 11:51:46.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020438569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020453403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:45.774" endtime="20201030 11:51:46.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020438569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020453403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:46.068" endtime="20201030 11:51:46.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.077" endtime="20201030 11:51:46.078"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.771" endtime="20201030 11:51:46.079"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.770" endtime="20201030 11:51:46.079"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:46.083" level="INFO">${RESULT} = [{'diff': 1.4833999999998293e-05}, {'diff': 2.154099999999992e-05}, {'diff': 2.344500000000041e-05}, {'diff': 2.6304999999997303e-05}, {'diff': 2.44030000000027e-05}, {'diff': 1.9583999999999574e-05},...</msg>
<status status="PASS" starttime="20201030 11:51:46.080" endtime="20201030 11:51:46.084"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:46.087" level="INFO">${ACCURACY} = {'diff': [1.4833999999998293e-05, 2.154099999999992e-05, 2.344500000000041e-05, 2.6304999999997303e-05, 2.44030000000027e-05, 1.9583999999999574e-05, 2.6319999999999816e-05, 2.6332999999999912e-05, 2....</msg>
<status status="PASS" starttime="20201030 11:51:46.084" endtime="20201030 11:51:46.088"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.092" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201030 11:51:46.091" endtime="20201030 11:51:46.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.094" level="INFO">VALUE: [1.4833999999998293e-05, 2.154099999999992e-05, 2.344500000000041e-05, 2.6304999999997303e-05, 2.44030000000027e-05, 1.9583999999999574e-05, 2.6319999999999816e-05, 2.6332999999999912e-05, 2.343100000000084e-05, 2.1527999999999825e-05, 2.6306000000000246e-05, 2.1485999999997646e-05, 1.968100000000056e-05, 2.6332999999999912e-05, 2.0570000000001004e-05, 2.34169999999978e-05, 2.1556000000002434e-05, 2.538900000000066e-05, 2.2513999999997786e-05, 2.2542000000000395e-05, 2.5429999999999897e-05, 2.44169999999988e-05, 2.0584000000000574e-05, 2.345899999999998e-05, 2.4472000000001076e-05, 2.540300000000023e-05, 2.15830000000021e-05, 2.1527999999999825e-05, 2.154099999999992e-05, 2.1514000000000255e-05, 2.1527999999999825e-05, 2.2472000000002545e-05, 2.2500000000001685e-05, 2.438899999999966e-05, 2.438899999999966e-05, 2.1541999999999395e-05, 2.6304999999997303e-05, 2.2513999999997786e-05, 2.1569999999998535e-05, 2.0570000000001004e-05, 2.1457999999998506e-05, 2.6291000000001202e-05, 2.3444000000000936e-05, 2.44030000000027e-05, 2.1541999999999395e-05, 2.44030000000027e-05, 2.241700000000027e-05, 2.1514000000000255e-05, 2.1541999999999395e-05, 2.166699999999952e-05]</msg>
<status status="PASS" starttime="20201030 11:51:46.093" endtime="20201030 11:51:46.095"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.088" endtime="20201030 11:51:46.096"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:46.099" endtime="20201030 11:51:46.119"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.098" endtime="20201030 11:51:46.119"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.097" endtime="20201030 11:51:46.120"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.735" endtime="20201030 11:51:46.120"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.735" endtime="20201030 11:51:46.120"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.129" endtime="20201030 11:51:46.148"></status>
</kw>
<msg timestamp="20201030 11:51:46.149" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:46.127" endtime="20201030 11:51:46.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:46.150" endtime="20201030 11:51:46.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.152" endtime="20201030 11:51:46.154"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.125" endtime="20201030 11:51:46.154"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.123" endtime="20201030 11:51:46.155"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.161" endtime="20201030 11:51:46.446"></status>
</kw>
<msg timestamp="20201030 11:51:46.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021755847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021772611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:46.160" endtime="20201030 11:51:46.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021755847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021772611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:46.450" endtime="20201030 11:51:46.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.459" endtime="20201030 11:51:46.460"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.157" endtime="20201030 11:51:46.461"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.155" endtime="20201030 11:51:46.461"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:46.465" level="INFO">${RESULT} = [{'diff': 1.6764000000002444e-05}, {'diff': 2.3444000000000936e-05}, {'diff': 2.156899999999906e-05}, {'diff': 2.5332999999998912e-05}, {'diff': 2.3443999999997467e-05}, {'diff': 2.4429999999998897e-0...</msg>
<status status="PASS" starttime="20201030 11:51:46.462" endtime="20201030 11:51:46.465"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:46.469" level="INFO">${ACCURACY} = {'diff': [1.6764000000002444e-05, 2.3444000000000936e-05, 2.156899999999906e-05, 2.5332999999998912e-05, 2.3443999999997467e-05, 2.4429999999998897e-05, 2.255500000000049e-05, 2.5429999999999897e-05, ...</msg>
<status status="PASS" starttime="20201030 11:51:46.466" endtime="20201030 11:51:46.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.474" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201030 11:51:46.473" endtime="20201030 11:51:46.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.477" level="INFO">VALUE: [1.6764000000002444e-05, 2.3444000000000936e-05, 2.156899999999906e-05, 2.5332999999998912e-05, 2.3443999999997467e-05, 2.4429999999998897e-05, 2.255500000000049e-05, 2.5429999999999897e-05, 2.0611999999999714e-05, 2.248699999999812e-05, 2.437500000000009e-05, 2.345899999999998e-05, 2.536100000000152e-05, 2.05969999999972e-05, 2.438899999999966e-05, 2.059700000000067e-05, 2.6319000000000342e-05, 2.2499999999998216e-05, 2.6264000000001536e-05, 2.534700000000195e-05, 2.3514000000002255e-05, 2.255500000000049e-05, 2.2485999999998646e-05, 2.537500000000109e-05, 2.2542000000000395e-05, 2.443100000000184e-05, 2.2486000000002115e-05, 2.0598000000000144e-05, 2.5318999999999342e-05, 2.155500000000296e-05, 2.1541999999999395e-05, 2.0598000000000144e-05, 2.537500000000109e-05, 2.0598000000000144e-05, 2.1555999999998965e-05, 2.4415999999999327e-05, 2.536100000000152e-05, 2.441700000000227e-05, 2.155500000000296e-05, 2.438899999999966e-05, 2.1555999999998965e-05, 2.059700000000067e-05, 2.437500000000009e-05, 2.063899999999938e-05, 2.540300000000023e-05, 2.3444000000000936e-05, 2.154099999999992e-05, 2.341700000000127e-05, 2.05969999999972e-05, 2.344500000000041e-05]</msg>
<status status="PASS" starttime="20201030 11:51:46.475" endtime="20201030 11:51:46.478"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.470" endtime="20201030 11:51:46.478"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:46.482" endtime="20201030 11:51:46.501"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.480" endtime="20201030 11:51:46.502"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.479" endtime="20201030 11:51:46.502"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.121" endtime="20201030 11:51:46.502"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.120" endtime="20201030 11:51:46.503"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.511" endtime="20201030 11:51:46.530"></status>
</kw>
<msg timestamp="20201030 11:51:46.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:46.510" endtime="20201030 11:51:46.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.533" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:46.531" endtime="20201030 11:51:46.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.534" endtime="20201030 11:51:46.535"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.507" endtime="20201030 11:51:46.536"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.505" endtime="20201030 11:51:46.536"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.543" endtime="20201030 11:51:46.829"></status>
</kw>
<msg timestamp="20201030 11:51:46.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021072528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021109319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:46.541" endtime="20201030 11:51:46.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021072528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021109319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:46.834" endtime="20201030 11:51:46.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.842" endtime="20201030 11:51:46.844"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.538" endtime="20201030 11:51:46.844"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.537" endtime="20201030 11:51:46.845"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:46.849" level="INFO">${RESULT} = [{'diff': 3.6791000000001295e-05}, {'diff': 2.2486000000002115e-05}, {'diff': 2.3472000000000076e-05}, {'diff': 2.1583999999998105e-05}, {'diff': 2.5346999999998482e-05}, {'diff': 2.343100000000084e-0...</msg>
<status status="PASS" starttime="20201030 11:51:46.845" endtime="20201030 11:51:46.849"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:46.854" level="INFO">${ACCURACY} = {'diff': [3.6791000000001295e-05, 2.2486000000002115e-05, 2.3472000000000076e-05, 2.1583999999998105e-05, 2.5346999999998482e-05, 2.343100000000084e-05, 2.2443999999999936e-05, 2.5360999999998052e-05,...</msg>
<status status="PASS" starttime="20201030 11:51:46.850" endtime="20201030 11:51:46.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.858" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201030 11:51:46.857" endtime="20201030 11:51:46.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.861" level="INFO">VALUE: [3.6791000000001295e-05, 2.2486000000002115e-05, 2.3472000000000076e-05, 2.1583999999998105e-05, 2.5346999999998482e-05, 2.343100000000084e-05, 2.2443999999999936e-05, 2.5360999999998052e-05, 2.345899999999998e-05, 2.3458000000000506e-05, 2.063899999999938e-05, 2.3485999999999646e-05, 2.1541999999999395e-05, 2.7235999999999927e-05, 2.3458000000000506e-05, 2.2527999999997356e-05, 2.537499999999762e-05, 2.0513999999999255e-05, 2.6333999999999386e-05, 2.440299999999923e-05, 2.056899999999806e-05, 2.5346999999998482e-05, 2.4388000000000187e-05, 2.3472000000000076e-05, 2.1514000000000255e-05, 2.059700000000067e-05, 2.056900000000153e-05, 2.3443999999997467e-05, 2.059700000000067e-05, 2.6235999999998927e-05, 2.6334000000002855e-05, 2.055500000000196e-05, 2.343100000000084e-05, 2.156900000000253e-05, 2.1569999999998535e-05, 2.343100000000084e-05, 2.1527999999999825e-05, 2.438899999999966e-05, 2.343099999999737e-05, 2.6333999999999386e-05, 2.1527999999999825e-05, 2.538900000000066e-05, 2.1527999999999825e-05, 2.5318999999999342e-05, 2.248700000000159e-05, 2.340299999999823e-05, 2.2471999999999076e-05, 2.2471999999999076e-05, 2.1583999999998105e-05, 2.062499999999981e-05]</msg>
<status status="PASS" starttime="20201030 11:51:46.859" endtime="20201030 11:51:46.862"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.855" endtime="20201030 11:51:46.862"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:46.866" endtime="20201030 11:51:46.885"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.864" endtime="20201030 11:51:46.886"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.863" endtime="20201030 11:51:46.886"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.503" endtime="20201030 11:51:46.886"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.503" endtime="20201030 11:51:46.886"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.895" endtime="20201030 11:51:46.919"></status>
</kw>
<msg timestamp="20201030 11:51:46.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:46.894" endtime="20201030 11:51:46.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:46.920" endtime="20201030 11:51:46.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.923" endtime="20201030 11:51:46.924"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.891" endtime="20201030 11:51:46.925"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.889" endtime="20201030 11:51:46.925"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.932" endtime="20201030 11:51:47.223"></status>
</kw>
<msg timestamp="20201030 11:51:47.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024009569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024046417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:46.930" endtime="20201030 11:51:47.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:47.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024009569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024046417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:47.227" endtime="20201030 11:51:47.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:47.235" endtime="20201030 11:51:47.237"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.927" endtime="20201030 11:51:47.237"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.926" endtime="20201030 11:51:47.238"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:47.242" level="INFO">${RESULT} = [{'diff': 3.684799999999905e-05}, {'diff': 2.4415999999999327e-05}, {'diff': 2.343100000000084e-05}, {'diff': 2.4401999999999757e-05}, {'diff': 2.5360999999998052e-05}, {'diff': 2.6332999999999912e-05...</msg>
<status status="PASS" starttime="20201030 11:51:47.239" endtime="20201030 11:51:47.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:47.246" level="INFO">${ACCURACY} = {'diff': [3.684799999999905e-05, 2.4415999999999327e-05, 2.343100000000084e-05, 2.4401999999999757e-05, 2.5360999999998052e-05, 2.6332999999999912e-05, 2.5416000000000327e-05, 2.056900000000153e-05, 2...</msg>
<status status="PASS" starttime="20201030 11:51:47.243" endtime="20201030 11:51:47.246"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:47.250" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201030 11:51:47.249" endtime="20201030 11:51:47.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:47.253" level="INFO">VALUE: [3.684799999999905e-05, 2.4415999999999327e-05, 2.343100000000084e-05, 2.4401999999999757e-05, 2.5360999999998052e-05, 2.6332999999999912e-05, 2.5416000000000327e-05, 2.056900000000153e-05, 2.5360999999998052e-05, 2.441700000000227e-05, 2.3429999999997897e-05, 2.4443999999998467e-05, 2.534700000000195e-05, 2.059700000000067e-05, 2.2514000000001255e-05, 2.6347999999998956e-05, 2.6374999999998622e-05, 2.6278000000001106e-05, 2.2499999999998216e-05, 2.6319999999999816e-05, 2.3444000000000936e-05, 2.440299999999923e-05, 2.062499999999981e-05, 2.061100000000024e-05, 2.4471999999997607e-05, 2.540300000000023e-05, 2.534700000000195e-05, 2.056900000000153e-05, 1.963900000000185e-05, 2.1527999999999825e-05, 2.3458000000000506e-05, 2.6332999999999912e-05, 2.065300000000242e-05, 2.4415999999999327e-05, 2.537500000000109e-05, 2.6361999999998526e-05, 2.538900000000066e-05, 2.1541999999999395e-05, 2.436100000000052e-05, 2.44169999999988e-05, 2.0570000000001004e-05, 2.2528000000000825e-05, 2.0584000000000574e-05, 2.2542000000000395e-05, 2.4458000000001506e-05, 1.963899999999838e-05, 2.5347999999997956e-05, 2.2471999999999076e-05, 2.6319999999999816e-05, 2.065300000000242e-05]</msg>
<status status="PASS" starttime="20201030 11:51:47.252" endtime="20201030 11:51:47.257"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.247" endtime="20201030 11:51:47.258"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:47.262" endtime="20201030 11:51:47.281"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.260" endtime="20201030 11:51:47.282"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.259" endtime="20201030 11:51:47.282"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.887" endtime="20201030 11:51:47.282"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.887" endtime="20201030 11:51:47.282"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:47.291" endtime="20201030 11:51:47.314"></status>
</kw>
<msg timestamp="20201030 11:51:47.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:47.289" endtime="20201030 11:51:47.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:47.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:47.316" endtime="20201030 11:51:47.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:47.318" endtime="20201030 11:51:47.320"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.287" endtime="20201030 11:51:47.320"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.285" endtime="20201030 11:51:47.321"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:47.327" endtime="20201030 11:51:47.619"></status>
</kw>
<msg timestamp="20201030 11:51:47.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025147292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025181222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:47.326" endtime="20201030 11:51:47.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:47.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025147292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025181222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:47.628" endtime="20201030 11:51:47.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:47.647" endtime="20201030 11:51:47.650"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.323" endtime="20201030 11:51:47.652"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.321" endtime="20201030 11:51:47.653"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:47.661" level="INFO">${RESULT} = [{'diff': 3.392999999999799e-05}, {'diff': 2.1556000000002434e-05}, {'diff': 2.1514000000000255e-05}, {'diff': 2.2527999999997356e-05}, {'diff': 2.1569999999998535e-05}, {'diff': 2.2528000000000825e-0...</msg>
<status status="PASS" starttime="20201030 11:51:47.654" endtime="20201030 11:51:47.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:47.670" level="INFO">${ACCURACY} = {'diff': [3.392999999999799e-05, 2.1556000000002434e-05, 2.1514000000000255e-05, 2.2527999999997356e-05, 2.1569999999998535e-05, 2.2528000000000825e-05, 2.6305000000000772e-05, 2.445899999999751e-05, ...</msg>
<status status="PASS" starttime="20201030 11:51:47.663" endtime="20201030 11:51:47.670"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:47.679" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201030 11:51:47.677" endtime="20201030 11:51:47.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:47.684" level="INFO">VALUE: [3.392999999999799e-05, 2.1556000000002434e-05, 2.1514000000000255e-05, 2.2527999999997356e-05, 2.1569999999998535e-05, 2.2528000000000825e-05, 2.6305000000000772e-05, 2.445899999999751e-05, 2.2499999999998216e-05, 2.0570000000001004e-05, 2.4388000000000187e-05, 2.248699999999812e-05, 2.536100000000152e-05, 2.3415999999998327e-05, 2.059700000000067e-05, 2.1457999999998506e-05, 2.5319999999998816e-05, 2.3513999999998786e-05, 1.966700000000099e-05, 2.2513999999997786e-05, 2.0598000000000144e-05, 1.961099999999924e-05, 2.3430000000001366e-05, 2.6319000000000342e-05, 2.537500000000109e-05, 2.6346999999999482e-05, 2.4443999999998467e-05, 2.6278000000001106e-05, 2.1584000000001574e-05, 2.2486000000002115e-05, 2.7276999999999163e-05, 1.962499999999881e-05, 2.254100000000092e-05, 2.7305999999997776e-05, 2.061100000000024e-05, 2.7276999999999163e-05, 2.538900000000066e-05, 2.5332999999998912e-05, 2.1541999999999395e-05, 2.438899999999966e-05, 2.154099999999992e-05, 2.2514000000001255e-05, 2.443099999999837e-05, 2.2485999999998646e-05, 2.534700000000195e-05, 2.062499999999981e-05, 2.634700000000295e-05, 2.344500000000041e-05, 2.1542000000002864e-05, 2.058299999999763e-05]</msg>
<status status="PASS" starttime="20201030 11:51:47.682" endtime="20201030 11:51:47.685"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.672" endtime="20201030 11:51:47.686"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:47.689" endtime="20201030 11:51:47.709"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.688" endtime="20201030 11:51:47.709"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.687" endtime="20201030 11:51:47.710"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.283" endtime="20201030 11:51:47.710"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.283" endtime="20201030 11:51:47.710"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:47.719" endtime="20201030 11:51:47.741"></status>
</kw>
<msg timestamp="20201030 11:51:47.741" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:47.717" endtime="20201030 11:51:47.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:47.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:47.742" endtime="20201030 11:51:47.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:47.745" endtime="20201030 11:51:47.746"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.715" endtime="20201030 11:51:47.747"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.713" endtime="20201030 11:51:47.747"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:47.754" endtime="20201030 11:51:48.040"></status>
</kw>
<msg timestamp="20201030 11:51:48.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024341847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024358639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:47.752" endtime="20201030 11:51:48.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:48.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024341847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024358639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:48.044" endtime="20201030 11:51:48.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:48.052" endtime="20201030 11:51:48.054"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.750" endtime="20201030 11:51:48.055"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.748" endtime="20201030 11:51:48.055"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:48.059" level="INFO">${RESULT} = [{'diff': 1.6792000000001583e-05}, {'diff': 2.056900000000153e-05}, {'diff': 2.1541999999999395e-05}, {'diff': 2.3430000000001366e-05}, {'diff': 2.438899999999966e-05}, {'diff': 2.6292000000000676e-05...</msg>
<status status="PASS" starttime="20201030 11:51:48.056" endtime="20201030 11:51:48.059"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:48.064" level="INFO">${ACCURACY} = {'diff': [1.6792000000001583e-05, 2.056900000000153e-05, 2.1541999999999395e-05, 2.3430000000001366e-05, 2.438899999999966e-05, 2.6292000000000676e-05, 2.1527999999999825e-05, 2.155499999999949e-05, 2...</msg>
<status status="PASS" starttime="20201030 11:51:48.060" endtime="20201030 11:51:48.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:48.068" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201030 11:51:48.067" endtime="20201030 11:51:48.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:48.071" level="INFO">VALUE: [1.6792000000001583e-05, 2.056900000000153e-05, 2.1541999999999395e-05, 2.3430000000001366e-05, 2.438899999999966e-05, 2.6292000000000676e-05, 2.1527999999999825e-05, 2.155499999999949e-05, 2.2528000000000825e-05, 2.4429999999998897e-05, 2.2499999999998216e-05, 2.4401999999999757e-05, 2.0583999999997105e-05, 2.055499999999849e-05, 2.1514000000000255e-05, 2.44030000000027e-05, 2.540300000000023e-05, 2.6333999999999386e-05, 2.1527999999999825e-05, 2.3485999999999646e-05, 2.1542000000002864e-05, 2.4401999999999757e-05, 2.438899999999966e-05, 2.2514000000001255e-05, 2.1570000000002004e-05, 2.056899999999806e-05, 2.3430000000001366e-05, 2.2500000000001685e-05, 2.05830000000011e-05, 2.538899999999719e-05, 2.2542000000000395e-05, 2.6304999999997303e-05, 2.2528000000000825e-05, 2.0598000000000144e-05, 2.5360999999998052e-05, 2.345899999999998e-05, 2.533300000000238e-05, 2.1514000000000255e-05, 2.252700000000135e-05, 2.6319000000000342e-05, 1.9637999999998906e-05, 2.244499999999941e-05, 2.3458000000000506e-05, 2.538899999999719e-05, 2.061100000000024e-05, 2.6292000000000676e-05, 2.2471999999999076e-05, 2.6306000000000246e-05, 2.1514000000000255e-05, 2.4304999999998772e-05]</msg>
<status status="PASS" starttime="20201030 11:51:48.070" endtime="20201030 11:51:48.072"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.065" endtime="20201030 11:51:48.072"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:48.076" endtime="20201030 11:51:48.095"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.074" endtime="20201030 11:51:48.096"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.073" endtime="20201030 11:51:48.096"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.711" endtime="20201030 11:51:48.096"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.710" endtime="20201030 11:51:48.097"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:48.105" endtime="20201030 11:51:48.128"></status>
</kw>
<msg timestamp="20201030 11:51:48.128" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:48.104" endtime="20201030 11:51:48.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:48.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:48.129" endtime="20201030 11:51:48.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:48.132" endtime="20201030 11:51:48.133"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.101" endtime="20201030 11:51:48.134"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.099" endtime="20201030 11:51:48.134"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:48.140" endtime="20201030 11:51:48.435"></status>
</kw>
<msg timestamp="20201030 11:51:48.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024772736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024793333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:48.139" endtime="20201030 11:51:48.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:48.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024772736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024793333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:48.445" endtime="20201030 11:51:48.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:48.463" endtime="20201030 11:51:48.467"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.136" endtime="20201030 11:51:48.468"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.135" endtime="20201030 11:51:48.469"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:48.477" level="INFO">${RESULT} = [{'diff': 2.059700000000067e-05}, {'diff': 1.968099999999709e-05}, {'diff': 2.156900000000253e-05}, {'diff': 2.1527999999999825e-05}, {'diff': 2.2499999999998216e-05}, {'diff': 2.3444000000000936e-05}...</msg>
<status status="PASS" starttime="20201030 11:51:48.470" endtime="20201030 11:51:48.478"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:48.486" level="INFO">${ACCURACY} = {'diff': [2.059700000000067e-05, 1.968099999999709e-05, 2.156900000000253e-05, 2.1527999999999825e-05, 2.2499999999998216e-05, 2.3444000000000936e-05, 2.1542000000002864e-05, 2.1555999999998965e-05, 2...</msg>
<status status="PASS" starttime="20201030 11:51:48.479" endtime="20201030 11:51:48.487"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:48.494" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201030 11:51:48.493" endtime="20201030 11:51:48.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:48.497" level="INFO">VALUE: [2.059700000000067e-05, 1.968099999999709e-05, 2.156900000000253e-05, 2.1527999999999825e-05, 2.2499999999998216e-05, 2.3444000000000936e-05, 2.1542000000002864e-05, 2.1555999999998965e-05, 2.6319999999999816e-05, 2.2486000000002115e-05, 2.1541999999999395e-05, 2.438899999999966e-05, 2.056899999999806e-05, 2.0584000000000574e-05, 2.3430000000001366e-05, 2.6334000000002855e-05, 2.5346999999998482e-05, 2.5360999999998052e-05, 2.536100000000152e-05, 2.6264000000001536e-05, 2.2486000000002115e-05, 2.6374999999998622e-05, 2.538900000000066e-05, 2.2499999999998216e-05, 2.6305000000000772e-05, 2.3443999999997467e-05, 2.5443999999999467e-05, 2.3444000000000936e-05, 2.6291999999997206e-05, 2.437500000000009e-05, 2.1527999999999825e-05, 2.1527999999999825e-05, 2.0527999999998825e-05, 2.538900000000066e-05, 2.2471999999999076e-05, 2.3444000000000936e-05, 2.44169999999988e-05, 2.5291999999999676e-05, 2.3458000000000506e-05, 2.5360999999998052e-05, 2.344499999999694e-05, 1.968100000000056e-05, 2.6346999999999482e-05, 2.540300000000023e-05, 2.0583999999997105e-05, 2.537500000000109e-05, 2.538899999999719e-05, 1.9597999999999144e-05, 2.438899999999966e-05, 2.5264000000000536e-05]</msg>
<status status="PASS" starttime="20201030 11:51:48.495" endtime="20201030 11:51:48.497"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.488" endtime="20201030 11:51:48.498"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:48.502" endtime="20201030 11:51:48.521"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.500" endtime="20201030 11:51:48.522"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.499" endtime="20201030 11:51:48.522"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.097" endtime="20201030 11:51:48.522"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.097" endtime="20201030 11:51:48.522"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:48.531" endtime="20201030 11:51:48.549"></status>
</kw>
<msg timestamp="20201030 11:51:48.550" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:48.529" endtime="20201030 11:51:48.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:48.552" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:48.551" endtime="20201030 11:51:48.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:48.553" endtime="20201030 11:51:48.555"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.527" endtime="20201030 11:51:48.555"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.525" endtime="20201030 11:51:48.556"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:48.562" endtime="20201030 11:51:48.847"></status>
</kw>
<msg timestamp="20201030 11:51:48.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020991931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021010639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:48.561" endtime="20201030 11:51:48.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:48.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020991931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021010639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:48.851" endtime="20201030 11:51:48.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:48.860" endtime="20201030 11:51:48.862"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.558" endtime="20201030 11:51:48.862"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.557" endtime="20201030 11:51:48.863"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:48.867" level="INFO">${RESULT} = [{'diff': 1.8708000000002695e-05}, {'diff': 2.156899999999906e-05}, {'diff': 2.056899999999806e-05}, {'diff': 2.6332999999999912e-05}, {'diff': 2.6292000000000676e-05}, {'diff': 2.05830000000011e-05},...</msg>
<status status="PASS" starttime="20201030 11:51:48.863" endtime="20201030 11:51:48.867"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:48.871" level="INFO">${ACCURACY} = {'diff': [1.8708000000002695e-05, 2.156899999999906e-05, 2.056899999999806e-05, 2.6332999999999912e-05, 2.6292000000000676e-05, 2.05830000000011e-05, 2.337499999999909e-05, 2.2485999999998646e-05, 2.2...</msg>
<status status="PASS" starttime="20201030 11:51:48.868" endtime="20201030 11:51:48.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:48.875" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201030 11:51:48.874" endtime="20201030 11:51:48.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:48.877" level="INFO">VALUE: [1.8708000000002695e-05, 2.156899999999906e-05, 2.056899999999806e-05, 2.6332999999999912e-05, 2.6292000000000676e-05, 2.05830000000011e-05, 2.337499999999909e-05, 2.2485999999998646e-05, 2.2471999999999076e-05, 2.438899999999966e-05, 2.5360999999998052e-05, 2.1527999999999825e-05, 2.4457999999998037e-05, 2.538900000000066e-05, 2.344500000000041e-05, 2.44030000000027e-05, 2.44030000000027e-05, 2.152700000000035e-05, 2.6360999999999052e-05, 2.3513999999998786e-05, 2.156899999999906e-05, 2.2526999999997882e-05, 2.438899999999966e-05, 2.05830000000011e-05, 2.6292000000000676e-05, 2.44030000000027e-05, 2.438899999999966e-05, 2.258299999999963e-05, 2.6319000000000342e-05, 2.6319999999999816e-05, 2.34030000000017e-05, 2.2471999999999076e-05, 2.062499999999981e-05, 2.1556000000002434e-05, 2.0651999999999476e-05, 2.2513999999997786e-05, 2.6319999999999816e-05, 1.963899999999838e-05, 2.343099999999737e-05, 2.247299999999855e-05, 2.344500000000041e-05, 2.1555999999998965e-05, 2.2514000000001255e-05, 2.6291000000001202e-05, 2.6319000000000342e-05, 2.059700000000067e-05, 2.6374999999998622e-05, 2.2500000000001685e-05, 2.2471999999999076e-05, 2.6320000000003285e-05]</msg>
<status status="PASS" starttime="20201030 11:51:48.876" endtime="20201030 11:51:48.879"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.872" endtime="20201030 11:51:48.880"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:48.883" endtime="20201030 11:51:48.903"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.882" endtime="20201030 11:51:48.903"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.881" endtime="20201030 11:51:48.904"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.523" endtime="20201030 11:51:48.904"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.523" endtime="20201030 11:51:48.904"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:48.913" endtime="20201030 11:51:48.931"></status>
</kw>
<msg timestamp="20201030 11:51:48.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:48.911" endtime="20201030 11:51:48.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:48.934" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:48.933" endtime="20201030 11:51:48.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:48.935" endtime="20201030 11:51:48.937"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.908" endtime="20201030 11:51:48.937"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.906" endtime="20201030 11:51:48.938"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:48.944" endtime="20201030 11:51:49.231"></status>
</kw>
<msg timestamp="20201030 11:51:49.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021131819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021141, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:51:48.943" endtime="20201030 11:51:49.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:49.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021131819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021141, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:51:49.235" endtime="20201030 11:51:49.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:49.243" endtime="20201030 11:51:49.245"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.940" endtime="20201030 11:51:49.245"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.938" endtime="20201030 11:51:49.246"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:49.250" level="INFO">${RESULT} = [{'diff': 9.181000000000467e-06}, {'diff': 2.534700000000195e-05}, {'diff': 2.344500000000041e-05}, {'diff': 2.2541999999996926e-05}, {'diff': 2.155499999999949e-05}, {'diff': 2.5402000000000757e-05},...</msg>
<status status="PASS" starttime="20201030 11:51:49.246" endtime="20201030 11:51:49.250"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:49.255" level="INFO">${ACCURACY} = {'diff': [9.181000000000467e-06, 2.534700000000195e-05, 2.344500000000041e-05, 2.2541999999996926e-05, 2.155499999999949e-05, 2.5402000000000757e-05, 2.443099999999837e-05, 2.537500000000109e-05, 2.44...</msg>
<status status="PASS" starttime="20201030 11:51:49.251" endtime="20201030 11:51:49.255"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:49.259" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201030 11:51:49.258" endtime="20201030 11:51:49.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:49.262" level="INFO">VALUE: [9.181000000000467e-06, 2.534700000000195e-05, 2.344500000000041e-05, 2.2541999999996926e-05, 2.155499999999949e-05, 2.5402000000000757e-05, 2.443099999999837e-05, 2.537500000000109e-05, 2.441700000000227e-05, 2.061100000000024e-05, 2.3472000000000076e-05, 2.0555999999997965e-05, 1.95830000000001e-05, 2.6306000000000246e-05, 2.538900000000066e-05, 2.4458000000001506e-05, 2.538900000000066e-05, 2.440299999999923e-05, 2.6319999999999816e-05, 2.438900000000313e-05, 2.6305000000000772e-05, 2.1513999999996786e-05, 2.3444000000000936e-05, 2.537500000000109e-05, 2.1527999999999825e-05, 2.7235999999999927e-05, 2.5334000000001855e-05, 2.4415999999999327e-05, 2.6292000000000676e-05, 2.4401999999999757e-05, 2.348700000000259e-05, 2.4513999999999786e-05, 2.437500000000009e-05, 2.7249999999999497e-05, 2.0542000000001864e-05, 2.0570000000001004e-05, 2.062499999999981e-05, 2.058299999999763e-05, 2.538900000000066e-05, 2.437500000000009e-05, 2.1541999999999395e-05, 2.537500000000109e-05, 2.0584000000000574e-05, 2.5319999999998816e-05, 2.2471999999999076e-05, 2.161100000000124e-05, 2.1541999999999395e-05, 2.5346999999998482e-05, 2.056900000000153e-05, 2.6346999999999482e-05]</msg>
<status status="PASS" starttime="20201030 11:51:49.260" endtime="20201030 11:51:49.262"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.256" endtime="20201030 11:51:49.263"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:49.267" endtime="20201030 11:51:49.286"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.265" endtime="20201030 11:51:49.287"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.264" endtime="20201030 11:51:49.287"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.905" endtime="20201030 11:51:49.287"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.904" endtime="20201030 11:51:49.287"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:49.296" endtime="20201030 11:51:49.319"></status>
</kw>
<msg timestamp="20201030 11:51:49.319" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:49.294" endtime="20201030 11:51:49.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:49.322" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:49.320" endtime="20201030 11:51:49.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:49.323" endtime="20201030 11:51:49.324"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.292" endtime="20201030 11:51:49.325"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.290" endtime="20201030 11:51:49.325"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:49.332" endtime="20201030 11:51:49.617"></status>
</kw>
<msg timestamp="20201030 11:51:49.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024568861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024596194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:49.330" endtime="20201030 11:51:49.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:49.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024568861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024596194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:49.622" endtime="20201030 11:51:49.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:49.630" endtime="20201030 11:51:49.632"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.327" endtime="20201030 11:51:49.632"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.326" endtime="20201030 11:51:49.633"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:49.637" level="INFO">${RESULT} = [{'diff': 2.7332999999997443e-05}, {'diff': 2.538900000000066e-05}, {'diff': 2.6306000000000246e-05}, {'diff': 2.3472000000000076e-05}, {'diff': 2.6430000000000897e-05}, {'diff': 2.0598000000000144e-0...</msg>
<status status="PASS" starttime="20201030 11:51:49.633" endtime="20201030 11:51:49.637"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:49.641" level="INFO">${ACCURACY} = {'diff': [2.7332999999997443e-05, 2.538900000000066e-05, 2.6306000000000246e-05, 2.3472000000000076e-05, 2.6430000000000897e-05, 2.0598000000000144e-05, 2.437500000000009e-05, 2.061100000000024e-05, 2...</msg>
<status status="PASS" starttime="20201030 11:51:49.638" endtime="20201030 11:51:49.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:49.645" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201030 11:51:49.644" endtime="20201030 11:51:49.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:49.648" level="INFO">VALUE: [2.7332999999997443e-05, 2.538900000000066e-05, 2.6306000000000246e-05, 2.3472000000000076e-05, 2.6430000000000897e-05, 2.0598000000000144e-05, 2.437500000000009e-05, 2.061100000000024e-05, 2.163900000000038e-05, 2.5388000000001187e-05, 2.437500000000009e-05, 2.537499999999762e-05, 2.2514000000001255e-05, 2.1500000000000685e-05, 2.4388000000000187e-05, 2.15830000000021e-05, 1.968100000000056e-05, 2.538900000000066e-05, 2.345899999999998e-05, 2.0694000000001656e-05, 2.2542000000000395e-05, 2.6332999999999912e-05, 2.6360999999999052e-05, 2.154099999999992e-05, 2.443099999999837e-05, 2.3444000000000936e-05, 2.6278000000001106e-05, 2.1541999999999395e-05, 2.254100000000092e-05, 2.155499999999949e-05, 2.437500000000009e-05, 2.6332999999999912e-05, 2.068100000000156e-05, 2.4401999999999757e-05, 2.0583999999997105e-05, 2.6346999999999482e-05, 2.3499999999999216e-05, 2.059700000000067e-05, 2.5348000000001425e-05, 2.1597999999997675e-05, 2.056899999999806e-05, 2.6333999999999386e-05, 1.9651999999998476e-05, 2.6319000000000342e-05, 2.0569999999997535e-05, 2.6291999999997206e-05, 2.05830000000011e-05, 2.055500000000196e-05, 2.1556000000002434e-05, 2.1555999999998965e-05]</msg>
<status status="PASS" starttime="20201030 11:51:49.646" endtime="20201030 11:51:49.648"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.642" endtime="20201030 11:51:49.649"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:49.653" endtime="20201030 11:51:49.672"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.651" endtime="20201030 11:51:49.673"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.650" endtime="20201030 11:51:49.673"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.288" endtime="20201030 11:51:49.673"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.288" endtime="20201030 11:51:49.673"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:49.682" endtime="20201030 11:51:49.705"></status>
</kw>
<msg timestamp="20201030 11:51:49.706" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:49.680" endtime="20201030 11:51:49.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:49.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:49.707" endtime="20201030 11:51:49.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:49.709" endtime="20201030 11:51:49.711"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.678" endtime="20201030 11:51:49.712"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.676" endtime="20201030 11:51:49.712"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:49.718" endtime="20201030 11:51:50.004"></status>
</kw>
<msg timestamp="20201030 11:51:50.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025579806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025610917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:49.717" endtime="20201030 11:51:50.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:50.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025579806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025610917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:50.009" endtime="20201030 11:51:50.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:50.017" endtime="20201030 11:51:50.019"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.714" endtime="20201030 11:51:50.019"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.713" endtime="20201030 11:51:50.020"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:50.024" level="INFO">${RESULT} = [{'diff': 3.111100000000033e-05}, {'diff': 2.1569999999998535e-05}, {'diff': 2.6347999999998956e-05}, {'diff': 2.540300000000023e-05}, {'diff': 2.437500000000009e-05}, {'diff': 2.0598000000000144e-05}...</msg>
<status status="PASS" starttime="20201030 11:51:50.020" endtime="20201030 11:51:50.024"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:50.028" level="INFO">${ACCURACY} = {'diff': [3.111100000000033e-05, 2.1569999999998535e-05, 2.6347999999998956e-05, 2.540300000000023e-05, 2.437500000000009e-05, 2.0598000000000144e-05, 2.6306000000000246e-05, 2.537500000000109e-05, 2....</msg>
<status status="PASS" starttime="20201030 11:51:50.025" endtime="20201030 11:51:50.028"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:50.033" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201030 11:51:50.032" endtime="20201030 11:51:50.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:50.036" level="INFO">VALUE: [3.111100000000033e-05, 2.1569999999998535e-05, 2.6347999999998956e-05, 2.540300000000023e-05, 2.437500000000009e-05, 2.0598000000000144e-05, 2.6306000000000246e-05, 2.537500000000109e-05, 2.538900000000066e-05, 2.0598000000000144e-05, 2.538899999999719e-05, 2.3429999999997897e-05, 2.440299999999923e-05, 2.1570000000002004e-05, 2.3499999999999216e-05, 2.059700000000067e-05, 2.254100000000092e-05, 2.3457999999997037e-05, 2.056899999999806e-05, 2.058299999999763e-05, 2.638900000000166e-05, 2.6333999999999386e-05, 2.6305000000000772e-05, 2.155499999999949e-05, 2.3499999999999216e-05, 2.2457999999999506e-05, 2.2526999999997882e-05, 2.0583999999997105e-05, 2.344500000000041e-05, 2.1500000000000685e-05, 2.161100000000124e-05, 2.3499999999999216e-05, 2.3513999999998786e-05, 2.6319999999999816e-05, 2.05969999999972e-05, 2.0570000000001004e-05, 2.2542000000000395e-05, 2.062499999999981e-05, 2.540300000000023e-05, 2.441700000000227e-05, 2.6292000000000676e-05, 2.441700000000227e-05, 2.1570000000002004e-05, 2.3458000000000506e-05, 2.1527999999999825e-05, 2.2513999999997786e-05, 2.6290999999997733e-05, 2.062499999999981e-05, 2.440299999999923e-05, 2.4429999999998897e-05]</msg>
<status status="PASS" starttime="20201030 11:51:50.034" endtime="20201030 11:51:50.037"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.029" endtime="20201030 11:51:50.038"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:50.042" endtime="20201030 11:51:50.061"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.040" endtime="20201030 11:51:50.062"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.039" endtime="20201030 11:51:50.062"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.674" endtime="20201030 11:51:50.062"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.674" endtime="20201030 11:51:50.063"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:50.071" endtime="20201030 11:51:50.093"></status>
</kw>
<msg timestamp="20201030 11:51:50.094" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:50.070" endtime="20201030 11:51:50.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:50.096" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:50.095" endtime="20201030 11:51:50.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:50.097" endtime="20201030 11:51:50.099"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.067" endtime="20201030 11:51:50.099"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.065" endtime="20201030 11:51:50.100"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:50.106" endtime="20201030 11:51:50.394"></status>
</kw>
<msg timestamp="20201030 11:51:50.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023095819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023115444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:50.105" endtime="20201030 11:51:50.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:50.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023095819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023115444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:50.398" endtime="20201030 11:51:50.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:50.406" endtime="20201030 11:51:50.408"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.102" endtime="20201030 11:51:50.408"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.100" endtime="20201030 11:51:50.409"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:50.413" level="INFO">${RESULT} = [{'diff': 1.962499999999881e-05}, {'diff': 2.5346999999998482e-05}, {'diff': 2.2513999999997786e-05}, {'diff': 2.3499999999999216e-05}, {'diff': 2.0584000000000574e-05}, {'diff': 1.962499999999881e-05...</msg>
<status status="PASS" starttime="20201030 11:51:50.410" endtime="20201030 11:51:50.413"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:50.418" level="INFO">${ACCURACY} = {'diff': [1.962499999999881e-05, 2.5346999999998482e-05, 2.2513999999997786e-05, 2.3499999999999216e-05, 2.0584000000000574e-05, 1.962499999999881e-05, 2.4401999999999757e-05, 2.4388000000000187e-05, ...</msg>
<status status="PASS" starttime="20201030 11:51:50.414" endtime="20201030 11:51:50.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:50.422" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201030 11:51:50.421" endtime="20201030 11:51:50.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:50.425" level="INFO">VALUE: [1.962499999999881e-05, 2.5346999999998482e-05, 2.2513999999997786e-05, 2.3499999999999216e-05, 2.0584000000000574e-05, 1.962499999999881e-05, 2.4401999999999757e-05, 2.4388000000000187e-05, 2.256900000000006e-05, 2.6374999999998622e-05, 2.345899999999998e-05, 1.962500000000228e-05, 2.1527999999999825e-05, 2.6305000000000772e-05, 2.0598000000000144e-05, 2.2528000000000825e-05, 2.0598000000000144e-05, 2.4443999999998467e-05, 2.152700000000035e-05, 2.2486000000002115e-05, 2.159700000000167e-05, 2.6319000000000342e-05, 2.3444000000000936e-05, 2.538899999999719e-05, 2.345899999999998e-05, 2.5360999999998052e-05, 2.540300000000023e-05, 2.6362000000001995e-05, 2.6318999999996873e-05, 2.540300000000023e-05, 2.6346999999999482e-05, 2.3472000000000076e-05, 2.5360999999998052e-05, 2.4401999999999757e-05, 2.3444000000000936e-05, 2.147299999999755e-05, 2.056900000000153e-05, 2.05830000000011e-05, 2.6346999999999482e-05, 2.4430000000002366e-05, 2.247299999999855e-05, 2.540300000000023e-05, 2.5348000000001425e-05, 2.6306000000000246e-05, 2.2527999999997356e-05, 2.4472000000001076e-05, 2.1514000000000255e-05, 2.441700000000227e-05, 2.2500000000001685e-05, 1.962499999999881e-05]</msg>
<status status="PASS" starttime="20201030 11:51:50.423" endtime="20201030 11:51:50.426"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.419" endtime="20201030 11:51:50.426"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:50.430" endtime="20201030 11:51:50.449"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.428" endtime="20201030 11:51:50.450"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.427" endtime="20201030 11:51:50.450"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.064" endtime="20201030 11:51:50.450"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.063" endtime="20201030 11:51:50.450"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:50.459" endtime="20201030 11:51:50.479"></status>
</kw>
<msg timestamp="20201030 11:51:50.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:50.457" endtime="20201030 11:51:50.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:50.482" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:50.481" endtime="20201030 11:51:50.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:50.483" endtime="20201030 11:51:50.485"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.455" endtime="20201030 11:51:50.486"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.453" endtime="20201030 11:51:50.486"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:50.492" endtime="20201030 11:51:50.781"></status>
</kw>
<msg timestamp="20201030 11:51:50.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022229069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022267764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:50.491" endtime="20201030 11:51:50.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:50.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022229069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022267764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:50.785" endtime="20201030 11:51:50.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:50.793" endtime="20201030 11:51:50.795"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.488" endtime="20201030 11:51:50.795"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.487" endtime="20201030 11:51:50.796"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:50.800" level="INFO">${RESULT} = [{'diff': 3.8694999999998314e-05}, {'diff': 5.6943999999999745e-05}, {'diff': 5.212500000000009e-05}, {'diff': 5.311099999999805e-05}, {'diff': 5.30410000000002e-05}, {'diff': 5.120899999999998e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:51:50.797" endtime="20201030 11:51:50.800"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:50.804" level="INFO">${ACCURACY} = {'diff': [3.8694999999998314e-05, 5.6943999999999745e-05, 5.212500000000009e-05, 5.311099999999805e-05, 5.30410000000002e-05, 5.120899999999998e-05, 5.223600000000064e-05, 5.5958000000001784e-05, 5.68...</msg>
<status status="PASS" starttime="20201030 11:51:50.801" endtime="20201030 11:51:50.804"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:50.808" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201030 11:51:50.807" endtime="20201030 11:51:50.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:50.811" level="INFO">VALUE: [3.8694999999998314e-05, 5.6943999999999745e-05, 5.212500000000009e-05, 5.311099999999805e-05, 5.30410000000002e-05, 5.120899999999998e-05, 5.223600000000064e-05, 5.5958000000001784e-05, 5.68610000000018e-05, 5.024999999999821e-05, 5.209800000000042e-05, 5.220900000000098e-05, 5.019499999999941e-05, 5.504200000000167e-05, 5.3957999999999784e-05, 5.5986000000000924e-05, 5.686099999999833e-05, 5.6000000000000494e-05, 5.49869999999994e-05, 5.218100000000184e-05, 5.6957999999999315e-05, 5.5902000000000035e-05, 5.409699999999948e-05, 5.5041999999998203e-05, 5.5915999999999605e-05, 5.308399999999838e-05, 5.498600000000339e-05, 5.5986000000000924e-05, 5.4943999999997745e-05, 5.3999999999998494e-05, 5.695900000000226e-05, 5.684700000000223e-05, 5.1237000000002586e-05, 5.688900000000094e-05, 5.305599999999924e-05, 5.6027999999999634e-05, 5.5929999999999175e-05, 5.6958000000002784e-05, 5.1151999999998754e-05, 5.6014000000000064e-05, 5.4999999999999494e-05, 5.305499999999977e-05, 5.315300000000023e-05, 5.4971999999996884e-05, 5.6957999999999315e-05, 5.4943999999997745e-05, 5.601299999999712e-05, 5.4958000000000784e-05, 5.6014000000000064e-05, 5.305599999999924e-05]</msg>
<status status="PASS" starttime="20201030 11:51:50.809" endtime="20201030 11:51:50.812"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.805" endtime="20201030 11:51:50.812"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:50.816" endtime="20201030 11:51:50.835"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.814" endtime="20201030 11:51:50.836"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.813" endtime="20201030 11:51:50.836"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.451" endtime="20201030 11:51:50.836"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.451" endtime="20201030 11:51:50.836"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:50.845" endtime="20201030 11:51:50.866"></status>
</kw>
<msg timestamp="20201030 11:51:50.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:50.843" endtime="20201030 11:51:50.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:50.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:50.867" endtime="20201030 11:51:50.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:50.870" endtime="20201030 11:51:50.872"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.841" endtime="20201030 11:51:50.872"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.839" endtime="20201030 11:51:50.873"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:50.879" endtime="20201030 11:51:51.164"></status>
</kw>
<msg timestamp="20201030 11:51:51.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022921583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022976556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:50.877" endtime="20201030 11:51:51.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:51.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022921583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022976556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:51.169" endtime="20201030 11:51:51.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:51.177" endtime="20201030 11:51:51.179"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.875" endtime="20201030 11:51:51.179"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.873" endtime="20201030 11:51:51.179"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:51.183" level="INFO">${RESULT} = [{'diff': 5.497299999999983e-05}, {'diff': 5.684699999999876e-05}, {'diff': 5.6000000000000494e-05}, {'diff': 5.500000000000296e-05}, {'diff': 5.400000000000196e-05}, {'diff': 5.111100000000299e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:51:51.180" endtime="20201030 11:51:51.184"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:51.188" level="INFO">${ACCURACY} = {'diff': [5.497299999999983e-05, 5.684699999999876e-05, 5.6000000000000494e-05, 5.500000000000296e-05, 5.400000000000196e-05, 5.111100000000299e-05, 5.684699999999876e-05, 5.58749999999969e-05, 5.3999...</msg>
<status status="PASS" starttime="20201030 11:51:51.184" endtime="20201030 11:51:51.188"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:51.192" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201030 11:51:51.191" endtime="20201030 11:51:51.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:51.194" level="INFO">VALUE: [5.497299999999983e-05, 5.684699999999876e-05, 5.6000000000000494e-05, 5.500000000000296e-05, 5.400000000000196e-05, 5.111100000000299e-05, 5.684699999999876e-05, 5.58749999999969e-05, 5.3999999999998494e-05, 5.5041999999998203e-05, 5.4957999999997315e-05, 5.494500000000069e-05, 5.409699999999948e-05, 5.693099999999965e-05, 5.495900000000026e-05, 5.305500000000324e-05, 5.398600000000239e-05, 5.6014000000000064e-05, 5.019399999999993e-05, 5.211100000000052e-05, 5.686099999999833e-05, 5.112500000000256e-05, 5.306999999999881e-05, 5.308300000000238e-05, 5.016700000000027e-05, 5.3151999999997285e-05, 5.594500000000169e-05, 5.588899999999994e-05, 5.694499999999922e-05, 5.116700000000127e-05, 5.113900000000213e-05, 5.497299999999983e-05, 5.207000000000128e-05, 5.400000000000196e-05, 5.4957999999997315e-05, 5.211100000000052e-05, 5.5929999999999175e-05, 5.697299999999836e-05, 5.4972000000000354e-05, 5.391700000000055e-05, 5.494500000000069e-05, 5.413900000000166e-05, 5.30280000000001e-05, 5.3999999999998494e-05, 5.208400000000085e-05, 5.301400000000053e-05, 5.209699999999748e-05, 5.6027999999999634e-05, 5.311100000000152e-05, 5.593099999999865e-05]</msg>
<status status="PASS" starttime="20201030 11:51:51.193" endtime="20201030 11:51:51.196"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.188" endtime="20201030 11:51:51.196"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:51.200" endtime="20201030 11:51:51.219"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.199" endtime="20201030 11:51:51.220"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.197" endtime="20201030 11:51:51.220"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.837" endtime="20201030 11:51:51.221"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.837" endtime="20201030 11:51:51.221"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:51.229" endtime="20201030 11:51:51.249"></status>
</kw>
<msg timestamp="20201030 11:51:51.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:51.228" endtime="20201030 11:51:51.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:51.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:51.251" endtime="20201030 11:51:51.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:51.253" endtime="20201030 11:51:51.255"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.225" endtime="20201030 11:51:51.256"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.223" endtime="20201030 11:51:51.256"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:51.263" endtime="20201030 11:51:51.548"></status>
</kw>
<msg timestamp="20201030 11:51:51.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020460069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020512236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:51.261" endtime="20201030 11:51:51.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:51.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020460069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020512236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:51.552" endtime="20201030 11:51:51.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:51.561" endtime="20201030 11:51:51.563"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.258" endtime="20201030 11:51:51.563"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.257" endtime="20201030 11:51:51.563"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:51.567" level="INFO">${RESULT} = [{'diff': 5.21669999999988e-05}, {'diff': 5.4985999999999924e-05}, {'diff': 5.504099999999873e-05}, {'diff': 5.113899999999866e-05}, {'diff': 5.501400000000253e-05}, {'diff': 5.691699999999661e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:51.564" endtime="20201030 11:51:51.568"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:51.572" level="INFO">${ACCURACY} = {'diff': [5.21669999999988e-05, 5.4985999999999924e-05, 5.504099999999873e-05, 5.113899999999866e-05, 5.501400000000253e-05, 5.691699999999661e-05, 5.401400000000153e-05, 5.116600000000179e-05, 5.6888...</msg>
<status status="PASS" starttime="20201030 11:51:51.568" endtime="20201030 11:51:51.573"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:51.577" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201030 11:51:51.576" endtime="20201030 11:51:51.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:51.579" level="INFO">VALUE: [5.21669999999988e-05, 5.4985999999999924e-05, 5.504099999999873e-05, 5.113899999999866e-05, 5.501400000000253e-05, 5.691699999999661e-05, 5.401400000000153e-05, 5.116600000000179e-05, 5.6888000000001465e-05, 5.112499999999909e-05, 5.687500000000137e-05, 5.402699999999816e-05, 5.211100000000052e-05, 5.3985999999998924e-05, 5.687500000000137e-05, 5.590299999999951e-05, 5.5986000000000924e-05, 5.116600000000179e-05, 5.397200000000282e-05, 5.220900000000098e-05, 5.594499999999822e-05, 5.21530000000027e-05, 5.506899999999787e-05, 5.206899999999834e-05, 5.501400000000253e-05, 5.213899999999966e-05, 5.5943999999998745e-05, 5.409699999999948e-05, 5.11530000000017e-05, 5.688900000000094e-05, 5.684700000000223e-05, 5.6041999999999204e-05, 5.40419999999972e-05, 5.68749999999979e-05, 5.593099999999865e-05, 5.029200000000039e-05, 5.304199999999967e-05, 5.398600000000239e-05, 5.305499999999977e-05, 5.408299999999991e-05, 5.688900000000094e-05, 5.208300000000138e-05, 5.491699999999808e-05, 5.223600000000064e-05, 5.115299999999823e-05, 5.3999999999998494e-05, 5.113900000000213e-05, 5.6957999999999315e-05, 5.216700000000227e-05, 5.113899999999866e-05]</msg>
<status status="PASS" starttime="20201030 11:51:51.578" endtime="20201030 11:51:51.580"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.573" endtime="20201030 11:51:51.580"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:51.584" endtime="20201030 11:51:51.603"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.583" endtime="20201030 11:51:51.604"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.581" endtime="20201030 11:51:51.604"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.222" endtime="20201030 11:51:51.605"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.221" endtime="20201030 11:51:51.605"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:51.613" endtime="20201030 11:51:51.635"></status>
</kw>
<msg timestamp="20201030 11:51:51.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:51.612" endtime="20201030 11:51:51.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:51.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:51.637" endtime="20201030 11:51:51.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:51.639" endtime="20201030 11:51:51.641"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.609" endtime="20201030 11:51:51.642"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.607" endtime="20201030 11:51:51.642"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:51.648" endtime="20201030 11:51:51.935"></status>
</kw>
<msg timestamp="20201030 11:51:51.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023263861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0233275, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:51:51.647" endtime="20201030 11:51:51.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:51.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023263861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0233275, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:51:51.939" endtime="20201030 11:51:51.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:51.948" endtime="20201030 11:51:51.949"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.644" endtime="20201030 11:51:51.950"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.643" endtime="20201030 11:51:51.950"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:51.954" level="INFO">${RESULT} = [{'diff': 6.363900000000075e-05}, {'diff': 5.3999999999998494e-05}, {'diff': 5.786099999999933e-05}, {'diff': 5.6014000000000064e-05}, {'diff': 5.5944000000002214e-05}, {'diff': 5.019499999999941e-05}...</msg>
<status status="PASS" starttime="20201030 11:51:51.951" endtime="20201030 11:51:51.955"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:51.958" level="INFO">${ACCURACY} = {'diff': [6.363900000000075e-05, 5.3999999999998494e-05, 5.786099999999933e-05, 5.6014000000000064e-05, 5.5944000000002214e-05, 5.019499999999941e-05, 5.686099999999833e-05, 5.11530000000017e-05, 5.59...</msg>
<status status="PASS" starttime="20201030 11:51:51.955" endtime="20201030 11:51:51.959"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:51.963" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201030 11:51:51.962" endtime="20201030 11:51:51.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:51.965" level="INFO">VALUE: [6.363900000000075e-05, 5.3999999999998494e-05, 5.786099999999933e-05, 5.6014000000000064e-05, 5.5944000000002214e-05, 5.019499999999941e-05, 5.686099999999833e-05, 5.11530000000017e-05, 5.591699999999908e-05, 5.406900000000034e-05, 5.6027999999999634e-05, 5.113899999999866e-05, 5.116700000000127e-05, 5.3999999999998494e-05, 5.301400000000053e-05, 5.115299999999823e-05, 5.590299999999951e-05, 5.6027999999999634e-05, 5.30280000000001e-05, 5.590299999999951e-05, 5.019399999999993e-05, 5.505600000000124e-05, 5.212500000000009e-05, 5.11530000000017e-05, 5.68610000000018e-05, 5.112499999999909e-05, 5.68749999999979e-05, 5.590299999999951e-05, 5.401299999999859e-05, 5.124999999999921e-05, 5.40280000000011e-05, 5.4013999999998064e-05, 5.209699999999748e-05, 5.408300000000338e-05, 5.300000000000096e-05, 5.4930000000001644e-05, 5.123599999999964e-05, 5.5915999999999605e-05, 5.305600000000271e-05, 5.493100000000112e-05, 5.111100000000299e-05, 5.112500000000256e-05, 5.694499999999922e-05, 5.12080000000005e-05, 5.30410000000002e-05, 5.305499999999977e-05, 5.124999999999921e-05, 5.209700000000095e-05, 5.305600000000271e-05, 5.113900000000213e-05]</msg>
<status status="PASS" starttime="20201030 11:51:51.964" endtime="20201030 11:51:51.966"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.959" endtime="20201030 11:51:51.967"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:51.970" endtime="20201030 11:51:51.990"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.969" endtime="20201030 11:51:51.990"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.968" endtime="20201030 11:51:51.991"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.606" endtime="20201030 11:51:51.991"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.605" endtime="20201030 11:51:51.991"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:51.999" endtime="20201030 11:51:52.022"></status>
</kw>
<msg timestamp="20201030 11:51:52.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:51.998" endtime="20201030 11:51:52.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:52.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:52.024" endtime="20201030 11:51:52.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:52.026" endtime="20201030 11:51:52.028"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.995" endtime="20201030 11:51:52.028"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.993" endtime="20201030 11:51:52.028"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:52.035" endtime="20201030 11:51:52.320"></status>
</kw>
<msg timestamp="20201030 11:51:52.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023808764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023854181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:52.033" endtime="20201030 11:51:52.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:52.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023808764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023854181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:52.325" endtime="20201030 11:51:52.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:52.333" endtime="20201030 11:51:52.335"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.031" endtime="20201030 11:51:52.335"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.029" endtime="20201030 11:51:52.336"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:52.340" level="INFO">${RESULT} = [{'diff': 4.5416999999998986e-05}, {'diff': 5.0195000000002876e-05}, {'diff': 5.1236999999999117e-05}, {'diff': 5.688899999999747e-05}, {'diff': 5.306999999999881e-05}, {'diff': 5.211100000000052e-05}...</msg>
<status status="PASS" starttime="20201030 11:51:52.336" endtime="20201030 11:51:52.340"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:52.344" level="INFO">${ACCURACY} = {'diff': [4.5416999999998986e-05, 5.0195000000002876e-05, 5.1236999999999117e-05, 5.688899999999747e-05, 5.306999999999881e-05, 5.211100000000052e-05, 5.401400000000153e-05, 5.411099999999905e-05, 5.4...</msg>
<status status="PASS" starttime="20201030 11:51:52.340" endtime="20201030 11:51:52.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:52.348" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201030 11:51:52.347" endtime="20201030 11:51:52.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:52.350" level="INFO">VALUE: [4.5416999999998986e-05, 5.0195000000002876e-05, 5.1236999999999117e-05, 5.688899999999747e-05, 5.306999999999881e-05, 5.211100000000052e-05, 5.401400000000153e-05, 5.411099999999905e-05, 5.400000000000196e-05, 5.4957999999997315e-05, 5.220900000000098e-05, 5.3985999999998924e-05, 5.208300000000138e-05, 5.688900000000094e-05, 5.6014000000000064e-05, 5.304199999999967e-05, 5.5943999999998745e-05, 5.401299999999859e-05, 5.319500000000241e-05, 5.212500000000009e-05, 5.401400000000153e-05, 5.304199999999967e-05, 5.213899999999966e-05, 5.408399999999938e-05, 5.5943999999998745e-05, 5.209800000000042e-05, 5.695899999999879e-05, 5.4013999999998064e-05, 5.687500000000137e-05, 5.122200000000007e-05, 5.201399999999953e-05, 5.4929999999998175e-05, 5.688900000000094e-05, 5.30410000000002e-05, 5.112499999999909e-05, 5.206899999999834e-05, 5.209700000000095e-05, 5.608300000000191e-05, 5.687500000000137e-05, 5.209699999999748e-05, 5.401400000000153e-05, 5.019499999999941e-05, 5.6014000000000064e-05, 5.1165999999998324e-05, 5.68610000000018e-05, 5.400000000000196e-05, 5.40280000000011e-05, 5.686200000000127e-05, 5.604200000000267e-05, 5.12080000000005e-05]</msg>
<status status="PASS" starttime="20201030 11:51:52.349" endtime="20201030 11:51:52.356"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.344" endtime="20201030 11:51:52.356"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:52.360" endtime="20201030 11:51:52.379"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.358" endtime="20201030 11:51:52.380"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.357" endtime="20201030 11:51:52.380"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.992" endtime="20201030 11:51:52.381"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.991" endtime="20201030 11:51:52.381"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:52.389" endtime="20201030 11:51:52.409"></status>
</kw>
<msg timestamp="20201030 11:51:52.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:52.388" endtime="20201030 11:51:52.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:52.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:52.410" endtime="20201030 11:51:52.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:52.413" endtime="20201030 11:51:52.415"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.385" endtime="20201030 11:51:52.415"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.383" endtime="20201030 11:51:52.416"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:52.422" endtime="20201030 11:51:52.707"></status>
</kw>
<msg timestamp="20201030 11:51:52.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021083264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021144944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:52.420" endtime="20201030 11:51:52.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:52.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021083264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021144944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:52.711" endtime="20201030 11:51:52.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:52.720" endtime="20201030 11:51:52.721"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.418" endtime="20201030 11:51:52.722"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.416" endtime="20201030 11:51:52.722"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:52.726" level="INFO">${RESULT} = [{'diff': 6.167999999999799e-05}, {'diff': 5.205600000000171e-05}, {'diff': 5.113899999999866e-05}, {'diff': 5.68610000000018e-05}, {'diff': 5.305600000000271e-05}, {'diff': 5.490300000000198e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:52.723" endtime="20201030 11:51:52.727"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:52.731" level="INFO">${ACCURACY} = {'diff': [6.167999999999799e-05, 5.205600000000171e-05, 5.113899999999866e-05, 5.68610000000018e-05, 5.305600000000271e-05, 5.490300000000198e-05, 5.495900000000026e-05, 5.208299999999791e-05, 5.40140...</msg>
<status status="PASS" starttime="20201030 11:51:52.727" endtime="20201030 11:51:52.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:52.736" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201030 11:51:52.735" endtime="20201030 11:51:52.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:52.738" level="INFO">VALUE: [6.167999999999799e-05, 5.205600000000171e-05, 5.113899999999866e-05, 5.68610000000018e-05, 5.305600000000271e-05, 5.490300000000198e-05, 5.495900000000026e-05, 5.208299999999791e-05, 5.401400000000153e-05, 5.215299999999923e-05, 5.604099999999973e-05, 5.209699999999748e-05, 5.206900000000181e-05, 5.3999999999998494e-05, 5.30280000000001e-05, 5.408399999999938e-05, 5.4958000000000784e-05, 5.5958000000001784e-05, 5.11530000000017e-05, 5.4999999999999494e-05, 5.5013999999999064e-05, 5.123599999999964e-05, 5.019499999999941e-05, 5.308299999999891e-05, 5.4999999999999494e-05, 5.3013999999997063e-05, 5.594500000000169e-05, 5.227699999999988e-05, 5.113900000000213e-05, 5.115299999999823e-05, 5.593100000000212e-05, 5.490300000000198e-05, 5.212500000000009e-05, 5.209699999999748e-05, 5.4985999999999924e-05, 5.115299999999823e-05, 5.5915999999999605e-05, 5.212499999999662e-05, 5.594499999999822e-05, 5.4972000000000354e-05, 5.3999999999998494e-05, 5.211100000000052e-05, 5.688900000000094e-05, 5.4027999999997633e-05, 5.211099999999705e-05, 5.398600000000239e-05, 5.1193999999997464e-05, 5.3138000000001184e-05, 5.590299999999951e-05, 5.40280000000011e-05]</msg>
<status status="PASS" starttime="20201030 11:51:52.737" endtime="20201030 11:51:52.739"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.732" endtime="20201030 11:51:52.740"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:52.743" endtime="20201030 11:51:52.763"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.742" endtime="20201030 11:51:52.763"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.740" endtime="20201030 11:51:52.763"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.382" endtime="20201030 11:51:52.764"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.381" endtime="20201030 11:51:52.764"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:52.772" endtime="20201030 11:51:52.795"></status>
</kw>
<msg timestamp="20201030 11:51:52.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:52.771" endtime="20201030 11:51:52.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:52.798" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:52.797" endtime="20201030 11:51:52.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:52.799" endtime="20201030 11:51:52.801"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.768" endtime="20201030 11:51:52.802"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.766" endtime="20201030 11:51:52.802"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:52.808" endtime="20201030 11:51:53.095"></status>
</kw>
<msg timestamp="20201030 11:51:53.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024763375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024814569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:52.807" endtime="20201030 11:51:53.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:53.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024763375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024814569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:53.099" endtime="20201030 11:51:53.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:53.107" endtime="20201030 11:51:53.109"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.804" endtime="20201030 11:51:53.110"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.803" endtime="20201030 11:51:53.110"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:53.114" level="INFO">${RESULT} = [{'diff': 5.119400000000093e-05}, {'diff': 5.213899999999966e-05}, {'diff': 5.118000000000136e-05}, {'diff': 5.4958000000000784e-05}, {'diff': 5.305599999999924e-05}, {'diff': 5.590299999999951e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:51:53.111" endtime="20201030 11:51:53.114"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:53.118" level="INFO">${ACCURACY} = {'diff': [5.119400000000093e-05, 5.213899999999966e-05, 5.118000000000136e-05, 5.4958000000000784e-05, 5.305599999999924e-05, 5.590299999999951e-05, 5.11530000000017e-05, 5.400000000000196e-05, 5.4959...</msg>
<status status="PASS" starttime="20201030 11:51:53.115" endtime="20201030 11:51:53.118"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:53.123" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201030 11:51:53.122" endtime="20201030 11:51:53.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:53.125" level="INFO">VALUE: [5.119400000000093e-05, 5.213899999999966e-05, 5.118000000000136e-05, 5.4958000000000784e-05, 5.305599999999924e-05, 5.590299999999951e-05, 5.11530000000017e-05, 5.400000000000196e-05, 5.495900000000026e-05, 5.018000000000036e-05, 5.686099999999833e-05, 5.30280000000001e-05, 5.115299999999823e-05, 5.401400000000153e-05, 5.4027999999997633e-05, 5.209699999999748e-05, 5.591699999999908e-05, 5.11530000000017e-05, 5.30410000000002e-05, 5.590300000000298e-05, 5.113900000000213e-05, 5.5957999999998315e-05, 5.401400000000153e-05, 5.305499999999977e-05, 5.58610000000008e-05, 5.487499999999937e-05, 5.123599999999964e-05, 5.593099999999865e-05, 5.688899999999747e-05, 5.5930000000002644e-05, 5.691700000000008e-05, 5.50280000000021e-05, 5.395900000000273e-05, 5.688900000000094e-05, 5.304199999999967e-05, 5.209700000000095e-05, 5.308300000000238e-05, 5.306899999999934e-05, 5.1165999999998324e-05, 5.3971999999999354e-05, 5.1137999999999184e-05, 5.686099999999833e-05, 5.4999999999999494e-05, 5.5027999999998634e-05, 5.304199999999967e-05, 5.306999999999881e-05, 5.211199999999999e-05, 5.5902000000000035e-05, 5.113899999999866e-05, 5.40419999999972e-05]</msg>
<status status="PASS" starttime="20201030 11:51:53.124" endtime="20201030 11:51:53.126"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.119" endtime="20201030 11:51:53.126"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:53.130" endtime="20201030 11:51:53.149"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.128" endtime="20201030 11:51:53.150"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.127" endtime="20201030 11:51:53.150"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.765" endtime="20201030 11:51:53.150"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.764" endtime="20201030 11:51:53.151"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:53.159" endtime="20201030 11:51:53.187"></status>
</kw>
<msg timestamp="20201030 11:51:53.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:53.158" endtime="20201030 11:51:53.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:53.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:53.189" endtime="20201030 11:51:53.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:53.191" endtime="20201030 11:51:53.193"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.155" endtime="20201030 11:51:53.193"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.153" endtime="20201030 11:51:53.194"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:53.200" endtime="20201030 11:51:53.486"></status>
</kw>
<msg timestamp="20201030 11:51:53.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024813625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024852333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:53.198" endtime="20201030 11:51:53.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:53.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024813625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024852333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:53.490" endtime="20201030 11:51:53.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:53.499" endtime="20201030 11:51:53.501"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.196" endtime="20201030 11:51:53.501"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.194" endtime="20201030 11:51:53.502"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:53.505" level="INFO">${RESULT} = [{'diff': 3.870800000000188e-05}, {'diff': 5.1137999999999184e-05}, {'diff': 5.209700000000095e-05}, {'diff': 5.412500000000209e-05}, {'diff': 5.6819999999999093e-05}, {'diff': 5.304200000000314e-05},...</msg>
<status status="PASS" starttime="20201030 11:51:53.502" endtime="20201030 11:51:53.506"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:53.509" level="INFO">${ACCURACY} = {'diff': [3.870800000000188e-05, 5.1137999999999184e-05, 5.209700000000095e-05, 5.412500000000209e-05, 5.6819999999999093e-05, 5.304200000000314e-05, 5.590299999999951e-05, 5.5944000000002214e-05, 5.1...</msg>
<status status="PASS" starttime="20201030 11:51:53.506" endtime="20201030 11:51:53.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:53.514" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201030 11:51:53.513" endtime="20201030 11:51:53.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:53.517" level="INFO">VALUE: [3.870800000000188e-05, 5.1137999999999184e-05, 5.209700000000095e-05, 5.412500000000209e-05, 5.6819999999999093e-05, 5.304200000000314e-05, 5.590299999999951e-05, 5.5944000000002214e-05, 5.111099999999952e-05, 5.495900000000026e-05, 5.58610000000008e-05, 5.304199999999967e-05, 5.68610000000018e-05, 5.4985999999999924e-05, 5.506900000000134e-05, 5.11530000000017e-05, 5.301400000000053e-05, 5.398600000000239e-05, 5.591699999999908e-05, 5.122200000000007e-05, 5.112499999999909e-05, 5.305599999999924e-05, 5.4985999999999924e-05, 5.026400000000125e-05, 5.5929999999999175e-05, 5.116700000000127e-05, 5.500000000000296e-05, 5.5915999999999605e-05, 5.4972000000000354e-05, 5.212500000000009e-05, 5.304199999999967e-05, 5.497299999999983e-05, 5.6957999999999315e-05, 5.109699999999995e-05, 5.688900000000094e-05, 5.209700000000095e-05, 5.5929999999999175e-05, 5.3944000000000214e-05, 5.308299999999891e-05, 5.4972000000000354e-05, 5.40280000000011e-05, 5.211100000000052e-05, 5.115299999999823e-05, 5.115299999999823e-05, 5.213899999999966e-05, 5.12080000000005e-05, 5.591699999999908e-05, 5.211100000000052e-05, 5.213899999999966e-05, 5.491700000000155e-05]</msg>
<status status="PASS" starttime="20201030 11:51:53.515" endtime="20201030 11:51:53.518"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.510" endtime="20201030 11:51:53.519"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:53.522" endtime="20201030 11:51:53.542"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.521" endtime="20201030 11:51:53.542"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.520" endtime="20201030 11:51:53.543"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.152" endtime="20201030 11:51:53.543"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.151" endtime="20201030 11:51:53.543"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:53.552" endtime="20201030 11:51:53.574"></status>
</kw>
<msg timestamp="20201030 11:51:53.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:53.550" endtime="20201030 11:51:53.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:53.577" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:53.575" endtime="20201030 11:51:53.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:53.578" endtime="20201030 11:51:53.579"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.547" endtime="20201030 11:51:53.580"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.545" endtime="20201030 11:51:53.580"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:53.587" endtime="20201030 11:51:53.873"></status>
</kw>
<msg timestamp="20201030 11:51:53.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024204181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024247667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:53.585" endtime="20201030 11:51:53.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:53.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024204181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024247667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:53.877" endtime="20201030 11:51:53.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:53.886" endtime="20201030 11:51:53.887"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.583" endtime="20201030 11:51:53.888"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.581" endtime="20201030 11:51:53.888"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:53.892" level="INFO">${RESULT} = [{'diff': 4.348599999999883e-05}, {'diff': 5.109799999999942e-05}, {'diff': 5.506900000000134e-05}, {'diff': 5.206900000000181e-05}, {'diff': 5.212500000000009e-05}, {'diff': 5.116600000000179e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:53.889" endtime="20201030 11:51:53.892"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:53.897" level="INFO">${ACCURACY} = {'diff': [4.348599999999883e-05, 5.109799999999942e-05, 5.506900000000134e-05, 5.206900000000181e-05, 5.212500000000009e-05, 5.116600000000179e-05, 5.208400000000085e-05, 5.298600000000139e-05, 5.4957...</msg>
<status status="PASS" starttime="20201030 11:51:53.893" endtime="20201030 11:51:53.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:53.902" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201030 11:51:53.901" endtime="20201030 11:51:53.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:53.904" level="INFO">VALUE: [4.348599999999883e-05, 5.109799999999942e-05, 5.506900000000134e-05, 5.206900000000181e-05, 5.212500000000009e-05, 5.116600000000179e-05, 5.208400000000085e-05, 5.298600000000139e-05, 5.4957999999997315e-05, 5.686099999999833e-05, 5.30280000000001e-05, 5.4985999999999924e-05, 5.591700000000255e-05, 5.123599999999964e-05, 5.115299999999823e-05, 5.206899999999834e-05, 5.4999999999999494e-05, 5.497299999999983e-05, 5.208400000000085e-05, 5.222200000000107e-05, 5.39869999999984e-05, 5.306999999999881e-05, 5.68480000000017e-05, 5.211100000000052e-05, 5.413899999999819e-05, 5.4971999999996884e-05, 5.40419999999972e-05, 5.400000000000196e-05, 5.211100000000052e-05, 5.4972000000000354e-05, 5.409699999999948e-05, 5.2137999999996715e-05, 5.4013999999998064e-05, 5.4958000000000784e-05, 5.113899999999866e-05, 5.20279999999991e-05, 5.3999999999998494e-05, 5.401400000000153e-05, 5.31669999999998e-05, 5.213899999999966e-05, 5.4999999999999494e-05, 5.115299999999823e-05, 5.591699999999908e-05, 5.4944000000001214e-05, 5.304199999999967e-05, 5.5902000000000035e-05, 5.209700000000095e-05, 5.4957999999997315e-05, 5.304199999999967e-05, 5.401400000000153e-05]</msg>
<status status="PASS" starttime="20201030 11:51:53.903" endtime="20201030 11:51:53.905"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.898" endtime="20201030 11:51:53.905"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:53.909" endtime="20201030 11:51:53.928"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.907" endtime="20201030 11:51:53.929"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.906" endtime="20201030 11:51:53.929"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.544" endtime="20201030 11:51:53.929"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.543" endtime="20201030 11:51:53.930"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:53.938" endtime="20201030 11:51:53.960"></status>
</kw>
<msg timestamp="20201030 11:51:53.961" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:53.937" endtime="20201030 11:51:53.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:53.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:53.962" endtime="20201030 11:51:53.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:53.965" endtime="20201030 11:51:53.967"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.934" endtime="20201030 11:51:53.967"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.932" endtime="20201030 11:51:53.968"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:53.974" endtime="20201030 11:51:54.266"></status>
</kw>
<msg timestamp="20201030 11:51:54.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024526681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024591222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:53.972" endtime="20201030 11:51:54.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:54.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024526681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024591222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:54.270" endtime="20201030 11:51:54.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:54.279" endtime="20201030 11:51:54.280"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.970" endtime="20201030 11:51:54.281"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.968" endtime="20201030 11:51:54.281"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:54.285" level="INFO">${RESULT} = [{'diff': 6.454099999999782e-05}, {'diff': 5.3999999999998494e-05}, {'diff': 5.493099999999765e-05}, {'diff': 5.209800000000042e-05}, {'diff': 5.211100000000052e-05}, {'diff': 5.020899999999898e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:51:54.282" endtime="20201030 11:51:54.285"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:54.289" level="INFO">${ACCURACY} = {'diff': [6.454099999999782e-05, 5.3999999999998494e-05, 5.493099999999765e-05, 5.209800000000042e-05, 5.211100000000052e-05, 5.020899999999898e-05, 5.49869999999994e-05, 5.212500000000009e-05, 5.2083...</msg>
<status status="PASS" starttime="20201030 11:51:54.286" endtime="20201030 11:51:54.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:54.294" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201030 11:51:54.293" endtime="20201030 11:51:54.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:54.296" level="INFO">VALUE: [6.454099999999782e-05, 5.3999999999998494e-05, 5.493099999999765e-05, 5.209800000000042e-05, 5.211100000000052e-05, 5.020899999999898e-05, 5.49869999999994e-05, 5.212500000000009e-05, 5.208300000000138e-05, 5.206900000000181e-05, 5.305599999999924e-05, 5.5930000000002644e-05, 5.493100000000112e-05, 5.016700000000027e-05, 5.400000000000196e-05, 5.116700000000127e-05, 5.4999999999999494e-05, 5.400000000000196e-05, 5.400000000000196e-05, 5.584700000000123e-05, 5.30280000000001e-05, 5.4013999999998064e-05, 5.593099999999865e-05, 5.68610000000018e-05, 5.211100000000052e-05, 5.4999999999999494e-05, 5.686099999999833e-05, 5.593100000000212e-05, 5.3985999999998924e-05, 5.590299999999951e-05, 5.5930000000002644e-05, 5.112499999999909e-05, 5.4972000000000354e-05, 5.308299999999891e-05, 5.4985999999999924e-05, 5.402699999999816e-05, 5.306900000000281e-05, 5.211100000000052e-05, 5.018099999999984e-05, 5.4027999999997633e-05, 5.206899999999834e-05, 5.11530000000017e-05, 5.311099999999805e-05, 5.304199999999967e-05, 5.211100000000052e-05, 5.119500000000041e-05, 5.398600000000239e-05, 5.209699999999748e-05, 5.4027999999997633e-05, 5.119400000000093e-05]</msg>
<status status="PASS" starttime="20201030 11:51:54.295" endtime="20201030 11:51:54.297"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.290" endtime="20201030 11:51:54.297"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:54.301" endtime="20201030 11:51:54.321"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.300" endtime="20201030 11:51:54.321"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.298" endtime="20201030 11:51:54.322"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.931" endtime="20201030 11:51:54.322"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.930" endtime="20201030 11:51:54.322"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:54.331" endtime="20201030 11:51:54.354"></status>
</kw>
<msg timestamp="20201030 11:51:54.355" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:54.329" endtime="20201030 11:51:54.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:54.357" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:54.356" endtime="20201030 11:51:54.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:54.358" endtime="20201030 11:51:54.360"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.326" endtime="20201030 11:51:54.360"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.324" endtime="20201030 11:51:54.361"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:54.367" endtime="20201030 11:51:54.654"></status>
</kw>
<msg timestamp="20201030 11:51:54.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024153667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024200986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:54.366" endtime="20201030 11:51:54.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:54.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024153667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024200986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:54.658" endtime="20201030 11:51:54.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:54.667" endtime="20201030 11:51:54.668"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.363" endtime="20201030 11:51:54.669"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.361" endtime="20201030 11:51:54.669"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:54.673" level="INFO">${RESULT} = [{'diff': 4.731900000000053e-05}, {'diff': 5.0222999999998547e-05}, {'diff': 5.1152000000002223e-05}, {'diff': 5.304199999999967e-05}, {'diff': 5.313900000000066e-05}, {'diff': 5.5944000000002214e-05}...</msg>
<status status="PASS" starttime="20201030 11:51:54.670" endtime="20201030 11:51:54.674"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:54.678" level="INFO">${ACCURACY} = {'diff': [4.731900000000053e-05, 5.0222999999998547e-05, 5.1152000000002223e-05, 5.304199999999967e-05, 5.313900000000066e-05, 5.5944000000002214e-05, 5.1151999999998754e-05, 5.211100000000052e-05, 5....</msg>
<status status="PASS" starttime="20201030 11:51:54.674" endtime="20201030 11:51:54.678"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:54.682" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201030 11:51:54.681" endtime="20201030 11:51:54.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:54.685" level="INFO">VALUE: [4.731900000000053e-05, 5.0222999999998547e-05, 5.1152000000002223e-05, 5.304199999999967e-05, 5.313900000000066e-05, 5.5944000000002214e-05, 5.1151999999998754e-05, 5.211100000000052e-05, 5.495900000000026e-05, 5.4958000000000784e-05, 5.22080000000015e-05, 5.4958000000000784e-05, 5.590299999999951e-05, 5.306899999999934e-05, 5.305499999999977e-05, 5.112500000000256e-05, 5.300000000000096e-05, 5.222200000000107e-05, 5.213899999999966e-05, 5.113899999999866e-05, 5.40280000000011e-05, 5.211100000000052e-05, 5.4958000000000784e-05, 5.497299999999983e-05, 5.219400000000193e-05, 5.495899999999679e-05, 5.1165999999998324e-05, 5.222299999999708e-05, 5.4972000000000354e-05, 5.2999999999997494e-05, 5.608400000000138e-05, 5.690300000000051e-05, 5.4985999999999924e-05, 5.509700000000048e-05, 5.40280000000011e-05, 5.688899999999747e-05, 5.301300000000106e-05, 5.394499999999969e-05, 5.124999999999921e-05, 5.115299999999823e-05, 5.308300000000238e-05, 5.1151999999998754e-05, 5.3971999999999354e-05, 5.1151999999998754e-05, 5.222200000000107e-05, 5.401400000000153e-05, 5.116700000000127e-05, 5.497299999999983e-05, 5.608299999999844e-05, 5.4972000000000354e-05]</msg>
<status status="PASS" starttime="20201030 11:51:54.683" endtime="20201030 11:51:54.686"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.678" endtime="20201030 11:51:54.687"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:54.690" endtime="20201030 11:51:54.710"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.689" endtime="20201030 11:51:54.710"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.688" endtime="20201030 11:51:54.711"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.323" endtime="20201030 11:51:54.711"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.322" endtime="20201030 11:51:54.711"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:54.720" endtime="20201030 11:51:54.740"></status>
</kw>
<msg timestamp="20201030 11:51:54.740" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:54.718" endtime="20201030 11:51:54.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:54.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:54.742" endtime="20201030 11:51:54.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:54.744" endtime="20201030 11:51:54.746"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.716" endtime="20201030 11:51:54.746"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.714" endtime="20201030 11:51:54.746"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:54.753" endtime="20201030 11:51:55.039"></status>
</kw>
<msg timestamp="20201030 11:51:55.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021646514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021705292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:54.751" endtime="20201030 11:51:55.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:55.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021646514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021705292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:55.044" endtime="20201030 11:51:55.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:55.052" endtime="20201030 11:51:55.054"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.749" endtime="20201030 11:51:55.054"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.747" endtime="20201030 11:51:55.055"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:55.059" level="INFO">${RESULT} = [{'diff': 5.8778000000002384e-05}, {'diff': 5.30410000000002e-05}, {'diff': 5.686099999999833e-05}, {'diff': 5.208299999999791e-05}, {'diff': 5.208400000000085e-05}, {'diff': 5.116700000000127e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:55.055" endtime="20201030 11:51:55.059"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:55.064" level="INFO">${ACCURACY} = {'diff': [5.8778000000002384e-05, 5.30410000000002e-05, 5.686099999999833e-05, 5.208299999999791e-05, 5.208400000000085e-05, 5.116700000000127e-05, 5.1193999999997464e-05, 5.209700000000095e-05, 5.119...</msg>
<status status="PASS" starttime="20201030 11:51:55.060" endtime="20201030 11:51:55.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:55.068" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201030 11:51:55.067" endtime="20201030 11:51:55.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:55.071" level="INFO">VALUE: [5.8778000000002384e-05, 5.30410000000002e-05, 5.686099999999833e-05, 5.208299999999791e-05, 5.208400000000085e-05, 5.116700000000127e-05, 5.1193999999997464e-05, 5.209700000000095e-05, 5.119500000000041e-05, 5.5999999999997024e-05, 5.019399999999993e-05, 5.588899999999994e-05, 5.40280000000011e-05, 5.29730000000013e-05, 5.5041999999998203e-05, 5.209699999999748e-05, 5.208300000000138e-05, 5.211100000000052e-05, 5.122200000000007e-05, 5.016700000000027e-05, 5.209700000000095e-05, 5.11669999999978e-05, 5.686099999999833e-05, 5.02079999999995e-05, 5.4985999999999924e-05, 5.5986000000000924e-05, 5.591699999999908e-05, 5.68610000000018e-05, 5.4957999999997315e-05, 5.118000000000136e-05, 5.5971999999997885e-05, 5.493099999999765e-05, 5.304199999999967e-05, 5.78749999999989e-05, 5.50280000000021e-05, 5.304199999999967e-05, 5.208300000000138e-05, 5.307000000000228e-05, 5.6943999999999745e-05, 5.5971999999997885e-05, 5.494499999999722e-05, 5.684699999999876e-05, 5.487499999999937e-05, 5.308299999999891e-05, 5.6943999999999745e-05, 5.68749999999979e-05, 5.588899999999994e-05, 5.119500000000041e-05, 5.118100000000084e-05, 5.300000000000096e-05]</msg>
<status status="PASS" starttime="20201030 11:51:55.069" endtime="20201030 11:51:55.071"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.064" endtime="20201030 11:51:55.072"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:55.076" endtime="20201030 11:51:55.095"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.074" endtime="20201030 11:51:55.096"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.073" endtime="20201030 11:51:55.096"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.712" endtime="20201030 11:51:55.096"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.712" endtime="20201030 11:51:55.096"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:55.106" endtime="20201030 11:51:55.127"></status>
</kw>
<msg timestamp="20201030 11:51:55.127" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:55.104" endtime="20201030 11:51:55.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:55.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:55.128" endtime="20201030 11:51:55.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:55.131" endtime="20201030 11:51:55.132"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.101" endtime="20201030 11:51:55.133"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.099" endtime="20201030 11:51:55.133"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:55.139" endtime="20201030 11:51:55.427"></status>
</kw>
<msg timestamp="20201030 11:51:55.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023408278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023451778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:55.138" endtime="20201030 11:51:55.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:55.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023408278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023451778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:55.431" endtime="20201030 11:51:55.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:55.440" endtime="20201030 11:51:55.441"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.135" endtime="20201030 11:51:55.442"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.134" endtime="20201030 11:51:55.442"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:55.446" level="INFO">${RESULT} = [{'diff': 4.34999999999984e-05}, {'diff': 5.4013999999998064e-05}, {'diff': 5.6916000000000605e-05}, {'diff': 5.6000000000000494e-05}, {'diff': 5.681899999999962e-05}, {'diff': 5.591699999999908e-05},...</msg>
<status status="PASS" starttime="20201030 11:51:55.443" endtime="20201030 11:51:55.446"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:55.450" level="INFO">${ACCURACY} = {'diff': [4.34999999999984e-05, 5.4013999999998064e-05, 5.6916000000000605e-05, 5.6000000000000494e-05, 5.681899999999962e-05, 5.591699999999908e-05, 5.494500000000069e-05, 5.208299999999791e-05, 5.40...</msg>
<status status="PASS" starttime="20201030 11:51:55.447" endtime="20201030 11:51:55.450"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:55.455" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201030 11:51:55.454" endtime="20201030 11:51:55.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:55.457" level="INFO">VALUE: [4.34999999999984e-05, 5.4013999999998064e-05, 5.6916000000000605e-05, 5.6000000000000494e-05, 5.681899999999962e-05, 5.591699999999908e-05, 5.494500000000069e-05, 5.208299999999791e-05, 5.405600000000024e-05, 5.5986000000000924e-05, 5.3985999999998924e-05, 5.494499999999722e-05, 5.022200000000254e-05, 5.212500000000009e-05, 5.204200000000214e-05, 5.497299999999983e-05, 5.591699999999908e-05, 5.21669999999988e-05, 5.501299999999959e-05, 5.493100000000112e-05, 5.026399999999778e-05, 5.4999999999999494e-05, 5.111099999999952e-05, 5.5999999999997024e-05, 5.215299999999923e-05, 5.5943999999998745e-05, 5.591700000000255e-05, 5.494500000000069e-05, 5.015200000000122e-05, 5.311100000000152e-05, 5.40419999999972e-05, 5.2151999999999754e-05, 5.308300000000238e-05, 5.113899999999866e-05, 5.500000000000296e-05, 5.5958000000001784e-05, 5.5972000000001354e-05, 5.313900000000066e-05, 5.313899999999719e-05, 5.213899999999966e-05, 5.58480000000007e-05, 5.6971999999998885e-05, 5.208300000000138e-05, 5.113899999999866e-05, 5.6901999999997566e-05, 5.1138000000002654e-05, 5.312499999999762e-05, 5.690300000000051e-05, 5.205600000000171e-05, 5.301400000000053e-05]</msg>
<status status="PASS" starttime="20201030 11:51:55.456" endtime="20201030 11:51:55.458"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.451" endtime="20201030 11:51:55.458"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:55.462" endtime="20201030 11:51:55.481"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.460" endtime="20201030 11:51:55.482"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.459" endtime="20201030 11:51:55.482"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.097" endtime="20201030 11:51:55.483"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.097" endtime="20201030 11:51:55.483"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:55.491" endtime="20201030 11:51:55.513"></status>
</kw>
<msg timestamp="20201030 11:51:55.514" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:55.490" endtime="20201030 11:51:55.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:55.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:55.515" endtime="20201030 11:51:55.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:55.517" endtime="20201030 11:51:55.519"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.487" endtime="20201030 11:51:55.519"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.485" endtime="20201030 11:51:55.520"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:55.526" endtime="20201030 11:51:55.812"></status>
</kw>
<msg timestamp="20201030 11:51:55.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02382475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023886444, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:55.525" endtime="20201030 11:51:55.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:55.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02382475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023886444, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:55.817" endtime="20201030 11:51:55.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:55.825" endtime="20201030 11:51:55.827"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.522" endtime="20201030 11:51:55.827"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.520" endtime="20201030 11:51:55.828"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:55.832" level="INFO">${RESULT} = [{'diff': 6.169400000000103e-05}, {'diff': 5.5915999999999605e-05}, {'diff': 5.688900000000094e-05}, {'diff': 5.308299999999891e-05}, {'diff': 5.594500000000169e-05}, {'diff': 5.68610000000018e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:55.828" endtime="20201030 11:51:55.832"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:55.836" level="INFO">${ACCURACY} = {'diff': [6.169400000000103e-05, 5.5915999999999605e-05, 5.688900000000094e-05, 5.308299999999891e-05, 5.594500000000169e-05, 5.68610000000018e-05, 5.406999999999981e-05, 5.5986000000000924e-05, 5.018...</msg>
<status status="PASS" starttime="20201030 11:51:55.833" endtime="20201030 11:51:55.836"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:55.840" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201030 11:51:55.839" endtime="20201030 11:51:55.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:55.843" level="INFO">VALUE: [6.169400000000103e-05, 5.5915999999999605e-05, 5.688900000000094e-05, 5.308299999999891e-05, 5.594500000000169e-05, 5.68610000000018e-05, 5.406999999999981e-05, 5.5986000000000924e-05, 5.018000000000036e-05, 5.591700000000255e-05, 5.3999999999998494e-05, 5.68610000000018e-05, 5.400000000000196e-05, 5.406999999999981e-05, 5.116700000000127e-05, 5.304200000000314e-05, 5.119400000000093e-05, 5.6943999999999745e-05, 5.018000000000036e-05, 5.406999999999981e-05, 5.119500000000041e-05, 5.591700000000255e-05, 5.306999999999881e-05, 5.6915999999997136e-05, 5.119400000000093e-05, 5.3999999999998494e-05, 5.4972000000000354e-05, 5.688900000000094e-05, 5.212500000000009e-05, 5.587500000000037e-05, 5.593099999999865e-05, 5.116700000000127e-05, 5.4971999999996884e-05, 5.68749999999979e-05, 5.4972000000000354e-05, 5.3999999999998494e-05, 5.406999999999981e-05, 5.5985999999997454e-05, 5.593099999999865e-05, 5.687500000000137e-05, 5.213899999999966e-05, 5.215299999999923e-05, 5.3985999999998924e-05, 5.6916000000000605e-05, 5.4985999999999924e-05, 5.3985999999998924e-05, 5.5915999999999605e-05, 5.5943999999998745e-05, 5.409699999999948e-05, 5.693099999999965e-05]</msg>
<status status="PASS" starttime="20201030 11:51:55.841" endtime="20201030 11:51:55.844"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.837" endtime="20201030 11:51:55.845"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:55.848" endtime="20201030 11:51:55.868"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.847" endtime="20201030 11:51:55.869"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.846" endtime="20201030 11:51:55.869"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.484" endtime="20201030 11:51:55.869"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.483" endtime="20201030 11:51:55.869"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:55.878" endtime="20201030 11:51:55.900"></status>
</kw>
<msg timestamp="20201030 11:51:55.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:55.876" endtime="20201030 11:51:55.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:55.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:55.901" endtime="20201030 11:51:55.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:55.904" endtime="20201030 11:51:55.905"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.874" endtime="20201030 11:51:55.906"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.872" endtime="20201030 11:51:55.906"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:55.913" endtime="20201030 11:51:56.198"></status>
</kw>
<msg timestamp="20201030 11:51:56.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024298097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024351194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:55.911" endtime="20201030 11:51:56.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:56.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024298097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024351194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:56.202" endtime="20201030 11:51:56.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:56.210" endtime="20201030 11:51:56.212"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.909" endtime="20201030 11:51:56.213"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.907" endtime="20201030 11:51:56.213"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:56.217" level="INFO">${RESULT} = [{'diff': 5.309699999999848e-05}, {'diff': 5.5972000000001354e-05}, {'diff': 5.124999999999921e-05}, {'diff': 5.3985999999998924e-05}, {'diff': 5.690300000000051e-05}, {'diff': 5.2221999999997604e-05}...</msg>
<status status="PASS" starttime="20201030 11:51:56.214" endtime="20201030 11:51:56.217"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:56.222" level="INFO">${ACCURACY} = {'diff': [5.309699999999848e-05, 5.5972000000001354e-05, 5.124999999999921e-05, 5.3985999999998924e-05, 5.690300000000051e-05, 5.2221999999997604e-05, 5.311100000000152e-05, 5.493100000000112e-05, 5.2...</msg>
<status status="PASS" starttime="20201030 11:51:56.218" endtime="20201030 11:51:56.223"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:56.227" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201030 11:51:56.226" endtime="20201030 11:51:56.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:56.229" level="INFO">VALUE: [5.309699999999848e-05, 5.5972000000001354e-05, 5.124999999999921e-05, 5.3985999999998924e-05, 5.690300000000051e-05, 5.2221999999997604e-05, 5.311100000000152e-05, 5.493100000000112e-05, 5.213899999999966e-05, 5.212500000000009e-05, 5.113899999999866e-05, 5.120899999999998e-05, 5.215299999999923e-05, 5.504099999999873e-05, 5.40410000000012e-05, 5.016700000000027e-05, 5.406900000000034e-05, 5.408299999999991e-05, 5.306899999999934e-05, 5.211100000000052e-05, 5.409699999999948e-05, 5.024999999999821e-05, 5.495900000000026e-05, 5.218099999999837e-05, 5.21669999999988e-05, 5.305499999999977e-05, 5.311099999999805e-05, 5.311099999999805e-05, 5.683400000000213e-05, 5.313900000000066e-05, 5.406900000000034e-05, 5.686099999999833e-05, 5.690300000000051e-05, 5.116600000000179e-05, 5.3999999999998494e-05, 5.695899999999879e-05, 5.2151999999999754e-05, 5.11669999999978e-05, 5.312500000000109e-05, 5.5986000000000924e-05, 5.591700000000255e-05, 5.026400000000125e-05, 5.688900000000094e-05, 5.308399999999838e-05, 5.4999999999999494e-05, 5.305599999999924e-05, 5.6930000000000175e-05, 5.5958000000001784e-05, 5.115299999999823e-05, 5.313900000000066e-05]</msg>
<status status="PASS" starttime="20201030 11:51:56.228" endtime="20201030 11:51:56.230"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.223" endtime="20201030 11:51:56.230"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:56.234" endtime="20201030 11:51:56.254"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.233" endtime="20201030 11:51:56.254"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.232" endtime="20201030 11:51:56.254"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.870" endtime="20201030 11:51:56.255"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.870" endtime="20201030 11:51:56.255"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:56.263" endtime="20201030 11:51:56.283"></status>
</kw>
<msg timestamp="20201030 11:51:56.283" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:56.262" endtime="20201030 11:51:56.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:56.286" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:56.284" endtime="20201030 11:51:56.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:56.287" endtime="20201030 11:51:56.288"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.259" endtime="20201030 11:51:56.289"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.257" endtime="20201030 11:51:56.289"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:56.296" endtime="20201030 11:51:56.582"></status>
</kw>
<msg timestamp="20201030 11:51:56.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020350139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020391722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:56.294" endtime="20201030 11:51:56.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:56.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020350139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020391722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:56.586" endtime="20201030 11:51:56.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:56.595" endtime="20201030 11:51:56.596"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.292" endtime="20201030 11:51:56.597"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.290" endtime="20201030 11:51:56.597"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:56.601" level="INFO">${RESULT} = [{'diff': 4.1583000000001286e-05}, {'diff': 5.305499999999977e-05}, {'diff': 5.5985999999997454e-05}, {'diff': 5.4985999999999924e-05}, {'diff': 5.212500000000009e-05}, {'diff': 5.591699999999908e-05}...</msg>
<status status="PASS" starttime="20201030 11:51:56.598" endtime="20201030 11:51:56.602"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:56.605" level="INFO">${ACCURACY} = {'diff': [4.1583000000001286e-05, 5.305499999999977e-05, 5.5985999999997454e-05, 5.4985999999999924e-05, 5.212500000000009e-05, 5.591699999999908e-05, 5.4972000000000354e-05, 5.688900000000094e-05, 5....</msg>
<status status="PASS" starttime="20201030 11:51:56.602" endtime="20201030 11:51:56.606"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:56.610" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201030 11:51:56.609" endtime="20201030 11:51:56.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:56.612" level="INFO">VALUE: [4.1583000000001286e-05, 5.305499999999977e-05, 5.5985999999997454e-05, 5.4985999999999924e-05, 5.212500000000009e-05, 5.591699999999908e-05, 5.4972000000000354e-05, 5.688900000000094e-05, 5.4944000000001214e-05, 5.688900000000094e-05, 5.4958000000000784e-05, 5.207000000000128e-05, 5.312499999999762e-05, 5.122200000000007e-05, 5.3999999999998494e-05, 5.305600000000271e-05, 5.113899999999866e-05, 5.68749999999979e-05, 5.018099999999984e-05, 5.5930000000002644e-05, 5.304199999999967e-05, 5.311100000000152e-05, 5.12080000000005e-05, 5.4013999999998064e-05, 5.40280000000011e-05, 5.586099999999733e-05, 5.306899999999934e-05, 5.60410000000032e-05, 5.401400000000153e-05, 5.6943999999999745e-05, 5.590299999999951e-05, 5.206999999999781e-05, 5.3985999999998924e-05, 5.4972000000000354e-05, 5.408400000000285e-05, 5.209700000000095e-05, 5.208299999999791e-05, 5.394500000000316e-05, 5.209800000000042e-05, 5.5013999999999064e-05, 5.124999999999921e-05, 5.690299999999704e-05, 5.211100000000052e-05, 5.4929999999998175e-05, 5.400000000000196e-05, 5.5929999999999175e-05, 5.4027999999997633e-05, 5.302700000000063e-05, 5.212500000000009e-05, 5.6014000000000064e-05]</msg>
<status status="PASS" starttime="20201030 11:51:56.611" endtime="20201030 11:51:56.613"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.606" endtime="20201030 11:51:56.614"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:56.617" endtime="20201030 11:51:56.637"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.616" endtime="20201030 11:51:56.637"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.615" endtime="20201030 11:51:56.637"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.256" endtime="20201030 11:51:56.638"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.255" endtime="20201030 11:51:56.638"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:56.646" endtime="20201030 11:51:56.669"></status>
</kw>
<msg timestamp="20201030 11:51:56.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:56.645" endtime="20201030 11:51:56.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:56.673" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:56.671" endtime="20201030 11:51:56.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:56.674" endtime="20201030 11:51:56.675"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.642" endtime="20201030 11:51:56.676"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.640" endtime="20201030 11:51:56.676"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:56.683" endtime="20201030 11:51:56.969"></status>
</kw>
<msg timestamp="20201030 11:51:56.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024196264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024244542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:56.681" endtime="20201030 11:51:56.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:56.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024196264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024244542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:56.973" endtime="20201030 11:51:56.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:56.982" endtime="20201030 11:51:56.983"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.678" endtime="20201030 11:51:56.984"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.677" endtime="20201030 11:51:56.984"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:56.988" level="INFO">${RESULT} = [{'diff': 4.827800000000229e-05}, {'diff': 5.501299999999959e-05}, {'diff': 5.312500000000109e-05}, {'diff': 5.405600000000024e-05}, {'diff': 5.116600000000179e-05}, {'diff': 5.21669999999988e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:56.985" endtime="20201030 11:51:56.988"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:56.992" level="INFO">${ACCURACY} = {'diff': [4.827800000000229e-05, 5.501299999999959e-05, 5.312500000000109e-05, 5.405600000000024e-05, 5.116600000000179e-05, 5.21669999999988e-05, 5.401400000000153e-05, 5.112499999999909e-05, 5.21110...</msg>
<status status="PASS" starttime="20201030 11:51:56.989" endtime="20201030 11:51:56.993"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:56.997" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201030 11:51:56.996" endtime="20201030 11:51:56.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:57.000" level="INFO">VALUE: [4.827800000000229e-05, 5.501299999999959e-05, 5.312500000000109e-05, 5.405600000000024e-05, 5.116600000000179e-05, 5.21669999999988e-05, 5.401400000000153e-05, 5.112499999999909e-05, 5.211100000000052e-05, 5.501400000000253e-05, 5.211100000000052e-05, 5.206999999999781e-05, 5.4027999999997633e-05, 5.309699999999848e-05, 5.590299999999951e-05, 5.686099999999833e-05, 5.309699999999848e-05, 5.504099999999873e-05, 5.209699999999748e-05, 5.2138000000000184e-05, 5.4999999999999494e-05, 5.311099999999805e-05, 5.5027999999998634e-05, 5.304199999999967e-05, 5.4999999999999494e-05, 5.6014000000000064e-05, 5.019399999999993e-05, 5.4972000000000354e-05, 5.211099999999705e-05, 5.1152000000002223e-05, 5.6902000000001035e-05, 5.12080000000005e-05, 5.591699999999908e-05, 5.115299999999823e-05, 5.597300000000083e-05, 5.50280000000021e-05, 5.593099999999865e-05, 5.113899999999866e-05, 5.406999999999981e-05, 5.686099999999833e-05, 5.494500000000069e-05, 5.6888000000001465e-05, 5.309800000000142e-05, 5.405500000000077e-05, 5.4972000000000354e-05, 5.408399999999938e-05, 5.215299999999923e-05, 5.494500000000069e-05, 5.401400000000153e-05, 5.686099999999833e-05]</msg>
<status status="PASS" starttime="20201030 11:51:56.998" endtime="20201030 11:51:57.001"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.993" endtime="20201030 11:51:57.001"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:57.005" endtime="20201030 11:51:57.024"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.004" endtime="20201030 11:51:57.025"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.002" endtime="20201030 11:51:57.025"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.639" endtime="20201030 11:51:57.026"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.638" endtime="20201030 11:51:57.026"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:57.034" endtime="20201030 11:51:57.056"></status>
</kw>
<msg timestamp="20201030 11:51:57.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:57.033" endtime="20201030 11:51:57.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:57.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:57.058" endtime="20201030 11:51:57.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:57.060" endtime="20201030 11:51:57.062"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.030" endtime="20201030 11:51:57.062"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.028" endtime="20201030 11:51:57.063"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:57.069" endtime="20201030 11:51:57.356"></status>
</kw>
<msg timestamp="20201030 11:51:57.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023230694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023274292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:57.067" endtime="20201030 11:51:57.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:57.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023230694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023274292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:57.360" endtime="20201030 11:51:57.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:57.368" endtime="20201030 11:51:57.370"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.065" endtime="20201030 11:51:57.371"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.063" endtime="20201030 11:51:57.371"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:57.375" level="INFO">${RESULT} = [{'diff': 4.359799999999886e-05}, {'diff': 5.116600000000179e-05}, {'diff': 5.690300000000051e-05}, {'diff': 5.408399999999938e-05}, {'diff': 5.401400000000153e-05}, {'diff': 5.306899999999934e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:57.372" endtime="20201030 11:51:57.375"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:57.380" level="INFO">${ACCURACY} = {'diff': [4.359799999999886e-05, 5.116600000000179e-05, 5.690300000000051e-05, 5.408399999999938e-05, 5.401400000000153e-05, 5.306899999999934e-05, 5.5013999999999064e-05, 5.016700000000027e-05, 5.118...</msg>
<status status="PASS" starttime="20201030 11:51:57.376" endtime="20201030 11:51:57.380"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:57.385" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201030 11:51:57.384" endtime="20201030 11:51:57.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:57.387" level="INFO">VALUE: [4.359799999999886e-05, 5.116600000000179e-05, 5.690300000000051e-05, 5.408399999999938e-05, 5.401400000000153e-05, 5.306899999999934e-05, 5.5013999999999064e-05, 5.016700000000027e-05, 5.118099999999737e-05, 5.127800000000182e-05, 5.401400000000153e-05, 5.50280000000021e-05, 5.405600000000024e-05, 5.398600000000239e-05, 5.218100000000184e-05, 5.211100000000052e-05, 5.21530000000027e-05, 5.309699999999848e-05, 5.31669999999998e-05, 5.5013999999999064e-05, 5.593099999999865e-05, 5.501299999999959e-05, 5.406899999999687e-05, 5.119500000000041e-05, 5.6971999999998885e-05, 5.590300000000298e-05, 5.12080000000005e-05, 5.119500000000041e-05, 5.211100000000052e-05, 5.504099999999873e-05, 5.311099999999805e-05, 5.21669999999988e-05, 5.409699999999948e-05, 5.687500000000137e-05, 5.3999999999998494e-05, 5.405599999999677e-05, 5.30280000000001e-05, 5.5958000000001784e-05, 5.023599999999864e-05, 5.4027999999997633e-05, 5.508400000000038e-05, 5.312500000000109e-05, 5.4985999999999924e-05, 5.502699999999916e-05, 5.597299999999736e-05, 5.215299999999923e-05, 5.693099999999965e-05, 5.12080000000005e-05, 5.4972000000000354e-05, 5.595899999999779e-05]</msg>
<status status="PASS" starttime="20201030 11:51:57.386" endtime="20201030 11:51:57.388"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.381" endtime="20201030 11:51:57.389"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:57.392" endtime="20201030 11:51:57.412"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.391" endtime="20201030 11:51:57.412"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.390" endtime="20201030 11:51:57.413"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.027" endtime="20201030 11:51:57.413"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.026" endtime="20201030 11:51:57.413"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:57.422" endtime="20201030 11:51:57.443"></status>
</kw>
<msg timestamp="20201030 11:51:57.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:57.420" endtime="20201030 11:51:57.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:57.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:57.444" endtime="20201030 11:51:57.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:57.447" endtime="20201030 11:51:57.448"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.417" endtime="20201030 11:51:57.449"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.415" endtime="20201030 11:51:57.449"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:57.456" endtime="20201030 11:51:57.745"></status>
</kw>
<msg timestamp="20201030 11:51:57.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022742028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02279325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:57.454" endtime="20201030 11:51:57.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:57.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022742028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02279325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:57.749" endtime="20201030 11:51:57.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:57.757" endtime="20201030 11:51:57.759"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.452" endtime="20201030 11:51:57.759"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.450" endtime="20201030 11:51:57.760"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:57.764" level="INFO">${RESULT} = [{'diff': 5.122200000000007e-05}, {'diff': 5.113899999999866e-05}, {'diff': 5.4985999999999924e-05}, {'diff': 5.22080000000015e-05}, {'diff': 5.5943999999998745e-05}, {'diff': 5.686099999999833e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:51:57.761" endtime="20201030 11:51:57.764"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:57.768" level="INFO">${ACCURACY} = {'diff': [5.122200000000007e-05, 5.113899999999866e-05, 5.4985999999999924e-05, 5.22080000000015e-05, 5.5943999999998745e-05, 5.686099999999833e-05, 5.5944000000002214e-05, 5.408299999999991e-05, 5.59...</msg>
<status status="PASS" starttime="20201030 11:51:57.765" endtime="20201030 11:51:57.768"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:57.772" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201030 11:51:57.771" endtime="20201030 11:51:57.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:57.775" level="INFO">VALUE: [5.122200000000007e-05, 5.113899999999866e-05, 5.4985999999999924e-05, 5.22080000000015e-05, 5.5943999999998745e-05, 5.686099999999833e-05, 5.5944000000002214e-05, 5.408299999999991e-05, 5.594499999999822e-05, 5.400000000000196e-05, 5.3166000000000324e-05, 5.591699999999908e-05, 5.397299999999883e-05, 5.494499999999722e-05, 5.309700000000195e-05, 5.398600000000239e-05, 5.5930000000002644e-05, 5.4943999999997745e-05, 5.1152000000002223e-05, 5.2207999999998034e-05, 5.212500000000009e-05, 5.4930000000001644e-05, 5.690300000000051e-05, 5.593099999999865e-05, 5.401400000000153e-05, 5.1165999999998324e-05, 5.6957999999999315e-05, 5.211199999999999e-05, 5.400000000000196e-05, 5.305600000000271e-05, 5.126299999999931e-05, 5.206999999999781e-05, 5.305600000000271e-05, 5.208399999999738e-05, 5.590299999999951e-05, 5.220899999999751e-05, 5.590300000000298e-05, 5.590299999999951e-05, 5.411099999999905e-05, 5.022199999999907e-05, 5.304199999999967e-05, 5.681899999999962e-05, 5.497299999999983e-05, 5.108400000000332e-05, 5.209700000000095e-05, 5.208300000000138e-05, 5.594500000000169e-05, 5.691700000000008e-05, 5.306899999999934e-05, 5.209700000000095e-05]</msg>
<status status="PASS" starttime="20201030 11:51:57.774" endtime="20201030 11:51:57.776"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.769" endtime="20201030 11:51:57.776"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:57.780" endtime="20201030 11:51:57.799"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.778" endtime="20201030 11:51:57.800"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.777" endtime="20201030 11:51:57.800"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.414" endtime="20201030 11:51:57.800"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.413" endtime="20201030 11:51:57.800"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:57.809" endtime="20201030 11:51:57.829"></status>
</kw>
<msg timestamp="20201030 11:51:57.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:57.807" endtime="20201030 11:51:57.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:57.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:57.831" endtime="20201030 11:51:57.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:57.833" endtime="20201030 11:51:57.835"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.805" endtime="20201030 11:51:57.835"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.803" endtime="20201030 11:51:57.836"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:57.842" endtime="20201030 11:51:58.128"></status>
</kw>
<msg timestamp="20201030 11:51:58.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022154583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022221083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:57.841" endtime="20201030 11:51:58.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:58.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022154583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022221083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:58.133" endtime="20201030 11:51:58.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:58.141" endtime="20201030 11:51:58.143"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.838" endtime="20201030 11:51:58.143"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.836" endtime="20201030 11:51:58.144"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:58.148" level="INFO">${RESULT} = [{'diff': 6.650000000000059e-05}, {'diff': 5.3999999999998494e-05}, {'diff': 5.4999999999999494e-05}, {'diff': 5.3985999999998924e-05}, {'diff': 5.123599999999964e-05}, {'diff': 5.119400000000093e-05}...</msg>
<status status="PASS" starttime="20201030 11:51:58.144" endtime="20201030 11:51:58.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:58.152" level="INFO">${ACCURACY} = {'diff': [6.650000000000059e-05, 5.3999999999998494e-05, 5.4999999999999494e-05, 5.3985999999998924e-05, 5.123599999999964e-05, 5.119400000000093e-05, 5.211099999999705e-05, 5.39869999999984e-05, 5.40...</msg>
<status status="PASS" starttime="20201030 11:51:58.149" endtime="20201030 11:51:58.153"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:58.157" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201030 11:51:58.156" endtime="20201030 11:51:58.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:58.160" level="INFO">VALUE: [6.650000000000059e-05, 5.3999999999998494e-05, 5.4999999999999494e-05, 5.3985999999998924e-05, 5.123599999999964e-05, 5.119400000000093e-05, 5.211099999999705e-05, 5.39869999999984e-05, 5.408299999999991e-05, 5.5013999999999064e-05, 5.206900000000181e-05, 5.119400000000093e-05, 5.123599999999964e-05, 5.591699999999908e-05, 5.5915999999999605e-05, 5.113900000000213e-05, 5.50549999999983e-05, 5.501400000000253e-05, 5.208300000000138e-05, 5.4957999999997315e-05, 5.594499999999822e-05, 5.594500000000169e-05, 5.2985999999997924e-05, 5.306900000000281e-05, 5.4957999999997315e-05, 5.30280000000001e-05, 5.497299999999983e-05, 5.4972000000000354e-05, 5.693099999999965e-05, 5.5999999999997024e-05, 5.783300000000019e-05, 5.4958000000000784e-05, 5.683399999999866e-05, 5.304199999999967e-05, 5.1151999999998754e-05, 5.5013999999999064e-05, 5.588899999999994e-05, 5.019499999999941e-05, 5.4013999999998064e-05, 5.208299999999791e-05, 5.113899999999866e-05, 5.408300000000338e-05, 5.308299999999891e-05, 5.5971999999997885e-05, 5.30410000000002e-05, 5.694500000000269e-05, 5.588899999999994e-05, 5.211100000000052e-05, 5.209700000000095e-05, 5.304199999999967e-05]</msg>
<status status="PASS" starttime="20201030 11:51:58.158" endtime="20201030 11:51:58.162"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.153" endtime="20201030 11:51:58.162"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:58.166" endtime="20201030 11:51:58.185"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.164" endtime="20201030 11:51:58.186"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.163" endtime="20201030 11:51:58.186"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.801" endtime="20201030 11:51:58.186"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.801" endtime="20201030 11:51:58.186"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:58.195" endtime="20201030 11:51:58.216"></status>
</kw>
<msg timestamp="20201030 11:51:58.216" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:58.193" endtime="20201030 11:51:58.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:58.219" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:58.217" endtime="20201030 11:51:58.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:58.220" endtime="20201030 11:51:58.222"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.191" endtime="20201030 11:51:58.222"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.189" endtime="20201030 11:51:58.223"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:58.229" endtime="20201030 11:51:58.515"></status>
</kw>
<msg timestamp="20201030 11:51:58.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023120667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023173722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:58.227" endtime="20201030 11:51:58.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:58.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023120667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023173722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:58.519" endtime="20201030 11:51:58.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:58.528" endtime="20201030 11:51:58.530"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.225" endtime="20201030 11:51:58.530"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.223" endtime="20201030 11:51:58.530"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:58.534" level="INFO">${RESULT} = [{'diff': 5.305499999999977e-05}, {'diff': 5.307000000000228e-05}, {'diff': 5.409699999999948e-05}, {'diff': 5.497299999999983e-05}, {'diff': 5.115299999999823e-05}, {'diff': 5.212500000000009e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:58.531" endtime="20201030 11:51:58.535"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:58.539" level="INFO">${ACCURACY} = {'diff': [5.305499999999977e-05, 5.307000000000228e-05, 5.409699999999948e-05, 5.497299999999983e-05, 5.115299999999823e-05, 5.212500000000009e-05, 5.11669999999978e-05, 5.405600000000024e-05, 5.59169...</msg>
<status status="PASS" starttime="20201030 11:51:58.535" endtime="20201030 11:51:58.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:58.544" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201030 11:51:58.543" endtime="20201030 11:51:58.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:58.546" level="INFO">VALUE: [5.305499999999977e-05, 5.307000000000228e-05, 5.409699999999948e-05, 5.497299999999983e-05, 5.115299999999823e-05, 5.212500000000009e-05, 5.11669999999978e-05, 5.405600000000024e-05, 5.591699999999908e-05, 5.307000000000228e-05, 5.118000000000136e-05, 5.683400000000213e-05, 5.0165999999997324e-05, 5.305499999999977e-05, 5.4985999999999924e-05, 5.305499999999977e-05, 5.30410000000002e-05, 5.405600000000024e-05, 5.312500000000109e-05, 5.113899999999866e-05, 5.497299999999983e-05, 5.595900000000126e-05, 5.6972000000002354e-05, 5.1152000000002223e-05, 5.212500000000009e-05, 5.5929999999999175e-05, 5.494500000000069e-05, 5.209700000000095e-05, 5.68610000000018e-05, 5.306999999999881e-05, 5.0209000000002446e-05, 5.304199999999967e-05, 5.115299999999823e-05, 5.50280000000021e-05, 5.5972000000001354e-05, 5.306899999999934e-05, 5.21669999999988e-05, 5.305499999999977e-05, 5.308299999999891e-05, 5.209700000000095e-05, 5.4887999999999465e-05, 5.108399999999985e-05, 5.118000000000136e-05, 5.402699999999816e-05, 5.311100000000152e-05, 5.1152000000002223e-05, 5.0236999999998116e-05, 5.313900000000066e-05, 5.5915999999999605e-05, 5.4985999999999924e-05]</msg>
<status status="PASS" starttime="20201030 11:51:58.545" endtime="20201030 11:51:58.547"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.540" endtime="20201030 11:51:58.548"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:58.551" endtime="20201030 11:51:58.571"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.550" endtime="20201030 11:51:58.571"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.549" endtime="20201030 11:51:58.571"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.187" endtime="20201030 11:51:58.572"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.187" endtime="20201030 11:51:58.572"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:58.580" endtime="20201030 11:51:58.605"></status>
</kw>
<msg timestamp="20201030 11:51:58.605" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:58.579" endtime="20201030 11:51:58.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:58.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:58.606" endtime="20201030 11:51:58.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:58.609" endtime="20201030 11:51:58.610"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.577" endtime="20201030 11:51:58.611"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.574" endtime="20201030 11:51:58.612"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:58.618" endtime="20201030 11:51:58.905"></status>
</kw>
<msg timestamp="20201030 11:51:58.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024447944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024493403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:58.616" endtime="20201030 11:51:58.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:58.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024447944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024493403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:58.909" endtime="20201030 11:51:58.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:58.918" endtime="20201030 11:51:58.919"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.614" endtime="20201030 11:51:58.920"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.612" endtime="20201030 11:51:58.920"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:58.924" level="INFO">${RESULT} = [{'diff': 4.5459000000001165e-05}, {'diff': 5.5971999999997885e-05}, {'diff': 5.4027999999997633e-05}, {'diff': 5.5957999999998315e-05}, {'diff': 5.124999999999921e-05}, {'diff': 5.5943999999998745e-0...</msg>
<status status="PASS" starttime="20201030 11:51:58.921" endtime="20201030 11:51:58.925"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:58.928" level="INFO">${ACCURACY} = {'diff': [4.5459000000001165e-05, 5.5971999999997885e-05, 5.4027999999997633e-05, 5.5957999999998315e-05, 5.124999999999921e-05, 5.5943999999998745e-05, 5.508300000000091e-05, 5.120899999999998e-05, 5...</msg>
<status status="PASS" starttime="20201030 11:51:58.925" endtime="20201030 11:51:58.929"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:58.933" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201030 11:51:58.932" endtime="20201030 11:51:58.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:58.935" level="INFO">VALUE: [4.5459000000001165e-05, 5.5971999999997885e-05, 5.4027999999997633e-05, 5.5957999999998315e-05, 5.124999999999921e-05, 5.5943999999998745e-05, 5.508300000000091e-05, 5.120899999999998e-05, 5.018099999999984e-05, 5.5902000000000035e-05, 5.40280000000011e-05, 5.404200000000067e-05, 5.40410000000012e-05, 5.1151999999998754e-05, 5.6971999999998885e-05, 5.115299999999823e-05, 5.494500000000069e-05, 5.4972000000000354e-05, 5.5013999999999064e-05, 5.215299999999923e-05, 5.301400000000053e-05, 5.308299999999891e-05, 5.5013999999999064e-05, 5.308399999999838e-05, 5.118099999999737e-05, 5.409799999999895e-05, 5.501400000000253e-05, 5.208300000000138e-05, 5.311099999999805e-05, 5.1207999999997034e-05, 5.684799999999823e-05, 5.6999999999998024e-05, 5.506899999999787e-05, 5.11669999999978e-05, 5.6943999999999745e-05, 5.506899999999787e-05, 5.116700000000127e-05, 5.495900000000026e-05, 5.213900000000313e-05, 5.1179999999997894e-05, 5.406900000000034e-05, 5.404200000000067e-05, 5.019499999999941e-05, 5.412500000000209e-05, 5.215299999999923e-05, 5.690300000000051e-05, 5.112499999999909e-05, 5.693099999999965e-05, 5.687500000000137e-05, 5.6014000000000064e-05]</msg>
<status status="PASS" starttime="20201030 11:51:58.934" endtime="20201030 11:51:58.936"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.929" endtime="20201030 11:51:58.937"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:58.940" endtime="20201030 11:51:58.960"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.939" endtime="20201030 11:51:58.960"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.938" endtime="20201030 11:51:58.960"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.573" endtime="20201030 11:51:58.961"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.572" endtime="20201030 11:51:58.961"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:58.970" endtime="20201030 11:51:58.995"></status>
</kw>
<msg timestamp="20201030 11:51:58.996" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:58.968" endtime="20201030 11:51:58.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:58.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:58.997" endtime="20201030 11:51:58.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:58.999" endtime="20201030 11:51:59.001"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.965" endtime="20201030 11:51:59.002"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.963" endtime="20201030 11:51:59.002"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:59.009" endtime="20201030 11:51:59.295"></status>
</kw>
<msg timestamp="20201030 11:51:59.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027316361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027369403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:59.007" endtime="20201030 11:51:59.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:59.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027316361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027369403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:59.299" endtime="20201030 11:51:59.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:59.307" endtime="20201030 11:51:59.309"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.005" endtime="20201030 11:51:59.310"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.003" endtime="20201030 11:51:59.310"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:59.314" level="INFO">${RESULT} = [{'diff': 5.304199999999967e-05}, {'diff': 5.401400000000153e-05}, {'diff': 5.5929999999999175e-05}, {'diff': 5.115299999999823e-05}, {'diff': 5.688900000000094e-05}, {'diff': 5.209700000000095e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:51:59.311" endtime="20201030 11:51:59.314"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:59.318" level="INFO">${ACCURACY} = {'diff': [5.304199999999967e-05, 5.401400000000153e-05, 5.5929999999999175e-05, 5.115299999999823e-05, 5.688900000000094e-05, 5.209700000000095e-05, 5.401300000000206e-05, 5.30410000000002e-05, 5.1152...</msg>
<status status="PASS" starttime="20201030 11:51:59.315" endtime="20201030 11:51:59.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:59.323" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201030 11:51:59.321" endtime="20201030 11:51:59.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:59.325" level="INFO">VALUE: [5.304199999999967e-05, 5.401400000000153e-05, 5.5929999999999175e-05, 5.115299999999823e-05, 5.688900000000094e-05, 5.209700000000095e-05, 5.401300000000206e-05, 5.30410000000002e-05, 5.1152000000002223e-05, 5.111099999999952e-05, 5.3013999999997063e-05, 5.3985999999998924e-05, 5.30410000000002e-05, 5.209800000000042e-05, 5.306899999999934e-05, 5.118100000000084e-05, 5.308299999999891e-05, 5.50549999999983e-05, 5.208399999999738e-05, 5.019399999999993e-05, 5.3957999999999784e-05, 5.215299999999923e-05, 5.116600000000179e-05, 5.305499999999977e-05, 5.40280000000011e-05, 5.4972000000000354e-05, 5.688900000000094e-05, 5.112500000000256e-05, 5.209700000000095e-05, 5.118000000000136e-05, 5.406999999999981e-05, 5.690300000000051e-05, 5.020899999999898e-05, 5.4985999999999924e-05, 5.3957999999999784e-05, 5.5943999999998745e-05, 5.4972000000000354e-05, 5.686099999999833e-05, 5.594499999999822e-05, 5.401400000000153e-05, 5.411099999999905e-05, 5.5013999999999064e-05, 5.4958000000000784e-05, 5.208400000000085e-05, 5.688900000000094e-05, 5.211100000000052e-05, 5.112499999999909e-05, 5.686099999999833e-05, 5.495900000000026e-05, 5.40280000000011e-05]</msg>
<status status="PASS" starttime="20201030 11:51:59.324" endtime="20201030 11:51:59.327"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.319" endtime="20201030 11:51:59.327"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:59.331" endtime="20201030 11:51:59.350"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.329" endtime="20201030 11:51:59.351"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.328" endtime="20201030 11:51:59.351"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.962" endtime="20201030 11:51:59.351"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.961" endtime="20201030 11:51:59.352"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:59.360" endtime="20201030 11:51:59.382"></status>
</kw>
<msg timestamp="20201030 11:51:59.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:59.359" endtime="20201030 11:51:59.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:59.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:59.384" endtime="20201030 11:51:59.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:59.386" endtime="20201030 11:51:59.388"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.356" endtime="20201030 11:51:59.388"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.354" endtime="20201030 11:51:59.389"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:59.395" endtime="20201030 11:51:59.680"></status>
</kw>
<msg timestamp="20201030 11:51:59.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023433875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023500306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:59.393" endtime="20201030 11:51:59.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:59.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023433875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023500306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:59.685" endtime="20201030 11:51:59.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:59.693" endtime="20201030 11:51:59.695"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.391" endtime="20201030 11:51:59.695"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.389" endtime="20201030 11:51:59.696"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:59.700" level="INFO">${RESULT} = [{'diff': 6.643099999999874e-05}, {'diff': 5.406999999999981e-05}, {'diff': 5.405600000000024e-05}, {'diff': 5.218099999999837e-05}, {'diff': 5.4972000000000354e-05}, {'diff': 5.0195000000002876e-05},...</msg>
<status status="PASS" starttime="20201030 11:51:59.696" endtime="20201030 11:51:59.700"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:59.705" level="INFO">${ACCURACY} = {'diff': [6.643099999999874e-05, 5.406999999999981e-05, 5.405600000000024e-05, 5.218099999999837e-05, 5.4972000000000354e-05, 5.0195000000002876e-05, 5.691700000000008e-05, 5.50280000000021e-05, 5.687...</msg>
<status status="PASS" starttime="20201030 11:51:59.701" endtime="20201030 11:51:59.705"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:59.709" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201030 11:51:59.708" endtime="20201030 11:51:59.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:59.712" level="INFO">VALUE: [6.643099999999874e-05, 5.406999999999981e-05, 5.405600000000024e-05, 5.218099999999837e-05, 5.4972000000000354e-05, 5.0195000000002876e-05, 5.691700000000008e-05, 5.50280000000021e-05, 5.687500000000137e-05, 5.5915999999999605e-05, 5.3999999999998494e-05, 5.304199999999967e-05, 5.219400000000193e-05, 5.213899999999966e-05, 5.022200000000254e-05, 5.215299999999923e-05, 5.507000000000081e-05, 5.6000000000000494e-05, 5.122200000000007e-05, 5.313899999999719e-05, 5.213899999999966e-05, 5.601300000000059e-05, 5.218099999999837e-05, 5.218100000000184e-05, 5.213899999999966e-05, 5.212500000000009e-05, 5.4958000000000784e-05, 5.409799999999895e-05, 5.405600000000024e-05, 5.211100000000052e-05, 5.6014000000000064e-05, 5.504099999999873e-05, 5.113899999999866e-05, 5.118000000000136e-05, 5.504200000000167e-05, 5.690300000000051e-05, 5.4985999999999924e-05, 5.595899999999779e-05, 5.401400000000153e-05, 5.6041999999999204e-05, 5.594500000000169e-05, 5.212500000000009e-05, 5.212500000000009e-05, 5.5041999999998203e-05, 5.116700000000127e-05, 5.584699999999776e-05, 5.211100000000052e-05, 5.6943999999999745e-05, 5.5027999999998634e-05, 5.212500000000009e-05]</msg>
<status status="PASS" starttime="20201030 11:51:59.710" endtime="20201030 11:51:59.712"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.705" endtime="20201030 11:51:59.713"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:59.716" endtime="20201030 11:51:59.736"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.715" endtime="20201030 11:51:59.736"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.714" endtime="20201030 11:51:59.737"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.353" endtime="20201030 11:51:59.737"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.352" endtime="20201030 11:51:59.737"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:59.746" endtime="20201030 11:51:59.769"></status>
</kw>
<msg timestamp="20201030 11:51:59.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:59.744" endtime="20201030 11:51:59.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:59.772" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:59.770" endtime="20201030 11:51:59.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:59.773" endtime="20201030 11:51:59.774"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.742" endtime="20201030 11:51:59.775"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.740" endtime="20201030 11:51:59.775"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:59.782" endtime="20201030 11:52:00.069"></status>
</kw>
<msg timestamp="20201030 11:52:00.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024737028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024789208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:59.780" endtime="20201030 11:52:00.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:00.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024737028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024789208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:00.073" endtime="20201030 11:52:00.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:00.082" endtime="20201030 11:52:00.084"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.778" endtime="20201030 11:52:00.084"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.776" endtime="20201030 11:52:00.085"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:00.088" level="INFO">${RESULT} = [{'diff': 5.2179999999998894e-05}, {'diff': 5.120899999999998e-05}, {'diff': 5.11530000000017e-05}, {'diff': 5.400000000000196e-05}, {'diff': 5.6902000000001035e-05}, {'diff': 5.311099999999805e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:52:00.085" endtime="20201030 11:52:00.089"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:00.093" level="INFO">${ACCURACY} = {'diff': [5.2179999999998894e-05, 5.120899999999998e-05, 5.11530000000017e-05, 5.400000000000196e-05, 5.6902000000001035e-05, 5.311099999999805e-05, 5.40419999999972e-05, 5.494500000000069e-05, 5.1208...</msg>
<status status="PASS" starttime="20201030 11:52:00.089" endtime="20201030 11:52:00.093"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:00.097" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201030 11:52:00.096" endtime="20201030 11:52:00.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:00.099" level="INFO">VALUE: [5.2179999999998894e-05, 5.120899999999998e-05, 5.11530000000017e-05, 5.400000000000196e-05, 5.6902000000001035e-05, 5.311099999999805e-05, 5.40419999999972e-05, 5.494500000000069e-05, 5.120899999999998e-05, 5.4972000000000354e-05, 5.6014000000000064e-05, 5.311099999999805e-05, 5.208299999999791e-05, 5.308300000000238e-05, 5.30280000000001e-05, 5.11530000000017e-05, 5.122200000000007e-05, 5.688900000000094e-05, 5.211199999999999e-05, 5.497299999999983e-05, 5.30280000000001e-05, 5.406999999999981e-05, 5.4943999999997745e-05, 5.304199999999967e-05, 5.3999999999998494e-05, 5.212500000000009e-05, 5.123599999999964e-05, 5.404200000000067e-05, 5.208300000000138e-05, 5.115299999999823e-05, 5.3999999999998494e-05, 5.593099999999865e-05, 5.016600000000079e-05, 5.6000000000000494e-05, 5.4971999999996884e-05, 5.305499999999977e-05, 5.313900000000066e-05, 5.494500000000069e-05, 5.590299999999951e-05, 5.683299999999919e-05, 5.695899999999879e-05, 5.113900000000213e-05, 5.301400000000053e-05, 5.209800000000042e-05, 5.588899999999994e-05, 5.313900000000066e-05, 5.400000000000196e-05, 5.493100000000112e-05, 5.209700000000095e-05, 5.490300000000198e-05]</msg>
<status status="PASS" starttime="20201030 11:52:00.098" endtime="20201030 11:52:00.100"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.093" endtime="20201030 11:52:00.101"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:00.104" endtime="20201030 11:52:00.124"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.103" endtime="20201030 11:52:00.124"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.102" endtime="20201030 11:52:00.125"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.738" endtime="20201030 11:52:00.125"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.737" endtime="20201030 11:52:00.125"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:00.134" endtime="20201030 11:52:00.155"></status>
</kw>
<msg timestamp="20201030 11:52:00.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:00.132" endtime="20201030 11:52:00.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:00.158" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:00.157" endtime="20201030 11:52:00.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:00.159" endtime="20201030 11:52:00.161"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.130" endtime="20201030 11:52:00.161"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.128" endtime="20201030 11:52:00.162"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:00.168" endtime="20201030 11:52:00.454"></status>
</kw>
<msg timestamp="20201030 11:52:00.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023750431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023789194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:00.167" endtime="20201030 11:52:00.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:00.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023750431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023789194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:00.458" endtime="20201030 11:52:00.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:00.467" endtime="20201030 11:52:00.469"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.164" endtime="20201030 11:52:00.469"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.162" endtime="20201030 11:52:00.470"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:00.474" level="INFO">${RESULT} = [{'diff': 3.8763000000000686e-05}, {'diff': 5.405500000000077e-05}, {'diff': 5.6957999999999315e-05}, {'diff': 5.40410000000012e-05}, {'diff': 5.604099999999973e-05}, {'diff': 5.208300000000138e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:52:00.470" endtime="20201030 11:52:00.474"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:00.478" level="INFO">${ACCURACY} = {'diff': [3.8763000000000686e-05, 5.405500000000077e-05, 5.6957999999999315e-05, 5.40410000000012e-05, 5.604099999999973e-05, 5.208300000000138e-05, 5.212500000000009e-05, 5.6971999999998885e-05, 5.31...</msg>
<status status="PASS" starttime="20201030 11:52:00.474" endtime="20201030 11:52:00.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:00.482" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201030 11:52:00.481" endtime="20201030 11:52:00.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:00.485" level="INFO">VALUE: [3.8763000000000686e-05, 5.405500000000077e-05, 5.6957999999999315e-05, 5.40410000000012e-05, 5.604099999999973e-05, 5.208300000000138e-05, 5.212500000000009e-05, 5.6971999999998885e-05, 5.311100000000152e-05, 5.5971999999997885e-05, 5.208300000000138e-05, 5.4999999999999494e-05, 5.4958000000000784e-05, 5.4999999999999494e-05, 5.409699999999948e-05, 5.018099999999984e-05, 5.684699999999876e-05, 5.208299999999791e-05, 5.684699999999876e-05, 5.211100000000052e-05, 5.4999999999999494e-05, 5.11669999999978e-05, 5.687500000000137e-05, 5.215299999999923e-05, 5.594500000000169e-05, 5.1151999999998754e-05, 5.122200000000007e-05, 5.5972000000001354e-05, 5.218099999999837e-05, 5.597300000000083e-05, 5.116700000000127e-05, 5.11530000000017e-05, 5.487499999999937e-05, 5.120899999999998e-05, 5.409699999999948e-05, 5.305599999999924e-05, 5.6916000000000605e-05, 5.409699999999948e-05, 5.591699999999908e-05, 5.593099999999865e-05, 5.123599999999964e-05, 5.5915999999999605e-05, 5.4957999999997315e-05, 5.5888000000000465e-05, 5.40419999999972e-05, 5.6000000000000494e-05, 5.4943999999997745e-05, 5.1137999999999184e-05, 5.0195000000002876e-05, 5.5971999999997885e-05]</msg>
<status status="PASS" starttime="20201030 11:52:00.483" endtime="20201030 11:52:00.486"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.479" endtime="20201030 11:52:00.487"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:00.490" endtime="20201030 11:52:00.510"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.489" endtime="20201030 11:52:00.510"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.488" endtime="20201030 11:52:00.511"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.126" endtime="20201030 11:52:00.511"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.125" endtime="20201030 11:52:00.511"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:00.520" endtime="20201030 11:52:00.546"></status>
</kw>
<msg timestamp="20201030 11:52:00.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:00.518" endtime="20201030 11:52:00.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:00.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:00.548" endtime="20201030 11:52:00.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:00.550" endtime="20201030 11:52:00.552"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.516" endtime="20201030 11:52:00.552"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.514" endtime="20201030 11:52:00.553"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:00.559" endtime="20201030 11:52:00.844"></status>
</kw>
<msg timestamp="20201030 11:52:00.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024438806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024497667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:00.558" endtime="20201030 11:52:00.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:00.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024438806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024497667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:00.849" endtime="20201030 11:52:00.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:00.857" endtime="20201030 11:52:00.859"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.555" endtime="20201030 11:52:00.859"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.553" endtime="20201030 11:52:00.859"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:00.863" level="INFO">${RESULT} = [{'diff': 5.886100000000033e-05}, {'diff': 5.687500000000137e-05}, {'diff': 5.495900000000026e-05}, {'diff': 5.316700000000327e-05}, {'diff': 5.3137999999997715e-05}, {'diff': 5.219400000000193e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:52:00.860" endtime="20201030 11:52:00.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:00.868" level="INFO">${ACCURACY} = {'diff': [5.886100000000033e-05, 5.687500000000137e-05, 5.495900000000026e-05, 5.316700000000327e-05, 5.3137999999997715e-05, 5.219400000000193e-05, 5.690300000000051e-05, 5.216700000000227e-05, 5.591...</msg>
<status status="PASS" starttime="20201030 11:52:00.864" endtime="20201030 11:52:00.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:00.873" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201030 11:52:00.872" endtime="20201030 11:52:00.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:00.875" level="INFO">VALUE: [5.886100000000033e-05, 5.687500000000137e-05, 5.495900000000026e-05, 5.316700000000327e-05, 5.3137999999997715e-05, 5.219400000000193e-05, 5.690300000000051e-05, 5.216700000000227e-05, 5.591700000000255e-05, 5.11669999999978e-05, 5.405600000000024e-05, 5.215299999999923e-05, 5.40410000000012e-05, 5.411099999999905e-05, 5.208399999999738e-05, 5.212500000000009e-05, 5.6958000000002784e-05, 5.40280000000011e-05, 5.691700000000008e-05, 5.593099999999865e-05, 5.115299999999823e-05, 5.124999999999921e-05, 5.205499999999877e-05, 5.40280000000011e-05, 5.5958000000001784e-05, 5.122299999999955e-05, 5.4013999999998064e-05, 5.6916000000000605e-05, 5.5027999999998634e-05, 5.4013999999998064e-05, 5.3166000000000324e-05, 5.21669999999988e-05, 5.315300000000023e-05, 5.218100000000184e-05, 5.016600000000079e-05, 5.119500000000041e-05, 5.122200000000007e-05, 5.116600000000179e-05, 5.11669999999978e-05, 5.311100000000152e-05, 5.116700000000127e-05, 5.6027999999999634e-05, 5.113900000000213e-05, 5.404200000000067e-05, 5.4985999999999924e-05, 5.68619999999978e-05, 5.204199999999867e-05, 5.1179999999997894e-05, 5.126400000000225e-05, 5.593099999999865e-05]</msg>
<status status="PASS" starttime="20201030 11:52:00.874" endtime="20201030 11:52:00.876"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.869" endtime="20201030 11:52:00.877"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:00.880" endtime="20201030 11:52:00.900"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.879" endtime="20201030 11:52:00.901"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.878" endtime="20201030 11:52:00.901"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.512" endtime="20201030 11:52:00.901"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.512" endtime="20201030 11:52:00.901"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:00.910" endtime="20201030 11:52:00.930"></status>
</kw>
<msg timestamp="20201030 11:52:00.930" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:00.908" endtime="20201030 11:52:00.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:00.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:00.931" endtime="20201030 11:52:00.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:00.934" endtime="20201030 11:52:00.935"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.906" endtime="20201030 11:52:00.936"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.904" endtime="20201030 11:52:00.936"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:00.943" endtime="20201030 11:52:01.232"></status>
</kw>
<msg timestamp="20201030 11:52:01.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021173167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021239528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:00.941" endtime="20201030 11:52:01.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:01.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021173167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021239528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:01.236" endtime="20201030 11:52:01.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:01.244" endtime="20201030 11:52:01.246"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.939" endtime="20201030 11:52:01.247"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.937" endtime="20201030 11:52:01.247"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:01.251" level="INFO">${RESULT} = [{'diff': 6.636100000000089e-05}, {'diff': 5.304199999999967e-05}, {'diff': 5.594500000000169e-05}, {'diff': 5.113900000000213e-05}, {'diff': 5.40280000000011e-05}, {'diff': 5.594499999999822e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:01.248" endtime="20201030 11:52:01.251"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:01.255" level="INFO">${ACCURACY} = {'diff': [6.636100000000089e-05, 5.304199999999967e-05, 5.594500000000169e-05, 5.113900000000213e-05, 5.40280000000011e-05, 5.594499999999822e-05, 5.116600000000179e-05, 5.504200000000167e-05, 5.21110...</msg>
<status status="PASS" starttime="20201030 11:52:01.252" endtime="20201030 11:52:01.255"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:01.259" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201030 11:52:01.258" endtime="20201030 11:52:01.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:01.262" level="INFO">VALUE: [6.636100000000089e-05, 5.304199999999967e-05, 5.594500000000169e-05, 5.113900000000213e-05, 5.40280000000011e-05, 5.594499999999822e-05, 5.116600000000179e-05, 5.504200000000167e-05, 5.211100000000052e-05, 5.3985999999998924e-05, 5.302699999999716e-05, 5.6958000000002784e-05, 5.2971999999998354e-05, 5.208300000000138e-05, 5.209700000000095e-05, 5.7013999999997594e-05, 5.401300000000206e-05, 5.591700000000255e-05, 5.4972000000000354e-05, 5.5943999999998745e-05, 5.497299999999983e-05, 5.111099999999952e-05, 5.4958000000000784e-05, 5.118000000000136e-05, 5.593100000000212e-05, 5.306899999999934e-05, 5.4972000000000354e-05, 5.591700000000255e-05, 5.208300000000138e-05, 5.209699999999748e-05, 5.5943999999998745e-05, 5.4013999999998064e-05, 5.1207999999997034e-05, 5.400000000000196e-05, 5.400000000000196e-05, 5.020899999999898e-05, 5.398600000000239e-05, 5.305499999999977e-05, 5.6000000000000494e-05, 5.4972000000000354e-05, 5.401400000000153e-05, 5.02079999999995e-05, 5.013900000000113e-05, 5.781900000000062e-05, 5.40280000000011e-05, 5.208399999999738e-05, 5.690299999999704e-05, 5.405600000000024e-05, 5.408399999999938e-05, 5.591700000000255e-05]</msg>
<status status="PASS" starttime="20201030 11:52:01.260" endtime="20201030 11:52:01.263"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.256" endtime="20201030 11:52:01.263"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:01.267" endtime="20201030 11:52:01.286"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.265" endtime="20201030 11:52:01.287"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.264" endtime="20201030 11:52:01.287"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.902" endtime="20201030 11:52:01.287"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.902" endtime="20201030 11:52:01.287"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:01.296" endtime="20201030 11:52:01.317"></status>
</kw>
<msg timestamp="20201030 11:52:01.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:01.294" endtime="20201030 11:52:01.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:01.319" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:01.318" endtime="20201030 11:52:01.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:01.320" endtime="20201030 11:52:01.322"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.292" endtime="20201030 11:52:01.323"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.290" endtime="20201030 11:52:01.323"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:01.330" endtime="20201030 11:52:01.617"></status>
</kw>
<msg timestamp="20201030 11:52:01.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02179125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02185675, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:52:01.328" endtime="20201030 11:52:01.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:01.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02179125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02185675, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:52:01.621" endtime="20201030 11:52:01.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:01.630" endtime="20201030 11:52:01.631"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.325" endtime="20201030 11:52:01.632"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.324" endtime="20201030 11:52:01.632"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:01.636" level="INFO">${RESULT} = [{'diff': 6.549999999999959e-05}, {'diff': 5.495900000000026e-05}, {'diff': 5.590299999999951e-05}, {'diff': 5.211199999999999e-05}, {'diff': 5.593100000000212e-05}, {'diff': 5.688900000000094e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:01.633" endtime="20201030 11:52:01.636"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:01.640" level="INFO">${ACCURACY} = {'diff': [6.549999999999959e-05, 5.495900000000026e-05, 5.590299999999951e-05, 5.211199999999999e-05, 5.593100000000212e-05, 5.688900000000094e-05, 5.405600000000024e-05, 5.4943999999997745e-05, 5.120...</msg>
<status status="PASS" starttime="20201030 11:52:01.637" endtime="20201030 11:52:01.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:01.645" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201030 11:52:01.644" endtime="20201030 11:52:01.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:01.647" level="INFO">VALUE: [6.549999999999959e-05, 5.495900000000026e-05, 5.590299999999951e-05, 5.211199999999999e-05, 5.593100000000212e-05, 5.688900000000094e-05, 5.405600000000024e-05, 5.4943999999997745e-05, 5.12080000000005e-05, 5.6000000000000494e-05, 5.5957999999998315e-05, 5.501400000000253e-05, 5.11530000000017e-05, 5.404200000000067e-05, 5.681899999999962e-05, 5.587500000000037e-05, 5.309700000000195e-05, 5.12080000000005e-05, 5.5915999999999605e-05, 5.3999999999998494e-05, 5.590299999999951e-05, 5.687500000000137e-05, 5.304199999999967e-05, 5.212500000000009e-05, 5.405600000000024e-05, 5.118100000000084e-05, 5.107000000000028e-05, 5.222200000000107e-05, 5.5986000000000924e-05, 5.686099999999833e-05, 5.116700000000127e-05, 5.213899999999966e-05, 5.4972000000000354e-05, 5.109799999999942e-05, 5.013900000000113e-05, 5.59870000000004e-05, 5.304199999999967e-05, 5.4972000000000354e-05, 5.4958000000000784e-05, 5.118100000000084e-05, 5.595899999999779e-05, 5.2971999999998354e-05, 5.311100000000152e-05, 5.312500000000109e-05, 5.208300000000138e-05, 5.3944000000000214e-05, 5.213899999999966e-05, 5.405500000000077e-05, 5.118100000000084e-05, 5.5902000000000035e-05]</msg>
<status status="PASS" starttime="20201030 11:52:01.646" endtime="20201030 11:52:01.649"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.641" endtime="20201030 11:52:01.649"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:01.653" endtime="20201030 11:52:01.672"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.652" endtime="20201030 11:52:01.673"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.650" endtime="20201030 11:52:01.673"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.288" endtime="20201030 11:52:01.674"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.288" endtime="20201030 11:52:01.674"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:01.683" endtime="20201030 11:52:01.704"></status>
</kw>
<msg timestamp="20201030 11:52:01.704" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:01.681" endtime="20201030 11:52:01.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:01.706" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:01.705" endtime="20201030 11:52:01.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:01.707" endtime="20201030 11:52:01.709"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.678" endtime="20201030 11:52:01.710"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.676" endtime="20201030 11:52:01.710"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:01.716" endtime="20201030 11:52:02.022"></status>
</kw>
<msg timestamp="20201030 11:52:02.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022369458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022413944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:01.715" endtime="20201030 11:52:02.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:02.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022369458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022413944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:02.027" endtime="20201030 11:52:02.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:02.035" endtime="20201030 11:52:02.037"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.712" endtime="20201030 11:52:02.037"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.711" endtime="20201030 11:52:02.038"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:02.042" level="INFO">${RESULT} = [{'diff': 4.44860000000033e-05}, {'diff': 5.5986000000000924e-05}, {'diff': 5.590299999999951e-05}, {'diff': 5.207000000000128e-05}, {'diff': 5.1165999999998324e-05}, {'diff': 5.211100000000052e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:52:02.039" endtime="20201030 11:52:02.042"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:02.047" level="INFO">${ACCURACY} = {'diff': [4.44860000000033e-05, 5.5986000000000924e-05, 5.590299999999951e-05, 5.207000000000128e-05, 5.1165999999998324e-05, 5.211100000000052e-05, 5.115299999999823e-05, 5.218100000000184e-05, 5.116...</msg>
<status status="PASS" starttime="20201030 11:52:02.043" endtime="20201030 11:52:02.047"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:02.051" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201030 11:52:02.050" endtime="20201030 11:52:02.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:02.054" level="INFO">VALUE: [4.44860000000033e-05, 5.5986000000000924e-05, 5.590299999999951e-05, 5.207000000000128e-05, 5.1165999999998324e-05, 5.211100000000052e-05, 5.115299999999823e-05, 5.218100000000184e-05, 5.116600000000179e-05, 5.113900000000213e-05, 5.1138000000002654e-05, 5.115299999999823e-05, 5.115299999999823e-05, 5.5915999999999605e-05, 5.115299999999823e-05, 5.4985999999999924e-05, 5.220900000000098e-05, 5.306899999999934e-05, 5.5944000000002214e-05, 5.3999999999998494e-05, 5.4999999999999494e-05, 5.215299999999923e-05, 5.3166000000000324e-05, 5.306899999999934e-05, 5.5944000000002214e-05, 5.497299999999983e-05, 5.593099999999865e-05, 5.50410000000022e-05, 5.40280000000011e-05, 5.4985999999999924e-05, 5.1137999999999184e-05, 5.306999999999881e-05, 5.305600000000271e-05, 5.115299999999823e-05, 5.4013999999998064e-05, 5.019399999999993e-05, 5.4958000000000784e-05, 5.11669999999978e-05, 5.691700000000008e-05, 5.211100000000052e-05, 5.691700000000008e-05, 5.50280000000021e-05, 5.594499999999822e-05, 5.306999999999881e-05, 5.684699999999876e-05, 5.4027999999997633e-05, 5.209699999999748e-05, 5.590299999999951e-05, 5.494500000000069e-05, 5.113899999999866e-05]</msg>
<status status="PASS" starttime="20201030 11:52:02.052" endtime="20201030 11:52:02.054"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.048" endtime="20201030 11:52:02.055"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:02.059" endtime="20201030 11:52:02.078"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.057" endtime="20201030 11:52:02.079"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.056" endtime="20201030 11:52:02.079"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.675" endtime="20201030 11:52:02.079"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.674" endtime="20201030 11:52:02.079"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:02.088" endtime="20201030 11:52:02.111"></status>
</kw>
<msg timestamp="20201030 11:52:02.111" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:02.086" endtime="20201030 11:52:02.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:02.113" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:02.112" endtime="20201030 11:52:02.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:02.115" endtime="20201030 11:52:02.116"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.084" endtime="20201030 11:52:02.117"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.082" endtime="20201030 11:52:02.117"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:02.123" endtime="20201030 11:52:02.412"></status>
</kw>
<msg timestamp="20201030 11:52:02.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023809389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023882514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:02.122" endtime="20201030 11:52:02.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:02.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023809389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023882514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:02.417" endtime="20201030 11:52:02.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:02.425" endtime="20201030 11:52:02.427"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.119" endtime="20201030 11:52:02.427"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.118" endtime="20201030 11:52:02.428"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:02.432" level="INFO">${RESULT} = [{'diff': 7.312500000000027e-05}, {'diff': 8.56530000000015e-05}, {'diff': 8.555600000000052e-05}, {'diff': 8.741700000000283e-05}, {'diff': 8.466700000000008e-05}, {'diff': 8.177799999999763e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:02.428" endtime="20201030 11:52:02.432"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:02.436" level="INFO">${ACCURACY} = {'diff': [7.312500000000027e-05, 8.56530000000015e-05, 8.555600000000052e-05, 8.741700000000283e-05, 8.466700000000008e-05, 8.177799999999763e-05, 8.373600000000092e-05, 8.36659999999996e-05, 8.177799...</msg>
<status status="PASS" starttime="20201030 11:52:02.433" endtime="20201030 11:52:02.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:02.440" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201030 11:52:02.439" endtime="20201030 11:52:02.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:02.443" level="INFO">VALUE: [7.312500000000027e-05, 8.56530000000015e-05, 8.555600000000052e-05, 8.741700000000283e-05, 8.466700000000008e-05, 8.177799999999763e-05, 8.373600000000092e-05, 8.36659999999996e-05, 8.177799999999763e-05, 8.659700000000076e-05, 8.466599999999713e-05, 8.751400000000034e-05, 8.56249999999989e-05, 8.647200000000063e-05, 8.551399999999834e-05, 8.458399999999866e-05, 8.468000000000017e-05, 8.656899999999815e-05, 8.087500000000108e-05, 8.647200000000063e-05, 8.179099999999773e-05, 8.552800000000138e-05, 8.168100000000011e-05, 8.46110000000018e-05, 8.456899999999962e-05, 8.566700000000108e-05, 8.457000000000256e-05, 8.645900000000054e-05, 8.649999999999977e-05, 8.563900000000194e-05, 8.172199999999935e-05, 8.46110000000018e-05, 8.651399999999934e-05, 8.269500000000068e-05, 8.559699999999976e-05, 8.363899999999994e-05, 8.74860000000012e-05, 8.655599999999805e-05, 8.658300000000119e-05, 8.080599999999924e-05, 8.176400000000153e-05, 8.554099999999801e-05, 8.459699999999876e-05, 8.458300000000266e-05, 8.751400000000034e-05, 8.176399999999806e-05, 8.561099999999933e-05, 8.27919999999982e-05, 8.463900000000094e-05, 8.073600000000139e-05]</msg>
<status status="PASS" starttime="20201030 11:52:02.441" endtime="20201030 11:52:02.450"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.436" endtime="20201030 11:52:02.450"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:02.454" endtime="20201030 11:52:02.473"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.452" endtime="20201030 11:52:02.474"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.451" endtime="20201030 11:52:02.474"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.080" endtime="20201030 11:52:02.475"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.080" endtime="20201030 11:52:02.475"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:02.483" endtime="20201030 11:52:02.507"></status>
</kw>
<msg timestamp="20201030 11:52:02.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:02.482" endtime="20201030 11:52:02.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:02.510" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:02.509" endtime="20201030 11:52:02.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:02.511" endtime="20201030 11:52:02.513"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.479" endtime="20201030 11:52:02.513"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.477" endtime="20201030 11:52:02.514"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:02.520" endtime="20201030 11:52:02.806"></status>
</kw>
<msg timestamp="20201030 11:52:02.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025185528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025262486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:02.519" endtime="20201030 11:52:02.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:02.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025185528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025262486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:02.811" endtime="20201030 11:52:02.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:02.819" endtime="20201030 11:52:02.820"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.516" endtime="20201030 11:52:02.821"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.514" endtime="20201030 11:52:02.821"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:02.825" level="INFO">${RESULT} = [{'diff': 7.695800000000197e-05}, {'diff': 8.451400000000081e-05}, {'diff': 8.359700000000123e-05}, {'diff': 8.64860000000002e-05}, {'diff': 8.559699999999976e-05}, {'diff': 8.554199999999748e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:02.822" endtime="20201030 11:52:02.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:02.830" level="INFO">${ACCURACY} = {'diff': [7.695800000000197e-05, 8.451400000000081e-05, 8.359700000000123e-05, 8.64860000000002e-05, 8.559699999999976e-05, 8.554199999999748e-05, 8.352800000000285e-05, 8.74310000000024e-05, 8.368099...</msg>
<status status="PASS" starttime="20201030 11:52:02.826" endtime="20201030 11:52:02.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:02.834" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201030 11:52:02.833" endtime="20201030 11:52:02.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:02.836" level="INFO">VALUE: [7.695800000000197e-05, 8.451400000000081e-05, 8.359700000000123e-05, 8.64860000000002e-05, 8.559699999999976e-05, 8.554199999999748e-05, 8.352800000000285e-05, 8.74310000000024e-05, 8.368099999999865e-05, 8.362500000000037e-05, 8.076300000000106e-05, 8.459700000000223e-05, 8.458299999999919e-05, 8.656999999999762e-05, 8.552800000000138e-05, 8.36110000000008e-05, 8.362500000000037e-05, 8.745799999999859e-05, 8.458299999999919e-05, 8.173599999999892e-05, 8.36110000000008e-05, 8.268000000000164e-05, 8.745799999999859e-05, 8.651399999999934e-05, 8.645900000000054e-05, 8.363899999999994e-05, 8.180600000000024e-05, 8.36529999999995e-05, 8.363899999999994e-05, 8.267999999999817e-05, 8.368099999999865e-05, 8.624999999999952e-05, 8.659699999999729e-05, 8.458299999999919e-05, 8.549999999999877e-05, 8.172199999999935e-05, 8.638800000000321e-05, 8.276400000000253e-05, 8.459699999999876e-05, 8.362500000000037e-05, 8.168100000000011e-05, 8.269500000000068e-05, 8.172199999999935e-05, 8.456899999999962e-05, 8.457000000000256e-05, 8.170799999999978e-05, 8.17919999999972e-05, 8.744400000000249e-05, 8.555500000000105e-05, 8.363800000000046e-05]</msg>
<status status="PASS" starttime="20201030 11:52:02.835" endtime="20201030 11:52:02.838"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.830" endtime="20201030 11:52:02.839"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:02.842" endtime="20201030 11:52:02.862"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.841" endtime="20201030 11:52:02.862"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.839" endtime="20201030 11:52:02.863"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.476" endtime="20201030 11:52:02.863"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.475" endtime="20201030 11:52:02.863"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:02.872" endtime="20201030 11:52:02.896"></status>
</kw>
<msg timestamp="20201030 11:52:02.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:02.870" endtime="20201030 11:52:02.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:02.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:02.897" endtime="20201030 11:52:02.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:02.900" endtime="20201030 11:52:02.901"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.867" endtime="20201030 11:52:02.902"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.865" endtime="20201030 11:52:02.902"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:02.909" endtime="20201030 11:52:03.194"></status>
</kw>
<msg timestamp="20201030 11:52:03.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023891014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023987111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:02.907" endtime="20201030 11:52:03.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:03.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023891014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023987111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:03.199" endtime="20201030 11:52:03.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:03.207" endtime="20201030 11:52:03.209"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.905" endtime="20201030 11:52:03.209"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.903" endtime="20201030 11:52:03.210"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:03.214" level="INFO">${RESULT} = [{'diff': 9.609699999999985e-05}, {'diff': 8.461200000000127e-05}, {'diff': 8.561099999999933e-05}, {'diff': 8.181900000000034e-05}, {'diff': 8.651399999999934e-05}, {'diff': 8.552800000000138e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:03.210" endtime="20201030 11:52:03.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:03.219" level="INFO">${ACCURACY} = {'diff': [9.609699999999985e-05, 8.461200000000127e-05, 8.561099999999933e-05, 8.181900000000034e-05, 8.651399999999934e-05, 8.552800000000138e-05, 8.363899999999994e-05, 8.170799999999978e-05, 8.2792...</msg>
<status status="PASS" starttime="20201030 11:52:03.215" endtime="20201030 11:52:03.219"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:03.223" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201030 11:52:03.222" endtime="20201030 11:52:03.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:03.226" level="INFO">VALUE: [9.609699999999985e-05, 8.461200000000127e-05, 8.561099999999933e-05, 8.181900000000034e-05, 8.651399999999934e-05, 8.552800000000138e-05, 8.363899999999994e-05, 8.170799999999978e-05, 8.279200000000167e-05, 8.649999999999977e-05, 8.367999999999917e-05, 8.470799999999931e-05, 8.474999999999802e-05, 8.270800000000078e-05, 8.270800000000078e-05, 8.656899999999815e-05, 8.17910000000012e-05, 8.365200000000003e-05, 8.56119999999988e-05, 8.36529999999995e-05, 8.561099999999933e-05, 8.075000000000096e-05, 8.272200000000035e-05, 8.754199999999948e-05, 8.365200000000003e-05, 8.180600000000024e-05, 8.466700000000008e-05, 8.36110000000008e-05, 8.179099999999773e-05, 8.554200000000095e-05, 8.179200000000067e-05, 8.555600000000052e-05, 8.459700000000223e-05, 8.661099999999686e-05, 8.172199999999935e-05, 8.56530000000015e-05, 8.265199999999903e-05, 8.655599999999805e-05, 8.744399999999902e-05, 8.084699999999848e-05, 8.463800000000146e-05, 8.174999999999849e-05, 8.27919999999982e-05, 8.662500000000337e-05, 8.645900000000054e-05, 8.466700000000008e-05, 8.173600000000239e-05, 8.563900000000194e-05, 8.36110000000008e-05, 8.27780000000021e-05]</msg>
<status status="PASS" starttime="20201030 11:52:03.225" endtime="20201030 11:52:03.227"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.219" endtime="20201030 11:52:03.228"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:03.232" endtime="20201030 11:52:03.251"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.230" endtime="20201030 11:52:03.252"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.229" endtime="20201030 11:52:03.252"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.864" endtime="20201030 11:52:03.252"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.863" endtime="20201030 11:52:03.253"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:03.261" endtime="20201030 11:52:03.282"></status>
</kw>
<msg timestamp="20201030 11:52:03.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:03.260" endtime="20201030 11:52:03.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:03.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:03.283" endtime="20201030 11:52:03.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:03.286" endtime="20201030 11:52:03.287"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.257" endtime="20201030 11:52:03.288"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.255" endtime="20201030 11:52:03.288"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:03.295" endtime="20201030 11:52:03.581"></status>
</kw>
<msg timestamp="20201030 11:52:03.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021111236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021186278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:03.293" endtime="20201030 11:52:03.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:03.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021111236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021186278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:03.586" endtime="20201030 11:52:03.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:03.594" endtime="20201030 11:52:03.596"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.290" endtime="20201030 11:52:03.596"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.289" endtime="20201030 11:52:03.597"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:03.600" level="INFO">${RESULT} = [{'diff': 7.504200000000086e-05}, {'diff': 8.645799999999759e-05}, {'diff': 8.170799999999978e-05}, {'diff': 8.64860000000002e-05}, {'diff': 8.552800000000138e-05}, {'diff': 8.265199999999903e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:03.597" endtime="20201030 11:52:03.601"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:03.604" level="INFO">${ACCURACY} = {'diff': [7.504200000000086e-05, 8.645799999999759e-05, 8.170799999999978e-05, 8.64860000000002e-05, 8.552800000000138e-05, 8.265199999999903e-05, 8.273599999999992e-05, 8.363899999999994e-05, 8.45969...</msg>
<status status="PASS" starttime="20201030 11:52:03.601" endtime="20201030 11:52:03.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:03.609" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201030 11:52:03.608" endtime="20201030 11:52:03.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:03.611" level="INFO">VALUE: [7.504200000000086e-05, 8.645799999999759e-05, 8.170799999999978e-05, 8.64860000000002e-05, 8.552800000000138e-05, 8.265199999999903e-05, 8.273599999999992e-05, 8.363899999999994e-05, 8.459699999999876e-05, 8.361099999999733e-05, 8.555500000000105e-05, 8.649999999999977e-05, 8.552700000000191e-05, 8.558399999999966e-05, 8.272200000000035e-05, 8.456900000000309e-05, 8.26390000000024e-05, 8.457000000000256e-05, 8.273599999999992e-05, 8.17780000000011e-05, 8.170899999999925e-05, 8.455500000000005e-05, 8.365300000000297e-05, 8.173600000000239e-05, 8.165300000000097e-05, 8.551400000000181e-05, 8.554200000000095e-05, 8.64730000000001e-05, 8.169400000000021e-05, 8.262499999999937e-05, 8.452800000000038e-05, 8.170799999999978e-05, 8.458400000000213e-05, 8.169400000000021e-05, 8.268100000000111e-05, 8.655600000000152e-05, 8.170899999999925e-05, 8.454100000000048e-05, 8.455500000000005e-05, 8.362500000000037e-05, 8.272299999999982e-05, 8.36529999999995e-05, 8.270900000000025e-05, 8.552800000000138e-05, 8.747199999999816e-05, 8.744500000000197e-05, 8.566599999999813e-05, 8.265300000000197e-05, 8.552700000000191e-05, 8.266700000000154e-05]</msg>
<status status="PASS" starttime="20201030 11:52:03.610" endtime="20201030 11:52:03.612"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.605" endtime="20201030 11:52:03.613"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:03.616" endtime="20201030 11:52:03.636"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.615" endtime="20201030 11:52:03.636"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.614" endtime="20201030 11:52:03.637"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.254" endtime="20201030 11:52:03.637"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.253" endtime="20201030 11:52:03.637"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:03.646" endtime="20201030 11:52:03.668"></status>
</kw>
<msg timestamp="20201030 11:52:03.669" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:03.644" endtime="20201030 11:52:03.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:03.671" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:03.670" endtime="20201030 11:52:03.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:03.672" endtime="20201030 11:52:03.674"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.642" endtime="20201030 11:52:03.674"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.639" endtime="20201030 11:52:03.675"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:03.681" endtime="20201030 11:52:03.967"></status>
</kw>
<msg timestamp="20201030 11:52:03.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023471042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023543333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:03.680" endtime="20201030 11:52:03.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:03.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023471042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023543333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:03.972" endtime="20201030 11:52:03.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:03.980" endtime="20201030 11:52:03.982"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.677" endtime="20201030 11:52:03.982"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.675" endtime="20201030 11:52:03.983"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:03.987" level="INFO">${RESULT} = [{'diff': 7.229099999999863e-05}, {'diff': 8.745799999999859e-05}, {'diff': 8.359700000000123e-05}, {'diff': 8.274999999999949e-05}, {'diff': 8.173599999999892e-05}, {'diff': 8.169400000000021e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:03.983" endtime="20201030 11:52:03.987"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:03.991" level="INFO">${ACCURACY} = {'diff': [7.229099999999863e-05, 8.745799999999859e-05, 8.359700000000123e-05, 8.274999999999949e-05, 8.173599999999892e-05, 8.169400000000021e-05, 8.456999999999909e-05, 8.559699999999976e-05, 8.5625...</msg>
<status status="PASS" starttime="20201030 11:52:03.988" endtime="20201030 11:52:03.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:03.995" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201030 11:52:03.994" endtime="20201030 11:52:03.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:03.998" level="INFO">VALUE: [7.229099999999863e-05, 8.745799999999859e-05, 8.359700000000123e-05, 8.274999999999949e-05, 8.173599999999892e-05, 8.169400000000021e-05, 8.456999999999909e-05, 8.559699999999976e-05, 8.562500000000237e-05, 8.46530000000005e-05, 8.557000000000009e-05, 8.367999999999917e-05, 8.36529999999995e-05, 8.273599999999992e-05, 8.457000000000256e-05, 8.361200000000027e-05, 8.470899999999879e-05, 8.462500000000137e-05, 8.469399999999974e-05, 8.456999999999909e-05, 8.563899999999847e-05, 8.359699999999776e-05, 8.255600000000099e-05, 8.170799999999978e-05, 8.180600000000024e-05, 8.076399999999706e-05, 8.276400000000253e-05, 8.643099999999793e-05, 8.359700000000123e-05, 8.36390000000034e-05, 8.372199999999788e-05, 8.54859999999992e-05, 8.277700000000263e-05, 8.554200000000095e-05, 8.737500000000065e-05, 8.741699999999936e-05, 8.279200000000167e-05, 8.647299999999664e-05, 8.268000000000164e-05, 8.465200000000103e-05, 8.074999999999749e-05, 8.372300000000082e-05, 8.645800000000106e-05, 8.363800000000046e-05, 8.661100000000033e-05, 8.172299999999882e-05, 8.451400000000081e-05, 8.168000000000064e-05, 8.649999999999977e-05, 8.367999999999917e-05]</msg>
<status status="PASS" starttime="20201030 11:52:03.996" endtime="20201030 11:52:03.999"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.992" endtime="20201030 11:52:04.000"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:04.003" endtime="20201030 11:52:04.023"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.002" endtime="20201030 11:52:04.023"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.001" endtime="20201030 11:52:04.024"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.638" endtime="20201030 11:52:04.024"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.637" endtime="20201030 11:52:04.024"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:04.033" endtime="20201030 11:52:04.055"></status>
</kw>
<msg timestamp="20201030 11:52:04.055" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:04.031" endtime="20201030 11:52:04.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:04.058" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:04.056" endtime="20201030 11:52:04.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:04.059" endtime="20201030 11:52:04.060"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.029" endtime="20201030 11:52:04.061"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.027" endtime="20201030 11:52:04.061"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:04.068" endtime="20201030 11:52:04.354"></status>
</kw>
<msg timestamp="20201030 11:52:04.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023161694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023245292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:04.066" endtime="20201030 11:52:04.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:04.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023161694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023245292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:04.358" endtime="20201030 11:52:04.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:04.366" endtime="20201030 11:52:04.368"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.064" endtime="20201030 11:52:04.368"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.062" endtime="20201030 11:52:04.369"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:04.373" level="INFO">${RESULT} = [{'diff': 8.35980000000007e-05}, {'diff': 8.665200000000303e-05}, {'diff': 8.64310000000014e-05}, {'diff': 8.550000000000224e-05}, {'diff': 8.262499999999937e-05}, {'diff': 8.563899999999847e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:52:04.370" endtime="20201030 11:52:04.373"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:04.378" level="INFO">${ACCURACY} = {'diff': [8.35980000000007e-05, 8.665200000000303e-05, 8.64310000000014e-05, 8.550000000000224e-05, 8.262499999999937e-05, 8.563899999999847e-05, 8.742999999999945e-05, 8.740299999999979e-05, 8.562500...</msg>
<status status="PASS" starttime="20201030 11:52:04.374" endtime="20201030 11:52:04.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:04.382" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201030 11:52:04.381" endtime="20201030 11:52:04.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:04.385" level="INFO">VALUE: [8.35980000000007e-05, 8.665200000000303e-05, 8.64310000000014e-05, 8.550000000000224e-05, 8.262499999999937e-05, 8.563899999999847e-05, 8.742999999999945e-05, 8.740299999999979e-05, 8.562500000000237e-05, 8.262500000000284e-05, 8.26109999999998e-05, 8.644400000000149e-05, 8.657000000000109e-05, 8.169499999999968e-05, 8.563899999999847e-05, 8.265199999999903e-05, 8.36110000000008e-05, 8.454199999999995e-05, 8.363899999999994e-05, 8.168000000000064e-05, 8.64730000000001e-05, 8.46660000000006e-05, 8.745799999999859e-05, 8.742999999999945e-05, 8.26529999999985e-05, 8.275000000000296e-05, 8.552800000000138e-05, 8.558300000000019e-05, 8.649999999999977e-05, 8.073600000000139e-05, 8.172199999999935e-05, 8.075000000000096e-05, 8.552699999999844e-05, 8.358299999999819e-05, 8.476400000000106e-05, 8.263899999999894e-05, 8.359700000000123e-05, 8.26529999999985e-05, 8.086099999999805e-05, 8.647200000000063e-05, 8.455500000000005e-05, 8.556900000000062e-05, 8.172200000000282e-05, 8.561099999999933e-05, 8.263899999999894e-05, 8.36249999999969e-05, 8.169400000000021e-05, 8.74999999999973e-05, 8.645800000000106e-05, 8.656899999999815e-05]</msg>
<status status="PASS" starttime="20201030 11:52:04.383" endtime="20201030 11:52:04.385"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.379" endtime="20201030 11:52:04.386"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:04.390" endtime="20201030 11:52:04.409"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.388" endtime="20201030 11:52:04.410"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.387" endtime="20201030 11:52:04.410"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.025" endtime="20201030 11:52:04.410"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.024" endtime="20201030 11:52:04.410"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:04.419" endtime="20201030 11:52:04.442"></status>
</kw>
<msg timestamp="20201030 11:52:04.442" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:04.417" endtime="20201030 11:52:04.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:04.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:04.443" endtime="20201030 11:52:04.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:04.445" endtime="20201030 11:52:04.447"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.415" endtime="20201030 11:52:04.448"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.413" endtime="20201030 11:52:04.448"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:04.454" endtime="20201030 11:52:04.744"></status>
</kw>
<msg timestamp="20201030 11:52:04.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023796694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023893764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:04.453" endtime="20201030 11:52:04.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:04.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023796694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023893764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:04.748" endtime="20201030 11:52:04.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:04.756" endtime="20201030 11:52:04.758"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.450" endtime="20201030 11:52:04.758"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.449" endtime="20201030 11:52:04.759"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:04.763" level="INFO">${RESULT} = [{'diff': 9.707000000000118e-05}, {'diff': 8.563800000000246e-05}, {'diff': 8.358400000000113e-05}, {'diff': 8.090300000000022e-05}, {'diff': 8.36529999999995e-05}, {'diff': 8.652799999999891e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:04.759" endtime="20201030 11:52:04.763"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:04.767" level="INFO">${ACCURACY} = {'diff': [9.707000000000118e-05, 8.563800000000246e-05, 8.358400000000113e-05, 8.090300000000022e-05, 8.36529999999995e-05, 8.652799999999891e-05, 8.256900000000109e-05, 8.181900000000034e-05, 8.26519...</msg>
<status status="PASS" starttime="20201030 11:52:04.764" endtime="20201030 11:52:04.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:04.771" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201030 11:52:04.770" endtime="20201030 11:52:04.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:04.774" level="INFO">VALUE: [9.707000000000118e-05, 8.563800000000246e-05, 8.358400000000113e-05, 8.090300000000022e-05, 8.36529999999995e-05, 8.652799999999891e-05, 8.256900000000109e-05, 8.181900000000034e-05, 8.265199999999903e-05, 8.565299999999804e-05, 8.179200000000067e-05, 8.645800000000106e-05, 8.466700000000008e-05, 8.272200000000035e-05, 8.652799999999891e-05, 8.655500000000205e-05, 8.454199999999995e-05, 8.08190000000028e-05, 8.455500000000005e-05, 8.277799999999863e-05, 8.372199999999788e-05, 8.548700000000214e-05, 8.466700000000008e-05, 8.176399999999806e-05, 8.169400000000021e-05, 8.463900000000094e-05, 8.645800000000106e-05, 8.274999999999949e-05, 8.741599999999988e-05, 8.180500000000077e-05, 8.373600000000092e-05, 8.551399999999834e-05, 8.75129999999974e-05, 8.175000000000196e-05, 8.268000000000164e-05, 8.270799999999731e-05, 8.170900000000272e-05, 8.655500000000205e-05, 8.276299999999959e-05, 8.743099999999893e-05, 8.181999999999981e-05, 8.652799999999891e-05, 8.649999999999977e-05, 8.654200000000195e-05, 8.457000000000256e-05, 8.651399999999934e-05, 8.466700000000008e-05, 8.550000000000224e-05, 8.370799999999831e-05, 8.176300000000206e-05]</msg>
<status status="PASS" starttime="20201030 11:52:04.772" endtime="20201030 11:52:04.774"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.768" endtime="20201030 11:52:04.775"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:04.778" endtime="20201030 11:52:04.798"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.777" endtime="20201030 11:52:04.798"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.776" endtime="20201030 11:52:04.799"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.411" endtime="20201030 11:52:04.799"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.411" endtime="20201030 11:52:04.799"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:04.808" endtime="20201030 11:52:04.832"></status>
</kw>
<msg timestamp="20201030 11:52:04.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:04.806" endtime="20201030 11:52:04.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:04.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:04.834" endtime="20201030 11:52:04.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:04.836" endtime="20201030 11:52:04.838"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.804" endtime="20201030 11:52:04.838"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.802" endtime="20201030 11:52:04.839"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:04.845" endtime="20201030 11:52:05.131"></status>
</kw>
<msg timestamp="20201030 11:52:05.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021840653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021917625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:04.844" endtime="20201030 11:52:05.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:05.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021840653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021917625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:05.136" endtime="20201030 11:52:05.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:05.144" endtime="20201030 11:52:05.146"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.841" endtime="20201030 11:52:05.146"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.839" endtime="20201030 11:52:05.147"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:05.150" level="INFO">${RESULT} = [{'diff': 7.697199999999807e-05}, {'diff': 8.076399999999706e-05}, {'diff': 8.183399999999938e-05}, {'diff': 8.649999999999977e-05}, {'diff': 8.168000000000064e-05}, {'diff': 8.46530000000005e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:05.147" endtime="20201030 11:52:05.151"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:05.155" level="INFO">${ACCURACY} = {'diff': [7.697199999999807e-05, 8.076399999999706e-05, 8.183399999999938e-05, 8.649999999999977e-05, 8.168000000000064e-05, 8.46530000000005e-05, 8.26659999999986e-05, 8.352799999999938e-05, 8.370799...</msg>
<status status="PASS" starttime="20201030 11:52:05.151" endtime="20201030 11:52:05.155"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:05.159" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201030 11:52:05.158" endtime="20201030 11:52:05.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:05.162" level="INFO">VALUE: [7.697199999999807e-05, 8.076399999999706e-05, 8.183399999999938e-05, 8.649999999999977e-05, 8.168000000000064e-05, 8.46530000000005e-05, 8.26659999999986e-05, 8.352799999999938e-05, 8.370799999999831e-05, 8.368099999999865e-05, 8.552799999999791e-05, 8.26390000000024e-05, 8.747199999999816e-05, 8.076400000000053e-05, 8.655599999999805e-05, 8.36249999999969e-05, 8.741599999999988e-05, 8.077700000000063e-05, 8.366699999999908e-05, 8.363899999999994e-05, 8.352799999999938e-05, 8.552799999999791e-05, 8.266700000000154e-05, 8.36659999999996e-05, 8.266700000000154e-05, 8.268100000000111e-05, 8.170799999999978e-05, 8.075000000000096e-05, 8.169499999999968e-05, 8.17780000000011e-05, 8.742999999999945e-05, 8.551399999999834e-05, 8.084699999999848e-05, 8.270900000000025e-05, 8.656900000000162e-05, 8.36529999999995e-05, 8.458299999999919e-05, 8.165199999999803e-05, 8.369399999999874e-05, 8.259700000000023e-05, 8.456899999999962e-05, 8.64860000000002e-05, 8.172199999999935e-05, 8.740299999999979e-05, 8.366699999999908e-05, 8.640299999999879e-05, 8.742999999999945e-05, 8.469399999999974e-05, 8.165300000000097e-05, 8.740200000000031e-05]</msg>
<status status="PASS" starttime="20201030 11:52:05.160" endtime="20201030 11:52:05.163"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.155" endtime="20201030 11:52:05.164"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:05.167" endtime="20201030 11:52:05.187"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.166" endtime="20201030 11:52:05.187"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.165" endtime="20201030 11:52:05.187"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.800" endtime="20201030 11:52:05.188"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.800" endtime="20201030 11:52:05.188"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:05.196" endtime="20201030 11:52:05.216"></status>
</kw>
<msg timestamp="20201030 11:52:05.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:05.195" endtime="20201030 11:52:05.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:05.219" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:05.218" endtime="20201030 11:52:05.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:05.220" endtime="20201030 11:52:05.222"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.192" endtime="20201030 11:52:05.222"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.190" endtime="20201030 11:52:05.223"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:05.229" endtime="20201030 11:52:05.515"></status>
</kw>
<msg timestamp="20201030 11:52:05.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020081903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020154042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:05.228" endtime="20201030 11:52:05.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:05.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020081903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020154042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:05.519" endtime="20201030 11:52:05.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:05.527" endtime="20201030 11:52:05.529"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.225" endtime="20201030 11:52:05.529"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.223" endtime="20201030 11:52:05.530"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:05.534" level="INFO">${RESULT} = [{'diff': 7.213899999999884e-05}, {'diff': 8.376400000000006e-05}, {'diff': 8.275000000000296e-05}, {'diff': 8.27919999999982e-05}, {'diff': 8.368099999999865e-05}, {'diff': 8.46110000000018e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:52:05.531" endtime="20201030 11:52:05.534"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:05.539" level="INFO">${ACCURACY} = {'diff': [7.213899999999884e-05, 8.376400000000006e-05, 8.275000000000296e-05, 8.27919999999982e-05, 8.368099999999865e-05, 8.46110000000018e-05, 8.658300000000119e-05, 8.654200000000195e-05, 8.272199...</msg>
<status status="PASS" starttime="20201030 11:52:05.535" endtime="20201030 11:52:05.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:05.543" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201030 11:52:05.542" endtime="20201030 11:52:05.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:05.546" level="INFO">VALUE: [7.213899999999884e-05, 8.376400000000006e-05, 8.275000000000296e-05, 8.27919999999982e-05, 8.368099999999865e-05, 8.46110000000018e-05, 8.658300000000119e-05, 8.654200000000195e-05, 8.272199999999688e-05, 8.276399999999906e-05, 8.073600000000139e-05, 8.456899999999962e-05, 8.179200000000067e-05, 8.18329999999999e-05, 8.268099999999765e-05, 8.563900000000194e-05, 8.551400000000181e-05, 8.093099999999936e-05, 8.656899999999815e-05, 8.270800000000078e-05, 8.463900000000094e-05, 8.759699999999829e-05, 8.08329999999989e-05, 8.74860000000012e-05, 8.366699999999908e-05, 8.270900000000025e-05, 8.656899999999815e-05, 8.270800000000078e-05, 8.369399999999874e-05, 8.755599999999905e-05, 8.174999999999849e-05, 8.649999999999977e-05, 8.561099999999933e-05, 8.466700000000008e-05, 8.754199999999948e-05, 8.177799999999763e-05, 8.273599999999992e-05, 8.551300000000234e-05, 8.46530000000005e-05, 8.565299999999804e-05, 8.358300000000166e-05, 8.563900000000194e-05, 8.456899999999962e-05, 8.375000000000049e-05, 8.166600000000107e-05, 8.472299999999836e-05, 8.462500000000137e-05, 8.469399999999974e-05, 8.459799999999823e-05, 8.659700000000076e-05]</msg>
<status status="PASS" starttime="20201030 11:52:05.544" endtime="20201030 11:52:05.546"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.540" endtime="20201030 11:52:05.547"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:05.551" endtime="20201030 11:52:05.570"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.549" endtime="20201030 11:52:05.571"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.548" endtime="20201030 11:52:05.571"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.189" endtime="20201030 11:52:05.571"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.188" endtime="20201030 11:52:05.571"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.870" endtime="20201030 11:52:05.572"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201030 11:51:26.793" endtime="20201030 11:52:05.572" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 11:50:46.670" endtime="20201030 11:52:05.576"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 11:52:05.630" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 11:52:05.638" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 11:52:06.723" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 11:52:05.629" endtime="20201030 11:52:06.724"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 11:52:06.726" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 11:52:06.725" endtime="20201030 11:52:06.727"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.627" endtime="20201030 11:52:06.727"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:06.729" endtime="20201030 11:52:06.915"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.728" endtime="20201030 11:52:06.916"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:06.928" endtime="20201030 11:52:06.954"></status>
</kw>
<msg timestamp="20201030 11:52:06.955" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:06.927" endtime="20201030 11:52:06.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:06.957" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:06.956" endtime="20201030 11:52:06.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:52:06.960" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:52:06.958" endtime="20201030 11:52:06.961"></status>
</kw>
<status status="FAIL" starttime="20201030 11:52:06.924" endtime="20201030 11:52:06.961"></status>
</kw>
<status status="FAIL" starttime="20201030 11:52:06.922" endtime="20201030 11:52:06.962"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.921" endtime="20201030 11:52:06.962"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:52:06.966" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:52:06.965" endtime="20201030 11:52:06.966"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.963" endtime="20201030 11:52:06.967"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.920" endtime="20201030 11:52:06.967"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.919" endtime="20201030 11:52:06.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:06.968" endtime="20201030 11:52:06.969"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.918" endtime="20201030 11:52:06.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:06.970" endtime="20201030 11:52:06.972"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.917" endtime="20201030 11:52:06.972"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.626" endtime="20201030 11:52:06.973"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:06.982" endtime="20201030 11:52:07.004"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.979" endtime="20201030 11:52:07.005"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:07.032" endtime="20201030 11:52:07.060"></status>
</kw>
<msg timestamp="20201030 11:52:07.061" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:07.029" endtime="20201030 11:52:07.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:07.066" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:07.063" endtime="20201030 11:52:07.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:52:07.074" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:52:07.069" endtime="20201030 11:52:07.075"></status>
</kw>
<status status="FAIL" starttime="20201030 11:52:07.023" endtime="20201030 11:52:07.076"></status>
</kw>
<status status="FAIL" starttime="20201030 11:52:07.018" endtime="20201030 11:52:07.078"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.016" endtime="20201030 11:52:07.078"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:52:07.082" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:52:07.081" endtime="20201030 11:52:07.082"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.079" endtime="20201030 11:52:07.083"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.014" endtime="20201030 11:52:07.083"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.013" endtime="20201030 11:52:07.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:07.084" endtime="20201030 11:52:07.085"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.010" endtime="20201030 11:52:07.086"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.007" endtime="20201030 11:52:07.086"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.977" endtime="20201030 11:52:07.086"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:07.095" endtime="20201030 11:52:13.218"></status>
</kw>
<msg timestamp="20201030 11:52:13.219" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:07.094" endtime="20201030 11:52:13.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:13.224" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:13.221" endtime="20201030 11:52:13.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:13.226" endtime="20201030 11:52:13.229"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.091" endtime="20201030 11:52:13.230"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.089" endtime="20201030 11:52:13.231"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:13.236" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 0, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201030 11:52:13.233" endtime="20201030 11:52:13.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:13.246" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 11:52:13.243" endtime="20201030 11:52:13.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:13.250" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 11:52:13.248" endtime="20201030 11:52:13.250"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.238" endtime="20201030 11:52:13.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:13.260" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 11:52:13.258" endtime="20201030 11:52:13.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:13.264" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 11:52:13.262" endtime="20201030 11:52:13.265"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.253" endtime="20201030 11:52:13.266"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:13.274" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 11:52:13.272" endtime="20201030 11:52:13.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:13.278" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201030 11:52:13.276" endtime="20201030 11:52:13.279"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.267" endtime="20201030 11:52:13.280"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:13.293" endtime="20201030 11:52:13.597"></status>
</kw>
<msg timestamp="20201030 11:52:13.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.102003792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.202011736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:13.290" endtime="20201030 11:52:13.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:13.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.102003792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.202011736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:13.601" endtime="20201030 11:52:13.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:13.610" endtime="20201030 11:52:13.611"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.285" endtime="20201030 11:52:13.612"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.281" endtime="20201030 11:52:13.612"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 11:52:13.616" level="INFO">${FILTERED} = [{'diff': 0.100007944}, {'diff': 0.09996808299999999}, {'diff': 0.10000244399999997}, {'diff': 0.09997201400000005}, {'diff': 0.10000245900000004}, {'diff': 0.099971959}, {'diff': 0.09997199999999995}...</msg>
<status status="PASS" starttime="20201030 11:52:13.613" endtime="20201030 11:52:13.616"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:13.620" level="INFO">${RESULT} = {'diff': [0.100007944, 0.09996808299999999, 0.10000244399999997, 0.09997201400000005, 0.10000245900000004, 0.099971959, 0.09997199999999995, 0.10000254100000006, 0.09997193000000004, 0.099971999999999...</msg>
<status status="PASS" starttime="20201030 11:52:13.617" endtime="20201030 11:52:13.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:13.624" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 11:52:13.623" endtime="20201030 11:52:13.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:13.626" level="INFO">VALUE: [0.100007944, 0.09996808299999999, 0.10000244399999997, 0.09997201400000005, 0.10000245900000004, 0.099971959, 0.09997199999999995, 0.10000254100000006, 0.09997193000000004, 0.09997199999999995, 0.09997194500000006, 0.09997195900000011, 0.10000245899999993, 0.09997197299999994, 0.10000245899999993, 0.09997202800000005, 0.10000245899999993, 0.09997202799999982, 0.10000251400000026, 0.09997190199999961, 0.09997193100000024, 0.09997195899999989, 0.10000254199999992, 0.1000024159999997, 0.0999719579999998, 0.10000251399999982, 0.10000254200000036, 0.09997198699999998, 0.09997193000000015, 0.09997193099999979, 0.0999719859999999, 0.10000247200000034, 0.09997194399999998, 0.10000252800000009, 0.1000024719999999, 0.09997202799999982, 0.10000248600000017, 0.09997194500000006, 0.0999720420000001, 0.10000242999999998, 0.09997197199999963, 0.09997202799999982, 0.10000255600000063, 0.09997191699999952, 0.09997192999999971, 0.09997197199999963, 0.09997197199999963, 0.0999719859999999, 0.09997194399999998, 0.09997192999999971, 0.10000254199999947]</msg>
<status status="PASS" starttime="20201030 11:52:13.625" endtime="20201030 11:52:13.627"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.621" endtime="20201030 11:52:13.628"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.087" endtime="20201030 11:52:13.628"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201030 11:52:06.973" endtime="20201030 11:52:13.629" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:13.636" endtime="20201030 11:52:13.656"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.634" endtime="20201030 11:52:13.656"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:13.670" endtime="20201030 11:52:13.693"></status>
</kw>
<msg timestamp="20201030 11:52:13.694" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:13.668" endtime="20201030 11:52:13.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:13.696" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:13.695" endtime="20201030 11:52:13.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:52:13.699" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:52:13.697" endtime="20201030 11:52:13.699"></status>
</kw>
<status status="FAIL" starttime="20201030 11:52:13.666" endtime="20201030 11:52:13.700"></status>
</kw>
<status status="FAIL" starttime="20201030 11:52:13.663" endtime="20201030 11:52:13.700"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.661" endtime="20201030 11:52:13.701"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:52:13.705" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:52:13.704" endtime="20201030 11:52:13.705"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.702" endtime="20201030 11:52:13.705"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.660" endtime="20201030 11:52:13.705"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.660" endtime="20201030 11:52:13.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:13.706" endtime="20201030 11:52:13.708"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.659" endtime="20201030 11:52:13.708"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.657" endtime="20201030 11:52:13.709"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.633" endtime="20201030 11:52:13.709"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:13.718" endtime="20201030 11:52:19.844"></status>
</kw>
<msg timestamp="20201030 11:52:19.845" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:13.716" endtime="20201030 11:52:19.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:19.850" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:19.847" endtime="20201030 11:52:19.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:19.853" endtime="20201030 11:52:19.856"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.714" endtime="20201030 11:52:19.857"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.712" endtime="20201030 11:52:19.858"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:19.864" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 5, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201030 11:52:19.859" endtime="20201030 11:52:19.864"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:19.873" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 11:52:19.870" endtime="20201030 11:52:19.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:19.877" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 11:52:19.875" endtime="20201030 11:52:19.878"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.865" endtime="20201030 11:52:19.879"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:19.889" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 11:52:19.884" endtime="20201030 11:52:19.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:19.893" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 11:52:19.891" endtime="20201030 11:52:19.894"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.880" endtime="20201030 11:52:19.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:19.903" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 11:52:19.901" endtime="20201030 11:52:19.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:19.907" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201030 11:52:19.905" endtime="20201030 11:52:19.908"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.896" endtime="20201030 11:52:19.909"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:19.922" endtime="20201030 11:52:20.226"></status>
</kw>
<msg timestamp="20201030 11:52:20.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075583722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.175703861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:19.919" endtime="20201030 11:52:20.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:20.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075583722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.175703861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:20.230" endtime="20201030 11:52:20.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:20.238" endtime="20201030 11:52:20.240"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.913" endtime="20201030 11:52:20.240"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.910" endtime="20201030 11:52:20.241"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 11:52:20.245" level="INFO">${FILTERED} = [{'diff': 0.10012013899999998}, {'diff': 0.100059444}, {'diff': 0.09981429200000003}, {'diff': 0.09994144500000002}, {'diff': 0.09997191700000008}, {'diff': 0.09997194399999998}, {'diff': 0.0999719719...</msg>
<status status="PASS" starttime="20201030 11:52:20.241" endtime="20201030 11:52:20.245"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:20.248" level="INFO">${RESULT} = {'diff': [0.10012013899999998, 0.100059444, 0.09981429200000003, 0.09994144500000002, 0.09997191700000008, 0.09997194399999998, 0.09997197199999996, 0.09997200000000006, 0.09997187499999993, 0.0999719...</msg>
<status status="PASS" starttime="20201030 11:52:20.246" endtime="20201030 11:52:20.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:20.253" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 11:52:20.252" endtime="20201030 11:52:20.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:20.256" level="INFO">VALUE: [0.10012013899999998, 0.100059444, 0.09981429200000003, 0.09994144500000002, 0.09997191700000008, 0.09997194399999998, 0.09997197199999996, 0.09997200000000006, 0.09997187499999993, 0.09997193100000012, 0.09997195899999989, 0.09997199999999995, 0.09997192999999993, 0.09997206899999989, 0.09997199999999995, 0.09997194500000006, 0.09997195800000003, 0.09997194399999998, 0.09997194399999998, 0.09997204099999979, 0.09997191700000041, 0.09997199999999973, 0.09997188900000031, 0.09997192999999971, 0.09997195800000025, 0.09997199999999973, 0.09997190200000006, 0.09997202800000027, 0.09997193099999979, 0.09997193000000015, 0.09997197200000008, 0.09997202800000027, 0.09997190200000006, 0.09997197199999963, 0.099972014, 0.09997190199999961, 0.09997198600000035, 0.09997195899999989, 0.09997194499999962, 0.09997198599999946, 0.09997193099999979, 0.09997190300000014, 0.09997201400000044, 0.09997194500000006, 0.09997197299999971, 0.09997191699999952, 0.09997200000000017, 0.09997190300000014, 0.09997195800000025, 0.09997195799999936, 0.09997194399999998]</msg>
<status status="PASS" starttime="20201030 11:52:20.254" endtime="20201030 11:52:20.256"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.249" endtime="20201030 11:52:20.257"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.710" endtime="20201030 11:52:20.257"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201030 11:52:13.631" endtime="20201030 11:52:20.258" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:20.265" endtime="20201030 11:52:20.285"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.264" endtime="20201030 11:52:20.285"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:20.298" endtime="20201030 11:52:20.323"></status>
</kw>
<msg timestamp="20201030 11:52:20.323" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:20.297" endtime="20201030 11:52:20.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:20.326" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:20.324" endtime="20201030 11:52:20.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:52:20.329" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:52:20.327" endtime="20201030 11:52:20.329"></status>
</kw>
<status status="FAIL" starttime="20201030 11:52:20.294" endtime="20201030 11:52:20.330"></status>
</kw>
<status status="FAIL" starttime="20201030 11:52:20.292" endtime="20201030 11:52:20.330"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.290" endtime="20201030 11:52:20.331"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:52:20.334" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:52:20.334" endtime="20201030 11:52:20.335"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.332" endtime="20201030 11:52:20.335"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.290" endtime="20201030 11:52:20.335"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.289" endtime="20201030 11:52:20.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:20.336" endtime="20201030 11:52:20.338"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.288" endtime="20201030 11:52:20.338"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.286" endtime="20201030 11:52:20.338"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.262" endtime="20201030 11:52:20.339"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:20.350" endtime="20201030 11:52:26.479"></status>
</kw>
<msg timestamp="20201030 11:52:26.480" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:20.346" endtime="20201030 11:52:26.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:26.485" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:26.482" endtime="20201030 11:52:26.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:26.488" endtime="20201030 11:52:26.491"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.343" endtime="20201030 11:52:26.492"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.341" endtime="20201030 11:52:26.493"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:26.499" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 10, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201030 11:52:26.495" endtime="20201030 11:52:26.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:26.507" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 11:52:26.505" endtime="20201030 11:52:26.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:26.511" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 11:52:26.509" endtime="20201030 11:52:26.512"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.500" endtime="20201030 11:52:26.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:26.521" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 11:52:26.519" endtime="20201030 11:52:26.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:26.525" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 11:52:26.523" endtime="20201030 11:52:26.526"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.514" endtime="20201030 11:52:26.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:26.535" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 11:52:26.533" endtime="20201030 11:52:26.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:26.539" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201030 11:52:26.537" endtime="20201030 11:52:26.540"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.528" endtime="20201030 11:52:26.541"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:26.554" endtime="20201030 11:52:26.852"></status>
</kw>
<msg timestamp="20201030 11:52:26.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.078098208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.178304097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:26.551" endtime="20201030 11:52:26.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:26.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.078098208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.178304097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:26.856" endtime="20201030 11:52:26.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:26.864" endtime="20201030 11:52:26.866"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.545" endtime="20201030 11:52:26.867"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.542" endtime="20201030 11:52:26.867"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 11:52:26.871" level="INFO">${FILTERED} = [{'diff': 0.10020588899999999}, {'diff': 0.10006179200000004}, {'diff': 0.09967884700000001}, {'diff': 0.100002445}, {'diff': 0.099971959}, {'diff': 0.09997204199999998}, {'diff': 0.09997184699999995}...</msg>
<status status="PASS" starttime="20201030 11:52:26.868" endtime="20201030 11:52:26.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:26.876" level="INFO">${RESULT} = {'diff': [0.10020588899999999, 0.10006179200000004, 0.09967884700000001, 0.100002445, 0.099971959, 0.09997204199999998, 0.09997184699999995, 0.09997197300000005, 0.09997197299999994, 0.099972027999999...</msg>
<status status="PASS" starttime="20201030 11:52:26.872" endtime="20201030 11:52:26.876"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:26.880" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 11:52:26.879" endtime="20201030 11:52:26.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:26.882" level="INFO">VALUE: [0.10020588899999999, 0.10006179200000004, 0.09967884700000001, 0.100002445, 0.099971959, 0.09997204199999998, 0.09997184699999995, 0.09997197300000005, 0.09997197299999994, 0.09997202799999994, 0.09997183300000012, 0.09997202699999996, 0.09997190299999992, 0.09997201300000014, 0.09997190299999992, 0.09997197200000008, 0.09997197300000016, 0.09997191699999997, 0.099972014, 0.09997184699999973, 0.09997205600000036, 0.0999719859999999, 0.09997188800000023, 0.0999719859999999, 0.09997193000000015, 0.09997197200000008, 0.0999719579999998, 0.09997202799999982, 0.09997193099999979, 0.09997194499999962, 0.09997195899999989, 0.0999719859999999, 0.09997198600000035, 0.0999720970000002, 0.09997191600000033, 0.0999719579999998, 0.09997197200000008, 0.09997193000000015, 0.09997194500000006, 0.09997190300000014, 0.09997197200000052, 0.09997194399999998, 0.09997201399999955, 0.09997191699999952, 0.09997200000000017, 0.09997191700000041, 0.09997190200000006, 0.09997197199999963, 0.09997190299999925, 0.0999720420000001, 0.09997191600000033]</msg>
<status status="PASS" starttime="20201030 11:52:26.881" endtime="20201030 11:52:26.883"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.876" endtime="20201030 11:52:26.884"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.340" endtime="20201030 11:52:26.884"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201030 11:52:20.260" endtime="20201030 11:52:26.885" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:26.892" endtime="20201030 11:52:26.911"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.890" endtime="20201030 11:52:26.912"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:26.925" endtime="20201030 11:52:26.950"></status>
</kw>
<msg timestamp="20201030 11:52:26.951" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:26.924" endtime="20201030 11:52:26.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:26.953" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:26.952" endtime="20201030 11:52:26.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:52:26.957" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:52:26.954" endtime="20201030 11:52:26.957"></status>
</kw>
<status status="FAIL" starttime="20201030 11:52:26.921" endtime="20201030 11:52:26.958"></status>
</kw>
<status status="FAIL" starttime="20201030 11:52:26.919" endtime="20201030 11:52:26.959"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.918" endtime="20201030 11:52:26.959"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:52:26.963" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:52:26.962" endtime="20201030 11:52:26.963"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.960" endtime="20201030 11:52:26.963"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.917" endtime="20201030 11:52:26.963"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.916" endtime="20201030 11:52:26.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:26.964" endtime="20201030 11:52:26.966"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.915" endtime="20201030 11:52:26.966"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.913" endtime="20201030 11:52:26.967"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.889" endtime="20201030 11:52:26.967"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:26.975" endtime="20201030 11:52:33.107"></status>
</kw>
<msg timestamp="20201030 11:52:33.108" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:26.974" endtime="20201030 11:52:33.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:33.113" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:33.110" endtime="20201030 11:52:33.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:33.116" endtime="20201030 11:52:33.119"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.971" endtime="20201030 11:52:33.120"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.969" endtime="20201030 11:52:33.121"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:33.127" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 15, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201030 11:52:33.124" endtime="20201030 11:52:33.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:33.136" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 11:52:33.133" endtime="20201030 11:52:33.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:33.140" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 11:52:33.138" endtime="20201030 11:52:33.140"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.129" endtime="20201030 11:52:33.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:33.150" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 11:52:33.148" endtime="20201030 11:52:33.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:33.154" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 11:52:33.152" endtime="20201030 11:52:33.155"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.143" endtime="20201030 11:52:33.156"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:33.164" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 11:52:33.162" endtime="20201030 11:52:33.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:33.168" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201030 11:52:33.166" endtime="20201030 11:52:33.168"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.157" endtime="20201030 11:52:33.170"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:33.183" endtime="20201030 11:52:33.483"></status>
</kw>
<msg timestamp="20201030 11:52:33.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.07820525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.178541083, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:52:33.180" endtime="20201030 11:52:33.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:33.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.07820525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.178541083, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:52:33.487" endtime="20201030 11:52:33.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:33.495" endtime="20201030 11:52:33.497"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.174" endtime="20201030 11:52:33.497"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.171" endtime="20201030 11:52:33.498"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 11:52:33.502" level="INFO">${FILTERED} = [{'diff': 0.10033583299999999}, {'diff': 0.10006001399999997}, {'diff': 0.09956198599999999}, {'diff': 0.09997198600000001}, {'diff': 0.09997194499999995}, {'diff': 0.09997197200000008}, {'diff': 0.09...</msg>
<status status="PASS" starttime="20201030 11:52:33.499" endtime="20201030 11:52:33.502"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:33.505" level="INFO">${RESULT} = {'diff': [0.10033583299999999, 0.10006001399999997, 0.09956198599999999, 0.09997198600000001, 0.09997194499999995, 0.09997197200000008, 0.09997195799999992, 0.09997193100000001, 0.09997193100000001, 0...</msg>
<status status="PASS" starttime="20201030 11:52:33.503" endtime="20201030 11:52:33.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:33.510" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 11:52:33.509" endtime="20201030 11:52:33.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:33.512" level="INFO">VALUE: [0.10033583299999999, 0.10006001399999997, 0.09956198599999999, 0.09997198600000001, 0.09997194499999995, 0.09997197200000008, 0.09997195799999992, 0.09997193100000001, 0.09997193100000001, 0.09997193000000004, 0.09997202800000005, 0.0999719859999999, 0.0999720420000001, 0.0999719579999998, 0.0999719579999998, 0.09997206900000011, 0.09997195900000011, 0.09997188900000009, 0.09997194399999998, 0.0999719579999998, 0.09997198600000035, 0.09997197199999963, 0.09997191600000033, 0.09997191699999997, 0.09997198699999998, 0.09997190300000014, 0.09997202699999974, 0.09997194499999962, 0.09997195899999989, 0.09997191699999997, 0.09997193000000015, 0.09997202799999982, 0.09997194500000006, 0.09997190300000014, 0.09997197200000008, 0.0999719579999998, 0.09997197200000008, 0.0999719859999999, 0.0999719859999999, 0.09997194399999998, 0.09997194399999998, 0.0999719859999999, 0.09997195800000025, 0.09997186100000022, 0.09997200000000017, 0.0999719859999999, 0.09997184699999995, 0.09997201399999955, 0.09997194500000006, 0.09997194499999917, 0.09997200000000017]</msg>
<status status="PASS" starttime="20201030 11:52:33.511" endtime="20201030 11:52:33.513"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.506" endtime="20201030 11:52:33.513"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.968" endtime="20201030 11:52:33.514"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201030 11:52:26.886" endtime="20201030 11:52:33.514" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:33.522" endtime="20201030 11:52:33.541"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.520" endtime="20201030 11:52:33.542"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:33.556" endtime="20201030 11:52:33.576"></status>
</kw>
<msg timestamp="20201030 11:52:33.577" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:33.554" endtime="20201030 11:52:33.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:33.579" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:33.578" endtime="20201030 11:52:33.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:52:33.582" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:52:33.580" endtime="20201030 11:52:33.582"></status>
</kw>
<status status="FAIL" starttime="20201030 11:52:33.551" endtime="20201030 11:52:33.583"></status>
</kw>
<status status="FAIL" starttime="20201030 11:52:33.548" endtime="20201030 11:52:33.584"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.547" endtime="20201030 11:52:33.584"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:52:33.588" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:52:33.587" endtime="20201030 11:52:33.588"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.585" endtime="20201030 11:52:33.588"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.546" endtime="20201030 11:52:33.588"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.546" endtime="20201030 11:52:33.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:33.589" endtime="20201030 11:52:33.591"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.544" endtime="20201030 11:52:33.591"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.542" endtime="20201030 11:52:33.592"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.519" endtime="20201030 11:52:33.592"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:33.601" endtime="20201030 11:52:39.728"></status>
</kw>
<msg timestamp="20201030 11:52:39.729" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:33.599" endtime="20201030 11:52:39.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:39.734" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:39.731" endtime="20201030 11:52:39.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:39.737" endtime="20201030 11:52:39.740"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.597" endtime="20201030 11:52:39.741"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.594" endtime="20201030 11:52:39.742"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:39.748" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 20, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201030 11:52:39.744" endtime="20201030 11:52:39.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:39.756" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 11:52:39.754" endtime="20201030 11:52:39.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:39.761" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 11:52:39.759" endtime="20201030 11:52:39.761"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.749" endtime="20201030 11:52:39.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:39.770" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 11:52:39.768" endtime="20201030 11:52:39.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:39.775" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 11:52:39.773" endtime="20201030 11:52:39.775"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.764" endtime="20201030 11:52:39.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:39.784" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 11:52:39.782" endtime="20201030 11:52:39.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:39.791" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201030 11:52:39.786" endtime="20201030 11:52:39.792"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.778" endtime="20201030 11:52:39.793"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:39.806" endtime="20201030 11:52:40.107"></status>
</kw>
<msg timestamp="20201030 11:52:40.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070033319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.170520042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:39.803" endtime="20201030 11:52:40.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:40.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070033319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.170520042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:40.111" endtime="20201030 11:52:40.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:40.119" endtime="20201030 11:52:40.121"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.798" endtime="20201030 11:52:40.122"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.794" endtime="20201030 11:52:40.122"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 11:52:40.126" level="INFO">${FILTERED} = [{'diff': 0.10048672300000001}, {'diff': 0.10007532000000002}, {'diff': 0.09941515300000003}, {'diff': 0.09997191699999997}, {'diff': 0.09997193099999996}, {'diff': 0.09997198699999998}, {'diff': 0.09...</msg>
<status status="PASS" starttime="20201030 11:52:40.123" endtime="20201030 11:52:40.126"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:40.130" level="INFO">${RESULT} = {'diff': [0.10048672300000001, 0.10007532000000002, 0.09941515300000003, 0.09997191699999997, 0.09997193099999996, 0.09997198699999998, 0.09997191699999997, 0.09997206900000011, 0.09997194399999998, 0...</msg>
<status status="PASS" starttime="20201030 11:52:40.127" endtime="20201030 11:52:40.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:40.134" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 11:52:40.133" endtime="20201030 11:52:40.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:40.137" level="INFO">VALUE: [0.10048672300000001, 0.10007532000000002, 0.09941515300000003, 0.09997191699999997, 0.09997193099999996, 0.09997198699999998, 0.09997191699999997, 0.09997206900000011, 0.09997194399999998, 0.09997193000000004, 0.09997190299999992, 0.09997199999999995, 0.09997193100000001, 0.09997194500000006, 0.09997202800000005, 0.09997198699999998, 0.09997195800000003, 0.09997205500000006, 0.09997187500000004, 0.09997199999999973, 0.09997188899999987, 0.09997194399999998, 0.09997200000000017, 0.09997187500000004, 0.09997205599999992, 0.09997194500000006, 0.09997200000000017, 0.0999719859999999, 0.09997184799999959, 0.09997197299999971, 0.09997197199999963, 0.09997195800000025, 0.09997197200000008, 0.09997188899999987, 0.09997208299999993, 0.09997186100000022, 0.0999719859999999, 0.09997197200000008, 0.09997194500000006, 0.09997201299999992, 0.09997190300000014, 0.09997192999999971, 0.09997197199999963, 0.0999719859999999, 0.09997194499999917, 0.09997200000000017, 0.09997188900000076, 0.09997194399999998, 0.0999719859999999, 0.09997197200000052, 0.09997200000000017]</msg>
<status status="PASS" starttime="20201030 11:52:40.135" endtime="20201030 11:52:40.138"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.130" endtime="20201030 11:52:40.138"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.593" endtime="20201030 11:52:40.139"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201030 11:52:33.516" endtime="20201030 11:52:40.139" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:40.146" endtime="20201030 11:52:40.166"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.145" endtime="20201030 11:52:40.167"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:40.179" endtime="20201030 11:52:40.208"></status>
</kw>
<msg timestamp="20201030 11:52:40.209" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:40.178" endtime="20201030 11:52:40.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:40.211" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:40.210" endtime="20201030 11:52:40.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:52:40.214" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:52:40.212" endtime="20201030 11:52:40.214"></status>
</kw>
<status status="FAIL" starttime="20201030 11:52:40.175" endtime="20201030 11:52:40.215"></status>
</kw>
<status status="FAIL" starttime="20201030 11:52:40.173" endtime="20201030 11:52:40.216"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.172" endtime="20201030 11:52:40.216"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:52:40.220" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:52:40.219" endtime="20201030 11:52:40.220"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.217" endtime="20201030 11:52:40.220"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.171" endtime="20201030 11:52:40.220"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.170" endtime="20201030 11:52:40.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:40.221" endtime="20201030 11:52:40.223"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.169" endtime="20201030 11:52:40.223"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.167" endtime="20201030 11:52:40.224"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.143" endtime="20201030 11:52:40.224"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:40.234" endtime="20201030 11:52:46.361"></status>
</kw>
<msg timestamp="20201030 11:52:46.362" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:40.231" endtime="20201030 11:52:46.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:46.367" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:46.364" endtime="20201030 11:52:46.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:46.370" endtime="20201030 11:52:46.373"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.228" endtime="20201030 11:52:46.374"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.226" endtime="20201030 11:52:46.375"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:46.381" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 25, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201030 11:52:46.377" endtime="20201030 11:52:46.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:46.389" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 11:52:46.387" endtime="20201030 11:52:46.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:46.394" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 11:52:46.392" endtime="20201030 11:52:46.394"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:46.383" endtime="20201030 11:52:46.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:46.403" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 11:52:46.401" endtime="20201030 11:52:46.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:46.407" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 11:52:46.406" endtime="20201030 11:52:46.408"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:46.397" endtime="20201030 11:52:46.409"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:46.417" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 11:52:46.415" endtime="20201030 11:52:46.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:46.422" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201030 11:52:46.420" endtime="20201030 11:52:46.422"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:46.410" endtime="20201030 11:52:46.423"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:46.437" endtime="20201030 11:52:46.741"></status>
</kw>
<msg timestamp="20201030 11:52:46.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.081949083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.182626042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:46.434" endtime="20201030 11:52:46.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:46.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.081949083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.182626042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:46.745" endtime="20201030 11:52:46.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:46.753" endtime="20201030 11:52:46.754"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:46.428" endtime="20201030 11:52:46.755"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:46.425" endtime="20201030 11:52:46.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 11:52:46.759" level="INFO">${FILTERED} = [{'diff': 0.10067695899999998}, {'diff': 0.10008002799999999}, {'diff': 0.09920241699999999}, {'diff': 0.09997204100000001}, {'diff': 0.09997190300000003}, {'diff': 0.0999720420000001}, {'diff': 0.099...</msg>
<status status="PASS" starttime="20201030 11:52:46.756" endtime="20201030 11:52:46.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:46.764" level="INFO">${RESULT} = {'diff': [0.10067695899999998, 0.10008002799999999, 0.09920241699999999, 0.09997204100000001, 0.09997190300000003, 0.0999720420000001, 0.09997187499999993, 0.09997202799999994, 0.099971959, 0.09997190...</msg>
<status status="PASS" starttime="20201030 11:52:46.760" endtime="20201030 11:52:46.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:46.768" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 11:52:46.767" endtime="20201030 11:52:46.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:46.771" level="INFO">VALUE: [0.10067695899999998, 0.10008002799999999, 0.09920241699999999, 0.09997204100000001, 0.09997190300000003, 0.0999720420000001, 0.09997187499999993, 0.09997202799999994, 0.099971959, 0.09997190299999992, 0.09997200000000017, 0.09997191599999988, 0.09997198600000012, 0.09997199999999995, 0.09997194500000006, 0.09997198699999998, 0.0999719579999998, 0.0999719440000002, 0.09997197199999985, 0.09997193000000015, 0.09997194399999998, 0.099972014, 0.09997204100000001, 0.09997187500000004, 0.0999720420000001, 0.09997190200000006, 0.09997197199999963, 0.09997191699999997, 0.09997197200000008, 0.0999719029999997, 0.09997201299999992, 0.09997197200000008, 0.09997200000000017, 0.09997195899999989, 0.09997200000000017, 0.09997197200000008, 0.09997193000000015, 0.09997197199999963, 0.09997191699999997, 0.099972014, 0.09997190300000014, 0.09997190300000014, 0.09997204100000001, 0.09997197199999963, 0.0999720420000001, 0.09997188900000076, 0.09997188899999987, 0.09997206899999966, 0.09997201300000036, 0.09997191700000041, 0.09997195900000033]</msg>
<status status="PASS" starttime="20201030 11:52:46.769" endtime="20201030 11:52:46.772"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:46.765" endtime="20201030 11:52:46.772"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.225" endtime="20201030 11:52:46.773"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201030 11:52:40.141" endtime="20201030 11:52:46.773" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 11:52:05.586" endtime="20201030 11:52:46.780"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">frdm-kw41z</item>
<item name="RIOT-Version">2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased</item>
</metadata>
<status status="PASS" starttime="20201030 11:50:02.485" endtime="20201030 11:52:46.814"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_frdm-kw41z</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
