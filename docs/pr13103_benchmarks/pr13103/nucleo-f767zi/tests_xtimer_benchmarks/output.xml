<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201030 11:50:17.572" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 11:50:18.144" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 11:50:18.153" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 11:50:19.262" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 11:50:18.143" endtime="20201030 11:50:19.263"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 11:50:19.265" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 11:50:19.264" endtime="20201030 11:50:19.265"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.142" endtime="20201030 11:50:19.266"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:19.268" endtime="20201030 11:50:19.453"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.267" endtime="20201030 11:50:19.453"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:19.467" endtime="20201030 11:50:19.487"></status>
</kw>
<msg timestamp="20201030 11:50:19.487" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:19.466" endtime="20201030 11:50:19.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:19.490" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:19.488" endtime="20201030 11:50:19.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:19.493" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:50:19.491" endtime="20201030 11:50:19.494"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:19.463" endtime="20201030 11:50:19.494"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:19.460" endtime="20201030 11:50:19.495"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.459" endtime="20201030 11:50:19.495"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:50:19.500" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:50:19.498" endtime="20201030 11:50:19.500"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.496" endtime="20201030 11:50:19.500"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.458" endtime="20201030 11:50:19.501"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.457" endtime="20201030 11:50:19.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:19.502" endtime="20201030 11:50:19.503"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.456" endtime="20201030 11:50:19.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:19.504" endtime="20201030 11:50:19.506"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.454" endtime="20201030 11:50:19.506"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.140" endtime="20201030 11:50:19.507"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:19.513" endtime="20201030 11:50:19.532"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.511" endtime="20201030 11:50:19.533"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:19.547" endtime="20201030 11:50:19.566"></status>
</kw>
<msg timestamp="20201030 11:50:19.567" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:19.545" endtime="20201030 11:50:19.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:19.569" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:19.568" endtime="20201030 11:50:19.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:19.572" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:50:19.570" endtime="20201030 11:50:19.573"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:19.543" endtime="20201030 11:50:19.573"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:19.540" endtime="20201030 11:50:19.574"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.538" endtime="20201030 11:50:19.574"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:50:19.578" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:50:19.577" endtime="20201030 11:50:19.578"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.575" endtime="20201030 11:50:19.579"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.538" endtime="20201030 11:50:19.579"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.537" endtime="20201030 11:50:19.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:19.580" endtime="20201030 11:50:19.581"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.536" endtime="20201030 11:50:19.582"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.534" endtime="20201030 11:50:19.582"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.510" endtime="20201030 11:50:19.582"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:19.591" endtime="20201030 11:50:19.600"></status>
</kw>
<msg timestamp="20201030 11:50:19.601" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:19.589" endtime="20201030 11:50:19.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:19.603" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:19.602" endtime="20201030 11:50:19.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:19.604" endtime="20201030 11:50:19.606"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.585" endtime="20201030 11:50:19.607"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.583" endtime="20201030 11:50:19.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:19.611" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201030 11:50:19.610" endtime="20201030 11:50:19.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:19.613" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201030 11:50:19.612" endtime="20201030 11:50:19.614"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.608" endtime="20201030 11:50:19.614"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:50:19.507" endtime="20201030 11:50:19.615" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 11:50:17.686" endtime="20201030 11:50:19.618"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 11:50:19.671" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 11:50:19.679" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 11:50:20.783" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 11:50:19.669" endtime="20201030 11:50:20.784"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 11:50:20.787" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 11:50:20.785" endtime="20201030 11:50:20.787"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.668" endtime="20201030 11:50:20.788"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:20.790" endtime="20201030 11:50:21.013"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.788" endtime="20201030 11:50:21.013"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:21.026" endtime="20201030 11:50:21.045"></status>
</kw>
<msg timestamp="20201030 11:50:21.045" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:21.024" endtime="20201030 11:50:21.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:21.048" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:21.046" endtime="20201030 11:50:21.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:21.051" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:50:21.049" endtime="20201030 11:50:21.051"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:21.022" endtime="20201030 11:50:21.052"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:21.019" endtime="20201030 11:50:21.052"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.018" endtime="20201030 11:50:21.053"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:50:21.056" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:50:21.056" endtime="20201030 11:50:21.057"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.053" endtime="20201030 11:50:21.057"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.017" endtime="20201030 11:50:21.057"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.017" endtime="20201030 11:50:21.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:21.058" endtime="20201030 11:50:21.060"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.016" endtime="20201030 11:50:21.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:21.061" endtime="20201030 11:50:21.062"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.014" endtime="20201030 11:50:21.063"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.666" endtime="20201030 11:50:21.063"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:21.070" endtime="20201030 11:50:21.089"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.067" endtime="20201030 11:50:21.090"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:21.103" endtime="20201030 11:50:21.122"></status>
</kw>
<msg timestamp="20201030 11:50:21.123" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:21.101" endtime="20201030 11:50:21.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:21.125" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:21.124" endtime="20201030 11:50:21.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:21.128" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:50:21.126" endtime="20201030 11:50:21.129"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:21.099" endtime="20201030 11:50:21.129"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:21.096" endtime="20201030 11:50:21.130"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.095" endtime="20201030 11:50:21.130"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:50:21.134" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:50:21.133" endtime="20201030 11:50:21.134"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.131" endtime="20201030 11:50:21.135"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.094" endtime="20201030 11:50:21.135"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.094" endtime="20201030 11:50:21.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:21.136" endtime="20201030 11:50:21.137"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.092" endtime="20201030 11:50:21.138"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.091" endtime="20201030 11:50:21.138"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.066" endtime="20201030 11:50:21.138"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:21.147" endtime="20201030 11:50:21.158"></status>
</kw>
<msg timestamp="20201030 11:50:21.159" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:21.146" endtime="20201030 11:50:21.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:21.161" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:21.160" endtime="20201030 11:50:21.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:21.162" endtime="20201030 11:50:21.164"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.143" endtime="20201030 11:50:21.164"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.142" endtime="20201030 11:50:21.165"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:21.178" endtime="20201030 11:50:21.456"></status>
</kw>
<msg timestamp="20201030 11:50:21.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068358569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068361778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:21.175" endtime="20201030 11:50:21.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:21.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068358569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068361778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:21.459" endtime="20201030 11:50:21.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:21.464" endtime="20201030 11:50:21.466"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.170" endtime="20201030 11:50:21.466"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.166" endtime="20201030 11:50:21.467"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:21.471" level="INFO">${RESULT} = [{'diff': 3.209000000004014e-06}, {'diff': 3.083000000000946e-06}, {'diff': 3.347000000000766e-06}, {'diff': 2.7769999999954775e-06}, {'diff': 2.610999999999586e-06}, {'diff': 2.7910000000019863e-06},...</msg>
<status status="PASS" starttime="20201030 11:50:21.468" endtime="20201030 11:50:21.471"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:21.474" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.209000000004014e-06, 3.083000000000946e-06, 3.347000000000766e-06, 2.7769999999954775e-06, 2.610999999999586e-06, 2.7910000000019863e-06, 2.4859999999959914e-06, 3.4450000000046943e-06, 2....</msg>
<status status="PASS" starttime="20201030 11:50:21.472" endtime="20201030 11:50:21.474"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:21.478" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:21.477" endtime="20201030 11:50:21.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:21.480" level="INFO">VALUE: [3.209000000004014e-06, 3.083000000000946e-06, 3.347000000000766e-06, 2.7769999999954775e-06, 2.610999999999586e-06, 2.7910000000019863e-06, 2.4859999999959914e-06, 3.4450000000046943e-06, 2.9579999999973516e-06, 3.05600000000128e-06, 2.832999999993757e-06, 3.2779999999954512e-06, 3.3049999999951174e-06, 2.9029999999985456e-06, 2.7360000000031803e-06, 2.860999999992897e-06, 3.0139999999956313e-06, 2.901999999999072e-06, 2.9449999999903165e-06, 2.5000000000025002e-06, 3.096999999993577e-06, 3.2769999999959776e-06, 3.361000000007275e-06, 3.2080000000045406e-06, 3.0410000000091753e-06]</msg>
<status status="PASS" starttime="20201030 11:50:21.479" endtime="20201030 11:50:21.481"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.475" endtime="20201030 11:50:21.481"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.140" endtime="20201030 11:50:21.482"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.140" endtime="20201030 11:50:21.482"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:21.491" endtime="20201030 11:50:21.501"></status>
</kw>
<msg timestamp="20201030 11:50:21.501" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:21.489" endtime="20201030 11:50:21.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:21.504" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:21.502" endtime="20201030 11:50:21.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:21.505" endtime="20201030 11:50:21.507"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.486" endtime="20201030 11:50:21.508"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.484" endtime="20201030 11:50:21.508"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:21.515" endtime="20201030 11:50:21.801"></status>
</kw>
<msg timestamp="20201030 11:50:21.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068358569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068361778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:21.513" endtime="20201030 11:50:21.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:21.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068358569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068361778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:21.805" endtime="20201030 11:50:21.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:21.814" endtime="20201030 11:50:21.815"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.511" endtime="20201030 11:50:21.816"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.509" endtime="20201030 11:50:21.816"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:21.820" level="INFO">${RESULT} = [{'diff': 3.209000000004014e-06}, {'diff': 3.083000000000946e-06}, {'diff': 3.347000000000766e-06}, {'diff': 2.7769999999954775e-06}, {'diff': 2.610999999999586e-06}, {'diff': 2.7910000000019863e-06},...</msg>
<status status="PASS" starttime="20201030 11:50:21.817" endtime="20201030 11:50:21.821"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:21.825" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.209000000004014e-06, 3.083000000000946e-06, 3.347000000000766e-06, 2.7769999999954775e-06, 2.610999999999586e-06, 2.7910000000019863e-06, 2.4859999999959914e-06, 3.4450000000046943e-06, 2....</msg>
<status status="PASS" starttime="20201030 11:50:21.821" endtime="20201030 11:50:21.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:21.829" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:21.828" endtime="20201030 11:50:21.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:21.831" level="INFO">VALUE: [3.209000000004014e-06, 3.083000000000946e-06, 3.347000000000766e-06, 2.7769999999954775e-06, 2.610999999999586e-06, 2.7910000000019863e-06, 2.4859999999959914e-06, 3.4450000000046943e-06, 2.9579999999973516e-06, 3.05600000000128e-06, 2.832999999993757e-06, 3.2779999999954512e-06, 3.3049999999951174e-06, 2.9029999999985456e-06, 2.7360000000031803e-06, 2.860999999992897e-06, 3.0139999999956313e-06, 2.901999999999072e-06, 2.9449999999903165e-06, 2.5000000000025002e-06, 3.096999999993577e-06, 3.2769999999959776e-06, 3.361000000007275e-06, 3.2080000000045406e-06, 3.0410000000091753e-06, 5.410000000205528e-07, 3.069000000022193e-06, 2.8890000000059146e-06, 3.138999999985348e-06, 3.000000000030756e-06, 3.26400000000282e-06, 3.3469999999868882e-06, 3.179999999991523e-06, 3.3059999999807133e-06, 2.9719999999899827e-06, 3.014000000023387e-06, 3.235999999962047e-06, 3.0549999999740507e-06, 2.8610000000206526e-06, 3.4300000000264674e-06, 2.8750000000132836e-06, 2.8610000000206526e-06, 3.4160000000338364e-06, 3.3609999999795193e-06, 2.7499999999958114e-06, 2.8059999999663354e-06, 2.541999999994271e-06, 3.250000000010189e-06, 3.250000000010189e-06, 2.9999999999752447e-06]</msg>
<status status="PASS" starttime="20201030 11:50:21.830" endtime="20201030 11:50:21.833"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.826" endtime="20201030 11:50:21.833"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.483" endtime="20201030 11:50:21.834"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.482" endtime="20201030 11:50:21.834"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:21.842" endtime="20201030 11:50:21.851"></status>
</kw>
<msg timestamp="20201030 11:50:21.852" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:21.840" endtime="20201030 11:50:21.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:21.854" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:21.853" endtime="20201030 11:50:21.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:21.855" endtime="20201030 11:50:21.857"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.837" endtime="20201030 11:50:21.857"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.836" endtime="20201030 11:50:21.858"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:21.864" endtime="20201030 11:50:22.163"></status>
</kw>
<msg timestamp="20201030 11:50:22.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068432167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068435472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:21.863" endtime="20201030 11:50:22.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:22.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068432167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068435472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:22.168" endtime="20201030 11:50:22.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:22.178" endtime="20201030 11:50:22.180"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.860" endtime="20201030 11:50:22.181"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.858" endtime="20201030 11:50:22.181"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:22.185" level="INFO">${RESULT} = [{'diff': 3.3049999999951174e-06}, {'diff': 2.9029999999985456e-06}, {'diff': 2.7360000000031803e-06}, {'diff': 2.860999999992897e-06}, {'diff': 3.0139999999956313e-06}, {'diff': 2.901999999999072e-06...</msg>
<status status="PASS" starttime="20201030 11:50:22.182" endtime="20201030 11:50:22.185"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:22.191" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.3049999999951174e-06, 2.9029999999985456e-06, 2.7360000000031803e-06, 2.860999999992897e-06, 3.0139999999956313e-06, 2.901999999999072e-06, 2.9449999999903165e-06, 2.5000000000025002e-06, ...</msg>
<status status="PASS" starttime="20201030 11:50:22.186" endtime="20201030 11:50:22.191"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:22.195" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:22.194" endtime="20201030 11:50:22.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:22.198" level="INFO">VALUE: [3.3049999999951174e-06, 2.9029999999985456e-06, 2.7360000000031803e-06, 2.860999999992897e-06, 3.0139999999956313e-06, 2.901999999999072e-06, 2.9449999999903165e-06, 2.5000000000025002e-06, 3.096999999993577e-06, 3.2769999999959776e-06, 3.361000000007275e-06, 3.2080000000045406e-06, 3.0410000000091753e-06, 5.410000000205528e-07, 3.069000000022193e-06, 2.8890000000059146e-06, 3.138999999985348e-06, 3.000000000030756e-06, 3.26400000000282e-06, 3.3469999999868882e-06, 3.179999999991523e-06, 3.3059999999807133e-06, 2.9719999999899827e-06, 3.014000000023387e-06, 3.235999999962047e-06, 3.0549999999740507e-06, 2.8610000000206526e-06, 3.4300000000264674e-06, 2.8750000000132836e-06, 2.8610000000206526e-06, 3.4160000000338364e-06, 3.3609999999795193e-06, 2.7499999999958114e-06, 2.8059999999663354e-06, 2.541999999994271e-06, 3.250000000010189e-06, 3.250000000010189e-06, 2.9999999999752447e-06, 0.34165254199999995, 2.4299999999977118e-06, 3.3329999999942572e-06, 2.9579999999418405e-06, 3.0829999999593127e-06, 3.083999999931031e-06, 2.9719999999899827e-06, 2.917000000102199e-06, 3.000000000086267e-06, 2.9440000000047206e-06, 2.987000000009843e-06, 2.7919999999737044e-06, 3.290999999960853e-06, 2.8890000000059146e-06, 2.8469999999725104e-06, 2.540999999967042e-06, 2.7360000000031803e-06, 2.9999999999752447e-06, 2.7640000000994647e-06, 3.5409999999957975e-06, 3.167000000026121e-06, 3.139000000040859e-06, 2.7910000000019863e-06, 3.111000000055597e-06, 2.7360000000031803e-06, 2.8330000000353905e-06]</msg>
<status status="PASS" starttime="20201030 11:50:22.196" endtime="20201030 11:50:22.198"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.192" endtime="20201030 11:50:22.199"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.835" endtime="20201030 11:50:22.199"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.834" endtime="20201030 11:50:22.199"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:22.207" endtime="20201030 11:50:22.216"></status>
</kw>
<msg timestamp="20201030 11:50:22.217" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:22.206" endtime="20201030 11:50:22.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:22.219" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:22.218" endtime="20201030 11:50:22.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:22.220" endtime="20201030 11:50:22.222"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.203" endtime="20201030 11:50:22.222"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.201" endtime="20201030 11:50:22.223"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:22.229" endtime="20201030 11:50:22.537"></status>
</kw>
<msg timestamp="20201030 11:50:22.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.401471847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.401474903, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:50:22.228" endtime="20201030 11:50:22.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:22.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.401471847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.401474903, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:50:22.542" endtime="20201030 11:50:22.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:22.552" endtime="20201030 11:50:22.553"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.225" endtime="20201030 11:50:22.554"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.224" endtime="20201030 11:50:22.554"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:22.559" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 2.8610000000206526e-06}, {'diff': 3.4300000000264674e-06}, {'diff': 2.8750000000132836e-06}, {'diff': 2.8610000000206526e-06}, {'diff': 3.4160000000338364e-06}, {'diff': 3.36099...</msg>
<status status="PASS" starttime="20201030 11:50:22.555" endtime="20201030 11:50:22.559"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:22.563" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 2.8610000000206526e-06, 3.4300000000264674e-06, 2.8750000000132836e-06, 2.8610000000206526e-06, 3.4160000000338364e-06, 3.3609999999795193e-06, 2.7499999999958114e-06, 2.8059999999663354e...</msg>
<status status="PASS" starttime="20201030 11:50:22.560" endtime="20201030 11:50:22.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:22.568" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:22.567" endtime="20201030 11:50:22.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:22.571" level="INFO">VALUE: [0, 2.8610000000206526e-06, 3.4300000000264674e-06, 2.8750000000132836e-06, 2.8610000000206526e-06, 3.4160000000338364e-06, 3.3609999999795193e-06, 2.7499999999958114e-06, 2.8059999999663354e-06, 2.541999999994271e-06, 3.250000000010189e-06, 3.250000000010189e-06, 2.9999999999752447e-06, 0.34165254199999995, 2.4299999999977118e-06, 3.3329999999942572e-06, 2.9579999999418405e-06, 3.0829999999593127e-06, 3.083999999931031e-06, 2.9719999999899827e-06, 2.917000000102199e-06, 3.000000000086267e-06, 2.9440000000047206e-06, 2.987000000009843e-06, 2.7919999999737044e-06, 3.290999999960853e-06, 2.8890000000059146e-06, 2.8469999999725104e-06, 2.540999999967042e-06, 2.7360000000031803e-06, 2.9999999999752447e-06, 2.7640000000994647e-06, 3.5409999999957975e-06, 3.167000000026121e-06, 3.139000000040859e-06, 2.7910000000019863e-06, 3.111000000055597e-06, 2.7360000000031803e-06, 2.8330000000353905e-06, 5.419999999922709e-07, 3.0689999999111706e-06, 3.152999999977979e-06, 2.569000000063326e-06, 2.8190000000982707e-06, 3.1660000001654254e-06, 3.291999999932571e-06, 3.0279999998494844e-06, 3.194000000039665e-06, 3.304999999897973e-06, 3.1249999998816946e-06, 3.0689999999111706e-06, 3.3059999999807133e-06, 2.9309999998172742e-06, 2.6810000000043743e-06, 3.1250000001037392e-06, 3.1249999998816946e-06, 2.666999999956232e-06, 2.9999999999752447e-06, 3.277000000023733e-06, 3.528000000141418e-06, 2.569000000063326e-06, 2.903000000165079e-06, 3.1810000000742633e-06, 3.221999999913905e-06]</msg>
<status status="PASS" starttime="20201030 11:50:22.569" endtime="20201030 11:50:22.571"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.565" endtime="20201030 11:50:22.571"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.200" endtime="20201030 11:50:22.572"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.200" endtime="20201030 11:50:22.572"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:22.581" endtime="20201030 11:50:22.590"></status>
</kw>
<msg timestamp="20201030 11:50:22.591" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:22.578" endtime="20201030 11:50:22.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:22.593" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:22.592" endtime="20201030 11:50:22.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:22.594" endtime="20201030 11:50:22.596"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.576" endtime="20201030 11:50:22.596"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.574" endtime="20201030 11:50:22.597"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:22.603" endtime="20201030 11:50:22.908"></status>
</kw>
<msg timestamp="20201030 11:50:22.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.74327275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.743275639, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:22.602" endtime="20201030 11:50:22.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:22.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.74327275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.743275639, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:22.914" endtime="20201030 11:50:22.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:22.923" endtime="20201030 11:50:22.925"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.599" endtime="20201030 11:50:22.926"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.597" endtime="20201030 11:50:22.926"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:22.930" level="INFO">${RESULT} = [{'diff': 2.8890000000059146e-06}, {'diff': 2.8469999999725104e-06}, {'diff': 2.540999999967042e-06}, {'diff': 2.7360000000031803e-06}, {'diff': 2.9999999999752447e-06}, {'diff': 2.7640000000994647e-0...</msg>
<status status="PASS" starttime="20201030 11:50:22.927" endtime="20201030 11:50:22.931"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:22.936" level="INFO">${GPIO_OVERHEAD} = {'diff': [2.8890000000059146e-06, 2.8469999999725104e-06, 2.540999999967042e-06, 2.7360000000031803e-06, 2.9999999999752447e-06, 2.7640000000994647e-06, 3.5409999999957975e-06, 3.167000000026121e-06, ...</msg>
<status status="PASS" starttime="20201030 11:50:22.931" endtime="20201030 11:50:22.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:22.940" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:22.939" endtime="20201030 11:50:22.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:22.943" level="INFO">VALUE: [2.8890000000059146e-06, 2.8469999999725104e-06, 2.540999999967042e-06, 2.7360000000031803e-06, 2.9999999999752447e-06, 2.7640000000994647e-06, 3.5409999999957975e-06, 3.167000000026121e-06, 3.139000000040859e-06, 2.7910000000019863e-06, 3.111000000055597e-06, 2.7360000000031803e-06, 2.8330000000353905e-06, 5.419999999922709e-07, 3.0689999999111706e-06, 3.152999999977979e-06, 2.569000000063326e-06, 2.8190000000982707e-06, 3.1660000001654254e-06, 3.291999999932571e-06, 3.0279999998494844e-06, 3.194000000039665e-06, 3.304999999897973e-06, 3.1249999998816946e-06, 3.0689999999111706e-06, 3.3059999999807133e-06, 2.9309999998172742e-06, 2.6810000000043743e-06, 3.1250000001037392e-06, 3.1249999998816946e-06, 2.666999999956232e-06, 2.9999999999752447e-06, 3.277000000023733e-06, 3.528000000141418e-06, 2.569000000063326e-06, 2.903000000165079e-06, 3.1810000000742633e-06, 3.221999999913905e-06, 0.36414487500000003, 2.916000000130481e-06, 3.0000000001972893e-06, 3.013000000162691e-06, 2.957999999830818e-06, 2.8480000000552508e-06, 2.610999999985708e-06, 2.8199999999589664e-06, 3.0419999998976266e-06, 3.4719999999488493e-06, 2.8329999999243682e-06, 3.2229999999966452e-06, 2.9020000000823387e-06, 2.9449999998654164e-06, 2.9309999998172742e-06, 2.931000000039319e-06, 2.833000000146413e-06, 2.9169999999911767e-06, 3.1250000001037392e-06, 3.277999999884429e-06, 2.6810000000043743e-06, 3.138999999929837e-06, 3.041000000036931e-06, 3.431000000109208e-06, 3.1249999998816946e-06, 2.9299999999565784e-06]</msg>
<status status="PASS" starttime="20201030 11:50:22.942" endtime="20201030 11:50:22.943"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.937" endtime="20201030 11:50:22.944"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.573" endtime="20201030 11:50:22.944"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.572" endtime="20201030 11:50:22.945"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:22.952" endtime="20201030 11:50:22.962"></status>
</kw>
<msg timestamp="20201030 11:50:22.963" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:22.951" endtime="20201030 11:50:22.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:22.965" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:22.964" endtime="20201030 11:50:22.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:22.966" endtime="20201030 11:50:22.968"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.948" endtime="20201030 11:50:22.968"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.947" endtime="20201030 11:50:22.969"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:22.975" endtime="20201030 11:50:23.280"></status>
</kw>
<msg timestamp="20201030 11:50:23.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.100058444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.10006175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:22.973" endtime="20201030 11:50:23.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:23.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.100058444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.10006175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:23.285" endtime="20201030 11:50:23.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:23.295" endtime="20201030 11:50:23.297"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.971" endtime="20201030 11:50:23.297"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.969" endtime="20201030 11:50:23.298"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:23.302" level="INFO">${RESULT} = [{'diff': 3.3059999999807133e-06}, {'diff': 2.9309999998172742e-06}, {'diff': 2.6810000000043743e-06}, {'diff': 3.1250000001037392e-06}, {'diff': 3.1249999998816946e-06}, {'diff': 2.666999999956232e-0...</msg>
<status status="PASS" starttime="20201030 11:50:23.298" endtime="20201030 11:50:23.302"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:23.309" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.3059999999807133e-06, 2.9309999998172742e-06, 2.6810000000043743e-06, 3.1250000001037392e-06, 3.1249999998816946e-06, 2.666999999956232e-06, 2.9999999999752447e-06, 3.277000000023733e-06, ...</msg>
<status status="PASS" starttime="20201030 11:50:23.303" endtime="20201030 11:50:23.309"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:23.313" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:23.312" endtime="20201030 11:50:23.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:23.316" level="INFO">VALUE: [3.3059999999807133e-06, 2.9309999998172742e-06, 2.6810000000043743e-06, 3.1250000001037392e-06, 3.1249999998816946e-06, 2.666999999956232e-06, 2.9999999999752447e-06, 3.277000000023733e-06, 3.528000000141418e-06, 2.569000000063326e-06, 2.903000000165079e-06, 3.1810000000742633e-06, 3.221999999913905e-06, 0.36414487500000003, 2.916000000130481e-06, 3.0000000001972893e-06, 3.013000000162691e-06, 2.957999999830818e-06, 2.8480000000552508e-06, 2.610999999985708e-06, 2.8199999999589664e-06, 3.0419999998976266e-06, 3.4719999999488493e-06, 2.8329999999243682e-06, 3.2229999999966452e-06, 2.9020000000823387e-06, 2.9449999998654164e-06, 2.9309999998172742e-06, 2.931000000039319e-06, 2.833000000146413e-06, 2.9169999999911767e-06, 3.1250000001037392e-06, 3.277999999884429e-06, 2.6810000000043743e-06, 3.138999999929837e-06, 3.041000000036931e-06, 3.431000000109208e-06, 3.1249999998816946e-06, 2.9299999999565784e-06, 3.4170000000610656e-06, 2.833000000146413e-06, 2.6810000000043743e-06, 2.65299999990809e-06, 3.3200000000288554e-06, 2.7639999999884424e-06, 3.1669999998040765e-06, 3.152999999977979e-06, 2.610999999985708e-06, 3.6660000000132698e-06, 3.291999999932571e-06, 3.374999999916639e-06, 2.903000000165079e-06, 3.2780000001064735e-06, 2.889000000116937e-06, 2.901999999860294e-06, 3.069999999993911e-06, 2.721999999844016e-06, 2.9859999999271025e-06, 2.9440000000047206e-06, 2.8050000000501285e-06, 3.235999999962047e-06, 3.235999999962047e-06, 3.179999999991523e-06, 2.8610000000206526e-06]</msg>
<status status="PASS" starttime="20201030 11:50:23.314" endtime="20201030 11:50:23.316"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.310" endtime="20201030 11:50:23.317"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.945" endtime="20201030 11:50:23.317"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.945" endtime="20201030 11:50:23.317"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:23.325" endtime="20201030 11:50:23.335"></status>
</kw>
<msg timestamp="20201030 11:50:23.335" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:23.324" endtime="20201030 11:50:23.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:23.338" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:23.336" endtime="20201030 11:50:23.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:23.339" endtime="20201030 11:50:23.340"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.321" endtime="20201030 11:50:23.341"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.319" endtime="20201030 11:50:23.341"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:23.348" endtime="20201030 11:50:23.652"></status>
</kw>
<msg timestamp="20201030 11:50:23.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.464351444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.464354611, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:50:23.346" endtime="20201030 11:50:23.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:23.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.464351444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.464354611, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:50:23.657" endtime="20201030 11:50:23.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:23.668" endtime="20201030 11:50:23.669"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.344" endtime="20201030 11:50:23.670"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.342" endtime="20201030 11:50:23.670"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:23.675" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 2.9449999998654164e-06}, {'diff': 2.9309999998172742e-06}, {'diff': 2.931000000039319e-06}, {'diff': 2.833000000146413e-06}, {'diff': 2.9169999999911767e-06}, {'diff': 3.1250000...</msg>
<status status="PASS" starttime="20201030 11:50:23.671" endtime="20201030 11:50:23.675"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:23.680" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 2.9449999998654164e-06, 2.9309999998172742e-06, 2.931000000039319e-06, 2.833000000146413e-06, 2.9169999999911767e-06, 3.1250000001037392e-06, 3.277999999884429e-06, 2.6810000000043743e-06...</msg>
<status status="PASS" starttime="20201030 11:50:23.676" endtime="20201030 11:50:23.680"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:23.684" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:23.683" endtime="20201030 11:50:23.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:23.686" level="INFO">VALUE: [0, 2.9449999998654164e-06, 2.9309999998172742e-06, 2.931000000039319e-06, 2.833000000146413e-06, 2.9169999999911767e-06, 3.1250000001037392e-06, 3.277999999884429e-06, 2.6810000000043743e-06, 3.138999999929837e-06, 3.041000000036931e-06, 3.431000000109208e-06, 3.1249999998816946e-06, 2.9299999999565784e-06, 3.4170000000610656e-06, 2.833000000146413e-06, 2.6810000000043743e-06, 2.65299999990809e-06, 3.3200000000288554e-06, 2.7639999999884424e-06, 3.1669999998040765e-06, 3.152999999977979e-06, 2.610999999985708e-06, 3.6660000000132698e-06, 3.291999999932571e-06, 3.374999999916639e-06, 2.903000000165079e-06, 3.2780000001064735e-06, 2.889000000116937e-06, 2.901999999860294e-06, 3.069999999993911e-06, 2.721999999844016e-06, 2.9859999999271025e-06, 2.9440000000047206e-06, 2.8050000000501285e-06, 3.235999999962047e-06, 3.235999999962047e-06, 3.179999999991523e-06, 2.8610000000206526e-06, 5.419999999922709e-07, 2.805000000272173e-06, 2.5689999998412816e-06, 3.3059999999807133e-06, 3.152000000117283e-06, 2.9580000000528628e-06, 3.055000000085073e-06, 2.6250000000338503e-06, 3.055000000085073e-06, 3.1530000002000236e-06, 3.401999999930183e-06, 2.9029999999430345e-06, 3.347000000264444e-06, 3.0980000000901953e-06, 3.389000000186826e-06, 3.0419999998976266e-06, 3.0830000001813573e-06, 3.082999999737268e-06, 2.7360000003362472e-06, 2.986000000149147e-06, 3.3329999999942572e-06, 3.3200000002509e-06, 3.2640000000583314e-06, 3.5000000000451337e-06, 3.4580000001227518e-06]</msg>
<status status="PASS" starttime="20201030 11:50:23.685" endtime="20201030 11:50:23.687"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.681" endtime="20201030 11:50:23.687"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.318" endtime="20201030 11:50:23.688"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.318" endtime="20201030 11:50:23.688"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:23.696" endtime="20201030 11:50:23.706"></status>
</kw>
<msg timestamp="20201030 11:50:23.706" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:23.695" endtime="20201030 11:50:23.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:23.709" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:23.707" endtime="20201030 11:50:23.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:23.710" endtime="20201030 11:50:23.711"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.692" endtime="20201030 11:50:23.712"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.690" endtime="20201030 11:50:23.712"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:23.719" endtime="20201030 11:50:24.030"></status>
</kw>
<msg timestamp="20201030 11:50:24.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.824955875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.824958778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:23.717" endtime="20201030 11:50:24.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:24.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.824955875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.824958778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:24.035" endtime="20201030 11:50:24.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:24.045" endtime="20201030 11:50:24.046"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.715" endtime="20201030 11:50:24.047"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.713" endtime="20201030 11:50:24.047"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:24.052" level="INFO">${RESULT} = [{'diff': 2.903000000165079e-06}, {'diff': 3.2780000001064735e-06}, {'diff': 2.889000000116937e-06}, {'diff': 2.901999999860294e-06}, {'diff': 3.069999999993911e-06}, {'diff': 2.721999999844016e-06}, ...</msg>
<status status="PASS" starttime="20201030 11:50:24.048" endtime="20201030 11:50:24.052"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:24.057" level="INFO">${GPIO_OVERHEAD} = {'diff': [2.903000000165079e-06, 3.2780000001064735e-06, 2.889000000116937e-06, 2.901999999860294e-06, 3.069999999993911e-06, 2.721999999844016e-06, 2.9859999999271025e-06, 2.9440000000047206e-06, 2.8...</msg>
<status status="PASS" starttime="20201030 11:50:24.053" endtime="20201030 11:50:24.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:24.062" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:24.061" endtime="20201030 11:50:24.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:24.064" level="INFO">VALUE: [2.903000000165079e-06, 3.2780000001064735e-06, 2.889000000116937e-06, 2.901999999860294e-06, 3.069999999993911e-06, 2.721999999844016e-06, 2.9859999999271025e-06, 2.9440000000047206e-06, 2.8050000000501285e-06, 3.235999999962047e-06, 3.235999999962047e-06, 3.179999999991523e-06, 2.8610000000206526e-06, 5.419999999922709e-07, 2.805000000272173e-06, 2.5689999998412816e-06, 3.3059999999807133e-06, 3.152000000117283e-06, 2.9580000000528628e-06, 3.055000000085073e-06, 2.6250000000338503e-06, 3.055000000085073e-06, 3.1530000002000236e-06, 3.401999999930183e-06, 2.9029999999430345e-06, 3.347000000264444e-06, 3.0980000000901953e-06, 3.389000000186826e-06, 3.0419999998976266e-06, 3.0830000001813573e-06, 3.082999999737268e-06, 2.7360000003362472e-06, 2.986000000149147e-06, 3.3329999999942572e-06, 3.3200000002509e-06, 3.2640000000583314e-06, 3.5000000000451337e-06, 3.4580000001227518e-06, 0.36098822299999966, 2.555999999653835e-06, 2.7220000000660605e-06, 3.1109999998335525e-06, 3.097000000007455e-06, 3.347000000264444e-06, 2.7220000000660605e-06, 3.2370000000447874e-06, 3.1109999998335525e-06, 3.5000000000451337e-06, 3.0139999998013423e-06, 3.5000000000451337e-06, 3.1800000002135675e-06, 3.374999999916639e-06, 3.3480000003471844e-06, 3.1529999997559344e-06, 2.820000000181011e-06, 2.5409999997449972e-06, 2.847999999833206e-06, 3.0139999998013423e-06, 3.235999999962047e-06, 3.028000000071529e-06, 3.028000000071529e-06, 3.0419999998976266e-06, 3.0839999998200085e-06, 2.8750000002908394e-06]</msg>
<status status="PASS" starttime="20201030 11:50:24.063" endtime="20201030 11:50:24.065"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.058" endtime="20201030 11:50:24.065"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.689" endtime="20201030 11:50:24.066"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.688" endtime="20201030 11:50:24.066"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:24.073" endtime="20201030 11:50:24.083"></status>
</kw>
<msg timestamp="20201030 11:50:24.083" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:24.072" endtime="20201030 11:50:24.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:24.086" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:24.084" endtime="20201030 11:50:24.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:24.087" endtime="20201030 11:50:24.088"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.069" endtime="20201030 11:50:24.089"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.068" endtime="20201030 11:50:24.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:24.096" endtime="20201030 11:50:24.415"></status>
</kw>
<msg timestamp="20201030 11:50:24.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.187057486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.187060583, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:50:24.094" endtime="20201030 11:50:24.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:24.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.187057486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.187060583, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:50:24.420" endtime="20201030 11:50:24.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:24.430" endtime="20201030 11:50:24.432"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.092" endtime="20201030 11:50:24.433"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.090" endtime="20201030 11:50:24.433"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:24.438" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 3.0980000000901953e-06}, {'diff': 3.389000000186826e-06}, {'diff': 3.0419999998976266e-06}, {'diff': 3.0830000001813573e-06}, {'diff': 3.082999999737268e-06}, {'diff': 2.7360000...</msg>
<status status="PASS" starttime="20201030 11:50:24.434" endtime="20201030 11:50:24.438"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:24.444" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 3.0980000000901953e-06, 3.389000000186826e-06, 3.0419999998976266e-06, 3.0830000001813573e-06, 3.082999999737268e-06, 2.7360000003362472e-06, 2.986000000149147e-06, 3.3329999999942572e-06...</msg>
<status status="PASS" starttime="20201030 11:50:24.439" endtime="20201030 11:50:24.444"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:24.448" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:24.447" endtime="20201030 11:50:24.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:24.450" level="INFO">VALUE: [0, 3.0980000000901953e-06, 3.389000000186826e-06, 3.0419999998976266e-06, 3.0830000001813573e-06, 3.082999999737268e-06, 2.7360000003362472e-06, 2.986000000149147e-06, 3.3329999999942572e-06, 3.3200000002509e-06, 3.2640000000583314e-06, 3.5000000000451337e-06, 3.4580000001227518e-06, 0.36098822299999966, 2.555999999653835e-06, 2.7220000000660605e-06, 3.1109999998335525e-06, 3.097000000007455e-06, 3.347000000264444e-06, 2.7220000000660605e-06, 3.2370000000447874e-06, 3.1109999998335525e-06, 3.5000000000451337e-06, 3.0139999998013423e-06, 3.5000000000451337e-06, 3.1800000002135675e-06, 3.374999999916639e-06, 3.3480000003471844e-06, 3.1529999997559344e-06, 2.820000000181011e-06, 2.5409999997449972e-06, 2.847999999833206e-06, 3.0139999998013423e-06, 3.235999999962047e-06, 3.028000000071529e-06, 3.028000000071529e-06, 3.0419999998976266e-06, 3.0839999998200085e-06, 2.8750000002908394e-06, 5.419999999922709e-07, 2.986000000149147e-06, 3.042000000341716e-06, 3.3059999999807133e-06, 3.194000000039665e-06, 3.138999999929837e-06, 3.0830000001813573e-06, 3.2220000001359494e-06, 3.0410000002589754e-06, 3.235999999962047e-06, 2.750000000162345e-06, 2.943999999782676e-06, 3.389000000186826e-06, 2.9719999998789604e-06, 3.2499999997881446e-06, 2.9999999999752447e-06, 2.8610000000206526e-06, 3.2370000000447874e-06, 3.1949999996783163e-06, 2.7639999999884424e-06, 2.5419999998277376e-06, 3.4030000000129235e-06, 3.2920000001546157e-06, 2.9580000000528628e-06, 2.457999999982974e-06]</msg>
<status status="PASS" starttime="20201030 11:50:24.449" endtime="20201030 11:50:24.451"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.444" endtime="20201030 11:50:24.451"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.066" endtime="20201030 11:50:24.452"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.066" endtime="20201030 11:50:24.452"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:24.460" endtime="20201030 11:50:24.469"></status>
</kw>
<msg timestamp="20201030 11:50:24.470" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:24.458" endtime="20201030 11:50:24.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:24.472" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:24.471" endtime="20201030 11:50:24.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:24.473" endtime="20201030 11:50:24.475"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.456" endtime="20201030 11:50:24.476"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.454" endtime="20201030 11:50:24.476"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:24.484" endtime="20201030 11:50:24.801"></status>
</kw>
<msg timestamp="20201030 11:50:24.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.548196569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.548199944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:24.482" endtime="20201030 11:50:24.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:24.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.548196569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.548199944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:24.806" endtime="20201030 11:50:24.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:24.816" endtime="20201030 11:50:24.817"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.478" endtime="20201030 11:50:24.818"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.477" endtime="20201030 11:50:24.819"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:24.823" level="INFO">${RESULT} = [{'diff': 3.374999999916639e-06}, {'diff': 3.3480000003471844e-06}, {'diff': 3.1529999997559344e-06}, {'diff': 2.820000000181011e-06}, {'diff': 2.5409999997449972e-06}, {'diff': 2.847999999833206e-06}...</msg>
<status status="PASS" starttime="20201030 11:50:24.819" endtime="20201030 11:50:24.823"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:24.828" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.374999999916639e-06, 3.3480000003471844e-06, 3.1529999997559344e-06, 2.820000000181011e-06, 2.5409999997449972e-06, 2.847999999833206e-06, 3.0139999998013423e-06, 3.235999999962047e-06, 3....</msg>
<status status="PASS" starttime="20201030 11:50:24.824" endtime="20201030 11:50:24.828"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:24.832" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:24.831" endtime="20201030 11:50:24.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:24.835" level="INFO">VALUE: [3.374999999916639e-06, 3.3480000003471844e-06, 3.1529999997559344e-06, 2.820000000181011e-06, 2.5409999997449972e-06, 2.847999999833206e-06, 3.0139999998013423e-06, 3.235999999962047e-06, 3.028000000071529e-06, 3.028000000071529e-06, 3.0419999998976266e-06, 3.0839999998200085e-06, 2.8750000002908394e-06, 5.419999999922709e-07, 2.986000000149147e-06, 3.042000000341716e-06, 3.3059999999807133e-06, 3.194000000039665e-06, 3.138999999929837e-06, 3.0830000001813573e-06, 3.2220000001359494e-06, 3.0410000002589754e-06, 3.235999999962047e-06, 2.750000000162345e-06, 2.943999999782676e-06, 3.389000000186826e-06, 2.9719999998789604e-06, 3.2499999997881446e-06, 2.9999999999752447e-06, 2.8610000000206526e-06, 3.2370000000447874e-06, 3.1949999996783163e-06, 2.7639999999884424e-06, 2.5419999998277376e-06, 3.4030000000129235e-06, 3.2920000001546157e-06, 2.9580000000528628e-06, 2.457999999982974e-06, 0.3762378609999999, 3.0140000002454315e-06, 3.2640000000583314e-06, 2.735999999892158e-06, 3.3059999999807133e-06, 3.181000000296308e-06, 3.4580000001227518e-06, 3.401999999930183e-06, 2.943999999782676e-06, 3.042000000341716e-06, 2.569999999924022e-06, 2.986000000149147e-06, 3.2500000002322338e-06, 3.1800000002135675e-06, 3.1250000001037392e-06, 3.1250000001037392e-06, 3.1109999998335525e-06, 2.6809999997823297e-06, 2.889000000116937e-06, 3.12499999965965e-06, 2.986000000149147e-06, 2.8059999999108243e-06, 2.9719999998789604e-06, 3.1110000002776417e-06, 2.8329999999243682e-06, 3.1109999998335525e-06]</msg>
<status status="PASS" starttime="20201030 11:50:24.833" endtime="20201030 11:50:24.835"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.828" endtime="20201030 11:50:24.836"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.453" endtime="20201030 11:50:24.836"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.452" endtime="20201030 11:50:24.837"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:24.845" endtime="20201030 11:50:24.854"></status>
</kw>
<msg timestamp="20201030 11:50:24.855" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:24.843" endtime="20201030 11:50:24.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:24.857" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:24.856" endtime="20201030 11:50:24.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:24.858" endtime="20201030 11:50:24.860"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.840" endtime="20201030 11:50:24.861"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.839" endtime="20201030 11:50:24.861"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:24.868" endtime="20201030 11:50:25.182"></status>
</kw>
<msg timestamp="20201030 11:50:25.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.915332583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.915335361, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:50:24.866" endtime="20201030 11:50:25.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:25.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.915332583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.915335361, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:50:25.187" endtime="20201030 11:50:25.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:25.197" endtime="20201030 11:50:25.199"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.863" endtime="20201030 11:50:25.199"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.862" endtime="20201030 11:50:25.200"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:25.204" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 2.9719999998789604e-06}, {'diff': 3.2499999997881446e-06}, {'diff': 2.9999999999752447e-06}, {'diff': 2.8610000000206526e-06}, {'diff': 3.2370000000447874e-06}, {'diff': 3.19499...</msg>
<status status="PASS" starttime="20201030 11:50:25.200" endtime="20201030 11:50:25.204"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:25.210" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 2.9719999998789604e-06, 3.2499999997881446e-06, 2.9999999999752447e-06, 2.8610000000206526e-06, 3.2370000000447874e-06, 3.1949999996783163e-06, 2.7639999999884424e-06, 2.5419999998277376e...</msg>
<status status="PASS" starttime="20201030 11:50:25.205" endtime="20201030 11:50:25.210"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:25.214" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:25.213" endtime="20201030 11:50:25.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:25.216" level="INFO">VALUE: [0, 2.9719999998789604e-06, 3.2499999997881446e-06, 2.9999999999752447e-06, 2.8610000000206526e-06, 3.2370000000447874e-06, 3.1949999996783163e-06, 2.7639999999884424e-06, 2.5419999998277376e-06, 3.4030000000129235e-06, 3.2920000001546157e-06, 2.9580000000528628e-06, 2.457999999982974e-06, 0.3762378609999999, 3.0140000002454315e-06, 3.2640000000583314e-06, 2.735999999892158e-06, 3.3059999999807133e-06, 3.181000000296308e-06, 3.4580000001227518e-06, 3.401999999930183e-06, 2.943999999782676e-06, 3.042000000341716e-06, 2.569999999924022e-06, 2.986000000149147e-06, 3.2500000002322338e-06, 3.1800000002135675e-06, 3.1250000001037392e-06, 3.1250000001037392e-06, 3.1109999998335525e-06, 2.6809999997823297e-06, 2.889000000116937e-06, 3.12499999965965e-06, 2.986000000149147e-06, 2.8059999999108243e-06, 2.9719999998789604e-06, 3.1110000002776417e-06, 2.8329999999243682e-06, 3.1109999998335525e-06, 5.419999999922709e-07, 2.77799999981454e-06, 3.3609999996464524e-06, 3.12499999965965e-06, 2.7910000000019863e-06, 2.9999999999752447e-06, 3.167000000026121e-06, 3.152000000117283e-06, 2.8329999999243682e-06, 2.8610000000206526e-06, 2.7079999997958737e-06, 3.3059999999807133e-06, 2.8889999996728477e-06, 2.889000000116937e-06, 3.2500000002322338e-06, 3.0419999998976266e-06, 2.9999999999752447e-06, 2.9309999995952296e-06, 2.7499999997182556e-06, 3.138999999929837e-06, 3.3889999997427367e-06, 2.9449999998654164e-06, 2.7220000000660605e-06, 3.2499999997881446e-06, 2.9030000003871237e-06]</msg>
<status status="PASS" starttime="20201030 11:50:25.215" endtime="20201030 11:50:25.217"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.210" endtime="20201030 11:50:25.217"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.837" endtime="20201030 11:50:25.218"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.837" endtime="20201030 11:50:25.218"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:25.226" endtime="20201030 11:50:25.235"></status>
</kw>
<msg timestamp="20201030 11:50:25.236" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:25.224" endtime="20201030 11:50:25.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:25.238" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:25.237" endtime="20201030 11:50:25.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:25.239" endtime="20201030 11:50:25.241"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.222" endtime="20201030 11:50:25.241"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.220" endtime="20201030 11:50:25.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:25.248" endtime="20201030 11:50:25.564"></status>
</kw>
<msg timestamp="20201030 11:50:25.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.291719056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.291722236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:25.247" endtime="20201030 11:50:25.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:25.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.291719056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.291722236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:25.569" endtime="20201030 11:50:25.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:25.579" endtime="20201030 11:50:25.581"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.244" endtime="20201030 11:50:25.582"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.242" endtime="20201030 11:50:25.582"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:25.586" level="INFO">${RESULT} = [{'diff': 3.1800000002135675e-06}, {'diff': 3.1250000001037392e-06}, {'diff': 3.1250000001037392e-06}, {'diff': 3.1109999998335525e-06}, {'diff': 2.6809999997823297e-06}, {'diff': 2.889000000116937e-0...</msg>
<status status="PASS" starttime="20201030 11:50:25.583" endtime="20201030 11:50:25.587"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:25.591" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.1800000002135675e-06, 3.1250000001037392e-06, 3.1250000001037392e-06, 3.1109999998335525e-06, 2.6809999997823297e-06, 2.889000000116937e-06, 3.12499999965965e-06, 2.986000000149147e-06, 2....</msg>
<status status="PASS" starttime="20201030 11:50:25.587" endtime="20201030 11:50:25.591"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:25.595" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:25.594" endtime="20201030 11:50:25.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:25.598" level="INFO">VALUE: [3.1800000002135675e-06, 3.1250000001037392e-06, 3.1250000001037392e-06, 3.1109999998335525e-06, 2.6809999997823297e-06, 2.889000000116937e-06, 3.12499999965965e-06, 2.986000000149147e-06, 2.8059999999108243e-06, 2.9719999998789604e-06, 3.1110000002776417e-06, 2.8329999999243682e-06, 3.1109999998335525e-06, 5.419999999922709e-07, 2.77799999981454e-06, 3.3609999996464524e-06, 3.12499999965965e-06, 2.7910000000019863e-06, 2.9999999999752447e-06, 3.167000000026121e-06, 3.152000000117283e-06, 2.8329999999243682e-06, 2.8610000000206526e-06, 2.7079999997958737e-06, 3.3059999999807133e-06, 2.8889999996728477e-06, 2.889000000116937e-06, 3.2500000002322338e-06, 3.0419999998976266e-06, 2.9999999999752447e-06, 2.9309999995952296e-06, 2.7499999997182556e-06, 3.138999999929837e-06, 3.3889999997427367e-06, 2.9449999998654164e-06, 2.7220000000660605e-06, 3.2499999997881446e-06, 2.9030000003871237e-06, 0.37202558300000055, 3.139000000373926e-06, 2.9719999998789604e-06, 2.763000000349791e-06, 3.0830000001813573e-06, 2.9029999994989453e-06, 3.0840000002640977e-06, 2.570000000368111e-06, 3.389000000630915e-06, 3.278000000328518e-06, 2.986999999343709e-06, 3.055999999723724e-06, 2.7229999997047116e-06, 3.000000000419334e-06, 3.069999999993911e-06, 3.208999999948503e-06, 3.0689999999111706e-06, 2.9440000002267652e-06, 3.0840000002640977e-06, 2.986000000149147e-06, 3.000000000419334e-06, 2.750000000162345e-06, 3.6109999994593522e-06, 2.8329999999243682e-06, 3.055999999723724e-06, 2.931000000039319e-06]</msg>
<status status="PASS" starttime="20201030 11:50:25.596" endtime="20201030 11:50:25.598"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.592" endtime="20201030 11:50:25.599"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.219" endtime="20201030 11:50:25.599"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.218" endtime="20201030 11:50:25.599"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:25.608" endtime="20201030 11:50:25.617"></status>
</kw>
<msg timestamp="20201030 11:50:25.618" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:25.606" endtime="20201030 11:50:25.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:25.620" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:25.619" endtime="20201030 11:50:25.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:25.621" endtime="20201030 11:50:25.623"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.603" endtime="20201030 11:50:25.623"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.601" endtime="20201030 11:50:25.624"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:25.630" endtime="20201030 11:50:25.943"></status>
</kw>
<msg timestamp="20201030 11:50:25.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.666359514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.666362569, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:50:25.629" endtime="20201030 11:50:25.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:25.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.666359514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.666362569, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:50:25.948" endtime="20201030 11:50:25.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:25.958" endtime="20201030 11:50:25.960"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.626" endtime="20201030 11:50:25.960"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.624" endtime="20201030 11:50:25.961"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:25.965" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 2.889000000116937e-06}, {'diff': 3.2500000002322338e-06}, {'diff': 3.0419999998976266e-06}, {'diff': 2.9999999999752447e-06}, {'diff': 2.9309999995952296e-06}, {'diff': 2.749999...</msg>
<status status="PASS" starttime="20201030 11:50:25.961" endtime="20201030 11:50:25.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:25.971" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 2.889000000116937e-06, 3.2500000002322338e-06, 3.0419999998976266e-06, 2.9999999999752447e-06, 2.9309999995952296e-06, 2.7499999997182556e-06, 3.138999999929837e-06, 3.3889999997427367e-0...</msg>
<status status="PASS" starttime="20201030 11:50:25.966" endtime="20201030 11:50:25.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:25.975" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:25.974" endtime="20201030 11:50:25.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:25.977" level="INFO">VALUE: [0, 2.889000000116937e-06, 3.2500000002322338e-06, 3.0419999998976266e-06, 2.9999999999752447e-06, 2.9309999995952296e-06, 2.7499999997182556e-06, 3.138999999929837e-06, 3.3889999997427367e-06, 2.9449999998654164e-06, 2.7220000000660605e-06, 3.2499999997881446e-06, 2.9030000003871237e-06, 0.37202558300000055, 3.139000000373926e-06, 2.9719999998789604e-06, 2.763000000349791e-06, 3.0830000001813573e-06, 2.9029999994989453e-06, 3.0840000002640977e-06, 2.570000000368111e-06, 3.389000000630915e-06, 3.278000000328518e-06, 2.986999999343709e-06, 3.055999999723724e-06, 2.7229999997047116e-06, 3.000000000419334e-06, 3.069999999993911e-06, 3.208999999948503e-06, 3.0689999999111706e-06, 2.9440000002267652e-06, 3.0840000002640977e-06, 2.986000000149147e-06, 3.000000000419334e-06, 2.750000000162345e-06, 3.6109999994593522e-06, 2.8329999999243682e-06, 3.055999999723724e-06, 2.931000000039319e-06, 5.419999995481817e-07, 3.459000000205492e-06, 2.916999999769132e-06, 3.37499999947255e-06, 3.0969999995633657e-06, 3.290999999627786e-06, 3.082999999293179e-06, 3.069999999993911e-06, 2.4869999997179093e-06, 3.360999999202363e-06, 3.069999999993911e-06, 2.555000000015184e-06, 3.1250000001037392e-06, 3.4030000000129235e-06, 3.139000000373926e-06, 3.221999999247771e-06, 2.6950000000525165e-06, 3.2640000000583314e-06, 2.6799999996995894e-06, 2.9450000003095056e-06, 2.805999999466735e-06, 3.139000000373926e-06, 3.1529999997559344e-06, 3.1529999997559344e-06, 3.3469999998203548e-06]</msg>
<status status="PASS" starttime="20201030 11:50:25.976" endtime="20201030 11:50:25.978"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.972" endtime="20201030 11:50:25.978"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.600" endtime="20201030 11:50:25.979"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.600" endtime="20201030 11:50:25.979"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:25.987" endtime="20201030 11:50:25.996"></status>
</kw>
<msg timestamp="20201030 11:50:25.997" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:25.985" endtime="20201030 11:50:25.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:25.999" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:25.998" endtime="20201030 11:50:25.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:26.000" endtime="20201030 11:50:26.002"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.983" endtime="20201030 11:50:26.002"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.981" endtime="20201030 11:50:26.003"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:26.009" endtime="20201030 11:50:26.324"></status>
</kw>
<msg timestamp="20201030 11:50:26.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.038532042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.038535042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:26.008" endtime="20201030 11:50:26.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:26.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.038532042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.038535042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:26.329" endtime="20201030 11:50:26.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:26.340" endtime="20201030 11:50:26.341"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.005" endtime="20201030 11:50:26.342"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.003" endtime="20201030 11:50:26.342"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:26.347" level="INFO">${RESULT} = [{'diff': 3.000000000419334e-06}, {'diff': 3.069999999993911e-06}, {'diff': 3.208999999948503e-06}, {'diff': 3.0689999999111706e-06}, {'diff': 2.9440000002267652e-06}, {'diff': 3.0840000002640977e-06}...</msg>
<status status="PASS" starttime="20201030 11:50:26.343" endtime="20201030 11:50:26.347"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:26.352" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.000000000419334e-06, 3.069999999993911e-06, 3.208999999948503e-06, 3.0689999999111706e-06, 2.9440000002267652e-06, 3.0840000002640977e-06, 2.986000000149147e-06, 3.000000000419334e-06, 2.7...</msg>
<status status="PASS" starttime="20201030 11:50:26.348" endtime="20201030 11:50:26.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:26.356" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:26.355" endtime="20201030 11:50:26.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:26.359" level="INFO">VALUE: [3.000000000419334e-06, 3.069999999993911e-06, 3.208999999948503e-06, 3.0689999999111706e-06, 2.9440000002267652e-06, 3.0840000002640977e-06, 2.986000000149147e-06, 3.000000000419334e-06, 2.750000000162345e-06, 3.6109999994593522e-06, 2.8329999999243682e-06, 3.055999999723724e-06, 2.931000000039319e-06, 5.419999995481817e-07, 3.459000000205492e-06, 2.916999999769132e-06, 3.37499999947255e-06, 3.0969999995633657e-06, 3.290999999627786e-06, 3.082999999293179e-06, 3.069999999993911e-06, 2.4869999997179093e-06, 3.360999999202363e-06, 3.069999999993911e-06, 2.555000000015184e-06, 3.1250000001037392e-06, 3.4030000000129235e-06, 3.139000000373926e-06, 3.221999999247771e-06, 2.6950000000525165e-06, 3.2640000000583314e-06, 2.6799999996995894e-06, 2.9450000003095056e-06, 2.805999999466735e-06, 3.139000000373926e-06, 3.1529999997559344e-06, 3.1529999997559344e-06, 3.3469999998203548e-06, 0.3682343889999995, 2.6109999993195743e-06, 3.1250000001037392e-06, 3.555999999349524e-06, 2.4860000005233474e-06, 3.040999999370797e-06, 3.1529999997559344e-06, 2.9719999998789604e-06, 3.181000000296308e-06, 3.1940000004837543e-06, 3.0139999998013423e-06, 3.235999999517958e-06, 2.666999999512143e-06, 3.459000000205492e-06, 3.416999999394932e-06, 2.819999999736922e-06, 2.6670000004003214e-06, 3.2499999997881446e-06, 2.8609999995765634e-06, 2.6950000000525165e-06, 3.0980000005342845e-06, 3.4580000001227518e-06, 2.570000000368111e-06, 3.235999999517958e-06, 3.097999999646106e-06, 3.37499999947255e-06]</msg>
<status status="PASS" starttime="20201030 11:50:26.358" endtime="20201030 11:50:26.360"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.353" endtime="20201030 11:50:26.360"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.980" endtime="20201030 11:50:26.360"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.979" endtime="20201030 11:50:26.361"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:26.369" endtime="20201030 11:50:26.378"></status>
</kw>
<msg timestamp="20201030 11:50:26.378" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:26.367" endtime="20201030 11:50:26.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:26.381" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:26.380" endtime="20201030 11:50:26.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:26.382" endtime="20201030 11:50:26.384"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.364" endtime="20201030 11:50:26.384"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.363" endtime="20201030 11:50:26.385"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:26.391" endtime="20201030 11:50:26.708"></status>
</kw>
<msg timestamp="20201030 11:50:26.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.411174194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.411176958, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:50:26.390" endtime="20201030 11:50:26.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:26.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.411174194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.411176958, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:50:26.713" endtime="20201030 11:50:26.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:26.723" endtime="20201030 11:50:26.725"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.387" endtime="20201030 11:50:26.725"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.385" endtime="20201030 11:50:26.726"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:26.730" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 3.4030000000129235e-06}, {'diff': 3.139000000373926e-06}, {'diff': 3.221999999247771e-06}, {'diff': 2.6950000000525165e-06}, {'diff': 3.2640000000583314e-06}, {'diff': 2.6799999...</msg>
<status status="PASS" starttime="20201030 11:50:26.726" endtime="20201030 11:50:26.730"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:26.735" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 3.4030000000129235e-06, 3.139000000373926e-06, 3.221999999247771e-06, 2.6950000000525165e-06, 3.2640000000583314e-06, 2.6799999996995894e-06, 2.9450000003095056e-06, 2.805999999466735e-06...</msg>
<status status="PASS" starttime="20201030 11:50:26.731" endtime="20201030 11:50:26.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:26.739" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:26.738" endtime="20201030 11:50:26.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:26.741" level="INFO">VALUE: [0, 3.4030000000129235e-06, 3.139000000373926e-06, 3.221999999247771e-06, 2.6950000000525165e-06, 3.2640000000583314e-06, 2.6799999996995894e-06, 2.9450000003095056e-06, 2.805999999466735e-06, 3.139000000373926e-06, 3.1529999997559344e-06, 3.1529999997559344e-06, 3.3469999998203548e-06, 0.3682343889999995, 2.6109999993195743e-06, 3.1250000001037392e-06, 3.555999999349524e-06, 2.4860000005233474e-06, 3.040999999370797e-06, 3.1529999997559344e-06, 2.9719999998789604e-06, 3.181000000296308e-06, 3.1940000004837543e-06, 3.0139999998013423e-06, 3.235999999517958e-06, 2.666999999512143e-06, 3.459000000205492e-06, 3.416999999394932e-06, 2.819999999736922e-06, 2.6670000004003214e-06, 3.2499999997881446e-06, 2.8609999995765634e-06, 2.6950000000525165e-06, 3.0980000005342845e-06, 3.4580000001227518e-06, 2.570000000368111e-06, 3.235999999517958e-06, 3.097999999646106e-06, 3.37499999947255e-06, 5.410000003536197e-07, 2.8609999995765634e-06, 3.0139999998013423e-06, 2.8609999995765634e-06, 3.0969999995633657e-06, 3.2220000001359494e-06, 2.958999999691514e-06, 2.750000000162345e-06, 3.2079999998657627e-06, 3.4309999996651186e-06, 2.986000000149147e-06, 3.097000000451544e-06, 3.2499999997881446e-06, 2.87499999984675e-06, 3.3889999997427367e-06, 3.2640000000583314e-06, 3.3610000000905416e-06, 2.6670000004003214e-06, 2.7369999999748984e-06, 2.735999999892158e-06, 3.2499999997881446e-06, 3.292000000598705e-06, 2.750000000162345e-06, 3.2220000001359494e-06, 2.889000000116937e-06]</msg>
<status status="PASS" starttime="20201030 11:50:26.740" endtime="20201030 11:50:26.742"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.736" endtime="20201030 11:50:26.742"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.361" endtime="20201030 11:50:26.743"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.361" endtime="20201030 11:50:26.743"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:26.752" endtime="20201030 11:50:26.760"></status>
</kw>
<msg timestamp="20201030 11:50:26.761" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:26.750" endtime="20201030 11:50:26.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:26.763" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:26.762" endtime="20201030 11:50:26.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:26.764" endtime="20201030 11:50:26.766"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.747" endtime="20201030 11:50:26.767"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.745" endtime="20201030 11:50:26.767"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:26.773" endtime="20201030 11:50:27.085"></status>
</kw>
<msg timestamp="20201030 11:50:27.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.779557958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.779561417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:26.772" endtime="20201030 11:50:27.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:27.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.779557958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.779561417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:27.090" endtime="20201030 11:50:27.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:27.100" endtime="20201030 11:50:27.102"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.769" endtime="20201030 11:50:27.102"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.768" endtime="20201030 11:50:27.103"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:27.107" level="INFO">${RESULT} = [{'diff': 3.459000000205492e-06}, {'diff': 3.416999999394932e-06}, {'diff': 2.819999999736922e-06}, {'diff': 2.6670000004003214e-06}, {'diff': 3.2499999997881446e-06}, {'diff': 2.8609999995765634e-06}...</msg>
<status status="PASS" starttime="20201030 11:50:27.104" endtime="20201030 11:50:27.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:27.113" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.459000000205492e-06, 3.416999999394932e-06, 2.819999999736922e-06, 2.6670000004003214e-06, 3.2499999997881446e-06, 2.8609999995765634e-06, 2.6950000000525165e-06, 3.0980000005342845e-06, 3...</msg>
<status status="PASS" starttime="20201030 11:50:27.108" endtime="20201030 11:50:27.113"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:27.117" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:27.116" endtime="20201030 11:50:27.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:27.119" level="INFO">VALUE: [3.459000000205492e-06, 3.416999999394932e-06, 2.819999999736922e-06, 2.6670000004003214e-06, 3.2499999997881446e-06, 2.8609999995765634e-06, 2.6950000000525165e-06, 3.0980000005342845e-06, 3.4580000001227518e-06, 2.570000000368111e-06, 3.235999999517958e-06, 3.097999999646106e-06, 3.37499999947255e-06, 5.410000003536197e-07, 2.8609999995765634e-06, 3.0139999998013423e-06, 2.8609999995765634e-06, 3.0969999995633657e-06, 3.2220000001359494e-06, 2.958999999691514e-06, 2.750000000162345e-06, 3.2079999998657627e-06, 3.4309999996651186e-06, 2.986000000149147e-06, 3.097000000451544e-06, 3.2499999997881446e-06, 2.87499999984675e-06, 3.3889999997427367e-06, 3.2640000000583314e-06, 3.3610000000905416e-06, 2.6670000004003214e-06, 2.7369999999748984e-06, 2.735999999892158e-06, 3.2499999997881446e-06, 3.292000000598705e-06, 2.750000000162345e-06, 3.2220000001359494e-06, 2.889000000116937e-06, 0.37273691600000003, 2.77799999981454e-06, 2.7079999993517845e-06, 2.9719999998789604e-06, 3.2769999993575993e-06, 2.7499999992741664e-06, 3.485999999774947e-06, 2.750000000162345e-06, 3.3330000004383464e-06, 2.986000000149147e-06, 2.889000000116937e-06, 2.555000000015184e-06, 3.1529999997559344e-06, 3.443999999852565e-06, 3.124999999215561e-06, 3.1530000006441128e-06, 2.986000000149147e-06, 3.042000000341716e-06, 3.1659999999433808e-06, 3.0419999994535374e-06, 2.805000000272173e-06, 3.2499999997881446e-06, 3.5699999996197107e-06, 2.596999999937566e-06, 2.9729999999617007e-06, 3.2640000000583314e-06]</msg>
<status status="PASS" starttime="20201030 11:50:27.118" endtime="20201030 11:50:27.120"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.113" endtime="20201030 11:50:27.120"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.744" endtime="20201030 11:50:27.121"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.743" endtime="20201030 11:50:27.121"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:27.129" endtime="20201030 11:50:27.138"></status>
</kw>
<msg timestamp="20201030 11:50:27.138" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:27.127" endtime="20201030 11:50:27.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:27.140" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:27.139" endtime="20201030 11:50:27.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:27.142" endtime="20201030 11:50:27.143"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.125" endtime="20201030 11:50:27.144"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.123" endtime="20201030 11:50:27.144"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:27.151" endtime="20201030 11:50:27.463"></status>
</kw>
<msg timestamp="20201030 11:50:27.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.152352736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.152355778, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:50:27.149" endtime="20201030 11:50:27.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:27.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.152352736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.152355778, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:50:27.468" endtime="20201030 11:50:27.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:27.478" endtime="20201030 11:50:27.480"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.147" endtime="20201030 11:50:27.480"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.145" endtime="20201030 11:50:27.481"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:27.486" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 2.87499999984675e-06}, {'diff': 3.3889999997427367e-06}, {'diff': 3.2640000000583314e-06}, {'diff': 3.3610000000905416e-06}, {'diff': 2.6670000004003214e-06}, {'diff': 2.7369999...</msg>
<status status="PASS" starttime="20201030 11:50:27.482" endtime="20201030 11:50:27.486"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:27.491" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 2.87499999984675e-06, 3.3889999997427367e-06, 3.2640000000583314e-06, 3.3610000000905416e-06, 2.6670000004003214e-06, 2.7369999999748984e-06, 2.735999999892158e-06, 3.2499999997881446e-06...</msg>
<status status="PASS" starttime="20201030 11:50:27.487" endtime="20201030 11:50:27.491"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:27.495" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:27.494" endtime="20201030 11:50:27.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:27.498" level="INFO">VALUE: [0, 2.87499999984675e-06, 3.3889999997427367e-06, 3.2640000000583314e-06, 3.3610000000905416e-06, 2.6670000004003214e-06, 2.7369999999748984e-06, 2.735999999892158e-06, 3.2499999997881446e-06, 3.292000000598705e-06, 2.750000000162345e-06, 3.2220000001359494e-06, 2.889000000116937e-06, 0.37273691600000003, 2.77799999981454e-06, 2.7079999993517845e-06, 2.9719999998789604e-06, 3.2769999993575993e-06, 2.7499999992741664e-06, 3.485999999774947e-06, 2.750000000162345e-06, 3.3330000004383464e-06, 2.986000000149147e-06, 2.889000000116937e-06, 2.555000000015184e-06, 3.1529999997559344e-06, 3.443999999852565e-06, 3.124999999215561e-06, 3.1530000006441128e-06, 2.986000000149147e-06, 3.042000000341716e-06, 3.1659999999433808e-06, 3.0419999994535374e-06, 2.805000000272173e-06, 3.2499999997881446e-06, 3.5699999996197107e-06, 2.596999999937566e-06, 2.9729999999617007e-06, 3.2640000000583314e-06, 5.419999995481817e-07, 2.77799999981454e-06, 3.3059999999807133e-06, 3.3200000002509e-06, 2.8200000006251003e-06, 2.805000000272173e-06, 3.2919999997105265e-06, 3.1940000004837543e-06, 2.9719999998789604e-06, 3.111999999916293e-06, 3.1659999999433808e-06, 2.805000000272173e-06, 3.055000000529162e-06, 2.5689999993971924e-06, 2.916999999769132e-06, 2.6250000004779395e-06, 2.931000000039319e-06, 2.7780000007027184e-06, 3.1389999994857476e-06, 2.9590000005796924e-06, 3.3889999997427367e-06, 3.055000000529162e-06, 3.0139999998013423e-06, 2.7780000007027184e-06, 2.8340000000071086e-06]</msg>
<status status="PASS" starttime="20201030 11:50:27.496" endtime="20201030 11:50:27.498"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.492" endtime="20201030 11:50:27.499"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.122" endtime="20201030 11:50:27.499"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.121" endtime="20201030 11:50:27.499"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:27.507" endtime="20201030 11:50:27.517"></status>
</kw>
<msg timestamp="20201030 11:50:27.517" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:27.505" endtime="20201030 11:50:27.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:27.520" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:27.518" endtime="20201030 11:50:27.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:27.521" endtime="20201030 11:50:27.522"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.503" endtime="20201030 11:50:27.523"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.501" endtime="20201030 11:50:27.523"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:27.531" endtime="20201030 11:50:27.844"></status>
</kw>
<msg timestamp="20201030 11:50:27.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.525234417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.525237528, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:50:27.529" endtime="20201030 11:50:27.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:27.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.525234417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.525237528, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:50:27.849" endtime="20201030 11:50:27.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:27.859" endtime="20201030 11:50:27.860"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.526" endtime="20201030 11:50:27.861"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.524" endtime="20201030 11:50:27.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:27.866" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 3.443999999852565e-06}, {'diff': 3.124999999215561e-06}, {'diff': 3.1530000006441128e-06}, {'diff': 2.986000000149147e-06}, {'diff': 3.042000000341716e-06}, {'diff': 3.165999999...</msg>
<status status="PASS" starttime="20201030 11:50:27.862" endtime="20201030 11:50:27.866"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:27.870" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 3.443999999852565e-06, 3.124999999215561e-06, 3.1530000006441128e-06, 2.986000000149147e-06, 3.042000000341716e-06, 3.1659999999433808e-06, 3.0419999994535374e-06, 2.805000000272173e-06, ...</msg>
<status status="PASS" starttime="20201030 11:50:27.867" endtime="20201030 11:50:27.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:27.875" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:27.873" endtime="20201030 11:50:27.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:27.878" level="INFO">VALUE: [0, 3.443999999852565e-06, 3.124999999215561e-06, 3.1530000006441128e-06, 2.986000000149147e-06, 3.042000000341716e-06, 3.1659999999433808e-06, 3.0419999994535374e-06, 2.805000000272173e-06, 3.2499999997881446e-06, 3.5699999996197107e-06, 2.596999999937566e-06, 2.9729999999617007e-06, 3.2640000000583314e-06, 5.419999995481817e-07, 2.77799999981454e-06, 3.3059999999807133e-06, 3.3200000002509e-06, 2.8200000006251003e-06, 2.805000000272173e-06, 3.2919999997105265e-06, 3.1940000004837543e-06, 2.9719999998789604e-06, 3.111999999916293e-06, 3.1659999999433808e-06, 2.805000000272173e-06, 3.055000000529162e-06, 2.5689999993971924e-06, 2.916999999769132e-06, 2.6250000004779395e-06, 2.931000000039319e-06, 2.7780000007027184e-06, 3.1389999994857476e-06, 2.9590000005796924e-06, 3.3889999997427367e-06, 3.055000000529162e-06, 3.0139999998013423e-06, 2.7780000007027184e-06, 2.8340000000071086e-06, 0.36993581900000017, 3.2220000001359494e-06, 3.2640000000583314e-06, 3.000000000419334e-06, 2.8329999999243682e-06, 2.7219999996219713e-06, 3.055999999723724e-06, 3.151999999673194e-06, 3.513999999427142e-06, 2.485999999635169e-06, 3.278000000328518e-06, 2.7219999996219713e-06, 3.47199999950476e-06, 3.028000000071529e-06, 3.2220000001359494e-06, 2.5980000000203063e-06, 2.624999999589761e-06, 3.028000000071529e-06, 3.042000000341716e-06, 3.3750000003607283e-06, 2.735999999892158e-06, 3.0419999994535374e-06, 3.292000000598705e-06, 3.1529999997559344e-06, 3.1949999996783163e-06]</msg>
<status status="PASS" starttime="20201030 11:50:27.876" endtime="20201030 11:50:27.878"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.871" endtime="20201030 11:50:27.879"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.500" endtime="20201030 11:50:27.879"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.499" endtime="20201030 11:50:27.879"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:27.887" endtime="20201030 11:50:27.897"></status>
</kw>
<msg timestamp="20201030 11:50:27.898" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:27.886" endtime="20201030 11:50:27.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:27.900" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:27.899" endtime="20201030 11:50:27.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:27.901" endtime="20201030 11:50:27.903"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.883" endtime="20201030 11:50:27.903"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.881" endtime="20201030 11:50:27.904"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:27.911" endtime="20201030 11:50:28.223"></status>
</kw>
<msg timestamp="20201030 11:50:28.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.893410917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.893413972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:27.909" endtime="20201030 11:50:28.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:28.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.893410917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.893413972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:28.228" endtime="20201030 11:50:28.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:28.238" endtime="20201030 11:50:28.240"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.906" endtime="20201030 11:50:28.240"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.905" endtime="20201030 11:50:28.240"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:28.245" level="INFO">${RESULT} = [{'diff': 3.055000000529162e-06}, {'diff': 2.5689999993971924e-06}, {'diff': 2.916999999769132e-06}, {'diff': 2.6250000004779395e-06}, {'diff': 2.931000000039319e-06}, {'diff': 2.7780000007027184e-06}...</msg>
<status status="PASS" starttime="20201030 11:50:28.241" endtime="20201030 11:50:28.245"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:28.250" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.055000000529162e-06, 2.5689999993971924e-06, 2.916999999769132e-06, 2.6250000004779395e-06, 2.931000000039319e-06, 2.7780000007027184e-06, 3.1389999994857476e-06, 2.9590000005796924e-06, 3...</msg>
<status status="PASS" starttime="20201030 11:50:28.246" endtime="20201030 11:50:28.250"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:28.255" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:28.253" endtime="20201030 11:50:28.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:28.257" level="INFO">VALUE: [3.055000000529162e-06, 2.5689999993971924e-06, 2.916999999769132e-06, 2.6250000004779395e-06, 2.931000000039319e-06, 2.7780000007027184e-06, 3.1389999994857476e-06, 2.9590000005796924e-06, 3.3889999997427367e-06, 3.055000000529162e-06, 3.0139999998013423e-06, 2.7780000007027184e-06, 2.8340000000071086e-06, 0.36993581900000017, 3.2220000001359494e-06, 3.2640000000583314e-06, 3.000000000419334e-06, 2.8329999999243682e-06, 2.7219999996219713e-06, 3.055999999723724e-06, 3.151999999673194e-06, 3.513999999427142e-06, 2.485999999635169e-06, 3.278000000328518e-06, 2.7219999996219713e-06, 3.47199999950476e-06, 3.028000000071529e-06, 3.2220000001359494e-06, 2.5980000000203063e-06, 2.624999999589761e-06, 3.028000000071529e-06, 3.042000000341716e-06, 3.3750000003607283e-06, 2.735999999892158e-06, 3.0419999994535374e-06, 3.292000000598705e-06, 3.1529999997559344e-06, 3.1949999996783163e-06, 0.36920713800000016, 2.3060000007291137e-06, 3.2499999997881446e-06, 3.5000000000451337e-06, 2.9719999998789604e-06, 2.8610000004647418e-06, 3.2919999997105265e-06, 2.5699999994799327e-06, 2.819999999736922e-06, 2.9999999995311555e-06, 2.9579999996087736e-06, 3.1109999998335525e-06, 3.332999999550168e-06, 3.1250000001037392e-06, 3.111999999916293e-06, 3.000000000419334e-06, 3.0830000001813573e-06, 3.3610000000905416e-06, 2.638999999859948e-06, 3.2640000000583314e-06, 3.055999999723724e-06, 3.193999999595576e-06, 2.9029999994989453e-06, 2.693999999969776e-06, 3.278000000328518e-06, 2.735999999892158e-06]</msg>
<status status="PASS" starttime="20201030 11:50:28.256" endtime="20201030 11:50:28.258"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.251" endtime="20201030 11:50:28.258"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.880" endtime="20201030 11:50:28.259"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.880" endtime="20201030 11:50:28.259"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:28.267" endtime="20201030 11:50:28.276"></status>
</kw>
<msg timestamp="20201030 11:50:28.276" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:28.265" endtime="20201030 11:50:28.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:28.279" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:28.277" endtime="20201030 11:50:28.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:28.280" endtime="20201030 11:50:28.281"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.262" endtime="20201030 11:50:28.282"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.261" endtime="20201030 11:50:28.282"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:28.289" endtime="20201030 11:50:28.602"></status>
</kw>
<msg timestamp="20201030 11:50:28.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.263498722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 6.263501597, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:50:28.288" endtime="20201030 11:50:28.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:28.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.263498722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 6.263501597, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:50:28.607" endtime="20201030 11:50:28.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:28.617" endtime="20201030 11:50:28.619"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.285" endtime="20201030 11:50:28.619"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.283" endtime="20201030 11:50:28.620"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:28.624" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 3.028000000071529e-06}, {'diff': 3.2220000001359494e-06}, {'diff': 2.5980000000203063e-06}, {'diff': 2.624999999589761e-06}, {'diff': 3.028000000071529e-06}, {'diff': 3.04200000...</msg>
<status status="PASS" starttime="20201030 11:50:28.620" endtime="20201030 11:50:28.624"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:28.629" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 3.028000000071529e-06, 3.2220000001359494e-06, 2.5980000000203063e-06, 2.624999999589761e-06, 3.028000000071529e-06, 3.042000000341716e-06, 3.3750000003607283e-06, 2.735999999892158e-06, ...</msg>
<status status="PASS" starttime="20201030 11:50:28.625" endtime="20201030 11:50:28.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:28.633" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:28.632" endtime="20201030 11:50:28.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:28.636" level="INFO">VALUE: [0, 3.028000000071529e-06, 3.2220000001359494e-06, 2.5980000000203063e-06, 2.624999999589761e-06, 3.028000000071529e-06, 3.042000000341716e-06, 3.3750000003607283e-06, 2.735999999892158e-06, 3.0419999994535374e-06, 3.292000000598705e-06, 3.1529999997559344e-06, 3.1949999996783163e-06, 0.36920713800000016, 2.3060000007291137e-06, 3.2499999997881446e-06, 3.5000000000451337e-06, 2.9719999998789604e-06, 2.8610000004647418e-06, 3.2919999997105265e-06, 2.5699999994799327e-06, 2.819999999736922e-06, 2.9999999995311555e-06, 2.9579999996087736e-06, 3.1109999998335525e-06, 3.332999999550168e-06, 3.1250000001037392e-06, 3.111999999916293e-06, 3.000000000419334e-06, 3.0830000001813573e-06, 3.3610000000905416e-06, 2.638999999859948e-06, 3.2640000000583314e-06, 3.055999999723724e-06, 3.193999999595576e-06, 2.9029999994989453e-06, 2.693999999969776e-06, 3.278000000328518e-06, 2.735999999892158e-06, 5.409999994654413e-07, 3.0560000006119026e-06, 3.290999999627786e-06, 2.9720000007671388e-06, 2.9299999999565784e-06, 3.167000000026121e-06, 3.4030000000129235e-06, 3.47199999950476e-06, 2.638999999859948e-06, 3.042000000341716e-06, 3.6530000002699126e-06, 3.082999999293179e-06, 2.485999999635169e-06, 2.916999999769132e-06, 3.2499999997881446e-06, 2.805000000272173e-06, 3.0830000001813573e-06, 3.097999999646106e-06, 3.0689999999111706e-06, 3.0840000002640977e-06, 2.638999999859948e-06, 3.1250000001037392e-06, 2.6950000000525165e-06, 2.638999999859948e-06, 2.9870000002318875e-06]</msg>
<status status="PASS" starttime="20201030 11:50:28.634" endtime="20201030 11:50:28.636"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.630" endtime="20201030 11:50:28.637"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.259" endtime="20201030 11:50:28.637"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.259" endtime="20201030 11:50:28.637"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.139" endtime="20201030 11:50:28.637"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:50:21.064" endtime="20201030 11:50:28.638" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:28.645" endtime="20201030 11:50:28.665"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.644" endtime="20201030 11:50:28.665"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:28.679" endtime="20201030 11:50:28.699"></status>
</kw>
<msg timestamp="20201030 11:50:28.699" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:28.678" endtime="20201030 11:50:28.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:28.702" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:28.700" endtime="20201030 11:50:28.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:28.705" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:50:28.703" endtime="20201030 11:50:28.705"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:28.675" endtime="20201030 11:50:28.706"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:28.673" endtime="20201030 11:50:28.706"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.671" endtime="20201030 11:50:28.707"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:50:28.711" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:50:28.710" endtime="20201030 11:50:28.711"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.708" endtime="20201030 11:50:28.711"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.671" endtime="20201030 11:50:28.711"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.670" endtime="20201030 11:50:28.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:28.712" endtime="20201030 11:50:28.714"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.668" endtime="20201030 11:50:28.714"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.666" endtime="20201030 11:50:28.715"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.643" endtime="20201030 11:50:28.715"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:28.724" endtime="20201030 11:50:28.736"></status>
</kw>
<msg timestamp="20201030 11:50:28.736" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:28.722" endtime="20201030 11:50:28.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:28.739" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:28.737" endtime="20201030 11:50:28.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:28.740" endtime="20201030 11:50:28.741"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.720" endtime="20201030 11:50:28.742"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.718" endtime="20201030 11:50:28.742"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:28.750" endtime="20201030 11:50:29.039"></status>
</kw>
<msg timestamp="20201030 11:50:29.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069524972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.06952625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:28.748" endtime="20201030 11:50:29.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:29.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069524972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.06952625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:29.043" endtime="20201030 11:50:29.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:29.052" endtime="20201030 11:50:29.053"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.745" endtime="20201030 11:50:29.054"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.743" endtime="20201030 11:50:29.054"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:29.059" level="INFO">${RESULT} = [{'diff': 1.277999999993451e-06}, {'diff': 1.096999999991577e-06}, {'diff': 1.0980000000049284e-06}, {'diff': 1.0980000000049284e-06}, {'diff': 1.054999999999806e-06}, {'diff': 1.1109999999980857e-06}...</msg>
<status status="PASS" starttime="20201030 11:50:29.055" endtime="20201030 11:50:29.059"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:29.063" level="INFO">${OVERHEAD} = {'diff': [1.277999999993451e-06, 1.096999999991577e-06, 1.0980000000049284e-06, 1.0980000000049284e-06, 1.054999999999806e-06, 1.1109999999980857e-06, 1.0839999999984196e-06, 1.1109999999980857e-06, 1...</msg>
<status status="PASS" starttime="20201030 11:50:29.060" endtime="20201030 11:50:29.063"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:29.067" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:29.066" endtime="20201030 11:50:29.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:29.069" level="INFO">VALUE: [1.277999999993451e-06, 1.096999999991577e-06, 1.0980000000049284e-06, 1.0980000000049284e-06, 1.054999999999806e-06, 1.1109999999980857e-06, 1.0839999999984196e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0970000000054547e-06, 1.1250000000045945e-06, 1.1119999999975594e-06, 1.1109999999980857e-06, 1.0970000000054547e-06, 1.1249999999907168e-06, 1.1249999999907168e-06, 1.1669999999963654e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1110000000119635e-06, 1.1390000000111034e-06, 1.1389999999972256e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.096999999991577e-06, 1.0970000000054547e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1119999999975594e-06, 1.1109999999980857e-06, 1.1110000000119635e-06, 1.1250000000045945e-06, 1.1390000000111034e-06, 1.0839999999984196e-06, 1.1109999999980857e-06, 1.1110000000119635e-06, 1.1109999999980857e-06, 1.1529999999898566e-06, 1.1109999999980857e-06, 1.1530000000037344e-06, 1.1109999999980857e-06, 1.1119999999975594e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0970000000054547e-06, 1.1109999999980857e-06, 1.1389999999972256e-06, 1.0559999999992797e-06]</msg>
<status status="PASS" starttime="20201030 11:50:29.068" endtime="20201030 11:50:29.070"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.064" endtime="20201030 11:50:29.070"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.717" endtime="20201030 11:50:29.071"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.716" endtime="20201030 11:50:29.071"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:29.080" endtime="20201030 11:50:29.091"></status>
</kw>
<msg timestamp="20201030 11:50:29.091" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:29.077" endtime="20201030 11:50:29.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:29.094" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:29.092" endtime="20201030 11:50:29.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:29.095" endtime="20201030 11:50:29.097"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.075" endtime="20201030 11:50:29.097"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.073" endtime="20201030 11:50:29.098"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:29.104" endtime="20201030 11:50:29.405"></status>
</kw>
<msg timestamp="20201030 11:50:29.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069618972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069620083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:29.102" endtime="20201030 11:50:29.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:29.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069618972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069620083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:29.410" endtime="20201030 11:50:29.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:29.420" endtime="20201030 11:50:29.422"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.100" endtime="20201030 11:50:29.422"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.098" endtime="20201030 11:50:29.423"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:29.427" level="INFO">${RESULT} = [{'diff': 1.1109999999980857e-06}, {'diff': 1.1110000000119635e-06}, {'diff': 1.1109999999980857e-06}, {'diff': 1.1529999999898566e-06}, {'diff': 1.1109999999980857e-06}, {'diff': 1.1530000000037344e-...</msg>
<status status="PASS" starttime="20201030 11:50:29.424" endtime="20201030 11:50:29.436"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:29.442" level="INFO">${OVERHEAD} = {'diff': [1.1109999999980857e-06, 1.1110000000119635e-06, 1.1109999999980857e-06, 1.1529999999898566e-06, 1.1109999999980857e-06, 1.1530000000037344e-06, 1.1109999999980857e-06, 1.1119999999975594e-06...</msg>
<status status="PASS" starttime="20201030 11:50:29.437" endtime="20201030 11:50:29.442"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:29.446" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:29.445" endtime="20201030 11:50:29.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:29.449" level="INFO">VALUE: [1.1109999999980857e-06, 1.1110000000119635e-06, 1.1109999999980857e-06, 1.1529999999898566e-06, 1.1109999999980857e-06, 1.1530000000037344e-06, 1.1109999999980857e-06, 1.1119999999975594e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0970000000054547e-06, 1.1109999999980857e-06, 1.1389999999972256e-06, 1.0559999999992797e-06, 1.346999999984888e-06, 1.0830000000128237e-06, 1.1109999999980857e-06, 1.0970000000054547e-06, 1.112000000025315e-06, 1.1109999999980857e-06, 1.0409999999794195e-06, 1.1109999999980857e-06, 1.0689999999646815e-06, 1.1109999999980857e-06, 1.112000000025315e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1249999999907168e-06, 1.1389999999833478e-06, 1.0979999999771728e-06, 1.1110000000535969e-06, 1.1109999999980857e-06, 1.1249999999907168e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0979999999771728e-06, 1.0970000000054547e-06, 1.139000000038859e-06, 1.1109999999980857e-06, 1.0970000000054547e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0830000000128237e-06, 1.0689999999646815e-06, 1.1109999999980857e-06, 1.0970000000054547e-06, 1.1109999999980857e-06, 1.098000000032684e-06, 1.0830000000128237e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0970000000054547e-06, 1.1249999999907168e-06, 1.0969999999499436e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0970000000054547e-06, 1.1249999999907168e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0689999999646815e-06]</msg>
<status status="PASS" starttime="20201030 11:50:29.448" endtime="20201030 11:50:29.449"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.443" endtime="20201030 11:50:29.450"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.072" endtime="20201030 11:50:29.450"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.071" endtime="20201030 11:50:29.451"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:29.458" endtime="20201030 11:50:29.470"></status>
</kw>
<msg timestamp="20201030 11:50:29.470" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:29.457" endtime="20201030 11:50:29.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:29.473" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:29.471" endtime="20201030 11:50:29.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:29.474" endtime="20201030 11:50:29.475"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.454" endtime="20201030 11:50:29.476"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.453" endtime="20201030 11:50:29.476"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:29.483" endtime="20201030 11:50:29.776"></status>
</kw>
<msg timestamp="20201030 11:50:29.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.416163736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.416164819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:29.481" endtime="20201030 11:50:29.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:29.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.416163736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.416164819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:29.781" endtime="20201030 11:50:29.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:29.791" endtime="20201030 11:50:29.792"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.479" endtime="20201030 11:50:29.793"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.477" endtime="20201030 11:50:29.793"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:29.798" level="INFO">${RESULT} = [{'diff': 1.0830000000128237e-06}, {'diff': 1.1109999999980857e-06}, {'diff': 1.1109999999980857e-06}, {'diff': 1.0970000000054547e-06}, {'diff': 1.1249999999907168e-06}, {'diff': 1.0969999999499436e-...</msg>
<status status="PASS" starttime="20201030 11:50:29.794" endtime="20201030 11:50:29.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:29.805" level="INFO">${OVERHEAD} = {'diff': [1.0830000000128237e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0970000000054547e-06, 1.1249999999907168e-06, 1.0969999999499436e-06, 1.1109999999980857e-06, 1.1109999999980857e-06...</msg>
<status status="PASS" starttime="20201030 11:50:29.799" endtime="20201030 11:50:29.806"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:29.810" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:29.809" endtime="20201030 11:50:29.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:29.812" level="INFO">VALUE: [1.0830000000128237e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0970000000054547e-06, 1.1249999999907168e-06, 1.0969999999499436e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0970000000054547e-06, 1.1249999999907168e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0689999999646815e-06, 1.2920000000971044e-06, 1.0280000000140177e-06, 1.0969999999499436e-06, 1.1109999999980857e-06, 1.0830000000128237e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1119999999698038e-06, 1.0699999999363996e-06, 1.1120000000808261e-06, 1.0969999999499436e-06, 1.0970000000609659e-06, 1.1109999999980857e-06, 1.15300000003149e-06, 1.0970000000609659e-06, 1.0689999999646815e-06, 1.0970000000609659e-06, 1.125000000046228e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0839999999845418e-06, 1.125000000046228e-06, 1.098000000032684e-06, 1.1109999999980857e-06, 1.0699999999363996e-06, 1.0839999999845418e-06, 1.0979999999216616e-06, 1.1389999999833478e-06, 1.0559999999992797e-06, 1.0839999999845418e-06, 1.1109999999980857e-06, 1.0969999999499436e-06, 1.1519999999487496e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0969999999499436e-06, 1.1109999999980857e-06, 1.0969999999499436e-06, 1.0969999999499436e-06, 1.0970000000609659e-06, 1.0420000000621599e-06, 1.098000000032684e-06, 1.0969999999499436e-06, 1.0970000000609659e-06, 1.0970000000609659e-06, 1.1109999999980857e-06, 1.0969999999499436e-06, 1.1389999999833478e-06, 1.0830000000128237e-06, 1.0969999999499436e-06]</msg>
<status status="PASS" starttime="20201030 11:50:29.811" endtime="20201030 11:50:29.813"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.806" endtime="20201030 11:50:29.813"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.451" endtime="20201030 11:50:29.814"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.451" endtime="20201030 11:50:29.814"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:29.822" endtime="20201030 11:50:29.833"></status>
</kw>
<msg timestamp="20201030 11:50:29.833" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:29.820" endtime="20201030 11:50:29.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:29.836" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:29.834" endtime="20201030 11:50:29.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:29.837" endtime="20201030 11:50:29.839"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.818" endtime="20201030 11:50:29.839"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.816" endtime="20201030 11:50:29.839"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:29.846" endtime="20201030 11:50:30.151"></status>
</kw>
<msg timestamp="20201030 11:50:30.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.784926486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.784927597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:29.844" endtime="20201030 11:50:30.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:30.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.784926486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.784927597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:30.157" endtime="20201030 11:50:30.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:30.167" endtime="20201030 11:50:30.168"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.842" endtime="20201030 11:50:30.169"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.840" endtime="20201030 11:50:30.170"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:30.174" level="INFO">${RESULT} = [{'diff': 1.1109999999980857e-06}, {'diff': 1.0969999999499436e-06}, {'diff': 1.0969999999499436e-06}, {'diff': 1.0970000000609659e-06}, {'diff': 1.0420000000621599e-06}, {'diff': 1.098000000032684e-0...</msg>
<status status="PASS" starttime="20201030 11:50:30.170" endtime="20201030 11:50:30.174"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:30.179" level="INFO">${OVERHEAD} = {'diff': [1.1109999999980857e-06, 1.0969999999499436e-06, 1.0969999999499436e-06, 1.0970000000609659e-06, 1.0420000000621599e-06, 1.098000000032684e-06, 1.0969999999499436e-06, 1.0970000000609659e-06,...</msg>
<status status="PASS" starttime="20201030 11:50:30.175" endtime="20201030 11:50:30.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:30.183" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:30.182" endtime="20201030 11:50:30.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:30.186" level="INFO">VALUE: [1.1109999999980857e-06, 1.0969999999499436e-06, 1.0969999999499436e-06, 1.0970000000609659e-06, 1.0420000000621599e-06, 1.098000000032684e-06, 1.0969999999499436e-06, 1.0970000000609659e-06, 1.0970000000609659e-06, 1.1109999999980857e-06, 1.0969999999499436e-06, 1.1389999999833478e-06, 1.0830000000128237e-06, 1.0969999999499436e-06, 1.3329999999367459e-06, 1.098000000032684e-06, 1.0970000001719882e-06, 1.098000000032684e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0970000001719882e-06, 1.0969999999499436e-06, 1.1109999999980857e-06, 1.0829999999018014e-06, 1.1120000000808261e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.098000000032684e-06, 1.0690000000757038e-06, 1.1109999999980857e-06, 1.098000000032684e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0969999999499436e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.125000000046228e-06, 1.1109999999980857e-06, 1.0550000000275617e-06, 1.083000000123846e-06, 1.098000000032684e-06, 1.1389999998723255e-06, 1.125000000046228e-06, 1.0969999999499436e-06, 1.0970000001719882e-06, 1.098000000032684e-06, 1.0689999998536592e-06, 1.098000000032684e-06, 1.0969999999499436e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.125000000046228e-06, 1.0969999999499436e-06, 1.1530000001425122e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0969999999499436e-06, 1.098000000032684e-06, 1.0550000000275617e-06, 1.0970000001719882e-06, 1.1109999999980857e-06, 1.1109999999980857e-06]</msg>
<status status="PASS" starttime="20201030 11:50:30.184" endtime="20201030 11:50:30.186"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.179" endtime="20201030 11:50:30.186"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.815" endtime="20201030 11:50:30.187"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.814" endtime="20201030 11:50:30.187"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:30.196" endtime="20201030 11:50:30.207"></status>
</kw>
<msg timestamp="20201030 11:50:30.207" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:30.194" endtime="20201030 11:50:30.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:30.210" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:30.208" endtime="20201030 11:50:30.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:30.211" endtime="20201030 11:50:30.213"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.191" endtime="20201030 11:50:30.213"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.189" endtime="20201030 11:50:30.214"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:30.220" endtime="20201030 11:50:30.524"></status>
</kw>
<msg timestamp="20201030 11:50:30.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.138189931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.138191042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:30.218" endtime="20201030 11:50:30.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:30.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.138189931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.138191042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:30.529" endtime="20201030 11:50:30.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:30.540" endtime="20201030 11:50:30.541"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.216" endtime="20201030 11:50:30.542"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.214" endtime="20201030 11:50:30.542"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:30.547" level="INFO">${RESULT} = [{'diff': 1.1109999999980857e-06}, {'diff': 1.1109999999980857e-06}, {'diff': 1.125000000046228e-06}, {'diff': 1.0969999999499436e-06}, {'diff': 1.1530000001425122e-06}, {'diff': 1.1109999999980857e-0...</msg>
<status status="PASS" starttime="20201030 11:50:30.543" endtime="20201030 11:50:30.547"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:30.552" level="INFO">${OVERHEAD} = {'diff': [1.1109999999980857e-06, 1.1109999999980857e-06, 1.125000000046228e-06, 1.0969999999499436e-06, 1.1530000001425122e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06,...</msg>
<status status="PASS" starttime="20201030 11:50:30.548" endtime="20201030 11:50:30.552"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:30.556" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:30.555" endtime="20201030 11:50:30.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:30.559" level="INFO">VALUE: [1.1109999999980857e-06, 1.1109999999980857e-06, 1.125000000046228e-06, 1.0969999999499436e-06, 1.1530000001425122e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0969999999499436e-06, 1.098000000032684e-06, 1.0550000000275617e-06, 1.0970000001719882e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.305999999923202e-06, 1.125000000046228e-06, 1.1109999999980857e-06, 1.0419999998401153e-06, 1.125000000046228e-06, 1.0699999999363996e-06, 1.1109999999980857e-06, 1.0969999999499436e-06, 1.13900000009437e-06, 1.0969999999499436e-06, 1.0839999999845418e-06, 1.098000000032684e-06, 1.1529999999204676e-06, 1.125000000046228e-06, 1.083000000123846e-06, 1.125000000046228e-06, 1.054999999805517e-06, 1.098000000032684e-06, 1.1380000000116297e-06, 1.1109999999980857e-06, 1.0550000000275617e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0840000002065864e-06, 1.125000000046228e-06, 1.1109999999980857e-06, 1.0969999999499436e-06, 1.1109999999980857e-06, 1.0969999999499436e-06, 1.1529999999204676e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.083000000123846e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0839999999845418e-06, 1.0969999999499436e-06, 1.098000000032684e-06, 1.083000000123846e-06, 1.1109999999980857e-06, 1.1389999998723255e-06, 1.1109999999980857e-06, 1.0969999999499436e-06, 1.0839999999845418e-06, 1.1109999999980857e-06, 1.1530000001425122e-06]</msg>
<status status="PASS" starttime="20201030 11:50:30.557" endtime="20201030 11:50:30.559"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.553" endtime="20201030 11:50:30.560"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.188" endtime="20201030 11:50:30.560"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.187" endtime="20201030 11:50:30.560"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:30.568" endtime="20201030 11:50:30.580"></status>
</kw>
<msg timestamp="20201030 11:50:30.581" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:30.567" endtime="20201030 11:50:30.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:30.583" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:30.582" endtime="20201030 11:50:30.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:30.584" endtime="20201030 11:50:30.586"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.564" endtime="20201030 11:50:30.586"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.562" endtime="20201030 11:50:30.587"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:30.593" endtime="20201030 11:50:30.896"></status>
</kw>
<msg timestamp="20201030 11:50:30.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.501287764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.501288875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:30.592" endtime="20201030 11:50:30.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:30.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.501287764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.501288875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:30.901" endtime="20201030 11:50:30.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:30.912" endtime="20201030 11:50:30.914"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.589" endtime="20201030 11:50:30.914"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.587" endtime="20201030 11:50:30.915"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:30.919" level="INFO">${RESULT} = [{'diff': 1.1109999999980857e-06}, {'diff': 1.1109999999980857e-06}, {'diff': 1.1109999999980857e-06}, {'diff': 1.0839999999845418e-06}, {'diff': 1.0969999999499436e-06}, {'diff': 1.098000000032684e-0...</msg>
<status status="PASS" starttime="20201030 11:50:30.915" endtime="20201030 11:50:30.919"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:30.925" level="INFO">${OVERHEAD} = {'diff': [1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0839999999845418e-06, 1.0969999999499436e-06, 1.098000000032684e-06, 1.083000000123846e-06, 1.1109999999980857e-06, ...</msg>
<status status="PASS" starttime="20201030 11:50:30.920" endtime="20201030 11:50:30.925"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:30.929" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:30.928" endtime="20201030 11:50:30.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:30.931" level="INFO">VALUE: [1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0839999999845418e-06, 1.0969999999499436e-06, 1.098000000032684e-06, 1.083000000123846e-06, 1.1109999999980857e-06, 1.1389999998723255e-06, 1.1109999999980857e-06, 1.0969999999499436e-06, 1.0839999999845418e-06, 1.1109999999980857e-06, 1.1530000001425122e-06, 1.2629999999180797e-06, 1.098000000032684e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1110000002201303e-06, 1.1799999999340116e-06, 1.0969999999499436e-06, 1.0979999998106393e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0969999999499436e-06, 1.1109999999980857e-06, 1.0970000001719882e-06, 1.1389999998723255e-06, 1.1109999999980857e-06, 1.0969999999499436e-06, 1.0970000001719882e-06, 1.125000000046228e-06, 1.0969999999499436e-06, 1.0969999999499436e-06, 1.0969999999499436e-06, 1.0969999999499436e-06, 1.1380000000116297e-06, 1.1109999999980857e-06, 1.1520000000597719e-06, 1.1109999999980857e-06, 1.0970000001719882e-06, 1.098000000032684e-06, 1.1109999999980857e-06, 1.1529999999204676e-06, 1.0839999999845418e-06, 1.1109999999980857e-06, 1.125000000046228e-06, 1.0420000000621599e-06, 1.1109999999980857e-06, 1.098000000032684e-06, 1.0970000001719882e-06, 1.0969999999499436e-06, 1.0969999999499436e-06, 1.0970000001719882e-06, 1.0970000001719882e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.125000000046228e-06, 1.0970000001719882e-06, 1.1109999999980857e-06, 1.0969999999499436e-06, 1.0979999998106393e-06, 1.1109999999980857e-06, 1.0969999999499436e-06]</msg>
<status status="PASS" starttime="20201030 11:50:30.930" endtime="20201030 11:50:30.932"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.925" endtime="20201030 11:50:30.932"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.561" endtime="20201030 11:50:30.933"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.561" endtime="20201030 11:50:30.933"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:30.941" endtime="20201030 11:50:30.952"></status>
</kw>
<msg timestamp="20201030 11:50:30.953" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:30.939" endtime="20201030 11:50:30.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:30.955" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:30.954" endtime="20201030 11:50:30.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:30.956" endtime="20201030 11:50:30.958"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.937" endtime="20201030 11:50:30.958"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.935" endtime="20201030 11:50:30.959"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:30.966" endtime="20201030 11:50:31.268"></status>
</kw>
<msg timestamp="20201030 11:50:31.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.863266097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.863267194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:30.964" endtime="20201030 11:50:31.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:31.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.863266097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.863267194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:31.273" endtime="20201030 11:50:31.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:31.283" endtime="20201030 11:50:31.285"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.961" endtime="20201030 11:50:31.285"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.959" endtime="20201030 11:50:31.286"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:31.290" level="INFO">${RESULT} = [{'diff': 1.0970000001719882e-06}, {'diff': 1.0969999999499436e-06}, {'diff': 1.0969999999499436e-06}, {'diff': 1.0970000001719882e-06}, {'diff': 1.0970000001719882e-06}, {'diff': 1.1109999999980857e-...</msg>
<status status="PASS" starttime="20201030 11:50:31.287" endtime="20201030 11:50:31.290"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:31.295" level="INFO">${OVERHEAD} = {'diff': [1.0970000001719882e-06, 1.0969999999499436e-06, 1.0969999999499436e-06, 1.0970000001719882e-06, 1.0970000001719882e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.125000000046228e-06,...</msg>
<status status="PASS" starttime="20201030 11:50:31.291" endtime="20201030 11:50:31.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:31.299" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:31.298" endtime="20201030 11:50:31.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:31.302" level="INFO">VALUE: [1.0970000001719882e-06, 1.0969999999499436e-06, 1.0969999999499436e-06, 1.0970000001719882e-06, 1.0970000001719882e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.125000000046228e-06, 1.0970000001719882e-06, 1.1109999999980857e-06, 1.0969999999499436e-06, 1.0979999998106393e-06, 1.1109999999980857e-06, 1.0969999999499436e-06, 1.2640000002228646e-06, 1.0829999999018014e-06, 1.096999999727899e-06, 1.0829999999018014e-06, 1.1120000000808261e-06, 1.1109999999980857e-06, 1.0829999999018014e-06, 1.069999999714355e-06, 1.13900000009437e-06, 1.0970000001719882e-06, 1.0839999999845418e-06, 1.1109999999980857e-06, 1.1529999999204676e-06, 1.0970000001719882e-06, 1.1250000002682725e-06, 1.0980000002547285e-06, 1.0970000001719882e-06, 1.096999999727899e-06, 1.1249999998241833e-06, 1.096999999727899e-06, 1.1249999998241833e-06, 1.1109999999980857e-06, 1.1529999999204676e-06, 1.1109999999980857e-06, 1.1529999999204676e-06, 1.1109999999980857e-06, 1.13900000009437e-06, 1.1109999999980857e-06, 1.1529999999204676e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0970000001719882e-06, 1.1530000003645569e-06, 1.1109999999980857e-06, 1.0970000001719882e-06, 1.0829999999018014e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1380000000116297e-06, 1.0829999999018014e-06, 1.096999999727899e-06, 1.0970000001719882e-06, 1.027999999791973e-06, 1.1109999999980857e-06, 1.1529999999204676e-06, 1.1109999999980857e-06, 1.096999999727899e-06, 1.096999999727899e-06, 1.1529999999204676e-06]</msg>
<status status="PASS" starttime="20201030 11:50:31.300" endtime="20201030 11:50:31.302"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.296" endtime="20201030 11:50:31.303"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.934" endtime="20201030 11:50:31.303"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.933" endtime="20201030 11:50:31.303"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:31.312" endtime="20201030 11:50:31.324"></status>
</kw>
<msg timestamp="20201030 11:50:31.324" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:31.310" endtime="20201030 11:50:31.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:31.327" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:31.325" endtime="20201030 11:50:31.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:31.328" endtime="20201030 11:50:31.330"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.308" endtime="20201030 11:50:31.330"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.305" endtime="20201030 11:50:31.331"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:31.337" endtime="20201030 11:50:31.647"></status>
</kw>
<msg timestamp="20201030 11:50:31.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.225775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.225776083, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:50:31.336" endtime="20201030 11:50:31.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:31.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.225775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.225776083, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:50:31.652" endtime="20201030 11:50:31.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:31.662" endtime="20201030 11:50:31.664"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.333" endtime="20201030 11:50:31.665"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.331" endtime="20201030 11:50:31.665"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:31.670" level="INFO">${RESULT} = [{'diff': 1.0829999999018014e-06}, {'diff': 1.1109999999980857e-06}, {'diff': 1.1109999999980857e-06}, {'diff': 1.1380000000116297e-06}, {'diff': 1.0829999999018014e-06}, {'diff': 1.096999999727899e-0...</msg>
<status status="PASS" starttime="20201030 11:50:31.666" endtime="20201030 11:50:31.670"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:31.675" level="INFO">${OVERHEAD} = {'diff': [1.0829999999018014e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1380000000116297e-06, 1.0829999999018014e-06, 1.096999999727899e-06, 1.0970000001719882e-06, 1.027999999791973e-06, ...</msg>
<status status="PASS" starttime="20201030 11:50:31.671" endtime="20201030 11:50:31.675"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:31.679" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:31.678" endtime="20201030 11:50:31.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:31.682" level="INFO">VALUE: [1.0829999999018014e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1380000000116297e-06, 1.0829999999018014e-06, 1.096999999727899e-06, 1.0970000001719882e-06, 1.027999999791973e-06, 1.1109999999980857e-06, 1.1529999999204676e-06, 1.1109999999980857e-06, 1.096999999727899e-06, 1.096999999727899e-06, 1.1529999999204676e-06, 1.2780000000489622e-06, 1.1669999997465652e-06, 1.1249999998241833e-06, 1.1109999999980857e-06, 1.096999999727899e-06, 1.0830000003458906e-06, 1.0970000001719882e-06, 1.0970000001719882e-06, 1.1109999999980857e-06, 1.069999999714355e-06, 1.0970000001719882e-06, 1.0970000001719882e-06, 1.1109999999980857e-06, 1.0979999998106393e-06, 1.1109999999980857e-06, 1.096999999727899e-06, 1.096999999727899e-06, 1.1109999999980857e-06, 1.0409999999794195e-06, 1.0829999999018014e-06, 1.0970000001719882e-06, 1.1529999999204676e-06, 1.096999999727899e-06, 1.0970000001719882e-06, 1.0970000001719882e-06, 1.1109999999980857e-06, 1.0970000001719882e-06, 1.0830000003458906e-06, 1.0970000001719882e-06, 1.1109999999980857e-06, 1.0689999996316146e-06, 1.0829999999018014e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.069999999714355e-06, 1.1109999999980857e-06, 1.0839999999845418e-06, 1.0970000001719882e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0979999998106393e-06, 1.0979999998106393e-06, 1.0690000000757038e-06, 1.1109999999980857e-06, 1.0420000000621599e-06, 1.0970000001719882e-06, 1.0980000002547285e-06, 1.0970000001719882e-06]</msg>
<status status="PASS" starttime="20201030 11:50:31.680" endtime="20201030 11:50:31.682"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.676" endtime="20201030 11:50:31.683"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.304" endtime="20201030 11:50:31.683"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.303" endtime="20201030 11:50:31.683"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:31.691" endtime="20201030 11:50:31.701"></status>
</kw>
<msg timestamp="20201030 11:50:31.702" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:31.690" endtime="20201030 11:50:31.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:31.704" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:31.703" endtime="20201030 11:50:31.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:31.706" endtime="20201030 11:50:31.707"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.687" endtime="20201030 11:50:31.708"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.685" endtime="20201030 11:50:31.708"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:31.715" endtime="20201030 11:50:32.034"></status>
</kw>
<msg timestamp="20201030 11:50:32.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.585881569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.585882639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:31.713" endtime="20201030 11:50:32.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:32.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.585881569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.585882639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:32.039" endtime="20201030 11:50:32.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:32.049" endtime="20201030 11:50:32.051"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.710" endtime="20201030 11:50:32.052"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.709" endtime="20201030 11:50:32.052"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:32.057" level="INFO">${RESULT} = [{'diff': 1.069999999714355e-06}, {'diff': 1.1109999999980857e-06}, {'diff': 1.0839999999845418e-06}, {'diff': 1.0970000001719882e-06}, {'diff': 1.1109999999980857e-06}, {'diff': 1.1109999999980857e-0...</msg>
<status status="PASS" starttime="20201030 11:50:32.053" endtime="20201030 11:50:32.058"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:32.062" level="INFO">${OVERHEAD} = {'diff': [1.069999999714355e-06, 1.1109999999980857e-06, 1.0839999999845418e-06, 1.0970000001719882e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0979999998106393e-06, 1.0979999998106393e-06,...</msg>
<status status="PASS" starttime="20201030 11:50:32.058" endtime="20201030 11:50:32.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:32.066" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:32.065" endtime="20201030 11:50:32.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:32.069" level="INFO">VALUE: [1.069999999714355e-06, 1.1109999999980857e-06, 1.0839999999845418e-06, 1.0970000001719882e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0979999998106393e-06, 1.0979999998106393e-06, 1.0690000000757038e-06, 1.1109999999980857e-06, 1.0420000000621599e-06, 1.0970000001719882e-06, 1.0980000002547285e-06, 1.0970000001719882e-06, 1.2640000002228646e-06, 1.0980000002547285e-06, 1.0830000003458906e-06, 1.1250000002682725e-06, 1.0829999999018014e-06, 1.1530000003645569e-06, 1.1109999999980857e-06, 1.1120000000808261e-06, 1.0690000000757038e-06, 1.1120000000808261e-06, 1.0979999998106393e-06, 1.1109999999980857e-06, 1.0970000001719882e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1120000000808261e-06, 1.1109999999980857e-06, 1.0970000001719882e-06, 1.0420000000621599e-06, 1.1249999998241833e-06, 1.1109999999980857e-06, 1.13900000009437e-06, 1.1109999999980857e-06, 1.0970000001719882e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1120000000808261e-06, 1.1109999999980857e-06, 1.0970000001719882e-06, 1.096999999727899e-06, 1.069999999714355e-06, 1.0970000001719882e-06, 1.0829999999018014e-06, 1.13900000009437e-06, 1.0980000002547285e-06, 1.0970000001719882e-06, 1.1529999999204676e-06, 1.1109999999980857e-06, 1.1529999999204676e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0700000001584442e-06, 1.096999999727899e-06, 1.1109999999980857e-06, 1.1109999999980857e-06]</msg>
<status status="PASS" starttime="20201030 11:50:32.067" endtime="20201030 11:50:32.069"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.063" endtime="20201030 11:50:32.070"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.684" endtime="20201030 11:50:32.070"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.684" endtime="20201030 11:50:32.070"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:32.078" endtime="20201030 11:50:32.088"></status>
</kw>
<msg timestamp="20201030 11:50:32.089" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:32.077" endtime="20201030 11:50:32.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:32.091" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:32.090" endtime="20201030 11:50:32.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:32.092" endtime="20201030 11:50:32.094"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.074" endtime="20201030 11:50:32.095"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.072" endtime="20201030 11:50:32.095"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:32.103" endtime="20201030 11:50:32.418"></status>
</kw>
<msg timestamp="20201030 11:50:32.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.955922528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.955923611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:32.101" endtime="20201030 11:50:32.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:32.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.955922528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.955923611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:32.423" endtime="20201030 11:50:32.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:32.433" endtime="20201030 11:50:32.435"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.097" endtime="20201030 11:50:32.435"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.096" endtime="20201030 11:50:32.436"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:32.440" level="INFO">${RESULT} = [{'diff': 1.0829999999018014e-06}, {'diff': 1.13900000009437e-06}, {'diff': 1.0980000002547285e-06}, {'diff': 1.0970000001719882e-06}, {'diff': 1.1529999999204676e-06}, {'diff': 1.1109999999980857e-06...</msg>
<status status="PASS" starttime="20201030 11:50:32.436" endtime="20201030 11:50:32.440"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:32.445" level="INFO">${OVERHEAD} = {'diff': [1.0829999999018014e-06, 1.13900000009437e-06, 1.0980000002547285e-06, 1.0970000001719882e-06, 1.1529999999204676e-06, 1.1109999999980857e-06, 1.1529999999204676e-06, 1.1109999999980857e-06, ...</msg>
<status status="PASS" starttime="20201030 11:50:32.441" endtime="20201030 11:50:32.445"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:32.450" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:32.448" endtime="20201030 11:50:32.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:32.452" level="INFO">VALUE: [1.0829999999018014e-06, 1.13900000009437e-06, 1.0980000002547285e-06, 1.0970000001719882e-06, 1.1529999999204676e-06, 1.1109999999980857e-06, 1.1529999999204676e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0700000001584442e-06, 1.096999999727899e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.2639999997787754e-06, 1.0979999998106393e-06, 1.1659999996638248e-06, 1.1250000002682725e-06, 1.1529999999204676e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0970000001719882e-06, 1.1109999999980857e-06, 1.096999999727899e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0970000001719882e-06, 1.1249999998241833e-06, 1.0829999999018014e-06, 1.1249999998241833e-06, 1.1529999999204676e-06, 1.1109999999980857e-06, 1.1120000000808261e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0979999998106393e-06, 1.0970000001719882e-06, 1.1529999999204676e-06, 1.1109999999980857e-06, 1.096999999727899e-06, 1.096999999727899e-06, 1.096999999727899e-06, 1.1120000000808261e-06, 1.1109999999980857e-06, 1.096999999727899e-06, 1.0829999999018014e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0970000001719882e-06, 1.1120000000808261e-06, 1.1109999999980857e-06, 1.0970000001719882e-06, 1.1109999999980857e-06, 1.0980000002547285e-06, 1.0979999998106393e-06, 1.0970000001719882e-06, 1.0839999999845418e-06, 1.1109999999980857e-06, 1.1529999999204676e-06, 1.0979999998106393e-06, 1.1249999998241833e-06, 1.0829999999018014e-06, 1.1799999999340116e-06]</msg>
<status status="PASS" starttime="20201030 11:50:32.451" endtime="20201030 11:50:32.453"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.446" endtime="20201030 11:50:32.453"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.071" endtime="20201030 11:50:32.454"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.071" endtime="20201030 11:50:32.454"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:32.461" endtime="20201030 11:50:32.472"></status>
</kw>
<msg timestamp="20201030 11:50:32.473" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:32.460" endtime="20201030 11:50:32.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:32.475" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:32.474" endtime="20201030 11:50:32.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:32.476" endtime="20201030 11:50:32.478"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.457" endtime="20201030 11:50:32.478"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.456" endtime="20201030 11:50:32.479"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:32.486" endtime="20201030 11:50:32.801"></status>
</kw>
<msg timestamp="20201030 11:50:32.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.332939694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.332940806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:32.484" endtime="20201030 11:50:32.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:32.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.332939694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.332940806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:32.806" endtime="20201030 11:50:32.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:32.816" endtime="20201030 11:50:32.818"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.481" endtime="20201030 11:50:32.818"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.479" endtime="20201030 11:50:32.819"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:32.823" level="INFO">${RESULT} = [{'diff': 1.1120000000808261e-06}, {'diff': 1.1109999999980857e-06}, {'diff': 1.0970000001719882e-06}, {'diff': 1.1109999999980857e-06}, {'diff': 1.0980000002547285e-06}, {'diff': 1.0979999998106393e-...</msg>
<status status="PASS" starttime="20201030 11:50:32.819" endtime="20201030 11:50:32.823"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:32.828" level="INFO">${OVERHEAD} = {'diff': [1.1120000000808261e-06, 1.1109999999980857e-06, 1.0970000001719882e-06, 1.1109999999980857e-06, 1.0980000002547285e-06, 1.0979999998106393e-06, 1.0970000001719882e-06, 1.0839999999845418e-06...</msg>
<status status="PASS" starttime="20201030 11:50:32.824" endtime="20201030 11:50:32.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:32.833" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:32.832" endtime="20201030 11:50:32.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:32.835" level="INFO">VALUE: [1.1120000000808261e-06, 1.1109999999980857e-06, 1.0970000001719882e-06, 1.1109999999980857e-06, 1.0980000002547285e-06, 1.0979999998106393e-06, 1.0970000001719882e-06, 1.0839999999845418e-06, 1.1109999999980857e-06, 1.1529999999204676e-06, 1.0979999998106393e-06, 1.1249999998241833e-06, 1.0829999999018014e-06, 1.1799999999340116e-06, 1.2219999998563935e-06, 1.0829999999018014e-06, 1.13900000009437e-06, 1.0970000001719882e-06, 1.0829999999018014e-06, 1.1109999999980857e-06, 1.1250000002682725e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0829999999018014e-06, 1.0970000001719882e-06, 1.096999999727899e-06, 1.0829999999018014e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.096999999727899e-06, 1.1670000001906544e-06, 1.1250000002682725e-06, 1.0980000002547285e-06, 1.0970000001719882e-06, 1.0979999998106393e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.096999999727899e-06, 1.1109999999980857e-06, 1.0970000001719882e-06, 1.096999999727899e-06, 1.1249999998241833e-06, 1.1120000000808261e-06, 1.0829999999018014e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.096999999727899e-06, 1.1109999999980857e-06, 1.1249999998241833e-06, 1.1530000003645569e-06, 1.1109999999980857e-06, 1.13900000009437e-06, 1.0979999998106393e-06, 1.1109999999980857e-06, 1.1250000002682725e-06, 1.096999999727899e-06, 1.0970000001719882e-06, 1.1109999999980857e-06, 1.111000000442175e-06, 1.1109999999980857e-06, 1.0690000000757038e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0970000001719882e-06]</msg>
<status status="PASS" starttime="20201030 11:50:32.834" endtime="20201030 11:50:32.836"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.829" endtime="20201030 11:50:32.836"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.454" endtime="20201030 11:50:32.837"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.454" endtime="20201030 11:50:32.837"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:32.845" endtime="20201030 11:50:32.856"></status>
</kw>
<msg timestamp="20201030 11:50:32.856" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:32.843" endtime="20201030 11:50:32.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:32.858" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:32.857" endtime="20201030 11:50:32.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:32.859" endtime="20201030 11:50:32.861"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.841" endtime="20201030 11:50:32.862"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.839" endtime="20201030 11:50:32.862"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:32.869" endtime="20201030 11:50:33.191"></status>
</kw>
<msg timestamp="20201030 11:50:33.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.705537028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.705538139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:32.868" endtime="20201030 11:50:33.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:33.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.705537028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.705538139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:33.197" endtime="20201030 11:50:33.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:33.207" endtime="20201030 11:50:33.208"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.865" endtime="20201030 11:50:33.209"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.863" endtime="20201030 11:50:33.209"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:33.213" level="INFO">${RESULT} = [{'diff': 1.1109999999980857e-06}, {'diff': 1.13900000009437e-06}, {'diff': 1.0979999998106393e-06}, {'diff': 1.1109999999980857e-06}, {'diff': 1.1250000002682725e-06}, {'diff': 1.096999999727899e-06}...</msg>
<status status="PASS" starttime="20201030 11:50:33.210" endtime="20201030 11:50:33.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:33.218" level="INFO">${OVERHEAD} = {'diff': [1.1109999999980857e-06, 1.13900000009437e-06, 1.0979999998106393e-06, 1.1109999999980857e-06, 1.1250000002682725e-06, 1.096999999727899e-06, 1.0970000001719882e-06, 1.1109999999980857e-06, 1...</msg>
<status status="PASS" starttime="20201030 11:50:33.215" endtime="20201030 11:50:33.219"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:33.223" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:33.222" endtime="20201030 11:50:33.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:33.225" level="INFO">VALUE: [1.1109999999980857e-06, 1.13900000009437e-06, 1.0979999998106393e-06, 1.1109999999980857e-06, 1.1250000002682725e-06, 1.096999999727899e-06, 1.0970000001719882e-06, 1.1109999999980857e-06, 1.111000000442175e-06, 1.1109999999980857e-06, 1.0690000000757038e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0970000001719882e-06, 1.2499999995085886e-06, 1.1249999998241833e-06, 1.0970000001719882e-06, 1.1109999995539965e-06, 1.0689999996316146e-06, 1.0970000001719882e-06, 1.111999999636737e-06, 1.1109999995539965e-06, 1.0829999999018014e-06, 1.111000000442175e-06, 1.1520000002818165e-06, 1.0969999992838098e-06, 1.0839999999845418e-06, 1.0969999992838098e-06, 1.0970000001719882e-06, 1.0829999999018014e-06, 1.0970000001719882e-06, 1.1530000003645569e-06, 1.111000000442175e-06, 1.111000000442175e-06, 1.1109999995539965e-06, 1.1389999992061917e-06, 1.1109999995539965e-06, 1.1530000003645569e-06, 1.151999999393638e-06, 1.111000000442175e-06, 1.0969999992838098e-06, 1.1120000005249153e-06, 1.0970000001719882e-06, 1.111000000442175e-06, 1.1530000003645569e-06, 1.0839999999845418e-06, 1.0970000001719882e-06, 1.0980000002547285e-06, 1.1109999995539965e-06, 1.1109999995539965e-06, 1.0560000003323466e-06, 1.0970000001719882e-06, 1.111000000442175e-06, 1.0970000001719882e-06, 1.111999999636737e-06, 1.111999999636737e-06, 1.1120000005249153e-06, 1.0839999999845418e-06, 1.1109999995539965e-06, 1.1249999998241833e-06, 1.0969999992838098e-06, 1.0969999992838098e-06, 1.111000000442175e-06, 1.0969999992838098e-06]</msg>
<status status="PASS" starttime="20201030 11:50:33.224" endtime="20201030 11:50:33.226"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.219" endtime="20201030 11:50:33.226"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.838" endtime="20201030 11:50:33.227"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.837" endtime="20201030 11:50:33.227"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:33.235" endtime="20201030 11:50:33.246"></status>
</kw>
<msg timestamp="20201030 11:50:33.247" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:33.233" endtime="20201030 11:50:33.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:33.249" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:33.248" endtime="20201030 11:50:33.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:33.250" endtime="20201030 11:50:33.252"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.230" endtime="20201030 11:50:33.253"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.229" endtime="20201030 11:50:33.253"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:33.260" endtime="20201030 11:50:33.568"></status>
</kw>
<msg timestamp="20201030 11:50:33.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.079460972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.079462028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:33.258" endtime="20201030 11:50:33.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:33.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.079460972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.079462028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:33.573" endtime="20201030 11:50:33.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:33.583" endtime="20201030 11:50:33.584"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.256" endtime="20201030 11:50:33.585"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.254" endtime="20201030 11:50:33.585"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:33.590" level="INFO">${RESULT} = [{'diff': 1.0560000003323466e-06}, {'diff': 1.0970000001719882e-06}, {'diff': 1.111000000442175e-06}, {'diff': 1.0970000001719882e-06}, {'diff': 1.111999999636737e-06}, {'diff': 1.111999999636737e-06}...</msg>
<status status="PASS" starttime="20201030 11:50:33.586" endtime="20201030 11:50:33.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:33.595" level="INFO">${OVERHEAD} = {'diff': [1.0560000003323466e-06, 1.0970000001719882e-06, 1.111000000442175e-06, 1.0970000001719882e-06, 1.111999999636737e-06, 1.111999999636737e-06, 1.1120000005249153e-06, 1.0839999999845418e-06, 1...</msg>
<status status="PASS" starttime="20201030 11:50:33.591" endtime="20201030 11:50:33.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:33.599" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:33.598" endtime="20201030 11:50:33.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:33.602" level="INFO">VALUE: [1.0560000003323466e-06, 1.0970000001719882e-06, 1.111000000442175e-06, 1.0970000001719882e-06, 1.111999999636737e-06, 1.111999999636737e-06, 1.1120000005249153e-06, 1.0839999999845418e-06, 1.1109999995539965e-06, 1.1249999998241833e-06, 1.0969999992838098e-06, 1.0969999992838098e-06, 1.111000000442175e-06, 1.0969999992838098e-06, 1.3609999998109856e-06, 1.0970000001719882e-06, 1.111000000442175e-06, 1.181000000016752e-06, 1.1250000007123617e-06, 1.111000000442175e-06, 1.0970000001719882e-06, 1.0970000001719882e-06, 1.1109999995539965e-06, 1.0969999992838098e-06, 1.0969999992838098e-06, 1.111999999636737e-06, 1.0559999994441682e-06, 1.0839999999845418e-06, 1.1529999994763784e-06, 1.111000000442175e-06, 1.0970000001719882e-06, 1.1109999995539965e-06, 1.0550000002496063e-06, 1.181000000016752e-06, 1.1109999995539965e-06, 1.1109999995539965e-06, 1.1109999995539965e-06, 1.111000000442175e-06, 1.0970000001719882e-06, 1.0969999992838098e-06, 1.1109999995539965e-06, 1.111000000442175e-06, 1.111000000442175e-06, 1.111999999636737e-06, 1.111999999636737e-06, 1.111000000442175e-06, 1.0979999993665501e-06, 1.0970000001719882e-06, 1.0980000002547285e-06, 1.0970000001719882e-06, 1.0970000001719882e-06, 1.0980000002547285e-06, 1.0829999999018014e-06, 1.1109999995539965e-06, 1.1109999995539965e-06, 1.0969999992838098e-06, 1.1109999995539965e-06, 1.1109999995539965e-06, 1.0970000001719882e-06, 1.1120000005249153e-06, 1.111999999636737e-06, 1.1520000002818165e-06, 1.1249999998241833e-06, 1.1520000002818165e-06]</msg>
<status status="PASS" starttime="20201030 11:50:33.600" endtime="20201030 11:50:33.602"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.596" endtime="20201030 11:50:33.603"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.227" endtime="20201030 11:50:33.603"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.227" endtime="20201030 11:50:33.603"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:33.611" endtime="20201030 11:50:33.622"></status>
</kw>
<msg timestamp="20201030 11:50:33.622" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:33.610" endtime="20201030 11:50:33.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:33.625" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:33.623" endtime="20201030 11:50:33.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:33.626" endtime="20201030 11:50:33.628"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.607" endtime="20201030 11:50:33.629"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.605" endtime="20201030 11:50:33.629"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:33.636" endtime="20201030 11:50:33.943"></status>
</kw>
<msg timestamp="20201030 11:50:33.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.460098903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.4601, 'source': 'DUT_IC', 'event': 'FALLING'...</msg>
<status status="PASS" starttime="20201030 11:50:33.634" endtime="20201030 11:50:33.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:33.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.460098903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.4601, 'source': 'DUT_IC', 'event': 'FALLING'...</msg>
<status status="PASS" starttime="20201030 11:50:33.948" endtime="20201030 11:50:33.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:33.958" endtime="20201030 11:50:33.960"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.631" endtime="20201030 11:50:33.960"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.630" endtime="20201030 11:50:33.961"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:33.965" level="INFO">${RESULT} = [{'diff': 1.0970000001719882e-06}, {'diff': 1.0980000002547285e-06}, {'diff': 1.0829999999018014e-06}, {'diff': 1.1109999995539965e-06}, {'diff': 1.1109999995539965e-06}, {'diff': 1.0969999992838098e-...</msg>
<status status="PASS" starttime="20201030 11:50:33.961" endtime="20201030 11:50:33.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:33.971" level="INFO">${OVERHEAD} = {'diff': [1.0970000001719882e-06, 1.0980000002547285e-06, 1.0829999999018014e-06, 1.1109999995539965e-06, 1.1109999995539965e-06, 1.0969999992838098e-06, 1.1109999995539965e-06, 1.1109999995539965e-06...</msg>
<status status="PASS" starttime="20201030 11:50:33.966" endtime="20201030 11:50:33.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:33.975" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:33.974" endtime="20201030 11:50:33.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:33.978" level="INFO">VALUE: [1.0970000001719882e-06, 1.0980000002547285e-06, 1.0829999999018014e-06, 1.1109999995539965e-06, 1.1109999995539965e-06, 1.0969999992838098e-06, 1.1109999995539965e-06, 1.1109999995539965e-06, 1.0970000001719882e-06, 1.1120000005249153e-06, 1.111999999636737e-06, 1.1520000002818165e-06, 1.1249999998241833e-06, 1.1520000002818165e-06, 1.250000000396767e-06, 1.0829999999018014e-06, 1.0980000002547285e-06, 1.1529999994763784e-06, 1.111000000442175e-06, 1.111000000442175e-06, 1.1529999994763784e-06, 1.0980000002547285e-06, 1.13900000009437e-06, 1.13900000009437e-06, 1.1530000003645569e-06, 1.0970000001719882e-06, 1.0830000007899798e-06, 1.0970000001719882e-06, 1.0970000001719882e-06, 1.069999999714355e-06, 1.1250000007123617e-06, 1.1250000007123617e-06, 1.111000000442175e-06, 1.0969999992838098e-06, 1.181000000016752e-06, 1.13900000009437e-06, 1.0970000001719882e-06, 1.111000000442175e-06, 1.0970000001719882e-06, 1.1109999995539965e-06, 1.1109999995539965e-06, 1.111000000442175e-06, 1.0829999999018014e-06, 1.0970000001719882e-06, 1.111999999636737e-06, 1.1109999995539965e-06, 1.111000000442175e-06, 1.1120000005249153e-06, 1.1109999995539965e-06, 1.1109999995539965e-06, 1.1109999995539965e-06, 1.111000000442175e-06, 1.0970000001719882e-06, 1.111000000442175e-06, 1.0970000001719882e-06, 1.111000000442175e-06, 1.0980000002547285e-06, 1.0970000001719882e-06, 1.0700000006025334e-06, 1.1109999995539965e-06, 1.0829999999018014e-06, 1.1109999995539965e-06, 1.0970000001719882e-06, 1.111000000442175e-06]</msg>
<status status="PASS" starttime="20201030 11:50:33.976" endtime="20201030 11:50:33.978"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.971" endtime="20201030 11:50:33.979"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.604" endtime="20201030 11:50:33.979"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.604" endtime="20201030 11:50:33.979"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:33.987" endtime="20201030 11:50:33.998"></status>
</kw>
<msg timestamp="20201030 11:50:33.998" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:33.985" endtime="20201030 11:50:33.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:34.001" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:33.999" endtime="20201030 11:50:34.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:34.002" endtime="20201030 11:50:34.004"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.983" endtime="20201030 11:50:34.005"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.981" endtime="20201030 11:50:34.005"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:34.012" endtime="20201030 11:50:34.326"></status>
</kw>
<msg timestamp="20201030 11:50:34.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.826110833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.826111944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:34.010" endtime="20201030 11:50:34.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:34.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.826110833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.826111944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:34.331" endtime="20201030 11:50:34.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:34.341" endtime="20201030 11:50:34.343"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.007" endtime="20201030 11:50:34.343"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.006" endtime="20201030 11:50:34.344"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:34.348" level="INFO">${RESULT} = [{'diff': 1.1109999995539965e-06}, {'diff': 1.111000000442175e-06}, {'diff': 1.0970000001719882e-06}, {'diff': 1.111000000442175e-06}, {'diff': 1.0970000001719882e-06}, {'diff': 1.111000000442175e-06}...</msg>
<status status="PASS" starttime="20201030 11:50:34.345" endtime="20201030 11:50:34.348"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:34.353" level="INFO">${OVERHEAD} = {'diff': [1.1109999995539965e-06, 1.111000000442175e-06, 1.0970000001719882e-06, 1.111000000442175e-06, 1.0970000001719882e-06, 1.111000000442175e-06, 1.0980000002547285e-06, 1.0970000001719882e-06, 1...</msg>
<status status="PASS" starttime="20201030 11:50:34.349" endtime="20201030 11:50:34.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:34.357" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:34.356" endtime="20201030 11:50:34.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:34.360" level="INFO">VALUE: [1.1109999995539965e-06, 1.111000000442175e-06, 1.0970000001719882e-06, 1.111000000442175e-06, 1.0970000001719882e-06, 1.111000000442175e-06, 1.0980000002547285e-06, 1.0970000001719882e-06, 1.0700000006025334e-06, 1.1109999995539965e-06, 1.0829999999018014e-06, 1.1109999995539965e-06, 1.0970000001719882e-06, 1.111000000442175e-06, 1.2499999995085886e-06, 1.0970000001719882e-06, 1.0839999999845418e-06, 1.0839999999845418e-06, 1.0970000001719882e-06, 1.1109999995539965e-06, 1.111000000442175e-06, 1.1109999995539965e-06, 1.0970000001719882e-06, 1.1109999995539965e-06, 1.1249999998241833e-06, 1.111000000442175e-06, 1.0969999992838098e-06, 1.1249999998241833e-06, 1.0829999999018014e-06, 1.0560000003323466e-06, 1.1249999998241833e-06, 1.0970000001719882e-06, 1.1109999995539965e-06, 1.111000000442175e-06, 1.111000000442175e-06, 1.111000000442175e-06, 1.0969999992838098e-06, 1.0550000002496063e-06, 1.111999999636737e-06, 1.13900000009437e-06, 1.111000000442175e-06, 1.1249999998241833e-06, 1.0980000002547285e-06, 1.111000000442175e-06, 1.111999999636737e-06, 1.0970000001719882e-06, 1.111000000442175e-06, 1.1109999995539965e-06, 1.1109999995539965e-06, 1.1120000005249153e-06, 1.0970000001719882e-06, 1.111000000442175e-06, 1.111000000442175e-06, 1.1109999995539965e-06, 1.0970000001719882e-06, 1.111000000442175e-06, 1.111000000442175e-06, 1.0689999996316146e-06, 1.0970000001719882e-06, 1.0839999999845418e-06, 1.1249999998241833e-06, 1.1109999995539965e-06, 1.13900000009437e-06, 1.1249999998241833e-06]</msg>
<status status="PASS" starttime="20201030 11:50:34.358" endtime="20201030 11:50:34.360"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.354" endtime="20201030 11:50:34.361"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.980" endtime="20201030 11:50:34.361"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.979" endtime="20201030 11:50:34.361"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:34.370" endtime="20201030 11:50:34.381"></status>
</kw>
<msg timestamp="20201030 11:50:34.382" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:34.369" endtime="20201030 11:50:34.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:34.385" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:34.383" endtime="20201030 11:50:34.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:34.386" endtime="20201030 11:50:34.387"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.365" endtime="20201030 11:50:34.388"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.363" endtime="20201030 11:50:34.388"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:34.395" endtime="20201030 11:50:34.717"></status>
</kw>
<msg timestamp="20201030 11:50:34.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.191755125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.191756222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:34.393" endtime="20201030 11:50:34.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:34.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.191755125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.191756222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:34.722" endtime="20201030 11:50:34.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:34.732" endtime="20201030 11:50:34.733"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.391" endtime="20201030 11:50:34.734"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.389" endtime="20201030 11:50:34.735"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:34.739" level="INFO">${RESULT} = [{'diff': 1.0970000001719882e-06}, {'diff': 1.111000000442175e-06}, {'diff': 1.111000000442175e-06}, {'diff': 1.1109999995539965e-06}, {'diff': 1.0970000001719882e-06}, {'diff': 1.111000000442175e-06}...</msg>
<status status="PASS" starttime="20201030 11:50:34.735" endtime="20201030 11:50:34.739"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:34.744" level="INFO">${OVERHEAD} = {'diff': [1.0970000001719882e-06, 1.111000000442175e-06, 1.111000000442175e-06, 1.1109999995539965e-06, 1.0970000001719882e-06, 1.111000000442175e-06, 1.111000000442175e-06, 1.0689999996316146e-06, 1....</msg>
<status status="PASS" starttime="20201030 11:50:34.740" endtime="20201030 11:50:34.744"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:34.748" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:34.747" endtime="20201030 11:50:34.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:34.751" level="INFO">VALUE: [1.0970000001719882e-06, 1.111000000442175e-06, 1.111000000442175e-06, 1.1109999995539965e-06, 1.0970000001719882e-06, 1.111000000442175e-06, 1.111000000442175e-06, 1.0689999996316146e-06, 1.0970000001719882e-06, 1.0839999999845418e-06, 1.1249999998241833e-06, 1.1109999995539965e-06, 1.13900000009437e-06, 1.1249999998241833e-06, 1.2360000001265803e-06, 1.0970000001719882e-06, 1.1249999998241833e-06, 1.0829999999018014e-06, 1.1109999995539965e-06, 1.1109999995539965e-06, 1.0980000002547285e-06, 1.111000000442175e-06, 1.0970000001719882e-06, 1.13900000009437e-06, 1.1109999995539965e-06, 1.1249999998241833e-06, 1.1109999995539965e-06, 1.0839999999845418e-06, 1.1109999995539965e-06, 1.0559999994441682e-06, 1.0979999993665501e-06, 1.0980000002547285e-06, 1.0829999999018014e-06, 1.1249999998241833e-06, 1.0970000001719882e-06, 1.1109999995539965e-06, 1.1249999998241833e-06, 1.111000000442175e-06, 1.111000000442175e-06, 1.0969999992838098e-06, 1.111000000442175e-06, 1.1250000007123617e-06, 1.1109999995539965e-06, 1.111999999636737e-06, 1.1109999995539965e-06, 1.0970000001719882e-06, 1.111000000442175e-06, 1.0970000001719882e-06, 1.0970000001719882e-06, 1.1249999998241833e-06, 1.111000000442175e-06, 1.1249999998241833e-06, 1.1109999995539965e-06, 1.111000000442175e-06, 1.0970000001719882e-06, 1.111000000442175e-06, 1.1529999994763784e-06, 1.0839999999845418e-06, 1.0980000002547285e-06, 1.1109999995539965e-06, 1.1109999995539965e-06, 1.111000000442175e-06, 1.1109999995539965e-06, 1.1109999995539965e-06]</msg>
<status status="PASS" starttime="20201030 11:50:34.749" endtime="20201030 11:50:34.751"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.745" endtime="20201030 11:50:34.752"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.362" endtime="20201030 11:50:34.752"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.362" endtime="20201030 11:50:34.753"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:34.760" endtime="20201030 11:50:34.772"></status>
</kw>
<msg timestamp="20201030 11:50:34.773" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:34.759" endtime="20201030 11:50:34.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:34.775" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:34.774" endtime="20201030 11:50:34.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:34.776" endtime="20201030 11:50:34.778"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.756" endtime="20201030 11:50:34.778"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.755" endtime="20201030 11:50:34.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:34.785" endtime="20201030 11:50:35.100"></status>
</kw>
<msg timestamp="20201030 11:50:35.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.566832792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.566833903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:34.784" endtime="20201030 11:50:35.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:35.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.566832792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.566833903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:35.105" endtime="20201030 11:50:35.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:35.115" endtime="20201030 11:50:35.117"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.781" endtime="20201030 11:50:35.117"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.779" endtime="20201030 11:50:35.117"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:35.122" level="INFO">${RESULT} = [{'diff': 1.111000000442175e-06}, {'diff': 1.1249999998241833e-06}, {'diff': 1.1109999995539965e-06}, {'diff': 1.111000000442175e-06}, {'diff': 1.0970000001719882e-06}, {'diff': 1.111000000442175e-06}...</msg>
<status status="PASS" starttime="20201030 11:50:35.118" endtime="20201030 11:50:35.122"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:35.128" level="INFO">${OVERHEAD} = {'diff': [1.111000000442175e-06, 1.1249999998241833e-06, 1.1109999995539965e-06, 1.111000000442175e-06, 1.0970000001719882e-06, 1.111000000442175e-06, 1.1529999994763784e-06, 1.0839999999845418e-06, 1...</msg>
<status status="PASS" starttime="20201030 11:50:35.123" endtime="20201030 11:50:35.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:35.132" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:35.131" endtime="20201030 11:50:35.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:35.134" level="INFO">VALUE: [1.111000000442175e-06, 1.1249999998241833e-06, 1.1109999995539965e-06, 1.111000000442175e-06, 1.0970000001719882e-06, 1.111000000442175e-06, 1.1529999994763784e-06, 1.0839999999845418e-06, 1.0980000002547285e-06, 1.1109999995539965e-06, 1.1109999995539965e-06, 1.111000000442175e-06, 1.1109999995539965e-06, 1.1109999995539965e-06, 1.2780000000489622e-06, 1.1530000003645569e-06, 1.0970000001719882e-06, 1.0839999999845418e-06, 1.0970000001719882e-06, 1.0970000001719882e-06, 1.111000000442175e-06, 1.1109999995539965e-06, 1.1109999995539965e-06, 1.0969999992838098e-06, 1.069999999714355e-06, 1.13900000009437e-06, 1.1249999998241833e-06, 1.1250000007123617e-06, 1.1380000000116297e-06, 1.0970000001719882e-06, 1.0970000001719882e-06, 1.1109999995539965e-06, 1.111000000442175e-06, 1.111999999636737e-06, 1.1109999995539965e-06, 1.0970000001719882e-06, 1.1249999998241833e-06, 1.111999999636737e-06, 1.0970000001719882e-06, 1.0970000001719882e-06, 1.111000000442175e-06, 1.0970000001719882e-06, 1.111000000442175e-06, 1.111000000442175e-06, 1.1529999994763784e-06, 1.0409999999794195e-06, 1.1249999998241833e-06, 1.111000000442175e-06, 1.1109999995539965e-06, 1.0829999999018014e-06, 1.1249999998241833e-06, 1.0970000001719882e-06, 1.0970000001719882e-06, 1.0970000001719882e-06, 1.0969999992838098e-06, 1.1120000005249153e-06, 1.0970000001719882e-06, 1.1249999998241833e-06, 1.1799999999340116e-06, 1.111999999636737e-06, 1.069000000519793e-06, 1.1249999998241833e-06, 1.13900000009437e-06, 1.1249999998241833e-06]</msg>
<status status="PASS" starttime="20201030 11:50:35.133" endtime="20201030 11:50:35.135"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.128" endtime="20201030 11:50:35.135"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.753" endtime="20201030 11:50:35.136"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.753" endtime="20201030 11:50:35.136"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:35.144" endtime="20201030 11:50:35.155"></status>
</kw>
<msg timestamp="20201030 11:50:35.155" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:35.142" endtime="20201030 11:50:35.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:35.158" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:35.156" endtime="20201030 11:50:35.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:35.159" endtime="20201030 11:50:35.160"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.140" endtime="20201030 11:50:35.161"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.138" endtime="20201030 11:50:35.161"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:35.169" endtime="20201030 11:50:35.477"></status>
</kw>
<msg timestamp="20201030 11:50:35.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.947595833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.947596958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:35.167" endtime="20201030 11:50:35.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:35.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.947595833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.947596958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:35.482" endtime="20201030 11:50:35.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:35.492" endtime="20201030 11:50:35.494"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.164" endtime="20201030 11:50:35.495"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.162" endtime="20201030 11:50:35.495"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:35.499" level="INFO">${RESULT} = [{'diff': 1.1249999998241833e-06}, {'diff': 1.0970000001719882e-06}, {'diff': 1.0970000001719882e-06}, {'diff': 1.0970000001719882e-06}, {'diff': 1.0969999992838098e-06}, {'diff': 1.1120000005249153e-...</msg>
<status status="PASS" starttime="20201030 11:50:35.496" endtime="20201030 11:50:35.500"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:35.504" level="INFO">${OVERHEAD} = {'diff': [1.1249999998241833e-06, 1.0970000001719882e-06, 1.0970000001719882e-06, 1.0970000001719882e-06, 1.0969999992838098e-06, 1.1120000005249153e-06, 1.0970000001719882e-06, 1.1249999998241833e-06...</msg>
<status status="PASS" starttime="20201030 11:50:35.500" endtime="20201030 11:50:35.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:35.508" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:35.507" endtime="20201030 11:50:35.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:35.512" level="INFO">VALUE: [1.1249999998241833e-06, 1.0970000001719882e-06, 1.0970000001719882e-06, 1.0970000001719882e-06, 1.0969999992838098e-06, 1.1120000005249153e-06, 1.0970000001719882e-06, 1.1249999998241833e-06, 1.1799999999340116e-06, 1.111999999636737e-06, 1.069000000519793e-06, 1.1249999998241833e-06, 1.13900000009437e-06, 1.1249999998241833e-06, 1.2780000000489622e-06, 1.0970000001719882e-06, 1.111000000442175e-06, 1.069000000519793e-06, 1.0969999992838098e-06, 1.1249999998241833e-06, 1.0970000001719882e-06, 1.0980000002547285e-06, 1.111000000442175e-06, 1.111000000442175e-06, 1.069999999714355e-06, 1.0970000001719882e-06, 1.0970000001719882e-06, 1.0969999992838098e-06, 1.1249999998241833e-06, 1.111000000442175e-06, 1.0970000001719882e-06, 1.13900000009437e-06, 1.1799999999340116e-06, 1.0969999992838098e-06, 1.0980000002547285e-06, 1.0829999999018014e-06, 1.1109999995539965e-06, 1.0980000002547285e-06, 1.0829999999018014e-06, 1.0970000001719882e-06, 1.0970000001719882e-06, 1.111000000442175e-06, 1.1249999998241833e-06, 1.0979999993665501e-06, 1.111000000442175e-06, 1.1109999995539965e-06, 1.1109999995539965e-06, 1.111000000442175e-06, 1.111999999636737e-06, 1.0970000001719882e-06, 1.111000000442175e-06, 1.111000000442175e-06, 1.111000000442175e-06, 1.0980000002547285e-06, 1.0969999992838098e-06, 1.0839999999845418e-06, 1.111000000442175e-06, 1.0980000002547285e-06, 1.0970000001719882e-06, 1.1120000005249153e-06, 1.1249999998241833e-06, 1.0970000001719882e-06, 1.1109999995539965e-06, 1.1529999994763784e-06]</msg>
<status status="PASS" starttime="20201030 11:50:35.509" endtime="20201030 11:50:35.512"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.505" endtime="20201030 11:50:35.513"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.137" endtime="20201030 11:50:35.513"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.136" endtime="20201030 11:50:35.513"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:35.522" endtime="20201030 11:50:35.533"></status>
</kw>
<msg timestamp="20201030 11:50:35.534" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:35.520" endtime="20201030 11:50:35.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:35.536" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:35.535" endtime="20201030 11:50:35.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:35.537" endtime="20201030 11:50:35.539"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.517" endtime="20201030 11:50:35.539"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.515" endtime="20201030 11:50:35.540"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:35.546" endtime="20201030 11:50:35.858"></status>
</kw>
<msg timestamp="20201030 11:50:35.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.320979861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.320980972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:35.545" endtime="20201030 11:50:35.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:35.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.320979861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.320980972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:35.863" endtime="20201030 11:50:35.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:35.873" endtime="20201030 11:50:35.875"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.542" endtime="20201030 11:50:35.876"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.540" endtime="20201030 11:50:35.876"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:35.880" level="INFO">${RESULT} = [{'diff': 1.111000000442175e-06}, {'diff': 1.111000000442175e-06}, {'diff': 1.111000000442175e-06}, {'diff': 1.0980000002547285e-06}, {'diff': 1.0969999992838098e-06}, {'diff': 1.0839999999845418e-06}...</msg>
<status status="PASS" starttime="20201030 11:50:35.877" endtime="20201030 11:50:35.880"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:35.886" level="INFO">${OVERHEAD} = {'diff': [1.111000000442175e-06, 1.111000000442175e-06, 1.111000000442175e-06, 1.0980000002547285e-06, 1.0969999992838098e-06, 1.0839999999845418e-06, 1.111000000442175e-06, 1.0980000002547285e-06, 1....</msg>
<status status="PASS" starttime="20201030 11:50:35.881" endtime="20201030 11:50:35.886"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:35.890" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:35.889" endtime="20201030 11:50:35.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:35.892" level="INFO">VALUE: [1.111000000442175e-06, 1.111000000442175e-06, 1.111000000442175e-06, 1.0980000002547285e-06, 1.0969999992838098e-06, 1.0839999999845418e-06, 1.111000000442175e-06, 1.0980000002547285e-06, 1.0970000001719882e-06, 1.1120000005249153e-06, 1.1249999998241833e-06, 1.0970000001719882e-06, 1.1109999995539965e-06, 1.1529999994763784e-06, 1.2499999995085886e-06, 1.13900000009437e-06, 1.1109999995539965e-06, 1.0970000001719882e-06, 1.0969999992838098e-06, 1.0829999999018014e-06, 1.111999999636737e-06, 1.0969999992838098e-06, 1.111000000442175e-06, 1.0970000001719882e-06, 1.0969999992838098e-06, 1.111999999636737e-06, 1.1529999994763784e-06, 1.111000000442175e-06, 1.0980000002547285e-06, 1.1529999994763784e-06, 1.1109999995539965e-06, 1.1250000007123617e-06, 1.0979999993665501e-06, 1.0829999999018014e-06, 1.0970000001719882e-06, 1.0970000001719882e-06, 1.111000000442175e-06, 1.069999999714355e-06, 1.13900000009437e-06, 1.13900000009437e-06, 1.0970000001719882e-06, 1.111000000442175e-06, 1.111000000442175e-06, 1.0969999992838098e-06, 1.111000000442175e-06, 1.111000000442175e-06, 1.0970000001719882e-06, 1.111000000442175e-06, 1.0829999999018014e-06, 1.111000000442175e-06, 1.069999999714355e-06, 1.1109999995539965e-06, 1.0839999999845418e-06, 1.111999999636737e-06, 1.111000000442175e-06, 1.111000000442175e-06, 1.151999999393638e-06, 1.111000000442175e-06, 1.111000000442175e-06, 1.13900000009437e-06, 1.0969999992838098e-06, 1.0970000001719882e-06, 1.111000000442175e-06, 1.0969999992838098e-06]</msg>
<status status="PASS" starttime="20201030 11:50:35.891" endtime="20201030 11:50:35.893"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.887" endtime="20201030 11:50:35.893"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.514" endtime="20201030 11:50:35.894"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.513" endtime="20201030 11:50:35.894"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:35.902" endtime="20201030 11:50:35.914"></status>
</kw>
<msg timestamp="20201030 11:50:35.914" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:35.901" endtime="20201030 11:50:35.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:35.917" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:35.915" endtime="20201030 11:50:35.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:35.918" endtime="20201030 11:50:35.919"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.898" endtime="20201030 11:50:35.920"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.896" endtime="20201030 11:50:35.920"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:35.927" endtime="20201030 11:50:36.233"></status>
</kw>
<msg timestamp="20201030 11:50:36.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.688368111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.688369181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:35.925" endtime="20201030 11:50:36.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:36.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.688368111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.688369181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:36.238" endtime="20201030 11:50:36.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:36.249" endtime="20201030 11:50:36.250"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.923" endtime="20201030 11:50:36.251"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.921" endtime="20201030 11:50:36.251"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:36.256" level="INFO">${RESULT} = [{'diff': 1.069999999714355e-06}, {'diff': 1.1109999995539965e-06}, {'diff': 1.0839999999845418e-06}, {'diff': 1.111999999636737e-06}, {'diff': 1.111000000442175e-06}, {'diff': 1.111000000442175e-06},...</msg>
<status status="PASS" starttime="20201030 11:50:36.252" endtime="20201030 11:50:36.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:36.260" level="INFO">${OVERHEAD} = {'diff': [1.069999999714355e-06, 1.1109999995539965e-06, 1.0839999999845418e-06, 1.111999999636737e-06, 1.111000000442175e-06, 1.111000000442175e-06, 1.151999999393638e-06, 1.111000000442175e-06, 1.11...</msg>
<status status="PASS" starttime="20201030 11:50:36.257" endtime="20201030 11:50:36.260"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:36.264" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:36.263" endtime="20201030 11:50:36.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:36.267" level="INFO">VALUE: [1.069999999714355e-06, 1.1109999995539965e-06, 1.0839999999845418e-06, 1.111999999636737e-06, 1.111000000442175e-06, 1.111000000442175e-06, 1.151999999393638e-06, 1.111000000442175e-06, 1.111000000442175e-06, 1.13900000009437e-06, 1.0969999992838098e-06, 1.0970000001719882e-06, 1.111000000442175e-06, 1.0969999992838098e-06, 1.2639999997787754e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.111999999636737e-06, 1.111000000442175e-06, 1.1249999998241833e-06, 1.1109999995539965e-06, 1.111000000442175e-06, 1.0420000000621599e-06, 1.0970000001719882e-06, 1.0970000001719882e-06, 1.1249999998241833e-06, 1.111000000442175e-06, 1.0979999993665501e-06, 1.111000000442175e-06, 1.1250000007123617e-06, 1.0970000001719882e-06, 1.1380000000116297e-06, 1.1109999995539965e-06, 1.111000000442175e-06, 1.111000000442175e-06, 1.1109999995539965e-06, 1.0970000001719882e-06, 1.0550000002496063e-06, 1.0969999992838098e-06, 1.1529999994763784e-06, 1.111000000442175e-06, 1.0980000002547285e-06, 1.0980000002547285e-06, 1.0979999993665501e-06, 1.1109999995539965e-06, 1.111000000442175e-06, 1.0970000001719882e-06, 1.111999999636737e-06, 1.1109999995539965e-06, 1.1109999995539965e-06, 1.1389999992061917e-06, 1.111000000442175e-06, 1.111000000442175e-06, 1.0970000001719882e-06, 1.0970000001719882e-06, 1.0980000002547285e-06, 1.1799999999340116e-06, 1.1109999995539965e-06, 1.111000000442175e-06, 1.1529999994763784e-06, 1.1109999995539965e-06, 1.111999999636737e-06, 1.111000000442175e-06, 1.1109999995539965e-06]</msg>
<status status="PASS" starttime="20201030 11:50:36.265" endtime="20201030 11:50:36.267"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.261" endtime="20201030 11:50:36.268"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.895" endtime="20201030 11:50:36.268"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.894" endtime="20201030 11:50:36.269"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.716" endtime="20201030 11:50:36.269"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:50:28.640" endtime="20201030 11:50:36.272" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:36.281" endtime="20201030 11:50:36.301"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.280" endtime="20201030 11:50:36.301"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:36.317" endtime="20201030 11:50:36.336"></status>
</kw>
<msg timestamp="20201030 11:50:36.336" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:36.315" endtime="20201030 11:50:36.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:36.339" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:36.337" endtime="20201030 11:50:36.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:36.342" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:50:36.340" endtime="20201030 11:50:36.342"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:36.313" endtime="20201030 11:50:36.343"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:36.310" endtime="20201030 11:50:36.343"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.309" endtime="20201030 11:50:36.344"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:50:36.347" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:50:36.347" endtime="20201030 11:50:36.348"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.345" endtime="20201030 11:50:36.348"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.308" endtime="20201030 11:50:36.348"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.308" endtime="20201030 11:50:36.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:36.349" endtime="20201030 11:50:36.351"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.304" endtime="20201030 11:50:36.351"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.302" endtime="20201030 11:50:36.352"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.279" endtime="20201030 11:50:36.352"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:36.361" endtime="20201030 11:50:36.379"></status>
</kw>
<msg timestamp="20201030 11:50:36.380" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:36.360" endtime="20201030 11:50:36.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:36.382" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:36.381" endtime="20201030 11:50:36.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:36.383" endtime="20201030 11:50:36.385"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.357" endtime="20201030 11:50:36.386"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.355" endtime="20201030 11:50:36.386"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:36.389" endtime="20201030 11:50:36.390"></status>
</kw>
<msg timestamp="20201030 11:50:36.391" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 11:50:36.387" endtime="20201030 11:50:36.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:36.395" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 11:50:36.394" endtime="20201030 11:50:36.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:36.398" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 11:50:36.396" endtime="20201030 11:50:36.398"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.392" endtime="20201030 11:50:36.399"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:36.403" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 11:50:36.402" endtime="20201030 11:50:36.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:36.405" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 11:50:36.404" endtime="20201030 11:50:36.405"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.400" endtime="20201030 11:50:36.406"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:36.412" endtime="20201030 11:50:36.701"></status>
</kw>
<msg timestamp="20201030 11:50:36.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072497792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072501097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:36.411" endtime="20201030 11:50:36.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:36.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072497792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072501097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:36.706" endtime="20201030 11:50:36.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:36.715" endtime="20201030 11:50:36.716"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.408" endtime="20201030 11:50:36.717"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.406" endtime="20201030 11:50:36.718"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:36.722" level="INFO">${RESULT} = [{'diff': 3.3049999999951174e-06}, {'diff': 2.541000000008675e-06}, {'diff': 2.3340000000066086e-06}, {'diff': 2.319999999986222e-06}, {'diff': 2.319000000000626e-06}, {'diff': 2.319000000000626e-06},...</msg>
<status status="PASS" starttime="20201030 11:50:36.718" endtime="20201030 11:50:36.722"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:36.726" level="INFO">${OVERHEAD} = {'diff': [3.3049999999951174e-06, 2.541000000008675e-06, 2.3340000000066086e-06, 2.319999999986222e-06, 2.319000000000626e-06, 2.319000000000626e-06, 2.3200000000000998e-06, 2.277999999994451e-06, 2.3...</msg>
<status status="PASS" starttime="20201030 11:50:36.723" endtime="20201030 11:50:36.726"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:36.732" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201030 11:50:36.730" endtime="20201030 11:50:36.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:36.734" level="INFO">VALUE: [3.3049999999951174e-06, 2.541000000008675e-06, 2.3340000000066086e-06, 2.319999999986222e-06, 2.319000000000626e-06, 2.319000000000626e-06, 2.3200000000000998e-06, 2.277999999994451e-06, 2.3060000000074687e-06, 2.3200000000000998e-06, 2.333000000007135e-06, 2.333000000007135e-06, 2.3049999999941173e-06, 2.3200000000000998e-06, 2.319000000000626e-06, 2.3200000000000998e-06, 2.319000000000626e-06, 2.3060000000074687e-06, 2.3200000000000998e-06, 2.3340000000066086e-06, 2.3200000000000998e-06, 2.3200000000000998e-06, 2.3200000000000998e-06, 2.3340000000066086e-06, 2.3060000000074687e-06, 2.332999999993257e-06, 2.3200000000000998e-06, 2.3200000000000998e-06, 2.3339999999927308e-06, 2.333000000007135e-06, 2.29200000000096e-06, 2.305000000007995e-06, 2.3049999999941173e-06, 2.3060000000074687e-06, 2.3200000000000998e-06, 2.3340000000066086e-06, 2.332999999993257e-06, 2.305999999993591e-06, 2.319000000000626e-06, 2.3049999999941173e-06, 2.3340000000066086e-06, 2.3060000000074687e-06, 2.3200000000000998e-06, 2.305000000007995e-06, 2.3049999999941173e-06, 2.319000000000626e-06, 2.3049999999941173e-06, 2.3339999999927308e-06, 2.305999999993591e-06, 2.305999999993591e-06]</msg>
<status status="PASS" starttime="20201030 11:50:36.733" endtime="20201030 11:50:36.735"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.727" endtime="20201030 11:50:36.735"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.353" endtime="20201030 11:50:36.736"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:50:36.275" endtime="20201030 11:50:36.737" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:36.745" endtime="20201030 11:50:36.765"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.744" endtime="20201030 11:50:36.765"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:36.778" endtime="20201030 11:50:36.797"></status>
</kw>
<msg timestamp="20201030 11:50:36.798" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:36.777" endtime="20201030 11:50:36.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:36.800" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:36.799" endtime="20201030 11:50:36.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:36.803" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:50:36.802" endtime="20201030 11:50:36.804"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:36.774" endtime="20201030 11:50:36.805"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:36.772" endtime="20201030 11:50:36.805"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.770" endtime="20201030 11:50:36.805"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:50:36.809" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:50:36.808" endtime="20201030 11:50:36.810"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.806" endtime="20201030 11:50:36.810"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.770" endtime="20201030 11:50:36.810"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.769" endtime="20201030 11:50:36.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:36.811" endtime="20201030 11:50:36.812"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.768" endtime="20201030 11:50:36.813"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.766" endtime="20201030 11:50:36.813"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.742" endtime="20201030 11:50:36.814"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:36.824" endtime="20201030 11:50:36.868"></status>
</kw>
<msg timestamp="20201030 11:50:36.869" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:36.821" endtime="20201030 11:50:36.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:36.871" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:36.870" endtime="20201030 11:50:36.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:36.872" endtime="20201030 11:50:36.874"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.819" endtime="20201030 11:50:36.875"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.817" endtime="20201030 11:50:36.875"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:36.878" endtime="20201030 11:50:36.879"></status>
</kw>
<msg timestamp="20201030 11:50:36.880" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 11:50:36.876" endtime="20201030 11:50:36.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:36.884" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 11:50:36.883" endtime="20201030 11:50:36.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:36.886" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 11:50:36.885" endtime="20201030 11:50:36.886"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.880" endtime="20201030 11:50:36.887"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:36.891" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 11:50:36.890" endtime="20201030 11:50:36.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:36.893" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 11:50:36.892" endtime="20201030 11:50:36.893"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.887" endtime="20201030 11:50:36.893"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:36.900" endtime="20201030 11:50:37.187"></status>
</kw>
<msg timestamp="20201030 11:50:37.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071783514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.07180175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:36.898" endtime="20201030 11:50:37.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:37.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071783514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.07180175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:37.192" endtime="20201030 11:50:37.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:37.200" endtime="20201030 11:50:37.201"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.896" endtime="20201030 11:50:37.202"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.894" endtime="20201030 11:50:37.202"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:37.206" level="INFO">${RESULT} = [{'diff': 1.8235999999990926e-05}, {'diff': 1.813900000000035e-05}, {'diff': 1.8125000000007718e-05}, {'diff': 1.812499999999384e-05}, {'diff': 1.8138000000000876e-05}, {'diff': 1.8069999999995034e-05...</msg>
<status status="PASS" starttime="20201030 11:50:37.203" endtime="20201030 11:50:37.207"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:37.211" level="INFO">${OVERHEAD} = {'diff': [1.8235999999990926e-05, 1.813900000000035e-05, 1.8125000000007718e-05, 1.812499999999384e-05, 1.8138000000000876e-05, 1.8069999999995034e-05, 1.813900000000035e-05, 1.8125000000007718e-05, 1...</msg>
<status status="PASS" starttime="20201030 11:50:37.207" endtime="20201030 11:50:37.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:37.216" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201030 11:50:37.215" endtime="20201030 11:50:37.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:37.219" level="INFO">VALUE: [1.8235999999990926e-05, 1.813900000000035e-05, 1.8125000000007718e-05, 1.812499999999384e-05, 1.8138000000000876e-05, 1.8069999999995034e-05, 1.813900000000035e-05, 1.8125000000007718e-05, 1.813900000000035e-05, 1.813900000000035e-05, 1.8084000000001543e-05, 1.812499999999384e-05, 1.813900000000035e-05, 1.8208000000005664e-05, 1.8125000000007718e-05, 1.8125000000007718e-05, 1.813900000000035e-05, 1.8151999999993507e-05, 1.8125000000007718e-05, 1.813900000000035e-05, 1.8125000000007718e-05, 1.812499999999384e-05, 1.8221999999998295e-05, 1.811100000000121e-05, 1.8125000000007718e-05, 1.812499999999384e-05, 1.813900000000035e-05, 1.8084000000001543e-05, 1.812499999999384e-05, 1.813900000000035e-05, 1.8153000000006858e-05, 1.813900000000035e-05, 1.812499999999384e-05, 1.812499999999384e-05, 1.813900000000035e-05, 1.813900000000035e-05, 1.805500000000293e-05, 1.813900000000035e-05, 1.812499999999384e-05, 1.8125000000007718e-05, 1.813900000000035e-05, 1.813900000000035e-05, 1.813900000000035e-05, 1.813900000000035e-05, 1.813900000000035e-05, 1.813900000000035e-05, 1.8125000000007718e-05, 1.812499999999384e-05, 1.813900000000035e-05, 1.811100000000121e-05]</msg>
<status status="PASS" starttime="20201030 11:50:37.217" endtime="20201030 11:50:37.219"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.212" endtime="20201030 11:50:37.220"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.815" endtime="20201030 11:50:37.220"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:50:36.740" endtime="20201030 11:50:37.221" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:37.230" endtime="20201030 11:50:37.249"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.228" endtime="20201030 11:50:37.250"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:37.263" endtime="20201030 11:50:37.282"></status>
</kw>
<msg timestamp="20201030 11:50:37.282" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:37.261" endtime="20201030 11:50:37.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:37.285" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:37.283" endtime="20201030 11:50:37.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:37.288" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:50:37.286" endtime="20201030 11:50:37.288"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:37.258" endtime="20201030 11:50:37.289"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:37.256" endtime="20201030 11:50:37.289"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.255" endtime="20201030 11:50:37.290"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:50:37.293" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:50:37.293" endtime="20201030 11:50:37.294"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.290" endtime="20201030 11:50:37.295"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.254" endtime="20201030 11:50:37.295"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.253" endtime="20201030 11:50:37.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:37.296" endtime="20201030 11:50:37.298"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.252" endtime="20201030 11:50:37.298"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.250" endtime="20201030 11:50:37.299"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.227" endtime="20201030 11:50:37.299"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:37.308" endtime="20201030 11:50:37.418"></status>
</kw>
<msg timestamp="20201030 11:50:37.418" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:37.307" endtime="20201030 11:50:37.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:37.421" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:37.419" endtime="20201030 11:50:37.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:37.422" endtime="20201030 11:50:37.424"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.304" endtime="20201030 11:50:37.424"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.302" endtime="20201030 11:50:37.425"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:37.427" endtime="20201030 11:50:37.429"></status>
</kw>
<msg timestamp="20201030 11:50:37.429" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 11:50:37.425" endtime="20201030 11:50:37.429"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:37.433" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 11:50:37.432" endtime="20201030 11:50:37.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:37.436" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 11:50:37.435" endtime="20201030 11:50:37.436"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.430" endtime="20201030 11:50:37.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:37.440" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 11:50:37.439" endtime="20201030 11:50:37.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:37.442" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 11:50:37.441" endtime="20201030 11:50:37.443"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.437" endtime="20201030 11:50:37.443"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:37.449" endtime="20201030 11:50:37.743"></status>
</kw>
<msg timestamp="20201030 11:50:37.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071878958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071913875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:37.448" endtime="20201030 11:50:37.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:37.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071878958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071913875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:37.748" endtime="20201030 11:50:37.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:37.756" endtime="20201030 11:50:37.758"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.445" endtime="20201030 11:50:37.758"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.444" endtime="20201030 11:50:37.759"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:37.763" level="INFO">${RESULT} = [{'diff': 3.4916999999995424e-05}, {'diff': 3.465300000000948e-05}, {'diff': 3.4652999999995604e-05}, {'diff': 3.469500000000125e-05}, {'diff': 3.473600000000743e-05}, {'diff': 3.458400000000417e-05},...</msg>
<status status="PASS" starttime="20201030 11:50:37.759" endtime="20201030 11:50:37.764"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:37.768" level="INFO">${OVERHEAD} = {'diff': [3.4916999999995424e-05, 3.465300000000948e-05, 3.4652999999995604e-05, 3.469500000000125e-05, 3.473600000000743e-05, 3.458400000000417e-05, 3.465199999999613e-05, 3.4652999999995604e-05, 3.4...</msg>
<status status="PASS" starttime="20201030 11:50:37.764" endtime="20201030 11:50:37.768"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:37.772" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201030 11:50:37.771" endtime="20201030 11:50:37.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:37.775" level="INFO">VALUE: [3.4916999999995424e-05, 3.465300000000948e-05, 3.4652999999995604e-05, 3.469500000000125e-05, 3.473600000000743e-05, 3.458400000000417e-05, 3.465199999999613e-05, 3.4652999999995604e-05, 3.468000000000915e-05, 3.4652999999995604e-05, 3.4652999999995604e-05, 3.465300000000948e-05, 3.466600000000264e-05, 3.470800000000829e-05, 3.4652999999995604e-05, 3.466700000000211e-05, 3.4652999999995604e-05, 3.466700000000211e-05, 3.4638999999989095e-05, 3.4652999999995604e-05, 3.4652999999995604e-05, 3.472300000000039e-05, 3.4652999999995604e-05, 3.465300000000948e-05, 3.4638999999989095e-05, 3.466700000000211e-05, 3.468100000000862e-05, 3.466600000000264e-05, 3.4638999999989095e-05, 3.4652999999995604e-05, 3.465199999999613e-05, 3.458300000000469e-05, 3.466600000001652e-05, 3.466600000001652e-05, 3.4652999999995604e-05, 3.4610999999989955e-05, 3.468000000000915e-05, 3.4652999999995604e-05, 3.466700000001599e-05, 3.4652999999995604e-05, 3.462500000001034e-05, 3.4652999999995604e-05, 3.463900000000297e-05, 3.469400000000178e-05, 3.4652999999995604e-05, 3.4652999999995604e-05, 3.466599999998876e-05, 3.4666999999988235e-05, 3.466599999998876e-05, 3.4652999999995604e-05]</msg>
<status status="PASS" starttime="20201030 11:50:37.773" endtime="20201030 11:50:37.775"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.769" endtime="20201030 11:50:37.776"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.300" endtime="20201030 11:50:37.777"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:50:37.224" endtime="20201030 11:50:37.778" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:37.786" endtime="20201030 11:50:37.806"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.785" endtime="20201030 11:50:37.806"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:37.820" endtime="20201030 11:50:37.839"></status>
</kw>
<msg timestamp="20201030 11:50:37.840" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:37.819" endtime="20201030 11:50:37.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:37.842" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:37.841" endtime="20201030 11:50:37.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:37.846" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:50:37.843" endtime="20201030 11:50:37.846"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:37.815" endtime="20201030 11:50:37.846"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:37.813" endtime="20201030 11:50:37.847"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.812" endtime="20201030 11:50:37.847"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:50:37.851" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:50:37.850" endtime="20201030 11:50:37.851"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.848" endtime="20201030 11:50:37.852"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.811" endtime="20201030 11:50:37.852"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.810" endtime="20201030 11:50:37.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:37.853" endtime="20201030 11:50:37.854"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.809" endtime="20201030 11:50:37.855"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.807" endtime="20201030 11:50:37.855"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.783" endtime="20201030 11:50:37.856"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:37.865" endtime="20201030 11:50:37.885"></status>
</kw>
<msg timestamp="20201030 11:50:37.886" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:37.863" endtime="20201030 11:50:37.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:37.888" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:37.887" endtime="20201030 11:50:37.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:37.889" endtime="20201030 11:50:37.891"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.861" endtime="20201030 11:50:37.892"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.858" endtime="20201030 11:50:37.892"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:37.895" endtime="20201030 11:50:37.896"></status>
</kw>
<msg timestamp="20201030 11:50:37.897" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 11:50:37.893" endtime="20201030 11:50:37.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:37.901" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 11:50:37.900" endtime="20201030 11:50:37.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:37.903" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 11:50:37.902" endtime="20201030 11:50:37.903"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.898" endtime="20201030 11:50:37.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:37.908" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 11:50:37.907" endtime="20201030 11:50:37.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:37.910" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 11:50:37.909" endtime="20201030 11:50:37.910"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.904" endtime="20201030 11:50:37.911"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:37.918" endtime="20201030 11:50:38.206"></status>
</kw>
<msg timestamp="20201030 11:50:38.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071293431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071294306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:37.916" endtime="20201030 11:50:38.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:38.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071293431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071294306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:38.210" endtime="20201030 11:50:38.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:38.218" endtime="20201030 11:50:38.220"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.913" endtime="20201030 11:50:38.220"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.911" endtime="20201030 11:50:38.221"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:38.225" level="INFO">${RESULT} = [{'diff': 8.749999999974056e-07}, {'diff': 6.109999999975857e-07}, {'diff': 5.970000000049547e-07}, {'diff': 5.829999999984459e-07}, {'diff': 6.119999999970593e-07}, {'diff': 6.109999999975857e-07}, {...</msg>
<status status="PASS" starttime="20201030 11:50:38.222" endtime="20201030 11:50:38.225"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:38.229" level="INFO">${OVERHEAD} = {'diff': [8.749999999974056e-07, 6.109999999975857e-07, 5.970000000049547e-07, 5.829999999984459e-07, 6.119999999970593e-07, 6.109999999975857e-07, 6.109999999975857e-07, 5.970000000049547e-07, 6.2499...</msg>
<status status="PASS" starttime="20201030 11:50:38.226" endtime="20201030 11:50:38.229"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:38.234" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201030 11:50:38.233" endtime="20201030 11:50:38.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:38.236" level="INFO">VALUE: [8.749999999974056e-07, 6.109999999975857e-07, 5.970000000049547e-07, 5.829999999984459e-07, 6.119999999970593e-07, 6.109999999975857e-07, 6.109999999975857e-07, 5.970000000049547e-07, 6.249999999902167e-07, 6.109999999975857e-07, 5.970000000049547e-07, 6.120000000109371e-07, 5.969999999910769e-07, 5.970000000049547e-07, 5.970000000049547e-07, 5.839999999979195e-07, 5.970000000049547e-07, 6.119999999970593e-07, 6.119999999970593e-07, 6.109999999975857e-07, 6.109999999975857e-07, 6.109999999975857e-07, 6.109999999975857e-07, 6.110000000114635e-07, 6.109999999975857e-07, 5.829999999984459e-07, 6.119999999970593e-07, 6.109999999975857e-07, 6.109999999975857e-07, 6.109999999975857e-07, 6.109999999975857e-07, 6.109999999975857e-07, 6.109999999975857e-07, 6.119999999970593e-07, 6.109999999975857e-07, 5.969999999910769e-07, 6.109999999975857e-07, 6.110000000114635e-07, 5.970000000049547e-07, 6.109999999975857e-07, 6.109999999975857e-07, 6.109999999975857e-07, 6.109999999975857e-07, 6.110000000114635e-07, 5.829999999984459e-07, 6.109999999975857e-07, 6.109999999975857e-07, 6.109999999975857e-07, 6.109999999975857e-07, 5.970000000049547e-07]</msg>
<status status="PASS" starttime="20201030 11:50:38.235" endtime="20201030 11:50:38.236"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.230" endtime="20201030 11:50:38.237"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.856" endtime="20201030 11:50:38.237"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:50:37.780" endtime="20201030 11:50:38.239" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:38.247" endtime="20201030 11:50:38.267"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.246" endtime="20201030 11:50:38.267"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:38.281" endtime="20201030 11:50:38.300"></status>
</kw>
<msg timestamp="20201030 11:50:38.301" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:38.280" endtime="20201030 11:50:38.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:38.303" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:38.302" endtime="20201030 11:50:38.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:38.306" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:50:38.304" endtime="20201030 11:50:38.306"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:38.277" endtime="20201030 11:50:38.307"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:38.275" endtime="20201030 11:50:38.308"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.273" endtime="20201030 11:50:38.308"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:50:38.312" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:50:38.311" endtime="20201030 11:50:38.312"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.309" endtime="20201030 11:50:38.312"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.273" endtime="20201030 11:50:38.312"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.272" endtime="20201030 11:50:38.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:38.313" endtime="20201030 11:50:38.315"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.271" endtime="20201030 11:50:38.316"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.268" endtime="20201030 11:50:38.316"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.245" endtime="20201030 11:50:38.316"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:38.326" endtime="20201030 11:50:38.369"></status>
</kw>
<msg timestamp="20201030 11:50:38.370" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:38.324" endtime="20201030 11:50:38.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:38.372" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:38.371" endtime="20201030 11:50:38.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:38.373" endtime="20201030 11:50:38.375"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.321" endtime="20201030 11:50:38.376"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.319" endtime="20201030 11:50:38.376"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:38.379" endtime="20201030 11:50:38.381"></status>
</kw>
<msg timestamp="20201030 11:50:38.382" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 11:50:38.377" endtime="20201030 11:50:38.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:38.386" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 11:50:38.385" endtime="20201030 11:50:38.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:38.388" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 11:50:38.387" endtime="20201030 11:50:38.388"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.383" endtime="20201030 11:50:38.389"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:38.393" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 11:50:38.392" endtime="20201030 11:50:38.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:38.395" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 11:50:38.394" endtime="20201030 11:50:38.395"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.389" endtime="20201030 11:50:38.396"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:38.402" endtime="20201030 11:50:38.690"></status>
</kw>
<msg timestamp="20201030 11:50:38.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071412458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071419861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:38.400" endtime="20201030 11:50:38.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:38.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071412458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071419861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:38.694" endtime="20201030 11:50:38.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:38.702" endtime="20201030 11:50:38.703"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.398" endtime="20201030 11:50:38.704"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.396" endtime="20201030 11:50:38.704"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:38.708" level="INFO">${RESULT} = [{'diff': 7.403000000003046e-06}, {'diff': 7.235999999993803e-06}, {'diff': 7.250000000000312e-06}, {'diff': 7.236000000007681e-06}, {'diff': 7.236000000007681e-06}, {'diff': 7.235999999993803e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:50:38.705" endtime="20201030 11:50:38.709"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:38.713" level="INFO">${OVERHEAD} = {'diff': [7.403000000003046e-06, 7.235999999993803e-06, 7.250000000000312e-06, 7.236000000007681e-06, 7.236000000007681e-06, 7.235999999993803e-06, 7.290999999992609e-06, 7.263999999992943e-06, 7.2640...</msg>
<status status="PASS" starttime="20201030 11:50:38.709" endtime="20201030 11:50:38.713"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:38.718" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201030 11:50:38.717" endtime="20201030 11:50:38.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:38.720" level="INFO">VALUE: [7.403000000003046e-06, 7.235999999993803e-06, 7.250000000000312e-06, 7.236000000007681e-06, 7.236000000007681e-06, 7.235999999993803e-06, 7.290999999992609e-06, 7.263999999992943e-06, 7.2640000000068206e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.235999999993803e-06, 7.250000000000312e-06, 7.222000000001172e-06, 7.193999999988154e-06, 7.235999999993803e-06, 7.236000000007681e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.236000000007681e-06, 7.263999999992943e-06, 7.235999999993803e-06, 7.222000000001172e-06, 7.208999999994137e-06, 7.249999999986434e-06, 7.250000000000312e-06, 7.167000000002366e-06, 7.181000000008875e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.179999999995523e-06, 7.222000000001172e-06, 7.222000000001172e-06, 7.236000000007681e-06, 7.250000000000312e-06, 7.195000000001506e-06, 7.222000000001172e-06, 7.236999999993277e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.207999999994663e-06, 7.304999999999118e-06, 7.235999999993803e-06, 7.207999999994663e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.222000000001172e-06, 7.235999999993803e-06]</msg>
<status status="PASS" starttime="20201030 11:50:38.719" endtime="20201030 11:50:38.721"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.714" endtime="20201030 11:50:38.721"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.317" endtime="20201030 11:50:38.722"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:50:38.241" endtime="20201030 11:50:38.723" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:38.732" endtime="20201030 11:50:38.751"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.730" endtime="20201030 11:50:38.752"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:38.765" endtime="20201030 11:50:38.784"></status>
</kw>
<msg timestamp="20201030 11:50:38.784" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:38.763" endtime="20201030 11:50:38.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:38.787" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:38.785" endtime="20201030 11:50:38.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:38.790" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:50:38.788" endtime="20201030 11:50:38.790"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:38.761" endtime="20201030 11:50:38.791"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:38.758" endtime="20201030 11:50:38.791"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.757" endtime="20201030 11:50:38.792"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:50:38.795" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:50:38.795" endtime="20201030 11:50:38.796"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.792" endtime="20201030 11:50:38.796"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.756" endtime="20201030 11:50:38.796"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.756" endtime="20201030 11:50:38.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:38.797" endtime="20201030 11:50:38.799"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.754" endtime="20201030 11:50:38.799"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.752" endtime="20201030 11:50:38.799"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.729" endtime="20201030 11:50:38.800"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:38.812" endtime="20201030 11:50:38.924"></status>
</kw>
<msg timestamp="20201030 11:50:38.924" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:38.811" endtime="20201030 11:50:38.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:38.927" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:38.925" endtime="20201030 11:50:38.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:38.928" endtime="20201030 11:50:38.930"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.808" endtime="20201030 11:50:38.930"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.803" endtime="20201030 11:50:38.931"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:38.933" endtime="20201030 11:50:38.935"></status>
</kw>
<msg timestamp="20201030 11:50:38.935" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 11:50:38.931" endtime="20201030 11:50:38.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:38.940" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 11:50:38.938" endtime="20201030 11:50:38.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:38.942" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 11:50:38.941" endtime="20201030 11:50:38.942"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.936" endtime="20201030 11:50:38.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:38.946" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 11:50:38.945" endtime="20201030 11:50:38.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:38.948" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 11:50:38.947" endtime="20201030 11:50:38.949"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.943" endtime="20201030 11:50:38.949"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:38.956" endtime="20201030 11:50:39.248"></status>
</kw>
<msg timestamp="20201030 11:50:39.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074966236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074980361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:38.954" endtime="20201030 11:50:39.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:39.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074966236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074980361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:39.252" endtime="20201030 11:50:39.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:39.260" endtime="20201030 11:50:39.262"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.951" endtime="20201030 11:50:39.263"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.950" endtime="20201030 11:50:39.263"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:39.267" level="INFO">${RESULT} = [{'diff': 1.412499999998984e-05}, {'diff': 1.3972000000000984e-05}, {'diff': 1.3958000000008353e-05}, {'diff': 1.3957999999994475e-05}, {'diff': 1.3945000000001317e-05}, {'diff': 1.3973000000000457e-0...</msg>
<status status="PASS" starttime="20201030 11:50:39.264" endtime="20201030 11:50:39.267"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:39.272" level="INFO">${OVERHEAD} = {'diff': [1.412499999998984e-05, 1.3972000000000984e-05, 1.3958000000008353e-05, 1.3957999999994475e-05, 1.3945000000001317e-05, 1.3973000000000457e-05, 1.3972000000000984e-05, 1.3957999999994475e-05,...</msg>
<status status="PASS" starttime="20201030 11:50:39.268" endtime="20201030 11:50:39.272"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:39.277" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201030 11:50:39.276" endtime="20201030 11:50:39.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:39.279" level="INFO">VALUE: [1.412499999998984e-05, 1.3972000000000984e-05, 1.3958000000008353e-05, 1.3957999999994475e-05, 1.3945000000001317e-05, 1.3973000000000457e-05, 1.3972000000000984e-05, 1.3957999999994475e-05, 1.3945000000001317e-05, 1.3959000000007826e-05, 1.3945000000001317e-05, 1.3959000000007826e-05, 1.3958999999993948e-05, 1.3958000000008353e-05, 1.3945000000001317e-05, 1.3972000000000984e-05, 1.3972000000000984e-05, 1.402699999999979e-05, 1.3944000000001844e-05, 1.3972000000000984e-05, 1.3944000000001844e-05, 1.3958000000008353e-05, 1.3985999999993615e-05, 1.3945000000001317e-05, 1.3973000000000457e-05, 1.3972000000000984e-05, 1.3889000000003038e-05, 1.3943999999987966e-05, 1.3958000000008353e-05, 1.3958000000008353e-05, 1.3943999999987966e-05, 1.3917000000002178e-05, 1.3958000000008353e-05, 1.3973000000000457e-05, 1.3958000000008353e-05, 1.3972000000000984e-05, 1.3931000000022564e-05, 1.3972000000000984e-05, 1.3959000000007826e-05, 1.394499999998744e-05, 1.3972000000000984e-05, 1.3973000000000457e-05, 1.3999999999986246e-05, 1.394499999998744e-05, 1.3959000000007826e-05, 1.3944000000015722e-05, 1.3943999999987966e-05, 1.3972000000000984e-05, 1.3958000000008353e-05, 1.4013000000007159e-05]</msg>
<status status="PASS" starttime="20201030 11:50:39.278" endtime="20201030 11:50:39.280"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.273" endtime="20201030 11:50:39.280"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.801" endtime="20201030 11:50:39.281"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:50:38.725" endtime="20201030 11:50:39.282" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:39.290" endtime="20201030 11:50:39.310"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.289" endtime="20201030 11:50:39.310"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:39.323" endtime="20201030 11:50:39.343"></status>
</kw>
<msg timestamp="20201030 11:50:39.343" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:39.322" endtime="20201030 11:50:39.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:39.346" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:39.344" endtime="20201030 11:50:39.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:39.350" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:50:39.347" endtime="20201030 11:50:39.350"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:39.319" endtime="20201030 11:50:39.351"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:39.317" endtime="20201030 11:50:39.351"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.316" endtime="20201030 11:50:39.352"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:50:39.355" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:50:39.355" endtime="20201030 11:50:39.356"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.352" endtime="20201030 11:50:39.356"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.315" endtime="20201030 11:50:39.356"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.314" endtime="20201030 11:50:39.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:39.357" endtime="20201030 11:50:39.359"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.313" endtime="20201030 11:50:39.359"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.311" endtime="20201030 11:50:39.360"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.288" endtime="20201030 11:50:39.360"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 11:50:39.364" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 11:50:39.373" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 11:50:42.545" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 11:50:39.363" endtime="20201030 11:50:42.545"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 11:50:42.548" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 11:50:42.546" endtime="20201030 11:50:42.548"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.361" endtime="20201030 11:50:42.549"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:42.553" endtime="20201030 11:50:42.572"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.551" endtime="20201030 11:50:42.573"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:42.581" endtime="20201030 11:50:42.589"></status>
</kw>
<msg timestamp="20201030 11:50:42.589" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:42.580" endtime="20201030 11:50:42.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:42.592" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:42.591" endtime="20201030 11:50:42.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:42.594" endtime="20201030 11:50:42.596"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.577" endtime="20201030 11:50:42.596"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.575" endtime="20201030 11:50:42.597"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:42.603" endtime="20201030 11:50:42.881"></status>
</kw>
<msg timestamp="20201030 11:50:42.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018206222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018209653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:42.601" endtime="20201030 11:50:42.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:42.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018206222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018209653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:42.886" endtime="20201030 11:50:42.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:42.894" endtime="20201030 11:50:42.896"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.599" endtime="20201030 11:50:42.896"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.597" endtime="20201030 11:50:42.897"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:42.901" level="INFO">${PHILIP_RES} = [{'diff': 3.4309999999981855e-06}, {'diff': 2.7090000000000447e-06}, {'diff': 2.7090000000000447e-06}, {'diff': 2.722000000000141e-06}, {'diff': 2.722000000000141e-06}, {'diff': 2.722000000000141e-06}...</msg>
<status status="PASS" starttime="20201030 11:50:42.898" endtime="20201030 11:50:42.901"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:42.906" level="INFO">${RESULT} = {'diff': [3.4309999999981855e-06, 2.7090000000000447e-06, 2.7090000000000447e-06, 2.722000000000141e-06, 2.722000000000141e-06, 2.722000000000141e-06, 2.722000000000141e-06, 2.722000000000141e-06, 2.7...</msg>
<status status="PASS" starttime="20201030 11:50:42.902" endtime="20201030 11:50:42.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:42.911" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:42.910" endtime="20201030 11:50:42.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:42.913" level="INFO">VALUE: [3.4309999999981855e-06, 2.7090000000000447e-06, 2.7090000000000447e-06, 2.722000000000141e-06, 2.722000000000141e-06, 2.722000000000141e-06, 2.722000000000141e-06, 2.722000000000141e-06, 2.722000000000141e-06, 2.722000000000141e-06, 2.722000000000141e-06, 2.722000000000141e-06, 2.7229999999996146e-06, 2.735999999999711e-06, 2.735999999999711e-06, 2.722000000000141e-06, 2.7229999999996146e-06, 2.7229999999996146e-06, 2.735999999999711e-06, 2.722000000000141e-06, 2.722000000000141e-06, 2.722000000000141e-06, 2.722000000000141e-06, 2.722000000000141e-06, 2.722000000000141e-06, 2.722000000000141e-06, 2.790999999998517e-06, 2.722000000000141e-06, 2.722000000000141e-06, 2.722000000000141e-06, 2.722000000000141e-06, 2.722000000000141e-06, 2.681000000000905e-06, 2.7090000000000447e-06, 2.735999999999711e-06, 2.7229999999996146e-06, 2.7229999999996146e-06, 2.7229999999996146e-06, 2.7229999999996146e-06, 2.681000000000905e-06, 2.7090000000000447e-06, 2.7229999999996146e-06, 2.7229999999996146e-06, 2.7229999999996146e-06, 2.7229999999996146e-06, 2.7229999999996146e-06, 2.681000000000905e-06, 2.7090000000000447e-06, 2.7229999999996146e-06, 2.7229999999996146e-06]</msg>
<status status="PASS" starttime="20201030 11:50:42.912" endtime="20201030 11:50:42.914"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.907" endtime="20201030 11:50:42.914"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.573" endtime="20201030 11:50:42.915"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.550" endtime="20201030 11:50:42.915"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:42.917" endtime="20201030 11:50:42.936"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.916" endtime="20201030 11:50:42.937"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:42.945" endtime="20201030 11:50:42.953"></status>
</kw>
<msg timestamp="20201030 11:50:42.953" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:42.944" endtime="20201030 11:50:42.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:42.956" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:42.954" endtime="20201030 11:50:42.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:42.957" endtime="20201030 11:50:42.959"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.941" endtime="20201030 11:50:42.959"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.939" endtime="20201030 11:50:42.960"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:42.966" endtime="20201030 11:50:43.262"></status>
</kw>
<msg timestamp="20201030 11:50:43.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018098764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018104889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:42.964" endtime="20201030 11:50:43.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:43.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018098764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018104889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:43.266" endtime="20201030 11:50:43.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:43.274" endtime="20201030 11:50:43.276"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.962" endtime="20201030 11:50:43.276"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.960" endtime="20201030 11:50:43.277"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:43.281" level="INFO">${PHILIP_RES} = [{'diff': 6.124999999999187e-06}, {'diff': 5.194000000000032e-06}, {'diff': 5.166000000000892e-06}, {'diff': 5.180000000000462e-06}, {'diff': 5.180999999999936e-06}, {'diff': 5.1949999999995056e-06}, ...</msg>
<status status="PASS" starttime="20201030 11:50:43.278" endtime="20201030 11:50:43.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:43.285" level="INFO">${RESULT} = {'diff': [6.124999999999187e-06, 5.194000000000032e-06, 5.166000000000892e-06, 5.180000000000462e-06, 5.180999999999936e-06, 5.1949999999995056e-06, 5.1949999999995056e-06, 5.250000000001781e-06, 5.18...</msg>
<status status="PASS" starttime="20201030 11:50:43.282" endtime="20201030 11:50:43.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:43.289" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:43.288" endtime="20201030 11:50:43.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:43.292" level="INFO">VALUE: [6.124999999999187e-06, 5.194000000000032e-06, 5.166000000000892e-06, 5.180000000000462e-06, 5.180999999999936e-06, 5.1949999999995056e-06, 5.1949999999995056e-06, 5.250000000001781e-06, 5.180000000000462e-06, 5.194000000000032e-06, 5.167000000000366e-06, 5.166999999996896e-06, 5.180999999999936e-06, 5.180999999999936e-06, 5.167000000000366e-06, 5.194000000000032e-06, 5.194000000000032e-06, 5.194000000000032e-06, 5.166999999996896e-06, 5.167000000000366e-06, 5.180999999999936e-06, 5.180000000000462e-06, 5.194000000000032e-06, 5.194000000000032e-06, 5.125000000001656e-06, 5.153000000000796e-06, 5.250000000001781e-06, 5.194000000000032e-06, 5.194000000000032e-06, 5.165999999997423e-06, 5.111000000002086e-06, 5.1949999999995056e-06, 5.180999999999936e-06, 5.195000000002975e-06, 5.194000000000032e-06, 5.180000000000462e-06, 5.194000000000032e-06, 5.1949999999995056e-06, 5.1949999999995056e-06, 5.1949999999995056e-06, 5.166999999996896e-06, 5.166000000000892e-06, 5.180000000000462e-06, 5.167000000000366e-06, 5.152999999997326e-06, 5.2499999999983116e-06, 5.1949999999995056e-06, 5.194000000000032e-06, 5.166000000000892e-06, 5.166000000000892e-06]</msg>
<status status="PASS" starttime="20201030 11:50:43.290" endtime="20201030 11:50:43.292"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.286" endtime="20201030 11:50:43.293"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.938" endtime="20201030 11:50:43.293"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.915" endtime="20201030 11:50:43.293"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:43.296" endtime="20201030 11:50:43.315"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.294" endtime="20201030 11:50:43.316"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:43.325" endtime="20201030 11:50:43.333"></status>
</kw>
<msg timestamp="20201030 11:50:43.334" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:43.322" endtime="20201030 11:50:43.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:43.336" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:43.335" endtime="20201030 11:50:43.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:43.337" endtime="20201030 11:50:43.339"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.320" endtime="20201030 11:50:43.340"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.318" endtime="20201030 11:50:43.340"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:43.347" endtime="20201030 11:50:43.629"></status>
</kw>
<msg timestamp="20201030 11:50:43.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018969556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018978, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:50:43.345" endtime="20201030 11:50:43.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:43.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018969556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018978, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:50:43.634" endtime="20201030 11:50:43.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:43.642" endtime="20201030 11:50:43.644"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.342" endtime="20201030 11:50:43.644"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.341" endtime="20201030 11:50:43.645"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:43.649" level="INFO">${PHILIP_RES} = [{'diff': 8.443999999999813e-06}, {'diff': 8.097000000002047e-06}, {'diff': 8.166999999999897e-06}, {'diff': 8.097000000002047e-06}, {'diff': 8.11200000000109e-06}, {'diff': 8.082999999999008e-06}, {'...</msg>
<status status="PASS" starttime="20201030 11:50:43.646" endtime="20201030 11:50:43.649"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:43.653" level="INFO">${RESULT} = {'diff': [8.443999999999813e-06, 8.097000000002047e-06, 8.166999999999897e-06, 8.097000000002047e-06, 8.11200000000109e-06, 8.082999999999008e-06, 8.097000000002047e-06, 8.082999999999008e-06, 8.06900...</msg>
<status status="PASS" starttime="20201030 11:50:43.650" endtime="20201030 11:50:43.653"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:43.657" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:43.656" endtime="20201030 11:50:43.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:43.661" level="INFO">VALUE: [8.443999999999813e-06, 8.097000000002047e-06, 8.166999999999897e-06, 8.097000000002047e-06, 8.11200000000109e-06, 8.082999999999008e-06, 8.097000000002047e-06, 8.082999999999008e-06, 8.069000000002907e-06, 8.097999999998051e-06, 8.083000000002477e-06, 8.083999999998481e-06, 8.097000000002047e-06, 8.139000000000757e-06, 8.111000000001617e-06, 8.096999999998578e-06, 8.09800000000152e-06, 8.111000000001617e-06, 8.083999999998481e-06, 8.097000000002047e-06, 8.096999999998578e-06, 8.08400000000195e-06, 8.166999999999897e-06, 8.097000000002047e-06, 8.096999999998578e-06, 8.096999999998578e-06, 8.09800000000152e-06, 8.096999999998578e-06, 8.08400000000195e-06, 8.068999999999438e-06, 8.083000000002477e-06, 8.110999999998147e-06, 8.082999999999008e-06, 8.097999999998051e-06, 8.097000000002047e-06, 8.097000000002047e-06, 8.096999999998578e-06, 8.111000000001617e-06, 8.097999999998051e-06, 8.097000000002047e-06, 8.096999999998578e-06, 8.083000000002477e-06, 8.096999999998578e-06, 8.09800000000152e-06, 8.082999999999008e-06, 8.097999999998051e-06, 8.082999999999008e-06, 8.138999999997287e-06, 8.139000000000757e-06, 8.096999999998578e-06]</msg>
<status status="PASS" starttime="20201030 11:50:43.659" endtime="20201030 11:50:43.661"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.654" endtime="20201030 11:50:43.662"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.316" endtime="20201030 11:50:43.662"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.294" endtime="20201030 11:50:43.662"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:43.665" endtime="20201030 11:50:43.684"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.663" endtime="20201030 11:50:43.685"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:43.693" endtime="20201030 11:50:43.702"></status>
</kw>
<msg timestamp="20201030 11:50:43.702" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:43.692" endtime="20201030 11:50:43.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:43.705" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:43.703" endtime="20201030 11:50:43.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:43.706" endtime="20201030 11:50:43.707"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.689" endtime="20201030 11:50:43.708"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.687" endtime="20201030 11:50:43.708"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:43.715" endtime="20201030 11:50:44.000"></status>
</kw>
<msg timestamp="20201030 11:50:44.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018126958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018138028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:43.713" endtime="20201030 11:50:44.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:44.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018126958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018138028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:44.004" endtime="20201030 11:50:44.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:44.012" endtime="20201030 11:50:44.014"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.711" endtime="20201030 11:50:44.015"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.709" endtime="20201030 11:50:44.015"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:44.019" level="INFO">${PHILIP_RES} = [{'diff': 1.1070000000001912e-05}, {'diff': 1.0722999999997207e-05}, {'diff': 1.0736000000000773e-05}, {'diff': 1.0679999999999024e-05}, {'diff': 1.0679999999999024e-05}, {'diff': 1.0722000000001203e-...</msg>
<status status="PASS" starttime="20201030 11:50:44.016" endtime="20201030 11:50:44.019"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:44.024" level="INFO">${RESULT} = {'diff': [1.1070000000001912e-05, 1.0722999999997207e-05, 1.0736000000000773e-05, 1.0679999999999024e-05, 1.0679999999999024e-05, 1.0722000000001203e-05, 1.0735999999997303e-05, 1.0736000000000773e-05...</msg>
<status status="PASS" starttime="20201030 11:50:44.020" endtime="20201030 11:50:44.024"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:44.028" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:44.027" endtime="20201030 11:50:44.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:44.031" level="INFO">VALUE: [1.1070000000001912e-05, 1.0722999999997207e-05, 1.0736000000000773e-05, 1.0679999999999024e-05, 1.0679999999999024e-05, 1.0722000000001203e-05, 1.0735999999997303e-05, 1.0736000000000773e-05, 1.0737000000000246e-05, 1.0735999999997303e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0736000000000773e-05, 1.0736000000000773e-05, 1.0737000000000246e-05, 1.0736000000000773e-05, 1.0750000000000343e-05, 1.0736000000000773e-05, 1.0750000000000343e-05, 1.0736000000000773e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0736000000000773e-05, 1.0750000000000343e-05, 1.0735999999997303e-05, 1.0736000000000773e-05, 1.0735999999997303e-05, 1.0750000000000343e-05, 1.0736000000000773e-05, 1.0721999999997733e-05, 1.0791999999999052e-05, 1.0721999999997733e-05, 1.0736000000000773e-05, 1.0737000000000246e-05, 1.0721999999997733e-05, 1.0736000000000773e-05, 1.0806000000002092e-05, 1.0750000000000343e-05, 1.0736000000000773e-05, 1.0791999999999052e-05, 1.0736000000000773e-05, 1.0763999999999913e-05, 1.0736000000000773e-05, 1.0736000000000773e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0777000000000009e-05, 1.0750000000000343e-05, 1.0736000000000773e-05, 1.0722000000001203e-05]</msg>
<status status="PASS" starttime="20201030 11:50:44.030" endtime="20201030 11:50:44.031"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.025" endtime="20201030 11:50:44.032"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.685" endtime="20201030 11:50:44.032"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.663" endtime="20201030 11:50:44.032"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:44.035" endtime="20201030 11:50:44.054"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.033" endtime="20201030 11:50:44.055"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:44.064" endtime="20201030 11:50:44.072"></status>
</kw>
<msg timestamp="20201030 11:50:44.072" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:44.062" endtime="20201030 11:50:44.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:44.075" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:44.073" endtime="20201030 11:50:44.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:44.076" endtime="20201030 11:50:44.078"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.059" endtime="20201030 11:50:44.078"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.057" endtime="20201030 11:50:44.079"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:44.085" endtime="20201030 11:50:44.370"></status>
</kw>
<msg timestamp="20201030 11:50:44.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018104917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018118986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:44.083" endtime="20201030 11:50:44.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:44.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018104917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018118986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:44.375" endtime="20201030 11:50:44.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:44.383" endtime="20201030 11:50:44.386"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.081" endtime="20201030 11:50:44.386"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.079" endtime="20201030 11:50:44.387"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:44.391" level="INFO">${PHILIP_RES} = [{'diff': 1.40689999999985e-05}, {'diff': 1.3749999999999873e-05}, {'diff': 1.3695000000001067e-05}, {'diff': 1.3694000000001594e-05}, {'diff': 1.3736000000000304e-05}, {'diff': 1.3736000000000304e-05...</msg>
<status status="PASS" starttime="20201030 11:50:44.388" endtime="20201030 11:50:44.391"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:44.395" level="INFO">${RESULT} = {'diff': [1.40689999999985e-05, 1.3749999999999873e-05, 1.3695000000001067e-05, 1.3694000000001594e-05, 1.3736000000000304e-05, 1.3736000000000304e-05, 1.3749999999999873e-05, 1.3736000000000304e-05, ...</msg>
<status status="PASS" starttime="20201030 11:50:44.392" endtime="20201030 11:50:44.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:44.399" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:44.398" endtime="20201030 11:50:44.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:44.402" level="INFO">VALUE: [1.40689999999985e-05, 1.3749999999999873e-05, 1.3695000000001067e-05, 1.3694000000001594e-05, 1.3736000000000304e-05, 1.3736000000000304e-05, 1.3749999999999873e-05, 1.3736000000000304e-05, 1.3736000000000304e-05, 1.3749999999999873e-05, 1.3763999999999443e-05, 1.3777999999999013e-05, 1.3735999999996834e-05, 1.3735999999996834e-05, 1.3749999999999873e-05, 1.3749999999999873e-05, 1.3736000000000304e-05, 1.3736000000000304e-05, 1.3749999999999873e-05, 1.3680999999998028e-05, 1.3749999999999873e-05, 1.3707999999997694e-05, 1.3736000000000304e-05, 1.3736000000000304e-05, 1.3749999999999873e-05, 1.3736000000000304e-05, 1.379099999999911e-05, 1.3749999999999873e-05, 1.3736000000000304e-05, 1.3763999999999443e-05, 1.3736000000000304e-05, 1.3736000000000304e-05, 1.3722000000000734e-05, 1.3736999999999777e-05, 1.3749999999999873e-05, 1.3749999999999873e-05, 1.3763999999999443e-05, 1.3722000000000734e-05, 1.3708000000001164e-05, 1.3680000000002024e-05, 1.3736999999999777e-05, 1.3736000000000304e-05, 1.3721999999997264e-05, 1.3749999999999873e-05, 1.3735999999996834e-05, 1.3736000000000304e-05, 1.3749999999999873e-05, 1.3736000000000304e-05, 1.3736000000000304e-05, 1.3736000000000304e-05]</msg>
<status status="PASS" starttime="20201030 11:50:44.401" endtime="20201030 11:50:44.402"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.396" endtime="20201030 11:50:44.403"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.056" endtime="20201030 11:50:44.403"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.033" endtime="20201030 11:50:44.403"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:44.406" endtime="20201030 11:50:44.425"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.404" endtime="20201030 11:50:44.426"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:44.434" endtime="20201030 11:50:44.443"></status>
</kw>
<msg timestamp="20201030 11:50:44.443" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:44.433" endtime="20201030 11:50:44.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:44.446" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:44.444" endtime="20201030 11:50:44.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:44.447" endtime="20201030 11:50:44.449"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.430" endtime="20201030 11:50:44.450"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.428" endtime="20201030 11:50:44.450"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:44.457" endtime="20201030 11:50:44.743"></status>
</kw>
<msg timestamp="20201030 11:50:44.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018087181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018104583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:44.455" endtime="20201030 11:50:44.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:44.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018087181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018104583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:44.747" endtime="20201030 11:50:44.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:44.756" endtime="20201030 11:50:44.757"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.453" endtime="20201030 11:50:44.758"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.451" endtime="20201030 11:50:44.758"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:44.762" level="INFO">${PHILIP_RES} = [{'diff': 1.7401999999999695e-05}, {'diff': 1.708300000000107e-05}, {'diff': 1.7056000000001403e-05}, {'diff': 1.7042000000001833e-05}, {'diff': 1.7028000000002264e-05}, {'diff': 1.704100000000236e-05...</msg>
<status status="PASS" starttime="20201030 11:50:44.759" endtime="20201030 11:50:44.762"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:44.767" level="INFO">${RESULT} = {'diff': [1.7401999999999695e-05, 1.708300000000107e-05, 1.7056000000001403e-05, 1.7042000000001833e-05, 1.7028000000002264e-05, 1.704100000000236e-05, 1.7042000000001833e-05, 1.7056000000001403e-05, ...</msg>
<status status="PASS" starttime="20201030 11:50:44.763" endtime="20201030 11:50:44.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:44.772" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:44.771" endtime="20201030 11:50:44.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:44.775" level="INFO">VALUE: [1.7401999999999695e-05, 1.708300000000107e-05, 1.7056000000001403e-05, 1.7042000000001833e-05, 1.7028000000002264e-05, 1.704100000000236e-05, 1.7042000000001833e-05, 1.7056000000001403e-05, 1.7042000000001833e-05, 1.7027999999998794e-05, 1.709700000000064e-05, 1.70690000000015e-05, 1.7042000000001833e-05, 1.7070000000000973e-05, 1.705499999999846e-05, 1.704099999999889e-05, 1.7055999999997934e-05, 1.7069999999997504e-05, 1.7027999999998794e-05, 1.709700000000064e-05, 1.706899999999803e-05, 1.7027999999998794e-05, 1.7041999999998364e-05, 1.705499999999846e-05, 1.704099999999889e-05, 1.7041999999998364e-05, 1.7041999999998364e-05, 1.7042000000001833e-05, 1.704100000000236e-05, 1.704100000000236e-05, 1.7056000000001403e-05, 1.7056000000001403e-05, 1.7028000000002264e-05, 1.705500000000193e-05, 1.705500000000193e-05, 1.7028000000002264e-05, 1.7027999999998794e-05, 1.7027999999998794e-05, 1.712499999999978e-05, 1.705499999999846e-05, 1.708300000000107e-05, 1.7055999999997934e-05, 1.7055999999997934e-05, 1.704099999999889e-05, 1.7041999999998364e-05, 1.6959000000000418e-05, 1.6972000000000514e-05, 1.705499999999846e-05, 1.706899999999803e-05, 1.7041999999998364e-05]</msg>
<status status="PASS" starttime="20201030 11:50:44.773" endtime="20201030 11:50:44.776"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.768" endtime="20201030 11:50:44.776"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.427" endtime="20201030 11:50:44.780"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.404" endtime="20201030 11:50:44.781"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:44.784" endtime="20201030 11:50:44.803"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.782" endtime="20201030 11:50:44.804"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:44.812" endtime="20201030 11:50:44.821"></status>
</kw>
<msg timestamp="20201030 11:50:44.821" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:44.810" endtime="20201030 11:50:44.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:44.824" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:44.822" endtime="20201030 11:50:44.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:44.825" endtime="20201030 11:50:44.827"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.808" endtime="20201030 11:50:44.828"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.806" endtime="20201030 11:50:44.828"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:44.835" endtime="20201030 11:50:45.121"></status>
</kw>
<msg timestamp="20201030 11:50:45.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018024042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018045069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:44.833" endtime="20201030 11:50:45.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:45.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018024042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018045069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:45.125" endtime="20201030 11:50:45.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:45.134" endtime="20201030 11:50:45.135"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.831" endtime="20201030 11:50:45.136"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.829" endtime="20201030 11:50:45.136"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:45.140" level="INFO">${PHILIP_RES} = [{'diff': 2.102699999999985e-05}, {'diff': 2.072300000000027e-05}, {'diff': 2.0735999999996896e-05}, {'diff': 2.0722000000000795e-05}, {'diff': 2.073699999999984e-05}, {'diff': 2.0707999999997756e-05}...</msg>
<status status="PASS" starttime="20201030 11:50:45.137" endtime="20201030 11:50:45.141"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:45.146" level="INFO">${RESULT} = {'diff': [2.102699999999985e-05, 2.072300000000027e-05, 2.0735999999996896e-05, 2.0722000000000795e-05, 2.073699999999984e-05, 2.0707999999997756e-05, 2.0764000000002975e-05, 2.072300000000027e-05, 2....</msg>
<status status="PASS" starttime="20201030 11:50:45.141" endtime="20201030 11:50:45.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:45.150" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:45.149" endtime="20201030 11:50:45.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:45.152" level="INFO">VALUE: [2.102699999999985e-05, 2.072300000000027e-05, 2.0735999999996896e-05, 2.0722000000000795e-05, 2.073699999999984e-05, 2.0707999999997756e-05, 2.0764000000002975e-05, 2.072300000000027e-05, 2.062499999999981e-05, 2.0665999999999046e-05, 2.072300000000027e-05, 2.0707999999997756e-05, 2.062499999999981e-05, 2.066700000000199e-05, 2.0721999999997326e-05, 2.0708000000001225e-05, 2.0637999999999906e-05, 2.0707999999997756e-05, 2.0708000000001225e-05, 2.062499999999981e-05, 2.0707999999997756e-05, 2.0722000000000795e-05, 2.07090000000007e-05, 2.07090000000007e-05, 2.0708000000001225e-05, 2.0722000000000795e-05, 2.070899999999723e-05, 2.0722000000000795e-05, 2.0693999999998186e-05, 2.07229999999968e-05, 2.0763999999999505e-05, 2.0722000000000795e-05, 2.072300000000027e-05, 2.0708000000001225e-05, 2.0693999999998186e-05, 2.0763999999999505e-05, 2.0708000000001225e-05, 2.0693999999998186e-05, 2.072300000000027e-05, 2.0763999999999505e-05, 2.0722000000000795e-05, 2.0749999999999935e-05, 2.0708000000001225e-05, 2.0694000000001656e-05, 2.069499999999766e-05, 2.0722000000000795e-05, 2.0736000000000365e-05, 2.0721999999997326e-05, 2.073699999999984e-05, 2.0694000000001656e-05]</msg>
<status status="PASS" starttime="20201030 11:50:45.151" endtime="20201030 11:50:45.153"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.146" endtime="20201030 11:50:45.153"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.804" endtime="20201030 11:50:45.154"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.781" endtime="20201030 11:50:45.154"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:45.157" endtime="20201030 11:50:45.176"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.155" endtime="20201030 11:50:45.177"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:45.185" endtime="20201030 11:50:45.193"></status>
</kw>
<msg timestamp="20201030 11:50:45.194" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:45.183" endtime="20201030 11:50:45.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:45.196" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:45.195" endtime="20201030 11:50:45.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:45.197" endtime="20201030 11:50:45.199"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.181" endtime="20201030 11:50:45.199"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.179" endtime="20201030 11:50:45.200"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:45.206" endtime="20201030 11:50:45.495"></status>
</kw>
<msg timestamp="20201030 11:50:45.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017507264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017532361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:45.205" endtime="20201030 11:50:45.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:45.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017507264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017532361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:45.500" endtime="20201030 11:50:45.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:45.508" endtime="20201030 11:50:45.510"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.202" endtime="20201030 11:50:45.510"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.200" endtime="20201030 11:50:45.511"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:45.515" level="INFO">${PHILIP_RES} = [{'diff': 2.5096999999998232e-05}, {'diff': 2.4679999999999147e-05}, {'diff': 2.4707999999998287e-05}, {'diff': 2.4707999999998287e-05}, {'diff': 2.4693999999998717e-05}, {'diff': 2.4694000000002186e-...</msg>
<status status="PASS" starttime="20201030 11:50:45.512" endtime="20201030 11:50:45.515"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:45.519" level="INFO">${RESULT} = {'diff': [2.5096999999998232e-05, 2.4679999999999147e-05, 2.4707999999998287e-05, 2.4707999999998287e-05, 2.4693999999998717e-05, 2.4694000000002186e-05, 2.468100000000209e-05, 2.468099999999862e-05, ...</msg>
<status status="PASS" starttime="20201030 11:50:45.516" endtime="20201030 11:50:45.519"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:45.523" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:45.522" endtime="20201030 11:50:45.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:45.526" level="INFO">VALUE: [2.5096999999998232e-05, 2.4679999999999147e-05, 2.4707999999998287e-05, 2.4707999999998287e-05, 2.4693999999998717e-05, 2.4694000000002186e-05, 2.468100000000209e-05, 2.468099999999862e-05, 2.469499999999819e-05, 2.4735999999997427e-05, 2.463899999999991e-05, 2.468099999999862e-05, 2.4693999999998717e-05, 2.4679999999999147e-05, 2.4694000000002186e-05, 2.465299999999948e-05, 2.468100000000209e-05, 2.463899999999991e-05, 2.469499999999819e-05, 2.47230000000008e-05, 2.468100000000209e-05, 2.4736000000000896e-05, 2.466699999999905e-05, 2.463899999999991e-05, 2.4665999999999577e-05, 2.4665999999999577e-05, 2.4694000000002186e-05, 2.468099999999862e-05, 2.466699999999905e-05, 2.468100000000209e-05, 2.4736000000000896e-05, 2.469500000000166e-05, 2.469499999999819e-05, 2.466699999999905e-05, 2.4693999999998717e-05, 2.4694000000002186e-05, 2.4693999999998717e-05, 2.4722000000001326e-05, 2.4735999999997427e-05, 2.4750000000000466e-05, 2.465299999999948e-05, 2.469500000000166e-05, 2.469499999999819e-05, 2.468099999999862e-05, 2.468100000000209e-05, 2.4680000000002617e-05, 2.4693999999998717e-05, 2.4693999999998717e-05, 2.4707999999998287e-05, 2.4679999999999147e-05]</msg>
<status status="PASS" starttime="20201030 11:50:45.524" endtime="20201030 11:50:45.527"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.520" endtime="20201030 11:50:45.527"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.177" endtime="20201030 11:50:45.528"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.155" endtime="20201030 11:50:45.528"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:45.530" endtime="20201030 11:50:45.549"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.529" endtime="20201030 11:50:45.550"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:45.558" endtime="20201030 11:50:45.567"></status>
</kw>
<msg timestamp="20201030 11:50:45.568" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:45.557" endtime="20201030 11:50:45.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:45.570" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:45.569" endtime="20201030 11:50:45.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:45.571" endtime="20201030 11:50:45.574"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.554" endtime="20201030 11:50:45.575"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.552" endtime="20201030 11:50:45.575"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:45.581" endtime="20201030 11:50:45.867"></status>
</kw>
<msg timestamp="20201030 11:50:45.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017400153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0174295, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:50:45.580" endtime="20201030 11:50:45.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:45.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017400153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0174295, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:50:45.872" endtime="20201030 11:50:45.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:45.880" endtime="20201030 11:50:45.882"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.577" endtime="20201030 11:50:45.882"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.576" endtime="20201030 11:50:45.883"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:45.887" level="INFO">${PHILIP_RES} = [{'diff': 2.9346999999999013e-05}, {'diff': 2.8999999999997778e-05}, {'diff': 2.9013000000001343e-05}, {'diff': 2.9041999999999957e-05}, {'diff': 2.9028000000000387e-05}, {'diff': 2.9027000000000913e-...</msg>
<status status="PASS" starttime="20201030 11:50:45.883" endtime="20201030 11:50:45.887"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:45.891" level="INFO">${RESULT} = {'diff': [2.9346999999999013e-05, 2.8999999999997778e-05, 2.9013000000001343e-05, 2.9041999999999957e-05, 2.9028000000000387e-05, 2.9027000000000913e-05, 2.9028000000000387e-05, 2.8999999999997778e-05...</msg>
<status status="PASS" starttime="20201030 11:50:45.888" endtime="20201030 11:50:45.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:45.896" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:45.895" endtime="20201030 11:50:45.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:45.899" level="INFO">VALUE: [2.9346999999999013e-05, 2.8999999999997778e-05, 2.9013000000001343e-05, 2.9041999999999957e-05, 2.9028000000000387e-05, 2.9027000000000913e-05, 2.9028000000000387e-05, 2.8999999999997778e-05, 2.9082999999999193e-05, 2.9000000000001247e-05, 2.9014000000000817e-05, 2.9027000000000913e-05, 2.9041999999999957e-05, 2.9028000000000387e-05, 2.9014000000000817e-05, 2.9028000000000387e-05, 2.9014000000000817e-05, 2.9000000000001247e-05, 2.9055000000000053e-05, 2.9014000000000817e-05, 2.9014000000000817e-05, 2.9041000000000483e-05, 2.9014000000000817e-05, 2.9028000000000387e-05, 2.8999999999997778e-05, 2.9028000000000387e-05, 2.9028000000000387e-05, 2.9026999999997444e-05, 2.9014000000000817e-05, 2.9028000000000387e-05, 2.9013999999997347e-05, 2.9069999999999097e-05, 2.9041999999999957e-05, 2.9014000000000817e-05, 2.8986000000001677e-05, 2.9041999999999957e-05, 2.9014000000000817e-05, 2.9055999999999527e-05, 2.9013999999997347e-05, 2.9055000000000053e-05, 2.8944000000002967e-05, 2.9013999999997347e-05, 2.9000000000001247e-05, 2.9000000000001247e-05, 2.8985999999998208e-05, 2.9014000000000817e-05, 2.9027000000000913e-05, 2.8999999999997778e-05, 2.9082999999999193e-05, 2.9000000000001247e-05]</msg>
<status status="PASS" starttime="20201030 11:50:45.897" endtime="20201030 11:50:45.901"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.892" endtime="20201030 11:50:45.901"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.551" endtime="20201030 11:50:45.902"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.528" endtime="20201030 11:50:45.902"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:45.904" endtime="20201030 11:50:45.924"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.903" endtime="20201030 11:50:45.924"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:45.932" endtime="20201030 11:50:45.942"></status>
</kw>
<msg timestamp="20201030 11:50:45.942" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:45.931" endtime="20201030 11:50:45.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:45.945" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:45.943" endtime="20201030 11:50:45.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:45.946" endtime="20201030 11:50:45.948"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.928" endtime="20201030 11:50:45.948"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.926" endtime="20201030 11:50:45.949"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:45.955" endtime="20201030 11:50:46.241"></status>
</kw>
<msg timestamp="20201030 11:50:46.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017784, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017818014, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:50:45.953" endtime="20201030 11:50:46.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:46.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017784, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017818014, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:50:46.245" endtime="20201030 11:50:46.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:46.254" endtime="20201030 11:50:46.255"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.951" endtime="20201030 11:50:46.256"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.949" endtime="20201030 11:50:46.256"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:46.260" level="INFO">${PHILIP_RES} = [{'diff': 3.401399999999888e-05}, {'diff': 3.366700000000111e-05}, {'diff': 3.368100000000068e-05}, {'diff': 3.36250000000024e-05}, {'diff': 3.366700000000111e-05}, {'diff': 3.372199999999992e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:50:46.257" endtime="20201030 11:50:46.261"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:46.265" level="INFO">${RESULT} = {'diff': [3.401399999999888e-05, 3.366700000000111e-05, 3.368100000000068e-05, 3.36250000000024e-05, 3.366700000000111e-05, 3.372199999999992e-05, 3.3638999999998503e-05, 3.365299999999807e-05, 3.3665...</msg>
<status status="PASS" starttime="20201030 11:50:46.261" endtime="20201030 11:50:46.266"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:46.270" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:46.269" endtime="20201030 11:50:46.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:46.272" level="INFO">VALUE: [3.401399999999888e-05, 3.366700000000111e-05, 3.368100000000068e-05, 3.36250000000024e-05, 3.366700000000111e-05, 3.372199999999992e-05, 3.3638999999998503e-05, 3.365299999999807e-05, 3.366599999999817e-05, 3.367999999999774e-05, 3.366599999999817e-05, 3.366600000000164e-05, 3.368000000000121e-05, 3.369400000000078e-05, 3.363900000000197e-05, 3.3610999999999364e-05, 3.365300000000154e-05, 3.366700000000111e-05, 3.372199999999992e-05, 3.3638999999998503e-05, 3.365299999999807e-05, 3.3610999999999364e-05, 3.369399999999731e-05, 3.366699999999764e-05, 3.366700000000111e-05, 3.365300000000154e-05, 3.366600000000164e-05, 3.365200000000207e-05, 3.366600000000164e-05, 3.3624999999998934e-05, 3.366700000000111e-05, 3.372299999999939e-05, 3.3638999999998503e-05, 3.366699999999764e-05, 3.3610999999999364e-05, 3.366699999999764e-05, 3.366700000000111e-05, 3.366700000000111e-05, 3.365300000000154e-05, 3.368100000000068e-05, 3.369400000000078e-05, 3.366700000000111e-05, 3.365300000000154e-05, 3.366599999999817e-05, 3.370800000000035e-05, 3.366599999999817e-05, 3.366599999999817e-05, 3.3624999999998934e-05, 3.368100000000068e-05, 3.365299999999807e-05]</msg>
<status status="PASS" starttime="20201030 11:50:46.271" endtime="20201030 11:50:46.273"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.266" endtime="20201030 11:50:46.273"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.925" endtime="20201030 11:50:46.274"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.902" endtime="20201030 11:50:46.274"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:46.277" endtime="20201030 11:50:46.296"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.275" endtime="20201030 11:50:46.296"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:46.305" endtime="20201030 11:50:46.314"></status>
</kw>
<msg timestamp="20201030 11:50:46.314" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:46.303" endtime="20201030 11:50:46.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:46.317" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:46.315" endtime="20201030 11:50:46.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:46.318" endtime="20201030 11:50:46.319"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.300" endtime="20201030 11:50:46.320"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.298" endtime="20201030 11:50:46.320"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:46.327" endtime="20201030 11:50:46.613"></status>
</kw>
<msg timestamp="20201030 11:50:46.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017649556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017688542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:46.325" endtime="20201030 11:50:46.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:46.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017649556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017688542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:46.617" endtime="20201030 11:50:46.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:46.626" endtime="20201030 11:50:46.628"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.323" endtime="20201030 11:50:46.629"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.321" endtime="20201030 11:50:46.629"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:46.633" level="INFO">${PHILIP_RES} = [{'diff': 3.898600000000127e-05}, {'diff': 3.8652999999999604e-05}, {'diff': 3.86659999999997e-05}, {'diff': 3.8652999999999604e-05}, {'diff': 3.86659999999997e-05}, {'diff': 3.8625000000000465e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:50:46.630" endtime="20201030 11:50:46.633"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:46.638" level="INFO">${RESULT} = {'diff': [3.898600000000127e-05, 3.8652999999999604e-05, 3.86659999999997e-05, 3.8652999999999604e-05, 3.86659999999997e-05, 3.8625000000000465e-05, 3.8652999999999604e-05, 3.863800000000056e-05, 3.86...</msg>
<status status="PASS" starttime="20201030 11:50:46.634" endtime="20201030 11:50:46.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:46.642" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:46.641" endtime="20201030 11:50:46.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:46.645" level="INFO">VALUE: [3.898600000000127e-05, 3.8652999999999604e-05, 3.86659999999997e-05, 3.8652999999999604e-05, 3.86659999999997e-05, 3.8625000000000465e-05, 3.8652999999999604e-05, 3.863800000000056e-05, 3.8666999999999174e-05, 3.8639000000000034e-05, 3.8653000000003074e-05, 3.8652999999999604e-05, 3.8568999999998715e-05, 3.8666999999999174e-05, 3.8652999999999604e-05, 3.865200000000013e-05, 3.8639000000000034e-05, 3.8652999999999604e-05, 3.8666999999999174e-05, 3.8652999999999604e-05, 3.869399999999884e-05, 3.8653000000003074e-05, 3.8667000000002644e-05, 3.859799999999733e-05, 3.8652999999999604e-05, 3.8652999999999604e-05, 3.8652999999999604e-05, 3.8666999999999174e-05, 3.865200000000013e-05, 3.8652999999999604e-05, 3.8666999999999174e-05, 3.8639000000000034e-05, 3.8667000000002644e-05, 3.86659999999997e-05, 3.8667000000002644e-05, 3.8652999999999604e-05, 3.869399999999884e-05, 3.8652999999999604e-05, 3.8652999999999604e-05, 3.867999999999927e-05, 3.8639000000000034e-05, 3.86659999999997e-05, 3.8625000000000465e-05, 3.8667000000002644e-05, 3.866600000000317e-05, 3.8653000000003074e-05, 3.8681000000002214e-05, 3.8652999999999604e-05, 3.8666999999999174e-05, 3.86659999999997e-05]</msg>
<status status="PASS" starttime="20201030 11:50:46.643" endtime="20201030 11:50:46.645"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.638" endtime="20201030 11:50:46.646"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.297" endtime="20201030 11:50:46.646"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.274" endtime="20201030 11:50:46.646"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:46.649" endtime="20201030 11:50:46.668"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.647" endtime="20201030 11:50:46.669"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:46.677" endtime="20201030 11:50:46.687"></status>
</kw>
<msg timestamp="20201030 11:50:46.687" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:46.675" endtime="20201030 11:50:46.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:46.690" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:46.688" endtime="20201030 11:50:46.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:46.691" endtime="20201030 11:50:46.693"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.673" endtime="20201030 11:50:46.694"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.671" endtime="20201030 11:50:46.694"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:46.701" endtime="20201030 11:50:46.988"></status>
</kw>
<msg timestamp="20201030 11:50:46.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017614792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017659125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:46.699" endtime="20201030 11:50:46.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:46.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017614792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017659125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:46.992" endtime="20201030 11:50:47.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:47.000" endtime="20201030 11:50:47.002"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.697" endtime="20201030 11:50:47.003"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.695" endtime="20201030 11:50:47.003"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:47.007" level="INFO">${PHILIP_RES} = [{'diff': 4.4333000000000566e-05}, {'diff': 4.401399999999847e-05}, {'diff': 4.3958999999999665e-05}, {'diff': 4.397199999999976e-05}, {'diff': 4.394400000000062e-05}, {'diff': 4.3931000000000525e-05}...</msg>
<status status="PASS" starttime="20201030 11:50:47.004" endtime="20201030 11:50:47.007"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:47.011" level="INFO">${RESULT} = {'diff': [4.4333000000000566e-05, 4.401399999999847e-05, 4.3958999999999665e-05, 4.397199999999976e-05, 4.394400000000062e-05, 4.3931000000000525e-05, 4.397200000000323e-05, 4.397199999999976e-05, 4.3...</msg>
<status status="PASS" starttime="20201030 11:50:47.008" endtime="20201030 11:50:47.011"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:47.016" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:47.015" endtime="20201030 11:50:47.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:47.018" level="INFO">VALUE: [4.4333000000000566e-05, 4.401399999999847e-05, 4.3958999999999665e-05, 4.397199999999976e-05, 4.394400000000062e-05, 4.3931000000000525e-05, 4.397200000000323e-05, 4.397199999999976e-05, 4.395800000000019e-05, 4.3888999999998346e-05, 4.401399999999847e-05, 4.398599999999933e-05, 4.3958999999999665e-05, 4.39999999999989e-05, 4.398599999999933e-05, 4.3973000000002704e-05, 4.3931000000000525e-05, 4.395800000000019e-05, 4.3973000000002704e-05, 4.3917000000000955e-05, 4.395800000000019e-05, 4.397199999999976e-05, 4.39999999999989e-05, 4.395800000000019e-05, 4.398599999999933e-05, 4.3986999999998805e-05, 4.3888999999998346e-05, 4.394399999999715e-05, 4.3958999999999665e-05, 4.398599999999933e-05, 4.395800000000019e-05, 4.397199999999976e-05, 4.397199999999976e-05, 4.397199999999976e-05, 4.397199999999976e-05, 4.3958999999999665e-05, 4.39860000000028e-05, 4.395800000000019e-05, 4.3958999999999665e-05, 4.397199999999976e-05, 4.397199999999976e-05, 4.401399999999847e-05, 4.395800000000019e-05, 4.398599999999933e-05, 4.395800000000019e-05, 4.3958999999999665e-05, 4.397199999999976e-05, 4.388799999999887e-05, 4.3972999999999235e-05, 4.395800000000019e-05]</msg>
<status status="PASS" starttime="20201030 11:50:47.017" endtime="20201030 11:50:47.020"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.012" endtime="20201030 11:50:47.020"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.669" endtime="20201030 11:50:47.021"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.647" endtime="20201030 11:50:47.021"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:47.023" endtime="20201030 11:50:47.043"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.022" endtime="20201030 11:50:47.043"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:47.051" endtime="20201030 11:50:47.060"></status>
</kw>
<msg timestamp="20201030 11:50:47.061" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:47.050" endtime="20201030 11:50:47.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:47.063" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:47.062" endtime="20201030 11:50:47.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:47.065" endtime="20201030 11:50:47.066"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.047" endtime="20201030 11:50:47.067"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.045" endtime="20201030 11:50:47.067"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:47.073" endtime="20201030 11:50:47.359"></status>
</kw>
<msg timestamp="20201030 11:50:47.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017627972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017678014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:47.072" endtime="20201030 11:50:47.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:47.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017627972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017678014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:47.364" endtime="20201030 11:50:47.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:47.372" endtime="20201030 11:50:47.374"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.069" endtime="20201030 11:50:47.374"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.068" endtime="20201030 11:50:47.375"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:47.379" level="INFO">${PHILIP_RES} = [{'diff': 5.004200000000014e-05}, {'diff': 4.959699999999845e-05}, {'diff': 4.962500000000106e-05}, {'diff': 4.962500000000106e-05}, {'diff': 4.962499999999759e-05}, {'diff': 4.962500000000106e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:50:47.375" endtime="20201030 11:50:47.379"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:47.383" level="INFO">${RESULT} = {'diff': [5.004200000000014e-05, 4.959699999999845e-05, 4.962500000000106e-05, 4.962500000000106e-05, 4.962499999999759e-05, 4.962500000000106e-05, 4.96530000000002e-05, 4.962500000000106e-05, 4.96249...</msg>
<status status="PASS" starttime="20201030 11:50:47.380" endtime="20201030 11:50:47.384"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:47.388" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:47.387" endtime="20201030 11:50:47.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:47.390" level="INFO">VALUE: [5.004200000000014e-05, 4.959699999999845e-05, 4.962500000000106e-05, 4.962500000000106e-05, 4.962499999999759e-05, 4.962500000000106e-05, 4.96530000000002e-05, 4.962500000000106e-05, 4.962499999999759e-05, 4.963900000000063e-05, 4.9651999999997254e-05, 4.963900000000063e-05, 4.965200000000072e-05, 4.962500000000106e-05, 4.961099999999802e-05, 4.962500000000106e-05, 4.963900000000063e-05, 4.962500000000106e-05, 4.962500000000106e-05, 4.962499999999759e-05, 4.962500000000106e-05, 4.961099999999802e-05, 4.962500000000106e-05, 4.962499999999759e-05, 4.962500000000106e-05, 4.962500000000106e-05, 4.959700000000192e-05, 4.962500000000106e-05, 4.961099999999802e-05, 4.966600000000029e-05, 4.96530000000002e-05, 4.963900000000063e-05, 4.962499999999759e-05, 4.963900000000063e-05, 4.958299999999888e-05, 4.956899999999931e-05, 4.963900000000063e-05, 4.963900000000063e-05, 4.961099999999802e-05, 4.963900000000063e-05, 4.96530000000002e-05, 4.962499999999759e-05, 4.962500000000106e-05, 4.963899999999716e-05, 4.961100000000149e-05, 4.962499999999759e-05, 4.965200000000072e-05, 4.962499999999759e-05, 4.961100000000149e-05, 4.958399999999835e-05]</msg>
<status status="PASS" starttime="20201030 11:50:47.389" endtime="20201030 11:50:47.391"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.384" endtime="20201030 11:50:47.392"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.044" endtime="20201030 11:50:47.392"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.021" endtime="20201030 11:50:47.392"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:47.395" endtime="20201030 11:50:47.414"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.393" endtime="20201030 11:50:47.415"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:47.423" endtime="20201030 11:50:47.433"></status>
</kw>
<msg timestamp="20201030 11:50:47.434" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:47.422" endtime="20201030 11:50:47.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:47.436" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:47.435" endtime="20201030 11:50:47.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:47.437" endtime="20201030 11:50:47.439"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.419" endtime="20201030 11:50:47.439"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.417" endtime="20201030 11:50:47.440"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:47.446" endtime="20201030 11:50:47.733"></status>
</kw>
<msg timestamp="20201030 11:50:47.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017799625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017855597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:47.445" endtime="20201030 11:50:47.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:47.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017799625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017855597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:47.737" endtime="20201030 11:50:47.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:47.745" endtime="20201030 11:50:47.748"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.442" endtime="20201030 11:50:47.748"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.440" endtime="20201030 11:50:47.749"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:47.753" level="INFO">${PHILIP_RES} = [{'diff': 5.5972000000001354e-05}, {'diff': 5.561100000000055e-05}, {'diff': 5.554099999999923e-05}, {'diff': 5.559700000000098e-05}, {'diff': 5.552699999999966e-05}, {'diff': 5.559700000000098e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:50:47.750" endtime="20201030 11:50:47.753"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:47.757" level="INFO">${RESULT} = {'diff': [5.5972000000001354e-05, 5.561100000000055e-05, 5.554099999999923e-05, 5.559700000000098e-05, 5.552699999999966e-05, 5.559700000000098e-05, 5.558300000000141e-05, 5.554099999999923e-05, 5.559...</msg>
<status status="PASS" starttime="20201030 11:50:47.754" endtime="20201030 11:50:47.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:47.761" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:47.760" endtime="20201030 11:50:47.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:47.764" level="INFO">VALUE: [5.5972000000001354e-05, 5.561100000000055e-05, 5.554099999999923e-05, 5.559700000000098e-05, 5.552699999999966e-05, 5.559700000000098e-05, 5.558300000000141e-05, 5.554099999999923e-05, 5.559700000000098e-05, 5.559700000000098e-05, 5.561100000000055e-05, 5.563899999999969e-05, 5.559700000000098e-05, 5.558300000000141e-05, 5.563899999999969e-05, 5.558300000000141e-05, 5.563899999999969e-05, 5.558300000000141e-05, 5.563899999999969e-05, 5.558300000000141e-05, 5.561100000000055e-05, 5.559700000000098e-05, 5.561100000000055e-05, 5.559700000000098e-05, 5.559700000000098e-05, 5.561100000000055e-05, 5.559700000000098e-05, 5.561100000000055e-05, 5.559700000000098e-05, 5.559700000000098e-05, 5.559700000000098e-05, 5.566699999999883e-05, 5.558299999999794e-05, 5.558299999999794e-05, 5.554099999999923e-05, 5.559699999999751e-05, 5.559699999999751e-05, 5.559699999999751e-05, 5.559699999999751e-05, 5.559699999999751e-05, 5.55549999999988e-05, 5.559700000000098e-05, 5.565299999999926e-05, 5.558299999999794e-05, 5.562500000000012e-05, 5.558300000000141e-05, 5.558300000000141e-05, 5.562500000000012e-05, 5.559700000000098e-05, 5.562500000000012e-05]</msg>
<status status="PASS" starttime="20201030 11:50:47.762" endtime="20201030 11:50:47.765"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.758" endtime="20201030 11:50:47.765"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.416" endtime="20201030 11:50:47.766"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.393" endtime="20201030 11:50:47.766"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:47.768" endtime="20201030 11:50:47.788"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.767" endtime="20201030 11:50:47.788"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:47.796" endtime="20201030 11:50:47.807"></status>
</kw>
<msg timestamp="20201030 11:50:47.807" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:47.795" endtime="20201030 11:50:47.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:47.809" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:47.808" endtime="20201030 11:50:47.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:47.811" endtime="20201030 11:50:47.813"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.792" endtime="20201030 11:50:47.814"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.790" endtime="20201030 11:50:47.814"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:47.821" endtime="20201030 11:50:48.106"></status>
</kw>
<msg timestamp="20201030 11:50:48.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017776139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017838431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:47.819" endtime="20201030 11:50:48.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:48.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017776139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017838431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:48.110" endtime="20201030 11:50:48.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:48.119" endtime="20201030 11:50:48.120"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.816" endtime="20201030 11:50:48.121"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.815" endtime="20201030 11:50:48.121"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:48.125" level="INFO">${PHILIP_RES} = [{'diff': 6.229199999999852e-05}, {'diff': 6.191700000000161e-05}, {'diff': 6.198599999999999e-05}, {'diff': 6.191700000000161e-05}, {'diff': 6.191699999999814e-05}, {'diff': 6.194500000000075e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:50:48.122" endtime="20201030 11:50:48.126"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:48.130" level="INFO">${RESULT} = {'diff': [6.229199999999852e-05, 6.191700000000161e-05, 6.198599999999999e-05, 6.191700000000161e-05, 6.191699999999814e-05, 6.194500000000075e-05, 6.19300000000017e-05, 6.192999999999824e-05, 6.19169...</msg>
<status status="PASS" starttime="20201030 11:50:48.126" endtime="20201030 11:50:48.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:48.134" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:48.133" endtime="20201030 11:50:48.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:48.137" level="INFO">VALUE: [6.229199999999852e-05, 6.191700000000161e-05, 6.198599999999999e-05, 6.191700000000161e-05, 6.191699999999814e-05, 6.194500000000075e-05, 6.19300000000017e-05, 6.192999999999824e-05, 6.191699999999814e-05, 6.191700000000161e-05, 6.193100000000118e-05, 6.191599999999867e-05, 6.194400000000128e-05, 6.193100000000118e-05, 6.193099999999771e-05, 6.19300000000017e-05, 6.19300000000017e-05, 6.1888999999999e-05, 6.199999999999956e-05, 6.194400000000128e-05, 6.19300000000017e-05, 6.191699999999814e-05, 6.193100000000118e-05, 6.195800000000085e-05, 6.195799999999738e-05, 6.194400000000128e-05, 6.193100000000118e-05, 6.193100000000118e-05, 6.19439999999978e-05, 6.19300000000017e-05, 6.193100000000118e-05, 6.1888999999999e-05, 6.193100000000118e-05, 6.191600000000214e-05, 6.19439999999978e-05, 6.193099999999771e-05, 6.191600000000214e-05, 6.19019999999991e-05, 6.19439999999978e-05, 6.193100000000118e-05, 6.193100000000118e-05, 6.191699999999814e-05, 6.19439999999978e-05, 6.19300000000017e-05, 6.193100000000118e-05, 6.195799999999738e-05, 6.197200000000042e-05, 6.194400000000128e-05, 6.194499999999728e-05, 6.194500000000075e-05]</msg>
<status status="PASS" starttime="20201030 11:50:48.135" endtime="20201030 11:50:48.138"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.130" endtime="20201030 11:50:48.139"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.789" endtime="20201030 11:50:48.139"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.766" endtime="20201030 11:50:48.139"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:48.142" endtime="20201030 11:50:48.161"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.140" endtime="20201030 11:50:48.162"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:48.170" endtime="20201030 11:50:48.181"></status>
</kw>
<msg timestamp="20201030 11:50:48.181" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:48.168" endtime="20201030 11:50:48.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:48.184" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:48.182" endtime="20201030 11:50:48.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:48.185" endtime="20201030 11:50:48.187"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.166" endtime="20201030 11:50:48.187"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.164" endtime="20201030 11:50:48.188"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:48.194" endtime="20201030 11:50:48.479"></status>
</kw>
<msg timestamp="20201030 11:50:48.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017700444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017769375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:48.192" endtime="20201030 11:50:48.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:48.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017700444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017769375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:48.483" endtime="20201030 11:50:48.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:48.491" endtime="20201030 11:50:48.493"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.190" endtime="20201030 11:50:48.494"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.188" endtime="20201030 11:50:48.494"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:48.498" level="INFO">${PHILIP_RES} = [{'diff': 6.893100000000124e-05}, {'diff': 6.862499999999924e-05}, {'diff': 6.862499999999924e-05}, {'diff': 6.858300000000053e-05}, {'diff': 6.856900000000096e-05}, {'diff': 6.856900000000096e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:50:48.495" endtime="20201030 11:50:48.498"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:48.503" level="INFO">${RESULT} = {'diff': [6.893100000000124e-05, 6.862499999999924e-05, 6.862499999999924e-05, 6.858300000000053e-05, 6.856900000000096e-05, 6.856900000000096e-05, 6.858300000000053e-05, 6.856900000000096e-05, 6.8569...</msg>
<status status="PASS" starttime="20201030 11:50:48.499" endtime="20201030 11:50:48.503"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:48.507" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:48.506" endtime="20201030 11:50:48.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:48.510" level="INFO">VALUE: [6.893100000000124e-05, 6.862499999999924e-05, 6.862499999999924e-05, 6.858300000000053e-05, 6.856900000000096e-05, 6.856900000000096e-05, 6.858300000000053e-05, 6.856900000000096e-05, 6.856900000000096e-05, 6.858300000000053e-05, 6.856900000000096e-05, 6.858300000000053e-05, 6.856900000000096e-05, 6.862499999999924e-05, 6.85970000000001e-05, 6.856900000000096e-05, 6.854100000000182e-05, 6.858300000000053e-05, 6.85970000000001e-05, 6.858300000000053e-05, 6.8584e-05, 6.85970000000001e-05, 6.85970000000001e-05, 6.857000000000044e-05, 6.862499999999924e-05, 6.8584e-05, 6.859799999999958e-05, 6.857000000000044e-05, 6.8584e-05, 6.8584e-05, 6.85420000000013e-05, 6.859799999999958e-05, 6.861099999999967e-05, 6.858300000000053e-05, 6.856900000000096e-05, 6.855600000000087e-05, 6.857000000000044e-05, 6.858300000000053e-05, 6.862499999999924e-05, 6.856900000000096e-05, 6.856900000000096e-05, 6.858300000000053e-05, 6.851399999999869e-05, 6.856900000000096e-05, 6.858300000000053e-05, 6.85970000000001e-05, 6.856899999999749e-05, 6.858300000000053e-05, 6.858299999999706e-05, 6.858300000000053e-05]</msg>
<status status="PASS" starttime="20201030 11:50:48.508" endtime="20201030 11:50:48.511"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.504" endtime="20201030 11:50:48.511"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.162" endtime="20201030 11:50:48.512"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.140" endtime="20201030 11:50:48.512"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:48.514" endtime="20201030 11:50:48.534"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.513" endtime="20201030 11:50:48.534"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:48.542" endtime="20201030 11:50:48.554"></status>
</kw>
<msg timestamp="20201030 11:50:48.555" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:48.541" endtime="20201030 11:50:48.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:48.557" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:48.556" endtime="20201030 11:50:48.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:48.558" endtime="20201030 11:50:48.560"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.538" endtime="20201030 11:50:48.560"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.536" endtime="20201030 11:50:48.561"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:48.567" endtime="20201030 11:50:48.853"></status>
</kw>
<msg timestamp="20201030 11:50:48.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017611042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017686972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:48.566" endtime="20201030 11:50:48.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:48.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017611042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017686972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:48.857" endtime="20201030 11:50:48.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:48.865" endtime="20201030 11:50:48.867"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.563" endtime="20201030 11:50:48.867"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.561" endtime="20201030 11:50:48.868"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:48.872" level="INFO">${PHILIP_RES} = [{'diff': 7.592999999999836e-05}, {'diff': 7.55700000000005e-05}, {'diff': 7.555500000000145e-05}, {'diff': 7.556999999999703e-05}, {'diff': 7.55830000000006e-05}, {'diff': 7.559799999999964e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:50:48.869" endtime="20201030 11:50:48.872"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:48.876" level="INFO">${RESULT} = {'diff': [7.592999999999836e-05, 7.55700000000005e-05, 7.555500000000145e-05, 7.556999999999703e-05, 7.55830000000006e-05, 7.559799999999964e-05, 7.555500000000145e-05, 7.558400000000007e-05, 7.556899...</msg>
<status status="PASS" starttime="20201030 11:50:48.873" endtime="20201030 11:50:48.876"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:48.880" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:48.879" endtime="20201030 11:50:48.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:48.883" level="INFO">VALUE: [7.592999999999836e-05, 7.55700000000005e-05, 7.555500000000145e-05, 7.556999999999703e-05, 7.55830000000006e-05, 7.559799999999964e-05, 7.555500000000145e-05, 7.558400000000007e-05, 7.556899999999755e-05, 7.559700000000016e-05, 7.556899999999755e-05, 7.551400000000222e-05, 7.556900000000102e-05, 7.56249999999993e-05, 7.55700000000005e-05, 7.552799999999832e-05, 7.551400000000222e-05, 7.563900000000234e-05, 7.558400000000007e-05, 7.556900000000102e-05, 7.55839999999966e-05, 7.55830000000006e-05, 7.558400000000007e-05, 7.556900000000102e-05, 7.565300000000191e-05, 7.556899999999755e-05, 7.55830000000006e-05, 7.55830000000006e-05, 7.55830000000006e-05, 7.55700000000005e-05, 7.551299999999928e-05, 7.55700000000005e-05, 7.556899999999755e-05, 7.554200000000136e-05, 7.556900000000102e-05, 7.558400000000007e-05, 7.559700000000016e-05, 7.555599999999746e-05, 7.556900000000102e-05, 7.559700000000016e-05, 7.558299999999712e-05, 7.55700000000005e-05, 7.549999999999918e-05, 7.55830000000006e-05, 7.555600000000093e-05, 7.559700000000016e-05, 7.556899999999755e-05, 7.555499999999798e-05, 7.558400000000007e-05, 7.55830000000006e-05]</msg>
<status status="PASS" starttime="20201030 11:50:48.881" endtime="20201030 11:50:48.883"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.877" endtime="20201030 11:50:48.884"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.535" endtime="20201030 11:50:48.884"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.512" endtime="20201030 11:50:48.885"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:48.887" endtime="20201030 11:50:48.906"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.885" endtime="20201030 11:50:48.907"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:48.915" endtime="20201030 11:50:48.926"></status>
</kw>
<msg timestamp="20201030 11:50:48.927" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:48.913" endtime="20201030 11:50:48.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:48.929" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:48.928" endtime="20201030 11:50:48.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:48.931" endtime="20201030 11:50:48.933"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.911" endtime="20201030 11:50:48.934"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.909" endtime="20201030 11:50:48.935"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:48.942" endtime="20201030 11:50:49.227"></status>
</kw>
<msg timestamp="20201030 11:50:49.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0176655, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01774875, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:50:48.940" endtime="20201030 11:50:49.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:49.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0176655, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01774875, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:50:49.231" endtime="20201030 11:50:49.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:49.240" endtime="20201030 11:50:49.241"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.937" endtime="20201030 11:50:49.242"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.935" endtime="20201030 11:50:49.243"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:49.247" level="INFO">${PHILIP_RES} = [{'diff': 8.324999999999999e-05}, {'diff': 8.290199999999928e-05}, {'diff': 8.288899999999919e-05}, {'diff': 8.293100000000136e-05}, {'diff': 8.286100000000005e-05}, {'diff': 8.290299999999876e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:50:49.243" endtime="20201030 11:50:49.247"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:49.251" level="INFO">${RESULT} = {'diff': [8.324999999999999e-05, 8.290199999999928e-05, 8.288899999999919e-05, 8.293100000000136e-05, 8.286100000000005e-05, 8.290299999999876e-05, 8.287499999999962e-05, 8.287500000000309e-05, 8.2874...</msg>
<status status="PASS" starttime="20201030 11:50:49.248" endtime="20201030 11:50:49.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:49.255" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:49.254" endtime="20201030 11:50:49.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:49.258" level="INFO">VALUE: [8.324999999999999e-05, 8.290199999999928e-05, 8.288899999999919e-05, 8.293100000000136e-05, 8.286100000000005e-05, 8.290299999999876e-05, 8.287499999999962e-05, 8.287500000000309e-05, 8.287499999999962e-05, 8.287499999999962e-05, 8.287499999999962e-05, 8.288899999999919e-05, 8.286100000000005e-05, 8.288899999999919e-05, 8.288799999999971e-05, 8.288899999999919e-05, 8.287499999999962e-05, 8.288899999999919e-05, 8.287499999999962e-05, 8.284700000000048e-05, 8.288899999999919e-05, 8.286100000000005e-05, 8.288899999999919e-05, 8.290300000000222e-05, 8.288799999999971e-05, 8.288899999999919e-05, 8.288899999999919e-05, 8.294400000000146e-05, 8.290300000000222e-05, 8.288899999999919e-05, 8.286100000000005e-05, 8.290300000000222e-05, 8.288799999999971e-05, 8.288899999999919e-05, 8.29309999999979e-05, 8.293000000000189e-05, 8.290299999999876e-05, 8.288799999999971e-05, 8.288899999999919e-05, 8.287499999999962e-05, 8.288900000000265e-05, 8.287499999999962e-05, 8.288799999999971e-05, 8.288899999999919e-05, 8.287499999999962e-05, 8.287499999999962e-05, 8.288899999999919e-05, 8.286100000000005e-05, 8.287499999999962e-05, 8.286100000000005e-05]</msg>
<status status="PASS" starttime="20201030 11:50:49.256" endtime="20201030 11:50:49.259"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.252" endtime="20201030 11:50:49.260"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.907" endtime="20201030 11:50:49.260"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.885" endtime="20201030 11:50:49.260"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:49.263" endtime="20201030 11:50:49.282"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.261" endtime="20201030 11:50:49.283"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:49.291" endtime="20201030 11:50:49.303"></status>
</kw>
<msg timestamp="20201030 11:50:49.303" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:49.289" endtime="20201030 11:50:49.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:49.306" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:49.304" endtime="20201030 11:50:49.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:49.307" endtime="20201030 11:50:49.308"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.287" endtime="20201030 11:50:49.309"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.285" endtime="20201030 11:50:49.309"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:49.316" endtime="20201030 11:50:49.602"></status>
</kw>
<msg timestamp="20201030 11:50:49.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017523097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017613917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:49.314" endtime="20201030 11:50:49.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:49.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017523097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017613917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:49.606" endtime="20201030 11:50:49.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:49.615" endtime="20201030 11:50:49.616"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.312" endtime="20201030 11:50:49.617"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.310" endtime="20201030 11:50:49.617"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:49.621" level="INFO">${PHILIP_RES} = [{'diff': 9.08199999999984e-05}, {'diff': 9.054099999999954e-05}, {'diff': 9.055600000000205e-05}, {'diff': 9.056900000000215e-05}, {'diff': 9.05000000000003e-05}, {'diff': 9.054099999999954e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:50:49.618" endtime="20201030 11:50:49.621"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:49.626" level="INFO">${RESULT} = {'diff': [9.08199999999984e-05, 9.054099999999954e-05, 9.055600000000205e-05, 9.056900000000215e-05, 9.05000000000003e-05, 9.054099999999954e-05, 9.054199999999901e-05, 9.054099999999954e-05, 9.054199...</msg>
<status status="PASS" starttime="20201030 11:50:49.622" endtime="20201030 11:50:49.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:49.631" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:49.630" endtime="20201030 11:50:49.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:49.633" level="INFO">VALUE: [9.08199999999984e-05, 9.054099999999954e-05, 9.055600000000205e-05, 9.056900000000215e-05, 9.05000000000003e-05, 9.054099999999954e-05, 9.054199999999901e-05, 9.054099999999954e-05, 9.054199999999901e-05, 9.054099999999954e-05, 9.061099999999739e-05, 9.051399999999987e-05, 9.058300000000172e-05, 9.054199999999901e-05, 9.048600000000073e-05, 9.055499999999911e-05, 9.054199999999901e-05, 9.054100000000301e-05, 9.052799999999944e-05, 9.055499999999911e-05, 9.055599999999858e-05, 9.056899999999868e-05, 9.054200000000248e-05, 9.055499999999911e-05, 9.054199999999901e-05, 9.055499999999911e-05, 9.052799999999944e-05, 9.055600000000205e-05, 9.058300000000172e-05, 9.055499999999911e-05, 9.055599999999858e-05, 9.059799999999729e-05, 9.054200000000248e-05, 9.054199999999901e-05, 9.056899999999868e-05, 9.054199999999901e-05, 9.056899999999868e-05, 9.054200000000248e-05, 9.055600000000205e-05, 9.052799999999944e-05, 9.054199999999901e-05, 9.054199999999901e-05, 9.055600000000205e-05, 9.054199999999901e-05, 9.055499999999911e-05, 9.054199999999901e-05, 9.055599999999858e-05, 9.055600000000205e-05, 9.055500000000258e-05, 9.054199999999901e-05]</msg>
<status status="PASS" starttime="20201030 11:50:49.632" endtime="20201030 11:50:49.634"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.627" endtime="20201030 11:50:49.634"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.283" endtime="20201030 11:50:49.635"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.261" endtime="20201030 11:50:49.635"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:49.637" endtime="20201030 11:50:49.657"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.636" endtime="20201030 11:50:49.657"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:49.665" endtime="20201030 11:50:49.678"></status>
</kw>
<msg timestamp="20201030 11:50:49.679" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:49.664" endtime="20201030 11:50:49.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:49.681" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:49.680" endtime="20201030 11:50:49.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:49.682" endtime="20201030 11:50:49.684"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.661" endtime="20201030 11:50:49.685"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.659" endtime="20201030 11:50:49.685"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:49.691" endtime="20201030 11:50:49.978"></status>
</kw>
<msg timestamp="20201030 11:50:49.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017611653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0177105, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:50:49.690" endtime="20201030 11:50:49.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:49.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017611653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0177105, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:50:49.983" endtime="20201030 11:50:49.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:49.991" endtime="20201030 11:50:49.994"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.687" endtime="20201030 11:50:49.994"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.686" endtime="20201030 11:50:49.995"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:49.999" level="INFO">${PHILIP_RES} = [{'diff': 9.884699999999913e-05}, {'diff': 9.854200000000007e-05}, {'diff': 9.854200000000007e-05}, {'diff': 9.85280000000005e-05}, {'diff': 9.856899999999974e-05}, {'diff': 9.858299999999931e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:50:49.995" endtime="20201030 11:50:49.999"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:50.003" level="INFO">${RESULT} = {'diff': [9.884699999999913e-05, 9.854200000000007e-05, 9.854200000000007e-05, 9.85280000000005e-05, 9.856899999999974e-05, 9.858299999999931e-05, 9.851400000000093e-05, 9.851399999999746e-05, 9.85970...</msg>
<status status="PASS" starttime="20201030 11:50:50.000" endtime="20201030 11:50:50.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:50.007" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:50.006" endtime="20201030 11:50:50.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:50.010" level="INFO">VALUE: [9.884699999999913e-05, 9.854200000000007e-05, 9.854200000000007e-05, 9.85280000000005e-05, 9.856899999999974e-05, 9.858299999999931e-05, 9.851400000000093e-05, 9.851399999999746e-05, 9.859700000000235e-05, 9.851400000000093e-05, 9.85280000000005e-05, 9.851399999999746e-05, 9.851399999999746e-05, 9.851400000000093e-05, 9.851400000000093e-05, 9.854200000000007e-05, 9.851399999999746e-05, 9.852700000000103e-05, 9.848700000000127e-05, 9.851400000000093e-05, 9.854200000000007e-05, 9.85419999999966e-05, 9.85280000000005e-05, 9.854200000000007e-05, 9.850000000000136e-05, 9.852799999999703e-05, 9.858400000000225e-05, 9.851400000000093e-05, 9.851300000000146e-05, 9.845800000000265e-05, 9.851399999999746e-05, 9.85280000000005e-05, 9.851400000000093e-05, 9.858299999999931e-05, 9.851400000000093e-05, 9.854200000000007e-05, 9.851400000000093e-05, 9.855599999999964e-05, 9.854200000000007e-05, 9.851399999999746e-05, 9.852699999999756e-05, 9.852700000000103e-05, 9.85280000000005e-05, 9.859699999999888e-05, 9.852799999999703e-05, 9.85280000000005e-05, 9.844499999999909e-05, 9.854200000000007e-05, 9.858399999999878e-05, 9.852799999999703e-05]</msg>
<status status="PASS" starttime="20201030 11:50:50.009" endtime="20201030 11:50:50.011"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.004" endtime="20201030 11:50:50.011"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.658" endtime="20201030 11:50:50.012"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.635" endtime="20201030 11:50:50.012"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:50.014" endtime="20201030 11:50:50.034"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.013" endtime="20201030 11:50:50.034"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:50.042" endtime="20201030 11:50:50.056"></status>
</kw>
<msg timestamp="20201030 11:50:50.057" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:50.041" endtime="20201030 11:50:50.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:50.059" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:50.058" endtime="20201030 11:50:50.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:50.060" endtime="20201030 11:50:50.063"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.038" endtime="20201030 11:50:50.063"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.036" endtime="20201030 11:50:50.064"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:50.070" endtime="20201030 11:50:50.356"></status>
</kw>
<msg timestamp="20201030 11:50:50.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017558222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017665486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:50.069" endtime="20201030 11:50:50.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:50.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017558222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017665486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:50.360" endtime="20201030 11:50:50.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:50.368" endtime="20201030 11:50:50.370"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.066" endtime="20201030 11:50:50.371"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.064" endtime="20201030 11:50:50.371"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:50.375" level="INFO">${PHILIP_RES} = [{'diff': 0.00010726400000000275}, {'diff': 0.0001068620000000027}, {'diff': 0.00010686099999999976}, {'diff': 0.00010684700000000019}, {'diff': 0.00010683300000000062}, {'diff': 0.0001068749999999993...</msg>
<status status="PASS" starttime="20201030 11:50:50.372" endtime="20201030 11:50:50.375"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:50.379" level="INFO">${RESULT} = {'diff': [0.00010726400000000275, 0.0001068620000000027, 0.00010686099999999976, 0.00010684700000000019, 0.00010683300000000062, 0.00010687499999999933, 0.00010687499999999933, 0.00010684699999999672,...</msg>
<status status="PASS" starttime="20201030 11:50:50.376" endtime="20201030 11:50:50.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:50.383" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:50.382" endtime="20201030 11:50:50.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:50.386" level="INFO">VALUE: [0.00010726400000000275, 0.0001068620000000027, 0.00010686099999999976, 0.00010684700000000019, 0.00010683300000000062, 0.00010687499999999933, 0.00010687499999999933, 0.00010684699999999672, 0.00010686199999999924, 0.00010684700000000019, 0.00010686099999999976, 0.00010684700000000019, 0.00010687499999999933, 0.00010686099999999976, 0.00010684700000000019, 0.00010684799999999967, 0.00010684700000000019, 0.00010684700000000019, 0.00010684700000000019, 0.00010684700000000019, 0.00010686099999999976, 0.00010686099999999976, 0.0001068340000000001, 0.00010686099999999976, 0.00010684700000000019, 0.00010684700000000019, 0.00010680500000000148, 0.00010686099999999976, 0.00010684700000000019, 0.00010684799999999967, 0.00010686100000000323, 0.00010686099999999976, 0.00010686099999999976, 0.00010684700000000019, 0.00010686100000000323, 0.00010684700000000019, 0.0001068620000000027, 0.00010690299999999847, 0.00010683299999999715, 0.00010683300000000062, 0.0001068750000000028, 0.00010687499999999933, 0.00010684700000000019, 0.00010686199999999924, 0.00010686099999999976, 0.00010684700000000019, 0.00010684700000000019, 0.00010686099999999976, 0.00010690300000000194, 0.00010684700000000019]</msg>
<status status="PASS" starttime="20201030 11:50:50.384" endtime="20201030 11:50:50.387"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.380" endtime="20201030 11:50:50.388"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.035" endtime="20201030 11:50:50.388"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.012" endtime="20201030 11:50:50.388"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:50.391" endtime="20201030 11:50:50.410"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.389" endtime="20201030 11:50:50.411"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:50.419" endtime="20201030 11:50:50.433"></status>
</kw>
<msg timestamp="20201030 11:50:50.434" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:50.417" endtime="20201030 11:50:50.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:50.436" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:50.435" endtime="20201030 11:50:50.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:50.437" endtime="20201030 11:50:50.439"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.415" endtime="20201030 11:50:50.439"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.413" endtime="20201030 11:50:50.440"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:50.446" endtime="20201030 11:50:50.733"></status>
</kw>
<msg timestamp="20201030 11:50:50.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017618903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01773475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:50.445" endtime="20201030 11:50:50.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:50.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017618903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01773475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:50.737" endtime="20201030 11:50:50.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:50.745" endtime="20201030 11:50:50.747"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.442" endtime="20201030 11:50:50.747"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.440" endtime="20201030 11:50:50.747"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:50.751" level="INFO">${PHILIP_RES} = [{'diff': 0.00011584699999999878}, {'diff': 0.00011551400000000059}, {'diff': 0.00011548600000000145}, {'diff': 0.00011548600000000145}, {'diff': 0.00011547199999999841}, {'diff': 0.000115555999999999...</msg>
<status status="PASS" starttime="20201030 11:50:50.748" endtime="20201030 11:50:50.752"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:50.756" level="INFO">${RESULT} = {'diff': [0.00011584699999999878, 0.00011551400000000059, 0.00011548600000000145, 0.00011548600000000145, 0.00011547199999999841, 0.0001155559999999993, 0.0001155689999999994, 0.00011551399999999712, ...</msg>
<status status="PASS" starttime="20201030 11:50:50.752" endtime="20201030 11:50:50.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:50.761" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:50.760" endtime="20201030 11:50:50.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:50.763" level="INFO">VALUE: [0.00011584699999999878, 0.00011551400000000059, 0.00011548600000000145, 0.00011548600000000145, 0.00011547199999999841, 0.0001155559999999993, 0.0001155689999999994, 0.00011551399999999712, 0.00011547200000000188, 0.00011548599999999798, 0.00011550000000000102, 0.00011550000000000102, 0.00011550000000000102, 0.00011552800000000016, 0.00011551400000000059, 0.00011552700000000068, 0.00011550000000000102, 0.00011549999999999755, 0.00011548600000000145, 0.00011548599999999798, 0.00011550000000000102, 0.00011551400000000059, 0.00011547199999999841, 0.00011552800000000016, 0.00011550000000000102, 0.00011551400000000059, 0.00011550000000000102, 0.00011551399999999712, 0.00011551400000000059, 0.00011548600000000145, 0.00011552800000000016, 0.00011551400000000059, 0.00011549999999999755, 0.00011548600000000145, 0.00011552700000000068, 0.00011543099999999917, 0.00011550000000000102, 0.00011549999999999755, 0.00011550000000000102, 0.00011550000000000102, 0.00011551399999999712, 0.0001155559999999993, 0.00011548700000000092, 0.00011555499999999982, 0.00011550000000000102, 0.00011552800000000016, 0.00011552800000000016, 0.00011551400000000059, 0.00011552800000000016, 0.00011545800000000231]</msg>
<status status="PASS" starttime="20201030 11:50:50.762" endtime="20201030 11:50:50.764"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.757" endtime="20201030 11:50:50.765"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.411" endtime="20201030 11:50:50.765"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.389" endtime="20201030 11:50:50.765"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:50.768" endtime="20201030 11:50:50.787"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.766" endtime="20201030 11:50:50.788"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:50.796" endtime="20201030 11:50:50.810"></status>
</kw>
<msg timestamp="20201030 11:50:50.811" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:50.794" endtime="20201030 11:50:50.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:50.813" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:50.812" endtime="20201030 11:50:50.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:50.814" endtime="20201030 11:50:50.816"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.791" endtime="20201030 11:50:50.816"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.790" endtime="20201030 11:50:50.817"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:50.823" endtime="20201030 11:50:51.109"></status>
</kw>
<msg timestamp="20201030 11:50:51.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017595889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017720722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:50.822" endtime="20201030 11:50:51.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:51.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017595889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017720722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:51.114" endtime="20201030 11:50:51.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:51.122" endtime="20201030 11:50:51.124"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.819" endtime="20201030 11:50:51.124"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.817" endtime="20201030 11:50:51.125"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:51.129" level="INFO">${PHILIP_RES} = [{'diff': 0.00012483300000000128}, {'diff': 0.0001244580000000009}, {'diff': 0.0001244999999999996}, {'diff': 0.0001244999999999996}, {'diff': 0.00012448699999999951}, {'diff': 0.0001244999999999996},...</msg>
<status status="PASS" starttime="20201030 11:50:51.125" endtime="20201030 11:50:51.129"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:51.133" level="INFO">${RESULT} = {'diff': [0.00012483300000000128, 0.0001244580000000009, 0.0001244999999999996, 0.0001244999999999996, 0.00012448699999999951, 0.0001244999999999996, 0.00012448600000000004, 0.00012448600000000004, 0....</msg>
<status status="PASS" starttime="20201030 11:50:51.130" endtime="20201030 11:50:51.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:51.137" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:51.136" endtime="20201030 11:50:51.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:51.140" level="INFO">VALUE: [0.00012483300000000128, 0.0001244580000000009, 0.0001244999999999996, 0.0001244999999999996, 0.00012448699999999951, 0.0001244999999999996, 0.00012448600000000004, 0.00012448600000000004, 0.0001244999999999996, 0.00012452800000000222, 0.0001244999999999996, 0.00012450000000000308, 0.00012451399999999918, 0.00012451400000000265, 0.0001244999999999996, 0.00012444499999999734, 0.00012452799999999875, 0.0001244999999999996, 0.00012448600000000004, 0.00012451399999999918, 0.00012451400000000265, 0.00012454099999999885, 0.00012447200000000047, 0.00012448600000000004, 0.00012452800000000222, 0.00012448600000000004, 0.0001244999999999996, 0.0001244999999999996, 0.00012452699999999928, 0.00012448600000000004, 0.00012448600000000004, 0.00012451400000000265, 0.0001244999999999996, 0.0001244999999999996, 0.0001244999999999996, 0.00012452799999999875, 0.00012448600000000004, 0.00012451399999999918, 0.00012451399999999918, 0.0001244999999999996, 0.00012448599999999657, 0.00012448600000000004, 0.00012448600000000004, 0.00012447200000000047, 0.0001244999999999996, 0.00012448600000000004, 0.00012448699999999951, 0.00012451400000000265, 0.0001244999999999996, 0.00012450000000000308]</msg>
<status status="PASS" starttime="20201030 11:50:51.138" endtime="20201030 11:50:51.140"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.133" endtime="20201030 11:50:51.141"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.788" endtime="20201030 11:50:51.141"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.766" endtime="20201030 11:50:51.142"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:51.144" endtime="20201030 11:50:51.163"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.142" endtime="20201030 11:50:51.164"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:51.172" endtime="20201030 11:50:51.187"></status>
</kw>
<msg timestamp="20201030 11:50:51.188" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:51.170" endtime="20201030 11:50:51.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:51.190" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:51.189" endtime="20201030 11:50:51.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:51.191" endtime="20201030 11:50:51.194"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.168" endtime="20201030 11:50:51.194"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.166" endtime="20201030 11:50:51.195"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:51.202" endtime="20201030 11:50:51.488"></status>
</kw>
<msg timestamp="20201030 11:50:51.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017718431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017852625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:51.200" endtime="20201030 11:50:51.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:51.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017718431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017852625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:51.492" endtime="20201030 11:50:51.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:51.500" endtime="20201030 11:50:51.502"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.197" endtime="20201030 11:50:51.502"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.196" endtime="20201030 11:50:51.503"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:51.507" level="INFO">${PHILIP_RES} = [{'diff': 0.00013419400000000067}, {'diff': 0.0001338060000000002}, {'diff': 0.00013379200000000063}, {'diff': 0.0001338060000000002}, {'diff': 0.00013381999999999977}, {'diff': 0.0001338060000000002}...</msg>
<status status="PASS" starttime="20201030 11:50:51.504" endtime="20201030 11:50:51.507"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:51.511" level="INFO">${RESULT} = {'diff': [0.00013419400000000067, 0.0001338060000000002, 0.00013379200000000063, 0.0001338060000000002, 0.00013381999999999977, 0.0001338060000000002, 0.0001338060000000002, 0.0001338060000000002, 0.0...</msg>
<status status="PASS" starttime="20201030 11:50:51.508" endtime="20201030 11:50:51.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:51.515" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:51.514" endtime="20201030 11:50:51.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:51.518" level="INFO">VALUE: [0.00013419400000000067, 0.0001338060000000002, 0.00013379200000000063, 0.0001338060000000002, 0.00013381999999999977, 0.0001338060000000002, 0.0001338060000000002, 0.0001338060000000002, 0.0001338060000000002, 0.000133860999999999, 0.00013379200000000063, 0.00013383299999999987, 0.00013377800000000106, 0.00013380500000000073, 0.00013381999999999977, 0.00013380499999999726, 0.00013387500000000205, 0.0001337640000000015, 0.0001338060000000002, 0.00013380500000000073, 0.00013379200000000063, 0.00013379200000000063, 0.0001338190000000003, 0.00013387500000000205, 0.00013380500000000073, 0.00013379199999999716, 0.0001338190000000003, 0.0001338060000000002, 0.00013380500000000073, 0.0001338060000000002, 0.00013380500000000073, 0.0001338060000000002, 0.0001337909999999977, 0.00013379200000000063, 0.00013387499999999858, 0.0001338060000000002, 0.00013380499999999726, 0.0001338190000000003, 0.00013377800000000106, 0.00013379200000000063, 0.00013386200000000195, 0.00013380500000000073, 0.0001338060000000002, 0.0001338190000000003, 0.0001338060000000002, 0.00013373599999999888, 0.00013381999999999977, 0.00013379100000000116, 0.0001338060000000002, 0.00013379100000000116]</msg>
<status status="PASS" starttime="20201030 11:50:51.516" endtime="20201030 11:50:51.519"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.512" endtime="20201030 11:50:51.520"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.164" endtime="20201030 11:50:51.520"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.142" endtime="20201030 11:50:51.520"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:51.523" endtime="20201030 11:50:51.542"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.521" endtime="20201030 11:50:51.543"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:51.551" endtime="20201030 11:50:51.566"></status>
</kw>
<msg timestamp="20201030 11:50:51.566" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:51.549" endtime="20201030 11:50:51.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:51.569" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:51.567" endtime="20201030 11:50:51.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:51.570" endtime="20201030 11:50:51.571"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.547" endtime="20201030 11:50:51.572"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.545" endtime="20201030 11:50:51.572"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:51.579" endtime="20201030 11:50:51.864"></status>
</kw>
<msg timestamp="20201030 11:50:51.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017834375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017978208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:51.577" endtime="20201030 11:50:51.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:51.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017834375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017978208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:51.868" endtime="20201030 11:50:51.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:51.877" endtime="20201030 11:50:51.878"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.575" endtime="20201030 11:50:51.879"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.573" endtime="20201030 11:50:51.879"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:51.883" level="INFO">${PHILIP_RES} = [{'diff': 0.00014383299999999946}, {'diff': 0.00014345800000000256}, {'diff': 0.000143444999999999}, {'diff': 0.00014347199999999866}, {'diff': 0.000143444999999999}, {'diff': 0.00014347199999999866},...</msg>
<status status="PASS" starttime="20201030 11:50:51.880" endtime="20201030 11:50:51.883"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:51.888" level="INFO">${RESULT} = {'diff': [0.00014383299999999946, 0.00014345800000000256, 0.000143444999999999, 0.00014347199999999866, 0.000143444999999999, 0.00014347199999999866, 0.00014345799999999909, 0.00014348599999999823, 0....</msg>
<status status="PASS" starttime="20201030 11:50:51.884" endtime="20201030 11:50:51.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:51.892" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:51.891" endtime="20201030 11:50:51.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:51.895" level="INFO">VALUE: [0.00014383299999999946, 0.00014345800000000256, 0.000143444999999999, 0.00014347199999999866, 0.000143444999999999, 0.00014347199999999866, 0.00014345799999999909, 0.00014348599999999823, 0.00014345800000000256, 0.00014347199999999866, 0.00014348599999999823, 0.00014341699999999985, 0.00014345899999999856, 0.00014345799999999909, 0.00014351400000000084, 0.0001434860000000017, 0.0001434999999999978, 0.00014347200000000213, 0.00014347200000000213, 0.000143444999999999, 0.00014348599999999823, 0.0001434730000000016, 0.00014350000000000127, 0.00014347199999999866, 0.00014347199999999866, 0.00014347199999999866, 0.00014347299999999813, 0.00014347200000000213, 0.0001434730000000016, 0.00014344399999999952, 0.00014345899999999856, 0.00014345799999999909, 0.00014347199999999866, 0.0001434860000000017, 0.0001434860000000017, 0.00014347299999999813, 0.00014345799999999909, 0.00014351300000000136, 0.00014347199999999866, 0.00014347199999999866, 0.0001433890000000007, 0.00014345799999999909, 0.00014347199999999866, 0.00014342999999999995, 0.00014347200000000213, 0.00014344399999999952, 0.00014347199999999866, 0.00014345900000000203, 0.00014348599999999823, 0.00014348599999999823]</msg>
<status status="PASS" starttime="20201030 11:50:51.893" endtime="20201030 11:50:51.896"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.889" endtime="20201030 11:50:51.896"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.543" endtime="20201030 11:50:51.897"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.521" endtime="20201030 11:50:51.897"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:51.899" endtime="20201030 11:50:51.919"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.898" endtime="20201030 11:50:51.919"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:51.927" endtime="20201030 11:50:51.943"></status>
</kw>
<msg timestamp="20201030 11:50:51.944" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:51.926" endtime="20201030 11:50:51.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:51.946" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:51.945" endtime="20201030 11:50:51.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:51.947" endtime="20201030 11:50:51.949"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.923" endtime="20201030 11:50:51.949"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.921" endtime="20201030 11:50:51.950"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:51.957" endtime="20201030 11:50:52.246"></status>
</kw>
<msg timestamp="20201030 11:50:52.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017743986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017897778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:51.955" endtime="20201030 11:50:52.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:52.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017743986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017897778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:52.250" endtime="20201030 11:50:52.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:52.259" endtime="20201030 11:50:52.260"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.952" endtime="20201030 11:50:52.261"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.950" endtime="20201030 11:50:52.261"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:52.265" level="INFO">${PHILIP_RES} = [{'diff': 0.00015379199999999982}, {'diff': 0.00015348599999999782}, {'diff': 0.0001534439999999991}, {'diff': 0.00015342999999999954}, {'diff': 0.00015345799999999868}, {'diff': 0.0001534310000000024...</msg>
<status status="PASS" starttime="20201030 11:50:52.262" endtime="20201030 11:50:52.265"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:52.269" level="INFO">${RESULT} = {'diff': [0.00015379199999999982, 0.00015348599999999782, 0.0001534439999999991, 0.00015342999999999954, 0.00015345799999999868, 0.00015343100000000248, 0.00015344500000000205, 0.00015344499999999858,...</msg>
<status status="PASS" starttime="20201030 11:50:52.266" endtime="20201030 11:50:52.269"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:52.273" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:52.272" endtime="20201030 11:50:52.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:52.276" level="INFO">VALUE: [0.00015379199999999982, 0.00015348599999999782, 0.0001534439999999991, 0.00015342999999999954, 0.00015345799999999868, 0.00015343100000000248, 0.00015344500000000205, 0.00015344499999999858, 0.00015342999999999954, 0.0001534439999999991, 0.0001534439999999991, 0.00015344499999999858, 0.00015344499999999858, 0.00015344499999999858, 0.0001534860000000013, 0.00015345800000000215, 0.00015345800000000215, 0.000153430999999999, 0.00015344499999999858, 0.00015347299999999772, 0.0001534439999999991, 0.00015336100000000116, 0.00015342999999999954, 0.00015344499999999858, 0.00015345900000000162, 0.00015345900000000162, 0.00015343100000000248, 0.00015342999999999954, 0.0001534439999999991, 0.00015347199999999825, 0.00015341699999999944, 0.00015350000000000086, 0.00015341699999999944, 0.0001534439999999991, 0.0001534439999999991, 0.000153430000000003, 0.00015347200000000172, 0.00015345900000000162, 0.00015344499999999858, 0.0001534439999999991, 0.0001534439999999991, 0.00015345799999999868, 0.00015344499999999858, 0.00015344500000000205, 0.00015343100000000248, 0.00015345800000000215, 0.00015344400000000258, 0.00015345800000000215, 0.00015345799999999868, 0.000153430999999999]</msg>
<status status="PASS" starttime="20201030 11:50:52.274" endtime="20201030 11:50:52.277"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.270" endtime="20201030 11:50:52.277"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.920" endtime="20201030 11:50:52.278"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.897" endtime="20201030 11:50:52.278"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:52.280" endtime="20201030 11:50:52.299"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.279" endtime="20201030 11:50:52.300"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:52.308" endtime="20201030 11:50:52.325"></status>
</kw>
<msg timestamp="20201030 11:50:52.325" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:52.307" endtime="20201030 11:50:52.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:52.328" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:52.326" endtime="20201030 11:50:52.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:52.329" endtime="20201030 11:50:52.331"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.304" endtime="20201030 11:50:52.332"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.302" endtime="20201030 11:50:52.332"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:52.339" endtime="20201030 11:50:52.625"></status>
</kw>
<msg timestamp="20201030 11:50:52.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017878361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018042486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:52.337" endtime="20201030 11:50:52.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:52.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017878361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018042486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:52.629" endtime="20201030 11:50:52.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:52.637" endtime="20201030 11:50:52.639"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.335" endtime="20201030 11:50:52.639"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.333" endtime="20201030 11:50:52.640"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:52.643" level="INFO">${PHILIP_RES} = [{'diff': 0.00016412500000000108}, {'diff': 0.00016370799999999852}, {'diff': 0.00016377799999999984}, {'diff': 0.00016377799999999984}, {'diff': 0.00016376400000000027}, {'diff': 0.000163846999999998...</msg>
<status status="PASS" starttime="20201030 11:50:52.640" endtime="20201030 11:50:52.644"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:52.648" level="INFO">${RESULT} = {'diff': [0.00016412500000000108, 0.00016370799999999852, 0.00016377799999999984, 0.00016377799999999984, 0.00016376400000000027, 0.00016384699999999822, 0.00016376400000000027, 0.0001637919999999994,...</msg>
<status status="PASS" starttime="20201030 11:50:52.645" endtime="20201030 11:50:52.648"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:52.652" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:52.651" endtime="20201030 11:50:52.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:52.655" level="INFO">VALUE: [0.00016412500000000108, 0.00016370799999999852, 0.00016377799999999984, 0.00016377799999999984, 0.00016376400000000027, 0.00016384699999999822, 0.00016376400000000027, 0.0001637919999999994, 0.00016377799999999984, 0.00016377799999999984, 0.0001637919999999994, 0.00016374999999999723, 0.00016376299999999733, 0.00016379099999999994, 0.00016379099999999994, 0.00016383300000000212, 0.00016376400000000027, 0.00016376400000000027, 0.00016377799999999984, 0.0001637919999999994, 0.00016376400000000027, 0.00016379200000000288, 0.00016377799999999984, 0.0001637919999999994, 0.0001637919999999994, 0.00016376400000000027, 0.00016377799999999984, 0.00016377799999999984, 0.00016373600000000113, 0.0001637500000000007, 0.0001637639999999968, 0.00016381999999999855, 0.00016380599999999898, 0.0001637919999999994, 0.00016374999999999723, 0.00016376400000000027, 0.00016377799999999984, 0.00016376400000000027, 0.00016377799999999984, 0.00016373599999999766, 0.00016373600000000113, 0.00016376400000000027, 0.00016377799999999984, 0.00016379099999999994, 0.00016377700000000037, 0.00016377700000000037, 0.0001638340000000016, 0.0001637919999999994, 0.00016380600000000245, 0.0001637500000000007]</msg>
<status status="PASS" starttime="20201030 11:50:52.653" endtime="20201030 11:50:52.656"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.648" endtime="20201030 11:50:52.657"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.301" endtime="20201030 11:50:52.657"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.278" endtime="20201030 11:50:52.657"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:52.660" endtime="20201030 11:50:52.679"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.658" endtime="20201030 11:50:52.680"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:52.688" endtime="20201030 11:50:52.704"></status>
</kw>
<msg timestamp="20201030 11:50:52.705" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:52.686" endtime="20201030 11:50:52.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:52.707" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:52.706" endtime="20201030 11:50:52.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:52.708" endtime="20201030 11:50:52.710"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.684" endtime="20201030 11:50:52.710"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.682" endtime="20201030 11:50:52.711"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:52.717" endtime="20201030 11:50:53.003"></status>
</kw>
<msg timestamp="20201030 11:50:53.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017665792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017840556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:52.716" endtime="20201030 11:50:53.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:53.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017665792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017840556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:53.008" endtime="20201030 11:50:53.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:53.016" endtime="20201030 11:50:53.018"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.713" endtime="20201030 11:50:53.018"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.711" endtime="20201030 11:50:53.019"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:53.022" level="INFO">${PHILIP_RES} = [{'diff': 0.00017476400000000086}, {'diff': 0.00017437500000000092}, {'diff': 0.00017441699999999963}, {'diff': 0.00017441699999999963}, {'diff': 0.00017448700000000095}, {'diff': 0.000174416000000000...</msg>
<status status="PASS" starttime="20201030 11:50:53.019" endtime="20201030 11:50:53.023"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:53.027" level="INFO">${RESULT} = {'diff': [0.00017476400000000086, 0.00017437500000000092, 0.00017441699999999963, 0.00017441699999999963, 0.00017448700000000095, 0.00017441600000000015, 0.0001744170000000031, 0.00017445800000000233,...</msg>
<status status="PASS" starttime="20201030 11:50:53.023" endtime="20201030 11:50:53.028"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:53.032" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:53.031" endtime="20201030 11:50:53.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:53.034" level="INFO">VALUE: [0.00017476400000000086, 0.00017437500000000092, 0.00017441699999999963, 0.00017441699999999963, 0.00017448700000000095, 0.00017441600000000015, 0.0001744170000000031, 0.00017445800000000233, 0.000174485999999998, 0.00017437500000000092, 0.00017441600000000015, 0.00017441699999999963, 0.00017440300000000006, 0.00017444499999999877, 0.00017441699999999963, 0.00017440200000000058, 0.00017442999999999972, 0.00017440300000000006, 0.00017447199999999843, 0.0001744590000000018, 0.00017445800000000233, 0.00017448600000000147, 0.00017447199999999843, 0.00017440300000000006, 0.00017441699999999963, 0.00017442999999999972, 0.00017445799999999886, 0.00017440200000000058, 0.00017444500000000224, 0.00017441600000000015, 0.00017437500000000092, 0.00017441600000000015, 0.00017441599999999668, 0.0001744439999999993, 0.0001743890000000005, 0.00017441699999999963, 0.00017441600000000015, 0.00017444400000000276, 0.00017442999999999972, 0.00017441699999999963, 0.00017444499999999877, 0.00017443100000000267, 0.00017441600000000015, 0.00017442999999999972, 0.00017441699999999963, 0.00017440300000000006, 0.00017441699999999963, 0.00017440300000000006, 0.00017441600000000015, 0.00017441699999999963]</msg>
<status status="PASS" starttime="20201030 11:50:53.033" endtime="20201030 11:50:53.035"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.028" endtime="20201030 11:50:53.035"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.680" endtime="20201030 11:50:53.036"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.658" endtime="20201030 11:50:53.036"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:53.039" endtime="20201030 11:50:53.058"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.037" endtime="20201030 11:50:53.059"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:53.067" endtime="20201030 11:50:53.084"></status>
</kw>
<msg timestamp="20201030 11:50:53.084" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:53.065" endtime="20201030 11:50:53.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:53.087" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:53.086" endtime="20201030 11:50:53.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:53.088" endtime="20201030 11:50:53.090"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.063" endtime="20201030 11:50:53.090"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.061" endtime="20201030 11:50:53.091"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:53.097" endtime="20201030 11:50:53.384"></status>
</kw>
<msg timestamp="20201030 11:50:53.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017659694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017845458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:53.095" endtime="20201030 11:50:53.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:53.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017659694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017845458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:53.388" endtime="20201030 11:50:53.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:53.396" endtime="20201030 11:50:53.398"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.093" endtime="20201030 11:50:53.398"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.091" endtime="20201030 11:50:53.399"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:53.403" level="INFO">${PHILIP_RES} = [{'diff': 0.00018576400000000146}, {'diff': 0.00018541700000000022}, {'diff': 0.0001854309999999998}, {'diff': 0.00018541600000000075}, {'diff': 0.00018541700000000022}, {'diff': 0.0001854300000000003...</msg>
<status status="PASS" starttime="20201030 11:50:53.400" endtime="20201030 11:50:53.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:53.407" level="INFO">${RESULT} = {'diff': [0.00018576400000000146, 0.00018541700000000022, 0.0001854309999999998, 0.00018541600000000075, 0.00018541700000000022, 0.00018543000000000032, 0.00018540300000000065, 0.00018541700000000022,...</msg>
<status status="PASS" starttime="20201030 11:50:53.404" endtime="20201030 11:50:53.407"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:53.411" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:53.410" endtime="20201030 11:50:53.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:53.414" level="INFO">VALUE: [0.00018576400000000146, 0.00018541700000000022, 0.0001854309999999998, 0.00018541600000000075, 0.00018541700000000022, 0.00018543000000000032, 0.00018540300000000065, 0.00018541700000000022, 0.00018545799999999946, 0.00018541700000000022, 0.0001854309999999998, 0.00018543000000000032, 0.00018541700000000022, 0.00018541700000000022, 0.00018541700000000022, 0.00018544499999999936, 0.00018545799999999946, 0.00018541700000000022, 0.00018541700000000022, 0.00018541700000000022, 0.00018541700000000022, 0.0001854439999999999, 0.0001854309999999998, 0.00018541700000000022, 0.00018541599999999728, 0.00018540299999999718, 0.00018543000000000032, 0.00018541700000000022, 0.00018541700000000022, 0.00018541600000000075, 0.00018541700000000022, 0.00018536100000000194, 0.00018543000000000032, 0.00018541700000000022, 0.00018541700000000022, 0.00018541600000000075, 0.0001854859999999986, 0.00018541600000000075, 0.0001854309999999998, 0.00018540300000000065, 0.00018543000000000032, 0.00018541700000000022, 0.0001854720000000025, 0.00018541600000000075, 0.00018536099999999847, 0.00018543000000000032, 0.00018541700000000022, 0.00018541700000000022, 0.00018543000000000032, 0.0001854309999999998]</msg>
<status status="PASS" starttime="20201030 11:50:53.412" endtime="20201030 11:50:53.415"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.408" endtime="20201030 11:50:53.415"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.059" endtime="20201030 11:50:53.416"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.036" endtime="20201030 11:50:53.416"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:53.418" endtime="20201030 11:50:53.437"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.417" endtime="20201030 11:50:53.438"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:53.446" endtime="20201030 11:50:53.463"></status>
</kw>
<msg timestamp="20201030 11:50:53.464" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:53.445" endtime="20201030 11:50:53.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:53.466" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:53.465" endtime="20201030 11:50:53.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:53.468" endtime="20201030 11:50:53.470"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.442" endtime="20201030 11:50:53.471"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.440" endtime="20201030 11:50:53.471"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:53.478" endtime="20201030 11:50:53.769"></status>
</kw>
<msg timestamp="20201030 11:50:53.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017858333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018055389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:53.476" endtime="20201030 11:50:53.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:53.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017858333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018055389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:53.778" endtime="20201030 11:50:53.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:53.797" endtime="20201030 11:50:53.800"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.473" endtime="20201030 11:50:53.801"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.472" endtime="20201030 11:50:53.802"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:53.811" level="INFO">${PHILIP_RES} = [{'diff': 0.000197056000000001}, {'diff': 0.00019673599999999944}, {'diff': 0.000196749999999999}, {'diff': 0.0001967080000000003}, {'diff': 0.00019670799999999683}, {'diff': 0.00019670899999999977}, ...</msg>
<status status="PASS" starttime="20201030 11:50:53.804" endtime="20201030 11:50:53.811"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:53.820" level="INFO">${RESULT} = {'diff': [0.000197056000000001, 0.00019673599999999944, 0.000196749999999999, 0.0001967080000000003, 0.00019670799999999683, 0.00019670899999999977, 0.00019672199999999987, 0.0001967230000000028, 0.00...</msg>
<status status="PASS" starttime="20201030 11:50:53.813" endtime="20201030 11:50:53.820"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:53.829" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:53.827" endtime="20201030 11:50:53.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:53.834" level="INFO">VALUE: [0.000197056000000001, 0.00019673599999999944, 0.000196749999999999, 0.0001967080000000003, 0.00019670799999999683, 0.00019670899999999977, 0.00019672199999999987, 0.0001967230000000028, 0.00019672199999999987, 0.0001967369999999989, 0.00019673599999999944, 0.00019668100000000063, 0.0001967080000000003, 0.0001967080000000003, 0.00019677799999999815, 0.00019672199999999987, 0.00019677800000000162, 0.00019673599999999944, 0.00019672299999999934, 0.0001966669999999976, 0.0001966669999999976, 0.00019673599999999944, 0.00019673599999999944, 0.00019672199999999987, 0.00019668100000000063, 0.00019673599999999944, 0.0001967360000000029, 0.00019672199999999987, 0.00019669400000000073, 0.00019673599999999944, 0.0001967360000000029, 0.0001967369999999989, 0.0001967080000000003, 0.00019672199999999987, 0.0001966799999999977, 0.00019673599999999944, 0.000196749999999999, 0.00019672199999999987, 0.00019673599999999944, 0.00019672199999999987, 0.00019670899999999977, 0.0001967080000000003, 0.0001967369999999989, 0.00019668000000000116, 0.0001967360000000029, 0.00019672199999999987, 0.00019672299999999934, 0.00019672199999999987, 0.00019675000000000248, 0.00019666599999999812]</msg>
<status status="PASS" starttime="20201030 11:50:53.831" endtime="20201030 11:50:53.837"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.821" endtime="20201030 11:50:53.838"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.439" endtime="20201030 11:50:53.839"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.416" endtime="20201030 11:50:53.839"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:53.844" endtime="20201030 11:50:53.865"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.841" endtime="20201030 11:50:53.865"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:53.873" endtime="20201030 11:50:53.892"></status>
</kw>
<msg timestamp="20201030 11:50:53.893" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:53.872" endtime="20201030 11:50:53.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:53.895" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:53.894" endtime="20201030 11:50:53.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:53.896" endtime="20201030 11:50:53.898"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.869" endtime="20201030 11:50:53.899"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.867" endtime="20201030 11:50:53.899"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:53.906" endtime="20201030 11:50:54.193"></status>
</kw>
<msg timestamp="20201030 11:50:54.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017722486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017931222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:53.904" endtime="20201030 11:50:54.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:54.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017722486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017931222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:54.197" endtime="20201030 11:50:54.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:54.206" endtime="20201030 11:50:54.207"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.901" endtime="20201030 11:50:54.208"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.900" endtime="20201030 11:50:54.208"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:54.212" level="INFO">${PHILIP_RES} = [{'diff': 0.00020873600000000103}, {'diff': 0.0002083889999999998}, {'diff': 0.0002083889999999998}, {'diff': 0.00020837500000000023}, {'diff': 0.00020837500000000023}, {'diff': 0.00020842999999999903...</msg>
<status status="PASS" starttime="20201030 11:50:54.209" endtime="20201030 11:50:54.212"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:54.217" level="INFO">${RESULT} = {'diff': [0.00020873600000000103, 0.0002083889999999998, 0.0002083889999999998, 0.00020837500000000023, 0.00020837500000000023, 0.00020842999999999903, 0.0002083889999999998, 0.00020836100000000066, 0...</msg>
<status status="PASS" starttime="20201030 11:50:54.213" endtime="20201030 11:50:54.217"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:54.222" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:54.221" endtime="20201030 11:50:54.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:54.224" level="INFO">VALUE: [0.00020873600000000103, 0.0002083889999999998, 0.0002083889999999998, 0.00020837500000000023, 0.00020837500000000023, 0.00020842999999999903, 0.0002083889999999998, 0.00020836100000000066, 0.0002084019999999999, 0.0002083889999999998, 0.0002084309999999985, 0.0002083889999999998, 0.00020840299999999937, 0.00020837500000000023, 0.00020836100000000066, 0.00020836100000000066, 0.00020837500000000023, 0.0002084019999999999, 0.00020840299999999937, 0.0002083889999999998, 0.00020831899999999848, 0.0002083470000000011, 0.00020837500000000023, 0.00020840299999999937, 0.0002083889999999998, 0.00020837500000000023, 0.00020837500000000023, 0.0002083889999999998, 0.0002084019999999999, 0.00020841699999999894, 0.00020841699999999894, 0.0002084019999999999, 0.0002084309999999985, 0.00020841699999999894, 0.0002083889999999998, 0.0002083889999999998, 0.00020837500000000023, 0.00020840299999999937, 0.0002083889999999998, 0.0002083889999999998, 0.00020831899999999848, 0.0002083889999999998, 0.00020841599999999946, 0.00020843100000000198, 0.00020833300000000152, 0.00020841599999999946, 0.00020840299999999937, 0.0002083889999999998, 0.00020838800000000032, 0.00020840299999999937]</msg>
<status status="PASS" starttime="20201030 11:50:54.223" endtime="20201030 11:50:54.225"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.218" endtime="20201030 11:50:54.225"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.866" endtime="20201030 11:50:54.226"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.840" endtime="20201030 11:50:54.226"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:54.228" endtime="20201030 11:50:54.248"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.227" endtime="20201030 11:50:54.248"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:54.257" endtime="20201030 11:50:54.276"></status>
</kw>
<msg timestamp="20201030 11:50:54.276" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:54.255" endtime="20201030 11:50:54.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:54.279" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:54.277" endtime="20201030 11:50:54.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:54.280" endtime="20201030 11:50:54.282"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.252" endtime="20201030 11:50:54.282"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.250" endtime="20201030 11:50:54.283"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:54.290" endtime="20201030 11:50:54.584"></status>
</kw>
<msg timestamp="20201030 11:50:54.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018011653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018232375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:54.288" endtime="20201030 11:50:54.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:54.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018011653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018232375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:54.594" endtime="20201030 11:50:54.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:54.613" endtime="20201030 11:50:54.616"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.285" endtime="20201030 11:50:54.617"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.283" endtime="20201030 11:50:54.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:54.626" level="INFO">${PHILIP_RES} = [{'diff': 0.00022072199999999959}, {'diff': 0.00022038899999999792}, {'diff': 0.00022037500000000182}, {'diff': 0.00022034799999999868}, {'diff': 0.00022030599999999997}, {'diff': 0.000220374999999998...</msg>
<status status="PASS" starttime="20201030 11:50:54.620" endtime="20201030 11:50:54.627"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:54.635" level="INFO">${RESULT} = {'diff': [0.00022072199999999959, 0.00022038899999999792, 0.00022037500000000182, 0.00022034799999999868, 0.00022030599999999997, 0.00022037499999999835, 0.00022036099999999878, 0.00022036199999999825...</msg>
<status status="PASS" starttime="20201030 11:50:54.628" endtime="20201030 11:50:54.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:54.644" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:54.642" endtime="20201030 11:50:54.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:54.649" level="INFO">VALUE: [0.00022072199999999959, 0.00022038899999999792, 0.00022037500000000182, 0.00022034799999999868, 0.00022030599999999997, 0.00022037499999999835, 0.00022036099999999878, 0.00022036199999999825, 0.0002203469999999992, 0.00022037499999999835, 0.00022036099999999878, 0.00022037499999999835, 0.00022037499999999835, 0.00022037499999999835, 0.00022037499999999835, 0.0002203469999999992, 0.00022042999999999716, 0.00022036100000000225, 0.00022036100000000225, 0.00022033299999999964, 0.00022036200000000172, 0.00022036100000000225, 0.00022037500000000182, 0.00022036100000000225, 0.00022044499999999967, 0.0002203890000000014, 0.00022037500000000182, 0.00022036100000000225, 0.0002203469999999992, 0.00022040200000000149, 0.00022036099999999878, 0.00022036099999999878, 0.0002203469999999992, 0.0002204440000000002, 0.00022036099999999878, 0.0002203469999999992, 0.00022037499999999835, 0.0002204310000000001, 0.00022037499999999835, 0.00022037499999999835, 0.0002204029999999975, 0.00022036099999999878, 0.00022037499999999835, 0.00022038899999999792, 0.00022031900000000007, 0.0002204310000000001, 0.00022038800000000192, 0.0002203890000000014, 0.0002203890000000014, 0.0002203890000000014]</msg>
<status status="PASS" starttime="20201030 11:50:54.646" endtime="20201030 11:50:54.651"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.637" endtime="20201030 11:50:54.652"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.249" endtime="20201030 11:50:54.653"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.226" endtime="20201030 11:50:54.653"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:54.658" endtime="20201030 11:50:54.677"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.656" endtime="20201030 11:50:54.678"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:54.686" endtime="20201030 11:50:54.706"></status>
</kw>
<msg timestamp="20201030 11:50:54.707" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:54.684" endtime="20201030 11:50:54.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:54.709" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:54.708" endtime="20201030 11:50:54.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:54.710" endtime="20201030 11:50:54.713"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.681" endtime="20201030 11:50:54.713"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.680" endtime="20201030 11:50:54.714"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:54.720" endtime="20201030 11:50:55.007"></status>
</kw>
<msg timestamp="20201030 11:50:55.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017780153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018013181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:54.719" endtime="20201030 11:50:55.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:55.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017780153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018013181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:55.011" endtime="20201030 11:50:55.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:55.019" endtime="20201030 11:50:55.021"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.716" endtime="20201030 11:50:55.022"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.714" endtime="20201030 11:50:55.022"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:55.027" level="INFO">${PHILIP_RES} = [{'diff': 0.0002330279999999997}, {'diff': 0.00023269499999999804}, {'diff': 0.0002326950000000015}, {'diff': 0.00023269499999999804}, {'diff': 0.0002326950000000015}, {'diff': 0.00023270900000000108}...</msg>
<status status="PASS" starttime="20201030 11:50:55.023" endtime="20201030 11:50:55.027"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:55.031" level="INFO">${RESULT} = {'diff': [0.0002330279999999997, 0.00023269499999999804, 0.0002326950000000015, 0.00023269499999999804, 0.0002326950000000015, 0.00023270900000000108, 0.00023268099999999847, 0.00023268100000000194, 0...</msg>
<status status="PASS" starttime="20201030 11:50:55.028" endtime="20201030 11:50:55.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:55.036" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:55.035" endtime="20201030 11:50:55.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:55.038" level="INFO">VALUE: [0.0002330279999999997, 0.00023269499999999804, 0.0002326950000000015, 0.00023269499999999804, 0.0002326950000000015, 0.00023270900000000108, 0.00023268099999999847, 0.00023268100000000194, 0.00023265299999999933, 0.00023268100000000194, 0.00023272300000000065, 0.00023272200000000118, 0.0002327089999999976, 0.00023270900000000108, 0.00023268099999999847, 0.00023273600000000075, 0.0002327089999999976, 0.00023272200000000118, 0.0002327089999999976, 0.00023270900000000108, 0.00023265299999999933, 0.00023269400000000204, 0.00023269499999999804, 0.00023270900000000108, 0.00023275000000000032, 0.00023270900000000108, 0.00023268099999999847, 0.00023270900000000108, 0.00023269499999999804, 0.0002326950000000015, 0.00023269499999999804, 0.00023272200000000118, 0.00023269499999999804, 0.00023265299999999933, 0.00023269499999999804, 0.00023268100000000194, 0.0002327089999999976, 0.00023273600000000075, 0.00023269499999999804, 0.00023270900000000108, 0.00023268099999999847, 0.00023273600000000075, 0.00023269499999999804, 0.00023268100000000194, 0.00023273600000000075, 0.00023268099999999847, 0.00023273600000000075, 0.00023270900000000108, 0.00023272300000000065, 0.00023270900000000108]</msg>
<status status="PASS" starttime="20201030 11:50:55.037" endtime="20201030 11:50:55.040"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.032" endtime="20201030 11:50:55.041"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.678" endtime="20201030 11:50:55.041"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.654" endtime="20201030 11:50:55.041"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:55.044" endtime="20201030 11:50:55.063"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.042" endtime="20201030 11:50:55.064"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:55.072" endtime="20201030 11:50:55.092"></status>
</kw>
<msg timestamp="20201030 11:50:55.092" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:55.070" endtime="20201030 11:50:55.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:55.095" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:55.094" endtime="20201030 11:50:55.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:55.096" endtime="20201030 11:50:55.098"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.068" endtime="20201030 11:50:55.098"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.066" endtime="20201030 11:50:55.099"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:55.105" endtime="20201030 11:50:55.398"></status>
</kw>
<msg timestamp="20201030 11:50:55.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017727847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017973514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:55.103" endtime="20201030 11:50:55.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:55.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017727847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017973514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:55.407" endtime="20201030 11:50:55.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:55.426" endtime="20201030 11:50:55.429"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.101" endtime="20201030 11:50:55.431"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.099" endtime="20201030 11:50:55.432"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:55.440" level="INFO">${PHILIP_RES} = [{'diff': 0.000245666999999998}, {'diff': 0.0002453609999999995}, {'diff': 0.0002453469999999999}, {'diff': 0.0002453609999999995}, {'diff': 0.0002453469999999999}, {'diff': 0.00024533300000000036}, {...</msg>
<status status="PASS" starttime="20201030 11:50:55.433" endtime="20201030 11:50:55.440"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:55.450" level="INFO">${RESULT} = {'diff': [0.000245666999999998, 0.0002453609999999995, 0.0002453469999999999, 0.0002453609999999995, 0.0002453469999999999, 0.00024533300000000036, 0.0002453469999999999, 0.00024534800000000287, 0.000...</msg>
<status status="PASS" starttime="20201030 11:50:55.442" endtime="20201030 11:50:55.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:55.459" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:55.457" endtime="20201030 11:50:55.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:55.465" level="INFO">VALUE: [0.000245666999999998, 0.0002453609999999995, 0.0002453469999999999, 0.0002453609999999995, 0.0002453469999999999, 0.00024533300000000036, 0.0002453469999999999, 0.00024534800000000287, 0.00024532000000000026, 0.00024537499999999907, 0.0002453469999999999, 0.00024533399999999983, 0.00024533300000000036, 0.0002453469999999999, 0.00024533300000000036, 0.00024533399999999983, 0.00024533300000000036, 0.00024536100000000297, 0.0002453190000000008, 0.00024533399999999983, 0.00024533300000000036, 0.0002453469999999999, 0.0002453469999999999, 0.00024532000000000026, 0.0002453469999999999, 0.0002454030000000017, 0.00024533300000000036, 0.00024533399999999983, 0.0002453469999999999, 0.0002453190000000008, 0.0002453469999999999, 0.00024533399999999983, 0.00024533300000000036, 0.00024533300000000036, 0.0002454169999999978, 0.00024529199999999765, 0.00024533300000000036, 0.0002454030000000017, 0.0002453469999999999, 0.0002453479999999994, 0.0002453190000000008, 0.0002453609999999995, 0.0002453329999999969, 0.00024537499999999907, 0.0002453469999999999, 0.0002453050000000012, 0.00024541700000000125, 0.00024537499999999907, 0.00024536100000000297, 0.00024538899999999864]</msg>
<status status="PASS" starttime="20201030 11:50:55.462" endtime="20201030 11:50:55.466"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.452" endtime="20201030 11:50:55.467"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.064" endtime="20201030 11:50:55.467"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.041" endtime="20201030 11:50:55.468"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:55.470" endtime="20201030 11:50:55.489"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.468" endtime="20201030 11:50:55.490"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:55.498" endtime="20201030 11:50:55.519"></status>
</kw>
<msg timestamp="20201030 11:50:55.519" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:55.497" endtime="20201030 11:50:55.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:55.522" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:55.520" endtime="20201030 11:50:55.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:55.523" endtime="20201030 11:50:55.525"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.494" endtime="20201030 11:50:55.525"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.492" endtime="20201030 11:50:55.526"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:55.532" endtime="20201030 11:50:55.821"></status>
</kw>
<msg timestamp="20201030 11:50:55.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01773025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017988931, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:55.530" endtime="20201030 11:50:55.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:55.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01773025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017988931, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:55.825" endtime="20201030 11:50:55.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:55.833" endtime="20201030 11:50:55.835"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.528" endtime="20201030 11:50:55.836"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.526" endtime="20201030 11:50:55.836"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:55.840" level="INFO">${PHILIP_RES} = [{'diff': 0.0002586810000000002}, {'diff': 0.00025834699999999905}, {'diff': 0.0002583329999999995}, {'diff': 0.000258348000000002}, {'diff': 0.0002583470000000025}, {'diff': 0.00025838900000000123}, ...</msg>
<status status="PASS" starttime="20201030 11:50:55.837" endtime="20201030 11:50:55.840"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:55.844" level="INFO">${RESULT} = {'diff': [0.0002586810000000002, 0.00025834699999999905, 0.0002583329999999995, 0.000258348000000002, 0.0002583470000000025, 0.00025838900000000123, 0.00025834699999999905, 0.00025834699999999905, 0.0...</msg>
<status status="PASS" starttime="20201030 11:50:55.841" endtime="20201030 11:50:55.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:55.848" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:55.847" endtime="20201030 11:50:55.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:55.851" level="INFO">VALUE: [0.0002586810000000002, 0.00025834699999999905, 0.0002583329999999995, 0.000258348000000002, 0.0002583470000000025, 0.00025838900000000123, 0.00025834699999999905, 0.00025834699999999905, 0.00025838900000000123, 0.00025834699999999905, 0.000258348000000002, 0.00025838899999999776, 0.0002583609999999986, 0.0002583199999999994, 0.00025834699999999905, 0.0002583329999999995, 0.0002584030000000008, 0.0002583329999999995, 0.00025834699999999905, 0.00025834699999999905, 0.0002582779999999972, 0.0002583189999999999, 0.0002583329999999995, 0.000258348000000002, 0.00025829100000000077, 0.00025834699999999905, 0.0002583479999999985, 0.0002583470000000025, 0.00025840199999999786, 0.0002583619999999981, 0.0002583329999999995, 0.00025837500000000166, 0.00025833399999999895, 0.0002583610000000021, 0.00025833300000000295, 0.0002583199999999994, 0.0002583059999999998, 0.00025834699999999905, 0.00025834699999999905, 0.0002583340000000024, 0.0002583189999999999, 0.0002583329999999995, 0.0002583479999999985, 0.00025838900000000123, 0.0002583610000000021, 0.00025832000000000285, 0.0002583329999999995, 0.00025834699999999905, 0.0002583479999999985, 0.0002583199999999994]</msg>
<status status="PASS" starttime="20201030 11:50:55.849" endtime="20201030 11:50:55.851"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.845" endtime="20201030 11:50:55.852"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.490" endtime="20201030 11:50:55.852"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.468" endtime="20201030 11:50:55.853"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:55.855" endtime="20201030 11:50:55.874"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.854" endtime="20201030 11:50:55.875"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:55.883" endtime="20201030 11:50:55.906"></status>
</kw>
<msg timestamp="20201030 11:50:55.907" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:55.881" endtime="20201030 11:50:55.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:55.909" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:55.908" endtime="20201030 11:50:55.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:55.910" endtime="20201030 11:50:55.913"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.879" endtime="20201030 11:50:55.913"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.877" endtime="20201030 11:50:55.914"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:55.920" endtime="20201030 11:50:56.214"></status>
</kw>
<msg timestamp="20201030 11:50:56.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017596042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017868014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:55.919" endtime="20201030 11:50:56.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:56.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017596042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017868014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:56.224" endtime="20201030 11:50:56.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:56.242" endtime="20201030 11:50:56.245"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.916" endtime="20201030 11:50:56.246"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.914" endtime="20201030 11:50:56.247"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:56.256" level="INFO">${PHILIP_RES} = [{'diff': 0.00027197200000000227}, {'diff': 0.00027166600000000027}, {'diff': 0.00027162499999999756}, {'diff': 0.0002716529999999967}, {'diff': 0.0002716390000000006}, {'diff': 0.00027166699999999974...</msg>
<status status="PASS" starttime="20201030 11:50:56.249" endtime="20201030 11:50:56.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:56.265" level="INFO">${RESULT} = {'diff': [0.00027197200000000227, 0.00027166600000000027, 0.00027162499999999756, 0.0002716529999999967, 0.0002716390000000006, 0.00027166699999999974, 0.00027163799999999766, 0.00027166699999999974, ...</msg>
<status status="PASS" starttime="20201030 11:50:56.258" endtime="20201030 11:50:56.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:56.273" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:56.271" endtime="20201030 11:50:56.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:56.278" level="INFO">VALUE: [0.00027197200000000227, 0.00027166600000000027, 0.00027162499999999756, 0.0002716529999999967, 0.0002716390000000006, 0.00027166699999999974, 0.00027163799999999766, 0.00027166699999999974, 0.00027165300000000017, 0.0002716520000000007, 0.00027166699999999974, 0.00027159800000000137, 0.00027165300000000017, 0.00027165300000000017, 0.0002716520000000007, 0.00027166699999999974, 0.00027165300000000017, 0.00027165300000000017, 0.0002716390000000006, 0.0002716520000000007, 0.000271722000000002, 0.00027165300000000017, 0.00027166699999999974, 0.0002716390000000006, 0.00027165199999999723, 0.00027166699999999974, 0.0002716390000000006, 0.00027165300000000017, 0.0002716390000000006, 0.0002716520000000007, 0.00027166699999999974, 0.00027165300000000017, 0.00027165300000000017, 0.0002716390000000006, 0.00027162499999999756, 0.00027165300000000017, 0.000271707999999999, 0.0002716940000000029, 0.00027165300000000017, 0.0002716390000000006, 0.0002716390000000006, 0.00027165300000000017, 0.00027166600000000027, 0.00027165300000000017, 0.00027166600000000027, 0.000271610999999998, 0.0002716390000000006, 0.00027163900000000407, 0.0002717360000000016, 0.00027163900000000407]</msg>
<status status="PASS" starttime="20201030 11:50:56.276" endtime="20201030 11:50:56.279"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.266" endtime="20201030 11:50:56.280"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.876" endtime="20201030 11:50:56.280"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.853" endtime="20201030 11:50:56.280"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:56.283" endtime="20201030 11:50:56.302"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.281" endtime="20201030 11:50:56.303"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:56.311" endtime="20201030 11:50:56.334"></status>
</kw>
<msg timestamp="20201030 11:50:56.334" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:56.309" endtime="20201030 11:50:56.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:56.337" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:56.335" endtime="20201030 11:50:56.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:56.338" endtime="20201030 11:50:56.340"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.307" endtime="20201030 11:50:56.340"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.305" endtime="20201030 11:50:56.340"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:56.347" endtime="20201030 11:50:56.632"></status>
</kw>
<msg timestamp="20201030 11:50:56.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018007125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018292792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:56.345" endtime="20201030 11:50:56.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:56.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018007125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018292792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:56.637" endtime="20201030 11:50:56.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:56.645" endtime="20201030 11:50:56.646"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.343" endtime="20201030 11:50:56.647"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.341" endtime="20201030 11:50:56.647"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:56.651" level="INFO">${PHILIP_RES} = [{'diff': 0.00028566699999999987}, {'diff': 0.00028531899999999916}, {'diff': 0.00028531899999999916}, {'diff': 0.00028530599999999906}, {'diff': 0.00028533400000000167}, {'diff': 0.000285305000000003...</msg>
<status status="PASS" starttime="20201030 11:50:56.648" endtime="20201030 11:50:56.651"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:56.656" level="INFO">${RESULT} = {'diff': [0.00028566699999999987, 0.00028531899999999916, 0.00028531899999999916, 0.00028530599999999906, 0.00028533400000000167, 0.00028530500000000306, 0.0002852779999999999, 0.00028530599999999906,...</msg>
<status status="PASS" starttime="20201030 11:50:56.652" endtime="20201030 11:50:56.656"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:56.660" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:56.659" endtime="20201030 11:50:56.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:56.663" level="INFO">VALUE: [0.00028566699999999987, 0.00028531899999999916, 0.00028531899999999916, 0.00028530599999999906, 0.00028533400000000167, 0.00028530500000000306, 0.0002852779999999999, 0.00028530599999999906, 0.0002852919999999995, 0.00028531899999999916, 0.0002852919999999995, 0.00028530599999999906, 0.00028530500000000306, 0.00028529200000000296, 0.0002852500000000008, 0.00028531899999999916, 0.0002853049999999996, 0.00028530599999999906, 0.0002853329999999987, 0.0002853329999999987, 0.00028534800000000124, 0.00028534700000000177, 0.0002853190000000026, 0.000285291, 0.00028531999999999863, 0.0002853329999999987, 0.00028531899999999916, 0.00028531999999999863, 0.0002852360000000012, 0.0002853049999999996, 0.00028536099999999787, 0.0002852919999999995, 0.00028531899999999916, 0.00028531899999999916, 0.00028531999999999863, 0.00028531999999999863, 0.00028534700000000177, 0.00028531899999999916, 0.00028526400000000035, 0.00028531899999999916, 0.0002853049999999996, 0.00028531999999999863, 0.0002852919999999995, 0.0002853330000000022, 0.00028531899999999916, 0.0002852919999999995, 0.00028530599999999906, 0.0002852779999999999, 0.00028531999999999863, 0.0002852500000000008]</msg>
<status status="PASS" starttime="20201030 11:50:56.662" endtime="20201030 11:50:56.664"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.657" endtime="20201030 11:50:56.665"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.303" endtime="20201030 11:50:56.665"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.281" endtime="20201030 11:50:56.665"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:56.667" endtime="20201030 11:50:56.687"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.666" endtime="20201030 11:50:56.687"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:56.696" endtime="20201030 11:50:56.719"></status>
</kw>
<msg timestamp="20201030 11:50:56.719" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:56.694" endtime="20201030 11:50:56.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:56.722" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:56.720" endtime="20201030 11:50:56.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:56.723" endtime="20201030 11:50:56.725"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.691" endtime="20201030 11:50:56.725"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.690" endtime="20201030 11:50:56.726"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:56.732" endtime="20201030 11:50:57.028"></status>
</kw>
<msg timestamp="20201030 11:50:57.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017644972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017944597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:56.730" endtime="20201030 11:50:57.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:57.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017644972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017944597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:57.038" endtime="20201030 11:50:57.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:57.056" endtime="20201030 11:50:57.060"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.728" endtime="20201030 11:50:57.061"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.726" endtime="20201030 11:50:57.062"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:57.071" level="INFO">${PHILIP_RES} = [{'diff': 0.0002996250000000013}, {'diff': 0.00029929099999999667}, {'diff': 0.0002993059999999992}, {'diff': 0.0002992919999999996}, {'diff': 0.00029927700000000057}, {'diff': 0.0002992640000000005},...</msg>
<status status="PASS" starttime="20201030 11:50:57.064" endtime="20201030 11:50:57.071"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:57.080" level="INFO">${RESULT} = {'diff': [0.0002996250000000013, 0.00029929099999999667, 0.0002993059999999992, 0.0002992919999999996, 0.00029927700000000057, 0.0002992640000000005, 0.0002992500000000009, 0.0002993049999999997, 0.00...</msg>
<status status="PASS" starttime="20201030 11:50:57.073" endtime="20201030 11:50:57.081"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:57.087" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:57.086" endtime="20201030 11:50:57.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:57.090" level="INFO">VALUE: [0.0002996250000000013, 0.00029929099999999667, 0.0002993059999999992, 0.0002992919999999996, 0.00029927700000000057, 0.0002992640000000005, 0.0002992500000000009, 0.0002993049999999997, 0.0002992640000000005, 0.0002992920000000031, 0.00029931999999999875, 0.00029929100000000014, 0.00029937499999999756, 0.00029927800000000004, 0.0002992920000000031, 0.00029923600000000133, 0.0002993470000000019, 0.0002992920000000031, 0.0002993049999999997, 0.00029927800000000004, 0.0002992500000000009, 0.00029927700000000057, 0.00029927800000000004, 0.0002992919999999996, 0.0002992919999999996, 0.0002992640000000005, 0.00029923600000000133, 0.00029924999999999743, 0.00029929100000000014, 0.0002992919999999996, 0.0002992919999999996, 0.0002992640000000005, 0.00029929100000000014, 0.0002992920000000031, 0.00029927800000000004, 0.00029929100000000014, 0.00029923600000000133, 0.00029934800000000136, 0.0002992769999999971, 0.0002992919999999996, 0.0002993059999999992, 0.0002993049999999997, 0.00029924999999999743, 0.0002992919999999996, 0.0002992919999999996, 0.00029929100000000014, 0.00029927800000000004, 0.0002993059999999992, 0.0002992640000000005, 0.00029927800000000004]</msg>
<status status="PASS" starttime="20201030 11:50:57.088" endtime="20201030 11:50:57.090"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.082" endtime="20201030 11:50:57.091"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.688" endtime="20201030 11:50:57.091"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.665" endtime="20201030 11:50:57.091"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:57.094" endtime="20201030 11:50:57.113"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.092" endtime="20201030 11:50:57.114"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:57.122" endtime="20201030 11:50:57.145"></status>
</kw>
<msg timestamp="20201030 11:50:57.146" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:57.120" endtime="20201030 11:50:57.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:57.148" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:57.147" endtime="20201030 11:50:57.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:57.149" endtime="20201030 11:50:57.152"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.118" endtime="20201030 11:50:57.152"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.116" endtime="20201030 11:50:57.153"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:57.159" endtime="20201030 11:50:57.446"></status>
</kw>
<msg timestamp="20201030 11:50:57.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017677819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017991764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:57.158" endtime="20201030 11:50:57.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:57.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017677819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017991764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:57.450" endtime="20201030 11:50:57.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:57.458" endtime="20201030 11:50:57.460"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.155" endtime="20201030 11:50:57.460"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.153" endtime="20201030 11:50:57.461"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:57.465" level="INFO">${PHILIP_RES} = [{'diff': 0.0003139449999999995}, {'diff': 0.00031362499999999793}, {'diff': 0.00031362499999999793}, {'diff': 0.0003136250000000014}, {'diff': 0.0003136389999999975}, {'diff': 0.00031361099999999836}...</msg>
<status status="PASS" starttime="20201030 11:50:57.461" endtime="20201030 11:50:57.465"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:57.469" level="INFO">${RESULT} = {'diff': [0.0003139449999999995, 0.00031362499999999793, 0.00031362499999999793, 0.0003136250000000014, 0.0003136389999999975, 0.00031361099999999836, 0.00031361100000000183, 0.00031361099999999836, 0...</msg>
<status status="PASS" starttime="20201030 11:50:57.466" endtime="20201030 11:50:57.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:57.473" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:57.472" endtime="20201030 11:50:57.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:57.475" level="INFO">VALUE: [0.0003139449999999995, 0.00031362499999999793, 0.00031362499999999793, 0.0003136250000000014, 0.0003136389999999975, 0.00031361099999999836, 0.00031361100000000183, 0.00031361099999999836, 0.00031363900000000097, 0.00031361100000000183, 0.00031361199999999784, 0.0003136250000000014, 0.00031361100000000183, 0.00031362499999999793, 0.00031359700000000226, 0.0003135829999999992, 0.00031361099999999836, 0.00031359700000000226, 0.00031356899999999965, 0.00031361099999999836, 0.0003136670000000001, 0.0003135969999999988, 0.00031362499999999793, 0.00031363900000000097, 0.0003136120000000013, 0.00031362499999999793, 0.00031359800000000174, 0.00031366599999999717, 0.00031362499999999793, 0.00031363900000000097, 0.00031362499999999793, 0.000313542, 0.0003136250000000014, 0.00031362499999999793, 0.0003136250000000014, 0.00031361100000000183, 0.00031361099999999836, 0.00031365300000000054, 0.00031361100000000183, 0.00031356899999999965, 0.0003136389999999975, 0.00031361199999999784, 0.0003136120000000048, 0.00031362499999999793, 0.0003136389999999975, 0.00031363900000000444, 0.00031361099999999836, 0.0003135969999999988, 0.00031362500000000487, 0.00031361099999999836]</msg>
<status status="PASS" starttime="20201030 11:50:57.474" endtime="20201030 11:50:57.477"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.470" endtime="20201030 11:50:57.478"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.114" endtime="20201030 11:50:57.478"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.092" endtime="20201030 11:50:57.478"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:57.481" endtime="20201030 11:50:57.500"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.479" endtime="20201030 11:50:57.500"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:57.509" endtime="20201030 11:50:57.533"></status>
</kw>
<msg timestamp="20201030 11:50:57.534" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:57.507" endtime="20201030 11:50:57.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:57.536" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:57.535" endtime="20201030 11:50:57.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:57.538" endtime="20201030 11:50:57.539"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.505" endtime="20201030 11:50:57.540"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.503" endtime="20201030 11:50:57.540"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:57.547" endtime="20201030 11:50:57.842"></status>
</kw>
<msg timestamp="20201030 11:50:57.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017707375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018036, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:50:57.545" endtime="20201030 11:50:57.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:57.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017707375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018036, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:50:57.851" endtime="20201030 11:50:57.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:57.870" endtime="20201030 11:50:57.873"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.542" endtime="20201030 11:50:57.874"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.541" endtime="20201030 11:50:57.875"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:57.883" level="INFO">${PHILIP_RES} = [{'diff': 0.00032862499999999906}, {'diff': 0.0003282910000000014}, {'diff': 0.0003282640000000017}, {'diff': 0.0003282499999999987}, {'diff': 0.00032830599999999696}, {'diff': 0.0003282640000000017},...</msg>
<status status="PASS" starttime="20201030 11:50:57.877" endtime="20201030 11:50:57.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:57.894" level="INFO">${RESULT} = {'diff': [0.00032862499999999906, 0.0003282910000000014, 0.0003282640000000017, 0.0003282499999999987, 0.00032830599999999696, 0.0003282640000000017, 0.0003282499999999987, 0.0003282779999999978, 0.00...</msg>
<status status="PASS" starttime="20201030 11:50:57.886" endtime="20201030 11:50:57.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:57.900" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:57.899" endtime="20201030 11:50:57.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:57.902" level="INFO">VALUE: [0.00032862499999999906, 0.0003282910000000014, 0.0003282640000000017, 0.0003282499999999987, 0.00032830599999999696, 0.0003282640000000017, 0.0003282499999999987, 0.0003282779999999978, 0.00032827699999999835, 0.00032825000000000215, 0.00032826399999999825, 0.0003282909999999979, 0.0003282499999999987, 0.0003282640000000017, 0.0003282780000000013, 0.0003282499999999987, 0.0003282780000000013, 0.0003282780000000013, 0.0003282640000000017, 0.00032826399999999825, 0.0003282780000000013, 0.00032825000000000215, 0.00032826399999999825, 0.00032826399999999825, 0.00032827699999999835, 0.00032820899999999945, 0.00032829200000000086, 0.00032822199999999954, 0.0003282640000000017, 0.0003282640000000017, 0.00032826399999999825, 0.00032826399999999825, 0.0003282359999999991, 0.00032820799999999997, 0.0003282499999999987, 0.00032820799999999997, 0.0003282640000000017, 0.00032825000000000215, 0.00032826399999999825, 0.0003282779999999978, 0.0003282770000000018, 0.0003282780000000013, 0.0003282780000000013, 0.0003283330000000001, 0.0003282499999999952, 0.0003282780000000013, 0.00032826300000000225, 0.0003282360000000026, 0.0003282640000000017, 0.00032830600000000043]</msg>
<status status="PASS" starttime="20201030 11:50:57.901" endtime="20201030 11:50:57.903"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.896" endtime="20201030 11:50:57.903"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.501" endtime="20201030 11:50:57.904"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.479" endtime="20201030 11:50:57.904"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:57.906" endtime="20201030 11:50:57.926"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.905" endtime="20201030 11:50:57.926"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:57.935" endtime="20201030 11:50:57.959"></status>
</kw>
<msg timestamp="20201030 11:50:57.960" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:57.933" endtime="20201030 11:50:57.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:57.962" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:57.961" endtime="20201030 11:50:57.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:57.963" endtime="20201030 11:50:57.965"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.930" endtime="20201030 11:50:57.966"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.928" endtime="20201030 11:50:57.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:57.973" endtime="20201030 11:50:58.259"></status>
</kw>
<msg timestamp="20201030 11:50:58.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01779575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018139347, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:57.971" endtime="20201030 11:50:58.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:58.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01779575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018139347, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:58.264" endtime="20201030 11:50:58.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:58.272" endtime="20201030 11:50:58.274"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.968" endtime="20201030 11:50:58.274"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.967" endtime="20201030 11:50:58.275"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:58.279" level="INFO">${PHILIP_RES} = [{'diff': 0.00034359700000000104}, {'diff': 0.0003432639999999994}, {'diff': 0.00034327799999999895}, {'diff': 0.0003432499999999998}, {'diff': 0.0003432499999999998}, {'diff': 0.00034327799999999895}...</msg>
<status status="PASS" starttime="20201030 11:50:58.275" endtime="20201030 11:50:58.279"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:58.283" level="INFO">${RESULT} = {'diff': [0.00034359700000000104, 0.0003432639999999994, 0.00034327799999999895, 0.0003432499999999998, 0.0003432499999999998, 0.00034327799999999895, 0.0003432499999999998, 0.0003432639999999994, 0.0...</msg>
<status status="PASS" starttime="20201030 11:50:58.280" endtime="20201030 11:50:58.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:58.287" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:58.286" endtime="20201030 11:50:58.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:58.290" level="INFO">VALUE: [0.00034359700000000104, 0.0003432639999999994, 0.00034327799999999895, 0.0003432499999999998, 0.0003432499999999998, 0.00034327799999999895, 0.0003432499999999998, 0.0003432639999999994, 0.0003432639999999994, 0.00034326400000000284, 0.00034326400000000284, 0.0003432639999999994, 0.00034327799999999895, 0.0003432919999999985, 0.00034327799999999895, 0.0003433049999999986, 0.0003432780000000024, 0.0003432639999999994, 0.0003432639999999994, 0.0003432639999999994, 0.0003431940000000015, 0.0003432639999999994, 0.00034327799999999895, 0.00034326400000000284, 0.0003432499999999998, 0.0003432079999999976, 0.0003432910000000025, 0.0003432499999999998, 0.00034323600000000024, 0.0003433189999999982, 0.0003432639999999994, 0.0003432639999999994, 0.00034323600000000024, 0.0003432639999999994, 0.0003432499999999998, 0.0003432629999999999, 0.00034327799999999895, 0.00034327799999999895, 0.00034326400000000284, 0.00034324999999999634, 0.0003432500000000033, 0.0003432780000000024, 0.00034324999999999634, 0.00034326400000000284, 0.0003433340000000007, 0.00034326400000000284, 0.00034324999999999634, 0.0003432500000000033, 0.0003432780000000024, 0.00034324999999999634]</msg>
<status status="PASS" starttime="20201030 11:50:58.288" endtime="20201030 11:50:58.290"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.283" endtime="20201030 11:50:58.291"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.927" endtime="20201030 11:50:58.291"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.904" endtime="20201030 11:50:58.291"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:58.294" endtime="20201030 11:50:58.313"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.292" endtime="20201030 11:50:58.314"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:58.322" endtime="20201030 11:50:58.348"></status>
</kw>
<msg timestamp="20201030 11:50:58.349" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:58.320" endtime="20201030 11:50:58.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:58.351" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:58.350" endtime="20201030 11:50:58.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:58.352" endtime="20201030 11:50:58.355"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.318" endtime="20201030 11:50:58.356"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.316" endtime="20201030 11:50:58.356"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:58.363" endtime="20201030 11:50:58.660"></status>
</kw>
<msg timestamp="20201030 11:50:58.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017755333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01811425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:58.361" endtime="20201030 11:50:58.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:58.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017755333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01811425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:58.670" endtime="20201030 11:50:58.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:58.688" endtime="20201030 11:50:58.691"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.358" endtime="20201030 11:50:58.692"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.357" endtime="20201030 11:50:58.693"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:58.702" level="INFO">${PHILIP_RES} = [{'diff': 0.0003589169999999968}, {'diff': 0.00035862499999999783}, {'diff': 0.00035856899999999955}, {'diff': 0.00035858400000000207}, {'diff': 0.0003585829999999991}, {'diff': 0.00035852799999999685...</msg>
<status status="PASS" starttime="20201030 11:50:58.695" endtime="20201030 11:50:58.702"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:58.708" level="INFO">${RESULT} = {'diff': [0.0003589169999999968, 0.00035862499999999783, 0.00035856899999999955, 0.00035858400000000207, 0.0003585829999999991, 0.00035852799999999685, 0.0003585829999999991, 0.00035856999999999903, 0...</msg>
<status status="PASS" starttime="20201030 11:50:58.704" endtime="20201030 11:50:58.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:58.713" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:58.712" endtime="20201030 11:50:58.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:58.715" level="INFO">VALUE: [0.0003589169999999968, 0.00035862499999999783, 0.00035856899999999955, 0.00035858400000000207, 0.0003585829999999991, 0.00035852799999999685, 0.0003585829999999991, 0.00035856999999999903, 0.00035856899999999955, 0.00035856999999999903, 0.0003585700000000025, 0.0003585829999999991, 0.0003585839999999986, 0.00035855599999999946, 0.000358555, 0.00035856999999999903, 0.0003585419999999999, 0.00035856899999999955, 0.0003585700000000025, 0.00035855599999999946, 0.0003585139999999973, 0.0003585839999999986, 0.00035856999999999903, 0.000358569000000003, 0.00035856999999999903, 0.0003585829999999991, 0.0003585839999999986, 0.00035851400000000075, 0.0003585830000000026, 0.00035856899999999955, 0.0003585700000000025, 0.00035856999999999903, 0.000358555, 0.0003585419999999999, 0.00035855599999999946, 0.0003585280000000038, 0.00035861100000000173, 0.0003585700000000025, 0.0003585689999999961, 0.0003586250000000013, 0.0003585140000000042, 0.0003585830000000026, 0.00035858400000000207, 0.0003585689999999961, 0.0003585549999999965, 0.00035858400000000207, 0.000358569000000003, 0.00035858299999999566, 0.000358555999999996, 0.0003585700000000025]</msg>
<status status="PASS" starttime="20201030 11:50:58.714" endtime="20201030 11:50:58.717"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.709" endtime="20201030 11:50:58.717"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.314" endtime="20201030 11:50:58.718"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.292" endtime="20201030 11:50:58.718"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:58.720" endtime="20201030 11:50:58.740"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.719" endtime="20201030 11:50:58.740"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:58.749" endtime="20201030 11:50:58.776"></status>
</kw>
<msg timestamp="20201030 11:50:58.777" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:58.747" endtime="20201030 11:50:58.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:58.779" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:58.778" endtime="20201030 11:50:58.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:58.780" endtime="20201030 11:50:58.782"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.744" endtime="20201030 11:50:58.783"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.742" endtime="20201030 11:50:58.783"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:58.790" endtime="20201030 11:50:59.075"></status>
</kw>
<msg timestamp="20201030 11:50:59.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017726625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018101208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:58.788" endtime="20201030 11:50:59.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:59.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017726625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018101208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:59.079" endtime="20201030 11:50:59.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.087" endtime="20201030 11:50:59.089"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.785" endtime="20201030 11:50:59.089"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.784" endtime="20201030 11:50:59.090"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:59.094" level="INFO">${PHILIP_RES} = [{'diff': 0.00037458300000000125}, {'diff': 0.00037417999999999826}, {'diff': 0.0003742499999999996}, {'diff': 0.000374236}, {'diff': 0.0003742369999999995}, {'diff': 0.000374236}, {'diff': 0.00037423...</msg>
<status status="PASS" starttime="20201030 11:50:59.090" endtime="20201030 11:50:59.094"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:59.098" level="INFO">${RESULT} = {'diff': [0.00037458300000000125, 0.00037417999999999826, 0.0003742499999999996, 0.000374236, 0.0003742369999999995, 0.000374236, 0.000374236, 0.00037422200000000044, 0.0003742499999999996, 0.00037425...</msg>
<status status="PASS" starttime="20201030 11:50:59.095" endtime="20201030 11:50:59.099"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:59.103" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:59.102" endtime="20201030 11:50:59.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:59.106" level="INFO">VALUE: [0.00037458300000000125, 0.00037417999999999826, 0.0003742499999999996, 0.000374236, 0.0003742369999999995, 0.000374236, 0.000374236, 0.00037422200000000044, 0.0003742499999999996, 0.00037425000000000305, 0.0003742499999999996, 0.0003742499999999996, 0.00037425000000000305, 0.0003742369999999995, 0.000374236, 0.000374221999999997, 0.0003742499999999996, 0.0003741810000000012, 0.00037422200000000044, 0.000374236, 0.000374236, 0.0003742369999999995, 0.00037422200000000044, 0.000374236, 0.0003742499999999996, 0.00037422200000000044, 0.0003742499999999996, 0.000374236, 0.00037431900000000143, 0.00037422200000000044, 0.0003742369999999995, 0.00037426399999999915, 0.0003741810000000012, 0.00037426399999999915, 0.000374236999999996, 0.0003742779999999987, 0.0003742499999999996, 0.0003742499999999996, 0.00037426399999999915, 0.0003742499999999996, 0.0003742499999999996, 0.000374236, 0.000374236, 0.000374236, 0.000374236, 0.0003742499999999996, 0.00037422200000000044, 0.0003742229999999999, 0.000374236, 0.000374236]</msg>
<status status="PASS" starttime="20201030 11:50:59.104" endtime="20201030 11:50:59.107"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.099" endtime="20201030 11:50:59.107"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.741" endtime="20201030 11:50:59.108"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.718" endtime="20201030 11:50:59.108"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:59.111" endtime="20201030 11:50:59.131"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.109" endtime="20201030 11:50:59.132"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.140" endtime="20201030 11:50:59.168"></status>
</kw>
<msg timestamp="20201030 11:50:59.169" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:59.138" endtime="20201030 11:50:59.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:59.171" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:59.170" endtime="20201030 11:50:59.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.172" endtime="20201030 11:50:59.174"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.136" endtime="20201030 11:50:59.174"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.134" endtime="20201030 11:50:59.175"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.181" endtime="20201030 11:50:59.483"></status>
</kw>
<msg timestamp="20201030 11:50:59.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018531069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018921639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:59.180" endtime="20201030 11:50:59.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:59.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018531069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018921639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:59.492" endtime="20201030 11:50:59.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.511" endtime="20201030 11:50:59.514"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.177" endtime="20201030 11:50:59.515"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.175" endtime="20201030 11:50:59.516"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:59.520" level="INFO">${PHILIP_RES} = [{'diff': 0.0003905699999999998}, {'diff': 0.0003903190000000001}, {'diff': 0.000390208000000003}, {'diff': 0.00039020799999999953}, {'diff': 0.00039020799999999953}, {'diff': 0.00039020900000000247},...</msg>
<status status="PASS" starttime="20201030 11:50:59.517" endtime="20201030 11:50:59.521"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:59.524" level="INFO">${RESULT} = {'diff': [0.0003905699999999998, 0.0003903190000000001, 0.000390208000000003, 0.00039020799999999953, 0.00039020799999999953, 0.00039020900000000247, 0.0003902219999999991, 0.0003902219999999991, 0.00...</msg>
<status status="PASS" starttime="20201030 11:50:59.521" endtime="20201030 11:50:59.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:59.529" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:59.528" endtime="20201030 11:50:59.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:59.531" level="INFO">VALUE: [0.0003905699999999998, 0.0003903190000000001, 0.000390208000000003, 0.00039020799999999953, 0.00039020799999999953, 0.00039020900000000247, 0.0003902219999999991, 0.0003902219999999991, 0.00039020900000000247, 0.00039020799999999953, 0.0003902640000000013, 0.00039020900000000247, 0.0003901670000000003, 0.0003902219999999991, 0.00039020900000000247, 0.0003902639999999978, 0.00039020799999999953, 0.00039020900000000247, 0.0003902219999999991, 0.0003902219999999991, 0.00039020900000000247, 0.0003902219999999991, 0.00039018099999999986, 0.000390208000000003, 0.00039019399999999996, 0.000390208999999999, 0.00039023600000000214, 0.0003901800000000004, 0.00039019499999999943, 0.000390208000000003, 0.00039019399999999996, 0.00039023600000000214, 0.00039020799999999606, 0.00039027800000000085, 0.00039022300000000204, 0.00039022199999999563, 0.00039022200000000257, 0.0003902640000000013, 0.00039027800000000085, 0.0003902500000000017, 0.0003901950000000029, 0.00039020799999999606, 0.000390208000000003, 0.00039020900000000247, 0.00039020799999999606, 0.0003902640000000013, 0.00039022200000000257, 0.00039020799999999606, 0.00039020900000000247, 0.0003901940000000034]</msg>
<status status="PASS" starttime="20201030 11:50:59.530" endtime="20201030 11:50:59.532"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.525" endtime="20201030 11:50:59.532"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.132" endtime="20201030 11:50:59.533"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.108" endtime="20201030 11:50:59.533"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:59.536" endtime="20201030 11:50:59.555"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.534" endtime="20201030 11:50:59.556"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.564" endtime="20201030 11:50:59.593"></status>
</kw>
<msg timestamp="20201030 11:50:59.593" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:59.562" endtime="20201030 11:50:59.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:59.596" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:59.594" endtime="20201030 11:50:59.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.597" endtime="20201030 11:50:59.599"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.560" endtime="20201030 11:50:59.600"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.558" endtime="20201030 11:50:59.600"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.607" endtime="20201030 11:50:59.893"></status>
</kw>
<msg timestamp="20201030 11:50:59.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017784819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018191722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:59.605" endtime="20201030 11:50:59.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:59.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017784819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018191722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:59.897" endtime="20201030 11:50:59.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.905" endtime="20201030 11:50:59.907"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.602" endtime="20201030 11:50:59.907"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.601" endtime="20201030 11:50:59.908"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:59.911" level="INFO">${PHILIP_RES} = [{'diff': 0.0004069030000000001}, {'diff': 0.00040654099999999985}, {'diff': 0.000406568999999999}, {'diff': 0.0004065419999999993}, {'diff': 0.0004065419999999993}, {'diff': 0.00040657000000000193}, ...</msg>
<status status="PASS" starttime="20201030 11:50:59.908" endtime="20201030 11:50:59.912"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:59.916" level="INFO">${RESULT} = {'diff': [0.0004069030000000001, 0.00040654099999999985, 0.000406568999999999, 0.0004065419999999993, 0.0004065419999999993, 0.00040657000000000193, 0.0004065419999999993, 0.00040652799999999975, 0.00...</msg>
<status status="PASS" starttime="20201030 11:50:59.912" endtime="20201030 11:50:59.916"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:59.920" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:59.919" endtime="20201030 11:50:59.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:59.922" level="INFO">VALUE: [0.0004069030000000001, 0.00040654099999999985, 0.000406568999999999, 0.0004065419999999993, 0.0004065419999999993, 0.00040657000000000193, 0.0004065419999999993, 0.00040652799999999975, 0.00040654099999999985, 0.000406568999999999, 0.00040652799999999975, 0.0004065559999999989, 0.0004065420000000028, 0.00040652799999999975, 0.00040648600000000104, 0.0004065419999999993, 0.00040652799999999975, 0.000406568999999999, 0.0004065549999999994, 0.00040655600000000236, 0.0004065419999999993, 0.0004065559999999989, 0.0004065419999999993, 0.000406471999999998, 0.00040654099999999985, 0.00040654099999999985, 0.0004065270000000003, 0.0004065419999999993, 0.00040648600000000104, 0.0004065419999999993, 0.00040657000000000193, 0.0004065420000000028, 0.0004065420000000028, 0.00040655499999999595, 0.0004065410000000033, 0.00040654199999999585, 0.0004065279999999963, 0.0004065420000000028, 0.00040654199999999585, 0.0004065840000000015, 0.0004065280000000032, 0.0004065409999999964, 0.000406583000000002, 0.0004065410000000033, 0.00040654199999999585, 0.0004065420000000028, 0.0004065279999999963, 0.0004065970000000016, 0.00040655600000000236, 0.0004065829999999951]</msg>
<status status="PASS" starttime="20201030 11:50:59.921" endtime="20201030 11:50:59.924"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.916" endtime="20201030 11:50:59.924"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.556" endtime="20201030 11:50:59.925"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.534" endtime="20201030 11:50:59.925"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:59.927" endtime="20201030 11:50:59.947"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.926" endtime="20201030 11:50:59.947"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.955" endtime="20201030 11:50:59.985"></status>
</kw>
<msg timestamp="20201030 11:50:59.985" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:59.954" endtime="20201030 11:50:59.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:59.988" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:59.986" endtime="20201030 11:50:59.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.989" endtime="20201030 11:50:59.990"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.951" endtime="20201030 11:50:59.991"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.949" endtime="20201030 11:50:59.991"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.998" endtime="20201030 11:51:00.283"></status>
</kw>
<msg timestamp="20201030 11:51:00.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017558097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017981611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:59.996" endtime="20201030 11:51:00.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017558097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017981611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:00.287" endtime="20201030 11:51:00.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.295" endtime="20201030 11:51:00.297"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.994" endtime="20201030 11:51:00.298"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.992" endtime="20201030 11:51:00.298"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:00.302" level="INFO">${PHILIP_RES} = [{'diff': 0.00042351399999999984}, {'diff': 0.0004231799999999987}, {'diff': 0.0004232090000000008}, {'diff': 0.00042319399999999827}, {'diff': 0.00042319400000000174}, {'diff': 0.0004231669999999986}...</msg>
<status status="PASS" starttime="20201030 11:51:00.299" endtime="20201030 11:51:00.302"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:00.307" level="INFO">${RESULT} = {'diff': [0.00042351399999999984, 0.0004231799999999987, 0.0004232090000000008, 0.00042319399999999827, 0.00042319400000000174, 0.0004231669999999986, 0.0004232220000000009, 0.00042318000000000217, 0....</msg>
<status status="PASS" starttime="20201030 11:51:00.303" endtime="20201030 11:51:00.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.311" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:00.310" endtime="20201030 11:51:00.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.314" level="INFO">VALUE: [0.00042351399999999984, 0.0004231799999999987, 0.0004232090000000008, 0.00042319399999999827, 0.00042319400000000174, 0.0004231669999999986, 0.0004232220000000009, 0.00042318000000000217, 0.0004231669999999986, 0.00042313900000000293, 0.0004232089999999973, 0.00042319400000000174, 0.00042319399999999827, 0.0004231950000000012, 0.0004231659999999991, 0.0004232080000000013, 0.0004232090000000008, 0.00042319399999999827, 0.00042318100000000164, 0.00042319499999999774, 0.00042319400000000174, 0.00042319499999999774, 0.0004232080000000013, 0.00042319399999999827, 0.0004231950000000012, 0.0004232639999999996, 0.0004231950000000012, 0.0004231950000000012, 0.0004231799999999987, 0.00042313899999999946, 0.0004231530000000025, 0.00042313800000000346, 0.0004231950000000012, 0.0004231939999999948, 0.0004232080000000013, 0.0004231950000000012, 0.000423138999999996, 0.00042318100000000164, 0.00042318100000000164, 0.00042318000000000217, 0.0004231249999999964, 0.0004231110000000038, 0.0004232080000000013, 0.00042318100000000164, 0.00042316599999999566, 0.0004231950000000012, 0.00042318100000000164, 0.00042316599999999566, 0.0004231530000000025, 0.0004232080000000013]</msg>
<status status="PASS" starttime="20201030 11:51:00.312" endtime="20201030 11:51:00.320"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.308" endtime="20201030 11:51:00.321"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.948" endtime="20201030 11:51:00.321"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.925" endtime="20201030 11:51:00.322"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:00.324" endtime="20201030 11:51:00.343"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.322" endtime="20201030 11:51:00.344"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.352" endtime="20201030 11:51:00.383"></status>
</kw>
<msg timestamp="20201030 11:51:00.383" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:00.351" endtime="20201030 11:51:00.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.386" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:00.384" endtime="20201030 11:51:00.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.387" endtime="20201030 11:51:00.388"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.348" endtime="20201030 11:51:00.389"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.346" endtime="20201030 11:51:00.389"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.396" endtime="20201030 11:51:00.683"></status>
</kw>
<msg timestamp="20201030 11:51:00.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017662903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018103431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:00.394" endtime="20201030 11:51:00.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017662903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018103431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:00.687" endtime="20201030 11:51:00.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.695" endtime="20201030 11:51:00.697"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.392" endtime="20201030 11:51:00.698"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.390" endtime="20201030 11:51:00.698"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:00.702" level="INFO">${PHILIP_RES} = [{'diff': 0.00044052799999999906}, {'diff': 0.0004401810000000013}, {'diff': 0.0004401659999999988}, {'diff': 0.0004401940000000014}, {'diff': 0.0004401810000000013}, {'diff': 0.0004401389999999991}, ...</msg>
<status status="PASS" starttime="20201030 11:51:00.699" endtime="20201030 11:51:00.702"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:00.706" level="INFO">${RESULT} = {'diff': [0.00044052799999999906, 0.0004401810000000013, 0.0004401659999999988, 0.0004401940000000014, 0.0004401810000000013, 0.0004401389999999991, 0.0004401809999999978, 0.00044016600000000225, 0.00...</msg>
<status status="PASS" starttime="20201030 11:51:00.703" endtime="20201030 11:51:00.706"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.710" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:00.709" endtime="20201030 11:51:00.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.713" level="INFO">VALUE: [0.00044052799999999906, 0.0004401810000000013, 0.0004401659999999988, 0.0004401940000000014, 0.0004401810000000013, 0.0004401389999999991, 0.0004401809999999978, 0.00044016600000000225, 0.000440125000000003, 0.0004401810000000013, 0.0004401810000000013, 0.00044022200000000053, 0.0004401800000000018, 0.0004401670000000017, 0.00044019500000000086, 0.00044020899999999696, 0.0004401809999999978, 0.0004401939999999979, 0.00044017999999999835, 0.00044019500000000086, 0.0004401670000000017, 0.0004401940000000014, 0.0004401940000000014, 0.0004401800000000018, 0.0004401810000000013, 0.0004401810000000013, 0.00044020800000000096, 0.00044017999999999835, 0.00044017999999999835, 0.0004401810000000013, 0.0004401809999999978, 0.0004401809999999978, 0.0004401939999999979, 0.0004401939999999979, 0.0004401949999999974, 0.0004401809999999978, 0.00044023600000000357, 0.00044017999999999835, 0.00044019400000000486, 0.0004401809999999978, 0.00044019500000000433, 0.0004401809999999978, 0.0004401800000000053, 0.00044017999999999835, 0.00044016699999999825, 0.0004402090000000039, 0.0004401809999999978, 0.0004401660000000057, 0.00044017999999999835, 0.00044018100000000476]</msg>
<status status="PASS" starttime="20201030 11:51:00.712" endtime="20201030 11:51:00.714"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.707" endtime="20201030 11:51:00.714"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.345" endtime="20201030 11:51:00.715"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.322" endtime="20201030 11:51:00.715"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:00.717" endtime="20201030 11:51:00.737"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.716" endtime="20201030 11:51:00.737"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.745" endtime="20201030 11:51:00.777"></status>
</kw>
<msg timestamp="20201030 11:51:00.778" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:00.744" endtime="20201030 11:51:00.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.780" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:00.779" endtime="20201030 11:51:00.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.781" endtime="20201030 11:51:00.784"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.741" endtime="20201030 11:51:00.784"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.739" endtime="20201030 11:51:00.785"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.791" endtime="20201030 11:51:01.077"></status>
</kw>
<msg timestamp="20201030 11:51:01.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017653056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018110931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:00.790" endtime="20201030 11:51:01.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:01.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017653056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018110931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:01.081" endtime="20201030 11:51:01.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:01.089" endtime="20201030 11:51:01.091"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.787" endtime="20201030 11:51:01.091"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.785" endtime="20201030 11:51:01.092"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:01.096" level="INFO">${PHILIP_RES} = [{'diff': 0.00045787499999999995}, {'diff': 0.0004574999999999996}, {'diff': 0.000457486}, {'diff': 0.00045747200000000043}, {'diff': 0.0004574999999999996}, {'diff': 0.00045745800000000086}, {'diff':...</msg>
<status status="PASS" starttime="20201030 11:51:01.093" endtime="20201030 11:51:01.096"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:01.100" level="INFO">${RESULT} = {'diff': [0.00045787499999999995, 0.0004574999999999996, 0.000457486, 0.00045747200000000043, 0.0004574999999999996, 0.00045745800000000086, 0.0004574999999999996, 0.00045752699999999924, 0.0004574999...</msg>
<status status="PASS" starttime="20201030 11:51:01.097" endtime="20201030 11:51:01.100"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:01.104" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:01.103" endtime="20201030 11:51:01.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:01.107" level="INFO">VALUE: [0.00045787499999999995, 0.0004574999999999996, 0.000457486, 0.00045747200000000043, 0.0004574999999999996, 0.00045745800000000086, 0.0004574999999999996, 0.00045752699999999924, 0.0004574999999999996, 0.0004574999999999996, 0.00045741699999999816, 0.0004574999999999996, 0.00045747200000000043, 0.0004574999999999996, 0.000457486, 0.000457486, 0.00045750000000000304, 0.000457486, 0.00045751399999999914, 0.00045747200000000043, 0.00045751399999999914, 0.000457486, 0.0004574440000000013, 0.000457486, 0.000457486, 0.0004574999999999996, 0.00045751399999999914, 0.000457486, 0.00045750000000000304, 0.0004574999999999996, 0.00045747200000000043, 0.000457486, 0.000457486, 0.00045751399999999914, 0.00045751399999999914, 0.0004574999999999996, 0.0004574869999999995, 0.000457486, 0.00045751399999999914, 0.0004574999999999996, 0.00045747200000000043, 0.000457486, 0.000457486, 0.0004574999999999996, 0.0004574999999999996, 0.000457486, 0.0004575409999999988, 0.000457486, 0.0004574999999999996, 0.000457486]</msg>
<status status="PASS" starttime="20201030 11:51:01.105" endtime="20201030 11:51:01.108"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.101" endtime="20201030 11:51:01.109"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.738" endtime="20201030 11:51:01.109"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.715" endtime="20201030 11:51:01.109"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:01.112" endtime="20201030 11:51:01.131"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.110" endtime="20201030 11:51:01.132"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:01.141" endtime="20201030 11:51:01.173"></status>
</kw>
<msg timestamp="20201030 11:51:01.174" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:01.139" endtime="20201030 11:51:01.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:01.176" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:01.175" endtime="20201030 11:51:01.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:01.177" endtime="20201030 11:51:01.179"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.136" endtime="20201030 11:51:01.179"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.134" endtime="20201030 11:51:01.180"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:01.186" endtime="20201030 11:51:01.472"></status>
</kw>
<msg timestamp="20201030 11:51:01.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018775306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019250819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:01.185" endtime="20201030 11:51:01.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:01.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018775306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019250819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:01.476" endtime="20201030 11:51:01.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:01.484" endtime="20201030 11:51:01.486"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.182" endtime="20201030 11:51:01.486"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.181" endtime="20201030 11:51:01.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:01.491" level="INFO">${PHILIP_RES} = [{'diff': 0.0004755130000000003}, {'diff': 0.00047517999999999866}, {'diff': 0.0004751390000000029}, {'diff': 0.00047516699999999856}, {'diff': 0.0004751110000000003}, {'diff': 0.0004751810000000016},...</msg>
<status status="PASS" starttime="20201030 11:51:01.488" endtime="20201030 11:51:01.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:01.496" level="INFO">${RESULT} = {'diff': [0.0004755130000000003, 0.00047517999999999866, 0.0004751390000000029, 0.00047516699999999856, 0.0004751110000000003, 0.0004751810000000016, 0.000475152999999999, 0.00047513799999999995, 0.00...</msg>
<status status="PASS" starttime="20201030 11:51:01.492" endtime="20201030 11:51:01.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:01.500" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:01.499" endtime="20201030 11:51:01.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:01.502" level="INFO">VALUE: [0.0004755130000000003, 0.00047517999999999866, 0.0004751390000000029, 0.00047516699999999856, 0.0004751110000000003, 0.0004751810000000016, 0.000475152999999999, 0.00047513799999999995, 0.000475152999999999, 0.00047515300000000246, 0.00047515300000000246, 0.00047516699999999856, 0.0004752079999999978, 0.00047516600000000256, 0.000475152999999999, 0.0004751389999999994, 0.000475152999999999, 0.00047515300000000246, 0.00047513799999999995, 0.0004751659999999991, 0.000475152999999999, 0.00047520800000000127, 0.00047516699999999856, 0.000475152999999999, 0.00047518000000000213, 0.00047516700000000203, 0.0004751670000000055, 0.0004751389999999994, 0.00047519399999999823, 0.00047513799999999995, 0.0004751659999999991, 0.00047520899999999727, 0.000475152999999999, 0.0004751670000000055, 0.0004751519999999995, 0.0004751659999999991, 0.0004752230000000038, 0.000475152999999999, 0.000475152999999999, 0.00047516699999999856, 0.0004751519999999995, 0.0004751800000000056, 0.000475152999999999, 0.000475152999999999, 0.00047516699999999856, 0.000475152999999999, 0.0004751110000000003, 0.00047516699999999856, 0.0004751389999999994, 0.0004751670000000055]</msg>
<status status="PASS" starttime="20201030 11:51:01.501" endtime="20201030 11:51:01.503"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.496" endtime="20201030 11:51:01.504"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.132" endtime="20201030 11:51:01.504"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.110" endtime="20201030 11:51:01.504"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:01.507" endtime="20201030 11:51:01.526"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.505" endtime="20201030 11:51:01.527"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:01.535" endtime="20201030 11:51:01.569"></status>
</kw>
<msg timestamp="20201030 11:51:01.569" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:01.533" endtime="20201030 11:51:01.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:01.572" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:01.570" endtime="20201030 11:51:01.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:01.573" endtime="20201030 11:51:01.574"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.531" endtime="20201030 11:51:01.575"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.529" endtime="20201030 11:51:01.576"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:01.582" endtime="20201030 11:51:01.869"></status>
</kw>
<msg timestamp="20201030 11:51:01.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017871306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018364792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:01.580" endtime="20201030 11:51:01.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:01.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017871306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018364792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:01.873" endtime="20201030 11:51:01.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:01.882" endtime="20201030 11:51:01.883"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.578" endtime="20201030 11:51:01.884"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.576" endtime="20201030 11:51:01.884"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:01.888" level="INFO">${PHILIP_RES} = [{'diff': 0.0004934860000000013}, {'diff': 0.000493124999999997}, {'diff': 0.0004931380000000006}, {'diff': 0.0004932220000000015}, {'diff': 0.0004931390000000001}, {'diff': 0.0004931250000000005}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:01.885" endtime="20201030 11:51:01.888"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:01.892" level="INFO">${RESULT} = {'diff': [0.0004934860000000013, 0.000493124999999997, 0.0004931380000000006, 0.0004932220000000015, 0.0004931390000000001, 0.0004931250000000005, 0.0004931529999999996, 0.0004931519999999967, 0.00049...</msg>
<status status="PASS" starttime="20201030 11:51:01.889" endtime="20201030 11:51:01.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:01.896" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:01.895" endtime="20201030 11:51:01.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:01.899" level="INFO">VALUE: [0.0004934860000000013, 0.000493124999999997, 0.0004931380000000006, 0.0004932220000000015, 0.0004931390000000001, 0.0004931250000000005, 0.0004931529999999996, 0.0004931519999999967, 0.0004931939999999989, 0.0004930829999999983, 0.0004932080000000019, 0.0004931529999999996, 0.0004931250000000005, 0.0004931799999999993, 0.000493124999999997, 0.0004931380000000006, 0.0004931390000000001, 0.0004931380000000006, 0.0004931250000000005, 0.0004931390000000001, 0.0004931800000000028, 0.0004931529999999996, 0.0004931390000000001, 0.0004931529999999996, 0.0004931390000000001, 0.0004931390000000001, 0.0004931670000000027, 0.0004931390000000035, 0.000493125000000004, 0.0004931389999999966, 0.0004931519999999967, 0.0004932080000000019, 0.0004931389999999966, 0.0004931529999999962, 0.0004931389999999966, 0.0004931389999999966, 0.0004931530000000031, 0.0004931110000000044, 0.0004931530000000031, 0.0004931390000000035, 0.0004931520000000036, 0.0004931389999999966, 0.0004931529999999962, 0.0004931389999999966, 0.0004931529999999962, 0.000493207999999995, 0.0004931949999999949, 0.0004931389999999966, 0.0004930699999999982, 0.000493125000000004]</msg>
<status status="PASS" starttime="20201030 11:51:01.898" endtime="20201030 11:51:01.900"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.893" endtime="20201030 11:51:01.900"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.527" endtime="20201030 11:51:01.901"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.505" endtime="20201030 11:51:01.901"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.549" endtime="20201030 11:51:01.901"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:50:39.285" endtime="20201030 11:51:01.902" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 11:50:19.623" endtime="20201030 11:51:01.910"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 11:51:01.980" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 11:51:01.989" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 11:51:03.147" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 11:51:01.979" endtime="20201030 11:51:03.148"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.150" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 11:51:03.149" endtime="20201030 11:51:03.151"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.978" endtime="20201030 11:51:03.151"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:03.153" endtime="20201030 11:51:03.370"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.152" endtime="20201030 11:51:03.371"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.383" endtime="20201030 11:51:03.402"></status>
</kw>
<msg timestamp="20201030 11:51:03.403" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:03.382" endtime="20201030 11:51:03.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.406" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:03.404" endtime="20201030 11:51:03.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.409" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:51:03.407" endtime="20201030 11:51:03.409"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:03.379" endtime="20201030 11:51:03.410"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:03.377" endtime="20201030 11:51:03.410"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.376" endtime="20201030 11:51:03.411"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:51:03.416" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:51:03.415" endtime="20201030 11:51:03.416"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.412" endtime="20201030 11:51:03.416"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.375" endtime="20201030 11:51:03.416"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.374" endtime="20201030 11:51:03.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.417" endtime="20201030 11:51:03.419"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.373" endtime="20201030 11:51:03.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.420" endtime="20201030 11:51:03.422"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.372" endtime="20201030 11:51:03.422"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.976" endtime="20201030 11:51:03.422"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:03.428" endtime="20201030 11:51:03.448"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.427" endtime="20201030 11:51:03.448"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.461" endtime="20201030 11:51:03.480"></status>
</kw>
<msg timestamp="20201030 11:51:03.480" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:03.460" endtime="20201030 11:51:03.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.483" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:03.481" endtime="20201030 11:51:03.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.486" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:51:03.484" endtime="20201030 11:51:03.486"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:03.457" endtime="20201030 11:51:03.487"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:03.455" endtime="20201030 11:51:03.487"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.454" endtime="20201030 11:51:03.488"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:51:03.491" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:51:03.491" endtime="20201030 11:51:03.492"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.489" endtime="20201030 11:51:03.492"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.453" endtime="20201030 11:51:03.492"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.452" endtime="20201030 11:51:03.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.493" endtime="20201030 11:51:03.495"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.451" endtime="20201030 11:51:03.495"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.449" endtime="20201030 11:51:03.496"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.425" endtime="20201030 11:51:03.496"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.507" endtime="20201030 11:51:03.521"></status>
</kw>
<msg timestamp="20201030 11:51:03.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:03.506" endtime="20201030 11:51:03.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:03.522" endtime="20201030 11:51:03.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.525" endtime="20201030 11:51:03.526"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.502" endtime="20201030 11:51:03.527"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.500" endtime="20201030 11:51:03.527"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.534" endtime="20201030 11:51:03.819"></status>
</kw>
<msg timestamp="20201030 11:51:03.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071047667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071050417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:03.532" endtime="20201030 11:51:03.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071047667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071050417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:03.824" endtime="20201030 11:51:03.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.832" endtime="20201030 11:51:03.834"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.530" endtime="20201030 11:51:03.835"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.528" endtime="20201030 11:51:03.835"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:03.839" level="INFO">${RESULT} = [{'diff': 2.750000000009689e-06}, {'diff': 1.832999999992757e-06}, {'diff': 2.4170000000045544e-06}, {'diff': 2.1669999999973655e-06}, {'diff': 2.4170000000045544e-06}, {'diff': 2.1669999999973655e-06...</msg>
<status status="PASS" starttime="20201030 11:51:03.836" endtime="20201030 11:51:03.839"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:03.843" level="INFO">${ACCURACY} = {'diff': [2.750000000009689e-06, 1.832999999992757e-06, 2.4170000000045544e-06, 2.1669999999973655e-06, 2.4170000000045544e-06, 2.1669999999973655e-06, 2.1949999999965053e-06, 1.6250000000050946e-06, ...</msg>
<status status="PASS" starttime="20201030 11:51:03.840" endtime="20201030 11:51:03.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.848" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201030 11:51:03.847" endtime="20201030 11:51:03.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.851" level="INFO">VALUE: [2.750000000009689e-06, 1.832999999992757e-06, 2.4170000000045544e-06, 2.1669999999973655e-06, 2.4170000000045544e-06, 2.1669999999973655e-06, 2.1949999999965053e-06, 1.6250000000050946e-06, 2.569000000007815e-06, 1.9439999999898427e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 2.583000000000446e-06, 2.1939999999970317e-06, 2.2220000000100493e-06, 2.1949999999965053e-06, 1.6109999999985858e-06, 2.569000000007815e-06, 2.1810000000038743e-06, 2.4170000000045544e-06, 2.1800000000044006e-06, 2.1809999999899965e-06, 2.1939999999970317e-06, 2.4170000000045544e-06, 1.6390000000116034e-06, 2.02800000000114e-06, 1.5699999999924108e-06, 2.583000000000446e-06, 1.6249999999912168e-06, 2.013999999994631e-06, 2.014000000008509e-06, 2.5689999999939372e-06, 1.8479999999987395e-06, 2.4169999999906766e-06, 1.6389999999977256e-06, 2.5689999999939372e-06, 1.846999999999266e-06, 2.4309999999971854e-06, 2.1809999999899965e-06, 1.6389999999977256e-06, 2.569000000007815e-06, 2.1949999999965053e-06, 2.179999999990523e-06, 2.4170000000045544e-06, 2.4029999999980456e-06, 2.4589999999963252e-06, 2.4170000000045544e-06, 2.165999999997892e-06, 2.1949999999965053e-06, 2.124999999991717e-06]</msg>
<status status="PASS" starttime="20201030 11:51:03.849" endtime="20201030 11:51:03.851"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.844" endtime="20201030 11:51:03.852"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:03.855" endtime="20201030 11:51:03.875"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.854" endtime="20201030 11:51:03.875"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.853" endtime="20201030 11:51:03.876"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.498" endtime="20201030 11:51:03.876"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.497" endtime="20201030 11:51:03.876"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.885" endtime="20201030 11:51:03.898"></status>
</kw>
<msg timestamp="20201030 11:51:03.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:03.883" endtime="20201030 11:51:03.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.901" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:03.900" endtime="20201030 11:51:03.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.902" endtime="20201030 11:51:03.904"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.881" endtime="20201030 11:51:03.904"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.878" endtime="20201030 11:51:03.905"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.912" endtime="20201030 11:51:04.202"></status>
</kw>
<msg timestamp="20201030 11:51:04.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021573028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021576528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:03.910" endtime="20201030 11:51:04.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021573028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021576528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:04.206" endtime="20201030 11:51:04.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.215" endtime="20201030 11:51:04.217"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.907" endtime="20201030 11:51:04.217"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.906" endtime="20201030 11:51:04.218"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:04.221" level="INFO">${RESULT} = [{'diff': 3.500000000000031e-06}, {'diff': 2.8750000000028753e-06}, {'diff': 2.6249999999991558e-06}, {'diff': 3.57000000000135e-06}, {'diff': 3.5690000000018762e-06}, {'diff': 3.417000000002085e-06},...</msg>
<status status="PASS" starttime="20201030 11:51:04.218" endtime="20201030 11:51:04.222"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:04.227" level="INFO">${ACCURACY} = {'diff': [3.500000000000031e-06, 2.8750000000028753e-06, 2.6249999999991558e-06, 3.57000000000135e-06, 3.5690000000018762e-06, 3.417000000002085e-06, 3.3479999999967702e-06, 3.5689999999984068e-06, 2....</msg>
<status status="PASS" starttime="20201030 11:51:04.222" endtime="20201030 11:51:04.227"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.231" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201030 11:51:04.230" endtime="20201030 11:51:04.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.234" level="INFO">VALUE: [3.500000000000031e-06, 2.8750000000028753e-06, 2.6249999999991558e-06, 3.57000000000135e-06, 3.5690000000018762e-06, 3.417000000002085e-06, 3.3479999999967702e-06, 3.5689999999984068e-06, 2.651999999998822e-06, 3.333000000001196e-06, 2.6529999999982956e-06, 2.651999999998822e-06, 3.3329999999977267e-06, 3.333000000001196e-06, 3.0840000000004197e-06, 3.097000000000516e-06, 3.069000000001376e-06, 3.347000000000766e-06, 3.3329999999977267e-06, 3.5139999999996008e-06, 3.55600000000178e-06, 3.097000000000516e-06, 3.319000000001626e-06, 2.708000000000571e-06, 3.319000000001626e-06, 3.151999999999322e-06, 2.639000000002195e-06, 3.1669999999983656e-06, 2.667000000001335e-06, 3.1119999999995596e-06, 3.3189999999981568e-06, 2.5839999999999197e-06, 3.333000000001196e-06, 3.333000000001196e-06, 3.347000000000766e-06, 2.6389999999987257e-06, 3.111000000000086e-06, 3.361000000000336e-06, 3.3480000000002397e-06, 3.333000000001196e-06, 3.097000000000516e-06, 2.6389999999987257e-06, 3.1529999999987957e-06, 3.3480000000002397e-06, 3.347000000000766e-06, 3.3340000000006698e-06, 3.347000000000766e-06, 2.6389999999987257e-06, 3.111000000000086e-06, 3.111000000000086e-06]</msg>
<status status="PASS" starttime="20201030 11:51:04.232" endtime="20201030 11:51:04.234"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.228" endtime="20201030 11:51:04.235"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:04.238" endtime="20201030 11:51:04.258"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.237" endtime="20201030 11:51:04.258"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.236" endtime="20201030 11:51:04.259"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.877" endtime="20201030 11:51:04.259"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.876" endtime="20201030 11:51:04.259"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.268" endtime="20201030 11:51:04.282"></status>
</kw>
<msg timestamp="20201030 11:51:04.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:04.266" endtime="20201030 11:51:04.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:04.283" endtime="20201030 11:51:04.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.286" endtime="20201030 11:51:04.287"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.264" endtime="20201030 11:51:04.288"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.261" endtime="20201030 11:51:04.289"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.295" endtime="20201030 11:51:04.582"></status>
</kw>
<msg timestamp="20201030 11:51:04.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021633792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021638208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:04.294" endtime="20201030 11:51:04.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021633792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021638208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:04.587" endtime="20201030 11:51:04.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.595" endtime="20201030 11:51:04.597"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.291" endtime="20201030 11:51:04.597"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.289" endtime="20201030 11:51:04.598"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:04.602" level="INFO">${RESULT} = [{'diff': 4.416000000000142e-06}, {'diff': 4.041999999999241e-06}, {'diff': 4.250000000000781e-06}, {'diff': 4.513999999997131e-06}, {'diff': 4.277999999999921e-06}, {'diff': 4.2359999999977416e-06}, ...</msg>
<status status="PASS" starttime="20201030 11:51:04.598" endtime="20201030 11:51:04.602"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:04.606" level="INFO">${ACCURACY} = {'diff': [4.416000000000142e-06, 4.041999999999241e-06, 4.250000000000781e-06, 4.513999999997131e-06, 4.277999999999921e-06, 4.2359999999977416e-06, 4.277999999999921e-06, 3.5689999999984068e-06, 4.02...</msg>
<status status="PASS" starttime="20201030 11:51:04.603" endtime="20201030 11:51:04.606"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.610" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201030 11:51:04.609" endtime="20201030 11:51:04.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.613" level="INFO">VALUE: [4.416000000000142e-06, 4.041999999999241e-06, 4.250000000000781e-06, 4.513999999997131e-06, 4.277999999999921e-06, 4.2359999999977416e-06, 4.277999999999921e-06, 3.5689999999984068e-06, 4.027999999999671e-06, 3.5829999999979767e-06, 3.5689999999984068e-06, 4.04200000000271e-06, 4.3199999999986305e-06, 4.250000000000781e-06, 3.8059999999985605e-06, 4.486000000001461e-06, 4.500000000001031e-06, 3.5699999999978804e-06, 4.264000000000351e-06, 4.471999999998422e-06, 4.264000000000351e-06, 4.500000000001031e-06, 4.264000000000351e-06, 3.57000000000135e-06, 4.2499999999973115e-06, 4.4999999999975615e-06, 3.5690000000018762e-06, 4.277999999999921e-06, 4.250000000000781e-06, 3.5690000000018762e-06, 4.263000000000877e-06, 4.054999999999337e-06, 4.04200000000271e-06, 4.277999999999921e-06, 4.250000000000781e-06, 4.027999999999671e-06, 4.487000000000935e-06, 4.264000000000351e-06, 4.082999999998477e-06, 3.8059999999985605e-06, 4.263000000000877e-06, 4.014000000000101e-06, 4.041999999999241e-06, 4.291999999999491e-06, 4.277999999999921e-06, 3.57000000000135e-06, 3.5689999999984068e-06, 4.277999999999921e-06, 4.027999999999671e-06, 4.500000000001031e-06]</msg>
<status status="PASS" starttime="20201030 11:51:04.611" endtime="20201030 11:51:04.613"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.607" endtime="20201030 11:51:04.614"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:04.617" endtime="20201030 11:51:04.637"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.616" endtime="20201030 11:51:04.637"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.615" endtime="20201030 11:51:04.638"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.260" endtime="20201030 11:51:04.638"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.259" endtime="20201030 11:51:04.638"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.648" endtime="20201030 11:51:04.662"></status>
</kw>
<msg timestamp="20201030 11:51:04.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:04.645" endtime="20201030 11:51:04.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:04.663" endtime="20201030 11:51:04.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.666" endtime="20201030 11:51:04.668"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.643" endtime="20201030 11:51:04.668"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.641" endtime="20201030 11:51:04.669"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.675" endtime="20201030 11:51:04.978"></status>
</kw>
<msg timestamp="20201030 11:51:04.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022472417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022478222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:04.674" endtime="20201030 11:51:04.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022472417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022478222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:04.982" endtime="20201030 11:51:04.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.991" endtime="20201030 11:51:04.992"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.671" endtime="20201030 11:51:04.993"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.669" endtime="20201030 11:51:04.993"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:04.997" level="INFO">${RESULT} = [{'diff': 5.804999999997618e-06}, {'diff': 5.194000000000032e-06}, {'diff': 5.195000000002975e-06}, {'diff': 4.486000000001461e-06}, {'diff': 5.431000000000186e-06}, {'diff': 4.693999999999532e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:51:04.994" endtime="20201030 11:51:04.997"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:05.002" level="INFO">${ACCURACY} = {'diff': [5.804999999997618e-06, 5.194000000000032e-06, 5.195000000002975e-06, 4.486000000001461e-06, 5.431000000000186e-06, 4.693999999999532e-06, 5.431000000000186e-06, 5.416999999997146e-06, 5.4169...</msg>
<status status="PASS" starttime="20201030 11:51:04.998" endtime="20201030 11:51:05.002"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.006" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201030 11:51:05.005" endtime="20201030 11:51:05.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.009" level="INFO">VALUE: [5.804999999997618e-06, 5.194000000000032e-06, 5.195000000002975e-06, 4.486000000001461e-06, 5.431000000000186e-06, 4.693999999999532e-06, 5.431000000000186e-06, 5.416999999997146e-06, 5.416999999997146e-06, 5.416000000001142e-06, 4.500000000001031e-06, 4.486000000001461e-06, 4.7499999999978115e-06, 4.972999999998395e-06, 5.415999999997673e-06, 5.167000000000366e-06, 4.4999999999975615e-06, 5.1949999999995056e-06, 5.416000000001142e-06, 4.513000000001127e-06, 5.1949999999995056e-06, 4.485999999997992e-06, 4.500000000001031e-06, 5.165999999997423e-06, 5.417000000000616e-06, 5.431000000000186e-06, 5.431000000000186e-06, 4.722000000002141e-06, 5.431000000000186e-06, 5.1949999999995056e-06, 5.429999999997243e-06, 5.430000000000712e-06, 5.431000000000186e-06, 5.194000000000032e-06, 5.110999999998617e-06, 4.707999999999102e-06, 5.472999999998895e-06, 5.167000000000366e-06, 5.444000000000282e-06, 5.430000000000712e-06, 5.401999999998103e-06, 5.431000000000186e-06, 4.972000000002391e-06, 5.444000000000282e-06, 4.500000000001031e-06, 5.180000000000462e-06, 5.403000000001046e-06, 5.207999999999602e-06, 4.486000000001461e-06, 4.736000000001711e-06]</msg>
<status status="PASS" starttime="20201030 11:51:05.007" endtime="20201030 11:51:05.010"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.002" endtime="20201030 11:51:05.010"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:05.014" endtime="20201030 11:51:05.033"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.012" endtime="20201030 11:51:05.034"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.011" endtime="20201030 11:51:05.034"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.639" endtime="20201030 11:51:05.035"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.639" endtime="20201030 11:51:05.035"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.044" endtime="20201030 11:51:05.058"></status>
</kw>
<msg timestamp="20201030 11:51:05.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:05.042" endtime="20201030 11:51:05.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:05.060" endtime="20201030 11:51:05.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.062" endtime="20201030 11:51:05.064"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.039" endtime="20201030 11:51:05.064"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.037" endtime="20201030 11:51:05.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.071" endtime="20201030 11:51:05.358"></status>
</kw>
<msg timestamp="20201030 11:51:05.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022052194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022059014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:05.070" endtime="20201030 11:51:05.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022052194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022059014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:05.362" endtime="20201030 11:51:05.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.371" endtime="20201030 11:51:05.372"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.067" endtime="20201030 11:51:05.373"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.065" endtime="20201030 11:51:05.373"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:05.377" level="INFO">${RESULT} = [{'diff': 6.819999999997661e-06}, {'diff': 5.8889999999985065e-06}, {'diff': 6.334000000000201e-06}, {'diff': 6.124999999999187e-06}, {'diff': 5.6529999999978264e-06}, {'diff': 5.6389999999982565e-06}...</msg>
<status status="PASS" starttime="20201030 11:51:05.374" endtime="20201030 11:51:05.377"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:05.382" level="INFO">${ACCURACY} = {'diff': [6.819999999997661e-06, 5.8889999999985065e-06, 6.334000000000201e-06, 6.124999999999187e-06, 5.6529999999978264e-06, 5.6389999999982565e-06, 5.653000000001296e-06, 6.110999999999617e-06, 5.6...</msg>
<status status="PASS" starttime="20201030 11:51:05.378" endtime="20201030 11:51:05.383"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.387" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201030 11:51:05.386" endtime="20201030 11:51:05.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.389" level="INFO">VALUE: [6.819999999997661e-06, 5.8889999999985065e-06, 6.334000000000201e-06, 6.124999999999187e-06, 5.6529999999978264e-06, 5.6389999999982565e-06, 5.653000000001296e-06, 6.110999999999617e-06, 5.667000000000866e-06, 6.139000000002226e-06, 5.653000000001296e-06, 6.124999999999187e-06, 6.291000000002017e-06, 6.110999999999617e-06, 6.319000000001157e-06, 6.584000000000451e-06, 6.36199999999934e-06, 5.667000000000866e-06, 6.110999999999617e-06, 6.6529999999988265e-06, 6.11199999999909e-06, 6.334000000000201e-06, 6.125000000002656e-06, 6.361000000003336e-06, 5.444000000000282e-06, 5.653000000001296e-06, 5.666999999997396e-06, 6.388999999999007e-06, 6.584000000000451e-06, 6.360999999999867e-06, 6.305000000001587e-06, 5.417000000000616e-06, 6.3329999999972575e-06, 5.415999999997673e-06, 6.124999999999187e-06, 5.653000000001296e-06, 6.110999999999617e-06, 6.624999999999687e-06, 6.110999999999617e-06, 6.346999999996827e-06, 6.333000000000727e-06, 6.346999999996827e-06, 6.347000000000297e-06, 5.6529999999978264e-06, 5.431000000000186e-06, 6.512999999999658e-06, 6.584000000000451e-06, 6.124999999999187e-06, 6.2079999999971325e-06, 6.347000000000297e-06]</msg>
<status status="PASS" starttime="20201030 11:51:05.388" endtime="20201030 11:51:05.390"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.383" endtime="20201030 11:51:05.390"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:05.394" endtime="20201030 11:51:05.413"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.392" endtime="20201030 11:51:05.414"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.391" endtime="20201030 11:51:05.414"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.036" endtime="20201030 11:51:05.415"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.035" endtime="20201030 11:51:05.415"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.432" endtime="20201030 11:51:05.447"></status>
</kw>
<msg timestamp="20201030 11:51:05.448" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:05.431" endtime="20201030 11:51:05.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.450" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:05.449" endtime="20201030 11:51:05.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.451" endtime="20201030 11:51:05.453"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.428" endtime="20201030 11:51:05.453"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.426" endtime="20201030 11:51:05.454"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.460" endtime="20201030 11:51:05.742"></status>
</kw>
<msg timestamp="20201030 11:51:05.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030941597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030948569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:05.459" endtime="20201030 11:51:05.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030941597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030948569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:05.747" endtime="20201030 11:51:05.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.755" endtime="20201030 11:51:05.757"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.456" endtime="20201030 11:51:05.757"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.454" endtime="20201030 11:51:05.758"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:05.762" level="INFO">${RESULT} = [{'diff': 6.9719999999974525e-06}, {'diff': 7.0419999999987715e-06}, {'diff': 7.2230000000006456e-06}, {'diff': 7.2919999999990215e-06}, {'diff': 7.2779999999994516e-06}, {'diff': 7.2779999999994516e-...</msg>
<status status="PASS" starttime="20201030 11:51:05.758" endtime="20201030 11:51:05.762"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:05.766" level="INFO">${ACCURACY} = {'diff': [6.9719999999974525e-06, 7.0419999999987715e-06, 7.2230000000006456e-06, 7.2919999999990215e-06, 7.2779999999994516e-06, 7.2779999999994516e-06, 7.194000000002032e-06, 7.278000000002921e-06, ...</msg>
<status status="PASS" starttime="20201030 11:51:05.763" endtime="20201030 11:51:05.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.770" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201030 11:51:05.769" endtime="20201030 11:51:05.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.773" level="INFO">VALUE: [6.9719999999974525e-06, 7.0419999999987715e-06, 7.2230000000006456e-06, 7.2919999999990215e-06, 7.2779999999994516e-06, 7.2779999999994516e-06, 7.194000000002032e-06, 7.278000000002921e-06, 6.584000000000451e-06, 6.5829999999975075e-06, 6.597000000000547e-06, 7.513000000000658e-06, 7.263999999999882e-06, 7.2779999999994516e-06, 6.583000000000977e-06, 7.514000000000132e-06, 6.570000000000881e-06, 6.513999999999132e-06, 7.2779999999994516e-06, 6.569000000001407e-06, 7.0419999999987715e-06, 7.485999999997522e-06, 7.055999999998341e-06, 7.292000000002491e-06, 7.500000000000562e-06, 6.597000000000547e-06, 6.570000000000881e-06, 7.263000000000408e-06, 7.263999999999882e-06, 6.556000000001311e-06, 7.276999999999978e-06, 7.457999999998383e-06, 7.527999999999702e-06, 7.472000000001422e-06, 7.040999999999298e-06, 7.527999999999702e-06, 7.0419999999987715e-06, 7.263999999999882e-06, 7.2780000000063905e-06, 7.263999999999882e-06, 7.319999999998161e-06, 7.263000000000408e-06, 7.514000000000132e-06, 7.2779999999994516e-06, 6.889000000002976e-06, 7.263999999999882e-06, 6.5969999999970774e-06, 7.250000000000312e-06, 7.332999999998258e-06, 7.458000000001852e-06]</msg>
<status status="PASS" starttime="20201030 11:51:05.771" endtime="20201030 11:51:05.773"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.767" endtime="20201030 11:51:05.774"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:05.777" endtime="20201030 11:51:05.797"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.776" endtime="20201030 11:51:05.798"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.775" endtime="20201030 11:51:05.798"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.416" endtime="20201030 11:51:05.798"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.415" endtime="20201030 11:51:05.798"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.807" endtime="20201030 11:51:05.822"></status>
</kw>
<msg timestamp="20201030 11:51:05.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:05.806" endtime="20201030 11:51:05.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.825" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:05.824" endtime="20201030 11:51:05.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.827" endtime="20201030 11:51:05.828"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.803" endtime="20201030 11:51:05.829"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.801" endtime="20201030 11:51:05.829"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.836" endtime="20201030 11:51:06.118"></status>
</kw>
<msg timestamp="20201030 11:51:06.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022651236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022659306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:05.834" endtime="20201030 11:51:06.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:06.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022651236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022659306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:06.123" endtime="20201030 11:51:06.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:06.131" endtime="20201030 11:51:06.133"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.831" endtime="20201030 11:51:06.133"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.830" endtime="20201030 11:51:06.134"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:06.138" level="INFO">${RESULT} = [{'diff': 8.069999999998911e-06}, {'diff': 8.138999999997287e-06}, {'diff': 8.444999999999286e-06}, {'diff': 7.722000000001672e-06}, {'diff': 8.249999999997842e-06}, {'diff': 8.195000000002506e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:51:06.135" endtime="20201030 11:51:06.138"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:06.142" level="INFO">${ACCURACY} = {'diff': [8.069999999998911e-06, 8.138999999997287e-06, 8.444999999999286e-06, 7.722000000001672e-06, 8.249999999997842e-06, 8.195000000002506e-06, 8.430999999999716e-06, 8.222000000002172e-06, 8.1949...</msg>
<status status="PASS" starttime="20201030 11:51:06.139" endtime="20201030 11:51:06.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:06.147" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201030 11:51:06.146" endtime="20201030 11:51:06.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:06.149" level="INFO">VALUE: [8.069999999998911e-06, 8.138999999997287e-06, 8.444999999999286e-06, 7.722000000001672e-06, 8.249999999997842e-06, 8.195000000002506e-06, 8.430999999999716e-06, 8.222000000002172e-06, 8.194999999999036e-06, 8.430000000000243e-06, 7.513999999996662e-06, 8.430000000000243e-06, 8.221999999998703e-06, 8.430000000000243e-06, 8.207999999999133e-06, 7.750000000000812e-06, 8.430999999999716e-06, 8.180999999999466e-06, 8.430999999999716e-06, 7.749999999997342e-06, 8.194999999999036e-06, 8.222999999998176e-06, 7.750000000000812e-06, 7.4870000000004655e-06, 8.430000000000243e-06, 8.180999999999466e-06, 8.166999999999897e-06, 8.264000000000882e-06, 8.430999999999716e-06, 8.209000000002076e-06, 8.430000000000243e-06, 8.430999999999716e-06, 7.527000000000228e-06, 8.443999999999813e-06, 7.5419999999992715e-06, 7.736000000001242e-06, 8.223000000001646e-06, 8.179999999999993e-06, 8.430000000000243e-06, 8.430000000000243e-06, 8.430999999999716e-06, 8.208000000002602e-06, 7.944999999998786e-06, 7.736000000001242e-06, 8.264000000000882e-06, 8.209000000002076e-06, 7.514000000000132e-06, 7.737000000000716e-06, 7.527999999999702e-06, 8.417000000000147e-06]</msg>
<status status="PASS" starttime="20201030 11:51:06.148" endtime="20201030 11:51:06.151"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.143" endtime="20201030 11:51:06.151"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:06.155" endtime="20201030 11:51:06.174"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.153" endtime="20201030 11:51:06.175"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.152" endtime="20201030 11:51:06.175"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.799" endtime="20201030 11:51:06.176"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.799" endtime="20201030 11:51:06.176"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:06.184" endtime="20201030 11:51:06.199"></status>
</kw>
<msg timestamp="20201030 11:51:06.200" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:06.183" endtime="20201030 11:51:06.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:06.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:06.201" endtime="20201030 11:51:06.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:06.203" endtime="20201030 11:51:06.205"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.180" endtime="20201030 11:51:06.205"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.178" endtime="20201030 11:51:06.206"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:06.212" endtime="20201030 11:51:06.495"></status>
</kw>
<msg timestamp="20201030 11:51:06.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021789042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021798806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:06.211" endtime="20201030 11:51:06.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:06.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021789042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021798806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:06.499" endtime="20201030 11:51:06.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:06.507" endtime="20201030 11:51:06.509"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.208" endtime="20201030 11:51:06.510"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.207" endtime="20201030 11:51:06.510"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:06.514" level="INFO">${RESULT} = [{'diff': 9.763999999998912e-06}, {'diff': 8.888000000002033e-06}, {'diff': 8.707999999999633e-06}, {'diff': 9.124999999998717e-06}, {'diff': 8.666999999996927e-06}, {'diff': 8.653000000000827e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:51:06.511" endtime="20201030 11:51:06.514"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:06.519" level="INFO">${ACCURACY} = {'diff': [9.763999999998912e-06, 8.888000000002033e-06, 8.707999999999633e-06, 9.124999999998717e-06, 8.666999999996927e-06, 8.653000000000827e-06, 9.138000000002283e-06, 9.208000000000133e-06, 9.1110...</msg>
<status status="PASS" starttime="20201030 11:51:06.515" endtime="20201030 11:51:06.519"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:06.523" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201030 11:51:06.522" endtime="20201030 11:51:06.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:06.526" level="INFO">VALUE: [9.763999999998912e-06, 8.888000000002033e-06, 8.707999999999633e-06, 9.124999999998717e-06, 8.666999999996927e-06, 8.653000000000827e-06, 9.138000000002283e-06, 9.208000000000133e-06, 9.111000000002617e-06, 8.916000000001173e-06, 8.667000000000397e-06, 9.360999999999398e-06, 9.333000000000258e-06, 8.680000000000493e-06, 8.611000000002117e-06, 9.361000000002867e-06, 9.125000000002187e-06, 9.110999999999148e-06, 8.666000000000923e-06, 9.346999999999828e-06, 8.666000000000923e-06, 9.069000000000438e-06, 8.666000000000923e-06, 9.124999999998717e-06, 9.583999999999981e-06, 9.319000000000688e-06, 9.583999999999981e-06, 8.430999999999716e-06, 9.360999999999398e-06, 9.389000000002007e-06, 8.639000000001257e-06, 9.124999999998717e-06, 8.430999999999716e-06, 8.653000000000827e-06, 8.666000000000923e-06, 8.430999999999716e-06, 8.667000000000397e-06, 9.401999999998634e-06, 9.597999999999551e-06, 9.583000000000508e-06, 9.360999999999398e-06, 8.445000000002756e-06, 9.305000000001118e-06, 9.346999999999828e-06, 8.667000000000397e-06, 9.388999999998537e-06, 9.374999999998967e-06, 9.360999999999398e-06, 8.639000000001257e-06, 9.124999999998717e-06]</msg>
<status status="PASS" starttime="20201030 11:51:06.525" endtime="20201030 11:51:06.527"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.520" endtime="20201030 11:51:06.527"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:06.531" endtime="20201030 11:51:06.551"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.530" endtime="20201030 11:51:06.551"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.528" endtime="20201030 11:51:06.551"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.177" endtime="20201030 11:51:06.552"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.176" endtime="20201030 11:51:06.552"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:06.561" endtime="20201030 11:51:06.575"></status>
</kw>
<msg timestamp="20201030 11:51:06.575" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:06.559" endtime="20201030 11:51:06.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:06.578" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:06.576" endtime="20201030 11:51:06.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:06.579" endtime="20201030 11:51:06.580"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.556" endtime="20201030 11:51:06.581"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.554" endtime="20201030 11:51:06.581"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:06.588" endtime="20201030 11:51:06.873"></status>
</kw>
<msg timestamp="20201030 11:51:06.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0217525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021762764, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:51:06.586" endtime="20201030 11:51:06.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:06.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0217525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021762764, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:51:06.877" endtime="20201030 11:51:06.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:06.886" endtime="20201030 11:51:06.887"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.584" endtime="20201030 11:51:06.888"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.582" endtime="20201030 11:51:06.888"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:06.892" level="INFO">${RESULT} = [{'diff': 1.0263999999999412e-05}, {'diff': 1.0026999999999259e-05}, {'diff': 1.0527999999999232e-05}, {'diff': 1.0527999999999232e-05}, {'diff': 1.0347000000000828e-05}, {'diff': 9.820000000000662e-0...</msg>
<status status="PASS" starttime="20201030 11:51:06.889" endtime="20201030 11:51:06.893"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:06.897" level="INFO">${ACCURACY} = {'diff': [1.0263999999999412e-05, 1.0026999999999259e-05, 1.0527999999999232e-05, 1.0527999999999232e-05, 1.0347000000000828e-05, 9.820000000000662e-06, 1.0041999999998302e-05, 9.597000000000078e-06, ...</msg>
<status status="PASS" starttime="20201030 11:51:06.893" endtime="20201030 11:51:06.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:06.901" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201030 11:51:06.900" endtime="20201030 11:51:06.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:06.904" level="INFO">VALUE: [1.0263999999999412e-05, 1.0026999999999259e-05, 1.0527999999999232e-05, 1.0527999999999232e-05, 1.0347000000000828e-05, 9.820000000000662e-06, 1.0041999999998302e-05, 9.597000000000078e-06, 1.0277999999998982e-05, 1.0292000000002022e-05, 1.0513999999999663e-05, 1.0263999999999412e-05, 9.583000000000508e-06, 1.0472000000000953e-05, 1.0263999999999412e-05, 1.0292000000002022e-05, 1.0068999999997968e-05, 9.569000000000938e-06, 1.0291999999998552e-05, 1.0513999999999663e-05, 1.0040999999998829e-05, 9.597000000000078e-06, 1.0555999999998372e-05, 1.0306000000001592e-05, 1.0542000000002272e-05, 1.0500000000000093e-05, 1.0513999999999663e-05, 1.0292000000002022e-05, 1.0291999999998552e-05, 9.583999999999981e-06, 9.583999999999981e-06, 1.0054999999998399e-05, 9.597999999999551e-06, 9.570000000000412e-06, 9.597000000000078e-06, 9.597999999999551e-06, 1.0277999999998982e-05, 1.0291000000002548e-05, 9.570000000000412e-06, 9.583999999999981e-06, 1.0277999999998982e-05, 1.0319999999997692e-05, 1.0027999999998732e-05, 1.0277999999998982e-05, 1.0305999999998122e-05, 9.583999999999981e-06, 9.818999999997718e-06, 1.0526999999999759e-05, 1.0290999999999079e-05, 1.0056000000001342e-05]</msg>
<status status="PASS" starttime="20201030 11:51:06.902" endtime="20201030 11:51:06.904"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.897" endtime="20201030 11:51:06.905"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:06.909" endtime="20201030 11:51:06.928"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.907" endtime="20201030 11:51:06.928"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.906" endtime="20201030 11:51:06.929"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.553" endtime="20201030 11:51:06.929"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.552" endtime="20201030 11:51:06.929"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:06.938" endtime="20201030 11:51:06.956"></status>
</kw>
<msg timestamp="20201030 11:51:06.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:06.937" endtime="20201030 11:51:06.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:06.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:06.958" endtime="20201030 11:51:06.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:06.960" endtime="20201030 11:51:06.962"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.934" endtime="20201030 11:51:06.962"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.932" endtime="20201030 11:51:06.963"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:06.969" endtime="20201030 11:51:07.255"></status>
</kw>
<msg timestamp="20201030 11:51:07.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025120653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025132431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:06.968" endtime="20201030 11:51:07.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025120653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025132431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:07.259" endtime="20201030 11:51:07.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.267" endtime="20201030 11:51:07.269"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.965" endtime="20201030 11:51:07.270"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.963" endtime="20201030 11:51:07.270"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:07.274" level="INFO">${RESULT} = [{'diff': 1.1778000000000483e-05}, {'diff': 1.1207999999998663e-05}, {'diff': 1.1388999999997068e-05}, {'diff': 1.0985999999997553e-05}, {'diff': 1.1223000000001176e-05}, {'diff': 1.1403000000000107e-...</msg>
<status status="PASS" starttime="20201030 11:51:07.271" endtime="20201030 11:51:07.274"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:07.278" level="INFO">${ACCURACY} = {'diff': [1.1778000000000483e-05, 1.1207999999998663e-05, 1.1388999999997068e-05, 1.0985999999997553e-05, 1.1223000000001176e-05, 1.1403000000000107e-05, 1.0513999999999663e-05, 1.0500000000000093e-05...</msg>
<status status="PASS" starttime="20201030 11:51:07.275" endtime="20201030 11:51:07.278"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.283" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201030 11:51:07.282" endtime="20201030 11:51:07.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.285" level="INFO">VALUE: [1.1778000000000483e-05, 1.1207999999998663e-05, 1.1388999999997068e-05, 1.0985999999997553e-05, 1.1223000000001176e-05, 1.1403000000000107e-05, 1.0513999999999663e-05, 1.0500000000000093e-05, 1.1207999999998663e-05, 1.1222000000001703e-05, 1.1444000000002813e-05, 1.0472000000000953e-05, 1.1528000000000233e-05, 1.1430999999999247e-05, 1.1208999999998137e-05, 1.1444999999998817e-05, 1.1179999999999524e-05, 1.0458999999997387e-05, 1.0958000000001883e-05, 1.1443999999999344e-05, 1.0736000000000773e-05, 1.1389000000000538e-05, 1.1221999999998233e-05, 1.1207999999998663e-05, 1.1139000000000288e-05, 1.1195000000002037e-05, 1.0959000000001357e-05, 1.1208000000002133e-05, 1.1207999999998663e-05, 1.1194000000002563e-05, 1.0986000000001023e-05, 1.1430999999999247e-05, 1.1445000000002287e-05, 1.0750000000000343e-05, 1.1416999999999677e-05, 1.1443999999999344e-05, 1.1014000000000163e-05, 1.0750000000000343e-05, 1.1207999999998663e-05, 1.1443999999999344e-05, 1.1209000000001607e-05, 1.0805999999998622e-05, 1.1207999999998663e-05, 1.1209000000001607e-05, 1.1429999999999774e-05, 1.1445000000002287e-05, 1.1207999999998663e-05, 1.1195000000002037e-05, 1.1222000000001703e-05, 1.1458000000002383e-05]</msg>
<status status="PASS" starttime="20201030 11:51:07.284" endtime="20201030 11:51:07.287"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.279" endtime="20201030 11:51:07.287"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:07.291" endtime="20201030 11:51:07.310"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.290" endtime="20201030 11:51:07.311"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.288" endtime="20201030 11:51:07.311"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.930" endtime="20201030 11:51:07.312"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.930" endtime="20201030 11:51:07.312"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.321" endtime="20201030 11:51:07.335"></status>
</kw>
<msg timestamp="20201030 11:51:07.335" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:07.319" endtime="20201030 11:51:07.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.338" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:07.336" endtime="20201030 11:51:07.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.339" endtime="20201030 11:51:07.341"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.317" endtime="20201030 11:51:07.341"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.314" endtime="20201030 11:51:07.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.348" endtime="20201030 11:51:07.633"></status>
</kw>
<msg timestamp="20201030 11:51:07.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021863694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021876222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:07.347" endtime="20201030 11:51:07.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021863694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021876222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:07.638" endtime="20201030 11:51:07.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.646" endtime="20201030 11:51:07.648"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.344" endtime="20201030 11:51:07.648"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.342" endtime="20201030 11:51:07.649"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:07.653" level="INFO">${RESULT} = [{'diff': 1.2528000000001233e-05}, {'diff': 1.2139000000001288e-05}, {'diff': 1.2374999999998498e-05}, {'diff': 1.1666999999999927e-05}, {'diff': 1.2598000000002552e-05}, {'diff': 1.2125000000001718e-...</msg>
<status status="PASS" starttime="20201030 11:51:07.650" endtime="20201030 11:51:07.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:07.658" level="INFO">${ACCURACY} = {'diff': [1.2528000000001233e-05, 1.2139000000001288e-05, 1.2374999999998498e-05, 1.1666999999999927e-05, 1.2598000000002552e-05, 1.2125000000001718e-05, 1.2082999999999539e-05, 1.2374999999998498e-05...</msg>
<status status="PASS" starttime="20201030 11:51:07.654" endtime="20201030 11:51:07.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.662" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201030 11:51:07.661" endtime="20201030 11:51:07.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.665" level="INFO">VALUE: [1.2528000000001233e-05, 1.2139000000001288e-05, 1.2374999999998498e-05, 1.1666999999999927e-05, 1.2598000000002552e-05, 1.2125000000001718e-05, 1.2082999999999539e-05, 1.2374999999998498e-05, 1.2180999999999997e-05, 1.2138999999997818e-05, 1.2139000000001288e-05, 1.2346999999999358e-05, 1.2374999999998498e-05, 1.2333000000003258e-05, 1.2139000000001288e-05, 1.2360999999998928e-05, 1.1680999999999497e-05, 1.2362000000001871e-05, 1.1443999999999344e-05, 1.1680000000000024e-05, 1.2153000000000858e-05, 1.1666999999999927e-05, 1.2125000000001718e-05, 1.1666999999999927e-05, 1.2138999999997818e-05, 1.1680999999999497e-05, 1.2180000000000524e-05, 1.2360999999998928e-05, 1.1693999999999594e-05, 1.1652000000000884e-05, 1.2124999999998248e-05, 1.2319000000000219e-05, 1.2139000000001288e-05, 1.2375000000001968e-05, 1.2374999999998498e-05, 1.1666000000000454e-05, 1.2625000000002218e-05, 1.2374999999998498e-05, 1.2681000000000497e-05, 1.2374999999998498e-05, 1.2139000000001288e-05, 1.2361000000002398e-05, 1.1666999999999927e-05, 1.1680000000000024e-05, 1.2139000000001288e-05, 1.2374999999998498e-05, 1.2361000000002398e-05, 1.2388999999998068e-05, 1.2374999999998498e-05, 1.1430999999999247e-05]</msg>
<status status="PASS" starttime="20201030 11:51:07.663" endtime="20201030 11:51:07.666"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.659" endtime="20201030 11:51:07.666"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:07.670" endtime="20201030 11:51:07.689"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.668" endtime="20201030 11:51:07.690"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.667" endtime="20201030 11:51:07.690"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.313" endtime="20201030 11:51:07.690"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.312" endtime="20201030 11:51:07.691"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.699" endtime="20201030 11:51:07.714"></status>
</kw>
<msg timestamp="20201030 11:51:07.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:07.698" endtime="20201030 11:51:07.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.717" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:07.715" endtime="20201030 11:51:07.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.718" endtime="20201030 11:51:07.719"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.695" endtime="20201030 11:51:07.720"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.693" endtime="20201030 11:51:07.720"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.727" endtime="20201030 11:51:08.013"></status>
</kw>
<msg timestamp="20201030 11:51:08.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021759542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021773486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:07.725" endtime="20201030 11:51:08.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021759542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021773486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:08.017" endtime="20201030 11:51:08.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.025" endtime="20201030 11:51:08.027"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.723" endtime="20201030 11:51:08.028"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.721" endtime="20201030 11:51:08.028"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:08.032" level="INFO">${RESULT} = [{'diff': 1.3944000000001844e-05}, {'diff': 1.2833000000000289e-05}, {'diff': 1.2610999999999178e-05}, {'diff': 1.3292000000001553e-05}, {'diff': 1.3292000000001553e-05}, {'diff': 1.3084000000000012e-...</msg>
<status status="PASS" starttime="20201030 11:51:08.029" endtime="20201030 11:51:08.032"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:08.036" level="INFO">${ACCURACY} = {'diff': [1.3944000000001844e-05, 1.2833000000000289e-05, 1.2610999999999178e-05, 1.3292000000001553e-05, 1.3292000000001553e-05, 1.3084000000000012e-05, 1.3319000000001219e-05, 1.3041999999997833e-05...</msg>
<status status="PASS" starttime="20201030 11:51:08.033" endtime="20201030 11:51:08.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.041" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201030 11:51:08.040" endtime="20201030 11:51:08.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.043" level="INFO">VALUE: [1.3944000000001844e-05, 1.2833000000000289e-05, 1.2610999999999178e-05, 1.3292000000001553e-05, 1.3292000000001553e-05, 1.3084000000000012e-05, 1.3319000000001219e-05, 1.3041999999997833e-05, 1.329099999999861e-05, 1.3291999999998083e-05, 1.3292000000001553e-05, 1.3070000000000442e-05, 1.3527000000002759e-05, 1.3278000000001983e-05, 1.3235999999999803e-05, 1.2819000000000719e-05, 1.2612000000002122e-05, 1.2624999999998748e-05, 1.3305999999997653e-05, 1.329099999999861e-05, 1.3541999999998333e-05, 1.3305999999997653e-05, 1.3292000000001553e-05, 1.2596999999999609e-05, 1.3347000000000359e-05, 1.3056000000000872e-05, 1.2596999999999609e-05, 1.327699999999904e-05, 1.3084000000000012e-05, 1.2819000000000719e-05, 1.3070000000000442e-05, 1.3069000000000969e-05, 1.3277999999998513e-05, 1.3291999999998083e-05, 1.3084000000000012e-05, 1.2610999999999178e-05, 1.3277999999998513e-05, 1.3527999999998763e-05, 1.3070000000000442e-05, 1.3305999999997653e-05, 1.2625000000002218e-05, 1.329099999999861e-05, 1.3014000000002163e-05, 1.3305000000001649e-05, 1.3320000000000692e-05, 1.2596999999999609e-05, 1.327699999999904e-05, 1.3347999999999832e-05, 1.3055000000001399e-05, 1.2583000000000039e-05]</msg>
<status status="PASS" starttime="20201030 11:51:08.042" endtime="20201030 11:51:08.044"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.037" endtime="20201030 11:51:08.045"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:08.048" endtime="20201030 11:51:08.068"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.047" endtime="20201030 11:51:08.068"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.046" endtime="20201030 11:51:08.069"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.692" endtime="20201030 11:51:08.069"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.691" endtime="20201030 11:51:08.069"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.078" endtime="20201030 11:51:08.093"></status>
</kw>
<msg timestamp="20201030 11:51:08.093" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:08.076" endtime="20201030 11:51:08.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.096" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:08.095" endtime="20201030 11:51:08.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.097" endtime="20201030 11:51:08.099"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.074" endtime="20201030 11:51:08.099"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.071" endtime="20201030 11:51:08.100"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.106" endtime="20201030 11:51:08.391"></status>
</kw>
<msg timestamp="20201030 11:51:08.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022523958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022538806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:08.105" endtime="20201030 11:51:08.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022523958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022538806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:08.395" endtime="20201030 11:51:08.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.404" endtime="20201030 11:51:08.405"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.102" endtime="20201030 11:51:08.406"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.100" endtime="20201030 11:51:08.406"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:08.410" level="INFO">${RESULT} = [{'diff': 1.4848000000001332e-05}, {'diff': 1.4249999999996904e-05}, {'diff': 1.4415999999999735e-05}, {'diff': 1.4514000000000193e-05}, {'diff': 1.3987000000000027e-05}, {'diff': 1.3763999999999443e-...</msg>
<status status="PASS" starttime="20201030 11:51:08.407" endtime="20201030 11:51:08.411"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:08.415" level="INFO">${ACCURACY} = {'diff': [1.4848000000001332e-05, 1.4249999999996904e-05, 1.4415999999999735e-05, 1.4514000000000193e-05, 1.3987000000000027e-05, 1.3763999999999443e-05, 1.4457999999998444e-05, 1.4443999999998874e-05...</msg>
<status status="PASS" starttime="20201030 11:51:08.411" endtime="20201030 11:51:08.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.419" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201030 11:51:08.418" endtime="20201030 11:51:08.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.422" level="INFO">VALUE: [1.4848000000001332e-05, 1.4249999999996904e-05, 1.4415999999999735e-05, 1.4514000000000193e-05, 1.3987000000000027e-05, 1.3763999999999443e-05, 1.4457999999998444e-05, 1.4443999999998874e-05, 1.4223000000000707e-05, 1.3805999999998153e-05, 1.4207999999998194e-05, 1.352699999999929e-05, 1.3528000000002233e-05, 1.354099999999886e-05, 1.3527999999998763e-05, 1.4375000000000498e-05, 1.4193999999998624e-05, 1.4223000000000707e-05, 1.3527000000002759e-05, 1.3513999999999193e-05, 1.4443999999998874e-05, 1.4415999999999735e-05, 1.4222000000001234e-05, 1.355499999999843e-05, 1.3749999999999873e-05, 1.4221999999997764e-05, 1.351299999999972e-05, 1.4223000000000707e-05, 1.380499999999868e-05, 1.4458000000001914e-05, 1.4195000000001567e-05, 1.3513999999999193e-05, 1.3763999999999443e-05, 1.4458000000001914e-05, 1.3556000000001373e-05, 1.4457999999998444e-05, 1.3499999999999623e-05, 1.4429999999999304e-05, 1.4179999999999054e-05, 1.4222999999997238e-05, 1.352699999999929e-05, 1.4208000000001664e-05, 1.4207999999998194e-05, 1.4235999999997334e-05, 1.4444000000002344e-05, 1.4402999999999638e-05, 1.3527999999998763e-05, 1.4209000000001137e-05, 1.3527999999998763e-05, 1.3514000000002663e-05]</msg>
<status status="PASS" starttime="20201030 11:51:08.420" endtime="20201030 11:51:08.423"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.415" endtime="20201030 11:51:08.424"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:08.427" endtime="20201030 11:51:08.447"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.426" endtime="20201030 11:51:08.447"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.425" endtime="20201030 11:51:08.448"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.070" endtime="20201030 11:51:08.448"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.069" endtime="20201030 11:51:08.448"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.457" endtime="20201030 11:51:08.472"></status>
</kw>
<msg timestamp="20201030 11:51:08.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:08.455" endtime="20201030 11:51:08.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.475" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:08.473" endtime="20201030 11:51:08.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.476" endtime="20201030 11:51:08.477"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.453" endtime="20201030 11:51:08.478"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.451" endtime="20201030 11:51:08.478"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.485" endtime="20201030 11:51:08.770"></status>
</kw>
<msg timestamp="20201030 11:51:08.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021832778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021848333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:08.483" endtime="20201030 11:51:08.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021832778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021848333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:08.774" endtime="20201030 11:51:08.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.783" endtime="20201030 11:51:08.784"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.481" endtime="20201030 11:51:08.785"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.479" endtime="20201030 11:51:08.785"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:08.789" level="INFO">${RESULT} = [{'diff': 1.555500000000043e-05}, {'diff': 1.4916999999999708e-05}, {'diff': 1.4666999999999458e-05}, {'diff': 1.540300000000064e-05}, {'diff': 1.4625000000000749e-05}, {'diff': 1.5153000000000388e-05...</msg>
<status status="PASS" starttime="20201030 11:51:08.786" endtime="20201030 11:51:08.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:08.795" level="INFO">${ACCURACY} = {'diff': [1.555500000000043e-05, 1.4916999999999708e-05, 1.4666999999999458e-05, 1.540300000000064e-05, 1.4625000000000749e-05, 1.5153000000000388e-05, 1.4679999999999555e-05, 1.5139000000000818e-05, ...</msg>
<status status="PASS" starttime="20201030 11:51:08.790" endtime="20201030 11:51:08.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.799" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201030 11:51:08.798" endtime="20201030 11:51:08.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.802" level="INFO">VALUE: [1.555500000000043e-05, 1.4916999999999708e-05, 1.4666999999999458e-05, 1.540300000000064e-05, 1.4625000000000749e-05, 1.5153000000000388e-05, 1.4679999999999555e-05, 1.5139000000000818e-05, 1.4708000000002164e-05, 1.4652000000000415e-05, 1.53750000000015e-05, 1.538900000000107e-05, 1.538900000000107e-05, 1.5153000000000388e-05, 1.53750000000015e-05, 1.537499999999803e-05, 1.538900000000107e-05, 1.4693999999999124e-05, 1.5361999999997933e-05, 1.5137999999997875e-05, 1.4665999999999985e-05, 1.537499999999803e-05, 1.5125000000001249e-05, 1.536099999999846e-05, 1.53750000000015e-05, 1.5139000000000818e-05, 1.4665999999999985e-05, 1.4679999999999555e-05, 1.537499999999803e-05, 1.53889999999976e-05, 1.4665999999999985e-05, 1.4666999999999458e-05, 1.53750000000015e-05, 1.5125000000001249e-05, 1.4680999999999028e-05, 1.5139000000000818e-05, 1.561099999999871e-05, 1.5153000000000388e-05, 1.4944999999998848e-05, 1.4694000000002594e-05, 1.538900000000107e-05, 1.4901999999997195e-05, 1.562499999999828e-05, 1.5125000000001249e-05, 1.53750000000015e-05, 1.536099999999846e-05, 1.5388000000001595e-05, 1.5125000000001249e-05, 1.5111000000001679e-05, 1.537499999999803e-05]</msg>
<status status="PASS" starttime="20201030 11:51:08.800" endtime="20201030 11:51:08.802"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.795" endtime="20201030 11:51:08.803"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:08.807" endtime="20201030 11:51:08.826"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.805" endtime="20201030 11:51:08.827"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.804" endtime="20201030 11:51:08.827"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.449" endtime="20201030 11:51:08.827"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.448" endtime="20201030 11:51:08.827"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.836" endtime="20201030 11:51:08.850"></status>
</kw>
<msg timestamp="20201030 11:51:08.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:08.834" endtime="20201030 11:51:08.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:08.852" endtime="20201030 11:51:08.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.854" endtime="20201030 11:51:08.856"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.832" endtime="20201030 11:51:08.856"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.830" endtime="20201030 11:51:08.857"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.863" endtime="20201030 11:51:09.149"></status>
</kw>
<msg timestamp="20201030 11:51:09.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0217125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021728736, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:51:08.861" endtime="20201030 11:51:09.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0217125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021728736, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:51:09.154" endtime="20201030 11:51:09.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.162" endtime="20201030 11:51:09.164"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.859" endtime="20201030 11:51:09.164"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.857" endtime="20201030 11:51:09.165"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:09.169" level="INFO">${RESULT} = [{'diff': 1.6235999999999334e-05}, {'diff': 1.60690000000005e-05}, {'diff': 1.562500000000175e-05}, {'diff': 1.60690000000005e-05}, {'diff': 1.5862000000001902e-05}, {'diff': 1.6570000000000473e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:51:09.166" endtime="20201030 11:51:09.169"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:09.173" level="INFO">${ACCURACY} = {'diff': [1.6235999999999334e-05, 1.60690000000005e-05, 1.562500000000175e-05, 1.60690000000005e-05, 1.5862000000001902e-05, 1.6570000000000473e-05, 1.655500000000143e-05, 1.6069999999999973e-05, 1.63...</msg>
<status status="PASS" starttime="20201030 11:51:09.170" endtime="20201030 11:51:09.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.177" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201030 11:51:09.176" endtime="20201030 11:51:09.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.180" level="INFO">VALUE: [1.6235999999999334e-05, 1.60690000000005e-05, 1.562500000000175e-05, 1.60690000000005e-05, 1.5862000000001902e-05, 1.6570000000000473e-05, 1.655500000000143e-05, 1.6069999999999973e-05, 1.6306000000000653e-05, 1.6542000000001333e-05, 1.6069999999999973e-05, 1.6527999999998294e-05, 1.6541999999997864e-05, 1.60690000000005e-05, 1.606899999999703e-05, 1.561099999999871e-05, 1.6069999999999973e-05, 1.6056000000000403e-05, 1.630500000000118e-05, 1.661099999999971e-05, 1.6069999999999973e-05, 1.6278000000001513e-05, 1.654100000000186e-05, 1.6083999999999543e-05, 1.561099999999871e-05, 1.6485999999999584e-05, 1.6069999999999973e-05, 1.6069999999999973e-05, 1.6305999999997184e-05, 1.605500000000093e-05, 1.6527999999998294e-05, 1.555500000000043e-05, 1.6292000000001083e-05, 1.562499999999828e-05, 1.631900000000075e-05, 1.6306000000000653e-05, 1.559700000000261e-05, 1.6514000000002194e-05, 1.630499999999771e-05, 1.629100000000161e-05, 1.6056000000000403e-05, 1.6333999999999793e-05, 1.562499999999828e-05, 1.562500000000175e-05, 1.608300000000007e-05, 1.6056000000000403e-05, 1.561099999999871e-05, 1.559700000000261e-05, 1.630499999999771e-05, 1.60690000000005e-05]</msg>
<status status="PASS" starttime="20201030 11:51:09.179" endtime="20201030 11:51:09.181"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.174" endtime="20201030 11:51:09.181"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:09.185" endtime="20201030 11:51:09.204"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.183" endtime="20201030 11:51:09.205"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.182" endtime="20201030 11:51:09.205"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.828" endtime="20201030 11:51:09.206"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.828" endtime="20201030 11:51:09.206"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.214" endtime="20201030 11:51:09.230"></status>
</kw>
<msg timestamp="20201030 11:51:09.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:09.213" endtime="20201030 11:51:09.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.233" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:09.232" endtime="20201030 11:51:09.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.234" endtime="20201030 11:51:09.236"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.210" endtime="20201030 11:51:09.236"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.208" endtime="20201030 11:51:09.237"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.244" endtime="20201030 11:51:09.529"></status>
</kw>
<msg timestamp="20201030 11:51:09.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022629361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022646764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:09.242" endtime="20201030 11:51:09.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022629361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022646764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:09.533" endtime="20201030 11:51:09.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.542" endtime="20201030 11:51:09.544"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.239" endtime="20201030 11:51:09.544"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.237" endtime="20201030 11:51:09.545"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:09.549" level="INFO">${RESULT} = [{'diff': 1.740299999999917e-05}, {'diff': 1.6986000000000084e-05}, {'diff': 1.7223000000000238e-05}, {'diff': 1.6749999999999404e-05}, {'diff': 1.744500000000135e-05}, {'diff': 1.6513999999998724e-05...</msg>
<status status="PASS" starttime="20201030 11:51:09.545" endtime="20201030 11:51:09.549"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:09.553" level="INFO">${ACCURACY} = {'diff': [1.740299999999917e-05, 1.6986000000000084e-05, 1.7223000000000238e-05, 1.6749999999999404e-05, 1.744500000000135e-05, 1.6513999999998724e-05, 1.7221999999997295e-05, 1.7249999999999904e-05, ...</msg>
<status status="PASS" starttime="20201030 11:51:09.550" endtime="20201030 11:51:09.553"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.557" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201030 11:51:09.556" endtime="20201030 11:51:09.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.560" level="INFO">VALUE: [1.740299999999917e-05, 1.6986000000000084e-05, 1.7223000000000238e-05, 1.6749999999999404e-05, 1.744500000000135e-05, 1.6513999999998724e-05, 1.7221999999997295e-05, 1.7249999999999904e-05, 1.7222000000000764e-05, 1.7500000000000154e-05, 1.7249999999999904e-05, 1.7236000000000334e-05, 1.7223000000000238e-05, 1.6958000000000945e-05, 1.6763999999998974e-05, 1.659700000000014e-05, 1.7459000000000918e-05, 1.7444000000001875e-05, 1.6542000000001333e-05, 1.652699999999882e-05, 1.6542000000001333e-05, 1.6764000000002444e-05, 1.7236000000000334e-05, 1.7292000000002083e-05, 1.7472000000001014e-05, 1.716699999999849e-05, 1.7443999999998405e-05, 1.7249999999999904e-05, 1.7249999999999904e-05, 1.7027999999998794e-05, 1.7458000000001445e-05, 1.6528000000001764e-05, 1.6749999999999404e-05, 1.7263999999999474e-05, 1.7249999999999904e-05, 1.7471999999997545e-05, 1.7236000000000334e-05, 1.7236000000000334e-05, 1.6972999999999988e-05, 1.7277999999999044e-05, 1.7222000000000764e-05, 1.718100000000153e-05, 1.7443999999998405e-05, 1.7249999999999904e-05, 1.6986000000000084e-05, 1.6584000000000043e-05, 1.6749999999999404e-05, 1.7458000000001445e-05, 1.7249999999999904e-05, 1.7222000000000764e-05]</msg>
<status status="PASS" starttime="20201030 11:51:09.558" endtime="20201030 11:51:09.561"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.554" endtime="20201030 11:51:09.562"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:09.566" endtime="20201030 11:51:09.585"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.564" endtime="20201030 11:51:09.586"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.563" endtime="20201030 11:51:09.586"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.207" endtime="20201030 11:51:09.586"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.206" endtime="20201030 11:51:09.586"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.595" endtime="20201030 11:51:09.610"></status>
</kw>
<msg timestamp="20201030 11:51:09.611" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:09.594" endtime="20201030 11:51:09.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.613" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:09.612" endtime="20201030 11:51:09.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.614" endtime="20201030 11:51:09.616"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.591" endtime="20201030 11:51:09.617"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.589" endtime="20201030 11:51:09.617"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.623" endtime="20201030 11:51:09.909"></status>
</kw>
<msg timestamp="20201030 11:51:09.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022009806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022028597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:09.622" endtime="20201030 11:51:09.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022009806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022028597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:09.913" endtime="20201030 11:51:09.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.921" endtime="20201030 11:51:09.923"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.619" endtime="20201030 11:51:09.924"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.618" endtime="20201030 11:51:09.924"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:09.928" level="INFO">${RESULT} = [{'diff': 1.879100000000064e-05}, {'diff': 1.8166000000000015e-05}, {'diff': 1.836100000000146e-05}, {'diff': 1.837499999999756e-05}, {'diff': 1.815299999999992e-05}, {'diff': 1.816699999999949e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:51:09.925" endtime="20201030 11:51:09.928"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:09.933" level="INFO">${ACCURACY} = {'diff': [1.879100000000064e-05, 1.8166000000000015e-05, 1.836100000000146e-05, 1.837499999999756e-05, 1.815299999999992e-05, 1.816699999999949e-05, 1.815299999999992e-05, 1.834699999999842e-05, 1.769...</msg>
<status status="PASS" starttime="20201030 11:51:09.929" endtime="20201030 11:51:09.933"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.938" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201030 11:51:09.937" endtime="20201030 11:51:09.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.940" level="INFO">VALUE: [1.879100000000064e-05, 1.8166000000000015e-05, 1.836100000000146e-05, 1.837499999999756e-05, 1.815299999999992e-05, 1.816699999999949e-05, 1.815299999999992e-05, 1.834699999999842e-05, 1.7694000000002125e-05, 1.7457999999997975e-05, 1.7458000000001445e-05, 1.7486000000000584e-05, 1.7443999999998405e-05, 1.7735999999997365e-05, 1.840300000000017e-05, 1.816699999999949e-05, 1.7707999999998225e-05, 1.7709000000001168e-05, 1.840300000000017e-05, 1.815299999999992e-05, 1.837500000000103e-05, 1.83890000000006e-05, 1.7723000000000738e-05, 1.7915999999999765e-05, 1.7486000000000584e-05, 1.838899999999713e-05, 1.7750000000000404e-05, 1.812499999999731e-05, 1.7679999999999085e-05, 1.837499999999756e-05, 1.8166000000000015e-05, 1.865300000000042e-05, 1.815299999999992e-05, 1.76950000000016e-05, 1.812500000000078e-05, 1.818099999999906e-05, 1.812500000000078e-05, 1.7472000000001014e-05, 1.768100000000203e-05, 1.836100000000146e-05, 1.7722000000001265e-05, 1.837499999999756e-05, 1.840300000000017e-05, 1.818099999999906e-05, 1.8180000000003055e-05, 1.8209000000001668e-05, 1.859699999999867e-05, 1.8166000000000015e-05, 1.816699999999949e-05, 1.83890000000006e-05]</msg>
<status status="PASS" starttime="20201030 11:51:09.939" endtime="20201030 11:51:09.941"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.934" endtime="20201030 11:51:09.941"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:09.945" endtime="20201030 11:51:09.965"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.944" endtime="20201030 11:51:09.965"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.943" endtime="20201030 11:51:09.966"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.587" endtime="20201030 11:51:09.966"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.587" endtime="20201030 11:51:09.966"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.975" endtime="20201030 11:51:09.990"></status>
</kw>
<msg timestamp="20201030 11:51:09.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:09.973" endtime="20201030 11:51:09.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.993" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:09.991" endtime="20201030 11:51:09.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.994" endtime="20201030 11:51:09.995"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.971" endtime="20201030 11:51:09.996"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.968" endtime="20201030 11:51:09.996"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.003" endtime="20201030 11:51:10.288"></status>
</kw>
<msg timestamp="20201030 11:51:10.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021835847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021854847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:10.001" endtime="20201030 11:51:10.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:10.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021835847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021854847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:10.293" endtime="20201030 11:51:10.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.302" endtime="20201030 11:51:10.303"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.999" endtime="20201030 11:51:10.304"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.997" endtime="20201030 11:51:10.304"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:10.308" level="INFO">${RESULT} = [{'diff': 1.9000000000001654e-05}, {'diff': 1.884699999999892e-05}, {'diff': 1.90829999999996e-05}, {'diff': 1.9334000000002793e-05}, {'diff': 1.9570000000000004e-05}, {'diff': 1.9069999999999504e-05}...</msg>
<status status="PASS" starttime="20201030 11:51:10.305" endtime="20201030 11:51:10.309"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:10.312" level="INFO">${ACCURACY} = {'diff': [1.9000000000001654e-05, 1.884699999999892e-05, 1.90829999999996e-05, 1.9334000000002793e-05, 1.9570000000000004e-05, 1.9069999999999504e-05, 1.865300000000042e-05, 1.9084000000002543e-05, 1....</msg>
<status status="PASS" starttime="20201030 11:51:10.309" endtime="20201030 11:51:10.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:10.317" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201030 11:51:10.316" endtime="20201030 11:51:10.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:10.319" level="INFO">VALUE: [1.9000000000001654e-05, 1.884699999999892e-05, 1.90829999999996e-05, 1.9334000000002793e-05, 1.9570000000000004e-05, 1.9069999999999504e-05, 1.865300000000042e-05, 1.9084000000002543e-05, 1.861100000000171e-05, 1.906900000000003e-05, 1.85829999999991e-05, 1.909699999999917e-05, 1.9471999999999545e-05, 1.930500000000071e-05, 1.930500000000071e-05, 1.861100000000171e-05, 1.930499999999724e-05, 1.9306000000000184e-05, 1.862500000000128e-05, 1.9319999999999754e-05, 1.9097999999998644e-05, 1.862499999999781e-05, 1.861099999999824e-05, 1.9528000000001294e-05, 1.906900000000003e-05, 1.930500000000071e-05, 1.9263999999998005e-05, 1.863899999999738e-05, 1.930500000000071e-05, 1.862500000000128e-05, 1.9306000000000184e-05, 1.9527999999997825e-05, 1.929100000000114e-05, 1.9069999999999504e-05, 1.9334000000002793e-05, 1.861099999999824e-05, 1.861100000000171e-05, 1.931900000000028e-05, 1.884699999999892e-05, 1.930500000000071e-05, 1.8611999999997714e-05, 1.862499999999781e-05, 1.9069999999999504e-05, 1.9235999999998865e-05, 1.884700000000239e-05, 1.9055999999999934e-05, 1.9527999999997825e-05, 1.913899999999788e-05, 1.861100000000171e-05, 1.931900000000028e-05]</msg>
<status status="PASS" starttime="20201030 11:51:10.318" endtime="20201030 11:51:10.320"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.313" endtime="20201030 11:51:10.321"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:10.324" endtime="20201030 11:51:10.344"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.323" endtime="20201030 11:51:10.345"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.322" endtime="20201030 11:51:10.345"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.967" endtime="20201030 11:51:10.345"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.966" endtime="20201030 11:51:10.345"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.354" endtime="20201030 11:51:10.373"></status>
</kw>
<msg timestamp="20201030 11:51:10.374" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:10.352" endtime="20201030 11:51:10.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:10.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:10.375" endtime="20201030 11:51:10.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.378" endtime="20201030 11:51:10.379"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.350" endtime="20201030 11:51:10.380"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.348" endtime="20201030 11:51:10.380"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.387" endtime="20201030 11:51:10.673"></status>
</kw>
<msg timestamp="20201030 11:51:10.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02508725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025107653, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:10.385" endtime="20201030 11:51:10.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:10.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02508725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025107653, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:10.677" endtime="20201030 11:51:10.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.686" endtime="20201030 11:51:10.687"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.382" endtime="20201030 11:51:10.688"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.381" endtime="20201030 11:51:10.688"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:10.692" level="INFO">${RESULT} = [{'diff': 2.040300000000217e-05}, {'diff': 1.977700000000207e-05}, {'diff': 2.045900000000045e-05}, {'diff': 2.0458000000000975e-05}, {'diff': 2.0458000000000975e-05}, {'diff': 2.0222000000000295e-05}...</msg>
<status status="PASS" starttime="20201030 11:51:10.689" endtime="20201030 11:51:10.692"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:10.697" level="INFO">${ACCURACY} = {'diff': [2.040300000000217e-05, 1.977700000000207e-05, 2.045900000000045e-05, 2.0458000000000975e-05, 2.0458000000000975e-05, 2.0222000000000295e-05, 2.0458000000000975e-05, 2.0235999999999865e-05, 2...</msg>
<status status="PASS" starttime="20201030 11:51:10.693" endtime="20201030 11:51:10.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:10.701" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201030 11:51:10.700" endtime="20201030 11:51:10.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:10.704" level="INFO">VALUE: [2.040300000000217e-05, 1.977700000000207e-05, 2.045900000000045e-05, 2.0458000000000975e-05, 2.0458000000000975e-05, 2.0222000000000295e-05, 2.0458000000000975e-05, 2.0235999999999865e-05, 2.0014000000002224e-05, 2.0250000000002905e-05, 1.9778000000001544e-05, 2.0250000000002905e-05, 2.0514000000002724e-05, 2.022299999999977e-05, 2.0278000000002044e-05, 1.9999999999999185e-05, 1.956900000000053e-05, 2.0486000000000115e-05, 2.0528000000002294e-05, 2.0235999999999865e-05, 2.0235999999999865e-05, 2.0471999999997076e-05, 1.954100000000139e-05, 2.0235999999999865e-05, 2.0458000000000975e-05, 2.0249999999999435e-05, 2.0221999999996826e-05, 2.0013999999998755e-05, 1.9820000000000254e-05, 1.9500000000002154e-05, 2.0235999999999865e-05, 1.9999999999999185e-05, 2.0472000000000545e-05, 1.9541999999997395e-05, 1.97769999999986e-05, 2.004099999999842e-05, 1.948699999999859e-05, 1.9542000000000864e-05, 2.047300000000002e-05, 2.0235999999999865e-05, 1.9542000000000864e-05, 1.9791999999997645e-05, 2.0028000000001794e-05, 1.9528000000001294e-05, 1.9542000000000864e-05, 2.018100000000106e-05, 2.0249999999999435e-05, 1.9777999999998075e-05, 2.0263999999999005e-05, 1.9598000000002613e-05]</msg>
<status status="PASS" starttime="20201030 11:51:10.702" endtime="20201030 11:51:10.711"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.697" endtime="20201030 11:51:10.712"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:10.715" endtime="20201030 11:51:10.735"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.714" endtime="20201030 11:51:10.735"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.713" endtime="20201030 11:51:10.736"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.346" endtime="20201030 11:51:10.736"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.346" endtime="20201030 11:51:10.736"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.745" endtime="20201030 11:51:10.760"></status>
</kw>
<msg timestamp="20201030 11:51:10.760" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:10.743" endtime="20201030 11:51:10.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:10.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:10.761" endtime="20201030 11:51:10.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.764" endtime="20201030 11:51:10.766"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.741" endtime="20201030 11:51:10.766"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.739" endtime="20201030 11:51:10.766"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.773" endtime="20201030 11:51:11.058"></status>
</kw>
<msg timestamp="20201030 11:51:11.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021902444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021923486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:10.771" endtime="20201030 11:51:11.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021902444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021923486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:11.062" endtime="20201030 11:51:11.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.070" endtime="20201030 11:51:11.072"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.769" endtime="20201030 11:51:11.072"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.767" endtime="20201030 11:51:11.073"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:11.077" level="INFO">${RESULT} = [{'diff': 2.1041999999998895e-05}, {'diff': 2.116699999999902e-05}, {'diff': 2.136100000000099e-05}, {'diff': 2.0693999999998186e-05}, {'diff': 2.111100000000074e-05}, {'diff': 2.0707999999997756e-05}...</msg>
<status status="PASS" starttime="20201030 11:51:11.074" endtime="20201030 11:51:11.077"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:11.082" level="INFO">${ACCURACY} = {'diff': [2.1041999999998895e-05, 2.116699999999902e-05, 2.136100000000099e-05, 2.0693999999998186e-05, 2.111100000000074e-05, 2.0707999999997756e-05, 2.138900000000013e-05, 2.141699999999927e-05, 2.0...</msg>
<status status="PASS" starttime="20201030 11:51:11.078" endtime="20201030 11:51:11.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.086" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201030 11:51:11.085" endtime="20201030 11:51:11.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.089" level="INFO">VALUE: [2.1041999999998895e-05, 2.116699999999902e-05, 2.136100000000099e-05, 2.0693999999998186e-05, 2.111100000000074e-05, 2.0707999999997756e-05, 2.138900000000013e-05, 2.141699999999927e-05, 2.0708000000001225e-05, 2.094499999999791e-05, 2.1208000000001725e-05, 2.116700000000249e-05, 2.113899999999988e-05, 2.1415999999999796e-05, 2.141699999999927e-05, 2.138900000000013e-05, 2.116700000000249e-05, 2.1165999999999546e-05, 2.138900000000013e-05, 2.1402000000000226e-05, 2.0694000000001656e-05, 2.112500000000031e-05, 2.069499999999766e-05, 2.115299999999945e-05, 2.062500000000328e-05, 2.138900000000013e-05, 2.070899999999723e-05, 2.138900000000013e-05, 2.0694000000001656e-05, 2.14029999999997e-05, 2.1402000000000226e-05, 2.066699999999852e-05, 2.133299999999838e-05, 2.162499999999734e-05, 2.1415999999999796e-05, 2.138899999999666e-05, 2.14029999999997e-05, 2.0901999999999726e-05, 2.138900000000013e-05, 2.116700000000249e-05, 2.136100000000099e-05, 2.138900000000013e-05, 2.1138000000000406e-05, 2.141699999999927e-05, 2.111100000000074e-05, 2.0736000000000365e-05, 2.115299999999945e-05, 2.14029999999997e-05, 2.069500000000113e-05, 2.0416000000002266e-05]</msg>
<status status="PASS" starttime="20201030 11:51:11.088" endtime="20201030 11:51:11.090"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.083" endtime="20201030 11:51:11.090"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:11.094" endtime="20201030 11:51:11.113"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.092" endtime="20201030 11:51:11.114"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.091" endtime="20201030 11:51:11.114"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.737" endtime="20201030 11:51:11.115"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.736" endtime="20201030 11:51:11.115"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.123" endtime="20201030 11:51:11.139"></status>
</kw>
<msg timestamp="20201030 11:51:11.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:11.122" endtime="20201030 11:51:11.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.142" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:11.140" endtime="20201030 11:51:11.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.143" endtime="20201030 11:51:11.144"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.119" endtime="20201030 11:51:11.145"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.117" endtime="20201030 11:51:11.146"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.152" endtime="20201030 11:51:11.437"></status>
</kw>
<msg timestamp="20201030 11:51:11.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021828792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02185125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:11.150" endtime="20201030 11:51:11.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021828792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02185125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:11.441" endtime="20201030 11:51:11.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.450" endtime="20201030 11:51:11.452"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.148" endtime="20201030 11:51:11.452"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.146" endtime="20201030 11:51:11.453"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:11.457" level="INFO">${RESULT} = [{'diff': 2.2457999999999506e-05}, {'diff': 2.231899999999981e-05}, {'diff': 2.162499999999734e-05}, {'diff': 2.208299999999913e-05}, {'diff': 2.2069999999999035e-05}, {'diff': 2.231899999999981e-05},...</msg>
<status status="PASS" starttime="20201030 11:51:11.453" endtime="20201030 11:51:11.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:11.461" level="INFO">${ACCURACY} = {'diff': [2.2457999999999506e-05, 2.231899999999981e-05, 2.162499999999734e-05, 2.208299999999913e-05, 2.2069999999999035e-05, 2.231899999999981e-05, 2.231899999999981e-05, 2.2542000000000395e-05, 2.2...</msg>
<status status="PASS" starttime="20201030 11:51:11.458" endtime="20201030 11:51:11.461"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.465" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201030 11:51:11.464" endtime="20201030 11:51:11.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.468" level="INFO">VALUE: [2.2457999999999506e-05, 2.231899999999981e-05, 2.162499999999734e-05, 2.208299999999913e-05, 2.2069999999999035e-05, 2.231899999999981e-05, 2.231899999999981e-05, 2.2542000000000395e-05, 2.233299999999938e-05, 2.254100000000092e-05, 2.233299999999938e-05, 2.2098000000001644e-05, 2.254100000000092e-05, 2.163900000000038e-05, 2.255500000000049e-05, 2.2319999999999285e-05, 2.255500000000049e-05, 2.2555999999999965e-05, 2.2292000000000145e-05, 2.2098000000001644e-05, 2.163899999999691e-05, 2.163900000000038e-05, 2.162500000000081e-05, 2.233299999999938e-05, 2.20969999999987e-05, 2.231899999999981e-05, 2.234699999999895e-05, 2.1666000000000046e-05, 2.255500000000049e-05, 2.2334000000002324e-05, 2.2028000000000325e-05, 2.2320000000002754e-05, 2.2542000000000395e-05, 2.202700000000085e-05, 2.2333999999998855e-05, 2.256900000000006e-05, 2.234700000000242e-05, 2.2320000000002754e-05, 2.162500000000081e-05, 2.162500000000081e-05, 2.229100000000067e-05, 2.231899999999981e-05, 2.2555999999999965e-05, 2.231899999999981e-05, 2.2320000000002754e-05, 2.1612000000000714e-05, 2.2319999999999285e-05, 2.2028000000000325e-05, 2.2097999999998175e-05, 2.2278000000000575e-05]</msg>
<status status="PASS" starttime="20201030 11:51:11.466" endtime="20201030 11:51:11.469"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.462" endtime="20201030 11:51:11.469"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:11.473" endtime="20201030 11:51:11.492"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.471" endtime="20201030 11:51:11.493"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.470" endtime="20201030 11:51:11.493"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.116" endtime="20201030 11:51:11.493"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.115" endtime="20201030 11:51:11.493"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.502" endtime="20201030 11:51:11.519"></status>
</kw>
<msg timestamp="20201030 11:51:11.519" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:11.501" endtime="20201030 11:51:11.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:11.520" endtime="20201030 11:51:11.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.523" endtime="20201030 11:51:11.524"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.498" endtime="20201030 11:51:11.525"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.496" endtime="20201030 11:51:11.525"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.532" endtime="20201030 11:51:11.817"></status>
</kw>
<msg timestamp="20201030 11:51:11.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023034194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023057653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:11.530" endtime="20201030 11:51:11.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023034194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023057653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:11.822" endtime="20201030 11:51:11.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.830" endtime="20201030 11:51:11.832"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.528" endtime="20201030 11:51:11.832"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.526" endtime="20201030 11:51:11.833"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:11.837" level="INFO">${RESULT} = [{'diff': 2.345899999999998e-05}, {'diff': 2.3262999999999062e-05}, {'diff': 2.255500000000049e-05}, {'diff': 2.3485999999999646e-05}, {'diff': 2.3221999999999826e-05}, {'diff': 2.3054999999997522e-05...</msg>
<status status="PASS" starttime="20201030 11:51:11.833" endtime="20201030 11:51:11.837"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:11.841" level="INFO">${ACCURACY} = {'diff': [2.345899999999998e-05, 2.3262999999999062e-05, 2.255500000000049e-05, 2.3485999999999646e-05, 2.3221999999999826e-05, 2.3054999999997522e-05, 2.3485999999999646e-05, 2.3235999999999396e-05, ...</msg>
<status status="PASS" starttime="20201030 11:51:11.838" endtime="20201030 11:51:11.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.845" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201030 11:51:11.844" endtime="20201030 11:51:11.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.848" level="INFO">VALUE: [2.345899999999998e-05, 2.3262999999999062e-05, 2.255500000000049e-05, 2.3485999999999646e-05, 2.3221999999999826e-05, 2.3054999999997522e-05, 2.3485999999999646e-05, 2.3235999999999396e-05, 2.2542000000000395e-05, 2.255500000000049e-05, 2.2792000000000645e-05, 2.3014000000001755e-05, 2.3263999999998536e-05, 2.3249999999998966e-05, 2.2555999999999965e-05, 2.2555999999999965e-05, 2.3485999999999646e-05, 2.3027999999997856e-05, 2.2542000000000395e-05, 2.3249999999998966e-05, 2.3472000000000076e-05, 2.3472000000000076e-05, 2.3221999999999826e-05, 2.3486000000003115e-05, 2.258299999999963e-05, 2.3290999999998202e-05, 2.3458000000000506e-05, 2.3028000000001325e-05, 2.256900000000006e-05, 2.3263999999998536e-05, 2.3262999999999062e-05, 2.2791999999997176e-05, 2.3250000000002435e-05, 2.3235999999999396e-05, 2.3264000000002005e-05, 2.2570000000003004e-05, 2.345899999999998e-05, 2.3014000000001755e-05, 2.3278000000001575e-05, 2.3221999999999826e-05, 2.3208000000000256e-05, 2.3221999999999826e-05, 2.2542000000000395e-05, 2.3250000000002435e-05, 2.3278000000001575e-05, 2.344500000000041e-05, 2.3499999999999216e-05, 2.3264000000002005e-05, 2.255500000000049e-05, 2.3249999999998966e-05]</msg>
<status status="PASS" starttime="20201030 11:51:11.847" endtime="20201030 11:51:11.850"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.842" endtime="20201030 11:51:11.850"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:11.854" endtime="20201030 11:51:11.873"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.853" endtime="20201030 11:51:11.874"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.851" endtime="20201030 11:51:11.874"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.494" endtime="20201030 11:51:11.875"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.494" endtime="20201030 11:51:11.875"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.883" endtime="20201030 11:51:11.899"></status>
</kw>
<msg timestamp="20201030 11:51:11.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:11.882" endtime="20201030 11:51:11.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:11.901" endtime="20201030 11:51:11.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.903" endtime="20201030 11:51:11.905"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.879" endtime="20201030 11:51:11.905"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.877" endtime="20201030 11:51:11.906"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.912" endtime="20201030 11:51:12.197"></status>
</kw>
<msg timestamp="20201030 11:51:12.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021873653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021898, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:51:11.911" endtime="20201030 11:51:12.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021873653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021898, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:51:12.201" endtime="20201030 11:51:12.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.209" endtime="20201030 11:51:12.211"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.908" endtime="20201030 11:51:12.212"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.906" endtime="20201030 11:51:12.212"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:12.216" level="INFO">${RESULT} = [{'diff': 2.434700000000095e-05}, {'diff': 2.44169999999988e-05}, {'diff': 2.4165999999999077e-05}, {'diff': 2.373699999999937e-05}, {'diff': 2.3958000000001006e-05}, {'diff': 2.37229999999998e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:12.213" endtime="20201030 11:51:12.216"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:12.221" level="INFO">${ACCURACY} = {'diff': [2.434700000000095e-05, 2.44169999999988e-05, 2.4165999999999077e-05, 2.373699999999937e-05, 2.3958000000001006e-05, 2.37229999999998e-05, 2.4207999999997787e-05, 2.370900000000023e-05, 2.441...</msg>
<status status="PASS" starttime="20201030 11:51:12.217" endtime="20201030 11:51:12.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.226" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201030 11:51:12.225" endtime="20201030 11:51:12.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.228" level="INFO">VALUE: [2.434700000000095e-05, 2.44169999999988e-05, 2.4165999999999077e-05, 2.373699999999937e-05, 2.3958000000001006e-05, 2.37229999999998e-05, 2.4207999999997787e-05, 2.370900000000023e-05, 2.4415999999999327e-05, 2.3708000000000756e-05, 2.44169999999988e-05, 2.4165999999999077e-05, 2.369500000000066e-05, 2.4429999999998897e-05, 2.415299999999898e-05, 2.415299999999898e-05, 2.4346999999997482e-05, 2.4334000000000855e-05, 2.394499999999744e-05, 2.370899999999676e-05, 2.44169999999988e-05, 2.416699999999855e-05, 2.415299999999898e-05, 2.4180000000002116e-05, 2.44030000000027e-05, 2.4236000000000396e-05, 2.3499999999999216e-05, 2.441700000000227e-05, 2.440299999999923e-05, 2.418099999999812e-05, 2.438899999999966e-05, 2.44169999999988e-05, 2.416699999999855e-05, 2.440299999999923e-05, 2.4165999999999077e-05, 2.4415999999999327e-05, 2.418099999999812e-05, 2.416699999999855e-05, 2.437500000000009e-05, 2.4471999999997607e-05, 2.44169999999988e-05, 2.3693999999997717e-05, 2.347299999999955e-05, 2.3485999999999646e-05, 2.441700000000227e-05, 2.3485999999999646e-05, 2.3735999999999896e-05, 2.440299999999923e-05, 2.3680000000001616e-05, 2.341700000000127e-05]</msg>
<status status="PASS" starttime="20201030 11:51:12.227" endtime="20201030 11:51:12.229"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.222" endtime="20201030 11:51:12.230"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:12.233" endtime="20201030 11:51:12.253"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.232" endtime="20201030 11:51:12.253"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.230" endtime="20201030 11:51:12.253"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.876" endtime="20201030 11:51:12.254"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.875" endtime="20201030 11:51:12.254"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.263" endtime="20201030 11:51:12.278"></status>
</kw>
<msg timestamp="20201030 11:51:12.278" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:12.261" endtime="20201030 11:51:12.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:12.279" endtime="20201030 11:51:12.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.282" endtime="20201030 11:51:12.283"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.258" endtime="20201030 11:51:12.284"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.256" endtime="20201030 11:51:12.284"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.291" endtime="20201030 11:51:12.577"></status>
</kw>
<msg timestamp="20201030 11:51:12.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021745917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021771681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:12.289" endtime="20201030 11:51:12.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021745917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021771681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:12.581" endtime="20201030 11:51:12.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.590" endtime="20201030 11:51:12.591"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.287" endtime="20201030 11:51:12.592"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.285" endtime="20201030 11:51:12.592"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:12.596" level="INFO">${RESULT} = [{'diff': 2.5764000000001036e-05}, {'diff': 2.5098000000001175e-05}, {'diff': 2.462500000000034e-05}, {'diff': 2.5569999999999066e-05}, {'diff': 2.5110999999997802e-05}, {'diff': 2.465299999999948e-05...</msg>
<status status="PASS" starttime="20201030 11:51:12.593" endtime="20201030 11:51:12.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:12.601" level="INFO">${ACCURACY} = {'diff': [2.5764000000001036e-05, 2.5098000000001175e-05, 2.462500000000034e-05, 2.5569999999999066e-05, 2.5110999999997802e-05, 2.465299999999948e-05, 2.5333999999998386e-05, 2.463899999999991e-05, 2...</msg>
<status status="PASS" starttime="20201030 11:51:12.597" endtime="20201030 11:51:12.601"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.605" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201030 11:51:12.604" endtime="20201030 11:51:12.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.608" level="INFO">VALUE: [2.5764000000001036e-05, 2.5098000000001175e-05, 2.462500000000034e-05, 2.5569999999999066e-05, 2.5110999999997802e-05, 2.465299999999948e-05, 2.5333999999998386e-05, 2.463899999999991e-05, 2.5332999999998912e-05, 2.5318999999999342e-05, 2.5346999999998482e-05, 2.5112000000000745e-05, 2.5332999999998912e-05, 2.508300000000213e-05, 2.461100000000077e-05, 2.5250000000000966e-05, 2.511100000000127e-05, 2.463899999999991e-05, 2.5320000000002285e-05, 2.533300000000238e-05, 2.5291000000000202e-05, 2.4582999999998162e-05, 2.463899999999991e-05, 2.5304999999999772e-05, 2.536100000000152e-05, 2.5346999999998482e-05, 2.5597999999998206e-05, 2.511100000000127e-05, 2.5555000000000022e-05, 2.540300000000023e-05, 2.462500000000034e-05, 2.534700000000195e-05, 2.5332999999998912e-05, 2.462500000000034e-05, 2.511100000000127e-05, 2.5068999999999092e-05, 2.5305999999999246e-05, 2.462499999999687e-05, 2.5569999999999066e-05, 2.462500000000034e-05, 2.511100000000127e-05, 2.512500000000084e-05, 2.463899999999991e-05, 2.5306000000002715e-05, 2.5098000000001175e-05, 2.462500000000034e-05, 2.5347999999997956e-05, 2.5318999999999342e-05, 2.465299999999948e-05, 2.486100000000102e-05]</msg>
<status status="PASS" starttime="20201030 11:51:12.606" endtime="20201030 11:51:12.609"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.602" endtime="20201030 11:51:12.609"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:12.613" endtime="20201030 11:51:12.632"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.611" endtime="20201030 11:51:12.633"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.610" endtime="20201030 11:51:12.633"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.255" endtime="20201030 11:51:12.633"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.254" endtime="20201030 11:51:12.633"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.642" endtime="20201030 11:51:12.658"></status>
</kw>
<msg timestamp="20201030 11:51:12.659" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:12.641" endtime="20201030 11:51:12.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:12.660" endtime="20201030 11:51:12.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.662" endtime="20201030 11:51:12.664"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.638" endtime="20201030 11:51:12.664"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.636" endtime="20201030 11:51:12.665"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.671" endtime="20201030 11:51:12.956"></status>
</kw>
<msg timestamp="20201030 11:51:12.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02262925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022655931, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:12.670" endtime="20201030 11:51:12.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02262925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022655931, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:12.961" endtime="20201030 11:51:12.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.969" endtime="20201030 11:51:12.971"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.667" endtime="20201030 11:51:12.971"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.665" endtime="20201030 11:51:12.972"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:12.976" level="INFO">${RESULT} = [{'diff': 2.668100000000062e-05}, {'diff': 2.6250000000001966e-05}, {'diff': 2.5555000000000022e-05}, {'diff': 2.5500000000001216e-05}, {'diff': 2.5526999999997413e-05}, {'diff': 2.6250000000001966e-0...</msg>
<status status="PASS" starttime="20201030 11:51:12.972" endtime="20201030 11:51:12.976"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:12.980" level="INFO">${ACCURACY} = {'diff': [2.668100000000062e-05, 2.6250000000001966e-05, 2.5555000000000022e-05, 2.5500000000001216e-05, 2.5526999999997413e-05, 2.6250000000001966e-05, 2.6540999999997983e-05, 2.6264000000001536e-05,...</msg>
<status status="PASS" starttime="20201030 11:51:12.977" endtime="20201030 11:51:12.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.984" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201030 11:51:12.983" endtime="20201030 11:51:12.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.987" level="INFO">VALUE: [2.668100000000062e-05, 2.6250000000001966e-05, 2.5555000000000022e-05, 2.5500000000001216e-05, 2.5526999999997413e-05, 2.6250000000001966e-05, 2.6540999999997983e-05, 2.6264000000001536e-05, 2.6207999999999787e-05, 2.6250000000001966e-05, 2.6236000000002396e-05, 2.6486000000002646e-05, 2.5555000000000022e-05, 2.6027999999997387e-05, 2.6471999999999607e-05, 2.6250000000001966e-05, 2.6499999999998747e-05, 2.6264000000001536e-05, 2.6291999999997206e-05, 2.6485999999999177e-05, 2.6514000000001786e-05, 2.5584000000002105e-05, 2.6263999999998067e-05, 2.5555000000000022e-05, 2.5556000000002965e-05, 2.6249999999998497e-05, 2.5805999999999746e-05, 2.5568999999999592e-05, 2.648699999999865e-05, 2.5999999999998247e-05, 2.6263999999998067e-05, 2.5568999999999592e-05, 2.6263999999998067e-05, 2.6264000000001536e-05, 2.6250000000001966e-05, 2.6500000000002216e-05, 2.5569999999999066e-05, 2.5570000000002535e-05, 2.616699999999708e-05, 2.6277999999997637e-05, 2.6069000000000092e-05, 2.6249999999998497e-05, 2.6471999999999607e-05, 2.648699999999865e-05, 2.6500000000002216e-05, 2.6028000000000856e-05, 2.5805999999999746e-05, 2.5526999999997413e-05, 2.6471999999999607e-05, 2.5568999999999592e-05]</msg>
<status status="PASS" starttime="20201030 11:51:12.985" endtime="20201030 11:51:12.988"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.981" endtime="20201030 11:51:12.989"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:12.993" endtime="20201030 11:51:13.012"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.991" endtime="20201030 11:51:13.013"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.990" endtime="20201030 11:51:13.013"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.634" endtime="20201030 11:51:13.013"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.634" endtime="20201030 11:51:13.013"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.022" endtime="20201030 11:51:13.037"></status>
</kw>
<msg timestamp="20201030 11:51:13.038" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:13.021" endtime="20201030 11:51:13.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.040" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:13.039" endtime="20201030 11:51:13.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.041" endtime="20201030 11:51:13.043"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.018" endtime="20201030 11:51:13.043"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.016" endtime="20201030 11:51:13.044"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.050" endtime="20201030 11:51:13.337"></status>
</kw>
<msg timestamp="20201030 11:51:13.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022179292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022206375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:13.049" endtime="20201030 11:51:13.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022179292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022206375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:13.342" endtime="20201030 11:51:13.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.350" endtime="20201030 11:51:13.352"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.046" endtime="20201030 11:51:13.352"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.044" endtime="20201030 11:51:13.353"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:13.357" level="INFO">${RESULT} = [{'diff': 2.7083000000000662e-05}, {'diff': 2.7222000000000357e-05}, {'diff': 2.716699999999808e-05}, {'diff': 2.7444000000001467e-05}, {'diff': 2.7179999999998178e-05}, {'diff': 2.718099999999765e-05...</msg>
<status status="PASS" starttime="20201030 11:51:13.354" endtime="20201030 11:51:13.357"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:13.362" level="INFO">${ACCURACY} = {'diff': [2.7083000000000662e-05, 2.7222000000000357e-05, 2.716699999999808e-05, 2.7444000000001467e-05, 2.7179999999998178e-05, 2.718099999999765e-05, 2.7179999999998178e-05, 2.6694000000000717e-05, ...</msg>
<status status="PASS" starttime="20201030 11:51:13.358" endtime="20201030 11:51:13.362"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.367" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201030 11:51:13.366" endtime="20201030 11:51:13.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.369" level="INFO">VALUE: [2.7083000000000662e-05, 2.7222000000000357e-05, 2.716699999999808e-05, 2.7444000000001467e-05, 2.7179999999998178e-05, 2.718099999999765e-05, 2.7179999999998178e-05, 2.6694000000000717e-05, 2.7165999999998608e-05, 2.7361000000000052e-05, 2.6485999999999177e-05, 2.7249999999999497e-05, 2.7415999999998858e-05, 2.7194000000001217e-05, 2.7388999999999192e-05, 2.6485999999999177e-05, 2.744499999999747e-05, 2.718100000000112e-05, 2.6485999999999177e-05, 2.7457999999997568e-05, 2.741699999999833e-05, 2.6485999999999177e-05, 2.6514000000001786e-05, 2.6721999999999857e-05, 2.718100000000112e-05, 2.716700000000155e-05, 2.6485999999999177e-05, 2.7415999999998858e-05, 2.7401999999999288e-05, 2.7151999999999038e-05, 2.740299999999876e-05, 2.6500000000002216e-05, 2.7180000000001647e-05, 2.74170000000018e-05, 2.74170000000018e-05, 2.7166000000002077e-05, 2.6500000000002216e-05, 2.7429999999998428e-05, 2.715300000000198e-05, 2.6485999999999177e-05, 2.7193999999997748e-05, 2.7193999999997748e-05, 2.6721999999999857e-05, 2.74170000000018e-05, 2.719500000000069e-05, 2.7416000000002327e-05, 2.7194000000001217e-05, 2.6513999999998317e-05, 2.6708000000000287e-05, 2.7180000000001647e-05]</msg>
<status status="PASS" starttime="20201030 11:51:13.368" endtime="20201030 11:51:13.370"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.363" endtime="20201030 11:51:13.370"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:13.374" endtime="20201030 11:51:13.393"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.373" endtime="20201030 11:51:13.394"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.371" endtime="20201030 11:51:13.394"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.014" endtime="20201030 11:51:13.395"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.014" endtime="20201030 11:51:13.395"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.404" endtime="20201030 11:51:13.418"></status>
</kw>
<msg timestamp="20201030 11:51:13.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:13.402" endtime="20201030 11:51:13.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.421" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:13.420" endtime="20201030 11:51:13.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.422" endtime="20201030 11:51:13.424"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.399" endtime="20201030 11:51:13.425"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.397" endtime="20201030 11:51:13.425"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.432" endtime="20201030 11:51:13.717"></status>
</kw>
<msg timestamp="20201030 11:51:13.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021833361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021862111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:13.430" endtime="20201030 11:51:13.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021833361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021862111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:13.722" endtime="20201030 11:51:13.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.730" endtime="20201030 11:51:13.732"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.428" endtime="20201030 11:51:13.732"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.426" endtime="20201030 11:51:13.733"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:13.737" level="INFO">${RESULT} = [{'diff': 2.8750000000000997e-05}, {'diff': 2.7957999999998068e-05}, {'diff': 2.8346999999998013e-05}, {'diff': 2.8570000000002066e-05}, {'diff': 2.8570000000002066e-05}, {'diff': 2.8555999999999027e-...</msg>
<status status="PASS" starttime="20201030 11:51:13.733" endtime="20201030 11:51:13.737"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:13.741" level="INFO">${ACCURACY} = {'diff': [2.8750000000000997e-05, 2.7957999999998068e-05, 2.8346999999998013e-05, 2.8570000000002066e-05, 2.8570000000002066e-05, 2.8555999999999027e-05, 2.8082999999998193e-05, 2.7583999999997166e-05...</msg>
<status status="PASS" starttime="20201030 11:51:13.738" endtime="20201030 11:51:13.741"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.745" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201030 11:51:13.744" endtime="20201030 11:51:13.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.748" level="INFO">VALUE: [2.8750000000000997e-05, 2.7957999999998068e-05, 2.8346999999998013e-05, 2.8570000000002066e-05, 2.8570000000002066e-05, 2.8555999999999027e-05, 2.8082999999998193e-05, 2.7583999999997166e-05, 2.8333000000001912e-05, 2.8346999999998013e-05, 2.765300000000248e-05, 2.8098000000000706e-05, 2.766699999999858e-05, 2.8179999999999178e-05, 2.8361000000001052e-05, 2.7637999999999968e-05, 2.8110999999997333e-05, 2.8570000000002066e-05, 2.8361000000001052e-05, 2.8347000000001482e-05, 2.8097000000001232e-05, 2.8333999999997916e-05, 2.8096999999997763e-05, 2.7638999999999442e-05, 2.765300000000248e-05, 2.8111000000000802e-05, 2.7665999999999108e-05, 2.8346999999998013e-05, 2.8540999999999983e-05, 2.8332999999998443e-05, 2.8290999999999733e-05, 2.8125000000000372e-05, 2.8332999999998443e-05, 2.7666000000002577e-05, 2.8361000000001052e-05, 2.8555000000003022e-05, 2.8097000000001232e-05, 2.7652999999999012e-05, 2.7638999999999442e-05, 2.8097000000001232e-05, 2.8346999999998013e-05, 2.8125000000000372e-05, 2.8347000000001482e-05, 2.8402000000000288e-05, 2.8334000000001386e-05, 2.8332999999998443e-05, 2.8652000000000538e-05, 2.7611000000000302e-05, 2.7624999999999872e-05, 2.8320000000001816e-05]</msg>
<status status="PASS" starttime="20201030 11:51:13.746" endtime="20201030 11:51:13.749"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.742" endtime="20201030 11:51:13.749"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:13.753" endtime="20201030 11:51:13.772"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.751" endtime="20201030 11:51:13.773"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.750" endtime="20201030 11:51:13.773"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.396" endtime="20201030 11:51:13.774"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.395" endtime="20201030 11:51:13.774"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.782" endtime="20201030 11:51:13.801"></status>
</kw>
<msg timestamp="20201030 11:51:13.802" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:13.781" endtime="20201030 11:51:13.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:13.803" endtime="20201030 11:51:13.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.805" endtime="20201030 11:51:13.807"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.778" endtime="20201030 11:51:13.808"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.776" endtime="20201030 11:51:13.808"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.815" endtime="20201030 11:51:14.101"></status>
</kw>
<msg timestamp="20201030 11:51:14.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025139014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025168903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:13.813" endtime="20201030 11:51:14.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025139014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025168903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:14.105" endtime="20201030 11:51:14.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.113" endtime="20201030 11:51:14.115"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.810" endtime="20201030 11:51:14.115"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.809" endtime="20201030 11:51:14.116"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:14.120" level="INFO">${RESULT} = [{'diff': 2.9888999999998223e-05}, {'diff': 2.9027000000000913e-05}, {'diff': 2.9278000000000637e-05}, {'diff': 2.9264000000001067e-05}, {'diff': 2.9264000000001067e-05}, {'diff': 2.9292000000000207e-...</msg>
<status status="PASS" starttime="20201030 11:51:14.116" endtime="20201030 11:51:14.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:14.124" level="INFO">${ACCURACY} = {'diff': [2.9888999999998223e-05, 2.9027000000000913e-05, 2.9278000000000637e-05, 2.9264000000001067e-05, 2.9264000000001067e-05, 2.9292000000000207e-05, 2.8570000000002066e-05, 2.8555999999999027e-05...</msg>
<status status="PASS" starttime="20201030 11:51:14.121" endtime="20201030 11:51:14.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.128" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201030 11:51:14.127" endtime="20201030 11:51:14.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.131" level="INFO">VALUE: [2.9888999999998223e-05, 2.9027000000000913e-05, 2.9278000000000637e-05, 2.9264000000001067e-05, 2.9264000000001067e-05, 2.9292000000000207e-05, 2.8570000000002066e-05, 2.8555999999999027e-05, 2.9305999999999777e-05, 2.9305999999999777e-05, 2.9485999999998708e-05, 2.9028000000000387e-05, 2.9221999999998888e-05, 2.8582999999998693e-05, 2.8554999999999553e-05, 2.9263999999997597e-05, 2.9528000000000887e-05, 2.9514000000001317e-05, 2.8582999999998693e-05, 2.9514000000001317e-05, 2.9040999999997014e-05, 2.9290999999997264e-05, 2.9278000000000637e-05, 2.9514000000001317e-05, 2.9278000000000637e-05, 2.9040999999997014e-05, 2.8596999999998263e-05, 2.8582999999998693e-05, 2.9457999999999568e-05, 2.8612000000000776e-05, 2.8554999999999553e-05, 2.8568999999999123e-05, 2.9319999999999347e-05, 2.9291000000000733e-05, 2.9499999999998278e-05, 2.8541999999999457e-05, 2.8569999999998597e-05, 2.9276999999997694e-05, 2.9499999999998278e-05, 2.9055999999999527e-05, 2.8804999999999803e-05, 2.9486000000002177e-05, 2.9513000000001843e-05, 2.9500000000001747e-05, 2.9028000000000387e-05, 2.8568999999999123e-05, 2.9236000000001927e-05, 2.9235999999998458e-05, 2.9055000000000053e-05, 2.9208000000002787e-05]</msg>
<status status="PASS" starttime="20201030 11:51:14.129" endtime="20201030 11:51:14.132"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.125" endtime="20201030 11:51:14.133"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:14.136" endtime="20201030 11:51:14.156"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.135" endtime="20201030 11:51:14.156"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.134" endtime="20201030 11:51:14.157"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.775" endtime="20201030 11:51:14.157"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.774" endtime="20201030 11:51:14.157"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.166" endtime="20201030 11:51:14.181"></status>
</kw>
<msg timestamp="20201030 11:51:14.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:14.164" endtime="20201030 11:51:14.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.184" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:14.183" endtime="20201030 11:51:14.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.185" endtime="20201030 11:51:14.187"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.162" endtime="20201030 11:51:14.187"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.160" endtime="20201030 11:51:14.188"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.194" endtime="20201030 11:51:14.480"></status>
</kw>
<msg timestamp="20201030 11:51:14.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021583042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021613153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:14.192" endtime="20201030 11:51:14.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021583042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021613153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:14.484" endtime="20201030 11:51:14.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.493" endtime="20201030 11:51:14.494"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.190" endtime="20201030 11:51:14.495"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.188" endtime="20201030 11:51:14.495"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:14.499" level="INFO">${RESULT} = [{'diff': 3.0110999999999333e-05}, {'diff': 3.0000000000002247e-05}, {'diff': 3.0430000000001428e-05}, {'diff': 2.9514000000001317e-05}, {'diff': 3.0181000000000652e-05}, {'diff': 2.9500000000001747e-...</msg>
<status status="PASS" starttime="20201030 11:51:14.496" endtime="20201030 11:51:14.500"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:14.505" level="INFO">${ACCURACY} = {'diff': [3.0110999999999333e-05, 3.0000000000002247e-05, 3.0430000000001428e-05, 2.9514000000001317e-05, 3.0181000000000652e-05, 2.9500000000001747e-05, 2.9528000000000887e-05, 3.0416999999997862e-05...</msg>
<status status="PASS" starttime="20201030 11:51:14.500" endtime="20201030 11:51:14.505"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.509" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201030 11:51:14.508" endtime="20201030 11:51:14.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.512" level="INFO">VALUE: [3.0110999999999333e-05, 3.0000000000002247e-05, 3.0430000000001428e-05, 2.9514000000001317e-05, 3.0181000000000652e-05, 2.9500000000001747e-05, 2.9528000000000887e-05, 3.0416999999997862e-05, 3.019399999999728e-05, 2.9736000000002427e-05, 2.948700000000165e-05, 2.9500000000001747e-05, 3.0402999999998293e-05, 2.9514000000001317e-05, 2.97370000000019e-05, 3.0166999999997612e-05, 3.0180000000001178e-05, 2.9528000000000887e-05, 3.045900000000004e-05, 3.019500000000022e-05, 3.0417000000001332e-05, 2.997299999999911e-05, 3.0430000000001428e-05, 3.0430000000001428e-05, 2.9527999999997417e-05, 3.0431000000000902e-05, 3.0431000000000902e-05, 3.017999999999771e-05, 2.9471999999999138e-05, 3.0181000000000652e-05, 3.0374999999999153e-05, 2.9500000000001747e-05, 2.9638999999997973e-05, 3.0472000000000138e-05, 3.019500000000022e-05, 2.9722000000002857e-05, 3.022299999999936e-05, 3.0208000000000318e-05, 3.0194000000000748e-05, 2.9500000000001747e-05, 2.9750000000001997e-05, 3.022299999999936e-05, 2.9471999999999138e-05, 2.9653000000001012e-05, 3.0444000000000998e-05, 3.0403000000001762e-05, 3.017999999999771e-05, 3.0431000000000902e-05, 2.9721999999999388e-05, 3.0402999999998293e-05]</msg>
<status status="PASS" starttime="20201030 11:51:14.510" endtime="20201030 11:51:14.513"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.506" endtime="20201030 11:51:14.513"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:14.517" endtime="20201030 11:51:14.537"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.516" endtime="20201030 11:51:14.537"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.514" endtime="20201030 11:51:14.537"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.158" endtime="20201030 11:51:14.538"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.157" endtime="20201030 11:51:14.538"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.547" endtime="20201030 11:51:14.563"></status>
</kw>
<msg timestamp="20201030 11:51:14.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:14.545" endtime="20201030 11:51:14.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:14.564" endtime="20201030 11:51:14.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.567" endtime="20201030 11:51:14.568"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.543" endtime="20201030 11:51:14.569"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.540" endtime="20201030 11:51:14.569"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.576" endtime="20201030 11:51:14.882"></status>
</kw>
<msg timestamp="20201030 11:51:14.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022433056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022467528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:14.574" endtime="20201030 11:51:14.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022433056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022467528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:14.886" endtime="20201030 11:51:14.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.895" endtime="20201030 11:51:14.897"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.572" endtime="20201030 11:51:14.897"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.570" endtime="20201030 11:51:14.898"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:14.902" level="INFO">${RESULT} = [{'diff': 3.447200000000067e-05}, {'diff': 3.4445000000001e-05}, {'diff': 3.365300000000154e-05}, {'diff': 3.359799999999927e-05}, {'diff': 3.374999999999906e-05}, {'diff': 3.397299999999964e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:51:14.898" endtime="20201030 11:51:14.902"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:14.906" level="INFO">${ACCURACY} = {'diff': [3.447200000000067e-05, 3.4445000000001e-05, 3.365300000000154e-05, 3.359799999999927e-05, 3.374999999999906e-05, 3.397299999999964e-05, 3.3847000000000044e-05, 3.4138999999999003e-05, 3.3999...</msg>
<status status="PASS" starttime="20201030 11:51:14.903" endtime="20201030 11:51:14.906"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.911" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201030 11:51:14.910" endtime="20201030 11:51:14.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.913" level="INFO">VALUE: [3.447200000000067e-05, 3.4445000000001e-05, 3.365300000000154e-05, 3.359799999999927e-05, 3.374999999999906e-05, 3.397299999999964e-05, 3.3847000000000044e-05, 3.4138999999999003e-05, 3.399999999999931e-05, 3.3818999999997434e-05, 3.390199999999885e-05, 3.3776999999998725e-05, 3.3568999999997184e-05, 3.3847000000000044e-05, 3.361100000000283e-05, 3.3860999999999614e-05, 3.3583000000000224e-05, 3.363900000000197e-05, 3.3888999999998753e-05, 3.4055000000001584e-05, 3.372199999999992e-05, 3.4040999999998545e-05, 3.373599999999949e-05, 3.402799999999845e-05, 3.3847000000000044e-05, 3.4054999999998115e-05, 3.370899999999982e-05, 3.374999999999906e-05, 3.394400000000103e-05, 3.366700000000111e-05, 3.372199999999992e-05, 3.399999999999931e-05, 3.3860999999999614e-05, 3.3596999999999794e-05, 3.368100000000068e-05, 3.3833000000000474e-05, 3.391699999999789e-05, 3.365299999999807e-05, 3.390299999999832e-05, 3.4097000000000294e-05, 3.39450000000005e-05, 3.407000000000063e-05, 3.4097000000000294e-05, 3.368100000000068e-05, 3.3860999999999614e-05, 3.386199999999909e-05, 3.366700000000111e-05, 3.391700000000136e-05, 3.372299999999939e-05, 3.3833000000000474e-05]</msg>
<status status="PASS" starttime="20201030 11:51:14.912" endtime="20201030 11:51:14.914"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.907" endtime="20201030 11:51:14.915"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:14.919" endtime="20201030 11:51:14.938"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.917" endtime="20201030 11:51:14.939"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.916" endtime="20201030 11:51:14.939"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.539" endtime="20201030 11:51:14.939"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.538" endtime="20201030 11:51:14.939"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.949" endtime="20201030 11:51:14.965"></status>
</kw>
<msg timestamp="20201030 11:51:14.965" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:14.947" endtime="20201030 11:51:14.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.968" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:14.966" endtime="20201030 11:51:14.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.969" endtime="20201030 11:51:14.970"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.944" endtime="20201030 11:51:14.971"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.942" endtime="20201030 11:51:14.971"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.978" endtime="20201030 11:51:15.264"></status>
</kw>
<msg timestamp="20201030 11:51:15.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023470972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023506139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:14.976" endtime="20201030 11:51:15.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023470972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023506139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:15.268" endtime="20201030 11:51:15.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.277" endtime="20201030 11:51:15.279"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.974" endtime="20201030 11:51:15.279"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.972" endtime="20201030 11:51:15.280"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:15.284" level="INFO">${RESULT} = [{'diff': 3.5166999999999143e-05}, {'diff': 3.497200000000117e-05}, {'diff': 3.4861000000000614e-05}, {'diff': 3.495900000000107e-05}, {'diff': 3.497300000000064e-05}, {'diff': 3.511200000000034e-05},...</msg>
<status status="PASS" starttime="20201030 11:51:15.280" endtime="20201030 11:51:15.284"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:15.288" level="INFO">${ACCURACY} = {'diff': [3.5166999999999143e-05, 3.497200000000117e-05, 3.4861000000000614e-05, 3.495900000000107e-05, 3.497300000000064e-05, 3.511200000000034e-05, 3.482000000000138e-05, 3.4902999999999323e-05, 3.5...</msg>
<status status="PASS" starttime="20201030 11:51:15.285" endtime="20201030 11:51:15.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.293" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201030 11:51:15.292" endtime="20201030 11:51:15.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.295" level="INFO">VALUE: [3.5166999999999143e-05, 3.497200000000117e-05, 3.4861000000000614e-05, 3.495900000000107e-05, 3.497300000000064e-05, 3.511200000000034e-05, 3.482000000000138e-05, 3.4902999999999323e-05, 3.511200000000034e-05, 3.47779999999992e-05, 3.491699999999889e-05, 3.492999999999899e-05, 3.482000000000138e-05, 3.492999999999899e-05, 3.5040999999999545e-05, 3.513800000000053e-05, 3.4652999999999073e-05, 3.494399999999856e-05, 3.5082999999998254e-05, 3.470799999999788e-05, 3.4847000000001044e-05, 3.4611000000000364e-05, 3.5068999999998685e-05, 3.498600000000074e-05, 3.466699999999864e-05, 3.49580000000016e-05, 3.475000000000006e-05, 3.495799999999813e-05, 3.4888999999999754e-05, 3.466699999999864e-05, 3.49580000000016e-05, 3.5096999999997824e-05, 3.484800000000052e-05, 3.4847000000001044e-05, 3.480600000000181e-05, 3.480599999999834e-05, 3.469399999999831e-05, 3.498600000000074e-05, 3.473600000000049e-05, 3.457000000000113e-05, 3.4860999999997144e-05, 3.4777000000003194e-05, 3.480600000000181e-05, 3.482000000000138e-05, 3.469400000000178e-05, 3.472200000000092e-05, 3.480599999999834e-05, 3.475000000000006e-05, 3.482000000000138e-05, 3.502800000000292e-05]</msg>
<status status="PASS" starttime="20201030 11:51:15.294" endtime="20201030 11:51:15.297"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.289" endtime="20201030 11:51:15.298"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:15.301" endtime="20201030 11:51:15.321"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.300" endtime="20201030 11:51:15.321"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.299" endtime="20201030 11:51:15.322"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.940" endtime="20201030 11:51:15.322"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.940" endtime="20201030 11:51:15.322"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.332" endtime="20201030 11:51:15.348"></status>
</kw>
<msg timestamp="20201030 11:51:15.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:15.331" endtime="20201030 11:51:15.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.351" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:15.349" endtime="20201030 11:51:15.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.352" endtime="20201030 11:51:15.354"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.327" endtime="20201030 11:51:15.354"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.325" endtime="20201030 11:51:15.355"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.362" endtime="20201030 11:51:15.649"></status>
</kw>
<msg timestamp="20201030 11:51:15.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0232815, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023318125, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:51:15.360" endtime="20201030 11:51:15.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0232815, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023318125, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:51:15.653" endtime="20201030 11:51:15.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.662" endtime="20201030 11:51:15.664"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.357" endtime="20201030 11:51:15.664"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.356" endtime="20201030 11:51:15.665"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:15.669" level="INFO">${RESULT} = [{'diff': 3.6624999999998464e-05}, {'diff': 3.59580000000026e-05}, {'diff': 3.575000000000106e-05}, {'diff': 3.6125000000001434e-05}, {'diff': 3.6139000000001004e-05}, {'diff': 3.5527000000000475e-05}...</msg>
<status status="PASS" starttime="20201030 11:51:15.665" endtime="20201030 11:51:15.669"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:15.674" level="INFO">${ACCURACY} = {'diff': [3.6624999999998464e-05, 3.59580000000026e-05, 3.575000000000106e-05, 3.6125000000001434e-05, 3.6139000000001004e-05, 3.5527000000000475e-05, 3.572200000000192e-05, 3.5818999999999435e-05, 3....</msg>
<status status="PASS" starttime="20201030 11:51:15.670" endtime="20201030 11:51:15.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.679" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201030 11:51:15.678" endtime="20201030 11:51:15.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.681" level="INFO">VALUE: [3.6624999999998464e-05, 3.59580000000026e-05, 3.575000000000106e-05, 3.6125000000001434e-05, 3.6139000000001004e-05, 3.5527000000000475e-05, 3.572200000000192e-05, 3.5818999999999435e-05, 3.5875000000001184e-05, 3.572199999999845e-05, 3.5889000000000754e-05, 3.554199999999952e-05, 3.5625000000000934e-05, 3.57780000000002e-05, 3.554199999999952e-05, 3.5582999999998755e-05, 3.573600000000149e-05, 3.579199999999977e-05, 3.573600000000149e-05, 3.580599999999934e-05, 3.572200000000192e-05, 3.5860999999998144e-05, 3.576400000000063e-05, 3.5596999999998324e-05, 3.5861000000001614e-05, 3.598599999999827e-05, 3.6082999999999255e-05, 3.570899999999835e-05, 3.5847000000002044e-05, 3.6124999999997964e-05, 3.569500000000225e-05, 3.6138999999997534e-05, 3.6068999999999685e-05, 3.581999999999891e-05, 3.600000000000131e-05, 3.580599999999934e-05, 3.570900000000182e-05, 3.581999999999891e-05, 3.588800000000128e-05, 3.6027000000000975e-05, 3.6055000000000115e-05, 3.6027000000000975e-05, 3.6026999999997505e-05, 3.5832999999999005e-05, 3.5610999999997894e-05, 3.5791000000000295e-05, 3.5846999999998574e-05, 3.6096999999998824e-05, 3.6096999999998824e-05, 3.5860999999998144e-05]</msg>
<status status="PASS" starttime="20201030 11:51:15.680" endtime="20201030 11:51:15.682"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.675" endtime="20201030 11:51:15.683"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:15.687" endtime="20201030 11:51:15.706"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.685" endtime="20201030 11:51:15.707"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.684" endtime="20201030 11:51:15.707"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.323" endtime="20201030 11:51:15.707"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.322" endtime="20201030 11:51:15.707"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.716" endtime="20201030 11:51:15.732"></status>
</kw>
<msg timestamp="20201030 11:51:15.733" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:15.715" endtime="20201030 11:51:15.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:15.734" endtime="20201030 11:51:15.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.736" endtime="20201030 11:51:15.738"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.712" endtime="20201030 11:51:15.739"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.710" endtime="20201030 11:51:15.739"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.746" endtime="20201030 11:51:16.033"></status>
</kw>
<msg timestamp="20201030 11:51:16.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022270903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022308444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:15.744" endtime="20201030 11:51:16.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022270903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022308444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:16.038" endtime="20201030 11:51:16.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.046" endtime="20201030 11:51:16.048"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.742" endtime="20201030 11:51:16.049"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.740" endtime="20201030 11:51:16.049"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:16.053" level="INFO">${RESULT} = [{'diff': 3.7540999999998576e-05}, {'diff': 3.69719999999997e-05}, {'diff': 3.6791000000001295e-05}, {'diff': 3.7054999999997645e-05}, {'diff': 3.6653000000001074e-05}, {'diff': 3.695800000000013e-05}...</msg>
<status status="PASS" starttime="20201030 11:51:16.050" endtime="20201030 11:51:16.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:16.058" level="INFO">${ACCURACY} = {'diff': [3.7540999999998576e-05, 3.69719999999997e-05, 3.6791000000001295e-05, 3.7054999999997645e-05, 3.6653000000001074e-05, 3.695800000000013e-05, 3.6846999999999575e-05, 3.669400000000031e-05, 3....</msg>
<status status="PASS" starttime="20201030 11:51:16.054" endtime="20201030 11:51:16.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.062" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201030 11:51:16.061" endtime="20201030 11:51:16.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.065" level="INFO">VALUE: [3.7540999999998576e-05, 3.69719999999997e-05, 3.6791000000001295e-05, 3.7054999999997645e-05, 3.6653000000001074e-05, 3.695800000000013e-05, 3.6846999999999575e-05, 3.669400000000031e-05, 3.6597000000002794e-05, 3.6639000000001504e-05, 3.705599999999712e-05, 3.6624999999998464e-05, 3.677799999999773e-05, 3.7111000000002864e-05, 3.693000000000099e-05, 3.669499999999978e-05, 3.6874999999998714e-05, 3.7139000000002004e-05, 3.6638999999998034e-05, 3.7111000000002864e-05, 3.6681000000000213e-05, 3.7096999999999825e-05, 3.6931000000000463e-05, 3.679200000000077e-05, 3.669499999999978e-05, 3.704200000000102e-05, 3.698599999999927e-05, 3.6624999999998464e-05, 3.6903000000001324e-05, 3.69589999999996e-05, 3.679200000000077e-05, 3.6888999999998284e-05, 3.707000000000016e-05, 3.704200000000102e-05, 3.6653000000001074e-05, 3.655600000000009e-05, 3.698599999999927e-05, 3.7139000000002004e-05, 3.704200000000102e-05, 3.668000000000074e-05, 3.6860999999999144e-05, 3.694400000000056e-05, 3.6776999999998256e-05, 3.6819000000000435e-05, 3.693000000000099e-05, 3.693000000000099e-05, 3.6569000000000185e-05, 3.6638999999998034e-05, 3.6861000000002614e-05, 3.67780000000012e-05]</msg>
<status status="PASS" starttime="20201030 11:51:16.063" endtime="20201030 11:51:16.070"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.058" endtime="20201030 11:51:16.071"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:16.075" endtime="20201030 11:51:16.094"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.073" endtime="20201030 11:51:16.095"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.072" endtime="20201030 11:51:16.095"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.708" endtime="20201030 11:51:16.095"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.708" endtime="20201030 11:51:16.096"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.104" endtime="20201030 11:51:16.121"></status>
</kw>
<msg timestamp="20201030 11:51:16.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:16.103" endtime="20201030 11:51:16.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:16.123" endtime="20201030 11:51:16.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.125" endtime="20201030 11:51:16.127"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.100" endtime="20201030 11:51:16.128"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.098" endtime="20201030 11:51:16.128"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.136" endtime="20201030 11:51:16.423"></status>
</kw>
<msg timestamp="20201030 11:51:16.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023110833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02314875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:16.134" endtime="20201030 11:51:16.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023110833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02314875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:16.427" endtime="20201030 11:51:16.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.436" endtime="20201030 11:51:16.438"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.132" endtime="20201030 11:51:16.438"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.129" endtime="20201030 11:51:16.439"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:16.443" level="INFO">${RESULT} = [{'diff': 3.7916999999998424e-05}, {'diff': 3.7888999999999284e-05}, {'diff': 3.780600000000134e-05}, {'diff': 3.801399999999941e-05}, {'diff': 3.801399999999941e-05}, {'diff': 3.8111000000000395e-05}...</msg>
<status status="PASS" starttime="20201030 11:51:16.439" endtime="20201030 11:51:16.443"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:16.447" level="INFO">${ACCURACY} = {'diff': [3.7916999999998424e-05, 3.7888999999999284e-05, 3.780600000000134e-05, 3.801399999999941e-05, 3.801399999999941e-05, 3.8111000000000395e-05, 3.757000000000066e-05, 3.807000000000116e-05, 3.7...</msg>
<status status="PASS" starttime="20201030 11:51:16.444" endtime="20201030 11:51:16.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.452" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201030 11:51:16.451" endtime="20201030 11:51:16.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.454" level="INFO">VALUE: [3.7916999999998424e-05, 3.7888999999999284e-05, 3.780600000000134e-05, 3.801399999999941e-05, 3.801399999999941e-05, 3.8111000000000395e-05, 3.757000000000066e-05, 3.807000000000116e-05, 3.773600000000002e-05, 3.77919999999983e-05, 3.784800000000005e-05, 3.8152999999999104e-05, 3.798600000000027e-05, 3.801399999999941e-05, 3.815199999999963e-05, 3.782000000000091e-05, 3.770800000000088e-05, 3.8124999999999964e-05, 3.7624999999999464e-05, 3.770799999999741e-05, 3.773600000000002e-05, 3.774999999999959e-05, 3.788799999999981e-05, 3.798600000000027e-05, 3.767999999999827e-05, 3.77919999999983e-05, 3.7652999999998604e-05, 3.7860999999996675e-05, 3.7847000000000575e-05, 3.8041000000002545e-05, 3.7610999999999895e-05, 3.8110999999996925e-05, 3.79859999999968e-05, 3.8124999999999964e-05, 3.79720000000007e-05, 3.799999999999984e-05, 3.7681000000001214e-05, 3.794400000000156e-05, 3.7833000000001005e-05, 3.7667000000001644e-05, 3.8083000000001255e-05, 3.7667000000001644e-05, 3.7945000000001033e-05, 3.8097000000000825e-05, 3.7846999999997105e-05, 3.8124999999999964e-05, 3.8111000000000395e-05, 3.7944999999997564e-05, 3.7638999999999034e-05, 3.7680999999997744e-05]</msg>
<status status="PASS" starttime="20201030 11:51:16.453" endtime="20201030 11:51:16.456"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.448" endtime="20201030 11:51:16.457"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:16.460" endtime="20201030 11:51:16.480"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.459" endtime="20201030 11:51:16.480"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.458" endtime="20201030 11:51:16.481"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.096" endtime="20201030 11:51:16.481"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.096" endtime="20201030 11:51:16.481"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.490" endtime="20201030 11:51:16.506"></status>
</kw>
<msg timestamp="20201030 11:51:16.507" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:16.489" endtime="20201030 11:51:16.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:16.508" endtime="20201030 11:51:16.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.510" endtime="20201030 11:51:16.512"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.486" endtime="20201030 11:51:16.513"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.484" endtime="20201030 11:51:16.513"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.520" endtime="20201030 11:51:16.805"></status>
</kw>
<msg timestamp="20201030 11:51:16.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022639569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022679417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:16.518" endtime="20201030 11:51:16.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022639569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022679417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:16.810" endtime="20201030 11:51:16.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.818" endtime="20201030 11:51:16.820"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.516" endtime="20201030 11:51:16.820"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.514" endtime="20201030 11:51:16.821"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:16.825" level="INFO">${RESULT} = [{'diff': 3.984800000000205e-05}, {'diff': 3.909799999999783e-05}, {'diff': 3.8625000000000465e-05}, {'diff': 3.901400000000041e-05}, {'diff': 3.85980000000008e-05}, {'diff': 3.8625000000000465e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:51:16.822" endtime="20201030 11:51:16.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:16.830" level="INFO">${ACCURACY} = {'diff': [3.984800000000205e-05, 3.909799999999783e-05, 3.8625000000000465e-05, 3.901400000000041e-05, 3.85980000000008e-05, 3.8625000000000465e-05, 3.8860999999997675e-05, 3.880599999999887e-05, 3.90...</msg>
<status status="PASS" starttime="20201030 11:51:16.826" endtime="20201030 11:51:16.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.835" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201030 11:51:16.834" endtime="20201030 11:51:16.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.838" level="INFO">VALUE: [3.984800000000205e-05, 3.909799999999783e-05, 3.8625000000000465e-05, 3.901400000000041e-05, 3.85980000000008e-05, 3.8625000000000465e-05, 3.8860999999997675e-05, 3.880599999999887e-05, 3.9027000000000506e-05, 3.8944999999998564e-05, 3.894399999999909e-05, 3.872200000000145e-05, 3.867999999999927e-05, 3.8819000000002435e-05, 3.895799999999866e-05, 3.898600000000127e-05, 3.89720000000017e-05, 3.895800000000213e-05, 3.9027000000000506e-05, 3.8818999999998965e-05, 3.9041000000000076e-05, 3.8902999999999854e-05, 3.8582999999998285e-05, 3.8610999999997425e-05, 3.902799999999998e-05, 3.8916999999999424e-05, 3.9111000000001395e-05, 3.8847000000001575e-05, 3.904199999999955e-05, 3.8569000000002185e-05, 3.8861000000001145e-05, 3.901400000000041e-05, 3.8639000000000034e-05, 3.900000000000084e-05, 3.881999999999844e-05, 3.8611000000000895e-05, 3.869400000000231e-05, 3.8958999999998134e-05, 3.854200000000252e-05, 3.905599999999912e-05, 3.8611000000000895e-05, 3.8875000000000715e-05, 3.876400000000016e-05, 3.908400000000173e-05, 3.8722999999997454e-05, 3.877799999999973e-05, 3.884800000000105e-05, 3.9125000000000965e-05, 3.891599999999995e-05, 3.873599999999755e-05]</msg>
<status status="PASS" starttime="20201030 11:51:16.836" endtime="20201030 11:51:16.838"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.831" endtime="20201030 11:51:16.839"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:16.843" endtime="20201030 11:51:16.862"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.841" endtime="20201030 11:51:16.863"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.840" endtime="20201030 11:51:16.863"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.482" endtime="20201030 11:51:16.863"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.482" endtime="20201030 11:51:16.863"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.872" endtime="20201030 11:51:16.888"></status>
</kw>
<msg timestamp="20201030 11:51:16.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:16.871" endtime="20201030 11:51:16.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.891" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:16.889" endtime="20201030 11:51:16.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.892" endtime="20201030 11:51:16.894"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.868" endtime="20201030 11:51:16.894"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.866" endtime="20201030 11:51:16.895"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.901" endtime="20201030 11:51:17.189"></status>
</kw>
<msg timestamp="20201030 11:51:17.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022154764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022194958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:16.900" endtime="20201030 11:51:17.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022154764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022194958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:17.194" endtime="20201030 11:51:17.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.202" endtime="20201030 11:51:17.204"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.897" endtime="20201030 11:51:17.205"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.895" endtime="20201030 11:51:17.205"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:17.209" level="INFO">${RESULT} = [{'diff': 4.019400000000034e-05}, {'diff': 4.020799999999991e-05}, {'diff': 3.9541000000000576e-05}, {'diff': 4.0069000000000216e-05}, {'diff': 3.9596999999998855e-05}, {'diff': 4.0096999999999355e-05...</msg>
<status status="PASS" starttime="20201030 11:51:17.206" endtime="20201030 11:51:17.209"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:17.213" level="INFO">${ACCURACY} = {'diff': [4.019400000000034e-05, 4.020799999999991e-05, 3.9541000000000576e-05, 4.0069000000000216e-05, 3.9596999999998855e-05, 4.0096999999999355e-05, 3.991600000000095e-05, 4.0096999999999355e-05, 4...</msg>
<status status="PASS" starttime="20201030 11:51:17.210" endtime="20201030 11:51:17.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.218" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201030 11:51:17.217" endtime="20201030 11:51:17.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.221" level="INFO">VALUE: [4.019400000000034e-05, 4.020799999999991e-05, 3.9541000000000576e-05, 4.0069000000000216e-05, 3.9596999999998855e-05, 4.0096999999999355e-05, 3.991600000000095e-05, 4.0096999999999355e-05, 4.002800000000098e-05, 4.0055000000000646e-05, 4.0069000000000216e-05, 4.0069000000000216e-05, 3.973600000000202e-05, 3.995799999999966e-05, 4.007000000000316e-05, 3.9861000000002145e-05, 3.9680999999999744e-05, 3.9610999999998425e-05, 3.977800000000073e-05, 3.9860999999998675e-05, 4.006999999999969e-05, 4.004200000000055e-05, 3.9596999999998855e-05, 3.976400000000116e-05, 4.002800000000098e-05, 3.9958999999999134e-05, 3.9944999999999564e-05, 3.9930999999999994e-05, 4.0167000000000674e-05, 3.976399999999769e-05, 4.009799999999883e-05, 3.980599999999987e-05, 3.980599999999987e-05, 3.99859999999988e-05, 3.976399999999769e-05, 4.0139000000001535e-05, 3.9805000000000396e-05, 3.972199999999898e-05, 4.0069000000000216e-05, 3.9582999999999285e-05, 3.9832999999999535e-05, 3.9846999999999105e-05, 3.990200000000138e-05, 4.0153000000001104e-05, 3.993000000000052e-05, 3.9625000000001465e-05, 3.9610999999998425e-05, 3.970799999999941e-05, 3.999999999999837e-05, 3.9555000000000146e-05]</msg>
<status status="PASS" starttime="20201030 11:51:17.219" endtime="20201030 11:51:17.221"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.214" endtime="20201030 11:51:17.222"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:17.226" endtime="20201030 11:51:17.245"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.224" endtime="20201030 11:51:17.246"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.223" endtime="20201030 11:51:17.246"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.864" endtime="20201030 11:51:17.247"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.864" endtime="20201030 11:51:17.247"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.256" endtime="20201030 11:51:17.275"></status>
</kw>
<msg timestamp="20201030 11:51:17.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:17.254" endtime="20201030 11:51:17.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.278" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:17.276" endtime="20201030 11:51:17.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.279" endtime="20201030 11:51:17.281"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.251" endtime="20201030 11:51:17.281"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.249" endtime="20201030 11:51:17.282"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.288" endtime="20201030 11:51:17.574"></status>
</kw>
<msg timestamp="20201030 11:51:17.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025533333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025574764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:17.287" endtime="20201030 11:51:17.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025533333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025574764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:17.579" endtime="20201030 11:51:17.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.587" endtime="20201030 11:51:17.589"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.284" endtime="20201030 11:51:17.589"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.282" endtime="20201030 11:51:17.590"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:17.594" level="INFO">${RESULT} = [{'diff': 4.1431000000001494e-05}, {'diff': 4.123600000000005e-05}, {'diff': 4.07920000000013e-05}, {'diff': 4.0833000000000536e-05}, {'diff': 4.052800000000148e-05}, {'diff': 4.0722999999999454e-05},...</msg>
<status status="PASS" starttime="20201030 11:51:17.591" endtime="20201030 11:51:17.594"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:17.598" level="INFO">${ACCURACY} = {'diff': [4.1431000000001494e-05, 4.123600000000005e-05, 4.07920000000013e-05, 4.0833000000000536e-05, 4.052800000000148e-05, 4.0722999999999454e-05, 4.054200000000105e-05, 4.0681000000000744e-05, 4.0...</msg>
<status status="PASS" starttime="20201030 11:51:17.595" endtime="20201030 11:51:17.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.603" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201030 11:51:17.602" endtime="20201030 11:51:17.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.606" level="INFO">VALUE: [4.1431000000001494e-05, 4.123600000000005e-05, 4.07920000000013e-05, 4.0833000000000536e-05, 4.052800000000148e-05, 4.0722999999999454e-05, 4.054200000000105e-05, 4.0681000000000744e-05, 4.0917000000001424e-05, 4.055599999999715e-05, 4.076399999999869e-05, 4.0653000000001605e-05, 4.054199999999758e-05, 4.1167000000001674e-05, 4.0402999999997885e-05, 4.073600000000302e-05, 4.0860999999999675e-05, 4.084799999999958e-05, 4.069400000000084e-05, 4.1041000000002076e-05, 4.0596999999999855e-05, 4.0833000000000536e-05, 4.0527000000002006e-05, 4.0527000000002006e-05, 4.0610999999999425e-05, 4.090199999999891e-05, 4.074999999999912e-05, 4.104200000000155e-05, 4.1138999999999065e-05, 4.0596999999999855e-05, 4.07920000000013e-05, 4.0860999999999675e-05, 4.0790999999998356e-05, 4.049999999999887e-05, 4.0860999999999675e-05, 4.0861000000003145e-05, 4.0833000000000536e-05, 4.102800000000198e-05, 4.0860999999999675e-05, 4.080600000000087e-05, 4.0653000000001605e-05, 4.099999999999937e-05, 4.069400000000084e-05, 4.0583000000000286e-05, 4.070800000000041e-05, 4.095800000000066e-05, 4.0790999999998356e-05, 4.0652999999998135e-05, 4.079199999999783e-05, 4.1097000000000355e-05]</msg>
<status status="PASS" starttime="20201030 11:51:17.604" endtime="20201030 11:51:17.607"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.599" endtime="20201030 11:51:17.608"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:17.612" endtime="20201030 11:51:17.631"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.610" endtime="20201030 11:51:17.632"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.609" endtime="20201030 11:51:17.632"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.248" endtime="20201030 11:51:17.632"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.247" endtime="20201030 11:51:17.632"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.641" endtime="20201030 11:51:17.657"></status>
</kw>
<msg timestamp="20201030 11:51:17.658" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:17.640" endtime="20201030 11:51:17.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:17.659" endtime="20201030 11:51:17.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.662" endtime="20201030 11:51:17.663"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.637" endtime="20201030 11:51:17.664"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.635" endtime="20201030 11:51:17.664"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.671" endtime="20201030 11:51:17.957"></status>
</kw>
<msg timestamp="20201030 11:51:17.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022413944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022455861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:17.669" endtime="20201030 11:51:17.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022413944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022455861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:17.962" endtime="20201030 11:51:17.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.970" endtime="20201030 11:51:17.972"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.667" endtime="20201030 11:51:17.973"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.665" endtime="20201030 11:51:17.973"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:17.977" level="INFO">${RESULT} = [{'diff': 4.1916999999998955e-05}, {'diff': 4.2318999999998996e-05}, {'diff': 4.176399999999969e-05}, {'diff': 4.201399999999994e-05}, {'diff': 4.21799999999993e-05}, {'diff': 4.1902999999999385e-05},...</msg>
<status status="PASS" starttime="20201030 11:51:17.974" endtime="20201030 11:51:17.977"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:17.982" level="INFO">${ACCURACY} = {'diff': [4.1916999999998955e-05, 4.2318999999998996e-05, 4.176399999999969e-05, 4.201399999999994e-05, 4.21799999999993e-05, 4.1902999999999385e-05, 4.200000000000037e-05, 4.1861000000000675e-05, 4.2...</msg>
<status status="PASS" starttime="20201030 11:51:17.978" endtime="20201030 11:51:17.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.987" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201030 11:51:17.986" endtime="20201030 11:51:17.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.990" level="INFO">VALUE: [4.1916999999998955e-05, 4.2318999999998996e-05, 4.176399999999969e-05, 4.201399999999994e-05, 4.21799999999993e-05, 4.1902999999999385e-05, 4.200000000000037e-05, 4.1861000000000675e-05, 4.2083000000001786e-05, 4.2083000000001786e-05, 4.172199999999751e-05, 4.205599999999865e-05, 4.1875000000000245e-05, 4.177800000000273e-05, 4.177799999999926e-05, 4.169399999999837e-05, 4.183400000000101e-05, 4.19860000000008e-05, 4.181999999999797e-05, 4.1818999999998496e-05, 4.1804999999998926e-05, 4.1695000000001314e-05, 4.2054999999999176e-05, 4.202800000000298e-05, 4.163800000000009e-05, 4.2054999999999176e-05, 4.2097000000001356e-05, 4.1582999999997816e-05, 4.190199999999991e-05, 4.200000000000037e-05, 4.2125000000000495e-05, 4.173599999999708e-05, 4.2139000000000065e-05, 4.197200000000123e-05, 4.2069000000002216e-05, 4.2125000000000495e-05, 4.1596999999997386e-05, 4.2125000000000495e-05, 4.168000000000227e-05, 4.19860000000008e-05, 4.1709000000000884e-05, 4.1583000000001286e-05, 4.204199999999908e-05, 4.1611000000000425e-05, 4.170799999999794e-05, 4.206999999999822e-05, 4.173600000000055e-05, 4.184800000000058e-05, 4.182000000000144e-05, 4.159799999999686e-05]</msg>
<status status="PASS" starttime="20201030 11:51:17.988" endtime="20201030 11:51:17.990"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.983" endtime="20201030 11:51:17.991"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:17.995" endtime="20201030 11:51:18.014"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.993" endtime="20201030 11:51:18.015"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.992" endtime="20201030 11:51:18.015"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.633" endtime="20201030 11:51:18.016"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.633" endtime="20201030 11:51:18.016"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:18.025" endtime="20201030 11:51:18.040"></status>
</kw>
<msg timestamp="20201030 11:51:18.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:18.023" endtime="20201030 11:51:18.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:18.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:18.042" endtime="20201030 11:51:18.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:18.044" endtime="20201030 11:51:18.046"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.020" endtime="20201030 11:51:18.047"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.018" endtime="20201030 11:51:18.047"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:18.054" endtime="20201030 11:51:18.341"></status>
</kw>
<msg timestamp="20201030 11:51:18.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022260806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022303958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:18.052" endtime="20201030 11:51:18.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:18.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022260806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022303958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:18.346" endtime="20201030 11:51:18.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:18.354" endtime="20201030 11:51:18.356"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.050" endtime="20201030 11:51:18.357"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.048" endtime="20201030 11:51:18.357"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:18.361" level="INFO">${RESULT} = [{'diff': 4.315199999999769e-05}, {'diff': 4.329200000000033e-05}, {'diff': 4.302800000000051e-05}, {'diff': 4.2653000000000135e-05}, {'diff': 4.300000000000137e-05}, {'diff': 4.309799999999836e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:51:18.358" endtime="20201030 11:51:18.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:18.366" level="INFO">${ACCURACY} = {'diff': [4.315199999999769e-05, 4.329200000000033e-05, 4.302800000000051e-05, 4.2653000000000135e-05, 4.300000000000137e-05, 4.309799999999836e-05, 4.2680999999999275e-05, 4.277800000000026e-05, 4.29...</msg>
<status status="PASS" starttime="20201030 11:51:18.362" endtime="20201030 11:51:18.366"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:18.370" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201030 11:51:18.369" endtime="20201030 11:51:18.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:18.373" level="INFO">VALUE: [4.315199999999769e-05, 4.329200000000033e-05, 4.302800000000051e-05, 4.2653000000000135e-05, 4.300000000000137e-05, 4.309799999999836e-05, 4.2680999999999275e-05, 4.277800000000026e-05, 4.2903000000000385e-05, 4.2708999999998415e-05, 4.276300000000122e-05, 4.298599999999833e-05, 4.2791000000000357e-05, 4.293000000000005e-05, 4.297199999999876e-05, 4.3125000000001495e-05, 4.2875000000001245e-05, 4.3068999999999746e-05, 4.3055000000000176e-05, 4.269399999999937e-05, 4.273599999999808e-05, 4.272200000000198e-05, 4.2860999999998206e-05, 4.252800000000001e-05, 4.29999999999979e-05, 4.273600000000155e-05, 4.2596999999998386e-05, 4.2625000000000995e-05, 4.3068999999999746e-05, 4.304200000000008e-05, 4.2832999999999066e-05, 4.277800000000026e-05, 4.255599999999915e-05, 4.2625000000000995e-05, 4.256999999999872e-05, 4.2653000000000135e-05, 4.2708999999998415e-05, 4.2611000000001426e-05, 4.276400000000069e-05, 4.284800000000158e-05, 4.302700000000104e-05, 4.277800000000026e-05, 4.276300000000122e-05, 4.2958999999998665e-05, 4.2903000000000385e-05, 4.304099999999714e-05, 4.2554999999999676e-05, 4.297199999999876e-05, 4.2861000000001676e-05, 4.3012999999998e-05]</msg>
<status status="PASS" starttime="20201030 11:51:18.371" endtime="20201030 11:51:18.374"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.367" endtime="20201030 11:51:18.374"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:18.378" endtime="20201030 11:51:18.398"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.377" endtime="20201030 11:51:18.398"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.375" endtime="20201030 11:51:18.399"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.017" endtime="20201030 11:51:18.399"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.016" endtime="20201030 11:51:18.399"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:18.409" endtime="20201030 11:51:18.426"></status>
</kw>
<msg timestamp="20201030 11:51:18.426" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:18.407" endtime="20201030 11:51:18.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:18.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:18.427" endtime="20201030 11:51:18.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:18.430" endtime="20201030 11:51:18.432"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.404" endtime="20201030 11:51:18.432"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.402" endtime="20201030 11:51:18.433"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:18.440" endtime="20201030 11:51:18.727"></status>
</kw>
<msg timestamp="20201030 11:51:18.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023957806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024002542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:18.438" endtime="20201030 11:51:18.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:18.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023957806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024002542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:18.733" endtime="20201030 11:51:18.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:18.741" endtime="20201030 11:51:18.743"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.435" endtime="20201030 11:51:18.744"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.433" endtime="20201030 11:51:18.744"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:18.748" level="INFO">${RESULT} = [{'diff': 4.473600000000008e-05}, {'diff': 4.426399999999872e-05}, {'diff': 4.3610999999998956e-05}, {'diff': 4.381999999999997e-05}, {'diff': 4.4181000000000775e-05}, {'diff': 4.3917000000000955e-05}...</msg>
<status status="PASS" starttime="20201030 11:51:18.745" endtime="20201030 11:51:18.748"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:18.752" level="INFO">${ACCURACY} = {'diff': [4.473600000000008e-05, 4.426399999999872e-05, 4.3610999999998956e-05, 4.381999999999997e-05, 4.4181000000000775e-05, 4.3917000000000955e-05, 4.38060000000004e-05, 4.3917000000000955e-05, 4.4...</msg>
<status status="PASS" starttime="20201030 11:51:18.749" endtime="20201030 11:51:18.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:18.757" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201030 11:51:18.756" endtime="20201030 11:51:18.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:18.760" level="INFO">VALUE: [4.473600000000008e-05, 4.426399999999872e-05, 4.3610999999998956e-05, 4.381999999999997e-05, 4.4181000000000775e-05, 4.3917000000000955e-05, 4.38060000000004e-05, 4.3917000000000955e-05, 4.400000000000237e-05, 4.4096999999999886e-05, 4.3902999999997916e-05, 4.397199999999976e-05, 4.401399999999847e-05, 4.373599999999908e-05, 4.373599999999908e-05, 4.395800000000019e-05, 4.3653000000001135e-05, 4.379099999999789e-05, 4.38060000000004e-05, 4.398599999999933e-05, 4.373599999999908e-05, 4.4083000000000316e-05, 4.3624999999998526e-05, 4.402799999999804e-05, 4.3582999999999816e-05, 4.369400000000037e-05, 4.3667000000000705e-05, 4.3596999999999386e-05, 4.372199999999951e-05, 4.3917000000000955e-05, 4.374999999999865e-05, 4.3917000000000955e-05, 4.4138999999998596e-05, 4.3945000000000095e-05, 4.3861000000002676e-05, 4.3639000000001565e-05, 4.4138999999998596e-05, 4.3667000000000705e-05, 4.376399999999822e-05, 4.3931000000000525e-05, 4.376400000000169e-05, 4.3917000000000955e-05, 4.386199999999868e-05, 4.3902999999997916e-05, 4.36120000000019e-05, 4.3819000000000496e-05, 4.370799999999994e-05, 4.379100000000136e-05, 4.372199999999951e-05, 4.3638999999998096e-05]</msg>
<status status="PASS" starttime="20201030 11:51:18.758" endtime="20201030 11:51:18.761"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.753" endtime="20201030 11:51:18.762"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:18.766" endtime="20201030 11:51:18.785"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.764" endtime="20201030 11:51:18.786"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.763" endtime="20201030 11:51:18.786"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.400" endtime="20201030 11:51:18.786"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.399" endtime="20201030 11:51:18.787"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:18.796" endtime="20201030 11:51:18.812"></status>
</kw>
<msg timestamp="20201030 11:51:18.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:18.794" endtime="20201030 11:51:18.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:18.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:18.814" endtime="20201030 11:51:18.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:18.817" endtime="20201030 11:51:18.818"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.791" endtime="20201030 11:51:18.819"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.789" endtime="20201030 11:51:18.819"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:18.826" endtime="20201030 11:51:19.111"></status>
</kw>
<msg timestamp="20201030 11:51:19.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022599319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022644931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:18.824" endtime="20201030 11:51:19.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:19.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022599319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022644931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:19.116" endtime="20201030 11:51:19.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:19.124" endtime="20201030 11:51:19.126"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.822" endtime="20201030 11:51:19.127"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.820" endtime="20201030 11:51:19.127"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:19.132" level="INFO">${RESULT} = [{'diff': 4.561200000000043e-05}, {'diff': 4.505500000000218e-05}, {'diff': 4.5013e-05}, {'diff': 4.467999999999833e-05}, {'diff': 4.5111000000000456e-05}, {'diff': 4.494399999999815e-05}, {'diff': 4....</msg>
<status status="PASS" starttime="20201030 11:51:19.128" endtime="20201030 11:51:19.132"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:19.137" level="INFO">${ACCURACY} = {'diff': [4.561200000000043e-05, 4.505500000000218e-05, 4.5013e-05, 4.467999999999833e-05, 4.5111000000000456e-05, 4.494399999999815e-05, 4.454099999999864e-05, 4.474999999999965e-05, 4.50970000000008...</msg>
<status status="PASS" starttime="20201030 11:51:19.133" endtime="20201030 11:51:19.138"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:19.142" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201030 11:51:19.141" endtime="20201030 11:51:19.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:19.145" level="INFO">VALUE: [4.561200000000043e-05, 4.505500000000218e-05, 4.5013e-05, 4.467999999999833e-05, 4.5111000000000456e-05, 4.494399999999815e-05, 4.454099999999864e-05, 4.474999999999965e-05, 4.5097000000000886e-05, 4.4667000000001705e-05, 4.480500000000193e-05, 4.451400000000244e-05, 4.459699999999692e-05, 4.46939999999979e-05, 4.494399999999815e-05, 4.4709000000000415e-05, 4.508299999999785e-05, 4.4737000000003024e-05, 4.4666999999998236e-05, 4.505600000000165e-05, 4.474999999999965e-05, 4.4695000000000845e-05, 4.5111000000000456e-05, 4.4638999999999096e-05, 4.4597000000000386e-05, 4.4680999999997806e-05, 4.4888999999999346e-05, 4.483400000000054e-05, 4.457000000000072e-05, 4.49999999999999e-05, 4.4945000000001095e-05, 4.49999999999999e-05, 4.470800000000094e-05, 4.455600000000115e-05, 4.5166999999998736e-05, 4.466599999999876e-05, 4.49999999999999e-05, 4.480499999999846e-05, 4.4847000000000636e-05, 4.4597000000000386e-05, 4.4555000000001677e-05, 4.494400000000162e-05, 4.502800000000251e-05, 4.5097000000000886e-05, 4.482000000000097e-05, 4.475000000000312e-05, 4.507000000000122e-05, 4.4902999999998916e-05, 4.4888999999999346e-05, 4.507000000000122e-05]</msg>
<status status="PASS" starttime="20201030 11:51:19.143" endtime="20201030 11:51:19.146"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.138" endtime="20201030 11:51:19.146"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:19.150" endtime="20201030 11:51:19.169"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.148" endtime="20201030 11:51:19.170"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.147" endtime="20201030 11:51:19.170"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.788" endtime="20201030 11:51:19.171"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.787" endtime="20201030 11:51:19.171"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:19.180" endtime="20201030 11:51:19.196"></status>
</kw>
<msg timestamp="20201030 11:51:19.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:19.178" endtime="20201030 11:51:19.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:19.199" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:19.198" endtime="20201030 11:51:19.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:19.200" endtime="20201030 11:51:19.202"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.176" endtime="20201030 11:51:19.202"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.173" endtime="20201030 11:51:19.203"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:19.210" endtime="20201030 11:51:19.498"></status>
</kw>
<msg timestamp="20201030 11:51:19.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022215875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022262556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:19.208" endtime="20201030 11:51:19.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:19.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022215875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022262556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:19.502" endtime="20201030 11:51:19.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:19.510" endtime="20201030 11:51:19.512"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.205" endtime="20201030 11:51:19.513"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.203" endtime="20201030 11:51:19.513"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:19.517" level="INFO">${RESULT} = [{'diff': 4.6680999999999806e-05}, {'diff': 4.5987000000000805e-05}, {'diff': 4.575000000000065e-05}, {'diff': 4.566599999999976e-05}, {'diff': 4.604100000000014e-05}, {'diff': 4.590200000000044e-05},...</msg>
<status status="PASS" starttime="20201030 11:51:19.514" endtime="20201030 11:51:19.518"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:19.522" level="INFO">${ACCURACY} = {'diff': [4.6680999999999806e-05, 4.5987000000000805e-05, 4.575000000000065e-05, 4.566599999999976e-05, 4.604100000000014e-05, 4.590200000000044e-05, 4.555500000000268e-05, 4.586099999999774e-05, 4.58...</msg>
<status status="PASS" starttime="20201030 11:51:19.518" endtime="20201030 11:51:19.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:19.526" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201030 11:51:19.525" endtime="20201030 11:51:19.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:19.529" level="INFO">VALUE: [4.6680999999999806e-05, 4.5987000000000805e-05, 4.575000000000065e-05, 4.566599999999976e-05, 4.604100000000014e-05, 4.590200000000044e-05, 4.555500000000268e-05, 4.586099999999774e-05, 4.5833000000002067e-05, 4.602800000000004e-05, 4.601400000000047e-05, 4.60000000000009e-05, 4.5652999999999666e-05, 4.5625000000000526e-05, 4.561200000000043e-05, 4.5916999999999486e-05, 4.5916999999999486e-05, 4.551399999999997e-05, 4.5625000000000526e-05, 4.6111000000001456e-05, 4.5694999999998376e-05, 4.5611000000000956e-05, 4.583400000000154e-05, 4.595799999999872e-05, 4.608400000000179e-05, 4.58060000000024e-05, 4.602800000000004e-05, 4.583400000000154e-05, 4.556999999999825e-05, 4.607000000000222e-05, 4.552799999999954e-05, 4.606999999999875e-05, 4.566599999999976e-05, 4.576299999999728e-05, 4.598600000000133e-05, 4.584699999999817e-05, 4.5625000000000526e-05, 4.592999999999958e-05, 4.575000000000065e-05, 4.591600000000001e-05, 4.576400000000022e-05, 4.5625000000000526e-05, 4.5597000000001386e-05, 4.5875000000000776e-05, 4.602800000000004e-05, 4.5639000000000096e-05, 4.580499999999946e-05, 4.58329999999986e-05, 4.598600000000133e-05, 4.56939999999989e-05]</msg>
<status status="PASS" starttime="20201030 11:51:19.527" endtime="20201030 11:51:19.531"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.523" endtime="20201030 11:51:19.531"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:19.535" endtime="20201030 11:51:19.555"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.534" endtime="20201030 11:51:19.555"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.532" endtime="20201030 11:51:19.556"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.172" endtime="20201030 11:51:19.556"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.171" endtime="20201030 11:51:19.556"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:19.565" endtime="20201030 11:51:19.583"></status>
</kw>
<msg timestamp="20201030 11:51:19.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:19.563" endtime="20201030 11:51:19.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:19.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:19.584" endtime="20201030 11:51:19.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:19.587" endtime="20201030 11:51:19.588"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.561" endtime="20201030 11:51:19.589"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.559" endtime="20201030 11:51:19.589"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:19.596" endtime="20201030 11:51:19.883"></status>
</kw>
<msg timestamp="20201030 11:51:19.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023146431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023193944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:19.595" endtime="20201030 11:51:19.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:19.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023146431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023193944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:19.887" endtime="20201030 11:51:19.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:19.896" endtime="20201030 11:51:19.898"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.592" endtime="20201030 11:51:19.898"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.590" endtime="20201030 11:51:19.899"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:19.903" level="INFO">${RESULT} = [{'diff': 4.75130000000025e-05}, {'diff': 4.738800000000237e-05}, {'diff': 4.672199999999904e-05}, {'diff': 4.687499999999831e-05}, {'diff': 4.6861000000002206e-05}, {'diff': 4.666600000000076e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:19.899" endtime="20201030 11:51:19.903"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:19.907" level="INFO">${ACCURACY} = {'diff': [4.75130000000025e-05, 4.738800000000237e-05, 4.672199999999904e-05, 4.687499999999831e-05, 4.6861000000002206e-05, 4.666600000000076e-05, 4.6917000000000486e-05, 4.679200000000036e-05, 4.673...</msg>
<status status="PASS" starttime="20201030 11:51:19.904" endtime="20201030 11:51:19.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:19.912" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201030 11:51:19.910" endtime="20201030 11:51:19.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:19.914" level="INFO">VALUE: [4.75130000000025e-05, 4.738800000000237e-05, 4.672199999999904e-05, 4.687499999999831e-05, 4.6861000000002206e-05, 4.666600000000076e-05, 4.6917000000000486e-05, 4.679200000000036e-05, 4.673599999999861e-05, 4.7013999999998e-05, 4.709699999999942e-05, 4.673599999999861e-05, 4.694400000000015e-05, 4.6847000000002637e-05, 4.659699999999892e-05, 4.711099999999899e-05, 4.705600000000018e-05, 4.6931000000000056e-05, 4.680599999999993e-05, 4.659699999999892e-05, 4.705499999999724e-05, 4.679199999999689e-05, 4.655599999999968e-05, 4.674999999999818e-05, 4.70000000000019e-05, 4.702800000000104e-05, 4.712499999999856e-05, 4.6931000000000056e-05, 4.70000000000019e-05, 4.686099999999874e-05, 4.66529999999972e-05, 4.676300000000175e-05, 4.6931000000000056e-05, 4.6486999999997836e-05, 4.704200000000061e-05, 4.680500000000046e-05, 4.654100000000064e-05, 4.695800000000319e-05, 4.697199999999929e-05, 4.677799999999732e-05, 4.652700000000107e-05, 4.701400000000147e-05, 4.680500000000046e-05, 4.695800000000319e-05, 4.711099999999899e-05, 4.708299999999985e-05, 4.6944999999999626e-05, 4.7167000000000736e-05, 4.68199999999995e-05, 4.706900000000028e-05]</msg>
<status status="PASS" starttime="20201030 11:51:19.913" endtime="20201030 11:51:19.916"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.908" endtime="20201030 11:51:19.916"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:19.920" endtime="20201030 11:51:19.940"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.919" endtime="20201030 11:51:19.940"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.917" endtime="20201030 11:51:19.941"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.557" endtime="20201030 11:51:19.941"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.556" endtime="20201030 11:51:19.941"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:19.950" endtime="20201030 11:51:19.966"></status>
</kw>
<msg timestamp="20201030 11:51:19.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:19.948" endtime="20201030 11:51:19.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:19.969" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:19.968" endtime="20201030 11:51:19.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:19.971" endtime="20201030 11:51:19.972"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.946" endtime="20201030 11:51:19.973"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.944" endtime="20201030 11:51:19.973"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:19.980" endtime="20201030 11:51:20.266"></status>
</kw>
<msg timestamp="20201030 11:51:20.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022350681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022399111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:19.978" endtime="20201030 11:51:20.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:20.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022350681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022399111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:20.271" endtime="20201030 11:51:20.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:20.279" endtime="20201030 11:51:20.281"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.976" endtime="20201030 11:51:20.281"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.974" endtime="20201030 11:51:20.282"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:20.286" level="INFO">${RESULT} = [{'diff': 4.842999999999861e-05}, {'diff': 4.813899999999913e-05}, {'diff': 4.762499999999906e-05}, {'diff': 4.8013999999999e-05}, {'diff': 4.773599999999961e-05}, {'diff': 4.76940000000009e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 11:51:20.283" endtime="20201030 11:51:20.286"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:20.291" level="INFO">${ACCURACY} = {'diff': [4.842999999999861e-05, 4.813899999999913e-05, 4.762499999999906e-05, 4.8013999999999e-05, 4.773599999999961e-05, 4.76940000000009e-05, 4.761099999999949e-05, 4.806899999999781e-05, 4.8083000...</msg>
<status status="PASS" starttime="20201030 11:51:20.287" endtime="20201030 11:51:20.291"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:20.296" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201030 11:51:20.295" endtime="20201030 11:51:20.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:20.298" level="INFO">VALUE: [4.842999999999861e-05, 4.813899999999913e-05, 4.762499999999906e-05, 4.8013999999999e-05, 4.773599999999961e-05, 4.76940000000009e-05, 4.761099999999949e-05, 4.806899999999781e-05, 4.808300000000085e-05, 4.787499999999931e-05, 4.759699999999992e-05, 4.766600000000176e-05, 4.791699999999802e-05, 4.793099999999759e-05, 4.802700000000257e-05, 4.8125000000003026e-05, 4.757000000000025e-05, 4.773599999999961e-05, 4.7639000000002096e-05, 4.799999999999943e-05, 4.791600000000201e-05, 4.7653000000001666e-05, 4.805600000000118e-05, 4.762499999999906e-05, 4.794399999999768e-05, 4.78330000000006e-05, 4.784700000000017e-05, 4.768000000000133e-05, 4.797200000000029e-05, 4.772200000000004e-05, 4.811099999999999e-05, 4.776399999999875e-05, 4.805499999999824e-05, 4.762499999999906e-05, 4.76529999999982e-05, 4.772200000000004e-05, 4.809700000000042e-05, 4.801400000000247e-05, 4.790299999999845e-05, 4.781899999999756e-05, 4.777799999999832e-05, 4.751400000000197e-05, 4.779200000000136e-05, 4.780600000000093e-05, 4.7903000000001916e-05, 4.7695000000000376e-05, 4.804200000000161e-05, 4.811099999999999e-05, 4.759799999999939e-05, 4.8013999999999e-05]</msg>
<status status="PASS" starttime="20201030 11:51:20.297" endtime="20201030 11:51:20.299"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.292" endtime="20201030 11:51:20.300"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:20.304" endtime="20201030 11:51:20.323"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.302" endtime="20201030 11:51:20.324"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.301" endtime="20201030 11:51:20.324"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.942" endtime="20201030 11:51:20.324"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.941" endtime="20201030 11:51:20.324"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:20.334" endtime="20201030 11:51:20.351"></status>
</kw>
<msg timestamp="20201030 11:51:20.351" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:20.333" endtime="20201030 11:51:20.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:20.354" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:20.352" endtime="20201030 11:51:20.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:20.355" endtime="20201030 11:51:20.357"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.329" endtime="20201030 11:51:20.357"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.327" endtime="20201030 11:51:20.358"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:20.364" endtime="20201030 11:51:20.652"></status>
</kw>
<msg timestamp="20201030 11:51:20.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023544833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023593764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:20.363" endtime="20201030 11:51:20.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:20.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023544833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023593764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:20.656" endtime="20201030 11:51:20.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:20.664" endtime="20201030 11:51:20.666"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.360" endtime="20201030 11:51:20.667"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.358" endtime="20201030 11:51:20.667"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:20.671" level="INFO">${RESULT} = [{'diff': 4.893099999999859e-05}, {'diff': 4.938900000000038e-05}, {'diff': 4.884800000000064e-05}, {'diff': 4.86529999999992e-05}, {'diff': 4.905599999999871e-05}, {'diff': 4.891699999999902e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:20.668" endtime="20201030 11:51:20.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:20.676" level="INFO">${ACCURACY} = {'diff': [4.893099999999859e-05, 4.938900000000038e-05, 4.884800000000064e-05, 4.86529999999992e-05, 4.905599999999871e-05, 4.891699999999902e-05, 4.902799999999957e-05, 4.861100000000049e-05, 4.89730...</msg>
<status status="PASS" starttime="20201030 11:51:20.672" endtime="20201030 11:51:20.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:20.680" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201030 11:51:20.679" endtime="20201030 11:51:20.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:20.683" level="INFO">VALUE: [4.893099999999859e-05, 4.938900000000038e-05, 4.884800000000064e-05, 4.86529999999992e-05, 4.905599999999871e-05, 4.891699999999902e-05, 4.902799999999957e-05, 4.861100000000049e-05, 4.8973000000000766e-05, 4.897200000000129e-05, 4.861099999999702e-05, 4.902799999999957e-05, 4.895799999999825e-05, 4.884700000000117e-05, 4.895799999999825e-05, 4.909700000000142e-05, 4.876399999999975e-05, 4.909700000000142e-05, 4.897200000000129e-05, 4.908299999999838e-05, 4.884700000000117e-05, 4.877800000000279e-05, 4.863899999999963e-05, 4.872199999999757e-05, 4.88330000000016e-05, 4.893000000000258e-05, 4.911099999999752e-05, 4.877799999999932e-05, 4.855599999999821e-05, 4.8653000000002666e-05, 4.852800000000254e-05, 4.876399999999975e-05, 4.862500000000006e-05, 4.906899999999881e-05, 4.8681000000001806e-05, 4.887500000000031e-05, 4.866699999999877e-05, 4.8709000000000946e-05, 4.8681000000001806e-05, 4.863899999999963e-05, 4.8707999999998e-05, 4.913800000000065e-05, 4.8695000000001376e-05, 4.880599999999846e-05, 4.880499999999899e-05, 4.911100000000099e-05, 4.912500000000056e-05, 4.861100000000049e-05, 4.872200000000104e-05, 4.904099999999967e-05]</msg>
<status status="PASS" starttime="20201030 11:51:20.681" endtime="20201030 11:51:20.684"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.677" endtime="20201030 11:51:20.684"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:20.688" endtime="20201030 11:51:20.708"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.687" endtime="20201030 11:51:20.708"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.685" endtime="20201030 11:51:20.708"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.325" endtime="20201030 11:51:20.709"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.325" endtime="20201030 11:51:20.709"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:20.718" endtime="20201030 11:51:20.738"></status>
</kw>
<msg timestamp="20201030 11:51:20.739" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:20.716" endtime="20201030 11:51:20.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:20.741" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:20.740" endtime="20201030 11:51:20.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:20.742" endtime="20201030 11:51:20.744"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.714" endtime="20201030 11:51:20.745"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.711" endtime="20201030 11:51:20.745"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:20.752" endtime="20201030 11:51:21.038"></status>
</kw>
<msg timestamp="20201030 11:51:21.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025550278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025600208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:20.750" endtime="20201030 11:51:21.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:21.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025550278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025600208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:21.042" endtime="20201030 11:51:21.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:21.050" endtime="20201030 11:51:21.052"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.748" endtime="20201030 11:51:21.053"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.746" endtime="20201030 11:51:21.053"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:21.057" level="INFO">${RESULT} = [{'diff': 4.993000000000011e-05}, {'diff': 5.011100000000199e-05}, {'diff': 4.962500000000106e-05}, {'diff': 5.005500000000024e-05}, {'diff': 4.986100000000174e-05}, {'diff': 4.979199999999989e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:21.054" endtime="20201030 11:51:21.057"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:21.061" level="INFO">${ACCURACY} = {'diff': [4.993000000000011e-05, 5.011100000000199e-05, 4.962500000000106e-05, 5.005500000000024e-05, 4.986100000000174e-05, 4.979199999999989e-05, 5.0151999999997754e-05, 4.994399999999968e-05, 5.011...</msg>
<status status="PASS" starttime="20201030 11:51:21.058" endtime="20201030 11:51:21.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:21.066" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201030 11:51:21.065" endtime="20201030 11:51:21.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:21.069" level="INFO">VALUE: [4.993000000000011e-05, 5.011100000000199e-05, 4.962500000000106e-05, 5.005500000000024e-05, 4.986100000000174e-05, 4.979199999999989e-05, 5.0151999999997754e-05, 4.994399999999968e-05, 5.011100000000199e-05, 4.993099999999959e-05, 4.979199999999989e-05, 5.009699999999895e-05, 4.973600000000161e-05, 4.987499999999784e-05, 4.980600000000293e-05, 4.990300000000045e-05, 4.948600000000136e-05, 4.956999999999878e-05, 4.9667000000003236e-05, 5.006999999999928e-05, 4.997199999999882e-05, 4.994499999999916e-05, 4.974999999999771e-05, 4.975000000000118e-05, 4.951399999999703e-05, 4.980499999999999e-05, 4.98469999999987e-05, 4.986100000000174e-05, 5.008299999999938e-05, 4.958300000000235e-05, 5.00270000000011e-05, 5.000000000000143e-05, 5.000000000000143e-05, 4.986099999999827e-05, 4.990300000000045e-05, 5.008299999999938e-05, 4.994499999999916e-05, 4.955499999999974e-05, 5.006899999999981e-05, 4.991700000000002e-05, 4.966699999999977e-05, 4.994399999999968e-05, 4.979199999999989e-05, 4.959799999999792e-05, 4.988900000000088e-05, 4.961100000000149e-05, 4.9667000000003236e-05, 4.968099999999934e-05, 4.963900000000063e-05, 5.006999999999928e-05]</msg>
<status status="PASS" starttime="20201030 11:51:21.067" endtime="20201030 11:51:21.077"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.062" endtime="20201030 11:51:21.077"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:21.081" endtime="20201030 11:51:21.101"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.080" endtime="20201030 11:51:21.101"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.078" endtime="20201030 11:51:21.102"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.710" endtime="20201030 11:51:21.102"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.709" endtime="20201030 11:51:21.102"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:21.111" endtime="20201030 11:51:21.128"></status>
</kw>
<msg timestamp="20201030 11:51:21.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:21.109" endtime="20201030 11:51:21.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:21.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:21.131" endtime="20201030 11:51:21.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:21.133" endtime="20201030 11:51:21.135"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.107" endtime="20201030 11:51:21.136"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.105" endtime="20201030 11:51:21.136"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:21.143" endtime="20201030 11:51:21.429"></status>
</kw>
<msg timestamp="20201030 11:51:21.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022351944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022402944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:21.141" endtime="20201030 11:51:21.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:21.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022351944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022402944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:21.433" endtime="20201030 11:51:21.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:21.441" endtime="20201030 11:51:21.443"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.138" endtime="20201030 11:51:21.444"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.137" endtime="20201030 11:51:21.444"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:21.448" level="INFO">${RESULT} = [{'diff': 5.100000000000243e-05}, {'diff': 5.088900000000188e-05}, {'diff': 5.052800000000107e-05}, {'diff': 5.056900000000031e-05}, {'diff': 5.101299999999906e-05}, {'diff': 5.098599999999939e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:21.445" endtime="20201030 11:51:21.449"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:21.454" level="INFO">${ACCURACY} = {'diff': [5.100000000000243e-05, 5.088900000000188e-05, 5.052800000000107e-05, 5.056900000000031e-05, 5.101299999999906e-05, 5.098599999999939e-05, 5.080499999999752e-05, 5.062500000000206e-05, 5.0820...</msg>
<status status="PASS" starttime="20201030 11:51:21.449" endtime="20201030 11:51:21.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:21.459" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201030 11:51:21.458" endtime="20201030 11:51:21.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:21.462" level="INFO">VALUE: [5.100000000000243e-05, 5.088900000000188e-05, 5.052800000000107e-05, 5.056900000000031e-05, 5.101299999999906e-05, 5.098599999999939e-05, 5.080499999999752e-05, 5.062500000000206e-05, 5.082000000000003e-05, 5.062499999999859e-05, 5.104199999999767e-05, 5.097199999999982e-05, 5.055499999999727e-05, 5.08469999999997e-05, 5.098599999999939e-05, 5.073599999999914e-05, 5.068100000000034e-05, 5.056999999999978e-05, 5.091700000000102e-05, 5.069400000000043e-05, 5.08469999999997e-05, 5.061099999999902e-05, 5.107000000000028e-05, 5.0708e-05, 5.06530000000012e-05, 5.098599999999939e-05, 5.090300000000145e-05, 5.080600000000046e-05, 5.109799999999942e-05, 5.058400000000282e-05, 5.09729999999993e-05, 5.088899999999841e-05, 5.054200000000064e-05, 5.058299999999988e-05, 5.073600000000261e-05, 5.10270000000021e-05, 5.061100000000249e-05, 5.112499999999909e-05, 5.083300000000013e-05, 5.0915999999998074e-05, 5.090300000000145e-05, 5.054100000000117e-05, 5.075000000000218e-05, 5.069400000000043e-05, 5.076399999999828e-05, 5.088900000000188e-05, 5.099999999999896e-05, 5.095899999999973e-05, 5.098599999999939e-05, 5.066700000000077e-05]</msg>
<status status="PASS" starttime="20201030 11:51:21.460" endtime="20201030 11:51:21.463"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.455" endtime="20201030 11:51:21.464"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:21.467" endtime="20201030 11:51:21.487"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.466" endtime="20201030 11:51:21.488"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.465" endtime="20201030 11:51:21.488"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.103" endtime="20201030 11:51:21.488"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.102" endtime="20201030 11:51:21.488"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:21.497" endtime="20201030 11:51:21.514"></status>
</kw>
<msg timestamp="20201030 11:51:21.514" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:21.496" endtime="20201030 11:51:21.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:21.517" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:21.515" endtime="20201030 11:51:21.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:21.518" endtime="20201030 11:51:21.520"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.493" endtime="20201030 11:51:21.520"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.491" endtime="20201030 11:51:21.521"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:21.527" endtime="20201030 11:51:21.815"></status>
</kw>
<msg timestamp="20201030 11:51:21.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022215347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02226725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:21.526" endtime="20201030 11:51:21.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:21.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022215347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02226725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:21.819" endtime="20201030 11:51:21.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:21.828" endtime="20201030 11:51:21.830"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.523" endtime="20201030 11:51:21.830"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.521" endtime="20201030 11:51:21.831"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:21.835" level="INFO">${RESULT} = [{'diff': 5.190299999999898e-05}, {'diff': 5.212500000000009e-05}, {'diff': 5.188899999999941e-05}, {'diff': 5.174999999999971e-05}, {'diff': 5.172200000000057e-05}, {'diff': 5.204200000000214e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:21.831" endtime="20201030 11:51:21.835"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:21.839" level="INFO">${ACCURACY} = {'diff': [5.190299999999898e-05, 5.212500000000009e-05, 5.188899999999941e-05, 5.174999999999971e-05, 5.172200000000057e-05, 5.204200000000214e-05, 5.16530000000022e-05, 5.199999999999996e-05, 5.17360...</msg>
<status status="PASS" starttime="20201030 11:51:21.836" endtime="20201030 11:51:21.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:21.844" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201030 11:51:21.843" endtime="20201030 11:51:21.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:21.846" level="INFO">VALUE: [5.190299999999898e-05, 5.212500000000009e-05, 5.188899999999941e-05, 5.174999999999971e-05, 5.172200000000057e-05, 5.204200000000214e-05, 5.16530000000022e-05, 5.199999999999996e-05, 5.173600000000014e-05, 5.187499999999984e-05, 5.165299999999873e-05, 5.181899999999809e-05, 5.2165999999999324e-05, 5.199999999999996e-05, 5.176299999999981e-05, 5.180500000000199e-05, 5.205499999999877e-05, 5.1637999999999684e-05, 5.201399999999953e-05, 5.180499999999852e-05, 5.1901999999999504e-05, 5.212500000000009e-05, 5.184800000000017e-05, 5.204100000000267e-05, 5.156899999999784e-05, 5.188899999999941e-05, 5.161100000000002e-05, 5.181899999999809e-05, 5.166700000000177e-05, 5.163899999999916e-05, 5.168099999999787e-05, 5.177800000000232e-05, 5.213899999999966e-05, 5.177800000000232e-05, 5.172300000000005e-05, 5.193099999999812e-05, 5.154199999999817e-05, 5.207000000000128e-05, 5.18470000000007e-05, 5.1708000000001e-05, 5.207000000000128e-05, 5.158400000000035e-05, 5.190300000000245e-05, 5.212500000000009e-05, 5.184800000000017e-05, 5.208400000000085e-05, 5.162499999999959e-05, 5.181900000000156e-05, 5.172200000000057e-05, 5.193000000000211e-05]</msg>
<status status="PASS" starttime="20201030 11:51:21.845" endtime="20201030 11:51:21.847"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.840" endtime="20201030 11:51:21.848"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:21.851" endtime="20201030 11:51:21.871"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.850" endtime="20201030 11:51:21.871"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.849" endtime="20201030 11:51:21.872"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.489" endtime="20201030 11:51:21.872"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.489" endtime="20201030 11:51:21.872"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:21.881" endtime="20201030 11:51:21.899"></status>
</kw>
<msg timestamp="20201030 11:51:21.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:21.880" endtime="20201030 11:51:21.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:21.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:21.900" endtime="20201030 11:51:21.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:21.903" endtime="20201030 11:51:21.905"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.877" endtime="20201030 11:51:21.905"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.875" endtime="20201030 11:51:21.906"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:21.912" endtime="20201030 11:51:22.197"></status>
</kw>
<msg timestamp="20201030 11:51:22.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022989486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023042458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:21.911" endtime="20201030 11:51:22.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:22.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022989486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023042458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:22.202" endtime="20201030 11:51:22.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:22.210" endtime="20201030 11:51:22.212"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.908" endtime="20201030 11:51:22.212"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.906" endtime="20201030 11:51:22.213"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:22.217" level="INFO">${RESULT} = [{'diff': 5.2971999999998354e-05}, {'diff': 5.343099999999962e-05}, {'diff': 5.279099999999995e-05}, {'diff': 5.305599999999924e-05}, {'diff': 5.276400000000028e-05}, {'diff': 5.2943999999999214e-05},...</msg>
<status status="PASS" starttime="20201030 11:51:22.213" endtime="20201030 11:51:22.217"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:22.221" level="INFO">${ACCURACY} = {'diff': [5.2971999999998354e-05, 5.343099999999962e-05, 5.279099999999995e-05, 5.305599999999924e-05, 5.276400000000028e-05, 5.2943999999999214e-05, 5.2971999999998354e-05, 5.315300000000023e-05, 5.2...</msg>
<status status="PASS" starttime="20201030 11:51:22.218" endtime="20201030 11:51:22.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:22.225" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201030 11:51:22.224" endtime="20201030 11:51:22.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:22.228" level="INFO">VALUE: [5.2971999999998354e-05, 5.343099999999962e-05, 5.279099999999995e-05, 5.305599999999924e-05, 5.276400000000028e-05, 5.2943999999999214e-05, 5.2971999999998354e-05, 5.315300000000023e-05, 5.26669999999993e-05, 5.256900000000231e-05, 5.283299999999866e-05, 5.286199999999727e-05, 5.248600000000089e-05, 5.295899999999826e-05, 5.287500000000084e-05, 5.28609999999978e-05, 5.297299999999783e-05, 5.295800000000225e-05, 5.269499999999844e-05, 5.272300000000105e-05, 5.266700000000277e-05, 5.256899999999884e-05, 5.270900000000148e-05, 5.281899999999909e-05, 5.306899999999934e-05, 5.276299999999734e-05, 5.2971999999998354e-05, 5.269499999999844e-05, 5.2929999999999644e-05, 5.275000000000071e-05, 5.2735999999997674e-05, 5.287500000000084e-05, 5.286100000000127e-05, 5.283299999999866e-05, 5.277799999999985e-05, 5.311099999999805e-05, 5.276400000000028e-05, 5.273600000000114e-05, 5.280599999999899e-05, 5.273600000000114e-05, 5.259700000000145e-05, 5.2721999999998104e-05, 5.269500000000191e-05, 5.28470000000017e-05, 5.308399999999838e-05, 5.2999999999997494e-05, 5.276400000000028e-05, 5.288900000000041e-05, 5.283399999999813e-05, 5.262500000000059e-05]</msg>
<status status="PASS" starttime="20201030 11:51:22.227" endtime="20201030 11:51:22.229"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.222" endtime="20201030 11:51:22.230"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:22.234" endtime="20201030 11:51:22.253"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.232" endtime="20201030 11:51:22.254"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.231" endtime="20201030 11:51:22.254"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.873" endtime="20201030 11:51:22.254"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.873" endtime="20201030 11:51:22.254"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:22.263" endtime="20201030 11:51:22.280"></status>
</kw>
<msg timestamp="20201030 11:51:22.280" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:22.262" endtime="20201030 11:51:22.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:22.283" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:22.282" endtime="20201030 11:51:22.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:22.284" endtime="20201030 11:51:22.286"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.259" endtime="20201030 11:51:22.286"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.257" endtime="20201030 11:51:22.287"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:22.293" endtime="20201030 11:51:22.591"></status>
</kw>
<msg timestamp="20201030 11:51:22.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022062056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022115931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:22.292" endtime="20201030 11:51:22.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:22.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022062056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022115931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:22.601" endtime="20201030 11:51:22.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:22.620" endtime="20201030 11:51:22.623"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.289" endtime="20201030 11:51:22.624"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.287" endtime="20201030 11:51:22.625"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:22.634" level="INFO">${RESULT} = [{'diff': 5.387499999999837e-05}, {'diff': 5.3957999999999784e-05}, {'diff': 5.3971999999999354e-05}, {'diff': 5.3971999999999354e-05}, {'diff': 5.412499999999862e-05}, {'diff': 5.401400000000153e-05}...</msg>
<status status="PASS" starttime="20201030 11:51:22.627" endtime="20201030 11:51:22.634"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:22.640" level="INFO">${ACCURACY} = {'diff': [5.387499999999837e-05, 5.3957999999999784e-05, 5.3971999999999354e-05, 5.3971999999999354e-05, 5.412499999999862e-05, 5.401400000000153e-05, 5.3944000000000214e-05, 5.3944000000000214e-05, 5...</msg>
<status status="PASS" starttime="20201030 11:51:22.636" endtime="20201030 11:51:22.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:22.645" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201030 11:51:22.644" endtime="20201030 11:51:22.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:22.647" level="INFO">VALUE: [5.387499999999837e-05, 5.3957999999999784e-05, 5.3971999999999354e-05, 5.3971999999999354e-05, 5.412499999999862e-05, 5.401400000000153e-05, 5.3944000000000214e-05, 5.3944000000000214e-05, 5.358299999999941e-05, 5.38609999999988e-05, 5.379199999999695e-05, 5.398600000000239e-05, 5.3944000000000214e-05, 5.383299999999966e-05, 5.368099999999987e-05, 5.408299999999991e-05, 5.361099999999855e-05, 5.381999999999956e-05, 5.3707999999999534e-05, 5.3957999999999784e-05, 5.362499999999812e-05, 5.406999999999981e-05, 5.387499999999837e-05, 5.39730000000023e-05, 5.361100000000202e-05, 5.363899999999769e-05, 5.405600000000024e-05, 5.362500000000159e-05, 5.3637999999998215e-05, 5.379200000000042e-05, 5.408299999999991e-05, 5.3735999999998674e-05, 5.408299999999991e-05, 5.376400000000128e-05, 5.379100000000095e-05, 5.388899999999794e-05, 5.3957999999999784e-05, 5.388900000000141e-05, 5.35280000000006e-05, 5.3707999999999534e-05, 5.383299999999966e-05, 5.3749999999998244e-05, 5.40419999999972e-05, 5.404200000000067e-05, 5.3707999999999534e-05, 5.405600000000024e-05, 5.380599999999999e-05, 5.3749999999998244e-05, 5.3735999999998674e-05, 5.358400000000235e-05]</msg>
<status status="PASS" starttime="20201030 11:51:22.646" endtime="20201030 11:51:22.648"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.641" endtime="20201030 11:51:22.649"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:22.652" endtime="20201030 11:51:22.672"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.651" endtime="20201030 11:51:22.672"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.650" endtime="20201030 11:51:22.673"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.255" endtime="20201030 11:51:22.673"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.255" endtime="20201030 11:51:22.673"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:22.682" endtime="20201030 11:51:22.698"></status>
</kw>
<msg timestamp="20201030 11:51:22.699" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:22.680" endtime="20201030 11:51:22.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:22.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:22.700" endtime="20201030 11:51:22.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:22.702" endtime="20201030 11:51:22.704"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.678" endtime="20201030 11:51:22.705"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.676" endtime="20201030 11:51:22.705"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:22.711" endtime="20201030 11:51:22.998"></status>
</kw>
<msg timestamp="20201030 11:51:23.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021634222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021689444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:22.710" endtime="20201030 11:51:23.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:23.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021634222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021689444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:23.003" endtime="20201030 11:51:23.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:23.011" endtime="20201030 11:51:23.013"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.707" endtime="20201030 11:51:23.013"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.706" endtime="20201030 11:51:23.014"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:23.018" level="INFO">${RESULT} = [{'diff': 5.5221999999997134e-05}, {'diff': 5.5179999999998425e-05}, {'diff': 5.48609999999998e-05}, {'diff': 5.506899999999787e-05}, {'diff': 5.462499999999912e-05}, {'diff': 5.4957999999997315e-05},...</msg>
<status status="PASS" starttime="20201030 11:51:23.015" endtime="20201030 11:51:23.018"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:23.022" level="INFO">${ACCURACY} = {'diff': [5.5221999999997134e-05, 5.5179999999998425e-05, 5.48609999999998e-05, 5.506899999999787e-05, 5.462499999999912e-05, 5.4957999999997315e-05, 5.4722000000000104e-05, 5.490300000000198e-05, 5.4...</msg>
<status status="PASS" starttime="20201030 11:51:23.019" endtime="20201030 11:51:23.022"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:23.026" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201030 11:51:23.025" endtime="20201030 11:51:23.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:23.029" level="INFO">VALUE: [5.5221999999997134e-05, 5.5179999999998425e-05, 5.48609999999998e-05, 5.506899999999787e-05, 5.462499999999912e-05, 5.4957999999997315e-05, 5.4722000000000104e-05, 5.490300000000198e-05, 5.4943999999997745e-05, 5.484699999999676e-05, 5.488900000000241e-05, 5.507000000000081e-05, 5.461099999999955e-05, 5.495900000000026e-05, 5.479200000000142e-05, 5.508300000000091e-05, 5.490300000000198e-05, 5.4735999999999674e-05, 5.5013999999999064e-05, 5.494500000000069e-05, 5.463899999999869e-05, 5.463899999999869e-05, 5.4999999999999494e-05, 5.480600000000099e-05, 5.508300000000091e-05, 5.511100000000005e-05, 5.484700000000023e-05, 5.501299999999959e-05, 5.4972000000000354e-05, 5.509700000000048e-05, 5.4958000000000784e-05, 5.4943999999997745e-05, 5.481899999999762e-05, 5.4679999999997925e-05, 5.487499999999937e-05, 5.4985999999999924e-05, 5.491699999999808e-05, 5.4749999999999244e-05, 5.481899999999762e-05, 5.455599999999727e-05, 5.484699999999676e-05, 5.458300000000041e-05, 5.48609999999998e-05, 5.461100000000302e-05, 5.476400000000228e-05, 5.509700000000048e-05, 5.4722000000000104e-05, 5.476400000000228e-05, 5.491700000000155e-05, 5.483400000000013e-05]</msg>
<status status="PASS" starttime="20201030 11:51:23.027" endtime="20201030 11:51:23.030"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.023" endtime="20201030 11:51:23.030"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:23.034" endtime="20201030 11:51:23.053"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.032" endtime="20201030 11:51:23.054"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.031" endtime="20201030 11:51:23.054"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.674" endtime="20201030 11:51:23.054"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.673" endtime="20201030 11:51:23.055"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:23.063" endtime="20201030 11:51:23.081"></status>
</kw>
<msg timestamp="20201030 11:51:23.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:23.062" endtime="20201030 11:51:23.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:23.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:23.082" endtime="20201030 11:51:23.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:23.085" endtime="20201030 11:51:23.086"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.059" endtime="20201030 11:51:23.087"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.057" endtime="20201030 11:51:23.087"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:23.094" endtime="20201030 11:51:23.380"></status>
</kw>
<msg timestamp="20201030 11:51:23.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02265775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022714319, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:23.092" endtime="20201030 11:51:23.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:23.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02265775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022714319, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:23.384" endtime="20201030 11:51:23.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:23.392" endtime="20201030 11:51:23.394"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.090" endtime="20201030 11:51:23.394"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.088" endtime="20201030 11:51:23.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:23.399" level="INFO">${RESULT} = [{'diff': 5.656899999999937e-05}, {'diff': 5.616699999999933e-05}, {'diff': 5.558299999999794e-05}, {'diff': 5.609699999999801e-05}, {'diff': 5.5638000000000215e-05}, {'diff': 5.590300000000298e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:51:23.396" endtime="20201030 11:51:23.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:23.403" level="INFO">${ACCURACY} = {'diff': [5.656899999999937e-05, 5.616699999999933e-05, 5.558299999999794e-05, 5.609699999999801e-05, 5.5638000000000215e-05, 5.590300000000298e-05, 5.565299999999926e-05, 5.587500000000037e-05, 5.558...</msg>
<status status="PASS" starttime="20201030 11:51:23.400" endtime="20201030 11:51:23.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:23.407" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201030 11:51:23.406" endtime="20201030 11:51:23.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:23.410" level="INFO">VALUE: [5.656899999999937e-05, 5.616699999999933e-05, 5.558299999999794e-05, 5.609699999999801e-05, 5.5638000000000215e-05, 5.590300000000298e-05, 5.565299999999926e-05, 5.587500000000037e-05, 5.558300000000141e-05, 5.586099999999733e-05, 5.556899999999837e-05, 5.588899999999994e-05, 5.613900000000019e-05, 5.6027999999999634e-05, 5.5541999999998704e-05, 5.608300000000191e-05, 5.608300000000191e-05, 5.6000000000000494e-05, 5.5777999999999384e-05, 5.613900000000019e-05, 5.590300000000298e-05, 5.612500000000062e-05, 5.559699999999751e-05, 5.563899999999969e-05, 5.554200000000217e-05, 5.588899999999994e-05, 5.588899999999994e-05, 5.6000000000000494e-05, 5.593099999999865e-05, 5.5957999999998315e-05, 5.6000000000000494e-05, 5.587500000000037e-05, 5.587500000000037e-05, 5.5943999999998745e-05, 5.612500000000062e-05, 5.556899999999837e-05, 5.5763999999999814e-05, 5.569499999999797e-05, 5.561100000000055e-05, 5.5999999999997024e-05, 5.577800000000285e-05, 5.562500000000012e-05, 5.55280000000026e-05, 5.58749999999969e-05, 5.5555999999998273e-05, 5.587500000000037e-05, 5.558400000000088e-05, 5.56670000000023e-05, 5.56809999999984e-05, 5.5805999999998523e-05]</msg>
<status status="PASS" starttime="20201030 11:51:23.408" endtime="20201030 11:51:23.411"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.404" endtime="20201030 11:51:23.412"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:23.416" endtime="20201030 11:51:23.435"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.414" endtime="20201030 11:51:23.436"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.413" endtime="20201030 11:51:23.436"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.056" endtime="20201030 11:51:23.436"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.055" endtime="20201030 11:51:23.437"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:23.445" endtime="20201030 11:51:23.462"></status>
</kw>
<msg timestamp="20201030 11:51:23.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:23.444" endtime="20201030 11:51:23.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:23.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:23.464" endtime="20201030 11:51:23.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:23.466" endtime="20201030 11:51:23.468"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.441" endtime="20201030 11:51:23.469"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.439" endtime="20201030 11:51:23.469"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:23.475" endtime="20201030 11:51:23.761"></status>
</kw>
<msg timestamp="20201030 11:51:23.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021883861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021941375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:23.474" endtime="20201030 11:51:23.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:23.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021883861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021941375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:23.765" endtime="20201030 11:51:23.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:23.774" endtime="20201030 11:51:23.775"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.471" endtime="20201030 11:51:23.776"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.470" endtime="20201030 11:51:23.776"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:23.780" level="INFO">${RESULT} = [{'diff': 5.7513999999998094e-05}, {'diff': 5.693099999999965e-05}, {'diff': 5.709699999999901e-05}, {'diff': 5.687500000000137e-05}, {'diff': 5.669499999999897e-05}, {'diff': 5.670899999999854e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:51:23.777" endtime="20201030 11:51:23.780"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:23.785" level="INFO">${ACCURACY} = {'diff': [5.7513999999998094e-05, 5.693099999999965e-05, 5.709699999999901e-05, 5.687500000000137e-05, 5.669499999999897e-05, 5.670899999999854e-05, 5.690300000000051e-05, 5.661100000000155e-05, 5.702...</msg>
<status status="PASS" starttime="20201030 11:51:23.781" endtime="20201030 11:51:23.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:23.790" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201030 11:51:23.789" endtime="20201030 11:51:23.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:23.792" level="INFO">VALUE: [5.7513999999998094e-05, 5.693099999999965e-05, 5.709699999999901e-05, 5.687500000000137e-05, 5.669499999999897e-05, 5.670899999999854e-05, 5.690300000000051e-05, 5.661100000000155e-05, 5.7028000000000634e-05, 5.661199999999755e-05, 5.670900000000201e-05, 5.6666000000000355e-05, 5.681900000000309e-05, 5.659699999999851e-05, 5.6666000000000355e-05, 5.6764000000000814e-05, 5.684699999999876e-05, 5.6666000000000355e-05, 5.6679999999999925e-05, 5.6764000000000814e-05, 5.663900000000069e-05, 5.7000000000001494e-05, 5.6679999999999925e-05, 5.691700000000008e-05, 5.662500000000112e-05, 5.6971999999998885e-05, 5.6985999999998455e-05, 5.66809999999994e-05, 5.684700000000223e-05, 5.7027999999997164e-05, 5.663900000000069e-05, 5.7069999999999343e-05, 5.683400000000213e-05, 5.6971999999998885e-05, 5.7042000000000204e-05, 5.693099999999965e-05, 5.661099999999808e-05, 5.669499999999897e-05, 5.676299999999787e-05, 5.657000000000231e-05, 5.6943999999999745e-05, 5.679100000000048e-05, 5.68610000000018e-05, 5.6679999999999925e-05, 5.6764000000000814e-05, 5.709699999999901e-05, 5.70550000000003e-05, 5.65549999999998e-05, 5.662500000000112e-05, 5.711200000000152e-05]</msg>
<status status="PASS" starttime="20201030 11:51:23.791" endtime="20201030 11:51:23.793"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.786" endtime="20201030 11:51:23.793"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:23.798" endtime="20201030 11:51:23.817"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.796" endtime="20201030 11:51:23.817"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.795" endtime="20201030 11:51:23.818"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.437" endtime="20201030 11:51:23.818"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.437" endtime="20201030 11:51:23.818"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:23.827" endtime="20201030 11:51:23.844"></status>
</kw>
<msg timestamp="20201030 11:51:23.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:23.825" endtime="20201030 11:51:23.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:23.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:23.846" endtime="20201030 11:51:23.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:23.848" endtime="20201030 11:51:23.850"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.823" endtime="20201030 11:51:23.850"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.821" endtime="20201030 11:51:23.851"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:23.857" endtime="20201030 11:51:24.143"></status>
</kw>
<msg timestamp="20201030 11:51:24.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021818917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021877514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:23.856" endtime="20201030 11:51:24.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:24.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021818917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021877514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:24.148" endtime="20201030 11:51:24.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:24.156" endtime="20201030 11:51:24.158"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.853" endtime="20201030 11:51:24.158"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.851" endtime="20201030 11:51:24.159"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:24.163" level="INFO">${RESULT} = [{'diff': 5.859700000000051e-05}, {'diff': 5.841700000000158e-05}, {'diff': 5.8028000000001634e-05}, {'diff': 5.795899999999979e-05}, {'diff': 5.794500000000022e-05}, {'diff': 5.7805999999997054e-05},...</msg>
<status status="PASS" starttime="20201030 11:51:24.159" endtime="20201030 11:51:24.163"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:24.167" level="INFO">${ACCURACY} = {'diff': [5.859700000000051e-05, 5.841700000000158e-05, 5.8028000000001634e-05, 5.795899999999979e-05, 5.794500000000022e-05, 5.7805999999997054e-05, 5.7680000000000925e-05, 5.811099999999958e-05, 5.7...</msg>
<status status="PASS" starttime="20201030 11:51:24.164" endtime="20201030 11:51:24.167"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:24.171" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201030 11:51:24.170" endtime="20201030 11:51:24.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:24.174" level="INFO">VALUE: [5.859700000000051e-05, 5.841700000000158e-05, 5.8028000000001634e-05, 5.795899999999979e-05, 5.794500000000022e-05, 5.7805999999997054e-05, 5.7680000000000925e-05, 5.811099999999958e-05, 5.784799999999923e-05, 5.7735999999999205e-05, 5.776299999999887e-05, 5.788899999999847e-05, 5.7985999999999455e-05, 5.7735999999999205e-05, 5.788899999999847e-05, 5.7930000000001175e-05, 5.7749999999998775e-05, 5.7985999999999455e-05, 5.777699999999844e-05, 5.7778000000001384e-05, 5.8014000000002064e-05, 5.7721999999999635e-05, 5.773700000000215e-05, 5.78749999999989e-05, 5.8013999999998594e-05, 5.7985999999999455e-05, 5.759699999999951e-05, 5.811099999999958e-05, 5.7777999999997914e-05, 5.777700000000191e-05, 5.772300000000258e-05, 5.8014000000002064e-05, 5.8070000000000344e-05, 5.813899999999872e-05, 5.7583999999999413e-05, 5.7735999999999205e-05, 5.8000000000002494e-05, 5.7958000000000315e-05, 5.7694000000000495e-05, 5.7999999999999025e-05, 5.779100000000148e-05, 5.7694000000000495e-05, 5.779099999999801e-05, 5.7736000000002674e-05, 5.812500000000262e-05, 5.7652000000001785e-05, 5.7777999999997914e-05, 5.7694000000000495e-05, 5.783300000000019e-05, 5.7944000000000745e-05]</msg>
<status status="PASS" starttime="20201030 11:51:24.172" endtime="20201030 11:51:24.175"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.168" endtime="20201030 11:51:24.175"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:24.179" endtime="20201030 11:51:24.198"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.177" endtime="20201030 11:51:24.199"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.176" endtime="20201030 11:51:24.199"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.819" endtime="20201030 11:51:24.199"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.819" endtime="20201030 11:51:24.200"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:24.208" endtime="20201030 11:51:24.229"></status>
</kw>
<msg timestamp="20201030 11:51:24.229" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:24.207" endtime="20201030 11:51:24.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:24.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:24.230" endtime="20201030 11:51:24.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:24.233" endtime="20201030 11:51:24.234"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.204" endtime="20201030 11:51:24.235"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.202" endtime="20201030 11:51:24.235"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:24.242" endtime="20201030 11:51:24.528"></status>
</kw>
<msg timestamp="20201030 11:51:24.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025187333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025246931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:24.240" endtime="20201030 11:51:24.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:24.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025187333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025246931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:24.532" endtime="20201030 11:51:24.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:24.541" endtime="20201030 11:51:24.542"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.238" endtime="20201030 11:51:24.543"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.236" endtime="20201030 11:51:24.543"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:24.547" level="INFO">${RESULT} = [{'diff': 5.9598000000000984e-05}, {'diff': 5.9013999999999595e-05}, {'diff': 5.9055999999998304e-05}, {'diff': 5.8777999999998914e-05}, {'diff': 5.8820000000001094e-05}, {'diff': 5.912500000000015e-0...</msg>
<status status="PASS" starttime="20201030 11:51:24.544" endtime="20201030 11:51:24.548"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:24.552" level="INFO">${ACCURACY} = {'diff': [5.9598000000000984e-05, 5.9013999999999595e-05, 5.9055999999998304e-05, 5.8777999999998914e-05, 5.8820000000001094e-05, 5.912500000000015e-05, 5.8944000000001745e-05, 5.8848000000000233e-05,...</msg>
<status status="PASS" starttime="20201030 11:51:24.548" endtime="20201030 11:51:24.552"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:24.556" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201030 11:51:24.555" endtime="20201030 11:51:24.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:24.558" level="INFO">VALUE: [5.9598000000000984e-05, 5.9013999999999595e-05, 5.9055999999998304e-05, 5.8777999999998914e-05, 5.8820000000001094e-05, 5.912500000000015e-05, 5.8944000000001745e-05, 5.8848000000000233e-05, 5.863900000000269e-05, 5.8971999999997415e-05, 5.911100000000058e-05, 5.880499999999858e-05, 5.8929999999998706e-05, 5.863899999999922e-05, 5.909700000000101e-05, 5.911100000000058e-05, 5.863900000000269e-05, 5.890299999999904e-05, 5.9041999999998734e-05, 5.8694000000001495e-05, 5.8708000000001065e-05, 5.894500000000122e-05, 5.8528000000002134e-05, 5.8834000000000664e-05, 5.9041999999998734e-05, 5.9041999999998734e-05, 5.862499999999965e-05, 5.8584000000000414e-05, 5.9055999999998304e-05, 5.866699999999836e-05, 5.869500000000097e-05, 5.909700000000101e-05, 5.9084000000000914e-05, 5.893099999999818e-05, 5.88749999999999e-05, 5.8707999999997595e-05, 5.883300000000119e-05, 5.8763999999999345e-05, 5.8708000000001065e-05, 5.906900000000187e-05, 5.8651999999999316e-05, 5.888899999999947e-05, 5.85689999999979e-05, 5.918099999999843e-05, 5.890299999999904e-05, 5.9000000000000025e-05, 5.861100000000008e-05, 5.9027999999999164e-05, 5.85689999999979e-05, 5.8707999999997595e-05]</msg>
<status status="PASS" starttime="20201030 11:51:24.557" endtime="20201030 11:51:24.560"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.552" endtime="20201030 11:51:24.561"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:24.564" endtime="20201030 11:51:24.584"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.563" endtime="20201030 11:51:24.584"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.562" endtime="20201030 11:51:24.585"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.200" endtime="20201030 11:51:24.585"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.200" endtime="20201030 11:51:24.585"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:24.593" endtime="20201030 11:51:24.611"></status>
</kw>
<msg timestamp="20201030 11:51:24.611" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:24.592" endtime="20201030 11:51:24.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:24.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:24.612" endtime="20201030 11:51:24.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:24.615" endtime="20201030 11:51:24.617"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.589" endtime="20201030 11:51:24.617"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.587" endtime="20201030 11:51:24.618"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:24.624" endtime="20201030 11:51:24.905"></status>
</kw>
<msg timestamp="20201030 11:51:24.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021649333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021709569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:24.623" endtime="20201030 11:51:24.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:24.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021649333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021709569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:24.909" endtime="20201030 11:51:24.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:24.917" endtime="20201030 11:51:24.919"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.620" endtime="20201030 11:51:24.919"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.618" endtime="20201030 11:51:24.920"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:24.924" level="INFO">${RESULT} = [{'diff': 6.0236000000001705e-05}, {'diff': 6.0291999999999984e-05}, {'diff': 5.983300000000219e-05}, {'diff': 5.9888999999997e-05}, {'diff': 5.9929999999999706e-05}, {'diff': 6.0013999999997125e-05},...</msg>
<status status="PASS" starttime="20201030 11:51:24.920" endtime="20201030 11:51:24.924"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:24.929" level="INFO">${ACCURACY} = {'diff': [6.0236000000001705e-05, 6.0291999999999984e-05, 5.983300000000219e-05, 5.9888999999997e-05, 5.9929999999999706e-05, 6.0013999999997125e-05, 5.961100000000108e-05, 5.9791999999999484e-05, 6.0...</msg>
<status status="PASS" starttime="20201030 11:51:24.925" endtime="20201030 11:51:24.929"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:24.933" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201030 11:51:24.932" endtime="20201030 11:51:24.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:24.936" level="INFO">VALUE: [6.0236000000001705e-05, 6.0291999999999984e-05, 5.983300000000219e-05, 5.9888999999997e-05, 5.9929999999999706e-05, 6.0013999999997125e-05, 5.961100000000108e-05, 5.9791999999999484e-05, 6.0028000000000165e-05, 5.95689999999989e-05, 5.9971999999998415e-05, 5.9957999999998846e-05, 5.98750000000009e-05, 5.9819999999998624e-05, 5.986100000000133e-05, 5.988900000000047e-05, 6.0014000000000595e-05, 5.984699999999829e-05, 5.9833999999998194e-05, 5.98750000000009e-05, 5.961100000000108e-05, 5.9514000000000095e-05, 5.958300000000194e-05, 5.9971999999998415e-05, 5.9764000000000345e-05, 5.9957999999998846e-05, 5.9902000000000566e-05, 5.959699999999804e-05, 6.015300000000029e-05, 5.9930000000003175e-05, 5.981899999999915e-05, 5.958300000000194e-05, 6.0028000000000165e-05, 6.0028000000000165e-05, 5.965299999999979e-05, 5.9721999999998165e-05, 6.009700000000201e-05, 5.9514000000000095e-05, 5.9764000000000345e-05, 5.986099999999786e-05, 5.9736000000001205e-05, 6.0028000000000165e-05, 5.986099999999786e-05, 5.965299999999979e-05, 6.0013999999997125e-05, 5.995899999999832e-05, 6.0098000000001484e-05, 5.9693999999999026e-05, 5.98750000000009e-05, 5.9652000000000316e-05]</msg>
<status status="PASS" starttime="20201030 11:51:24.935" endtime="20201030 11:51:24.937"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.930" endtime="20201030 11:51:24.937"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:24.941" endtime="20201030 11:51:24.960"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.939" endtime="20201030 11:51:24.961"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.938" endtime="20201030 11:51:24.961"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.586" endtime="20201030 11:51:24.962"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.585" endtime="20201030 11:51:24.962"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:24.970" endtime="20201030 11:51:24.988"></status>
</kw>
<msg timestamp="20201030 11:51:24.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:24.969" endtime="20201030 11:51:24.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:24.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:24.989" endtime="20201030 11:51:24.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:24.992" endtime="20201030 11:51:24.993"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.966" endtime="20201030 11:51:24.994"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.964" endtime="20201030 11:51:24.994"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.001" endtime="20201030 11:51:25.288"></status>
</kw>
<msg timestamp="20201030 11:51:25.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022181722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022243028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:25.000" endtime="20201030 11:51:25.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022181722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022243028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:25.293" endtime="20201030 11:51:25.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.301" endtime="20201030 11:51:25.303"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.997" endtime="20201030 11:51:25.303"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.995" endtime="20201030 11:51:25.304"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:25.308" level="INFO">${RESULT} = [{'diff': 6.130600000000055e-05}, {'diff': 6.134699999999979e-05}, {'diff': 6.0528000000000665e-05}, {'diff': 6.0583999999998944e-05}, {'diff': 6.106999999999987e-05}, {'diff': 6.108399999999944e-05},...</msg>
<status status="PASS" starttime="20201030 11:51:25.305" endtime="20201030 11:51:25.308"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:25.312" level="INFO">${ACCURACY} = {'diff': [6.130600000000055e-05, 6.134699999999979e-05, 6.0528000000000665e-05, 6.0583999999998944e-05, 6.106999999999987e-05, 6.108399999999944e-05, 6.094499999999975e-05, 6.0777999999997445e-05, 6.0...</msg>
<status status="PASS" starttime="20201030 11:51:25.309" endtime="20201030 11:51:25.312"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.317" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201030 11:51:25.316" endtime="20201030 11:51:25.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.319" level="INFO">VALUE: [6.130600000000055e-05, 6.134699999999979e-05, 6.0528000000000665e-05, 6.0583999999998944e-05, 6.106999999999987e-05, 6.108399999999944e-05, 6.094499999999975e-05, 6.0777999999997445e-05, 6.0638000000001746e-05, 6.063900000000122e-05, 6.0985999999998985e-05, 6.0778000000000915e-05, 6.0722000000002635e-05, 6.058299999999947e-05, 6.0999999999998555e-05, 6.065300000000079e-05, 6.080500000000058e-05, 6.093100000000018e-05, 6.080500000000058e-05, 6.112499999999868e-05, 6.0542000000000235e-05, 6.05689999999999e-05, 6.1028000000001165e-05, 6.093100000000018e-05, 6.0584000000002414e-05, 6.072299999999864e-05, 6.063899999999775e-05, 6.0833999999999194e-05, 6.0819999999999624e-05, 6.070899999999907e-05, 6.0764000000001345e-05, 6.10560000000003e-05, 6.106999999999987e-05, 6.081900000000015e-05, 6.10560000000003e-05, 6.086100000000233e-05, 6.111099999999911e-05, 6.055499999999686e-05, 6.0638000000001746e-05, 6.0735999999998735e-05, 6.109699999999954e-05, 6.108299999999997e-05, 6.0736000000002205e-05, 6.061099999999861e-05, 6.063899999999775e-05, 6.0957999999999846e-05, 6.06949999999995e-05, 6.0555999999999804e-05, 6.1028000000001165e-05, 6.0819999999999624e-05]</msg>
<status status="PASS" starttime="20201030 11:51:25.318" endtime="20201030 11:51:25.320"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.313" endtime="20201030 11:51:25.320"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:25.324" endtime="20201030 11:51:25.343"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.322" endtime="20201030 11:51:25.344"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.321" endtime="20201030 11:51:25.344"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.963" endtime="20201030 11:51:25.345"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.962" endtime="20201030 11:51:25.345"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.354" endtime="20201030 11:51:25.372"></status>
</kw>
<msg timestamp="20201030 11:51:25.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:25.352" endtime="20201030 11:51:25.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.375" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:25.373" endtime="20201030 11:51:25.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.376" endtime="20201030 11:51:25.377"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.350" endtime="20201030 11:51:25.378"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.347" endtime="20201030 11:51:25.378"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.385" endtime="20201030 11:51:25.671"></status>
</kw>
<msg timestamp="20201030 11:51:25.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023065167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023127792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:25.383" endtime="20201030 11:51:25.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023065167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023127792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:25.675" endtime="20201030 11:51:25.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.684" endtime="20201030 11:51:25.685"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.381" endtime="20201030 11:51:25.686"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.379" endtime="20201030 11:51:25.686"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:25.690" level="INFO">${RESULT} = [{'diff': 6.262500000000018e-05}, {'diff': 6.237499999999993e-05}, {'diff': 6.168100000000093e-05}, {'diff': 6.180500000000158e-05}, {'diff': 6.191600000000214e-05}, {'diff': 6.206899999999793e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:25.687" endtime="20201030 11:51:25.690"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:25.694" level="INFO">${ACCURACY} = {'diff': [6.262500000000018e-05, 6.237499999999993e-05, 6.168100000000093e-05, 6.180500000000158e-05, 6.191600000000214e-05, 6.206899999999793e-05, 6.199999999999956e-05, 6.180499999999811e-05, 6.1707...</msg>
<status status="PASS" starttime="20201030 11:51:25.691" endtime="20201030 11:51:25.695"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.699" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201030 11:51:25.698" endtime="20201030 11:51:25.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.701" level="INFO">VALUE: [6.262500000000018e-05, 6.237499999999993e-05, 6.168100000000093e-05, 6.180500000000158e-05, 6.191600000000214e-05, 6.206899999999793e-05, 6.199999999999956e-05, 6.180499999999811e-05, 6.170799999999713e-05, 6.166600000000189e-05, 6.17499999999993e-05, 6.168000000000146e-05, 6.180500000000158e-05, 6.209700000000054e-05, 6.20140000000026e-05, 6.183300000000072e-05, 6.191700000000161e-05, 6.17080000000006e-05, 6.172299999999964e-05, 6.158399999999994e-05, 6.209700000000054e-05, 6.193100000000118e-05, 6.15560000000008e-05, 6.1888999999999e-05, 6.212499999999968e-05, 6.163899999999875e-05, 6.20690000000014e-05, 6.18340000000002e-05, 6.187499999999943e-05, 6.163799999999928e-05, 6.179100000000201e-05, 6.19439999999978e-05, 6.17499999999993e-05, 6.159700000000004e-05, 6.184700000000029e-05, 6.177800000000191e-05, 6.159700000000004e-05, 6.211100000000011e-05, 6.149999999999906e-05, 6.15690000000009e-05, 6.215299999999882e-05, 6.20279999999987e-05, 6.186099999999986e-05, 6.197200000000042e-05, 6.213899999999925e-05, 6.194500000000075e-05, 6.157000000000037e-05, 6.195900000000032e-05, 6.170900000000007e-05, 6.176399999999888e-05]</msg>
<status status="PASS" starttime="20201030 11:51:25.700" endtime="20201030 11:51:25.703"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.695" endtime="20201030 11:51:25.704"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:25.708" endtime="20201030 11:51:25.727"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.706" endtime="20201030 11:51:25.727"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.705" endtime="20201030 11:51:25.728"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.346" endtime="20201030 11:51:25.728"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.345" endtime="20201030 11:51:25.728"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.737" endtime="20201030 11:51:25.754"></status>
</kw>
<msg timestamp="20201030 11:51:25.755" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:25.735" endtime="20201030 11:51:25.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.757" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:25.756" endtime="20201030 11:51:25.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.758" endtime="20201030 11:51:25.760"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.733" endtime="20201030 11:51:25.760"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.731" endtime="20201030 11:51:25.761"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.767" endtime="20201030 11:51:26.053"></status>
</kw>
<msg timestamp="20201030 11:51:26.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022066181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022129111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:25.766" endtime="20201030 11:51:26.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022066181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022129111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:26.058" endtime="20201030 11:51:26.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.066" endtime="20201030 11:51:26.067"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.763" endtime="20201030 11:51:26.068"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.761" endtime="20201030 11:51:26.068"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:26.072" level="INFO">${RESULT} = [{'diff': 6.292999999999924e-05}, {'diff': 6.286099999999739e-05}, {'diff': 6.291599999999967e-05}, {'diff': 6.30279999999997e-05}, {'diff': 6.2889e-05}, {'diff': 6.312499999999721e-05}, {'diff': 6.27...</msg>
<status status="PASS" starttime="20201030 11:51:26.069" endtime="20201030 11:51:26.073"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:26.077" level="INFO">${ACCURACY} = {'diff': [6.292999999999924e-05, 6.286099999999739e-05, 6.291599999999967e-05, 6.30279999999997e-05, 6.2889e-05, 6.312499999999721e-05, 6.270799999999813e-05, 6.268100000000193e-05, 6.258300000000147e...</msg>
<status status="PASS" starttime="20201030 11:51:26.073" endtime="20201030 11:51:26.078"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.082" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201030 11:51:26.081" endtime="20201030 11:51:26.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.084" level="INFO">VALUE: [6.292999999999924e-05, 6.286099999999739e-05, 6.291599999999967e-05, 6.30279999999997e-05, 6.2889e-05, 6.312499999999721e-05, 6.270799999999813e-05, 6.268100000000193e-05, 6.258300000000147e-05, 6.309699999999807e-05, 6.266699999999889e-05, 6.27630000000004e-05, 6.298599999999752e-05, 6.297199999999795e-05, 6.298600000000099e-05, 6.307000000000187e-05, 6.293099999999871e-05, 6.295799999999838e-05, 6.311200000000058e-05, 6.294499999999828e-05, 6.273600000000074e-05, 6.265199999999985e-05, 6.305500000000283e-05, 6.301400000000013e-05, 6.273600000000074e-05, 6.294400000000228e-05, 6.266700000000236e-05, 6.255499999999886e-05, 6.284700000000129e-05, 6.291700000000261e-05, 6.283300000000172e-05, 6.270799999999813e-05, 6.30829999999985e-05, 6.265299999999932e-05, 6.269499999999803e-05, 6.276399999999988e-05, 6.308400000000144e-05, 6.315299999999982e-05, 6.269499999999803e-05, 6.259800000000051e-05, 6.265299999999932e-05, 6.311099999999764e-05, 6.266699999999889e-05, 6.308300000000197e-05, 6.27500000000003e-05, 6.298599999999752e-05, 6.300000000000056e-05, 6.258300000000147e-05, 6.2889e-05, 6.309699999999807e-05]</msg>
<status status="PASS" starttime="20201030 11:51:26.083" endtime="20201030 11:51:26.089"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.078" endtime="20201030 11:51:26.089"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:26.093" endtime="20201030 11:51:26.112"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.092" endtime="20201030 11:51:26.113"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.090" endtime="20201030 11:51:26.113"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.729" endtime="20201030 11:51:26.114"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.729" endtime="20201030 11:51:26.114"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.123" endtime="20201030 11:51:26.139"></status>
</kw>
<msg timestamp="20201030 11:51:26.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:26.121" endtime="20201030 11:51:26.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.142" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:26.141" endtime="20201030 11:51:26.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.143" endtime="20201030 11:51:26.145"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.118" endtime="20201030 11:51:26.145"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.116" endtime="20201030 11:51:26.146"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.153" endtime="20201030 11:51:26.440"></status>
</kw>
<msg timestamp="20201030 11:51:26.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022197681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022262431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:26.151" endtime="20201030 11:51:26.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022197681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022262431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:26.444" endtime="20201030 11:51:26.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.452" endtime="20201030 11:51:26.454"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.148" endtime="20201030 11:51:26.455"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.147" endtime="20201030 11:51:26.455"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:26.459" level="INFO">${RESULT} = [{'diff': 6.474999999999884e-05}, {'diff': 6.391600000000067e-05}, {'diff': 6.356899999999943e-05}, {'diff': 6.3582999999999e-05}, {'diff': 6.365300000000032e-05}, {'diff': 6.411099999999864e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:51:26.456" endtime="20201030 11:51:26.459"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:26.463" level="INFO">${ACCURACY} = {'diff': [6.474999999999884e-05, 6.391600000000067e-05, 6.356899999999943e-05, 6.3582999999999e-05, 6.365300000000032e-05, 6.411099999999864e-05, 6.39439999999998e-05, 6.406899999999993e-05, 6.4082999...</msg>
<status status="PASS" starttime="20201030 11:51:26.460" endtime="20201030 11:51:26.463"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.468" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201030 11:51:26.467" endtime="20201030 11:51:26.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.470" level="INFO">VALUE: [6.474999999999884e-05, 6.391600000000067e-05, 6.356899999999943e-05, 6.3582999999999e-05, 6.365300000000032e-05, 6.411099999999864e-05, 6.39439999999998e-05, 6.406899999999993e-05, 6.40829999999995e-05, 6.412499999999821e-05, 6.377799999999698e-05, 6.395899999999885e-05, 6.395799999999938e-05, 6.402700000000122e-05, 6.412499999999821e-05, 6.400000000000156e-05, 6.368099999999946e-05, 6.407000000000287e-05, 6.394499999999928e-05, 6.399999999999809e-05, 6.377800000000045e-05, 6.38479999999983e-05, 6.412499999999821e-05, 6.402799999999723e-05, 6.366600000000042e-05, 6.37500000000013e-05, 6.379100000000054e-05, 6.37630000000014e-05, 6.40280000000007e-05, 6.387499999999796e-05, 6.397199999999895e-05, 6.361100000000161e-05, 6.401400000000113e-05, 6.386099999999839e-05, 6.365300000000032e-05, 6.37219999999987e-05, 6.359799999999804e-05, 6.399999999999809e-05, 6.372200000000217e-05, 6.37089999999986e-05, 6.359700000000204e-05, 6.3582999999999e-05, 6.40419999999968e-05, 6.37089999999986e-05, 6.365300000000032e-05, 6.404200000000027e-05, 6.404200000000027e-05, 6.402700000000122e-05, 6.35699999999989e-05, 6.377799999999698e-05]</msg>
<status status="PASS" starttime="20201030 11:51:26.469" endtime="20201030 11:51:26.471"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.464" endtime="20201030 11:51:26.471"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:26.475" endtime="20201030 11:51:26.495"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.474" endtime="20201030 11:51:26.495"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.472" endtime="20201030 11:51:26.495"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.115" endtime="20201030 11:51:26.496"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.114" endtime="20201030 11:51:26.496"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.505" endtime="20201030 11:51:26.524"></status>
</kw>
<msg timestamp="20201030 11:51:26.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:26.503" endtime="20201030 11:51:26.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:26.525" endtime="20201030 11:51:26.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.528" endtime="20201030 11:51:26.530"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.500" endtime="20201030 11:51:26.531"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.498" endtime="20201030 11:51:26.531"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.538" endtime="20201030 11:51:26.825"></status>
</kw>
<msg timestamp="20201030 11:51:26.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022983139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023048653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:26.537" endtime="20201030 11:51:26.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022983139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023048653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:26.829" endtime="20201030 11:51:26.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.837" endtime="20201030 11:51:26.839"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.534" endtime="20201030 11:51:26.839"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.532" endtime="20201030 11:51:26.840"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:26.844" level="INFO">${RESULT} = [{'diff': 6.551399999999916e-05}, {'diff': 6.50419999999978e-05}, {'diff': 6.487499999999896e-05}, {'diff': 6.472300000000264e-05}, {'diff': 6.458399999999948e-05}, {'diff': 6.494500000000028e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:26.841" endtime="20201030 11:51:26.844"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:26.848" level="INFO">${ACCURACY} = {'diff': [6.551399999999916e-05, 6.50419999999978e-05, 6.487499999999896e-05, 6.472300000000264e-05, 6.458399999999948e-05, 6.494500000000028e-05, 6.461099999999914e-05, 6.470800000000013e-05, 6.47359...</msg>
<status status="PASS" starttime="20201030 11:51:26.845" endtime="20201030 11:51:26.848"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.853" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201030 11:51:26.851" endtime="20201030 11:51:26.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.855" level="INFO">VALUE: [6.551399999999916e-05, 6.50419999999978e-05, 6.487499999999896e-05, 6.472300000000264e-05, 6.458399999999948e-05, 6.494500000000028e-05, 6.461099999999914e-05, 6.470800000000013e-05, 6.473599999999927e-05, 6.449999999999859e-05, 6.461100000000261e-05, 6.473599999999927e-05, 6.459699999999957e-05, 6.491700000000114e-05, 6.486099999999939e-05, 6.474999999999884e-05, 6.456899999999696e-05, 6.479200000000102e-05, 6.454200000000077e-05, 6.462499999999871e-05, 6.47639999999984e-05, 6.45699999999999e-05, 6.491700000000114e-05, 6.47500000000023e-05, 6.458399999999948e-05, 6.462499999999871e-05, 6.47639999999984e-05, 6.499999999999909e-05, 6.458399999999948e-05, 6.476400000000188e-05, 6.497199999999995e-05, 6.505500000000136e-05, 6.468000000000099e-05, 6.461099999999914e-05, 6.50830000000005e-05, 6.454099999999782e-05, 6.468000000000099e-05, 6.476400000000188e-05, 6.509700000000007e-05, 6.468100000000046e-05, 6.480500000000111e-05, 6.4583e-05, 6.462500000000218e-05, 6.479200000000102e-05, 6.463900000000175e-05, 6.45280000000012e-05, 6.488899999999853e-05, 6.487499999999896e-05, 6.49029999999981e-05, 6.47639999999984e-05]</msg>
<status status="PASS" starttime="20201030 11:51:26.854" endtime="20201030 11:51:26.857"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.849" endtime="20201030 11:51:26.857"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:26.861" endtime="20201030 11:51:26.880"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.859" endtime="20201030 11:51:26.881"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.858" endtime="20201030 11:51:26.881"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.497" endtime="20201030 11:51:26.881"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.496" endtime="20201030 11:51:26.882"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.890" endtime="20201030 11:51:26.908"></status>
</kw>
<msg timestamp="20201030 11:51:26.908" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:26.889" endtime="20201030 11:51:26.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.911" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:26.909" endtime="20201030 11:51:26.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.912" endtime="20201030 11:51:26.913"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.886" endtime="20201030 11:51:26.914"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.884" endtime="20201030 11:51:26.914"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.921" endtime="20201030 11:51:27.206"></status>
</kw>
<msg timestamp="20201030 11:51:27.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021835736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021902222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:26.919" endtime="20201030 11:51:27.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021835736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021902222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:27.211" endtime="20201030 11:51:27.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.219" endtime="20201030 11:51:27.221"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.917" endtime="20201030 11:51:27.221"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.915" endtime="20201030 11:51:27.222"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:27.225" level="INFO">${RESULT} = [{'diff': 6.648599999999755e-05}, {'diff': 6.609700000000107e-05}, {'diff': 6.579199999999855e-05}, {'diff': 6.573600000000027e-05}, {'diff': 6.583299999999778e-05}, {'diff': 6.563899999999928e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:27.222" endtime="20201030 11:51:27.226"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:27.230" level="INFO">${ACCURACY} = {'diff': [6.648599999999755e-05, 6.609700000000107e-05, 6.579199999999855e-05, 6.573600000000027e-05, 6.583299999999778e-05, 6.563899999999928e-05, 6.566699999999842e-05, 6.562499999999971e-05, 6.5611...</msg>
<status status="PASS" starttime="20201030 11:51:27.226" endtime="20201030 11:51:27.231"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.235" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201030 11:51:27.234" endtime="20201030 11:51:27.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.238" level="INFO">VALUE: [6.648599999999755e-05, 6.609700000000107e-05, 6.579199999999855e-05, 6.573600000000027e-05, 6.583299999999778e-05, 6.563899999999928e-05, 6.566699999999842e-05, 6.562499999999971e-05, 6.561100000000014e-05, 6.611100000000064e-05, 6.580600000000159e-05, 6.583400000000073e-05, 6.602799999999923e-05, 6.598699999999999e-05, 6.598600000000052e-05, 6.572300000000017e-05, 6.567999999999852e-05, 6.579099999999907e-05, 6.566600000000242e-05, 6.576299999999993e-05, 6.566599999999895e-05, 6.605499999999889e-05, 6.567999999999852e-05, 6.595800000000138e-05, 6.561100000000014e-05, 6.5889000000003e-05, 6.55280000000022e-05, 6.591699999999867e-05, 6.590300000000257e-05, 6.612500000000021e-05, 6.574999999999984e-05, 6.577800000000245e-05, 6.605600000000184e-05, 6.593100000000171e-05, 6.555599999999787e-05, 6.583399999999726e-05, 6.588899999999953e-05, 6.55700000000009e-05, 6.608400000000098e-05, 6.580600000000159e-05, 6.565300000000232e-05, 6.57359999999968e-05, 6.561199999999962e-05, 6.57220000000007e-05, 6.57220000000007e-05, 6.60830000000015e-05, 6.568000000000199e-05, 6.561100000000014e-05, 6.577799999999898e-05, 6.606899999999846e-05]</msg>
<status status="PASS" starttime="20201030 11:51:27.236" endtime="20201030 11:51:27.238"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.231" endtime="20201030 11:51:27.239"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:27.243" endtime="20201030 11:51:27.262"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.241" endtime="20201030 11:51:27.262"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.240" endtime="20201030 11:51:27.263"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.883" endtime="20201030 11:51:27.263"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.882" endtime="20201030 11:51:27.263"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.272" endtime="20201030 11:51:27.289"></status>
</kw>
<msg timestamp="20201030 11:51:27.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:27.270" endtime="20201030 11:51:27.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.292" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:27.291" endtime="20201030 11:51:27.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.293" endtime="20201030 11:51:27.295"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.268" endtime="20201030 11:51:27.295"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.266" endtime="20201030 11:51:27.296"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.302" endtime="20201030 11:51:27.591"></status>
</kw>
<msg timestamp="20201030 11:51:27.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021922639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021989889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:27.301" endtime="20201030 11:51:27.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021922639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021989889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:27.595" endtime="20201030 11:51:27.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.604" endtime="20201030 11:51:27.605"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.298" endtime="20201030 11:51:27.606"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.296" endtime="20201030 11:51:27.606"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:27.610" level="INFO">${RESULT} = [{'diff': 6.724999999999787e-05}, {'diff': 6.732000000000266e-05}, {'diff': 6.694499999999881e-05}, {'diff': 6.693099999999924e-05}, {'diff': 6.659800000000105e-05}, {'diff': 6.669499999999856e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:27.607" endtime="20201030 11:51:27.610"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:27.614" level="INFO">${ACCURACY} = {'diff': [6.724999999999787e-05, 6.732000000000266e-05, 6.694499999999881e-05, 6.693099999999924e-05, 6.659800000000105e-05, 6.669499999999856e-05, 6.70419999999998e-05, 6.691699999999967e-05, 6.70000...</msg>
<status status="PASS" starttime="20201030 11:51:27.611" endtime="20201030 11:51:27.615"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.619" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201030 11:51:27.618" endtime="20201030 11:51:27.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.621" level="INFO">VALUE: [6.724999999999787e-05, 6.732000000000266e-05, 6.694499999999881e-05, 6.693099999999924e-05, 6.659800000000105e-05, 6.669499999999856e-05, 6.70419999999998e-05, 6.691699999999967e-05, 6.700000000000109e-05, 6.67229999999977e-05, 6.666599999999995e-05, 6.656899999999896e-05, 6.711100000000164e-05, 6.665299999999985e-05, 6.67640000000004e-05, 6.659700000000157e-05, 6.675000000000084e-05, 6.69030000000001e-05, 6.666700000000289e-05, 6.693099999999924e-05, 6.713900000000078e-05, 6.666699999999942e-05, 6.656900000000243e-05, 6.691699999999967e-05, 6.6583999999998e-05, 6.679200000000302e-05, 6.693099999999924e-05, 6.668100000000246e-05, 6.672199999999823e-05, 6.694499999999881e-05, 6.704100000000032e-05, 6.711200000000112e-05, 6.700000000000109e-05, 6.705599999999937e-05, 6.679100000000007e-05, 6.690200000000063e-05, 6.656900000000243e-05, 6.70830000000025e-05, 6.661100000000114e-05, 6.713900000000078e-05, 6.667999999999952e-05, 6.67220000000017e-05, 6.691699999999967e-05, 6.694499999999881e-05, 6.679200000000302e-05, 6.695800000000238e-05, 6.655600000000234e-05, 6.706999999999894e-05, 6.679199999999955e-05, 6.679199999999955e-05]</msg>
<status status="PASS" starttime="20201030 11:51:27.620" endtime="20201030 11:51:27.622"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.615" endtime="20201030 11:51:27.623"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:27.627" endtime="20201030 11:51:27.646"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.625" endtime="20201030 11:51:27.646"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.624" endtime="20201030 11:51:27.647"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.264" endtime="20201030 11:51:27.647"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.264" endtime="20201030 11:51:27.647"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.656" endtime="20201030 11:51:27.677"></status>
</kw>
<msg timestamp="20201030 11:51:27.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:27.655" endtime="20201030 11:51:27.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.680" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:27.679" endtime="20201030 11:51:27.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.681" endtime="20201030 11:51:27.683"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.652" endtime="20201030 11:51:27.683"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.650" endtime="20201030 11:51:27.684"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.690" endtime="20201030 11:51:27.976"></status>
</kw>
<msg timestamp="20201030 11:51:27.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025162236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025230653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:27.689" endtime="20201030 11:51:27.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025162236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025230653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:27.980" endtime="20201030 11:51:27.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.988" endtime="20201030 11:51:27.990"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.686" endtime="20201030 11:51:27.990"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.684" endtime="20201030 11:51:27.991"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:27.995" level="INFO">${RESULT} = [{'diff': 6.84169999999977e-05}, {'diff': 6.799999999999862e-05}, {'diff': 6.788900000000153e-05}, {'diff': 6.769499999999956e-05}, {'diff': 6.763899999999781e-05}, {'diff': 6.788800000000206e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:27.991" endtime="20201030 11:51:27.995"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:27.999" level="INFO">${ACCURACY} = {'diff': [6.84169999999977e-05, 6.799999999999862e-05, 6.788900000000153e-05, 6.769499999999956e-05, 6.763899999999781e-05, 6.788800000000206e-05, 6.761099999999867e-05, 6.811099999999917e-05, 6.78609...</msg>
<status status="PASS" starttime="20201030 11:51:27.996" endtime="20201030 11:51:27.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.003" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201030 11:51:28.002" endtime="20201030 11:51:28.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.006" level="INFO">VALUE: [6.84169999999977e-05, 6.799999999999862e-05, 6.788900000000153e-05, 6.769499999999956e-05, 6.763899999999781e-05, 6.788800000000206e-05, 6.761099999999867e-05, 6.811099999999917e-05, 6.786099999999892e-05, 6.775000000000184e-05, 6.794400000000034e-05, 6.772199999999923e-05, 6.811100000000264e-05, 6.761099999999867e-05, 6.769400000000009e-05, 6.799999999999862e-05, 6.786099999999892e-05, 6.786099999999892e-05, 6.763899999999781e-05, 6.786100000000239e-05, 6.775000000000184e-05, 6.801399999999819e-05, 6.779199999999708e-05, 6.763900000000128e-05, 6.805600000000037e-05, 6.75969999999991e-05, 6.794499999999981e-05, 6.75420000000003e-05, 6.766700000000042e-05, 6.768099999999999e-05, 6.77770000000015e-05, 6.770799999999966e-05, 6.787499999999849e-05, 6.763899999999781e-05, 6.804100000000132e-05, 6.794399999999687e-05, 6.812499999999874e-05, 6.80969999999996e-05, 6.802800000000123e-05, 6.774999999999837e-05, 6.787500000000196e-05, 6.774999999999837e-05, 6.766699999999695e-05, 6.801400000000166e-05, 6.761100000000214e-05, 6.761099999999867e-05, 6.808400000000298e-05, 6.788900000000153e-05, 6.75969999999991e-05, 6.783299999999978e-05]</msg>
<status status="PASS" starttime="20201030 11:51:28.005" endtime="20201030 11:51:28.008"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.000" endtime="20201030 11:51:28.008"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:28.012" endtime="20201030 11:51:28.031"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.010" endtime="20201030 11:51:28.032"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.009" endtime="20201030 11:51:28.032"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.648" endtime="20201030 11:51:28.032"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.648" endtime="20201030 11:51:28.032"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.041" endtime="20201030 11:51:28.059"></status>
</kw>
<msg timestamp="20201030 11:51:28.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:28.040" endtime="20201030 11:51:28.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.062" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:28.060" endtime="20201030 11:51:28.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.063" endtime="20201030 11:51:28.064"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.037" endtime="20201030 11:51:28.065"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.035" endtime="20201030 11:51:28.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.072" endtime="20201030 11:51:28.358"></status>
</kw>
<msg timestamp="20201030 11:51:28.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02211925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022188514, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:28.070" endtime="20201030 11:51:28.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02211925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022188514, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:28.362" endtime="20201030 11:51:28.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.370" endtime="20201030 11:51:28.372"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.068" endtime="20201030 11:51:28.373"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.066" endtime="20201030 11:51:28.373"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:28.377" level="INFO">${RESULT} = [{'diff': 6.926399999999944e-05}, {'diff': 6.907000000000094e-05}, {'diff': 6.890299999999863e-05}, {'diff': 6.893100000000124e-05}, {'diff': 6.904199999999833e-05}, {'diff': 6.886099999999992e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:28.374" endtime="20201030 11:51:28.377"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:28.382" level="INFO">${ACCURACY} = {'diff': [6.926399999999944e-05, 6.907000000000094e-05, 6.890299999999863e-05, 6.893100000000124e-05, 6.904199999999833e-05, 6.886099999999992e-05, 6.883400000000026e-05, 6.865299999999838e-05, 6.9027...</msg>
<status status="PASS" starttime="20201030 11:51:28.378" endtime="20201030 11:51:28.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.387" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201030 11:51:28.386" endtime="20201030 11:51:28.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.389" level="INFO">VALUE: [6.926399999999944e-05, 6.907000000000094e-05, 6.890299999999863e-05, 6.893100000000124e-05, 6.904199999999833e-05, 6.886099999999992e-05, 6.883400000000026e-05, 6.865299999999838e-05, 6.902799999999876e-05, 6.863799999999934e-05, 6.888799999999959e-05, 6.894400000000134e-05, 6.902800000000223e-05, 6.90970000000006e-05, 6.899999999999962e-05, 6.905500000000189e-05, 6.858300000000053e-05, 6.870800000000066e-05, 6.852800000000173e-05, 6.862499999999924e-05, 6.894400000000134e-05, 6.874999999999937e-05, 6.893100000000124e-05, 6.898600000000005e-05, 6.85970000000001e-05, 6.902799999999876e-05, 6.898600000000005e-05, 6.865299999999838e-05, 6.857000000000044e-05, 6.870900000000013e-05, 6.866599999999848e-05, 6.874999999999937e-05, 6.85970000000001e-05, 6.888799999999959e-05, 6.899999999999962e-05, 6.912499999999974e-05, 6.887499999999949e-05, 6.858300000000053e-05, 6.904199999999833e-05, 6.888899999999906e-05, 6.901399999999919e-05, 6.911100000000017e-05, 6.898600000000005e-05, 6.895799999999744e-05, 6.893100000000124e-05, 6.895900000000038e-05, 6.894500000000081e-05, 6.911100000000017e-05, 6.884700000000035e-05, 6.880600000000112e-05]</msg>
<status status="PASS" starttime="20201030 11:51:28.388" endtime="20201030 11:51:28.390"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.383" endtime="20201030 11:51:28.390"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:28.394" endtime="20201030 11:51:28.413"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.393" endtime="20201030 11:51:28.414"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.391" endtime="20201030 11:51:28.414"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.033" endtime="20201030 11:51:28.415"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.033" endtime="20201030 11:51:28.415"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.424" endtime="20201030 11:51:28.440"></status>
</kw>
<msg timestamp="20201030 11:51:28.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:28.422" endtime="20201030 11:51:28.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:28.442" endtime="20201030 11:51:28.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.444" endtime="20201030 11:51:28.446"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.419" endtime="20201030 11:51:28.446"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.417" endtime="20201030 11:51:28.447"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.453" endtime="20201030 11:51:28.741"></status>
</kw>
<msg timestamp="20201030 11:51:28.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021794347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021864528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:28.452" endtime="20201030 11:51:28.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021794347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021864528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:28.745" endtime="20201030 11:51:28.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.753" endtime="20201030 11:51:28.755"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.449" endtime="20201030 11:51:28.755"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.447" endtime="20201030 11:51:28.756"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:28.760" level="INFO">${RESULT} = [{'diff': 7.018100000000249e-05}, {'diff': 7.02499999999974e-05}, {'diff': 6.963899999999981e-05}, {'diff': 6.993099999999877e-05}, {'diff': 7.00979999999976e-05}, {'diff': 7.000000000000062e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:51:28.756" endtime="20201030 11:51:28.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:28.764" level="INFO">${ACCURACY} = {'diff': [7.018100000000249e-05, 7.02499999999974e-05, 6.963899999999981e-05, 6.993099999999877e-05, 7.00979999999976e-05, 7.000000000000062e-05, 6.976399999999994e-05, 6.969400000000209e-05, 6.991699...</msg>
<status status="PASS" starttime="20201030 11:51:28.761" endtime="20201030 11:51:28.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.768" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201030 11:51:28.767" endtime="20201030 11:51:28.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.771" level="INFO">VALUE: [7.018100000000249e-05, 7.02499999999974e-05, 6.963899999999981e-05, 6.993099999999877e-05, 7.00979999999976e-05, 7.000000000000062e-05, 6.976399999999994e-05, 6.969400000000209e-05, 6.99169999999992e-05, 6.952699999999978e-05, 6.986099999999745e-05, 6.965199999999991e-05, 6.97360000000008e-05, 6.975000000000037e-05, 6.997199999999801e-05, 6.968100000000199e-05, 6.965299999999938e-05, 6.99299999999993e-05, 6.988900000000006e-05, 6.986100000000092e-05, 6.957000000000144e-05, 6.984699999999788e-05, 6.977799999999951e-05, 6.962500000000024e-05, 6.962499999999677e-05, 7.001400000000019e-05, 7.007000000000194e-05, 6.979200000000255e-05, 6.997299999999748e-05, 6.979199999999908e-05, 7.011200000000065e-05, 6.981999999999822e-05, 6.970799999999819e-05, 6.983300000000178e-05, 7.005500000000289e-05, 6.984699999999788e-05, 6.967999999999905e-05, 6.969500000000156e-05, 7.016700000000292e-05, 6.972199999999776e-05, 6.984700000000135e-05, 6.977799999999951e-05, 6.994399999999887e-05, 6.986100000000092e-05, 6.965300000000285e-05, 6.961100000000067e-05, 6.95970000000011e-05, 6.9584000000001e-05, 6.987500000000049e-05, 7.002799999999976e-05]</msg>
<status status="PASS" starttime="20201030 11:51:28.769" endtime="20201030 11:51:28.772"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.765" endtime="20201030 11:51:28.772"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:28.776" endtime="20201030 11:51:28.795"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.774" endtime="20201030 11:51:28.796"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.773" endtime="20201030 11:51:28.796"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.416" endtime="20201030 11:51:28.796"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.415" endtime="20201030 11:51:28.797"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.805" endtime="20201030 11:51:28.823"></status>
</kw>
<msg timestamp="20201030 11:51:28.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:28.804" endtime="20201030 11:51:28.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:28.825" endtime="20201030 11:51:28.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.827" endtime="20201030 11:51:28.829"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.801" endtime="20201030 11:51:28.829"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.799" endtime="20201030 11:51:28.830"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.836" endtime="20201030 11:51:29.122"></status>
</kw>
<msg timestamp="20201030 11:51:29.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022642611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022714139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:28.835" endtime="20201030 11:51:29.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:29.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022642611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022714139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:29.126" endtime="20201030 11:51:29.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:29.135" endtime="20201030 11:51:29.136"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.832" endtime="20201030 11:51:29.137"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.830" endtime="20201030 11:51:29.137"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:29.141" level="INFO">${RESULT} = [{'diff': 7.152800000000126e-05}, {'diff': 7.148599999999908e-05}, {'diff': 7.099999999999815e-05}, {'diff': 7.098600000000205e-05}, {'diff': 7.088899999999759e-05}, {'diff': 7.10840000000025e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:29.138" endtime="20201030 11:51:29.142"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:29.146" level="INFO">${ACCURACY} = {'diff': [7.152800000000126e-05, 7.148599999999908e-05, 7.099999999999815e-05, 7.098600000000205e-05, 7.088899999999759e-05, 7.10840000000025e-05, 7.072299999999823e-05, 7.097199999999901e-05, 7.11109...</msg>
<status status="PASS" starttime="20201030 11:51:29.142" endtime="20201030 11:51:29.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:29.150" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201030 11:51:29.149" endtime="20201030 11:51:29.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:29.152" level="INFO">VALUE: [7.152800000000126e-05, 7.148599999999908e-05, 7.099999999999815e-05, 7.098600000000205e-05, 7.088899999999759e-05, 7.10840000000025e-05, 7.072299999999823e-05, 7.097199999999901e-05, 7.11109999999987e-05, 7.084699999999888e-05, 7.07910000000006e-05, 7.058299999999906e-05, 7.069400000000309e-05, 7.102700000000128e-05, 7.073599999999833e-05, 7.090300000000063e-05, 7.069399999999962e-05, 7.113900000000131e-05, 7.065300000000038e-05, 7.102800000000076e-05, 7.073599999999833e-05, 7.054199999999983e-05, 7.098600000000205e-05, 7.094499999999934e-05, 7.077700000000103e-05, 7.104200000000033e-05, 7.09170000000002e-05, 7.070899999999866e-05, 7.072299999999823e-05, 7.05559999999994e-05, 7.098599999999858e-05, 7.084700000000235e-05, 7.081899999999974e-05, 7.068000000000005e-05, 7.068000000000005e-05, 7.080500000000017e-05, 7.087500000000149e-05, 7.070799999999919e-05, 7.081899999999974e-05, 7.066699999999995e-05, 7.065300000000038e-05, 7.052800000000026e-05, 7.065300000000038e-05, 7.10970000000026e-05, 7.108399999999904e-05, 7.069499999999909e-05, 7.098599999999858e-05, 7.086099999999845e-05, 7.105500000000042e-05, 7.113899999999784e-05]</msg>
<status status="PASS" starttime="20201030 11:51:29.151" endtime="20201030 11:51:29.154"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.146" endtime="20201030 11:51:29.155"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:29.158" endtime="20201030 11:51:29.178"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.157" endtime="20201030 11:51:29.178"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.156" endtime="20201030 11:51:29.179"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.797" endtime="20201030 11:51:29.179"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.797" endtime="20201030 11:51:29.179"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:29.188" endtime="20201030 11:51:29.204"></status>
</kw>
<msg timestamp="20201030 11:51:29.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:29.186" endtime="20201030 11:51:29.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:29.207" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:29.206" endtime="20201030 11:51:29.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:29.209" endtime="20201030 11:51:29.210"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.184" endtime="20201030 11:51:29.211"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.181" endtime="20201030 11:51:29.211"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:29.218" endtime="20201030 11:51:29.503"></status>
</kw>
<msg timestamp="20201030 11:51:29.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021622708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021695125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:29.216" endtime="20201030 11:51:29.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:29.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021622708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021695125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:29.507" endtime="20201030 11:51:29.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:29.515" endtime="20201030 11:51:29.517"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.213" endtime="20201030 11:51:29.517"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.212" endtime="20201030 11:51:29.518"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:29.522" level="INFO">${RESULT} = [{'diff': 7.241699999999823e-05}, {'diff': 7.231900000000124e-05}, {'diff': 7.212499999999927e-05}, {'diff': 7.179200000000108e-05}, {'diff': 7.202800000000176e-05}, {'diff': 7.204200000000133e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:29.519" endtime="20201030 11:51:29.522"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:29.527" level="INFO">${ACCURACY} = {'diff': [7.241699999999823e-05, 7.231900000000124e-05, 7.212499999999927e-05, 7.179200000000108e-05, 7.202800000000176e-05, 7.204200000000133e-05, 7.211199999999918e-05, 7.165300000000138e-05, 7.1763...</msg>
<status status="PASS" starttime="20201030 11:51:29.523" endtime="20201030 11:51:29.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:29.531" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201030 11:51:29.530" endtime="20201030 11:51:29.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:29.534" level="INFO">VALUE: [7.241699999999823e-05, 7.231900000000124e-05, 7.212499999999927e-05, 7.179200000000108e-05, 7.202800000000176e-05, 7.204200000000133e-05, 7.211199999999918e-05, 7.165300000000138e-05, 7.176399999999847e-05, 7.180599999999718e-05, 7.187499999999902e-05, 7.212500000000274e-05, 7.152700000000178e-05, 7.212499999999927e-05, 7.17910000000016e-05, 7.183300000000031e-05, 7.215299999999841e-05, 7.166599999999801e-05, 7.158300000000006e-05, 7.212499999999927e-05, 7.19300000000013e-05, 7.181899999999727e-05, 7.205599999999743e-05, 7.213899999999884e-05, 7.156999999999997e-05, 7.159699999999963e-05, 7.193100000000077e-05, 7.204200000000133e-05, 7.179200000000108e-05, 7.15560000000004e-05, 7.177799999999804e-05, 7.163899999999834e-05, 7.165199999999844e-05, 7.194500000000034e-05, 7.197200000000001e-05, 7.2069000000001e-05, 7.168100000000052e-05, 7.166600000000148e-05, 7.19439999999974e-05, 7.198599999999958e-05, 7.202799999999829e-05, 7.198599999999958e-05, 7.177800000000151e-05, 7.181900000000074e-05, 7.199999999999915e-05, 7.169400000000062e-05, 7.188899999999859e-05, 7.163900000000181e-05, 7.179200000000108e-05, 7.180600000000065e-05]</msg>
<status status="PASS" starttime="20201030 11:51:29.533" endtime="20201030 11:51:29.535"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.528" endtime="20201030 11:51:29.535"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:29.539" endtime="20201030 11:51:29.558"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.537" endtime="20201030 11:51:29.559"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.536" endtime="20201030 11:51:29.559"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.180" endtime="20201030 11:51:29.560"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.179" endtime="20201030 11:51:29.560"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:29.569" endtime="20201030 11:51:29.586"></status>
</kw>
<msg timestamp="20201030 11:51:29.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:29.567" endtime="20201030 11:51:29.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:29.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:29.588" endtime="20201030 11:51:29.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:29.590" endtime="20201030 11:51:29.592"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.564" endtime="20201030 11:51:29.592"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.562" endtime="20201030 11:51:29.593"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:29.599" endtime="20201030 11:51:29.886"></status>
</kw>
<msg timestamp="20201030 11:51:29.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022131014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022204361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:29.598" endtime="20201030 11:51:29.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:29.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022131014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022204361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:29.890" endtime="20201030 11:51:29.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:29.898" endtime="20201030 11:51:29.900"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.595" endtime="20201030 11:51:29.900"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.593" endtime="20201030 11:51:29.901"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:29.905" level="INFO">${RESULT} = [{'diff': 7.334699999999791e-05}, {'diff': 7.333300000000181e-05}, {'diff': 7.269400000000162e-05}, {'diff': 7.277800000000251e-05}, {'diff': 7.281899999999827e-05}, {'diff': 7.266600000000248e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:29.902" endtime="20201030 11:51:29.905"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:29.909" level="INFO">${ACCURACY} = {'diff': [7.334699999999791e-05, 7.333300000000181e-05, 7.269400000000162e-05, 7.277800000000251e-05, 7.281899999999827e-05, 7.266600000000248e-05, 7.298600000000058e-05, 7.269500000000109e-05, 7.2736...</msg>
<status status="PASS" starttime="20201030 11:51:29.906" endtime="20201030 11:51:29.909"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:29.913" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201030 11:51:29.912" endtime="20201030 11:51:29.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:29.916" level="INFO">VALUE: [7.334699999999791e-05, 7.333300000000181e-05, 7.269400000000162e-05, 7.277800000000251e-05, 7.281899999999827e-05, 7.266600000000248e-05, 7.298600000000058e-05, 7.269500000000109e-05, 7.273600000000033e-05, 7.269500000000109e-05, 7.293100000000177e-05, 7.266699999999848e-05, 7.295899999999744e-05, 7.279199999999861e-05, 7.292999999999883e-05, 7.265300000000238e-05, 7.270900000000066e-05, 7.3069000000002e-05, 7.315199999999994e-05, 7.281899999999827e-05, 7.286100000000045e-05, 7.313899999999984e-05, 7.25690000000015e-05, 7.301399999999972e-05, 7.313899999999984e-05, 7.259700000000063e-05, 7.288899999999959e-05, 7.263899999999934e-05, 7.284700000000088e-05, 7.294500000000134e-05, 7.31110000000007e-05, 7.27499999999999e-05, 7.276399999999947e-05, 7.270799999999772e-05, 7.263899999999934e-05, 7.30560000000019e-05, 7.268100000000152e-05, 7.27369999999998e-05, 7.259800000000011e-05, 7.263899999999934e-05, 7.3069000000002e-05, 7.301399999999972e-05, 7.31110000000007e-05, 7.265300000000238e-05, 7.292999999999883e-05, 7.286100000000045e-05, 7.266700000000195e-05, 7.309700000000113e-05, 7.290299999999916e-05, 7.308400000000104e-05]</msg>
<status status="PASS" starttime="20201030 11:51:29.915" endtime="20201030 11:51:29.917"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.910" endtime="20201030 11:51:29.917"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:29.921" endtime="20201030 11:51:29.940"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.920" endtime="20201030 11:51:29.941"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.918" endtime="20201030 11:51:29.941"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.561" endtime="20201030 11:51:29.942"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.560" endtime="20201030 11:51:29.942"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:29.950" endtime="20201030 11:51:29.969"></status>
</kw>
<msg timestamp="20201030 11:51:29.970" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:29.949" endtime="20201030 11:51:29.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:29.972" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:29.971" endtime="20201030 11:51:29.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:29.973" endtime="20201030 11:51:29.975"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.946" endtime="20201030 11:51:29.975"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.944" endtime="20201030 11:51:29.976"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:29.982" endtime="20201030 11:51:30.268"></status>
</kw>
<msg timestamp="20201030 11:51:30.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023008736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023083208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:29.981" endtime="20201030 11:51:30.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:30.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023008736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023083208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:30.272" endtime="20201030 11:51:30.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:30.281" endtime="20201030 11:51:30.282"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.978" endtime="20201030 11:51:30.283"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.976" endtime="20201030 11:51:30.283"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:30.287" level="INFO">${RESULT} = [{'diff': 7.447200000000251e-05}, {'diff': 7.39439999999994e-05}, {'diff': 7.411099999999823e-05}, {'diff': 7.369399999999915e-05}, {'diff': 7.376400000000047e-05}, {'diff': 7.388900000000059e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:30.284" endtime="20201030 11:51:30.287"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:30.291" level="INFO">${ACCURACY} = {'diff': [7.447200000000251e-05, 7.39439999999994e-05, 7.411099999999823e-05, 7.369399999999915e-05, 7.376400000000047e-05, 7.388900000000059e-05, 7.355599999999893e-05, 7.388899999999712e-05, 7.37500...</msg>
<status status="PASS" starttime="20201030 11:51:30.288" endtime="20201030 11:51:30.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:30.296" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201030 11:51:30.295" endtime="20201030 11:51:30.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:30.298" level="INFO">VALUE: [7.447200000000251e-05, 7.39439999999994e-05, 7.411099999999823e-05, 7.369399999999915e-05, 7.376400000000047e-05, 7.388900000000059e-05, 7.355599999999893e-05, 7.388899999999712e-05, 7.37500000000009e-05, 7.35560000000024e-05, 7.398599999999811e-05, 7.365299999999991e-05, 7.39309999999993e-05, 7.408400000000204e-05, 7.354199999999936e-05, 7.391600000000026e-05, 7.379199999999961e-05, 7.395899999999844e-05, 7.359700000000163e-05, 7.370899999999819e-05, 7.409700000000213e-05, 7.399999999999768e-05, 7.390200000000069e-05, 7.36249999999973e-05, 7.37500000000009e-05, 7.365300000000338e-05, 7.354099999999988e-05, 7.376400000000047e-05, 7.377800000000004e-05, 7.354199999999936e-05, 7.372199999999829e-05, 7.409700000000213e-05, 7.393100000000277e-05, 7.390300000000016e-05, 7.370800000000219e-05, 7.419399999999965e-05, 7.36110000000012e-05, 7.358399999999807e-05, 7.397300000000148e-05, 7.36249999999973e-05, 7.409800000000161e-05, 7.384800000000136e-05, 7.362500000000077e-05, 7.384700000000188e-05, 7.390300000000016e-05, 7.370800000000219e-05, 7.386099999999798e-05, 7.383299999999884e-05, 7.376400000000047e-05, 7.398600000000158e-05]</msg>
<status status="PASS" starttime="20201030 11:51:30.297" endtime="20201030 11:51:30.300"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.292" endtime="20201030 11:51:30.300"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:30.304" endtime="20201030 11:51:30.324"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.303" endtime="20201030 11:51:30.324"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.301" endtime="20201030 11:51:30.324"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.943" endtime="20201030 11:51:30.325"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.942" endtime="20201030 11:51:30.325"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:30.334" endtime="20201030 11:51:30.351"></status>
</kw>
<msg timestamp="20201030 11:51:30.352" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:30.332" endtime="20201030 11:51:30.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:30.354" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:30.353" endtime="20201030 11:51:30.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:30.355" endtime="20201030 11:51:30.357"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.329" endtime="20201030 11:51:30.357"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.327" endtime="20201030 11:51:30.358"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:30.365" endtime="20201030 11:51:30.650"></status>
</kw>
<msg timestamp="20201030 11:51:30.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021950431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022025903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:30.363" endtime="20201030 11:51:30.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:30.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021950431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022025903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:30.655" endtime="20201030 11:51:30.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:30.663" endtime="20201030 11:51:30.665"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.360" endtime="20201030 11:51:30.665"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.359" endtime="20201030 11:51:30.666"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:30.670" level="INFO">${RESULT} = [{'diff': 7.547200000000004e-05}, {'diff': 7.530600000000068e-05}, {'diff': 7.497300000000248e-05}, {'diff': 7.498600000000258e-05}, {'diff': 7.499999999999868e-05}, {'diff': 7.501299999999878e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:30.666" endtime="20201030 11:51:30.670"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:30.675" level="INFO">${ACCURACY} = {'diff': [7.547200000000004e-05, 7.530600000000068e-05, 7.497300000000248e-05, 7.498600000000258e-05, 7.499999999999868e-05, 7.501299999999878e-05, 7.476400000000147e-05, 7.504100000000138e-05, 7.4902...</msg>
<status status="PASS" starttime="20201030 11:51:30.670" endtime="20201030 11:51:30.675"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:30.679" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201030 11:51:30.678" endtime="20201030 11:51:30.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:30.681" level="INFO">VALUE: [7.547200000000004e-05, 7.530600000000068e-05, 7.497300000000248e-05, 7.498600000000258e-05, 7.499999999999868e-05, 7.501299999999878e-05, 7.476400000000147e-05, 7.504100000000138e-05, 7.490200000000169e-05, 7.505499999999748e-05, 7.468000000000058e-05, 7.466600000000101e-05, 7.459699999999916e-05, 7.477800000000104e-05, 7.504200000000086e-05, 7.46249999999983e-05, 7.461099999999873e-05, 7.483399999999932e-05, 7.479200000000061e-05, 7.463900000000134e-05, 7.494499999999987e-05, 7.490300000000116e-05, 7.511099999999923e-05, 7.459799999999864e-05, 7.461099999999873e-05, 7.49310000000003e-05, 7.507e-05, 7.45829999999996e-05, 7.49440000000004e-05, 7.50830000000001e-05, 7.473599999999886e-05, 7.470799999999972e-05, 7.454100000000088e-05, 7.502800000000129e-05, 7.50830000000001e-05, 7.491699999999726e-05, 7.472200000000276e-05, 7.488899999999812e-05, 7.481999999999975e-05, 7.480600000000018e-05, 7.472199999999929e-05, 7.468100000000005e-05, 7.455599999999993e-05, 7.486100000000245e-05, 7.483399999999932e-05, 7.477799999999757e-05, 7.479200000000061e-05, 7.511099999999923e-05, 7.502699999999835e-05, 7.480499999999723e-05]</msg>
<status status="PASS" starttime="20201030 11:51:30.680" endtime="20201030 11:51:30.682"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.675" endtime="20201030 11:51:30.683"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:30.686" endtime="20201030 11:51:30.706"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.685" endtime="20201030 11:51:30.706"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.684" endtime="20201030 11:51:30.707"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.326" endtime="20201030 11:51:30.707"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.325" endtime="20201030 11:51:30.707"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:30.716" endtime="20201030 11:51:30.733"></status>
</kw>
<msg timestamp="20201030 11:51:30.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:30.714" endtime="20201030 11:51:30.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:30.736" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:30.735" endtime="20201030 11:51:30.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:30.737" endtime="20201030 11:51:30.739"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.712" endtime="20201030 11:51:30.739"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.710" endtime="20201030 11:51:30.740"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:30.746" endtime="20201030 11:51:31.032"></status>
</kw>
<msg timestamp="20201030 11:51:31.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021807097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021883125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:30.745" endtime="20201030 11:51:31.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:31.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021807097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021883125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:31.037" endtime="20201030 11:51:31.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:31.045" endtime="20201030 11:51:31.047"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.742" endtime="20201030 11:51:31.047"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.740" endtime="20201030 11:51:31.048"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:31.051" level="INFO">${RESULT} = [{'diff': 7.602799999999882e-05}, {'diff': 7.643099999999833e-05}, {'diff': 7.580599999999771e-05}, {'diff': 7.577799999999857e-05}, {'diff': 7.595800000000097e-05}, {'diff': 7.567999999999811e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:31.048" endtime="20201030 11:51:31.052"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:31.056" level="INFO">${ACCURACY} = {'diff': [7.602799999999882e-05, 7.643099999999833e-05, 7.580599999999771e-05, 7.577799999999857e-05, 7.595800000000097e-05, 7.567999999999811e-05, 7.56249999999993e-05, 7.601399999999925e-05, 7.56519...</msg>
<status status="PASS" starttime="20201030 11:51:31.052" endtime="20201030 11:51:31.056"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:31.060" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201030 11:51:31.059" endtime="20201030 11:51:31.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:31.063" level="INFO">VALUE: [7.602799999999882e-05, 7.643099999999833e-05, 7.580599999999771e-05, 7.577799999999857e-05, 7.595800000000097e-05, 7.567999999999811e-05, 7.56249999999993e-05, 7.601399999999925e-05, 7.565199999999897e-05, 7.599999999999968e-05, 7.599999999999968e-05, 7.611100000000023e-05, 7.58050000000017e-05, 7.577799999999857e-05, 7.598600000000011e-05, 7.570800000000072e-05, 7.592999999999836e-05, 7.584700000000041e-05, 7.586099999999998e-05, 7.602799999999882e-05, 7.55700000000005e-05, 7.611199999999971e-05, 7.56249999999993e-05, 7.574999999999943e-05, 7.576299999999953e-05, 7.566699999999801e-05, 7.601299999999978e-05, 7.587499999999955e-05, 7.56249999999993e-05, 7.581900000000127e-05, 7.563900000000234e-05, 7.611100000000023e-05, 7.597200000000054e-05, 7.61249999999998e-05, 7.563900000000234e-05, 7.59029999999987e-05, 7.579200000000161e-05, 7.59310000000013e-05, 7.6070000000001e-05, 7.565300000000191e-05, 7.577800000000204e-05, 7.569500000000062e-05, 7.583400000000032e-05, 7.598600000000011e-05, 7.591600000000226e-05, 7.582000000000075e-05, 7.586099999999998e-05, 7.612500000000327e-05, 7.599999999999968e-05, 7.579100000000213e-05]</msg>
<status status="PASS" starttime="20201030 11:51:31.061" endtime="20201030 11:51:31.063"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.056" endtime="20201030 11:51:31.064"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:31.068" endtime="20201030 11:51:31.087"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.066" endtime="20201030 11:51:31.088"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.065" endtime="20201030 11:51:31.088"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.708" endtime="20201030 11:51:31.088"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.707" endtime="20201030 11:51:31.088"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:31.097" endtime="20201030 11:51:31.117"></status>
</kw>
<msg timestamp="20201030 11:51:31.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:31.095" endtime="20201030 11:51:31.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:31.120" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:31.119" endtime="20201030 11:51:31.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:31.121" endtime="20201030 11:51:31.123"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.093" endtime="20201030 11:51:31.123"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.091" endtime="20201030 11:51:31.124"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:31.130" endtime="20201030 11:51:31.416"></status>
</kw>
<msg timestamp="20201030 11:51:31.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024987236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025064694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:31.129" endtime="20201030 11:51:31.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:31.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024987236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025064694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:31.421" endtime="20201030 11:51:31.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:31.429" endtime="20201030 11:51:31.431"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.126" endtime="20201030 11:51:31.431"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.124" endtime="20201030 11:51:31.432"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:31.436" level="INFO">${RESULT} = [{'diff': 7.7457999999999e-05}, {'diff': 7.695800000000197e-05}, {'diff': 7.683300000000184e-05}, {'diff': 7.67770000000001e-05}, {'diff': 7.677799999999957e-05}, {'diff': 7.709700000000166e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 11:51:31.432" endtime="20201030 11:51:31.436"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:31.440" level="INFO">${ACCURACY} = {'diff': [7.7457999999999e-05, 7.695800000000197e-05, 7.683300000000184e-05, 7.67770000000001e-05, 7.677799999999957e-05, 7.709700000000166e-05, 7.686099999999751e-05, 7.666599999999954e-05, 7.6777999...</msg>
<status status="PASS" starttime="20201030 11:51:31.437" endtime="20201030 11:51:31.440"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:31.444" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201030 11:51:31.443" endtime="20201030 11:51:31.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:31.447" level="INFO">VALUE: [7.7457999999999e-05, 7.695800000000197e-05, 7.683300000000184e-05, 7.67770000000001e-05, 7.677799999999957e-05, 7.709700000000166e-05, 7.686099999999751e-05, 7.666599999999954e-05, 7.677799999999957e-05, 7.69029999999997e-05, 7.668099999999858e-05, 7.705599999999896e-05, 7.659700000000116e-05, 7.708299999999862e-05, 7.701400000000025e-05, 7.695900000000144e-05, 7.668099999999858e-05, 7.698600000000111e-05, 7.686200000000046e-05, 7.69310000000023e-05, 7.704099999999992e-05, 7.672300000000076e-05, 7.683300000000184e-05, 7.661100000000073e-05, 7.686100000000098e-05, 7.677799999999957e-05, 7.669399999999868e-05, 7.701400000000025e-05, 7.666699999999901e-05, 7.659700000000116e-05, 7.71250000000008e-05, 7.652799999999932e-05, 7.686100000000098e-05, 7.654199999999889e-05, 7.706999999999853e-05, 7.709700000000166e-05, 7.701400000000025e-05, 7.655599999999846e-05, 7.709800000000114e-05, 7.67229999999973e-05, 7.693099999999883e-05, 7.659700000000116e-05, 7.65830000000016e-05, 7.692999999999936e-05, 7.681900000000227e-05, 7.706900000000252e-05, 7.698599999999764e-05, 7.694399999999893e-05, 7.704099999999992e-05, 7.672300000000076e-05]</msg>
<status status="PASS" starttime="20201030 11:51:31.445" endtime="20201030 11:51:31.448"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.441" endtime="20201030 11:51:31.449"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:31.453" endtime="20201030 11:51:31.472"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.451" endtime="20201030 11:51:31.473"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.450" endtime="20201030 11:51:31.473"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.089" endtime="20201030 11:51:31.473"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.089" endtime="20201030 11:51:31.473"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:31.482" endtime="20201030 11:51:31.500"></status>
</kw>
<msg timestamp="20201030 11:51:31.500" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:31.480" endtime="20201030 11:51:31.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:31.503" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:31.501" endtime="20201030 11:51:31.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:31.504" endtime="20201030 11:51:31.505"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.478" endtime="20201030 11:51:31.506"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.476" endtime="20201030 11:51:31.506"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:31.513" endtime="20201030 11:51:31.799"></status>
</kw>
<msg timestamp="20201030 11:51:31.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021625264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0217035, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:51:31.511" endtime="20201030 11:51:31.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:31.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021625264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0217035, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:51:31.803" endtime="20201030 11:51:31.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:31.811" endtime="20201030 11:51:31.813"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.509" endtime="20201030 11:51:31.814"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.507" endtime="20201030 11:51:31.814"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:31.818" level="INFO">${RESULT} = [{'diff': 7.823599999999889e-05}, {'diff': 7.788900000000112e-05}, {'diff': 7.808299999999962e-05}, {'diff': 7.801400000000125e-05}, {'diff': 7.802800000000082e-05}, {'diff': 7.783300000000284e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:31.815" endtime="20201030 11:51:31.818"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:31.823" level="INFO">${ACCURACY} = {'diff': [7.823599999999889e-05, 7.788900000000112e-05, 7.808299999999962e-05, 7.801400000000125e-05, 7.802800000000082e-05, 7.783300000000284e-05, 7.811099999999876e-05, 7.784699999999894e-05, 7.7792...</msg>
<status status="PASS" starttime="20201030 11:51:31.819" endtime="20201030 11:51:31.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:31.828" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201030 11:51:31.827" endtime="20201030 11:51:31.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:31.830" level="INFO">VALUE: [7.823599999999889e-05, 7.788900000000112e-05, 7.808299999999962e-05, 7.801400000000125e-05, 7.802800000000082e-05, 7.783300000000284e-05, 7.811099999999876e-05, 7.784699999999894e-05, 7.779200000000014e-05, 7.81389999999979e-05, 7.805599999999996e-05, 7.799999999999821e-05, 7.801399999999778e-05, 7.812499999999833e-05, 7.798599999999864e-05, 7.770800000000272e-05, 7.780500000000024e-05, 7.786100000000198e-05, 7.797199999999907e-05, 7.802800000000082e-05, 7.761100000000173e-05, 7.761099999999826e-05, 7.777800000000057e-05, 7.780599999999971e-05, 7.808299999999962e-05, 7.805599999999996e-05, 7.787499999999808e-05, 7.775000000000143e-05, 7.763900000000087e-05, 7.80839999999991e-05, 7.79449999999994e-05, 7.797299999999854e-05, 7.775000000000143e-05, 7.790200000000122e-05, 7.763799999999793e-05, 7.788899999999765e-05, 7.783299999999937e-05, 7.806900000000006e-05, 7.772199999999882e-05, 7.765299999999697e-05, 7.80969999999992e-05, 7.799999999999821e-05, 7.768099999999958e-05, 7.806900000000006e-05, 7.750000000000118e-05, 7.75969999999987e-05, 7.765300000000044e-05, 7.801400000000125e-05, 7.822199999999932e-05, 7.768000000000011e-05]</msg>
<status status="PASS" starttime="20201030 11:51:31.829" endtime="20201030 11:51:31.831"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.824" endtime="20201030 11:51:31.832"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:31.835" endtime="20201030 11:51:31.855"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.834" endtime="20201030 11:51:31.855"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.832" endtime="20201030 11:51:31.855"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.474" endtime="20201030 11:51:31.856"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.474" endtime="20201030 11:51:31.856"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:31.865" endtime="20201030 11:51:31.883"></status>
</kw>
<msg timestamp="20201030 11:51:31.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:31.863" endtime="20201030 11:51:31.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:31.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:31.884" endtime="20201030 11:51:31.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:31.887" endtime="20201030 11:51:31.888"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.860" endtime="20201030 11:51:31.889"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.858" endtime="20201030 11:51:31.889"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:31.896" endtime="20201030 11:51:32.183"></status>
</kw>
<msg timestamp="20201030 11:51:32.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022112847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022192611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:31.894" endtime="20201030 11:51:32.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:32.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022112847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022192611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:32.187" endtime="20201030 11:51:32.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:32.195" endtime="20201030 11:51:32.197"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.892" endtime="20201030 11:51:32.198"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.890" endtime="20201030 11:51:32.198"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:32.202" level="INFO">${RESULT} = [{'diff': 7.976399999999953e-05}, {'diff': 7.89450000000004e-05}, {'diff': 7.875000000000243e-05}, {'diff': 7.886099999999951e-05}, {'diff': 7.883300000000037e-05}, {'diff': 7.902699999999888e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:32.199" endtime="20201030 11:51:32.202"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:32.206" level="INFO">${ACCURACY} = {'diff': [7.976399999999953e-05, 7.89450000000004e-05, 7.875000000000243e-05, 7.886099999999951e-05, 7.883300000000037e-05, 7.902699999999888e-05, 7.86250000000023e-05, 7.905599999999749e-05, 7.886100...</msg>
<status status="PASS" starttime="20201030 11:51:32.203" endtime="20201030 11:51:32.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:32.211" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201030 11:51:32.210" endtime="20201030 11:51:32.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:32.213" level="INFO">VALUE: [7.976399999999953e-05, 7.89450000000004e-05, 7.875000000000243e-05, 7.886099999999951e-05, 7.883300000000037e-05, 7.902699999999888e-05, 7.86250000000023e-05, 7.905599999999749e-05, 7.886100000000298e-05, 7.89030000000017e-05, 7.898599999999964e-05, 7.882000000000028e-05, 7.865299999999797e-05, 7.906900000000106e-05, 7.908300000000063e-05, 7.916599999999857e-05, 7.886100000000298e-05, 7.883300000000037e-05, 7.904100000000192e-05, 7.873599999999939e-05, 7.898599999999964e-05, 7.883300000000037e-05, 7.901399999999878e-05, 7.883300000000037e-05, 7.906900000000106e-05, 7.865300000000144e-05, 7.863900000000187e-05, 7.886099999999951e-05, 7.873599999999939e-05, 7.904199999999792e-05, 7.86519999999985e-05, 7.862499999999883e-05, 7.905599999999749e-05, 7.856900000000056e-05, 7.874999999999896e-05, 7.858300000000012e-05, 7.855500000000099e-05, 7.894400000000093e-05, 7.883300000000037e-05, 7.855499999999752e-05, 7.897200000000007e-05, 7.855499999999752e-05, 7.89030000000017e-05, 7.90970000000002e-05, 7.872199999999982e-05, 7.897299999999954e-05, 7.915299999999847e-05, 7.906900000000106e-05, 7.855599999999699e-05, 7.882000000000028e-05]</msg>
<status status="PASS" starttime="20201030 11:51:32.212" endtime="20201030 11:51:32.214"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.207" endtime="20201030 11:51:32.214"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:32.218" endtime="20201030 11:51:32.237"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.217" endtime="20201030 11:51:32.238"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.215" endtime="20201030 11:51:32.238"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.857" endtime="20201030 11:51:32.239"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.856" endtime="20201030 11:51:32.239"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:32.248" endtime="20201030 11:51:32.266"></status>
</kw>
<msg timestamp="20201030 11:51:32.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:32.246" endtime="20201030 11:51:32.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:32.269" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:32.267" endtime="20201030 11:51:32.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:32.270" endtime="20201030 11:51:32.271"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.243" endtime="20201030 11:51:32.272"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.241" endtime="20201030 11:51:32.272"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:32.279" endtime="20201030 11:51:32.564"></status>
</kw>
<msg timestamp="20201030 11:51:32.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022828417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022909083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:32.277" endtime="20201030 11:51:32.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:32.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022828417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022909083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:32.568" endtime="20201030 11:51:32.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:32.576" endtime="20201030 11:51:32.578"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.275" endtime="20201030 11:51:32.579"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.273" endtime="20201030 11:51:32.579"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:32.583" level="INFO">${RESULT} = [{'diff': 8.066600000000007e-05}, {'diff': 8.031999999999831e-05}, {'diff': 8.000000000000021e-05}, {'diff': 7.958299999999766e-05}, {'diff': 7.986100000000051e-05}, {'diff': 7.961100000000026e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:32.580" endtime="20201030 11:51:32.583"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:32.587" level="INFO">${ACCURACY} = {'diff': [8.066600000000007e-05, 8.031999999999831e-05, 8.000000000000021e-05, 7.958299999999766e-05, 7.986100000000051e-05, 7.961100000000026e-05, 8.000000000000021e-05, 8.008300000000163e-05, 7.9903...</msg>
<status status="PASS" starttime="20201030 11:51:32.584" endtime="20201030 11:51:32.587"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:32.592" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201030 11:51:32.591" endtime="20201030 11:51:32.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:32.594" level="INFO">VALUE: [8.066600000000007e-05, 8.031999999999831e-05, 8.000000000000021e-05, 7.958299999999766e-05, 7.986100000000051e-05, 7.961100000000026e-05, 8.000000000000021e-05, 8.008300000000163e-05, 7.99030000000027e-05, 7.972199999999735e-05, 7.976399999999953e-05, 8.002799999999935e-05, 8.007000000000153e-05, 7.957000000000103e-05, 7.995900000000097e-05, 7.973699999999986e-05, 8.00840000000011e-05, 7.988899999999965e-05, 7.970800000000125e-05, 7.977699999999963e-05, 7.974999999999996e-05, 8.011100000000076e-05, 7.976399999999953e-05, 8.00970000000012e-05, 7.968000000000211e-05, 7.984700000000094e-05, 7.998600000000064e-05, 7.980599999999824e-05, 8.011100000000076e-05, 8.002799999999935e-05, 7.966700000000201e-05, 8.011100000000076e-05, 7.972200000000082e-05, 8.00979999999972e-05, 7.969499999999768e-05, 8.00840000000011e-05, 7.976399999999953e-05, 7.992999999999889e-05, 7.986100000000051e-05, 7.980499999999877e-05, 8.005600000000196e-05, 7.969400000000168e-05, 7.955500000000199e-05, 7.994400000000193e-05, 7.977800000000257e-05, 7.951399999999928e-05, 7.988899999999965e-05, 8.00970000000012e-05, 7.986100000000051e-05, 7.979200000000214e-05]</msg>
<status status="PASS" starttime="20201030 11:51:32.593" endtime="20201030 11:51:32.596"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.588" endtime="20201030 11:51:32.596"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:32.600" endtime="20201030 11:51:32.619"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.599" endtime="20201030 11:51:32.620"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.597" endtime="20201030 11:51:32.621"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.240" endtime="20201030 11:51:32.621"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.239" endtime="20201030 11:51:32.621"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:32.631" endtime="20201030 11:51:32.648"></status>
</kw>
<msg timestamp="20201030 11:51:32.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:32.629" endtime="20201030 11:51:32.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:32.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:32.650" endtime="20201030 11:51:32.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:32.652" endtime="20201030 11:51:32.654"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.626" endtime="20201030 11:51:32.655"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.624" endtime="20201030 11:51:32.655"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:32.661" endtime="20201030 11:51:32.947"></status>
</kw>
<msg timestamp="20201030 11:51:32.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022900236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022981931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:32.660" endtime="20201030 11:51:32.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:32.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022900236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022981931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:32.952" endtime="20201030 11:51:32.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:32.960" endtime="20201030 11:51:32.962"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.657" endtime="20201030 11:51:32.962"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.656" endtime="20201030 11:51:32.963"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:32.967" level="INFO">${RESULT} = [{'diff': 8.169499999999968e-05}, {'diff': 8.143000000000039e-05}, {'diff': 8.076400000000053e-05}, {'diff': 8.109699999999873e-05}, {'diff': 8.08329999999989e-05}, {'diff': 8.081899999999934e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:32.963" endtime="20201030 11:51:32.967"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:32.972" level="INFO">${ACCURACY} = {'diff': [8.169499999999968e-05, 8.143000000000039e-05, 8.076400000000053e-05, 8.109699999999873e-05, 8.08329999999989e-05, 8.081899999999934e-05, 8.081899999999934e-05, 8.086100000000151e-05, 8.08469...</msg>
<status status="PASS" starttime="20201030 11:51:32.968" endtime="20201030 11:51:32.972"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:32.976" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201030 11:51:32.975" endtime="20201030 11:51:32.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:32.979" level="INFO">VALUE: [8.169499999999968e-05, 8.143000000000039e-05, 8.076400000000053e-05, 8.109699999999873e-05, 8.08329999999989e-05, 8.081899999999934e-05, 8.081899999999934e-05, 8.086100000000151e-05, 8.084699999999848e-05, 8.09169999999998e-05, 8.081899999999934e-05, 8.097300000000154e-05, 8.080599999999924e-05, 8.061100000000126e-05, 8.055599999999899e-05, 8.07780000000001e-05, 8.062499999999737e-05, 8.093099999999936e-05, 8.094400000000293e-05, 8.054199999999942e-05, 8.062500000000083e-05, 8.100000000000121e-05, 8.087500000000108e-05, 8.087500000000108e-05, 8.07780000000001e-05, 8.059699999999823e-05, 8.061100000000126e-05, 8.095799999999903e-05, 8.079199999999967e-05, 8.080599999999924e-05, 8.088900000000065e-05, 8.108300000000263e-05, 8.061100000000126e-05, 8.102800000000035e-05, 8.074999999999749e-05, 8.10840000000021e-05, 8.094499999999893e-05, 8.101400000000078e-05, 8.066699999999954e-05, 8.076400000000053e-05, 8.088799999999771e-05, 8.076400000000053e-05, 8.108300000000263e-05, 8.094399999999946e-05, 8.102800000000035e-05, 8.07780000000001e-05, 8.098600000000164e-05, 8.095799999999903e-05, 8.073600000000139e-05, 8.062500000000083e-05]</msg>
<status status="PASS" starttime="20201030 11:51:32.977" endtime="20201030 11:51:32.980"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.973" endtime="20201030 11:51:32.980"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:32.984" endtime="20201030 11:51:33.003"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.982" endtime="20201030 11:51:33.004"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.981" endtime="20201030 11:51:33.004"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.622" endtime="20201030 11:51:33.005"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.621" endtime="20201030 11:51:33.005"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:33.013" endtime="20201030 11:51:33.031"></status>
</kw>
<msg timestamp="20201030 11:51:33.032" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:33.012" endtime="20201030 11:51:33.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:33.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:33.033" endtime="20201030 11:51:33.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:33.035" endtime="20201030 11:51:33.037"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.009" endtime="20201030 11:51:33.037"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.007" endtime="20201030 11:51:33.038"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:33.044" endtime="20201030 11:51:33.330"></status>
</kw>
<msg timestamp="20201030 11:51:33.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021824833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021907625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:33.043" endtime="20201030 11:51:33.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:33.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021824833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021907625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:33.334" endtime="20201030 11:51:33.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:33.343" endtime="20201030 11:51:33.344"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.040" endtime="20201030 11:51:33.345"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.038" endtime="20201030 11:51:33.345"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:33.349" level="INFO">${RESULT} = [{'diff': 8.279200000000167e-05}, {'diff': 8.223599999999942e-05}, {'diff': 8.186100000000252e-05}, {'diff': 8.176300000000206e-05}, {'diff': 8.162499999999837e-05}, {'diff': 8.181999999999981e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:33.346" endtime="20201030 11:51:33.350"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:33.353" level="INFO">${ACCURACY} = {'diff': [8.279200000000167e-05, 8.223599999999942e-05, 8.186100000000252e-05, 8.176300000000206e-05, 8.162499999999837e-05, 8.181999999999981e-05, 8.193000000000089e-05, 8.19719999999996e-05, 8.16940...</msg>
<status status="PASS" starttime="20201030 11:51:33.350" endtime="20201030 11:51:33.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:33.358" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201030 11:51:33.357" endtime="20201030 11:51:33.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:33.360" level="INFO">VALUE: [8.279200000000167e-05, 8.223599999999942e-05, 8.186100000000252e-05, 8.176300000000206e-05, 8.162499999999837e-05, 8.181999999999981e-05, 8.193000000000089e-05, 8.19719999999996e-05, 8.169400000000021e-05, 8.18329999999999e-05, 8.166700000000054e-05, 8.161100000000227e-05, 8.166600000000107e-05, 8.175000000000196e-05, 8.165300000000097e-05, 8.200000000000221e-05, 8.172199999999935e-05, 8.176399999999806e-05, 8.195800000000003e-05, 8.18329999999999e-05, 8.19719999999996e-05, 8.194499999999993e-05, 8.195900000000297e-05, 8.16390000000014e-05, 8.15979999999987e-05, 8.183399999999938e-05, 8.166700000000054e-05, 8.154200000000042e-05, 8.188899999999819e-05, 8.190199999999828e-05, 8.187500000000208e-05, 8.181900000000034e-05, 8.18329999999999e-05, 8.161100000000227e-05, 8.16109999999988e-05, 8.205500000000102e-05, 8.179200000000067e-05, 8.186099999999905e-05, 8.199999999999874e-05, 8.206900000000059e-05, 8.198599999999917e-05, 8.161100000000227e-05, 8.173599999999892e-05, 8.16109999999988e-05, 8.213899999999844e-05, 8.162500000000183e-05, 8.166600000000107e-05, 8.201399999999831e-05, 8.156900000000009e-05, 8.155499999999705e-05]</msg>
<status status="PASS" starttime="20201030 11:51:33.359" endtime="20201030 11:51:33.361"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.354" endtime="20201030 11:51:33.362"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:33.366" endtime="20201030 11:51:33.385"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.364" endtime="20201030 11:51:33.386"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.363" endtime="20201030 11:51:33.386"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.006" endtime="20201030 11:51:33.386"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.005" endtime="20201030 11:51:33.386"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:33.395" endtime="20201030 11:51:33.414"></status>
</kw>
<msg timestamp="20201030 11:51:33.415" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:33.393" endtime="20201030 11:51:33.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:33.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:33.416" endtime="20201030 11:51:33.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:33.418" endtime="20201030 11:51:33.420"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.391" endtime="20201030 11:51:33.421"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.389" endtime="20201030 11:51:33.421"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:33.427" endtime="20201030 11:51:33.713"></status>
</kw>
<msg timestamp="20201030 11:51:33.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022793528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022877097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:33.426" endtime="20201030 11:51:33.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:33.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022793528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022877097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:33.718" endtime="20201030 11:51:33.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:33.726" endtime="20201030 11:51:33.728"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.423" endtime="20201030 11:51:33.728"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.422" endtime="20201030 11:51:33.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:33.733" level="INFO">${RESULT} = [{'diff': 8.356899999999862e-05}, {'diff': 8.295800000000103e-05}, {'diff': 8.294400000000146e-05}, {'diff': 8.280600000000124e-05}, {'diff': 8.29720000000006e-05}, {'diff': 8.287499999999962e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:33.729" endtime="20201030 11:51:33.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:33.737" level="INFO">${ACCURACY} = {'diff': [8.356899999999862e-05, 8.295800000000103e-05, 8.294400000000146e-05, 8.280600000000124e-05, 8.29720000000006e-05, 8.287499999999962e-05, 8.255499999999805e-05, 8.283400000000038e-05, 8.28190...</msg>
<status status="PASS" starttime="20201030 11:51:33.734" endtime="20201030 11:51:33.737"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:33.741" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201030 11:51:33.740" endtime="20201030 11:51:33.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:33.744" level="INFO">VALUE: [8.356899999999862e-05, 8.295800000000103e-05, 8.294400000000146e-05, 8.280600000000124e-05, 8.29720000000006e-05, 8.287499999999962e-05, 8.255499999999805e-05, 8.283400000000038e-05, 8.281900000000134e-05, 8.283299999999744e-05, 8.25979999999997e-05, 8.266700000000154e-05, 8.295800000000103e-05, 8.284700000000048e-05, 8.274999999999949e-05, 8.28330000000009e-05, 8.263899999999894e-05, 8.295800000000103e-05, 8.265300000000197e-05, 8.288899999999919e-05, 8.313899999999944e-05, 8.270800000000078e-05, 8.280600000000124e-05, 8.29859999999967e-05, 8.282000000000081e-05, 8.258299999999719e-05, 8.256999999999709e-05, 8.269500000000068e-05, 8.304199999999845e-05, 8.287499999999962e-05, 8.306999999999759e-05, 8.287499999999962e-05, 8.298699999999964e-05, 8.279099999999873e-05, 8.304099999999898e-05, 8.292999999999842e-05, 8.301399999999931e-05, 8.31110000000003e-05, 8.305599999999802e-05, 8.306899999999812e-05, 8.277799999999863e-05, 8.270800000000078e-05, 8.290299999999876e-05, 8.29720000000006e-05, 8.270900000000025e-05, 8.268100000000111e-05, 8.301399999999931e-05, 8.29720000000006e-05, 8.301399999999931e-05, 8.282000000000081e-05]</msg>
<status status="PASS" starttime="20201030 11:51:33.742" endtime="20201030 11:51:33.745"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.738" endtime="20201030 11:51:33.746"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:33.750" endtime="20201030 11:51:33.769"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.748" endtime="20201030 11:51:33.770"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.747" endtime="20201030 11:51:33.770"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.387" endtime="20201030 11:51:33.770"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.387" endtime="20201030 11:51:33.770"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:33.779" endtime="20201030 11:51:33.797"></status>
</kw>
<msg timestamp="20201030 11:51:33.797" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:33.778" endtime="20201030 11:51:33.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:33.800" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:33.798" endtime="20201030 11:51:33.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:33.801" endtime="20201030 11:51:33.802"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.775" endtime="20201030 11:51:33.803"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.773" endtime="20201030 11:51:33.803"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:33.810" endtime="20201030 11:51:34.096"></status>
</kw>
<msg timestamp="20201030 11:51:34.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021817208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021901181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:33.808" endtime="20201030 11:51:34.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:34.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021817208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021901181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:34.100" endtime="20201030 11:51:34.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:34.109" endtime="20201030 11:51:34.110"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.806" endtime="20201030 11:51:34.111"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.804" endtime="20201030 11:51:34.112"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:34.116" level="INFO">${RESULT} = [{'diff': 8.39729999999976e-05}, {'diff': 8.404099999999998e-05}, {'diff': 8.392999999999942e-05}, {'diff': 8.409699999999826e-05}, {'diff': 8.41110000000013e-05}, {'diff': 8.402699999999694e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:51:34.112" endtime="20201030 11:51:34.116"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:34.122" level="INFO">${ACCURACY} = {'diff': [8.39729999999976e-05, 8.404099999999998e-05, 8.392999999999942e-05, 8.409699999999826e-05, 8.41110000000013e-05, 8.402699999999694e-05, 8.388900000000019e-05, 8.368099999999865e-05, 8.375000...</msg>
<status status="PASS" starttime="20201030 11:51:34.117" endtime="20201030 11:51:34.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:34.127" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201030 11:51:34.126" endtime="20201030 11:51:34.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:34.130" level="INFO">VALUE: [8.39729999999976e-05, 8.404099999999998e-05, 8.392999999999942e-05, 8.409699999999826e-05, 8.41110000000013e-05, 8.402699999999694e-05, 8.388900000000019e-05, 8.368099999999865e-05, 8.375000000000049e-05, 8.372199999999788e-05, 8.383299999999844e-05, 8.394400000000246e-05, 8.395799999999856e-05, 8.359700000000123e-05, 8.383400000000138e-05, 8.356999999999809e-05, 8.381999999999834e-05, 8.398600000000117e-05, 8.393100000000236e-05, 8.390299999999976e-05, 8.366699999999908e-05, 8.397199999999813e-05, 8.375000000000049e-05, 8.372199999999788e-05, 8.386100000000105e-05, 8.374999999999702e-05, 8.373600000000092e-05, 8.387500000000062e-05, 8.361099999999733e-05, 8.373600000000092e-05, 8.388900000000019e-05, 8.406999999999859e-05, 8.406999999999859e-05, 8.370900000000125e-05, 8.36529999999995e-05, 8.387499999999715e-05, 8.394500000000193e-05, 8.372299999999736e-05, 8.40980000000012e-05, 8.380600000000224e-05, 8.388900000000019e-05, 8.352699999999991e-05, 8.392999999999942e-05, 8.409699999999826e-05, 8.39309999999989e-05, 8.398600000000117e-05, 8.356900000000209e-05, 8.362500000000037e-05, 8.412500000000087e-05, 8.37780000000031e-05]</msg>
<status status="PASS" starttime="20201030 11:51:34.129" endtime="20201030 11:51:34.131"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.123" endtime="20201030 11:51:34.131"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:34.135" endtime="20201030 11:51:34.154"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.133" endtime="20201030 11:51:34.155"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.132" endtime="20201030 11:51:34.155"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.771" endtime="20201030 11:51:34.156"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.771" endtime="20201030 11:51:34.156"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:34.164" endtime="20201030 11:51:34.182"></status>
</kw>
<msg timestamp="20201030 11:51:34.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:34.163" endtime="20201030 11:51:34.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:34.185" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:34.183" endtime="20201030 11:51:34.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:34.186" endtime="20201030 11:51:34.188"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.160" endtime="20201030 11:51:34.188"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.158" endtime="20201030 11:51:34.189"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:34.195" endtime="20201030 11:51:34.481"></status>
</kw>
<msg timestamp="20201030 11:51:34.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021712903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021798181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:34.193" endtime="20201030 11:51:34.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:34.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021712903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021798181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:34.486" endtime="20201030 11:51:34.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:34.494" endtime="20201030 11:51:34.495"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.191" endtime="20201030 11:51:34.496"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.189" endtime="20201030 11:51:34.496"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:34.500" level="INFO">${RESULT} = [{'diff': 8.527800000000113e-05}, {'diff': 8.486099999999858e-05}, {'diff': 8.481899999999987e-05}, {'diff': 8.504100000000098e-05}, {'diff': 8.469399999999974e-05}, {'diff': 8.502800000000088e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:34.497" endtime="20201030 11:51:34.500"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:34.504" level="INFO">${ACCURACY} = {'diff': [8.527800000000113e-05, 8.486099999999858e-05, 8.481899999999987e-05, 8.504100000000098e-05, 8.469399999999974e-05, 8.502800000000088e-05, 8.470799999999931e-05, 8.498600000000217e-05, 8.4735...</msg>
<status status="PASS" starttime="20201030 11:51:34.501" endtime="20201030 11:51:34.505"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:34.509" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201030 11:51:34.508" endtime="20201030 11:51:34.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:34.511" level="INFO">VALUE: [8.527800000000113e-05, 8.486099999999858e-05, 8.481899999999987e-05, 8.504100000000098e-05, 8.469399999999974e-05, 8.502800000000088e-05, 8.470799999999931e-05, 8.498600000000217e-05, 8.473599999999845e-05, 8.5153000000001e-05, 8.501400000000131e-05, 8.506999999999959e-05, 8.488900000000119e-05, 8.491700000000033e-05, 8.486100000000205e-05, 8.461099999999833e-05, 8.509700000000273e-05, 8.48330000000029e-05, 8.511099999999883e-05, 8.474999999999802e-05, 8.490200000000128e-05, 8.474999999999802e-05, 8.473599999999845e-05, 8.483299999999944e-05, 8.505600000000002e-05, 8.474999999999802e-05, 8.47920000000002e-05, 8.458300000000266e-05, 8.477800000000063e-05, 8.49309999999999e-05, 8.502800000000088e-05, 8.508399999999916e-05, 8.47920000000002e-05, 8.511099999999883e-05, 8.493100000000336e-05, 8.45980000000017e-05, 8.46249999999979e-05, 8.484700000000248e-05, 8.487500000000162e-05, 8.512500000000187e-05, 8.51110000000023e-05, 8.459699999999876e-05, 8.472199999999888e-05, 8.472199999999888e-05, 8.506900000000012e-05, 8.470799999999931e-05, 8.476400000000106e-05, 8.493000000000042e-05, 8.480599999999977e-05, 8.47920000000002e-05]</msg>
<status status="PASS" starttime="20201030 11:51:34.510" endtime="20201030 11:51:34.512"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.505" endtime="20201030 11:51:34.513"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:34.517" endtime="20201030 11:51:34.536"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.515" endtime="20201030 11:51:34.537"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.514" endtime="20201030 11:51:34.537"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.157" endtime="20201030 11:51:34.538"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.156" endtime="20201030 11:51:34.538"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:34.546" endtime="20201030 11:51:34.567"></status>
</kw>
<msg timestamp="20201030 11:51:34.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:34.545" endtime="20201030 11:51:34.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:34.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:34.569" endtime="20201030 11:51:34.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:34.571" endtime="20201030 11:51:34.573"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.542" endtime="20201030 11:51:34.573"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.540" endtime="20201030 11:51:34.574"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:34.580" endtime="20201030 11:51:34.891"></status>
</kw>
<msg timestamp="20201030 11:51:34.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025004194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025090778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:34.579" endtime="20201030 11:51:34.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:34.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025004194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025090778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:34.895" endtime="20201030 11:51:34.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:34.904" endtime="20201030 11:51:34.906"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.576" endtime="20201030 11:51:34.906"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.574" endtime="20201030 11:51:34.907"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:34.911" level="INFO">${RESULT} = [{'diff': 8.658400000000066e-05}, {'diff': 8.583299999999697e-05}, {'diff': 8.572199999999988e-05}, {'diff': 8.588900000000219e-05}, {'diff': 8.608400000000016e-05}, {'diff': 8.565199999999856e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:34.907" endtime="20201030 11:51:34.911"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:34.915" level="INFO">${ACCURACY} = {'diff': [8.658400000000066e-05, 8.583299999999697e-05, 8.572199999999988e-05, 8.588900000000219e-05, 8.608400000000016e-05, 8.565199999999856e-05, 8.572199999999988e-05, 8.577799999999816e-05, 8.5610...</msg>
<status status="PASS" starttime="20201030 11:51:34.912" endtime="20201030 11:51:34.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:34.920" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201030 11:51:34.919" endtime="20201030 11:51:34.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:34.922" level="INFO">VALUE: [8.658400000000066e-05, 8.583299999999697e-05, 8.572199999999988e-05, 8.588900000000219e-05, 8.608400000000016e-05, 8.565199999999856e-05, 8.572199999999988e-05, 8.577799999999816e-05, 8.561099999999933e-05, 8.559699999999976e-05, 8.570800000000031e-05, 8.572199999999988e-05, 8.586099999999958e-05, 8.615299999999854e-05, 8.57920000000012e-05, 8.568000000000117e-05, 8.565299999999804e-05, 8.608300000000069e-05, 8.59310000000009e-05, 8.56669999999976e-05, 8.586100000000305e-05, 8.598699999999918e-05, 8.569500000000022e-05, 8.59310000000009e-05, 8.595900000000004e-05, 8.604199999999798e-05, 8.557000000000009e-05, 8.573599999999945e-05, 8.566599999999813e-05, 8.57920000000012e-05, 8.591600000000185e-05, 8.556900000000062e-05, 8.556900000000062e-05, 8.584800000000295e-05, 8.611099999999983e-05, 8.615299999999854e-05, 8.558300000000019e-05, 8.590299999999829e-05, 8.565299999999804e-05, 8.59310000000009e-05, 8.568000000000117e-05, 8.597200000000013e-05, 8.566700000000108e-05, 8.563899999999847e-05, 8.594500000000047e-05, 8.604099999999851e-05, 8.604099999999851e-05, 8.577699999999869e-05, 8.563899999999847e-05, 8.607000000000059e-05]</msg>
<status status="PASS" starttime="20201030 11:51:34.921" endtime="20201030 11:51:34.924"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.916" endtime="20201030 11:51:34.925"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:34.928" endtime="20201030 11:51:34.948"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.927" endtime="20201030 11:51:34.949"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.926" endtime="20201030 11:51:34.949"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.539" endtime="20201030 11:51:34.949"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.538" endtime="20201030 11:51:34.949"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:34.958" endtime="20201030 11:51:34.977"></status>
</kw>
<msg timestamp="20201030 11:51:34.978" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:34.957" endtime="20201030 11:51:34.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:34.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:34.979" endtime="20201030 11:51:34.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:34.981" endtime="20201030 11:51:34.983"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.954" endtime="20201030 11:51:34.983"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.952" endtime="20201030 11:51:34.984"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:34.991" endtime="20201030 11:51:35.276"></status>
</kw>
<msg timestamp="20201030 11:51:35.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02221825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022305208, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:34.989" endtime="20201030 11:51:35.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:35.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02221825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022305208, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:35.281" endtime="20201030 11:51:35.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:35.289" endtime="20201030 11:51:35.291"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.986" endtime="20201030 11:51:35.291"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.985" endtime="20201030 11:51:35.292"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:35.296" level="INFO">${RESULT} = [{'diff': 8.695800000000156e-05}, {'diff': 8.701399999999984e-05}, {'diff': 8.709699999999779e-05}, {'diff': 8.691699999999886e-05}, {'diff': 8.708299999999822e-05}, {'diff': 8.695800000000156e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:35.293" endtime="20201030 11:51:35.296"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:35.301" level="INFO">${ACCURACY} = {'diff': [8.695800000000156e-05, 8.701399999999984e-05, 8.709699999999779e-05, 8.691699999999886e-05, 8.708299999999822e-05, 8.695800000000156e-05, 8.708299999999822e-05, 8.680499999999883e-05, 8.7013...</msg>
<status status="PASS" starttime="20201030 11:51:35.297" endtime="20201030 11:51:35.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:35.306" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201030 11:51:35.305" endtime="20201030 11:51:35.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:35.309" level="INFO">VALUE: [8.695800000000156e-05, 8.701399999999984e-05, 8.709699999999779e-05, 8.691699999999886e-05, 8.708299999999822e-05, 8.695800000000156e-05, 8.708299999999822e-05, 8.680499999999883e-05, 8.701399999999984e-05, 8.679099999999926e-05, 8.691700000000233e-05, 8.711100000000083e-05, 8.695799999999809e-05, 8.675000000000002e-05, 8.690299999999929e-05, 8.669500000000122e-05, 8.6847000000001e-05, 8.679199999999873e-05, 8.705599999999855e-05, 8.66249999999999e-05, 8.657000000000109e-05, 8.688899999999972e-05, 8.704200000000245e-05, 8.672199999999741e-05, 8.659700000000076e-05, 8.661100000000033e-05, 8.677799999999916e-05, 8.688899999999972e-05, 8.695800000000156e-05, 8.688899999999972e-05, 8.66249999999999e-05, 8.693099999999843e-05, 8.675000000000002e-05, 8.711100000000083e-05, 8.6944999999998e-05, 8.709799999999726e-05, 8.701399999999984e-05, 8.698700000000018e-05, 8.691599999999938e-05, 8.705600000000202e-05, 8.672199999999741e-05, 8.677699999999969e-05, 8.705499999999908e-05, 8.673600000000045e-05, 8.702800000000288e-05, 8.683300000000144e-05, 8.665299999999904e-05, 8.6847000000001e-05, 8.66669999999986e-05, 8.686100000000058e-05]</msg>
<status status="PASS" starttime="20201030 11:51:35.307" endtime="20201030 11:51:35.309"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.302" endtime="20201030 11:51:35.310"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:35.314" endtime="20201030 11:51:35.333"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.312" endtime="20201030 11:51:35.334"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.311" endtime="20201030 11:51:35.334"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.950" endtime="20201030 11:51:35.335"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.950" endtime="20201030 11:51:35.335"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:35.343" endtime="20201030 11:51:35.361"></status>
</kw>
<msg timestamp="20201030 11:51:35.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:35.342" endtime="20201030 11:51:35.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:35.364" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:35.362" endtime="20201030 11:51:35.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:35.365" endtime="20201030 11:51:35.367"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.339" endtime="20201030 11:51:35.367"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.337" endtime="20201030 11:51:35.368"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:35.374" endtime="20201030 11:51:35.677"></status>
</kw>
<msg timestamp="20201030 11:51:35.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021770139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021858472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:35.373" endtime="20201030 11:51:35.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:35.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021770139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021858472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:35.682" endtime="20201030 11:51:35.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:35.690" endtime="20201030 11:51:35.692"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.370" endtime="20201030 11:51:35.693"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.368" endtime="20201030 11:51:35.693"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:35.697" level="INFO">${RESULT} = [{'diff': 8.833299999999947e-05}, {'diff': 8.797199999999866e-05}, {'diff': 8.791699999999986e-05}, {'diff': 8.806899999999965e-05}, {'diff': 8.7944999999999e-05}, {'diff': 8.752799999999991e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:51:35.694" endtime="20201030 11:51:35.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:35.701" level="INFO">${ACCURACY} = {'diff': [8.833299999999947e-05, 8.797199999999866e-05, 8.791699999999986e-05, 8.806899999999965e-05, 8.7944999999999e-05, 8.752799999999991e-05, 8.81250000000014e-05, 8.805599999999955e-05, 8.7805999...</msg>
<status status="PASS" starttime="20201030 11:51:35.698" endtime="20201030 11:51:35.702"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:35.706" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201030 11:51:35.705" endtime="20201030 11:51:35.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:35.708" level="INFO">VALUE: [8.833299999999947e-05, 8.797199999999866e-05, 8.791699999999986e-05, 8.806899999999965e-05, 8.7944999999999e-05, 8.752799999999991e-05, 8.81250000000014e-05, 8.805599999999955e-05, 8.78059999999993e-05, 8.769500000000222e-05, 8.812499999999793e-05, 8.759800000000123e-05, 8.758299999999872e-05, 8.809700000000226e-05, 8.756899999999915e-05, 8.78189999999994e-05, 8.769399999999927e-05, 8.797199999999866e-05, 8.783299999999897e-05, 8.76669999999996e-05, 8.806900000000312e-05, 8.790300000000029e-05, 8.765300000000004e-05, 8.790300000000029e-05, 8.788900000000072e-05, 8.806999999999912e-05, 8.770900000000179e-05, 8.769399999999927e-05, 8.76669999999996e-05, 8.776400000000059e-05, 8.763900000000047e-05, 8.777700000000069e-05, 8.776400000000059e-05, 8.791599999999691e-05, 8.79860000000017e-05, 8.766700000000308e-05, 8.813900000000097e-05, 8.777800000000016e-05, 8.763900000000047e-05, 8.759700000000176e-05, 8.759699999999829e-05, 8.813900000000097e-05, 8.786099999999811e-05, 8.797200000000213e-05, 8.76669999999996e-05, 8.791699999999986e-05, 8.770899999999832e-05, 8.765300000000004e-05, 8.770799999999884e-05, 8.770799999999884e-05]</msg>
<status status="PASS" starttime="20201030 11:51:35.707" endtime="20201030 11:51:35.709"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.702" endtime="20201030 11:51:35.710"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:35.713" endtime="20201030 11:51:35.733"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.712" endtime="20201030 11:51:35.733"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.711" endtime="20201030 11:51:35.734"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.336" endtime="20201030 11:51:35.734"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.335" endtime="20201030 11:51:35.734"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:35.743" endtime="20201030 11:51:35.761"></status>
</kw>
<msg timestamp="20201030 11:51:35.762" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:35.741" endtime="20201030 11:51:35.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:35.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:35.763" endtime="20201030 11:51:35.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:35.765" endtime="20201030 11:51:35.767"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.739" endtime="20201030 11:51:35.768"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.737" endtime="20201030 11:51:35.768"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:35.774" endtime="20201030 11:51:36.061"></status>
</kw>
<msg timestamp="20201030 11:51:36.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022758153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022847167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:35.773" endtime="20201030 11:51:36.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:36.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022758153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022847167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:36.065" endtime="20201030 11:51:36.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:36.073" endtime="20201030 11:51:36.075"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.770" endtime="20201030 11:51:36.076"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.769" endtime="20201030 11:51:36.076"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:36.080" level="INFO">${RESULT} = [{'diff': 8.901400000000184e-05}, {'diff': 8.919500000000025e-05}, {'diff': 8.872299999999889e-05}, {'diff': 8.906899999999718e-05}, {'diff': 8.88060000000003e-05}, {'diff': 8.895899999999957e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:36.077" endtime="20201030 11:51:36.080"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:36.084" level="INFO">${ACCURACY} = {'diff': [8.901400000000184e-05, 8.919500000000025e-05, 8.872299999999889e-05, 8.906899999999718e-05, 8.88060000000003e-05, 8.895899999999957e-05, 8.876400000000159e-05, 8.897199999999966e-05, 8.86249...</msg>
<status status="PASS" starttime="20201030 11:51:36.081" endtime="20201030 11:51:36.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:36.089" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201030 11:51:36.088" endtime="20201030 11:51:36.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:36.091" level="INFO">VALUE: [8.901400000000184e-05, 8.919500000000025e-05, 8.872299999999889e-05, 8.906899999999718e-05, 8.88060000000003e-05, 8.895899999999957e-05, 8.876400000000159e-05, 8.897199999999966e-05, 8.862499999999843e-05, 8.876400000000159e-05, 8.898599999999923e-05, 8.884699999999954e-05, 8.902799999999794e-05, 8.86250000000019e-05, 8.897199999999966e-05, 8.861099999999886e-05, 8.907000000000012e-05, 8.873599999999898e-05, 8.909699999999979e-05, 8.902800000000141e-05, 8.881999999999987e-05, 8.88060000000003e-05, 8.872300000000236e-05, 8.900000000000227e-05, 8.88190000000004e-05, 8.888799999999877e-05, 8.886099999999911e-05, 8.861099999999886e-05, 8.894400000000052e-05, 8.867999999999723e-05, 8.875000000000202e-05, 8.855600000000005e-05, 8.905600000000055e-05, 8.858299999999972e-05, 8.870900000000279e-05, 8.891700000000086e-05, 8.909699999999979e-05, 8.891699999999739e-05, 8.872300000000236e-05, 8.886099999999911e-05, 8.869499999999975e-05, 8.859799999999876e-05, 8.888799999999877e-05, 8.856900000000015e-05, 8.911099999999936e-05, 8.877800000000116e-05, 8.877800000000116e-05, 8.883299999999997e-05, 8.855500000000058e-05, 8.890299999999782e-05]</msg>
<status status="PASS" starttime="20201030 11:51:36.090" endtime="20201030 11:51:36.093"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.085" endtime="20201030 11:51:36.093"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:36.097" endtime="20201030 11:51:36.116"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.095" endtime="20201030 11:51:36.117"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.094" endtime="20201030 11:51:36.117"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.735" endtime="20201030 11:51:36.118"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.735" endtime="20201030 11:51:36.118"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:36.126" endtime="20201030 11:51:36.145"></status>
</kw>
<msg timestamp="20201030 11:51:36.146" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:36.125" endtime="20201030 11:51:36.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:36.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:36.147" endtime="20201030 11:51:36.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:36.149" endtime="20201030 11:51:36.151"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.122" endtime="20201030 11:51:36.151"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.120" endtime="20201030 11:51:36.152"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:36.158" endtime="20201030 11:51:36.444"></status>
</kw>
<msg timestamp="20201030 11:51:36.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021775653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0218665, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:51:36.157" endtime="20201030 11:51:36.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:36.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021775653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0218665, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:51:36.449" endtime="20201030 11:51:36.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:36.457" endtime="20201030 11:51:36.458"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.154" endtime="20201030 11:51:36.459"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.153" endtime="20201030 11:51:36.459"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:36.463" level="INFO">${RESULT} = [{'diff': 9.084700000000154e-05}, {'diff': 9.009700000000079e-05}, {'diff': 8.991700000000186e-05}, {'diff': 8.972299999999989e-05}, {'diff': 8.99999999999998e-05}, {'diff': 8.987500000000315e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:36.460" endtime="20201030 11:51:36.464"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:36.468" level="INFO">${ACCURACY} = {'diff': [9.084700000000154e-05, 9.009700000000079e-05, 8.991700000000186e-05, 8.972299999999989e-05, 8.99999999999998e-05, 8.987500000000315e-05, 8.973599999999998e-05, 9.005599999999808e-05, 8.97499...</msg>
<status status="PASS" starttime="20201030 11:51:36.464" endtime="20201030 11:51:36.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:36.473" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201030 11:51:36.472" endtime="20201030 11:51:36.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:36.475" level="INFO">VALUE: [9.084700000000154e-05, 9.009700000000079e-05, 8.991700000000186e-05, 8.972299999999989e-05, 8.99999999999998e-05, 8.987500000000315e-05, 8.973599999999998e-05, 9.005599999999808e-05, 8.974999999999955e-05, 8.987499999999968e-05, 8.959700000000029e-05, 8.983300000000097e-05, 8.970800000000084e-05, 9.009700000000079e-05, 8.994399999999805e-05, 8.96800000000017e-05, 9.005499999999861e-05, 8.955500000000158e-05, 9.015299999999907e-05, 8.986100000000011e-05, 8.955600000000105e-05, 9.007000000000112e-05, 8.9945000000001e-05, 8.984800000000001e-05, 8.968100000000118e-05, 8.96120000000028e-05, 8.959700000000029e-05, 8.992999999999848e-05, 8.954100000000201e-05, 9.008299999999775e-05, 9.011099999999689e-05, 8.9638999999999e-05, 8.981899999999793e-05, 8.972200000000041e-05, 8.972200000000041e-05, 8.976399999999912e-05, 8.96670000000016e-05, 8.998600000000023e-05, 8.983300000000097e-05, 9.011100000000036e-05, 8.959700000000029e-05, 8.99999999999998e-05, 8.969400000000127e-05, 9.004200000000198e-05, 8.976399999999912e-05, 8.986199999999958e-05, 8.970800000000084e-05, 8.980500000000183e-05, 8.96250000000029e-05, 8.962499999999943e-05]</msg>
<status status="PASS" starttime="20201030 11:51:36.474" endtime="20201030 11:51:36.480"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.469" endtime="20201030 11:51:36.481"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:36.485" endtime="20201030 11:51:36.504"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.483" endtime="20201030 11:51:36.505"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.482" endtime="20201030 11:51:36.505"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.119" endtime="20201030 11:51:36.505"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.118" endtime="20201030 11:51:36.505"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:36.514" endtime="20201030 11:51:36.532"></status>
</kw>
<msg timestamp="20201030 11:51:36.533" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:36.513" endtime="20201030 11:51:36.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:36.535" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:36.534" endtime="20201030 11:51:36.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:36.536" endtime="20201030 11:51:36.538"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.510" endtime="20201030 11:51:36.538"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.508" endtime="20201030 11:51:36.539"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:36.545" endtime="20201030 11:51:36.832"></status>
</kw>
<msg timestamp="20201030 11:51:36.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021832944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021924375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:36.544" endtime="20201030 11:51:36.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:36.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021832944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021924375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:36.836" endtime="20201030 11:51:36.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:36.844" endtime="20201030 11:51:36.846"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.541" endtime="20201030 11:51:36.847"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.539" endtime="20201030 11:51:36.847"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:36.851" level="INFO">${RESULT} = [{'diff': 9.143099999999946e-05}, {'diff': 9.123600000000148e-05}, {'diff': 9.090299999999982e-05}, {'diff': 9.094499999999853e-05}, {'diff': 9.101400000000037e-05}, {'diff': 9.105599999999908e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:36.848" endtime="20201030 11:51:36.851"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:36.855" level="INFO">${ACCURACY} = {'diff': [9.143099999999946e-05, 9.123600000000148e-05, 9.090299999999982e-05, 9.094499999999853e-05, 9.101400000000037e-05, 9.105599999999908e-05, 9.104100000000004e-05, 9.058400000000119e-05, 9.0985...</msg>
<status status="PASS" starttime="20201030 11:51:36.852" endtime="20201030 11:51:36.855"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:36.860" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201030 11:51:36.859" endtime="20201030 11:51:36.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:36.862" level="INFO">VALUE: [9.143099999999946e-05, 9.123600000000148e-05, 9.090299999999982e-05, 9.094499999999853e-05, 9.101400000000037e-05, 9.105599999999908e-05, 9.104100000000004e-05, 9.058400000000119e-05, 9.098599999999776e-05, 9.090200000000034e-05, 9.084700000000154e-05, 9.098599999999776e-05, 9.101400000000037e-05, 9.056900000000215e-05, 9.083300000000197e-05, 9.108299999999875e-05, 9.109700000000179e-05, 9.112499999999746e-05, 9.076400000000012e-05, 9.107000000000212e-05, 9.091699999999939e-05, 9.094499999999853e-05, 9.055599999999858e-05, 9.049999999999683e-05, 9.10000000000008e-05, 9.102799999999994e-05, 9.104100000000004e-05, 9.065300000000304e-05, 9.048600000000073e-05, 9.062500000000043e-05, 9.087500000000068e-05, 9.111100000000136e-05, 9.068100000000218e-05, 9.094399999999905e-05, 9.093099999999896e-05, 9.111099999999789e-05, 9.109699999999832e-05, 9.066699999999914e-05, 9.091700000000286e-05, 9.090299999999982e-05, 9.063800000000052e-05, 9.080599999999883e-05, 9.055599999999858e-05, 9.073700000000046e-05, 9.094399999999905e-05, 9.054099999999954e-05, 9.101400000000037e-05, 9.079099999999979e-05, 9.109699999999832e-05, 9.051399999999987e-05]</msg>
<status status="PASS" starttime="20201030 11:51:36.861" endtime="20201030 11:51:36.863"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.856" endtime="20201030 11:51:36.864"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:36.867" endtime="20201030 11:51:36.887"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.866" endtime="20201030 11:51:36.887"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.865" endtime="20201030 11:51:36.887"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.506" endtime="20201030 11:51:36.888"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.506" endtime="20201030 11:51:36.888"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:36.897" endtime="20201030 11:51:36.916"></status>
</kw>
<msg timestamp="20201030 11:51:36.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:36.895" endtime="20201030 11:51:36.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:36.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:36.917" endtime="20201030 11:51:36.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:36.920" endtime="20201030 11:51:36.921"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.892" endtime="20201030 11:51:36.922"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.890" endtime="20201030 11:51:36.922"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:36.929" endtime="20201030 11:51:37.210"></status>
</kw>
<msg timestamp="20201030 11:51:37.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022655625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022747986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:36.927" endtime="20201030 11:51:37.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:37.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022655625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022747986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:37.214" endtime="20201030 11:51:37.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:37.223" endtime="20201030 11:51:37.224"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.925" endtime="20201030 11:51:37.225"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.923" endtime="20201030 11:51:37.225"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:37.229" level="INFO">${RESULT} = [{'diff': 9.236100000000261e-05}, {'diff': 9.206999999999965e-05}, {'diff': 9.1639000000001e-05}, {'diff': 9.174999999999808e-05}, {'diff': 9.165300000000057e-05}, {'diff': 9.179200000000026e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:51:37.226" endtime="20201030 11:51:37.230"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:37.233" level="INFO">${ACCURACY} = {'diff': [9.236100000000261e-05, 9.206999999999965e-05, 9.1639000000001e-05, 9.174999999999808e-05, 9.165300000000057e-05, 9.179200000000026e-05, 9.206900000000018e-05, 9.20000000000018e-05, 9.1721999...</msg>
<status status="PASS" starttime="20201030 11:51:37.230" endtime="20201030 11:51:37.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:37.238" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201030 11:51:37.237" endtime="20201030 11:51:37.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:37.240" level="INFO">VALUE: [9.236100000000261e-05, 9.206999999999965e-05, 9.1639000000001e-05, 9.174999999999808e-05, 9.165300000000057e-05, 9.179200000000026e-05, 9.206900000000018e-05, 9.20000000000018e-05, 9.172199999999894e-05, 9.158300000000272e-05, 9.184699999999907e-05, 9.181899999999993e-05, 9.206900000000018e-05, 9.190300000000082e-05, 9.162500000000143e-05, 9.163800000000152e-05, 9.2026999999998e-05, 9.18329999999995e-05, 9.154100000000054e-05, 9.177800000000069e-05, 9.152800000000044e-05, 9.161200000000133e-05, 9.186100000000211e-05, 9.204200000000051e-05, 9.205600000000008e-05, 9.215300000000107e-05, 9.191700000000039e-05, 9.208400000000269e-05, 9.165300000000057e-05, 9.177799999999722e-05, 9.21390000000015e-05, 9.151400000000087e-05, 9.176299999999818e-05, 9.211100000000236e-05, 9.159699999999882e-05, 9.211100000000236e-05, 9.205500000000061e-05, 9.198599999999876e-05, 9.169499999999928e-05, 9.188900000000125e-05, 9.173600000000198e-05, 9.173600000000198e-05, 9.194400000000005e-05, 9.177800000000069e-05, 9.198599999999876e-05, 9.166600000000066e-05, 9.21390000000015e-05, 9.18199999999994e-05, 9.170900000000232e-05, 9.1639000000001e-05]</msg>
<status status="PASS" starttime="20201030 11:51:37.239" endtime="20201030 11:51:37.242"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.234" endtime="20201030 11:51:37.243"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:37.246" endtime="20201030 11:51:37.266"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.245" endtime="20201030 11:51:37.266"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.244" endtime="20201030 11:51:37.267"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.889" endtime="20201030 11:51:37.267"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.888" endtime="20201030 11:51:37.267"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:37.276" endtime="20201030 11:51:37.295"></status>
</kw>
<msg timestamp="20201030 11:51:37.295" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:37.274" endtime="20201030 11:51:37.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:37.298" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:37.296" endtime="20201030 11:51:37.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:37.299" endtime="20201030 11:51:37.300"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.272" endtime="20201030 11:51:37.301"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.269" endtime="20201030 11:51:37.301"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:37.308" endtime="20201030 11:51:37.593"></status>
</kw>
<msg timestamp="20201030 11:51:37.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022064042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022156958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:37.306" endtime="20201030 11:51:37.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:37.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022064042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022156958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:37.597" endtime="20201030 11:51:37.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:37.606" endtime="20201030 11:51:37.607"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.303" endtime="20201030 11:51:37.608"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.302" endtime="20201030 11:51:37.608"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:37.612" level="INFO">${RESULT} = [{'diff': 9.291600000000191e-05}, {'diff': 9.28330000000005e-05}, {'diff': 9.2639000000002e-05}, {'diff': 9.28330000000005e-05}, {'diff': 9.290299999999835e-05}, {'diff': 9.309700000000032e-05}, {'dif...</msg>
<status status="PASS" starttime="20201030 11:51:37.609" endtime="20201030 11:51:37.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:37.617" level="INFO">${ACCURACY} = {'diff': [9.291600000000191e-05, 9.28330000000005e-05, 9.2639000000002e-05, 9.28330000000005e-05, 9.290299999999835e-05, 9.309700000000032e-05, 9.26529999999981e-05, 9.26529999999981e-05, 9.2791999999...</msg>
<status status="PASS" starttime="20201030 11:51:37.613" endtime="20201030 11:51:37.618"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:37.622" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201030 11:51:37.621" endtime="20201030 11:51:37.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:37.624" level="INFO">VALUE: [9.291600000000191e-05, 9.28330000000005e-05, 9.2639000000002e-05, 9.28330000000005e-05, 9.290299999999835e-05, 9.309700000000032e-05, 9.26529999999981e-05, 9.26529999999981e-05, 9.279199999999779e-05, 9.293099999999749e-05, 9.279200000000126e-05, 9.291700000000139e-05, 9.261199999999886e-05, 9.261199999999886e-05, 9.261199999999886e-05, 9.294400000000105e-05, 9.308300000000075e-05, 9.312499999999946e-05, 9.258300000000025e-05, 9.288899999999878e-05, 9.27079999999969e-05, 9.290300000000182e-05, 9.298599999999976e-05, 9.273599999999951e-05, 9.274999999999908e-05, 9.257000000000015e-05, 9.288899999999878e-05, 9.269500000000028e-05, 9.254200000000101e-05, 9.30139999999989e-05, 9.288900000000225e-05, 9.311200000000283e-05, 9.273600000000298e-05, 9.261100000000286e-05, 9.311099999999989e-05, 9.286099999999964e-05, 9.29720000000002e-05, 9.272199999999994e-05, 9.273599999999951e-05, 9.306899999999771e-05, 9.255499999999764e-05, 9.280599999999736e-05, 9.280599999999736e-05, 9.305600000000108e-05, 9.259699999999982e-05, 9.309700000000032e-05, 9.276400000000212e-05, 9.304200000000151e-05, 9.270899999999985e-05, 9.293099999999749e-05]</msg>
<status status="PASS" starttime="20201030 11:51:37.623" endtime="20201030 11:51:37.625"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.618" endtime="20201030 11:51:37.626"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:37.629" endtime="20201030 11:51:37.649"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.628" endtime="20201030 11:51:37.649"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.627" endtime="20201030 11:51:37.649"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.268" endtime="20201030 11:51:37.650"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.267" endtime="20201030 11:51:37.650"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:37.659" endtime="20201030 11:51:37.677"></status>
</kw>
<msg timestamp="20201030 11:51:37.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:37.657" endtime="20201030 11:51:37.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:37.680" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:37.679" endtime="20201030 11:51:37.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:37.681" endtime="20201030 11:51:37.683"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.654" endtime="20201030 11:51:37.684"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.652" endtime="20201030 11:51:37.684"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:37.690" endtime="20201030 11:51:37.978"></status>
</kw>
<msg timestamp="20201030 11:51:37.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021622264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021716583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:37.689" endtime="20201030 11:51:37.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:37.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021622264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021716583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:37.982" endtime="20201030 11:51:37.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:37.990" endtime="20201030 11:51:37.992"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.686" endtime="20201030 11:51:37.993"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.685" endtime="20201030 11:51:37.993"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:37.997" level="INFO">${RESULT} = [{'diff': 9.431900000000243e-05}, {'diff': 9.386099999999717e-05}, {'diff': 9.369399999999833e-05}, {'diff': 9.362499999999996e-05}, {'diff': 9.379200000000226e-05}, {'diff': 9.38330000000015e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:37.994" endtime="20201030 11:51:37.997"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:38.001" level="INFO">${ACCURACY} = {'diff': [9.431900000000243e-05, 9.386099999999717e-05, 9.369399999999833e-05, 9.362499999999996e-05, 9.379200000000226e-05, 9.38330000000015e-05, 9.376300000000018e-05, 9.366699999999867e-05, 9.40699...</msg>
<status status="PASS" starttime="20201030 11:51:37.998" endtime="20201030 11:51:38.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:38.006" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201030 11:51:38.005" endtime="20201030 11:51:38.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:38.008" level="INFO">VALUE: [9.431900000000243e-05, 9.386099999999717e-05, 9.369399999999833e-05, 9.362499999999996e-05, 9.379200000000226e-05, 9.38330000000015e-05, 9.376300000000018e-05, 9.366699999999867e-05, 9.406999999999818e-05, 9.377799999999922e-05, 9.370800000000137e-05, 9.395899999999763e-05, 9.356999999999768e-05, 9.368099999999824e-05, 9.384700000000107e-05, 9.405500000000261e-05, 9.39859999999973e-05, 9.406899999999871e-05, 9.404099999999957e-05, 9.404099999999957e-05, 9.379200000000226e-05, 9.411100000000089e-05, 9.399999999999686e-05, 9.373600000000051e-05, 9.404199999999904e-05, 9.38330000000015e-05, 9.404200000000251e-05, 9.384799999999707e-05, 9.409699999999785e-05, 9.406899999999871e-05, 9.370900000000085e-05, 9.362499999999996e-05, 9.358299999999778e-05, 9.409699999999785e-05, 9.375000000000008e-05, 9.380500000000236e-05, 9.39720000000012e-05, 9.406900000000218e-05, 9.381899999999846e-05, 9.395799999999815e-05, 9.391699999999892e-05, 9.354200000000201e-05, 9.408299999999828e-05, 9.402799999999947e-05, 9.358400000000072e-05, 9.398600000000076e-05, 9.40139999999999e-05, 9.358400000000072e-05, 9.391699999999892e-05, 9.4027e-05]</msg>
<status status="PASS" starttime="20201030 11:51:38.007" endtime="20201030 11:51:38.009"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.002" endtime="20201030 11:51:38.009"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:38.013" endtime="20201030 11:51:38.032"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.012" endtime="20201030 11:51:38.033"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.010" endtime="20201030 11:51:38.033"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.651" endtime="20201030 11:51:38.034"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.650" endtime="20201030 11:51:38.034"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:38.042" endtime="20201030 11:51:38.065"></status>
</kw>
<msg timestamp="20201030 11:51:38.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:38.041" endtime="20201030 11:51:38.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:38.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:38.066" endtime="20201030 11:51:38.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:38.069" endtime="20201030 11:51:38.070"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.038" endtime="20201030 11:51:38.071"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.036" endtime="20201030 11:51:38.071"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:38.078" endtime="20201030 11:51:38.364"></status>
</kw>
<msg timestamp="20201030 11:51:38.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025044944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025140597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:38.076" endtime="20201030 11:51:38.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:38.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025044944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025140597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:38.369" endtime="20201030 11:51:38.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:38.377" endtime="20201030 11:51:38.379"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.074" endtime="20201030 11:51:38.379"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.072" endtime="20201030 11:51:38.380"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:38.383" level="INFO">${RESULT} = [{'diff': 9.56530000000011e-05}, {'diff': 9.505500000000014e-05}, {'diff': 9.462500000000096e-05}, {'diff': 9.505599999999961e-05}, {'diff': 9.508299999999928e-05}, {'diff': 9.458299999999878e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:38.380" endtime="20201030 11:51:38.384"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:38.388" level="INFO">${ACCURACY} = {'diff': [9.56530000000011e-05, 9.505500000000014e-05, 9.462500000000096e-05, 9.505599999999961e-05, 9.508299999999928e-05, 9.458299999999878e-05, 9.48200000000024e-05, 9.477800000000022e-05, 9.477800...</msg>
<status status="PASS" starttime="20201030 11:51:38.385" endtime="20201030 11:51:38.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:38.392" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201030 11:51:38.391" endtime="20201030 11:51:38.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:38.395" level="INFO">VALUE: [9.56530000000011e-05, 9.505500000000014e-05, 9.462500000000096e-05, 9.505599999999961e-05, 9.508299999999928e-05, 9.458299999999878e-05, 9.48200000000024e-05, 9.477800000000022e-05, 9.477800000000022e-05, 9.50140000000009e-05, 9.498600000000176e-05, 9.47079999999989e-05, 9.494499999999906e-05, 9.505500000000014e-05, 9.487500000000121e-05, 9.48469999999986e-05, 9.49720000000022e-05, 9.467999999999976e-05, 9.511099999999842e-05, 9.484700000000207e-05, 9.468099999999924e-05, 9.477800000000022e-05, 9.490300000000035e-05, 9.459700000000182e-05, 9.511099999999842e-05, 9.491699999999992e-05, 9.499999999999786e-05, 9.466699999999967e-05, 9.501399999999743e-05, 9.512500000000146e-05, 9.488899999999731e-05, 9.473600000000151e-05, 9.461099999999792e-05, 9.462500000000096e-05, 9.461099999999792e-05, 9.473600000000151e-05, 9.505500000000014e-05, 9.458299999999878e-05, 9.488900000000078e-05, 9.472199999999847e-05, 9.48469999999986e-05, 9.472199999999847e-05, 9.477800000000022e-05, 9.502800000000047e-05, 9.513900000000103e-05, 9.455599999999911e-05, 9.512500000000146e-05, 9.472199999999847e-05, 9.467999999999976e-05, 9.508299999999928e-05]</msg>
<status status="PASS" starttime="20201030 11:51:38.393" endtime="20201030 11:51:38.396"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.389" endtime="20201030 11:51:38.397"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:38.401" endtime="20201030 11:51:38.420"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.399" endtime="20201030 11:51:38.421"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.398" endtime="20201030 11:51:38.421"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.035" endtime="20201030 11:51:38.421"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.034" endtime="20201030 11:51:38.421"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:38.430" endtime="20201030 11:51:38.449"></status>
</kw>
<msg timestamp="20201030 11:51:38.449" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:38.428" endtime="20201030 11:51:38.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:38.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:38.450" endtime="20201030 11:51:38.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:38.453" endtime="20201030 11:51:38.454"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.426" endtime="20201030 11:51:38.455"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.424" endtime="20201030 11:51:38.455"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:38.462" endtime="20201030 11:51:38.747"></status>
</kw>
<msg timestamp="20201030 11:51:38.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021815403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021911903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:38.460" endtime="20201030 11:51:38.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:38.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021815403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021911903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:38.751" endtime="20201030 11:51:38.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:38.760" endtime="20201030 11:51:38.761"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.458" endtime="20201030 11:51:38.762"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.456" endtime="20201030 11:51:38.762"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:38.766" level="INFO">${RESULT} = [{'diff': 9.649999999999936e-05}, {'diff': 9.640299999999838e-05}, {'diff': 9.58469999999996e-05}, {'diff': 9.572300000000242e-05}, {'diff': 9.577799999999775e-05}, {'diff': 9.6027000000002e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 11:51:38.763" endtime="20201030 11:51:38.767"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:38.771" level="INFO">${ACCURACY} = {'diff': [9.649999999999936e-05, 9.640299999999838e-05, 9.58469999999996e-05, 9.572300000000242e-05, 9.577799999999775e-05, 9.6027000000002e-05, 9.59019999999984e-05, 9.609699999999985e-05, 9.59160000...</msg>
<status status="PASS" starttime="20201030 11:51:38.767" endtime="20201030 11:51:38.772"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:38.776" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201030 11:51:38.775" endtime="20201030 11:51:38.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:38.778" level="INFO">VALUE: [9.649999999999936e-05, 9.640299999999838e-05, 9.58469999999996e-05, 9.572300000000242e-05, 9.577799999999775e-05, 9.6027000000002e-05, 9.59019999999984e-05, 9.609699999999985e-05, 9.591600000000144e-05, 9.555500000000064e-05, 9.587499999999874e-05, 9.557000000000315e-05, 9.558399999999925e-05, 9.607000000000018e-05, 9.601399999999843e-05, 9.593099999999702e-05, 9.609699999999985e-05, 9.58339999999995e-05, 9.612499999999899e-05, 9.595800000000015e-05, 9.605500000000114e-05, 9.569400000000033e-05, 9.587500000000221e-05, 9.601399999999843e-05, 9.56799999999973e-05, 9.611100000000289e-05, 9.604100000000157e-05, 9.595899999999963e-05, 9.609699999999985e-05, 9.595800000000015e-05, 9.586100000000264e-05, 9.594500000000006e-05, 9.60140000000019e-05, 9.611099999999942e-05, 9.554200000000054e-05, 9.56530000000011e-05, 9.558399999999925e-05, 9.555499999999717e-05, 9.606900000000071e-05, 9.586099999999917e-05, 9.57079999999999e-05, 9.606900000000071e-05, 9.561100000000239e-05, 9.597199999999972e-05, 9.581900000000046e-05, 9.56669999999972e-05, 9.568099999999677e-05, 9.602699999999853e-05, 9.562499999999849e-05, 9.612500000000246e-05]</msg>
<status status="PASS" starttime="20201030 11:51:38.777" endtime="20201030 11:51:38.779"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.772" endtime="20201030 11:51:38.780"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:38.783" endtime="20201030 11:51:38.803"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.782" endtime="20201030 11:51:38.803"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.781" endtime="20201030 11:51:38.804"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.422" endtime="20201030 11:51:38.804"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.422" endtime="20201030 11:51:38.804"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:38.813" endtime="20201030 11:51:38.832"></status>
</kw>
<msg timestamp="20201030 11:51:38.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:38.811" endtime="20201030 11:51:38.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:38.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:38.833" endtime="20201030 11:51:38.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:38.836" endtime="20201030 11:51:38.837"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.809" endtime="20201030 11:51:38.838"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.807" endtime="20201030 11:51:38.838"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:38.845" endtime="20201030 11:51:39.131"></status>
</kw>
<msg timestamp="20201030 11:51:39.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021989764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022086736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:38.843" endtime="20201030 11:51:39.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:39.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021989764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022086736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:39.136" endtime="20201030 11:51:39.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:39.144" endtime="20201030 11:51:39.146"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.841" endtime="20201030 11:51:39.146"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.839" endtime="20201030 11:51:39.147"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:39.151" level="INFO">${RESULT} = [{'diff': 9.697200000000072e-05}, {'diff': 9.726399999999968e-05}, {'diff': 9.708300000000128e-05}, {'diff': 9.687499999999974e-05}, {'diff': 9.705600000000161e-05}, {'diff': 9.666700000000167e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:39.147" endtime="20201030 11:51:39.151"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:39.155" level="INFO">${ACCURACY} = {'diff': [9.697200000000072e-05, 9.726399999999968e-05, 9.708300000000128e-05, 9.687499999999974e-05, 9.705600000000161e-05, 9.666700000000167e-05, 9.686100000000017e-05, 9.657000000000068e-05, 9.6695...</msg>
<status status="PASS" starttime="20201030 11:51:39.152" endtime="20201030 11:51:39.155"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:39.159" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201030 11:51:39.158" endtime="20201030 11:51:39.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:39.162" level="INFO">VALUE: [9.697200000000072e-05, 9.726399999999968e-05, 9.708300000000128e-05, 9.687499999999974e-05, 9.705600000000161e-05, 9.666700000000167e-05, 9.686100000000017e-05, 9.657000000000068e-05, 9.669500000000081e-05, 9.698599999999682e-05, 9.697199999999725e-05, 9.695899999999716e-05, 9.672200000000047e-05, 9.67080000000009e-05, 9.688899999999931e-05, 9.665299999999863e-05, 9.651399999999893e-05, 9.69860000000003e-05, 9.686100000000017e-05, 9.662499999999949e-05, 9.674999999999961e-05, 9.711100000000042e-05, 9.711100000000042e-05, 9.668100000000124e-05, 9.69730000000002e-05, 9.684800000000007e-05, 9.708400000000075e-05, 9.67080000000009e-05, 9.673600000000004e-05, 9.663899999999906e-05, 9.69860000000003e-05, 9.711100000000042e-05, 9.663899999999906e-05, 9.683300000000103e-05, 9.661099999999992e-05, 9.711100000000042e-05, 9.687499999999974e-05, 9.657000000000068e-05, 9.69860000000003e-05, 9.658300000000078e-05, 9.662499999999949e-05, 9.708400000000075e-05, 9.658400000000025e-05, 9.709800000000032e-05, 9.654200000000154e-05, 9.711099999999695e-05, 9.658299999999731e-05, 9.658300000000078e-05, 9.673600000000004e-05, 9.670799999999743e-05]</msg>
<status status="PASS" starttime="20201030 11:51:39.160" endtime="20201030 11:51:39.162"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.156" endtime="20201030 11:51:39.163"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:39.167" endtime="20201030 11:51:39.186"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.165" endtime="20201030 11:51:39.187"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.164" endtime="20201030 11:51:39.187"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.805" endtime="20201030 11:51:39.187"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.804" endtime="20201030 11:51:39.187"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:39.196" endtime="20201030 11:51:39.216"></status>
</kw>
<msg timestamp="20201030 11:51:39.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:39.195" endtime="20201030 11:51:39.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:39.219" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:39.218" endtime="20201030 11:51:39.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:39.220" endtime="20201030 11:51:39.222"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.192" endtime="20201030 11:51:39.222"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.190" endtime="20201030 11:51:39.223"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:39.229" endtime="20201030 11:51:39.516"></status>
</kw>
<msg timestamp="20201030 11:51:39.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023032417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023130889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:39.228" endtime="20201030 11:51:39.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:39.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023032417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023130889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:39.520" endtime="20201030 11:51:39.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:39.528" endtime="20201030 11:51:39.530"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.225" endtime="20201030 11:51:39.531"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.223" endtime="20201030 11:51:39.531"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:39.535" level="INFO">${RESULT} = [{'diff': 9.847200000000222e-05}, {'diff': 9.79860000000013e-05}, {'diff': 9.808299999999881e-05}, {'diff': 9.808299999999881e-05}, {'diff': 9.79860000000013e-05}, {'diff': 9.754200000000254e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:51:39.532" endtime="20201030 11:51:39.535"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:39.539" level="INFO">${ACCURACY} = {'diff': [9.847200000000222e-05, 9.79860000000013e-05, 9.808299999999881e-05, 9.808299999999881e-05, 9.79860000000013e-05, 9.754200000000254e-05, 9.811199999999742e-05, 9.800000000000086e-05, 9.801399...</msg>
<status status="PASS" starttime="20201030 11:51:39.536" endtime="20201030 11:51:39.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:39.544" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201030 11:51:39.543" endtime="20201030 11:51:39.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:39.546" level="INFO">VALUE: [9.847200000000222e-05, 9.79860000000013e-05, 9.808299999999881e-05, 9.808299999999881e-05, 9.79860000000013e-05, 9.754200000000254e-05, 9.811199999999742e-05, 9.800000000000086e-05, 9.801399999999696e-05, 9.761100000000092e-05, 9.795800000000215e-05, 9.787499999999727e-05, 9.786100000000117e-05, 9.775000000000061e-05, 9.78609999999977e-05, 9.758300000000178e-05, 9.773600000000104e-05, 9.781899999999899e-05, 9.765299999999963e-05, 9.754200000000254e-05, 9.81669999999997e-05, 9.812500000000099e-05, 9.805600000000261e-05, 9.769499999999834e-05, 9.78340000000015e-05, 9.775000000000061e-05, 9.779099999999985e-05, 9.761100000000092e-05, 9.787499999999727e-05, 9.763900000000006e-05, 9.77080000000019e-05, 9.777800000000322e-05, 9.791699999999945e-05, 9.808300000000228e-05, 9.758299999999831e-05, 9.758299999999831e-05, 9.773600000000104e-05, 9.756999999999821e-05, 9.801400000000043e-05, 9.79860000000013e-05, 9.812500000000099e-05, 9.784800000000107e-05, 9.776400000000018e-05, 9.777700000000028e-05, 9.773600000000104e-05, 9.769400000000233e-05, 9.801400000000043e-05, 9.761100000000092e-05, 9.79860000000013e-05, 9.794500000000206e-05]</msg>
<status status="PASS" starttime="20201030 11:51:39.545" endtime="20201030 11:51:39.548"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.540" endtime="20201030 11:51:39.548"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:39.552" endtime="20201030 11:51:39.571"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.551" endtime="20201030 11:51:39.572"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.549" endtime="20201030 11:51:39.572"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.188" endtime="20201030 11:51:39.573"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.188" endtime="20201030 11:51:39.573"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:39.581" endtime="20201030 11:51:39.600"></status>
</kw>
<msg timestamp="20201030 11:51:39.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:39.580" endtime="20201030 11:51:39.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:39.603" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:39.602" endtime="20201030 11:51:39.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:39.604" endtime="20201030 11:51:39.606"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.577" endtime="20201030 11:51:39.606"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.575" endtime="20201030 11:51:39.607"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:39.613" endtime="20201030 11:51:39.898"></status>
</kw>
<msg timestamp="20201030 11:51:39.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022091167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022190153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:39.611" endtime="20201030 11:51:39.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:39.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022091167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022190153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:39.902" endtime="20201030 11:51:39.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:39.911" endtime="20201030 11:51:39.912"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.609" endtime="20201030 11:51:39.913"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.607" endtime="20201030 11:51:39.913"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:39.917" level="INFO">${RESULT} = [{'diff': 9.89860000000023e-05}, {'diff': 9.931999999999996e-05}, {'diff': 9.880499999999695e-05}, {'diff': 9.879100000000085e-05}, {'diff': 9.865199999999769e-05}, {'diff': 9.848599999999832e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:39.914" endtime="20201030 11:51:39.918"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:39.922" level="INFO">${ACCURACY} = {'diff': [9.89860000000023e-05, 9.931999999999996e-05, 9.880499999999695e-05, 9.879100000000085e-05, 9.865199999999769e-05, 9.848599999999832e-05, 9.887500000000174e-05, 9.89159999999975e-05, 9.876400...</msg>
<status status="PASS" starttime="20201030 11:51:39.918" endtime="20201030 11:51:39.923"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:39.927" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201030 11:51:39.926" endtime="20201030 11:51:39.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:39.929" level="INFO">VALUE: [9.89860000000023e-05, 9.931999999999996e-05, 9.880499999999695e-05, 9.879100000000085e-05, 9.865199999999769e-05, 9.848599999999832e-05, 9.887500000000174e-05, 9.89159999999975e-05, 9.876400000000118e-05, 9.911099999999895e-05, 9.879200000000032e-05, 9.855599999999964e-05, 9.86670000000002e-05, 9.912500000000199e-05, 9.85280000000005e-05, 9.879200000000032e-05, 9.857000000000268e-05, 9.88479999999986e-05, 9.86800000000003e-05, 9.873700000000152e-05, 9.877799999999728e-05, 9.913899999999809e-05, 9.888900000000131e-05, 9.898599999999882e-05, 9.881899999999999e-05, 9.89860000000023e-05, 9.908299999999981e-05, 9.908299999999981e-05, 9.909699999999938e-05, 9.90419999999971e-05, 9.904200000000057e-05, 9.891700000000045e-05, 9.908299999999981e-05, 9.891700000000045e-05, 9.881999999999946e-05, 9.869500000000281e-05, 9.859800000000182e-05, 9.855500000000017e-05, 9.909700000000285e-05, 9.898599999999882e-05, 9.877800000000075e-05, 9.90410000000011e-05, 9.897199999999926e-05, 9.911099999999895e-05, 9.868099999999977e-05, 9.900000000000186e-05, 9.876400000000118e-05, 9.891700000000045e-05, 9.873599999999857e-05, 9.858400000000225e-05]</msg>
<status status="PASS" starttime="20201030 11:51:39.928" endtime="20201030 11:51:39.930"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.923" endtime="20201030 11:51:39.931"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:39.935" endtime="20201030 11:51:39.954"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.933" endtime="20201030 11:51:39.955"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.932" endtime="20201030 11:51:39.955"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.574" endtime="20201030 11:51:39.955"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.573" endtime="20201030 11:51:39.955"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:39.964" endtime="20201030 11:51:39.983"></status>
</kw>
<msg timestamp="20201030 11:51:39.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:39.962" endtime="20201030 11:51:39.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:39.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:39.984" endtime="20201030 11:51:39.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:39.987" endtime="20201030 11:51:39.988"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.960" endtime="20201030 11:51:39.989"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.958" endtime="20201030 11:51:39.989"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:39.996" endtime="20201030 11:51:40.283"></status>
</kw>
<msg timestamp="20201030 11:51:40.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021794681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021894625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:39.994" endtime="20201030 11:51:40.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:40.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021794681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021894625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:40.287" endtime="20201030 11:51:40.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:40.296" endtime="20201030 11:51:40.297"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.992" endtime="20201030 11:51:40.298"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.990" endtime="20201030 11:51:40.298"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:40.302" level="INFO">${RESULT} = [{'diff': 9.994400000000112e-05}, {'diff': 0.00010044500000000109}, {'diff': 9.970899999999991e-05}, {'diff': 9.977800000000175e-05}, {'diff': 9.974999999999914e-05}, {'diff': 9.963899999999859e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:51:40.299" endtime="20201030 11:51:40.303"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:40.306" level="INFO">${ACCURACY} = {'diff': [9.994400000000112e-05, 0.00010044500000000109, 9.970899999999991e-05, 9.977800000000175e-05, 9.974999999999914e-05, 9.963899999999859e-05, 9.970800000000044e-05, 9.99999999999994e-05, 0.0001...</msg>
<status status="PASS" starttime="20201030 11:51:40.303" endtime="20201030 11:51:40.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:40.311" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201030 11:51:40.310" endtime="20201030 11:51:40.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:40.313" level="INFO">VALUE: [9.994400000000112e-05, 0.00010044500000000109, 9.970899999999991e-05, 9.977800000000175e-05, 9.974999999999914e-05, 9.963899999999859e-05, 9.970800000000044e-05, 9.99999999999994e-05, 0.00010009700000000038, 9.956900000000074e-05, 9.970800000000044e-05, 9.969500000000034e-05, 9.952799999999803e-05, 9.99860000000033e-05, 9.983300000000056e-05, 0.00010004200000000157, 0.00010002799999999853, 0.00010008400000000028, 9.988899999999884e-05, 9.9722e-05, 0.00010005600000000114, 0.00010001399999999896, 9.988899999999884e-05, 9.990199999999894e-05, 0.00010006899999999777, 9.973599999999957e-05, 0.00010001400000000243, 0.00010001400000000243, 9.988900000000231e-05, 9.990300000000188e-05, 0.00010011099999999995, 0.00010011099999999995, 9.963899999999859e-05, 0.00010015299999999866, 9.976400000000218e-05, 0.00010005599999999767, 0.0001000419999999981, 0.00010004200000000157, 9.963899999999859e-05, 0.00010001400000000243, 9.99869999999993e-05, 9.979199999999785e-05, 9.981900000000099e-05, 9.998599999999983e-05, 0.00010006900000000124, 0.000100028000000002, 0.00010001399999999896, 9.990299999999841e-05, 0.00010008299999999734, 9.9722e-05]</msg>
<status status="PASS" starttime="20201030 11:51:40.312" endtime="20201030 11:51:40.314"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.307" endtime="20201030 11:51:40.315"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:40.318" endtime="20201030 11:51:40.338"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.317" endtime="20201030 11:51:40.338"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.316" endtime="20201030 11:51:40.339"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.956" endtime="20201030 11:51:40.339"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.956" endtime="20201030 11:51:40.339"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:40.348" endtime="20201030 11:51:40.368"></status>
</kw>
<msg timestamp="20201030 11:51:40.368" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:40.346" endtime="20201030 11:51:40.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:40.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:40.369" endtime="20201030 11:51:40.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:40.372" endtime="20201030 11:51:40.374"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.344" endtime="20201030 11:51:40.374"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.342" endtime="20201030 11:51:40.375"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:40.381" endtime="20201030 11:51:40.666"></status>
</kw>
<msg timestamp="20201030 11:51:40.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022721778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022823333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:40.380" endtime="20201030 11:51:40.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:40.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022721778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022823333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:40.670" endtime="20201030 11:51:40.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:40.678" endtime="20201030 11:51:40.680"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.377" endtime="20201030 11:51:40.681"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.375" endtime="20201030 11:51:40.681"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:40.685" level="INFO">${RESULT} = [{'diff': 0.0001015549999999997}, {'diff': 0.00010134699999999816}, {'diff': 0.00010106899999999877}, {'diff': 0.00010097200000000126}, {'diff': 0.0001008060000000019}, {'diff': 0.00010061099999999698...</msg>
<status status="PASS" starttime="20201030 11:51:40.682" endtime="20201030 11:51:40.685"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:40.689" level="INFO">${ACCURACY} = {'diff': [0.0001015549999999997, 0.00010134699999999816, 0.00010106899999999877, 0.00010097200000000126, 0.0001008060000000019, 0.00010061099999999698, 0.00010115299999999966, 0.00010091699999999898, ...</msg>
<status status="PASS" starttime="20201030 11:51:40.686" endtime="20201030 11:51:40.689"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:40.693" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201030 11:51:40.692" endtime="20201030 11:51:40.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:40.696" level="INFO">VALUE: [0.0001015549999999997, 0.00010134699999999816, 0.00010106899999999877, 0.00010097200000000126, 0.0001008060000000019, 0.00010061099999999698, 0.00010115299999999966, 0.00010091699999999898, 0.00010090299999999941, 0.00010087500000000027, 0.0001009870000000003, 0.00010093099999999855, 0.0001008480000000006, 0.00010111100000000095, 0.00010091600000000298, 0.000100722000000001, 0.00010084700000000113, 0.00010097200000000126, 0.00010056900000000174, 0.0001006800000000023, 0.00010113900000000009, 0.0001004999999999999, 0.00010077799999999928, 0.00010068100000000177, 0.00010057000000000121, 0.00010074999999999668, 0.00010108399999999781, 0.00010101300000000049, 0.0001010549999999992, 0.00010061100000000045, 0.00010062500000000002, 0.00010097199999999779, 0.00010063899999999959, 0.00010090299999999941, 0.00010090300000000288, 0.00010077799999999928, 0.0001010000000000004, 0.00010109699999999791, 0.00010098600000000083, 0.00010084700000000113, 0.00010087500000000027, 0.00010088899999999984, 0.00010076399999999971, 0.0001008060000000019, 0.0001006939999999984, 0.00010077699999999981, 0.00010069400000000187, 0.00010095800000000169, 0.00010083300000000156, 0.00010101399999999996]</msg>
<status status="PASS" starttime="20201030 11:51:40.695" endtime="20201030 11:51:40.697"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.690" endtime="20201030 11:51:40.698"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:40.702" endtime="20201030 11:51:40.721"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.700" endtime="20201030 11:51:40.722"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.699" endtime="20201030 11:51:40.722"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.340" endtime="20201030 11:51:40.722"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.339" endtime="20201030 11:51:40.722"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:40.731" endtime="20201030 11:51:40.751"></status>
</kw>
<msg timestamp="20201030 11:51:40.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:40.730" endtime="20201030 11:51:40.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:40.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:40.752" endtime="20201030 11:51:40.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:40.755" endtime="20201030 11:51:40.757"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.727" endtime="20201030 11:51:40.758"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.725" endtime="20201030 11:51:40.758"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:40.765" endtime="20201030 11:51:41.051"></status>
</kw>
<msg timestamp="20201030 11:51:41.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021951958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022054264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:40.763" endtime="20201030 11:51:41.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021951958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022054264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:41.055" endtime="20201030 11:51:41.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.063" endtime="20201030 11:51:41.065"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.761" endtime="20201030 11:51:41.065"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.759" endtime="20201030 11:51:41.066"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:41.070" level="INFO">${RESULT} = [{'diff': 0.00010230599999999992}, {'diff': 0.00010213900000000109}, {'diff': 0.00010193099999999955}, {'diff': 0.00010158399999999831}, {'diff': 0.00010188900000000084}, {'diff': 0.000102069999999999...</msg>
<status status="PASS" starttime="20201030 11:51:41.066" endtime="20201030 11:51:41.070"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:41.075" level="INFO">${ACCURACY} = {'diff': [0.00010230599999999992, 0.00010213900000000109, 0.00010193099999999955, 0.00010158399999999831, 0.00010188900000000084, 0.00010206999999999924, 0.0001018610000000017, 0.00010162499999999755,...</msg>
<status status="PASS" starttime="20201030 11:51:41.071" endtime="20201030 11:51:41.075"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.079" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201030 11:51:41.078" endtime="20201030 11:51:41.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.082" level="INFO">VALUE: [0.00010230599999999992, 0.00010213900000000109, 0.00010193099999999955, 0.00010158399999999831, 0.00010188900000000084, 0.00010206999999999924, 0.0001018610000000017, 0.00010162499999999755, 0.00010206899999999977, 0.00010156899999999927, 0.00010215300000000066, 0.00010193099999999955, 0.00010165300000000016, 0.00010193099999999955, 0.00010209799999999838, 0.00010205599999999967, 0.00010205599999999967, 0.00010159699999999841, 0.00010183400000000203, 0.00010162500000000102, 0.0001020550000000002, 0.00010172299999999801, 0.00010195799999999922, 0.00010169499999999887, 0.0001019160000000005, 0.00010166600000000026, 0.00010208299999999934, 0.00010193099999999955, 0.00010158300000000231, 0.00010211099999999848, 0.00010211100000000195, 0.00010205599999999967, 0.00010193099999999955, 0.00010206999999999924, 0.00010202800000000053, 0.00010158399999999831, 0.00010177800000000028, 0.00010190300000000041, 0.00010176300000000124, 0.000101819999999999, 0.00010208299999999934, 0.00010165200000000069, 0.00010195799999999922, 0.00010170799999999897, 0.00010154100000000013, 0.00010186099999999823, 0.00010161100000000145, 0.00010212499999999805, 0.00010165300000000016, 0.00010163899999999712]</msg>
<status status="PASS" starttime="20201030 11:51:41.080" endtime="20201030 11:51:41.082"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.075" endtime="20201030 11:51:41.083"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:41.087" endtime="20201030 11:51:41.106"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.085" endtime="20201030 11:51:41.107"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.084" endtime="20201030 11:51:41.107"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.723" endtime="20201030 11:51:41.107"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.723" endtime="20201030 11:51:41.107"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.116" endtime="20201030 11:51:41.135"></status>
</kw>
<msg timestamp="20201030 11:51:41.135" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:41.114" endtime="20201030 11:51:41.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.138" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:41.136" endtime="20201030 11:51:41.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.139" endtime="20201030 11:51:41.140"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.112" endtime="20201030 11:51:41.141"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.110" endtime="20201030 11:51:41.141"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.148" endtime="20201030 11:51:41.435"></status>
</kw>
<msg timestamp="20201030 11:51:41.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021893889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021997472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:41.146" endtime="20201030 11:51:41.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021893889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021997472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:41.439" endtime="20201030 11:51:41.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.448" endtime="20201030 11:51:41.449"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.144" endtime="20201030 11:51:41.450"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.142" endtime="20201030 11:51:41.450"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:41.454" level="INFO">${RESULT} = [{'diff': 0.00010358300000000084}, {'diff': 0.0001032359999999996}, {'diff': 0.00010315299999999819}, {'diff': 0.0001030139999999985}, {'diff': 0.00010307000000000024}, {'diff': 0.00010261099999999898...</msg>
<status status="PASS" starttime="20201030 11:51:41.451" endtime="20201030 11:51:41.454"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:41.458" level="INFO">${ACCURACY} = {'diff': [0.00010358300000000084, 0.0001032359999999996, 0.00010315299999999819, 0.0001030139999999985, 0.00010307000000000024, 0.00010261099999999898, 0.00010308399999999981, 0.00010256999999999974, ...</msg>
<status status="PASS" starttime="20201030 11:51:41.455" endtime="20201030 11:51:41.458"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.463" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201030 11:51:41.462" endtime="20201030 11:51:41.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.465" level="INFO">VALUE: [0.00010358300000000084, 0.0001032359999999996, 0.00010315299999999819, 0.0001030139999999985, 0.00010307000000000024, 0.00010261099999999898, 0.00010308399999999981, 0.00010256999999999974, 0.0001030559999999972, 0.00010277800000000128, 0.0001030420000000011, 0.00010259699999999941, 0.00010254099999999766, 0.00010283300000000009, 0.00010284699999999966, 0.00010259699999999941, 0.00010302799999999807, 0.00010294399999999718, 0.00010284699999999966, 0.00010295800000000022, 0.00010259699999999941, 0.00010290299999999794, 0.00010269499999999987, 0.00010262499999999855, 0.00010313899999999862, 0.00010251299999999852, 0.00010308300000000034, 0.00010301300000000249, 0.00010276300000000224, 0.00010266600000000126, 0.00010290299999999794, 0.00010277799999999782, 0.0001026940000000004, 0.00010288900000000184, 0.00010276399999999825, 0.00010291699999999751, 0.00010259700000000288, 0.00010302800000000154, 0.00010276400000000172, 0.00010299999999999893, 0.00010258399999999931, 0.00010258399999999931, 0.00010309699999999991, 0.00010259699999999941, 0.0001027359999999991, 0.00010276400000000172, 0.00010259699999999941, 0.00010272199999999954, 0.00010277799999999782, 0.00010261100000000245]</msg>
<status status="PASS" starttime="20201030 11:51:41.464" endtime="20201030 11:51:41.466"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.459" endtime="20201030 11:51:41.466"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:41.470" endtime="20201030 11:51:41.489"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.469" endtime="20201030 11:51:41.490"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.467" endtime="20201030 11:51:41.490"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.108" endtime="20201030 11:51:41.491"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.108" endtime="20201030 11:51:41.491"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.500" endtime="20201030 11:51:41.521"></status>
</kw>
<msg timestamp="20201030 11:51:41.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:41.498" endtime="20201030 11:51:41.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:41.523" endtime="20201030 11:51:41.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.525" endtime="20201030 11:51:41.527"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.495" endtime="20201030 11:51:41.528"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.493" endtime="20201030 11:51:41.528"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.535" endtime="20201030 11:51:41.821"></status>
</kw>
<msg timestamp="20201030 11:51:41.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0252245, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025328653, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:51:41.533" endtime="20201030 11:51:41.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0252245, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025328653, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:51:41.825" endtime="20201030 11:51:41.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.833" endtime="20201030 11:51:41.835"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.530" endtime="20201030 11:51:41.835"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.529" endtime="20201030 11:51:41.836"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:41.840" level="INFO">${RESULT} = [{'diff': 0.00010415299999999919}, {'diff': 0.00010388899999999937}, {'diff': 0.00010361099999999998}, {'diff': 0.00010407000000000124}, {'diff': 0.00010377700000000281}, {'diff': 0.000103736000000000...</msg>
<status status="PASS" starttime="20201030 11:51:41.836" endtime="20201030 11:51:41.840"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:41.844" level="INFO">${ACCURACY} = {'diff': [0.00010415299999999919, 0.00010388899999999937, 0.00010361099999999998, 0.00010407000000000124, 0.00010377700000000281, 0.0001037360000000001, 0.0001038749999999998, 0.00010390300000000241, ...</msg>
<status status="PASS" starttime="20201030 11:51:41.841" endtime="20201030 11:51:41.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.848" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201030 11:51:41.847" endtime="20201030 11:51:41.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.850" level="INFO">VALUE: [0.00010415299999999919, 0.00010388899999999937, 0.00010361099999999998, 0.00010407000000000124, 0.00010377700000000281, 0.0001037360000000001, 0.0001038749999999998, 0.00010390300000000241, 0.00010383299999999762, 0.00010394399999999818, 0.00010370800000000097, 0.00010381999999999753, 0.00010370800000000097, 0.0001040139999999995, 0.00010408400000000081, 0.00010374999999999968, 0.00010407000000000124, 0.000103820000000001, 0.00010377699999999934, 0.00010366600000000226, 0.00010388899999999937, 0.00010366599999999879, 0.0001037360000000001, 0.00010391699999999851, 0.00010402799999999907, 0.00010372200000000054, 0.00010409700000000091, 0.00010384700000000066, 0.0001040559999999982, 0.00010362499999999955, 0.00010362499999999955, 0.00010388899999999937, 0.00010407000000000124, 0.00010380500000000195, 0.00010359799999999988, 0.00010367999999999836, 0.0001037079999999975, 0.00010399999999999993, 0.00010408299999999787, 0.00010369399999999793, 0.0001038749999999998, 0.00010355499999999823, 0.00010402799999999907, 0.00010366699999999826, 0.00010408300000000134, 0.00010383400000000056, 0.00010390299999999894, 0.0001040420000000021, 0.00010399999999999993, 0.00010370800000000097]</msg>
<status status="PASS" starttime="20201030 11:51:41.849" endtime="20201030 11:51:41.855"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.844" endtime="20201030 11:51:41.856"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:41.860" endtime="20201030 11:51:41.879"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.858" endtime="20201030 11:51:41.880"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.857" endtime="20201030 11:51:41.880"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.492" endtime="20201030 11:51:41.880"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.491" endtime="20201030 11:51:41.880"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.497" endtime="20201030 11:51:41.881"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201030 11:51:03.423" endtime="20201030 11:51:41.881" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:41.889" endtime="20201030 11:51:41.908"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.887" endtime="20201030 11:51:41.909"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.922" endtime="20201030 11:51:41.941"></status>
</kw>
<msg timestamp="20201030 11:51:41.941" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:41.920" endtime="20201030 11:51:41.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.944" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:41.942" endtime="20201030 11:51:41.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.947" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:51:41.945" endtime="20201030 11:51:41.947"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:41.918" endtime="20201030 11:51:41.948"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:41.915" endtime="20201030 11:51:41.948"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.914" endtime="20201030 11:51:41.949"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:51:41.952" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:51:41.952" endtime="20201030 11:51:41.953"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.950" endtime="20201030 11:51:41.953"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.913" endtime="20201030 11:51:41.953"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.912" endtime="20201030 11:51:41.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.954" endtime="20201030 11:51:41.956"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.911" endtime="20201030 11:51:41.956"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.909" endtime="20201030 11:51:41.957"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.886" endtime="20201030 11:51:41.957"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.968" endtime="20201030 11:51:41.982"></status>
</kw>
<msg timestamp="20201030 11:51:41.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:41.967" endtime="20201030 11:51:41.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:41.984" endtime="20201030 11:51:41.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.987" endtime="20201030 11:51:41.989"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.963" endtime="20201030 11:51:41.989"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.961" endtime="20201030 11:51:41.989"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.996" endtime="20201030 11:51:42.280"></status>
</kw>
<msg timestamp="20201030 11:51:42.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071794792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071799333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:41.994" endtime="20201030 11:51:42.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:42.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071794792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071799333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:42.284" endtime="20201030 11:51:42.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:42.293" endtime="20201030 11:51:42.294"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.992" endtime="20201030 11:51:42.295"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.990" endtime="20201030 11:51:42.295"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:42.299" level="INFO">${RESULT} = [{'diff': 4.541000000010675e-06}, {'diff': 3.9999999999901226e-06}, {'diff': 3.26400000000282e-06}, {'diff': 3.8200000000016e-06}, {'diff': 3.2499999999963114e-06}, {'diff': 3.819000000002126e-06}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:42.296" endtime="20201030 11:51:42.299"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:42.303" level="INFO">${ACCURACY} = {'diff': [4.541000000010675e-06, 3.9999999999901226e-06, 3.26400000000282e-06, 3.8200000000016e-06, 3.2499999999963114e-06, 3.819000000002126e-06, 3.832999999994757e-06, 3.624999999993217e-06, 3.61100...</msg>
<status status="PASS" starttime="20201030 11:51:42.300" endtime="20201030 11:51:42.304"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:42.309" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201030 11:51:42.308" endtime="20201030 11:51:42.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:42.311" level="INFO">VALUE: [4.541000000010675e-06, 3.9999999999901226e-06, 3.26400000000282e-06, 3.8200000000016e-06, 3.2499999999963114e-06, 3.819000000002126e-06, 3.832999999994757e-06, 3.624999999993217e-06, 3.611000000000586e-06, 3.360999999993397e-06, 3.8200000000016e-06, 3.5840000000009198e-06, 3.569000000008815e-06, 3.611000000000586e-06, 3.596999999994077e-06, 3.583000000001446e-06, 3.847000000001266e-06, 3.833000000008635e-06, 3.2499999999963114e-06, 3.805999999995091e-06, 3.834000000008109e-06, 3.5409999999957975e-06, 3.29200000000196e-06, 3.583000000001446e-06, 3.596999999994077e-06, 3.583000000001446e-06, 3.8049999999956174e-06, 3.6120000000000596e-06, 3.278000000009329e-06, 3.583999999987042e-06, 3.819000000002126e-06, 3.5840000000009198e-06, 3.597000000007955e-06, 3.597000000007955e-06, 3.5980000000074286e-06, 3.597000000007955e-06, 3.819000000002126e-06, 3.596999999994077e-06, 3.583000000001446e-06, 3.847000000001266e-06, 3.597000000007955e-06, 3.583000000001446e-06, 3.819000000002126e-06, 3.805999999995091e-06, 3.597999999993551e-06, 3.597000000007955e-06, 3.374999999999906e-06, 3.5840000000009198e-06, 3.806000000008969e-06, 3.596999999994077e-06]</msg>
<status status="PASS" starttime="20201030 11:51:42.310" endtime="20201030 11:51:42.312"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.304" endtime="20201030 11:51:42.312"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:42.316" endtime="20201030 11:51:42.335"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.314" endtime="20201030 11:51:42.336"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.313" endtime="20201030 11:51:42.336"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.959" endtime="20201030 11:51:42.336"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.958" endtime="20201030 11:51:42.337"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:42.346" endtime="20201030 11:51:42.360"></status>
</kw>
<msg timestamp="20201030 11:51:42.360" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:42.344" endtime="20201030 11:51:42.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:42.363" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:42.361" endtime="20201030 11:51:42.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:42.364" endtime="20201030 11:51:42.365"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.341" endtime="20201030 11:51:42.366"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.339" endtime="20201030 11:51:42.366"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:42.373" endtime="20201030 11:51:42.662"></status>
</kw>
<msg timestamp="20201030 11:51:42.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022319569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022324944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:42.371" endtime="20201030 11:51:42.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:42.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022319569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022324944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:42.666" endtime="20201030 11:51:42.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:42.675" endtime="20201030 11:51:42.676"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.369" endtime="20201030 11:51:42.677"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.367" endtime="20201030 11:51:42.677"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:42.681" level="INFO">${RESULT} = [{'diff': 5.374999999998437e-06}, {'diff': 4.125000000000656e-06}, {'diff': 4.277999999999921e-06}, {'diff': 4.750000000001281e-06}, {'diff': 4.7499999999978115e-06}, {'diff': 4.721999999998672e-06}, ...</msg>
<status status="PASS" starttime="20201030 11:51:42.678" endtime="20201030 11:51:42.681"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:42.687" level="INFO">${ACCURACY} = {'diff': [5.374999999998437e-06, 4.125000000000656e-06, 4.277999999999921e-06, 4.750000000001281e-06, 4.7499999999978115e-06, 4.721999999998672e-06, 4.528000000000171e-06, 4.528000000000171e-06, 4.708...</msg>
<status status="PASS" starttime="20201030 11:51:42.682" endtime="20201030 11:51:42.687"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:42.691" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201030 11:51:42.690" endtime="20201030 11:51:42.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:42.694" level="INFO">VALUE: [5.374999999998437e-06, 4.125000000000656e-06, 4.277999999999921e-06, 4.750000000001281e-06, 4.7499999999978115e-06, 4.721999999998672e-06, 4.528000000000171e-06, 4.528000000000171e-06, 4.7089999999985754e-06, 4.528000000000171e-06, 4.7499999999978115e-06, 4.500000000001031e-06, 4.514000000000601e-06, 4.737000000001185e-06, 4.514000000000601e-06, 4.4999999999975615e-06, 4.778000000000421e-06, 4.514000000000601e-06, 4.527000000000697e-06, 5.000000000001531e-06, 4.333000000002196e-06, 4.972000000002391e-06, 4.500000000001031e-06, 4.762999999997908e-06, 4.7499999999978115e-06, 4.750000000001281e-06, 4.500000000001031e-06, 4.736000000001711e-06, 4.957999999999352e-06, 4.735999999998242e-06, 4.972999999998395e-06, 4.750000000001281e-06, 4.541999999999741e-06, 4.027999999999671e-06, 4.514000000000601e-06, 4.514000000000601e-06, 4.735999999998242e-06, 4.485999999997992e-06, 4.264000000000351e-06, 4.721999999998672e-06, 4.513999999997131e-06, 4.735999999998242e-06, 4.985999999998492e-06, 4.458000000002321e-06, 4.735999999998242e-06, 4.4999999999975615e-06, 4.471999999998422e-06, 4.735999999998242e-06, 4.500000000001031e-06, 4.513999999997131e-06]</msg>
<status status="PASS" starttime="20201030 11:51:42.692" endtime="20201030 11:51:42.694"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.688" endtime="20201030 11:51:42.695"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:42.698" endtime="20201030 11:51:42.718"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.697" endtime="20201030 11:51:42.718"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.695" endtime="20201030 11:51:42.718"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.338" endtime="20201030 11:51:42.719"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.337" endtime="20201030 11:51:42.719"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:42.728" endtime="20201030 11:51:42.742"></status>
</kw>
<msg timestamp="20201030 11:51:42.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:42.726" endtime="20201030 11:51:42.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:42.745" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:42.744" endtime="20201030 11:51:42.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:42.746" endtime="20201030 11:51:42.748"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.724" endtime="20201030 11:51:42.748"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.722" endtime="20201030 11:51:42.749"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:42.755" endtime="20201030 11:51:43.045"></status>
</kw>
<msg timestamp="20201030 11:51:43.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022176847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022183194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:42.754" endtime="20201030 11:51:43.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:43.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022176847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022183194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:43.049" endtime="20201030 11:51:43.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:43.058" endtime="20201030 11:51:43.059"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.751" endtime="20201030 11:51:43.060"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.749" endtime="20201030 11:51:43.060"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:43.064" level="INFO">${RESULT} = [{'diff': 6.347000000000297e-06}, {'diff': 5.874999999998937e-06}, {'diff': 5.459000000002795e-06}, {'diff': 5.667000000000866e-06}, {'diff': 4.943999999999782e-06}, {'diff': 5.194000000000032e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:51:43.061" endtime="20201030 11:51:43.065"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:43.068" level="INFO">${ACCURACY} = {'diff': [6.347000000000297e-06, 5.874999999998937e-06, 5.459000000002795e-06, 5.667000000000866e-06, 4.943999999999782e-06, 5.194000000000032e-06, 5.874999999998937e-06, 5.917000000001116e-06, 5.4859...</msg>
<status status="PASS" starttime="20201030 11:51:43.065" endtime="20201030 11:51:43.069"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:43.073" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201030 11:51:43.072" endtime="20201030 11:51:43.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:43.075" level="INFO">VALUE: [6.347000000000297e-06, 5.874999999998937e-06, 5.459000000002795e-06, 5.667000000000866e-06, 4.943999999999782e-06, 5.194000000000032e-06, 5.874999999998937e-06, 5.917000000001116e-06, 5.485999999998992e-06, 5.666999999997396e-06, 5.9029999999980765e-06, 5.444000000000282e-06, 4.9589999999988255e-06, 5.679999999997493e-06, 5.903000000001546e-06, 5.430000000000712e-06, 5.430000000000712e-06, 5.667000000000866e-06, 5.917000000001116e-06, 5.416000000001142e-06, 5.429999999997243e-06, 5.430000000000712e-06, 5.653000000001296e-06, 5.430000000000712e-06, 5.861000000002836e-06, 5.403000000001046e-06, 5.6529999999978264e-06, 5.916999999997646e-06, 5.680000000000962e-06, 5.431000000000186e-06, 5.679999999997493e-06, 5.667000000000866e-06, 4.917000000000116e-06, 5.431000000000186e-06, 5.889000000001976e-06, 5.375000000001906e-06, 5.903000000001546e-06, 5.666999999997396e-06, 5.6529999999978264e-06, 5.5979999999990204e-06, 5.667000000000866e-06, 5.430000000000712e-06, 5.431000000000186e-06, 5.430000000000712e-06, 5.431000000000186e-06, 5.416000000001142e-06, 5.917000000001116e-06, 5.431000000000186e-06, 5.402000000001572e-06, 5.903000000001546e-06]</msg>
<status status="PASS" starttime="20201030 11:51:43.074" endtime="20201030 11:51:43.076"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.069" endtime="20201030 11:51:43.076"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:43.080" endtime="20201030 11:51:43.100"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.078" endtime="20201030 11:51:43.100"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.077" endtime="20201030 11:51:43.101"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.720" endtime="20201030 11:51:43.101"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.719" endtime="20201030 11:51:43.101"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:43.111" endtime="20201030 11:51:43.125"></status>
</kw>
<msg timestamp="20201030 11:51:43.125" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:43.108" endtime="20201030 11:51:43.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:43.128" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:43.126" endtime="20201030 11:51:43.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:43.129" endtime="20201030 11:51:43.130"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.106" endtime="20201030 11:51:43.131"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.103" endtime="20201030 11:51:43.131"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:43.138" endtime="20201030 11:51:43.421"></status>
</kw>
<msg timestamp="20201030 11:51:43.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022810375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022818083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:43.136" endtime="20201030 11:51:43.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:43.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022810375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022818083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:43.425" endtime="20201030 11:51:43.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:43.434" endtime="20201030 11:51:43.435"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.134" endtime="20201030 11:51:43.436"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.132" endtime="20201030 11:51:43.436"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:43.440" level="INFO">${RESULT} = [{'diff': 7.707999999998633e-06}, {'diff': 6.597000000000547e-06}, {'diff': 6.805000000002087e-06}, {'diff': 6.5969999999970774e-06}, {'diff': 6.360999999999867e-06}, {'diff': 6.360999999999867e-06}, ...</msg>
<status status="PASS" starttime="20201030 11:51:43.437" endtime="20201030 11:51:43.440"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:43.444" level="INFO">${ACCURACY} = {'diff': [7.707999999998633e-06, 6.597000000000547e-06, 6.805000000002087e-06, 6.5969999999970774e-06, 6.360999999999867e-06, 6.360999999999867e-06, 6.597000000000547e-06, 6.611000000000117e-06, 6.805...</msg>
<status status="PASS" starttime="20201030 11:51:43.441" endtime="20201030 11:51:43.445"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:43.449" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201030 11:51:43.448" endtime="20201030 11:51:43.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:43.451" level="INFO">VALUE: [7.707999999998633e-06, 6.597000000000547e-06, 6.805000000002087e-06, 6.5969999999970774e-06, 6.360999999999867e-06, 6.360999999999867e-06, 6.597000000000547e-06, 6.611000000000117e-06, 6.805999999998091e-06, 6.888999999999507e-06, 6.611000000000117e-06, 6.834000000000701e-06, 6.8329999999977575e-06, 6.417000000001616e-06, 6.305000000001587e-06, 6.347000000000297e-06, 6.818999999998188e-06, 6.820000000001131e-06, 6.360999999999867e-06, 6.624999999999687e-06, 6.542000000001741e-06, 6.569000000001407e-06, 5.9029999999980765e-06, 6.597000000000547e-06, 6.5980000000000205e-06, 6.833000000001227e-06, 6.5829999999975075e-06, 6.819000000001657e-06, 6.347000000000297e-06, 6.805999999998091e-06, 6.625000000003156e-06, 6.570000000000881e-06, 6.611000000000117e-06, 6.597000000000547e-06, 6.5829999999975075e-06, 6.389000000002476e-06, 6.7919999999985214e-06, 6.5829999999975075e-06, 6.625000000003156e-06, 6.360999999999867e-06, 6.847000000000797e-06, 6.346999999996827e-06, 5.902000000002072e-06, 6.776999999999478e-06, 6.360999999999867e-06, 5.917000000001116e-06, 6.5969999999970774e-06, 6.597000000000547e-06, 6.5980000000000205e-06, 6.820000000001131e-06]</msg>
<status status="PASS" starttime="20201030 11:51:43.450" endtime="20201030 11:51:43.453"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.445" endtime="20201030 11:51:43.453"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:43.457" endtime="20201030 11:51:43.476"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.456" endtime="20201030 11:51:43.477"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.454" endtime="20201030 11:51:43.477"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.102" endtime="20201030 11:51:43.478"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.101" endtime="20201030 11:51:43.478"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:43.487" endtime="20201030 11:51:43.501"></status>
</kw>
<msg timestamp="20201030 11:51:43.502" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:43.485" endtime="20201030 11:51:43.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:43.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:43.503" endtime="20201030 11:51:43.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:43.505" endtime="20201030 11:51:43.507"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.482" endtime="20201030 11:51:43.507"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.480" endtime="20201030 11:51:43.508"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:43.514" endtime="20201030 11:51:43.801"></status>
</kw>
<msg timestamp="20201030 11:51:43.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022071806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022079764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:43.513" endtime="20201030 11:51:43.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:43.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022071806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022079764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:43.805" endtime="20201030 11:51:43.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:43.814" endtime="20201030 11:51:43.816"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.510" endtime="20201030 11:51:43.816"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.508" endtime="20201030 11:51:43.817"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:43.821" level="INFO">${RESULT} = [{'diff': 7.958000000002352e-06}, {'diff': 7.069999999997911e-06}, {'diff': 7.750000000000812e-06}, {'diff': 7.542000000002741e-06}, {'diff': 7.4719999999979525e-06}, {'diff': 7.290999999999548e-06}, ...</msg>
<status status="PASS" starttime="20201030 11:51:43.818" endtime="20201030 11:51:43.821"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:43.826" level="INFO">${ACCURACY} = {'diff': [7.958000000002352e-06, 7.069999999997911e-06, 7.750000000000812e-06, 7.542000000002741e-06, 7.4719999999979525e-06, 7.290999999999548e-06, 7.736000000001242e-06, 7.527999999999702e-06, 7.514...</msg>
<status status="PASS" starttime="20201030 11:51:43.822" endtime="20201030 11:51:43.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:43.830" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201030 11:51:43.829" endtime="20201030 11:51:43.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:43.833" level="INFO">VALUE: [7.958000000002352e-06, 7.069999999997911e-06, 7.750000000000812e-06, 7.542000000002741e-06, 7.4719999999979525e-06, 7.290999999999548e-06, 7.736000000001242e-06, 7.527999999999702e-06, 7.514000000000132e-06, 7.570000000001881e-06, 7.514000000000132e-06, 7.736000000001242e-06, 7.750000000000812e-06, 7.290999999999548e-06, 7.736000000001242e-06, 7.263000000000408e-06, 7.750000000000812e-06, 7.750000000000812e-06, 7.735999999997772e-06, 7.764000000000382e-06, 7.569000000002407e-06, 7.750000000000812e-06, 7.764000000000382e-06, 6.778000000002421e-06, 7.777999999999952e-06, 7.750000000000812e-06, 7.777999999999952e-06, 7.721999999998203e-06, 7.777999999999952e-06, 7.723000000001146e-06, 7.070000000001381e-06, 7.263999999999882e-06, 7.764000000000382e-06, 7.527999999999702e-06, 7.750000000000812e-06, 7.736000000001242e-06, 7.514000000000132e-06, 7.527999999999702e-06, 7.2779999999994516e-06, 7.764000000000382e-06, 7.528000000003171e-06, 7.292000000002491e-06, 7.694999999998536e-06, 7.527999999999702e-06, 7.291000000003017e-06, 7.542000000002741e-06, 7.750000000000812e-06, 7.290999999999548e-06, 7.764000000000382e-06, 7.5419999999992715e-06]</msg>
<status status="PASS" starttime="20201030 11:51:43.831" endtime="20201030 11:51:43.834"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.827" endtime="20201030 11:51:43.834"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:43.838" endtime="20201030 11:51:43.857"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.836" endtime="20201030 11:51:43.858"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.835" endtime="20201030 11:51:43.858"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.479" endtime="20201030 11:51:43.859"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.478" endtime="20201030 11:51:43.859"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:43.867" endtime="20201030 11:51:43.882"></status>
</kw>
<msg timestamp="20201030 11:51:43.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:43.866" endtime="20201030 11:51:43.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:43.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:43.883" endtime="20201030 11:51:43.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:43.886" endtime="20201030 11:51:43.887"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.863" endtime="20201030 11:51:43.888"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.861" endtime="20201030 11:51:43.888"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:43.895" endtime="20201030 11:51:44.177"></status>
</kw>
<msg timestamp="20201030 11:51:44.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021824931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02183475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:43.893" endtime="20201030 11:51:44.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:44.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021824931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02183475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:44.182" endtime="20201030 11:51:44.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:44.190" endtime="20201030 11:51:44.192"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.891" endtime="20201030 11:51:44.192"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.889" endtime="20201030 11:51:44.193"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:44.197" level="INFO">${RESULT} = [{'diff': 9.819000000001188e-06}, {'diff': 8.680999999999967e-06}, {'diff': 8.444999999999286e-06}, {'diff': 8.680999999999967e-06}, {'diff': 8.472000000002422e-06}, {'diff': 8.958999999999356e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:51:44.193" endtime="20201030 11:51:44.197"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:44.201" level="INFO">${ACCURACY} = {'diff': [9.819000000001188e-06, 8.680999999999967e-06, 8.444999999999286e-06, 8.680999999999967e-06, 8.472000000002422e-06, 8.958999999999356e-06, 8.444999999999286e-06, 8.444999999999286e-06, 8.6670...</msg>
<status status="PASS" starttime="20201030 11:51:44.198" endtime="20201030 11:51:44.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:44.205" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201030 11:51:44.204" endtime="20201030 11:51:44.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:44.208" level="INFO">VALUE: [9.819000000001188e-06, 8.680999999999967e-06, 8.444999999999286e-06, 8.680999999999967e-06, 8.472000000002422e-06, 8.958999999999356e-06, 8.444999999999286e-06, 8.444999999999286e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.667000000000397e-06, 8.903000000001077e-06, 8.430999999999716e-06, 8.708000000003102e-06, 8.499999999998092e-06, 8.443999999999813e-06, 8.667000000000397e-06, 8.444999999999286e-06, 8.444999999999286e-06, 8.680999999999967e-06, 8.417000000000147e-06, 8.680000000000493e-06, 8.708999999999106e-06, 8.443999999999813e-06, 8.903000000001077e-06, 8.458999999998856e-06, 8.443999999999813e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.917000000000647e-06, 8.653000000000827e-06, 8.915999999997704e-06, 8.667000000000397e-06, 8.667000000000397e-06, 7.972000000001922e-06, 8.457999999999383e-06, 8.902000000001603e-06, 8.457999999999383e-06, 8.194999999999036e-06, 8.694999999999536e-06, 8.193999999999563e-06, 8.917000000000647e-06, 8.207999999999133e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.195000000002506e-06, 8.916000000001173e-06, 8.708999999999106e-06, 8.874999999998467e-06]</msg>
<status status="PASS" starttime="20201030 11:51:44.206" endtime="20201030 11:51:44.209"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.202" endtime="20201030 11:51:44.209"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:44.213" endtime="20201030 11:51:44.232"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.211" endtime="20201030 11:51:44.233"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.210" endtime="20201030 11:51:44.233"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.860" endtime="20201030 11:51:44.233"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.859" endtime="20201030 11:51:44.234"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:44.242" endtime="20201030 11:51:44.257"></status>
</kw>
<msg timestamp="20201030 11:51:44.258" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:44.241" endtime="20201030 11:51:44.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:44.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:44.259" endtime="20201030 11:51:44.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:44.261" endtime="20201030 11:51:44.263"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.238" endtime="20201030 11:51:44.264"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.236" endtime="20201030 11:51:44.264"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:44.270" endtime="20201030 11:51:44.556"></status>
</kw>
<msg timestamp="20201030 11:51:44.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022887653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022898194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:44.269" endtime="20201030 11:51:44.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:44.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022887653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022898194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:44.561" endtime="20201030 11:51:44.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:44.569" endtime="20201030 11:51:44.571"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.266" endtime="20201030 11:51:44.571"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.265" endtime="20201030 11:51:44.572"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:44.576" level="INFO">${RESULT} = [{'diff': 1.0540999999999329e-05}, {'diff': 8.916999999997177e-06}, {'diff': 8.916999999997177e-06}, {'diff': 9.610999999999648e-06}, {'diff': 9.388999999998537e-06}, {'diff': 9.416000000001673e-06}, ...</msg>
<status status="PASS" starttime="20201030 11:51:44.572" endtime="20201030 11:51:44.576"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:44.580" level="INFO">${ACCURACY} = {'diff': [1.0540999999999329e-05, 8.916999999997177e-06, 8.916999999997177e-06, 9.610999999999648e-06, 9.388999999998537e-06, 9.416000000001673e-06, 9.360999999999398e-06, 9.610999999999648e-06, 9.374...</msg>
<status status="PASS" starttime="20201030 11:51:44.577" endtime="20201030 11:51:44.580"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:44.584" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201030 11:51:44.583" endtime="20201030 11:51:44.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:44.587" level="INFO">VALUE: [1.0540999999999329e-05, 8.916999999997177e-06, 8.916999999997177e-06, 9.610999999999648e-06, 9.388999999998537e-06, 9.416000000001673e-06, 9.360999999999398e-06, 9.610999999999648e-06, 9.374999999998967e-06, 9.847000000000328e-06, 9.374999999998967e-06, 9.847000000000328e-06, 9.597000000000078e-06, 9.611999999999121e-06, 9.832999999997288e-06, 9.389000000002007e-06, 9.610999999999648e-06, 9.389000000002007e-06, 9.389000000002007e-06, 9.374999999998967e-06, 9.554999999997899e-06, 9.375000000002437e-06, 9.847000000000328e-06, 9.374999999998967e-06, 9.818999999997718e-06, 9.833000000000758e-06, 9.819000000001188e-06, 9.792000000001522e-06, 9.833000000000758e-06, 9.403000000001577e-06, 9.847000000000328e-06, 9.833000000000758e-06, 9.401999999998634e-06, 9.125000000002187e-06, 9.611999999999121e-06, 9.610999999999648e-06, 9.597000000000078e-06, 9.597000000000078e-06, 9.820000000000662e-06, 9.901999999999134e-06, 9.833000000000758e-06, 9.805999999997622e-06, 9.611000000003117e-06, 9.847999999999801e-06, 9.834000000000231e-06, 9.847000000000328e-06, 9.833000000000758e-06, 9.59800000000302e-06, 9.360999999999398e-06, 9.375000000002437e-06]</msg>
<status status="PASS" starttime="20201030 11:51:44.585" endtime="20201030 11:51:44.588"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.581" endtime="20201030 11:51:44.589"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:44.593" endtime="20201030 11:51:44.612"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.591" endtime="20201030 11:51:44.613"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.590" endtime="20201030 11:51:44.613"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.235" endtime="20201030 11:51:44.613"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.234" endtime="20201030 11:51:44.613"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:44.622" endtime="20201030 11:51:44.637"></status>
</kw>
<msg timestamp="20201030 11:51:44.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:44.620" endtime="20201030 11:51:44.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:44.639" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:44.638" endtime="20201030 11:51:44.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:44.640" endtime="20201030 11:51:44.642"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.618" endtime="20201030 11:51:44.643"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.616" endtime="20201030 11:51:44.643"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:44.650" endtime="20201030 11:51:44.936"></status>
</kw>
<msg timestamp="20201030 11:51:44.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021989056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022000722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:44.648" endtime="20201030 11:51:44.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:44.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021989056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022000722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:44.941" endtime="20201030 11:51:44.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:44.949" endtime="20201030 11:51:44.951"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.645" endtime="20201030 11:51:44.952"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.644" endtime="20201030 11:51:44.952"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:44.956" level="INFO">${RESULT} = [{'diff': 1.1666000000000454e-05}, {'diff': 1.0068999999997968e-05}, {'diff': 1.0985999999997553e-05}, {'diff': 1.0750000000000343e-05}, {'diff': 1.1014000000000163e-05}, {'diff': 1.0305000000002118e-...</msg>
<status status="PASS" starttime="20201030 11:51:44.953" endtime="20201030 11:51:44.956"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:44.963" level="INFO">${ACCURACY} = {'diff': [1.1666000000000454e-05, 1.0068999999997968e-05, 1.0985999999997553e-05, 1.0750000000000343e-05, 1.1014000000000163e-05, 1.0305000000002118e-05, 1.0763999999999913e-05, 1.0554999999998899e-05...</msg>
<status status="PASS" starttime="20201030 11:51:44.957" endtime="20201030 11:51:44.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:44.968" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201030 11:51:44.967" endtime="20201030 11:51:44.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:44.970" level="INFO">VALUE: [1.1666000000000454e-05, 1.0068999999997968e-05, 1.0985999999997553e-05, 1.0750000000000343e-05, 1.1014000000000163e-05, 1.0305000000002118e-05, 1.0763999999999913e-05, 1.0554999999998899e-05, 1.0777999999999482e-05, 1.0763999999999913e-05, 1.0750000000000343e-05, 1.0542000000002272e-05, 1.0528000000002702e-05, 1.0500000000000093e-05, 1.0304999999998649e-05, 1.1000000000000593e-05, 1.0763999999999913e-05, 1.0528000000002702e-05, 1.0763999999999913e-05, 1.0526999999999759e-05, 1.0527999999999232e-05, 1.0763999999999913e-05, 1.0304999999998649e-05, 1.0736000000000773e-05, 1.0527999999999232e-05, 1.0986000000001023e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0290999999999079e-05, 1.0527999999999232e-05, 1.0777999999999482e-05, 1.0527999999999232e-05, 1.0500000000000093e-05, 1.0304999999998649e-05, 1.0750000000000343e-05, 9.847000000000328e-06, 1.0985999999997553e-05, 1.0513999999999663e-05, 1.0583000000001508e-05, 1.0540999999999329e-05, 1.0763999999999913e-05, 1.0055999999997872e-05, 1.0083000000001008e-05, 1.0542000000002272e-05, 1.0736000000000773e-05, 1.0542000000002272e-05, 1.0513999999999663e-05, 1.0750000000000343e-05, 1.0528000000002702e-05, 1.0750000000000343e-05]</msg>
<status status="PASS" starttime="20201030 11:51:44.969" endtime="20201030 11:51:44.971"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.964" endtime="20201030 11:51:44.972"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:44.975" endtime="20201030 11:51:44.995"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.974" endtime="20201030 11:51:44.995"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.973" endtime="20201030 11:51:44.996"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.614" endtime="20201030 11:51:44.996"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.614" endtime="20201030 11:51:44.996"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:45.005" endtime="20201030 11:51:45.019"></status>
</kw>
<msg timestamp="20201030 11:51:45.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:45.003" endtime="20201030 11:51:45.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:45.022" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:45.021" endtime="20201030 11:51:45.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:45.023" endtime="20201030 11:51:45.025"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.001" endtime="20201030 11:51:45.026"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.999" endtime="20201030 11:51:45.026"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:45.033" endtime="20201030 11:51:45.319"></status>
</kw>
<msg timestamp="20201030 11:51:45.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021989944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022002542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:45.031" endtime="20201030 11:51:45.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:45.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021989944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022002542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:45.323" endtime="20201030 11:51:45.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:45.332" endtime="20201030 11:51:45.334"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.028" endtime="20201030 11:51:45.334"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.027" endtime="20201030 11:51:45.335"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:45.339" level="INFO">${RESULT} = [{'diff': 1.2597999999999082e-05}, {'diff': 1.1222000000001703e-05}, {'diff': 1.0959000000001357e-05}, {'diff': 1.1444999999998817e-05}, {'diff': 1.0986000000001023e-05}, {'diff': 1.1930000000000274e-...</msg>
<status status="PASS" starttime="20201030 11:51:45.335" endtime="20201030 11:51:45.339"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:45.343" level="INFO">${ACCURACY} = {'diff': [1.2597999999999082e-05, 1.1222000000001703e-05, 1.0959000000001357e-05, 1.1444999999998817e-05, 1.0986000000001023e-05, 1.1930000000000274e-05, 1.1680000000000024e-05, 1.1680000000000024e-05...</msg>
<status status="PASS" starttime="20201030 11:51:45.340" endtime="20201030 11:51:45.343"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:45.347" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201030 11:51:45.346" endtime="20201030 11:51:45.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:45.350" level="INFO">VALUE: [1.2597999999999082e-05, 1.1222000000001703e-05, 1.0959000000001357e-05, 1.1444999999998817e-05, 1.0986000000001023e-05, 1.1930000000000274e-05, 1.1680000000000024e-05, 1.1680000000000024e-05, 1.1459000000001857e-05, 1.1693999999999594e-05, 1.1680000000000024e-05, 1.1000000000000593e-05, 1.1457999999998913e-05, 1.1458999999998387e-05, 1.1457999999998913e-05, 1.1707999999999164e-05, 1.1222000000001703e-05, 1.0986000000001023e-05, 1.1443999999999344e-05, 1.1652999999996888e-05, 1.1222999999997707e-05, 1.1917000000000177e-05, 1.1430999999999247e-05, 1.1000000000000593e-05, 1.1443999999999344e-05, 1.1736000000001773e-05, 1.1721999999998733e-05, 1.1000000000000593e-05, 1.1458000000002383e-05, 1.1874999999997998e-05, 1.1693999999999594e-05, 1.1443999999999344e-05, 1.1666999999999927e-05, 1.1000000000000593e-05, 1.1902999999997138e-05, 1.1444999999998817e-05, 1.1693999999999594e-05, 1.1875000000001468e-05, 1.1874999999997998e-05, 1.1888999999997568e-05, 1.1472000000001953e-05, 1.1444000000002813e-05, 1.1680000000000024e-05, 1.1916000000000704e-05, 1.1472000000001953e-05, 1.1694999999999067e-05, 1.1693999999999594e-05, 1.0986000000001023e-05, 1.1445000000002287e-05, 1.0958000000001883e-05]</msg>
<status status="PASS" starttime="20201030 11:51:45.348" endtime="20201030 11:51:45.351"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.344" endtime="20201030 11:51:45.351"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:45.355" endtime="20201030 11:51:45.374"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.353" endtime="20201030 11:51:45.375"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.352" endtime="20201030 11:51:45.375"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.997" endtime="20201030 11:51:45.376"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.996" endtime="20201030 11:51:45.376"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:45.384" endtime="20201030 11:51:45.400"></status>
</kw>
<msg timestamp="20201030 11:51:45.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:45.383" endtime="20201030 11:51:45.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:45.403" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:45.401" endtime="20201030 11:51:45.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:45.404" endtime="20201030 11:51:45.406"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.380" endtime="20201030 11:51:45.406"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.378" endtime="20201030 11:51:45.407"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:45.413" endtime="20201030 11:51:45.700"></status>
</kw>
<msg timestamp="20201030 11:51:45.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022840278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022853806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:45.411" endtime="20201030 11:51:45.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:45.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022840278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022853806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:45.704" endtime="20201030 11:51:45.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:45.712" endtime="20201030 11:51:45.714"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.409" endtime="20201030 11:51:45.714"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.407" endtime="20201030 11:51:45.715"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:45.719" level="INFO">${RESULT} = [{'diff': 1.3528000000002233e-05}, {'diff': 1.2375000000001968e-05}, {'diff': 1.2375000000001968e-05}, {'diff': 1.2639000000001788e-05}, {'diff': 1.1930000000000274e-05}, {'diff': 1.2388999999998068e-...</msg>
<status status="PASS" starttime="20201030 11:51:45.716" endtime="20201030 11:51:45.719"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:45.723" level="INFO">${ACCURACY} = {'diff': [1.3528000000002233e-05, 1.2375000000001968e-05, 1.2375000000001968e-05, 1.2639000000001788e-05, 1.1930000000000274e-05, 1.2388999999998068e-05, 1.2860999999999428e-05, 1.2625000000002218e-05...</msg>
<status status="PASS" starttime="20201030 11:51:45.720" endtime="20201030 11:51:45.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:45.728" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201030 11:51:45.727" endtime="20201030 11:51:45.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:45.730" level="INFO">VALUE: [1.3528000000002233e-05, 1.2375000000001968e-05, 1.2375000000001968e-05, 1.2639000000001788e-05, 1.1930000000000274e-05, 1.2388999999998068e-05, 1.2860999999999428e-05, 1.2625000000002218e-05, 1.2680000000001024e-05, 1.2403000000001108e-05, 1.2388999999998068e-05, 1.2375000000001968e-05, 1.2583000000000039e-05, 1.2611000000002648e-05, 1.2846999999999859e-05, 1.2194999999999567e-05, 1.2834000000003232e-05, 1.2596999999999609e-05, 1.2610999999999178e-05, 1.2361000000002398e-05, 1.2624999999998748e-05, 1.2388999999998068e-05, 1.2860999999999428e-05, 1.2374999999998498e-05, 1.2653000000001358e-05, 1.2611999999998652e-05, 1.2637999999998845e-05, 1.2596999999999609e-05, 1.2833999999999762e-05, 1.2624999999998748e-05, 1.2639000000001788e-05, 1.2846999999999859e-05, 1.1903000000000608e-05, 1.2639000000001788e-05, 1.2610999999999178e-05, 1.2846999999999859e-05, 1.2583000000000039e-05, 1.2388999999998068e-05, 1.2625000000002218e-05, 1.2846999999999859e-05, 1.2556000000000372e-05, 1.2387999999998595e-05, 1.1917000000000177e-05, 1.2625000000002218e-05, 1.2860999999999428e-05, 1.2624999999998748e-05, 1.2833999999999762e-05, 1.2833000000000289e-05, 1.2389000000001538e-05, 1.2624999999998748e-05]</msg>
<status status="PASS" starttime="20201030 11:51:45.729" endtime="20201030 11:51:45.732"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.724" endtime="20201030 11:51:45.732"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:45.736" endtime="20201030 11:51:45.755"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.734" endtime="20201030 11:51:45.756"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.733" endtime="20201030 11:51:45.756"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.377" endtime="20201030 11:51:45.757"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.376" endtime="20201030 11:51:45.757"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:45.765" endtime="20201030 11:51:45.780"></status>
</kw>
<msg timestamp="20201030 11:51:45.780" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:45.764" endtime="20201030 11:51:45.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:45.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:45.782" endtime="20201030 11:51:45.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:45.784" endtime="20201030 11:51:45.786"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.761" endtime="20201030 11:51:45.786"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.759" endtime="20201030 11:51:45.787"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:45.793" endtime="20201030 11:51:46.080"></status>
</kw>
<msg timestamp="20201030 11:51:46.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022045972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022060653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:45.792" endtime="20201030 11:51:46.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022045972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022060653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:46.085" endtime="20201030 11:51:46.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.093" endtime="20201030 11:51:46.095"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.789" endtime="20201030 11:51:46.095"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.787" endtime="20201030 11:51:46.096"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:46.100" level="INFO">${RESULT} = [{'diff': 1.4680999999999028e-05}, {'diff': 1.3084000000000012e-05}, {'diff': 1.3764000000002913e-05}, {'diff': 1.3749999999999873e-05}, {'diff': 1.3249999999999373e-05}, {'diff': 1.2833000000000289e-...</msg>
<status status="PASS" starttime="20201030 11:51:46.097" endtime="20201030 11:51:46.100"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:46.105" level="INFO">${ACCURACY} = {'diff': [1.4680999999999028e-05, 1.3084000000000012e-05, 1.3764000000002913e-05, 1.3749999999999873e-05, 1.3249999999999373e-05, 1.2833000000000289e-05, 1.4000000000000123e-05, 1.3777000000003009e-05...</msg>
<status status="PASS" starttime="20201030 11:51:46.101" endtime="20201030 11:51:46.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.109" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201030 11:51:46.108" endtime="20201030 11:51:46.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.112" level="INFO">VALUE: [1.4680999999999028e-05, 1.3084000000000012e-05, 1.3764000000002913e-05, 1.3749999999999873e-05, 1.3249999999999373e-05, 1.2833000000000289e-05, 1.4000000000000123e-05, 1.3777000000003009e-05, 1.377699999999954e-05, 1.3986000000000554e-05, 1.3778000000002483e-05, 1.3306000000001122e-05, 1.377699999999954e-05, 1.3306000000001122e-05, 1.3556000000001373e-05, 1.3777999999999013e-05, 1.3305000000001649e-05, 1.2846999999999859e-05, 1.355499999999843e-05, 1.3763999999999443e-05, 1.3486000000000054e-05, 1.3555000000001899e-05, 1.354099999999886e-05, 1.3541999999998333e-05, 1.3527999999998763e-05, 1.2833999999999762e-05, 1.3791999999998583e-05, 1.3763999999999443e-05, 1.3541999999998333e-05, 1.3084000000000012e-05, 1.355499999999843e-05, 1.3541000000002329e-05, 1.3542000000001803e-05, 1.3749999999999873e-05, 1.3763999999999443e-05, 1.3360999999999928e-05, 1.3486000000000054e-05, 1.377699999999954e-05, 1.3278000000001983e-05, 1.3763999999999443e-05, 1.3528000000002233e-05, 1.377699999999954e-05, 1.354099999999886e-05, 1.3777999999999013e-05, 1.3763999999999443e-05, 1.3820000000001192e-05, 1.376299999999997e-05, 1.3569000000001469e-05, 1.3306000000001122e-05, 1.2861999999998902e-05]</msg>
<status status="PASS" starttime="20201030 11:51:46.110" endtime="20201030 11:51:46.113"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.106" endtime="20201030 11:51:46.113"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:46.117" endtime="20201030 11:51:46.136"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.115" endtime="20201030 11:51:46.137"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.114" endtime="20201030 11:51:46.137"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.758" endtime="20201030 11:51:46.138"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.757" endtime="20201030 11:51:46.138"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.146" endtime="20201030 11:51:46.162"></status>
</kw>
<msg timestamp="20201030 11:51:46.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:46.145" endtime="20201030 11:51:46.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.165" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:46.163" endtime="20201030 11:51:46.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.166" endtime="20201030 11:51:46.168"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.142" endtime="20201030 11:51:46.168"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.140" endtime="20201030 11:51:46.169"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.175" endtime="20201030 11:51:46.462"></status>
</kw>
<msg timestamp="20201030 11:51:46.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022240736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022256556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:46.173" endtime="20201030 11:51:46.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022240736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022256556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:46.467" endtime="20201030 11:51:46.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.475" endtime="20201030 11:51:46.477"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.171" endtime="20201030 11:51:46.477"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.169" endtime="20201030 11:51:46.478"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:46.482" level="INFO">${RESULT} = [{'diff': 1.5819999999999723e-05}, {'diff': 1.4250000000000373e-05}, {'diff': 1.4472000000001484e-05}, {'diff': 1.4694000000002594e-05}, {'diff': 1.4459000000001387e-05}, {'diff': 1.4471999999998014e-...</msg>
<status status="PASS" starttime="20201030 11:51:46.479" endtime="20201030 11:51:46.482"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:46.486" level="INFO">${ACCURACY} = {'diff': [1.5819999999999723e-05, 1.4250000000000373e-05, 1.4472000000001484e-05, 1.4694000000002594e-05, 1.4459000000001387e-05, 1.4471999999998014e-05, 1.4708999999998168e-05, 1.4458000000001914e-05...</msg>
<status status="PASS" starttime="20201030 11:51:46.483" endtime="20201030 11:51:46.486"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.491" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201030 11:51:46.490" endtime="20201030 11:51:46.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.493" level="INFO">VALUE: [1.5819999999999723e-05, 1.4250000000000373e-05, 1.4472000000001484e-05, 1.4694000000002594e-05, 1.4459000000001387e-05, 1.4471999999998014e-05, 1.4708999999998168e-05, 1.4458000000001914e-05, 1.4487000000000527e-05, 1.4693999999999124e-05, 1.4472000000001484e-05, 1.4457999999998444e-05, 1.4708999999998168e-05, 1.4736000000001304e-05, 1.4693999999999124e-05, 1.3986000000000554e-05, 1.4486000000001054e-05, 1.4916000000000235e-05, 1.4486000000001054e-05, 1.4472000000001484e-05, 1.4737000000000777e-05, 1.4680000000003024e-05, 1.4695000000002068e-05, 1.4485999999997584e-05, 1.4944999999998848e-05, 1.4695000000002068e-05, 1.4472000000001484e-05, 1.4693999999999124e-05, 1.4471999999998014e-05, 1.431899999999875e-05, 1.4000000000000123e-05, 1.4472000000001484e-05, 1.4916999999999708e-05, 1.4236999999996808e-05, 1.4000000000000123e-05, 1.4722000000001734e-05, 1.4929999999999805e-05, 1.4223000000000707e-05, 1.4764000000000443e-05, 1.4000000000000123e-05, 1.4693999999999124e-05, 1.4943999999999374e-05, 1.4708999999998168e-05, 1.4429999999999304e-05, 1.4944000000002844e-05, 1.4694999999998598e-05, 1.4223000000000707e-05, 1.4875000000000999e-05, 1.4693999999999124e-05, 1.4931000000002748e-05]</msg>
<status status="PASS" starttime="20201030 11:51:46.492" endtime="20201030 11:51:46.494"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.487" endtime="20201030 11:51:46.495"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:46.498" endtime="20201030 11:51:46.518"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.497" endtime="20201030 11:51:46.518"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.496" endtime="20201030 11:51:46.518"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.139" endtime="20201030 11:51:46.519"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.138" endtime="20201030 11:51:46.519"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.528" endtime="20201030 11:51:46.544"></status>
</kw>
<msg timestamp="20201030 11:51:46.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:46.526" endtime="20201030 11:51:46.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:46.545" endtime="20201030 11:51:46.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.548" endtime="20201030 11:51:46.549"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.523" endtime="20201030 11:51:46.550"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.521" endtime="20201030 11:51:46.550"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.557" endtime="20201030 11:51:46.843"></status>
</kw>
<msg timestamp="20201030 11:51:46.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022952875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022969181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:46.555" endtime="20201030 11:51:46.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022952875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022969181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:46.847" endtime="20201030 11:51:46.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.856" endtime="20201030 11:51:46.858"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.553" endtime="20201030 11:51:46.858"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.551" endtime="20201030 11:51:46.859"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:46.863" level="INFO">${RESULT} = [{'diff': 1.6306000000000653e-05}, {'diff': 1.584700000000286e-05}, {'diff': 1.584699999999939e-05}, {'diff': 1.5848000000002332e-05}, {'diff': 1.563899999999785e-05}, {'diff': 1.540300000000064e-05},...</msg>
<status status="PASS" starttime="20201030 11:51:46.859" endtime="20201030 11:51:46.863"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:46.867" level="INFO">${ACCURACY} = {'diff': [1.6306000000000653e-05, 1.584700000000286e-05, 1.584699999999939e-05, 1.5848000000002332e-05, 1.563899999999785e-05, 1.540300000000064e-05, 1.584699999999939e-05, 1.540300000000064e-05, 1.54...</msg>
<status status="PASS" starttime="20201030 11:51:46.864" endtime="20201030 11:51:46.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.871" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201030 11:51:46.870" endtime="20201030 11:51:46.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.874" level="INFO">VALUE: [1.6306000000000653e-05, 1.584700000000286e-05, 1.584699999999939e-05, 1.5848000000002332e-05, 1.563899999999785e-05, 1.540300000000064e-05, 1.584699999999939e-05, 1.540300000000064e-05, 1.541700000000021e-05, 1.534700000000236e-05, 1.563900000000132e-05, 1.562500000000175e-05, 1.5887999999998625e-05, 1.562499999999828e-05, 1.540300000000064e-05, 1.562499999999828e-05, 1.540300000000064e-05, 1.562499999999828e-05, 1.562499999999828e-05, 1.5861999999998433e-05, 1.5665999999997515e-05, 1.5875000000002e-05, 1.561099999999871e-05, 1.53889999999976e-05, 1.4902000000000665e-05, 1.4889000000000568e-05, 1.53750000000015e-05, 1.53750000000015e-05, 1.563899999999785e-05, 1.554100000000086e-05, 1.562499999999828e-05, 1.53750000000015e-05, 1.584699999999939e-05, 1.5875000000002e-05, 1.563900000000132e-05, 1.5611999999998183e-05, 1.5583999999999043e-05, 1.587499999999853e-05, 1.53889999999976e-05, 1.561099999999871e-05, 1.584699999999939e-05, 1.5430999999999778e-05, 1.5833999999999293e-05, 1.584699999999939e-05, 1.586099999999896e-05, 1.540300000000064e-05, 1.583299999999982e-05, 1.540299999999717e-05, 1.5848000000002332e-05, 1.587499999999853e-05]</msg>
<status status="PASS" starttime="20201030 11:51:46.872" endtime="20201030 11:51:46.879"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.868" endtime="20201030 11:51:46.880"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:46.883" endtime="20201030 11:51:46.903"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.882" endtime="20201030 11:51:46.903"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.881" endtime="20201030 11:51:46.904"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.520" endtime="20201030 11:51:46.904"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.519" endtime="20201030 11:51:46.904"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.913" endtime="20201030 11:51:46.928"></status>
</kw>
<msg timestamp="20201030 11:51:46.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:46.911" endtime="20201030 11:51:46.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.931" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:46.929" endtime="20201030 11:51:46.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.932" endtime="20201030 11:51:46.934"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.909" endtime="20201030 11:51:46.934"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.907" endtime="20201030 11:51:46.935"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.941" endtime="20201030 11:51:47.227"></status>
</kw>
<msg timestamp="20201030 11:51:47.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022194597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022211625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:46.940" endtime="20201030 11:51:47.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:47.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022194597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022211625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:47.231" endtime="20201030 11:51:47.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:47.240" endtime="20201030 11:51:47.241"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.937" endtime="20201030 11:51:47.242"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.935" endtime="20201030 11:51:47.242"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:47.246" level="INFO">${RESULT} = [{'diff': 1.7027999999998794e-05}, {'diff': 1.677700000000254e-05}, {'diff': 1.677699999999907e-05}, {'diff': 1.655499999999796e-05}, {'diff': 1.6792000000001583e-05}, {'diff': 1.608300000000007e-05},...</msg>
<status status="PASS" starttime="20201030 11:51:47.243" endtime="20201030 11:51:47.246"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:47.251" level="INFO">${ACCURACY} = {'diff': [1.7027999999998794e-05, 1.677700000000254e-05, 1.677699999999907e-05, 1.655499999999796e-05, 1.6792000000001583e-05, 1.608300000000007e-05, 1.6778000000002014e-05, 1.6528000000001764e-05, 1....</msg>
<status status="PASS" starttime="20201030 11:51:47.247" endtime="20201030 11:51:47.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:47.256" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201030 11:51:47.255" endtime="20201030 11:51:47.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:47.258" level="INFO">VALUE: [1.7027999999998794e-05, 1.677700000000254e-05, 1.677699999999907e-05, 1.655499999999796e-05, 1.6792000000001583e-05, 1.608300000000007e-05, 1.6778000000002014e-05, 1.6528000000001764e-05, 1.7013999999999224e-05, 1.6556000000000903e-05, 1.654099999999839e-05, 1.677699999999907e-05, 1.6791999999998114e-05, 1.677700000000254e-05, 1.658300000000057e-05, 1.6763999999998974e-05, 1.6777999999998544e-05, 1.655500000000143e-05, 1.6499999999999154e-05, 1.6556000000000903e-05, 1.6264000000001944e-05, 1.677699999999907e-05, 1.6069999999999973e-05, 1.6777999999998544e-05, 1.6556000000000903e-05, 1.6486000000003054e-05, 1.6999999999999654e-05, 1.634699999999989e-05, 1.6778000000002014e-05, 1.6541999999997864e-05, 1.6306000000000653e-05, 1.6569999999997004e-05, 1.6485999999999584e-05, 1.655500000000143e-05, 1.684700000000039e-05, 1.6513999999998724e-05, 1.6777999999998544e-05, 1.679100000000211e-05, 1.6806000000001153e-05, 1.631900000000075e-05, 1.661099999999971e-05, 1.6778000000002014e-05, 1.6777999999998544e-05, 1.658300000000057e-05, 1.6556000000000903e-05, 1.633300000000032e-05, 1.5902000000001665e-05, 1.6069999999999973e-05, 1.6542000000001333e-05, 1.655500000000143e-05]</msg>
<status status="PASS" starttime="20201030 11:51:47.257" endtime="20201030 11:51:47.259"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.252" endtime="20201030 11:51:47.260"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:47.263" endtime="20201030 11:51:47.283"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.262" endtime="20201030 11:51:47.283"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.261" endtime="20201030 11:51:47.284"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.905" endtime="20201030 11:51:47.284"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.904" endtime="20201030 11:51:47.284"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:47.293" endtime="20201030 11:51:47.307"></status>
</kw>
<msg timestamp="20201030 11:51:47.308" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:47.291" endtime="20201030 11:51:47.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:47.310" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:47.309" endtime="20201030 11:51:47.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:47.311" endtime="20201030 11:51:47.313"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.289" endtime="20201030 11:51:47.313"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.286" endtime="20201030 11:51:47.314"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:47.320" endtime="20201030 11:51:47.607"></status>
</kw>
<msg timestamp="20201030 11:51:47.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022087639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022105556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:47.319" endtime="20201030 11:51:47.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:47.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022087639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022105556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:47.612" endtime="20201030 11:51:47.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:47.620" endtime="20201030 11:51:47.622"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.316" endtime="20201030 11:51:47.622"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.314" endtime="20201030 11:51:47.623"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:47.627" level="INFO">${RESULT} = [{'diff': 1.791699999999924e-05}, {'diff': 1.7236000000000334e-05}, {'diff': 1.763899999999985e-05}, {'diff': 1.7723000000000738e-05}, {'diff': 1.7472000000001014e-05}, {'diff': 1.7223000000000238e-05...</msg>
<status status="PASS" starttime="20201030 11:51:47.623" endtime="20201030 11:51:47.627"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:47.631" level="INFO">${ACCURACY} = {'diff': [1.791699999999924e-05, 1.7236000000000334e-05, 1.763899999999985e-05, 1.7723000000000738e-05, 1.7472000000001014e-05, 1.7223000000000238e-05, 1.7472000000001014e-05, 1.7721999999997795e-05, ...</msg>
<status status="PASS" starttime="20201030 11:51:47.628" endtime="20201030 11:51:47.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:47.635" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201030 11:51:47.634" endtime="20201030 11:51:47.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:47.638" level="INFO">VALUE: [1.791699999999924e-05, 1.7236000000000334e-05, 1.763899999999985e-05, 1.7723000000000738e-05, 1.7472000000001014e-05, 1.7223000000000238e-05, 1.7472000000001014e-05, 1.7721999999997795e-05, 1.7708000000001695e-05, 1.7651999999999946e-05, 1.7473000000000488e-05, 1.7500000000000154e-05, 1.7472000000001014e-05, 1.793100000000228e-05, 1.7709000000001168e-05, 1.7458000000001445e-05, 1.7709000000001168e-05, 1.77089999999977e-05, 1.7472000000001014e-05, 1.7721999999997795e-05, 1.6999999999999654e-05, 1.7709000000001168e-05, 1.7708000000001695e-05, 1.7513999999999724e-05, 1.7680000000002555e-05, 1.7707999999998225e-05, 1.7750000000000404e-05, 1.7709000000001168e-05, 1.791699999999924e-05, 1.794500000000185e-05, 1.790299999999967e-05, 1.7459000000000918e-05, 1.7708000000001695e-05, 1.7707999999998225e-05, 1.747299999999702e-05, 1.7722000000001265e-05, 1.7709000000001168e-05, 1.7472000000001014e-05, 1.769499999999813e-05, 1.7487000000000058e-05, 1.7249999999999904e-05, 1.779099999999964e-05, 1.7709000000001168e-05, 1.7707999999998225e-05, 1.7709000000001168e-05, 1.791699999999924e-05, 1.7709000000001168e-05, 1.7500000000000154e-05, 1.7459000000000918e-05, 1.76950000000016e-05]</msg>
<status status="PASS" starttime="20201030 11:51:47.636" endtime="20201030 11:51:47.639"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.632" endtime="20201030 11:51:47.639"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:47.643" endtime="20201030 11:51:47.662"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.642" endtime="20201030 11:51:47.663"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.640" endtime="20201030 11:51:47.663"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.285" endtime="20201030 11:51:47.664"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.284" endtime="20201030 11:51:47.664"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:47.672" endtime="20201030 11:51:47.688"></status>
</kw>
<msg timestamp="20201030 11:51:47.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:47.671" endtime="20201030 11:51:47.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:47.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:47.690" endtime="20201030 11:51:47.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:47.692" endtime="20201030 11:51:47.694"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.668" endtime="20201030 11:51:47.695"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.666" endtime="20201030 11:51:47.695"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:47.701" endtime="20201030 11:51:47.988"></status>
</kw>
<msg timestamp="20201030 11:51:47.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02326025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023279347, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:47.700" endtime="20201030 11:51:47.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:47.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02326025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023279347, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:47.992" endtime="20201030 11:51:48.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:48.000" endtime="20201030 11:51:48.002"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.697" endtime="20201030 11:51:48.003"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.696" endtime="20201030 11:51:48.003"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:48.007" level="INFO">${RESULT} = [{'diff': 1.909699999999917e-05}, {'diff': 1.7957999999998475e-05}, {'diff': 1.863900000000085e-05}, {'diff': 1.887499999999806e-05}, {'diff': 1.83890000000006e-05}, {'diff': 1.840300000000017e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:48.004" endtime="20201030 11:51:48.007"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:48.011" level="INFO">${ACCURACY} = {'diff': [1.909699999999917e-05, 1.7957999999998475e-05, 1.863900000000085e-05, 1.887499999999806e-05, 1.83890000000006e-05, 1.840300000000017e-05, 1.841699999999974e-05, 1.863900000000085e-05, 1.8860...</msg>
<status status="PASS" starttime="20201030 11:51:48.008" endtime="20201030 11:51:48.011"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:48.016" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201030 11:51:48.015" endtime="20201030 11:51:48.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:48.019" level="INFO">VALUE: [1.909699999999917e-05, 1.7957999999998475e-05, 1.863900000000085e-05, 1.887499999999806e-05, 1.83890000000006e-05, 1.840300000000017e-05, 1.841699999999974e-05, 1.863900000000085e-05, 1.886099999999849e-05, 1.863900000000085e-05, 1.8457999999998975e-05, 1.884700000000239e-05, 1.8416000000000265e-05, 1.861100000000171e-05, 1.8637999999997906e-05, 1.862500000000128e-05, 1.8652000000000946e-05, 1.863900000000085e-05, 1.862500000000128e-05, 1.83890000000006e-05, 1.863899999999738e-05, 1.8833999999998824e-05, 1.887499999999806e-05, 1.840300000000017e-05, 1.861099999999824e-05, 1.886100000000196e-05, 1.863900000000085e-05, 1.863900000000085e-05, 1.8916000000000766e-05, 1.840300000000017e-05, 1.83890000000006e-05, 1.862500000000128e-05, 1.840300000000017e-05, 1.890300000000067e-05, 1.865300000000042e-05, 1.862500000000128e-05, 1.862500000000128e-05, 1.8416000000000265e-05, 1.865300000000042e-05, 1.861099999999824e-05, 1.862500000000128e-05, 1.8388000000001126e-05, 1.840300000000017e-05, 1.863900000000085e-05, 1.863900000000085e-05, 1.836099999999799e-05, 1.840300000000017e-05, 1.843099999999931e-05, 1.7943999999998905e-05, 1.886099999999849e-05]</msg>
<status status="PASS" starttime="20201030 11:51:48.017" endtime="20201030 11:51:48.020"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.012" endtime="20201030 11:51:48.020"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:48.024" endtime="20201030 11:51:48.043"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.022" endtime="20201030 11:51:48.044"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.021" endtime="20201030 11:51:48.044"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.665" endtime="20201030 11:51:48.045"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.664" endtime="20201030 11:51:48.045"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:48.053" endtime="20201030 11:51:48.068"></status>
</kw>
<msg timestamp="20201030 11:51:48.069" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:48.052" endtime="20201030 11:51:48.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:48.071" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:48.070" endtime="20201030 11:51:48.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:48.072" endtime="20201030 11:51:48.074"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.049" endtime="20201030 11:51:48.075"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.047" endtime="20201030 11:51:48.075"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:48.081" endtime="20201030 11:51:48.367"></status>
</kw>
<msg timestamp="20201030 11:51:48.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021863486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021883486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:48.080" endtime="20201030 11:51:48.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:48.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021863486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021883486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:48.371" endtime="20201030 11:51:48.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:48.379" endtime="20201030 11:51:48.381"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.077" endtime="20201030 11:51:48.381"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.076" endtime="20201030 11:51:48.382"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:48.386" level="INFO">${RESULT} = [{'diff': 1.9999999999999185e-05}, {'diff': 1.933299999999985e-05}, {'diff': 1.956900000000053e-05}, {'diff': 1.890300000000067e-05}, {'diff': 1.955500000000096e-05}, {'diff': 1.977700000000207e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:51:48.382" endtime="20201030 11:51:48.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:48.393" level="INFO">${ACCURACY} = {'diff': [1.9999999999999185e-05, 1.933299999999985e-05, 1.956900000000053e-05, 1.890300000000067e-05, 1.955500000000096e-05, 1.977700000000207e-05, 1.9778000000001544e-05, 1.9319999999999754e-05, 1.9...</msg>
<status status="PASS" starttime="20201030 11:51:48.387" endtime="20201030 11:51:48.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:48.398" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201030 11:51:48.397" endtime="20201030 11:51:48.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:48.400" level="INFO">VALUE: [1.9999999999999185e-05, 1.933299999999985e-05, 1.956900000000053e-05, 1.890300000000067e-05, 1.955500000000096e-05, 1.977700000000207e-05, 1.9778000000001544e-05, 1.9319999999999754e-05, 1.931900000000028e-05, 1.979100000000164e-05, 1.9792000000001114e-05, 1.954100000000139e-05, 1.9792000000001114e-05, 1.940300000000117e-05, 1.88890000000011e-05, 1.9055999999999934e-05, 1.979099999999817e-05, 1.979099999999817e-05, 1.9735999999999365e-05, 1.955500000000096e-05, 1.961099999999924e-05, 1.9527999999997825e-05, 1.979100000000164e-05, 1.956900000000053e-05, 1.9319999999999754e-05, 1.977700000000207e-05, 1.9527999999997825e-05, 1.9556000000000434e-05, 1.956900000000053e-05, 1.933299999999985e-05, 1.9098000000002113e-05, 1.980500000000121e-05, 1.979100000000164e-05, 1.9570000000000004e-05, 1.9792000000001114e-05, 1.9792000000001114e-05, 1.9319999999999754e-05, 1.9777999999998075e-05, 1.95830000000001e-05, 1.937500000000203e-05, 1.981899999999731e-05, 1.956899999999706e-05, 1.9333999999999324e-05, 1.9792000000001114e-05, 1.955499999999749e-05, 1.9777999999998075e-05, 1.9333999999999324e-05, 1.906900000000003e-05, 1.954099999999792e-05, 1.9791999999997645e-05]</msg>
<status status="PASS" starttime="20201030 11:51:48.399" endtime="20201030 11:51:48.401"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.394" endtime="20201030 11:51:48.402"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:48.405" endtime="20201030 11:51:48.425"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.404" endtime="20201030 11:51:48.425"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.403" endtime="20201030 11:51:48.426"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.046" endtime="20201030 11:51:48.426"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.045" endtime="20201030 11:51:48.426"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:48.435" endtime="20201030 11:51:48.450"></status>
</kw>
<msg timestamp="20201030 11:51:48.450" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:48.433" endtime="20201030 11:51:48.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:48.453" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:48.451" endtime="20201030 11:51:48.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:48.454" endtime="20201030 11:51:48.456"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.431" endtime="20201030 11:51:48.456"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.429" endtime="20201030 11:51:48.457"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:48.463" endtime="20201030 11:51:48.793"></status>
</kw>
<msg timestamp="20201030 11:51:48.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021882347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021903236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:48.462" endtime="20201030 11:51:48.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:48.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021882347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021903236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:48.797" endtime="20201030 11:51:48.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:48.806" endtime="20201030 11:51:48.807"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.459" endtime="20201030 11:51:48.808"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.457" endtime="20201030 11:51:48.808"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:48.812" level="INFO">${RESULT} = [{'diff': 2.088899999999963e-05}, {'diff': 2.006900000000103e-05}, {'diff': 2.0013999999998755e-05}, {'diff': 2.022299999999977e-05}, {'diff': 1.9972000000000045e-05}, {'diff': 2.0472000000000545e-05}...</msg>
<status status="PASS" starttime="20201030 11:51:48.809" endtime="20201030 11:51:48.812"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:48.816" level="INFO">${ACCURACY} = {'diff': [2.088899999999963e-05, 2.006900000000103e-05, 2.0013999999998755e-05, 2.022299999999977e-05, 1.9972000000000045e-05, 2.0472000000000545e-05, 2.0722000000000795e-05, 2.0500000000003155e-05, 2...</msg>
<status status="PASS" starttime="20201030 11:51:48.813" endtime="20201030 11:51:48.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:48.821" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201030 11:51:48.820" endtime="20201030 11:51:48.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:48.823" level="INFO">VALUE: [2.088899999999963e-05, 2.006900000000103e-05, 2.0013999999998755e-05, 2.022299999999977e-05, 1.9972000000000045e-05, 2.0472000000000545e-05, 2.0722000000000795e-05, 2.0500000000003155e-05, 2.044500000000088e-05, 2.0222000000000295e-05, 2.0736000000000365e-05, 2.0541999999998395e-05, 2.0749999999999935e-05, 2.0486000000000115e-05, 2.04029999999987e-05, 2.0499999999999685e-05, 2.0486000000000115e-05, 2.065299999999895e-05, 2.0707999999997756e-05, 2.0249999999999435e-05, 2.0735999999996896e-05, 2.0486000000000115e-05, 2.0472000000000545e-05, 2.0486000000000115e-05, 2.0693999999998186e-05, 2.0763999999999505e-05, 2.093099999999834e-05, 2.0027999999998325e-05, 2.0485999999996646e-05, 2.0500000000003155e-05, 2.0486000000000115e-05, 2.0028000000001794e-05, 2.0249999999999435e-05, 2.0944000000001906e-05, 2.0486000000000115e-05, 2.0972000000001045e-05, 2.0749999999999935e-05, 2.0000000000002655e-05, 2.022299999999977e-05, 2.0736000000000365e-05, 2.0708000000001225e-05, 2.07090000000007e-05, 2.0915999999999296e-05, 2.0472000000000545e-05, 2.07090000000007e-05, 2.0708000000001225e-05, 2.0263999999999005e-05, 2.1028000000002794e-05, 2.0722000000000795e-05, 2.0722000000000795e-05]</msg>
<status status="PASS" starttime="20201030 11:51:48.822" endtime="20201030 11:51:48.824"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.817" endtime="20201030 11:51:48.825"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:48.829" endtime="20201030 11:51:48.848"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.827" endtime="20201030 11:51:48.849"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.826" endtime="20201030 11:51:48.849"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.427" endtime="20201030 11:51:48.850"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.426" endtime="20201030 11:51:48.850"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:48.858" endtime="20201030 11:51:48.874"></status>
</kw>
<msg timestamp="20201030 11:51:48.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:48.857" endtime="20201030 11:51:48.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:48.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:48.876" endtime="20201030 11:51:48.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:48.878" endtime="20201030 11:51:48.880"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.854" endtime="20201030 11:51:48.881"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.852" endtime="20201030 11:51:48.881"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:48.888" endtime="20201030 11:51:49.173"></status>
</kw>
<msg timestamp="20201030 11:51:49.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021892389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021914722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:48.887" endtime="20201030 11:51:49.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:49.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021892389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021914722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:49.177" endtime="20201030 11:51:49.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:49.185" endtime="20201030 11:51:49.187"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.884" endtime="20201030 11:51:49.187"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.882" endtime="20201030 11:51:49.188"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:49.192" level="INFO">${RESULT} = [{'diff': 2.233299999999938e-05}, {'diff': 2.116699999999902e-05}, {'diff': 2.17229999999978e-05}, {'diff': 2.163900000000038e-05}, {'diff': 2.165299999999995e-05}, {'diff': 2.1429999999999366e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:49.189" endtime="20201030 11:51:49.192"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:49.197" level="INFO">${ACCURACY} = {'diff': [2.233299999999938e-05, 2.116699999999902e-05, 2.17229999999978e-05, 2.163900000000038e-05, 2.165299999999995e-05, 2.1429999999999366e-05, 2.187500000000106e-05, 2.186100000000149e-05, 2.1861...</msg>
<status status="PASS" starttime="20201030 11:51:49.193" endtime="20201030 11:51:49.197"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:49.201" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201030 11:51:49.200" endtime="20201030 11:51:49.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:49.204" level="INFO">VALUE: [2.233299999999938e-05, 2.116699999999902e-05, 2.17229999999978e-05, 2.163900000000038e-05, 2.165299999999995e-05, 2.1429999999999366e-05, 2.187500000000106e-05, 2.186100000000149e-05, 2.186100000000149e-05, 2.186099999999802e-05, 2.14029999999997e-05, 2.162500000000081e-05, 2.162500000000081e-05, 2.141699999999927e-05, 2.141699999999927e-05, 2.141699999999927e-05, 2.183300000000235e-05, 2.187500000000106e-05, 2.1165999999999546e-05, 2.165299999999995e-05, 2.1666000000000046e-05, 2.158299999999863e-05, 2.163900000000038e-05, 2.140300000000317e-05, 2.1583999999998105e-05, 2.138900000000013e-05, 2.163899999999691e-05, 2.187500000000106e-05, 2.165299999999995e-05, 2.14029999999997e-05, 2.188900000000063e-05, 2.187500000000106e-05, 2.1415999999999796e-05, 2.1193999999998686e-05, 2.188899999999716e-05, 2.187499999999759e-05, 2.186099999999802e-05, 2.163900000000038e-05, 2.1834000000001824e-05, 2.165299999999995e-05, 2.0944000000001906e-05, 2.138900000000013e-05, 2.165299999999995e-05, 2.1652000000000476e-05, 2.141699999999927e-05, 2.186100000000149e-05, 2.141699999999927e-05, 2.097300000000052e-05, 2.188899999999716e-05, 2.141699999999927e-05]</msg>
<status status="PASS" starttime="20201030 11:51:49.202" endtime="20201030 11:51:49.205"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.198" endtime="20201030 11:51:49.205"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:49.209" endtime="20201030 11:51:49.228"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.207" endtime="20201030 11:51:49.229"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.206" endtime="20201030 11:51:49.229"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.851" endtime="20201030 11:51:49.229"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.850" endtime="20201030 11:51:49.229"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:49.238" endtime="20201030 11:51:49.254"></status>
</kw>
<msg timestamp="20201030 11:51:49.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:49.236" endtime="20201030 11:51:49.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:49.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:49.256" endtime="20201030 11:51:49.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:49.258" endtime="20201030 11:51:49.260"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.234" endtime="20201030 11:51:49.260"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.232" endtime="20201030 11:51:49.261"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:49.267" endtime="20201030 11:51:49.552"></status>
</kw>
<msg timestamp="20201030 11:51:49.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021808486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021831556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:49.266" endtime="20201030 11:51:49.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:49.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021808486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021831556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:49.557" endtime="20201030 11:51:49.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:49.565" endtime="20201030 11:51:49.567"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.263" endtime="20201030 11:51:49.567"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.261" endtime="20201030 11:51:49.568"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:49.572" level="INFO">${RESULT} = [{'diff': 2.3070000000000035e-05}, {'diff': 2.2819999999999785e-05}, {'diff': 2.234699999999895e-05}, {'diff': 2.2819999999999785e-05}, {'diff': 2.2806000000000215e-05}, {'diff': 2.256900000000006e-05...</msg>
<status status="PASS" starttime="20201030 11:51:49.569" endtime="20201030 11:51:49.572"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:49.576" level="INFO">${ACCURACY} = {'diff': [2.3070000000000035e-05, 2.2819999999999785e-05, 2.234699999999895e-05, 2.2819999999999785e-05, 2.2806000000000215e-05, 2.256900000000006e-05, 2.280500000000074e-05, 2.255500000000049e-05, 2....</msg>
<status status="PASS" starttime="20201030 11:51:49.573" endtime="20201030 11:51:49.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:49.581" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201030 11:51:49.579" endtime="20201030 11:51:49.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:49.583" level="INFO">VALUE: [2.3070000000000035e-05, 2.2819999999999785e-05, 2.234699999999895e-05, 2.2819999999999785e-05, 2.2806000000000215e-05, 2.256900000000006e-05, 2.280500000000074e-05, 2.255500000000049e-05, 2.255500000000049e-05, 2.2806000000000215e-05, 2.281900000000031e-05, 2.263900000000138e-05, 2.2597999999998675e-05, 2.2611999999998245e-05, 2.255500000000049e-05, 2.2347999999998425e-05, 2.234699999999895e-05, 2.179100000000017e-05, 2.262499999999834e-05, 2.281900000000031e-05, 2.256900000000006e-05, 2.256900000000006e-05, 2.2792000000000645e-05, 2.2583999999999105e-05, 2.2792000000000645e-05, 2.258299999999963e-05, 2.2319999999999285e-05, 2.258299999999963e-05, 2.2569999999999535e-05, 2.233299999999938e-05, 2.280500000000074e-05, 2.287500000000206e-05, 2.2333999999998855e-05, 2.2806000000000215e-05, 2.2790999999997702e-05, 2.2583999999999105e-05, 2.2569999999999535e-05, 2.2819999999999785e-05, 2.279100000000117e-05, 2.279100000000117e-05, 2.188900000000063e-05, 2.2555999999999965e-05, 2.2555999999999965e-05, 2.256900000000006e-05, 2.281900000000031e-05, 2.2555999999999965e-05, 2.255500000000049e-05, 2.2806000000000215e-05, 2.255500000000049e-05, 2.2569999999999535e-05]</msg>
<status status="PASS" starttime="20201030 11:51:49.582" endtime="20201030 11:51:49.584"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.577" endtime="20201030 11:51:49.584"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:49.588" endtime="20201030 11:51:49.607"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.586" endtime="20201030 11:51:49.608"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.585" endtime="20201030 11:51:49.608"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.230" endtime="20201030 11:51:49.609"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.230" endtime="20201030 11:51:49.609"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:49.617" endtime="20201030 11:51:49.634"></status>
</kw>
<msg timestamp="20201030 11:51:49.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:49.616" endtime="20201030 11:51:49.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:49.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:49.635" endtime="20201030 11:51:49.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:49.638" endtime="20201030 11:51:49.639"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.613" endtime="20201030 11:51:49.640"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.611" endtime="20201030 11:51:49.640"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:49.647" endtime="20201030 11:51:49.933"></status>
</kw>
<msg timestamp="20201030 11:51:49.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023066042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023090903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:49.645" endtime="20201030 11:51:49.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:49.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023066042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023090903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:49.938" endtime="20201030 11:51:49.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:49.946" endtime="20201030 11:51:49.948"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.643" endtime="20201030 11:51:49.948"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.641" endtime="20201030 11:51:49.949"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:49.953" level="INFO">${RESULT} = [{'diff': 2.486100000000102e-05}, {'diff': 2.3054999999997522e-05}, {'diff': 2.3013999999998286e-05}, {'diff': 2.3708000000000756e-05}, {'diff': 2.3735999999999896e-05}, {'diff': 2.3430000000001366e-0...</msg>
<status status="PASS" starttime="20201030 11:51:49.949" endtime="20201030 11:51:49.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:49.957" level="INFO">${ACCURACY} = {'diff': [2.486100000000102e-05, 2.3054999999997522e-05, 2.3013999999998286e-05, 2.3708000000000756e-05, 2.3735999999999896e-05, 2.3430000000001366e-05, 2.355500000000149e-05, 2.393100000000134e-05, 2...</msg>
<status status="PASS" starttime="20201030 11:51:49.954" endtime="20201030 11:51:49.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:49.961" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201030 11:51:49.960" endtime="20201030 11:51:49.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:49.965" level="INFO">VALUE: [2.486100000000102e-05, 2.3054999999997522e-05, 2.3013999999998286e-05, 2.3708000000000756e-05, 2.3735999999999896e-05, 2.3430000000001366e-05, 2.355500000000149e-05, 2.393100000000134e-05, 2.3486000000003115e-05, 2.3972000000000576e-05, 2.3499999999999216e-05, 2.3735999999999896e-05, 2.3735999999999896e-05, 2.3750000000002935e-05, 2.3735999999999896e-05, 2.32229999999993e-05, 2.3042000000000895e-05, 2.3500000000002685e-05, 2.365299999999848e-05, 2.3514000000002255e-05, 2.395900000000048e-05, 2.3249999999998966e-05, 2.3056000000000465e-05, 2.348700000000259e-05, 2.3722000000000326e-05, 2.3485999999999646e-05, 2.347299999999955e-05, 2.370900000000023e-05, 2.3486000000003115e-05, 2.394500000000091e-05, 2.3264000000002005e-05, 2.343100000000084e-05, 2.3792000000001645e-05, 2.3263999999998536e-05, 2.3930000000001866e-05, 2.3499999999999216e-05, 2.4013999999999286e-05, 2.3735999999999896e-05, 2.379100000000217e-05, 2.3735999999999896e-05, 2.3485999999999646e-05, 2.3958000000001006e-05, 2.3749999999999466e-05, 2.37229999999998e-05, 2.3722000000000326e-05, 2.3735999999999896e-05, 2.3749999999999466e-05, 2.3500000000002685e-05, 2.3235999999999396e-05, 2.3943999999997967e-05]</msg>
<status status="PASS" starttime="20201030 11:51:49.962" endtime="20201030 11:51:49.965"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.958" endtime="20201030 11:51:49.966"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:49.970" endtime="20201030 11:51:49.989"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.968" endtime="20201030 11:51:49.990"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.967" endtime="20201030 11:51:49.990"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.610" endtime="20201030 11:51:49.990"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.609" endtime="20201030 11:51:49.990"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:49.999" endtime="20201030 11:51:50.014"></status>
</kw>
<msg timestamp="20201030 11:51:50.015" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:49.998" endtime="20201030 11:51:50.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:50.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:50.016" endtime="20201030 11:51:50.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:50.018" endtime="20201030 11:51:50.020"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.995" endtime="20201030 11:51:50.021"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.993" endtime="20201030 11:51:50.021"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:50.027" endtime="20201030 11:51:50.313"></status>
</kw>
<msg timestamp="20201030 11:51:50.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022064833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022089917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:50.026" endtime="20201030 11:51:50.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:50.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022064833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022089917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:50.317" endtime="20201030 11:51:50.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:50.326" endtime="20201030 11:51:50.328"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.023" endtime="20201030 11:51:50.328"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.022" endtime="20201030 11:51:50.328"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:50.332" level="INFO">${RESULT} = [{'diff': 2.5084000000001605e-05}, {'diff': 2.411100000000027e-05}, {'diff': 2.487500000000059e-05}, {'diff': 2.4429999999998897e-05}, {'diff': 2.4665999999999577e-05}, {'diff': 2.44169999999988e-05},...</msg>
<status status="PASS" starttime="20201030 11:51:50.329" endtime="20201030 11:51:50.333"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:50.337" level="INFO">${ACCURACY} = {'diff': [2.5084000000001605e-05, 2.411100000000027e-05, 2.487500000000059e-05, 2.4429999999998897e-05, 2.4665999999999577e-05, 2.44169999999988e-05, 2.3972000000000576e-05, 2.4165999999999077e-05, 2....</msg>
<status status="PASS" starttime="20201030 11:51:50.333" endtime="20201030 11:51:50.338"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:50.342" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201030 11:51:50.341" endtime="20201030 11:51:50.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:50.344" level="INFO">VALUE: [2.5084000000001605e-05, 2.411100000000027e-05, 2.487500000000059e-05, 2.4429999999998897e-05, 2.4665999999999577e-05, 2.44169999999988e-05, 2.3972000000000576e-05, 2.4165999999999077e-05, 2.488900000000016e-05, 2.44169999999988e-05, 2.466699999999905e-05, 2.4361999999999995e-05, 2.463899999999991e-05, 2.486100000000102e-05, 2.44169999999988e-05, 2.438899999999966e-05, 2.395900000000048e-05, 2.465299999999948e-05, 2.4862000000000495e-05, 2.4846999999997982e-05, 2.4401999999999757e-05, 2.440299999999923e-05, 2.44030000000027e-05, 2.463899999999991e-05, 2.3958000000001006e-05, 2.440299999999923e-05, 2.463899999999991e-05, 2.487500000000059e-05, 2.487500000000059e-05, 2.463899999999991e-05, 2.443099999999837e-05, 2.438899999999966e-05, 2.463899999999991e-05, 2.4652000000000007e-05, 2.416700000000202e-05, 2.443099999999837e-05, 2.440299999999923e-05, 2.443100000000184e-05, 2.4458000000001506e-05, 2.466699999999905e-05, 2.445900000000098e-05, 2.4860999999997552e-05, 2.4443999999998467e-05, 2.4652000000000007e-05, 2.4652000000000007e-05, 2.3986000000000146e-05, 2.437500000000009e-05, 2.443099999999837e-05, 2.4415999999999327e-05, 2.4846999999997982e-05]</msg>
<status status="PASS" starttime="20201030 11:51:50.343" endtime="20201030 11:51:50.345"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.338" endtime="20201030 11:51:50.346"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:50.350" endtime="20201030 11:51:50.369"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.348" endtime="20201030 11:51:50.370"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.347" endtime="20201030 11:51:50.370"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.991" endtime="20201030 11:51:50.370"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.991" endtime="20201030 11:51:50.371"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:50.379" endtime="20201030 11:51:50.394"></status>
</kw>
<msg timestamp="20201030 11:51:50.394" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:50.378" endtime="20201030 11:51:50.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:50.397" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:50.396" endtime="20201030 11:51:50.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:50.398" endtime="20201030 11:51:50.400"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.375" endtime="20201030 11:51:50.400"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.373" endtime="20201030 11:51:50.401"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:50.407" endtime="20201030 11:51:50.695"></status>
</kw>
<msg timestamp="20201030 11:51:50.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022178458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022204514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:50.406" endtime="20201030 11:51:50.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:50.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022178458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022204514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:50.700" endtime="20201030 11:51:50.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:50.708" endtime="20201030 11:51:50.710"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.403" endtime="20201030 11:51:50.710"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.401" endtime="20201030 11:51:50.711"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:50.715" level="INFO">${RESULT} = [{'diff': 2.6055999999999996e-05}, {'diff': 2.4929999999999397e-05}, {'diff': 2.5805999999999746e-05}, {'diff': 2.558300000000263e-05}, {'diff': 2.5555000000000022e-05}, {'diff': 2.5805000000000272e-0...</msg>
<status status="PASS" starttime="20201030 11:51:50.711" endtime="20201030 11:51:50.715"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:50.719" level="INFO">${ACCURACY} = {'diff': [2.6055999999999996e-05, 2.4929999999999397e-05, 2.5805999999999746e-05, 2.558300000000263e-05, 2.5555000000000022e-05, 2.5805000000000272e-05, 2.5347999999997956e-05, 2.5792000000000176e-05,...</msg>
<status status="PASS" starttime="20201030 11:51:50.716" endtime="20201030 11:51:50.719"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:50.723" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201030 11:51:50.722" endtime="20201030 11:51:50.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:50.726" level="INFO">VALUE: [2.6055999999999996e-05, 2.4929999999999397e-05, 2.5805999999999746e-05, 2.558300000000263e-05, 2.5555000000000022e-05, 2.5805000000000272e-05, 2.5347999999997956e-05, 2.5792000000000176e-05, 2.5582999999999162e-05, 2.5568999999999592e-05, 2.561100000000177e-05, 2.4902000000000257e-05, 2.5596999999998732e-05, 2.5568999999999592e-05, 2.5568999999999592e-05, 2.5792000000000176e-05, 2.55970000000022e-05, 2.5805999999999746e-05, 2.5819999999999316e-05, 2.5804999999996803e-05, 2.5805999999999746e-05, 2.5555000000000022e-05, 2.5514000000000786e-05, 2.563900000000091e-05, 2.588899999999769e-05, 2.5332999999998912e-05, 2.5792000000000176e-05, 2.493099999999887e-05, 2.5582999999999162e-05, 2.5388000000001187e-05, 2.5805999999999746e-05, 2.5846999999998982e-05, 2.5334000000001855e-05, 2.587500000000159e-05, 2.563900000000091e-05, 2.5346999999998482e-05, 2.5596999999998732e-05, 2.5555999999999496e-05, 2.490299999999973e-05, 2.5819999999999316e-05, 2.5583999999998636e-05, 2.536100000000152e-05, 2.533300000000238e-05, 2.487500000000059e-05, 2.5583999999998636e-05, 2.5346999999998482e-05, 2.5763999999997567e-05, 2.5819999999999316e-05, 2.562500000000134e-05, 2.5832999999999412e-05]</msg>
<status status="PASS" starttime="20201030 11:51:50.725" endtime="20201030 11:51:50.727"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.720" endtime="20201030 11:51:50.727"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:50.731" endtime="20201030 11:51:50.750"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.729" endtime="20201030 11:51:50.751"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.728" endtime="20201030 11:51:50.751"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.371" endtime="20201030 11:51:50.752"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.371" endtime="20201030 11:51:50.752"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:50.760" endtime="20201030 11:51:50.776"></status>
</kw>
<msg timestamp="20201030 11:51:50.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:50.759" endtime="20201030 11:51:50.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:50.779" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:50.778" endtime="20201030 11:51:50.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:50.780" endtime="20201030 11:51:50.782"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.756" endtime="20201030 11:51:50.782"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.754" endtime="20201030 11:51:50.783"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:50.789" endtime="20201030 11:51:51.074"></status>
</kw>
<msg timestamp="20201030 11:51:51.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0227295, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022756472, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:51:50.788" endtime="20201030 11:51:51.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:51.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0227295, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022756472, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:51:51.078" endtime="20201030 11:51:51.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:51.087" endtime="20201030 11:51:51.089"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.785" endtime="20201030 11:51:51.089"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.784" endtime="20201030 11:51:51.090"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:51.094" level="INFO">${RESULT} = [{'diff': 2.6972000000000107e-05}, {'diff': 2.6236000000002396e-05}, {'diff': 2.6735999999999427e-05}, {'diff': 2.6500000000002216e-05}, {'diff': 2.6735999999999427e-05}, {'diff': 2.6070000000003035e-...</msg>
<status status="PASS" starttime="20201030 11:51:51.090" endtime="20201030 11:51:51.094"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:51.098" level="INFO">${ACCURACY} = {'diff': [2.6972000000000107e-05, 2.6236000000002396e-05, 2.6735999999999427e-05, 2.6500000000002216e-05, 2.6735999999999427e-05, 2.6070000000003035e-05, 2.6735999999999427e-05, 2.6750000000002466e-05...</msg>
<status status="PASS" starttime="20201030 11:51:51.095" endtime="20201030 11:51:51.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:51.102" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201030 11:51:51.101" endtime="20201030 11:51:51.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:51.106" level="INFO">VALUE: [2.6972000000000107e-05, 2.6236000000002396e-05, 2.6735999999999427e-05, 2.6500000000002216e-05, 2.6735999999999427e-05, 2.6070000000003035e-05, 2.6735999999999427e-05, 2.6750000000002466e-05, 2.6292000000000676e-05, 2.6041000000000952e-05, 2.6735999999999427e-05, 2.6735999999999427e-05, 2.6570000000000066e-05, 2.6514000000001786e-05, 2.6069000000000092e-05, 2.6721999999999857e-05, 2.6666000000001577e-05, 2.6250000000001966e-05, 2.7013999999998817e-05, 2.6499999999998747e-05, 2.6972000000000107e-05, 2.670899999999976e-05, 2.6763999999998567e-05, 2.6513999999998317e-05, 2.6526999999998413e-05, 2.6443999999996998e-05, 2.6292000000000676e-05, 2.6499999999998747e-05, 2.6041000000000952e-05, 2.6958000000000537e-05, 2.6278000000001106e-05, 2.645900000000298e-05, 2.6721999999999857e-05, 2.6499999999998747e-05, 2.6263999999998067e-05, 2.6750000000002466e-05, 2.6721999999999857e-05, 2.6736000000002896e-05, 2.6749999999998997e-05, 2.6513999999998317e-05, 2.6735999999999427e-05, 2.6556000000000496e-05, 2.6512999999998843e-05, 2.6721999999999857e-05, 2.6570000000000066e-05, 2.6735999999999427e-05, 2.6513999999998317e-05, 2.6499999999998747e-05, 2.6514000000001786e-05, 2.6735999999999427e-05]</msg>
<status status="PASS" starttime="20201030 11:51:51.104" endtime="20201030 11:51:51.107"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.099" endtime="20201030 11:51:51.107"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:51.111" endtime="20201030 11:51:51.131"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.109" endtime="20201030 11:51:51.132"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.108" endtime="20201030 11:51:51.132"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.753" endtime="20201030 11:51:51.132"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.752" endtime="20201030 11:51:51.132"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:51.141" endtime="20201030 11:51:51.156"></status>
</kw>
<msg timestamp="20201030 11:51:51.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:51.139" endtime="20201030 11:51:51.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:51.159" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:51.158" endtime="20201030 11:51:51.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:51.160" endtime="20201030 11:51:51.162"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.137" endtime="20201030 11:51:51.163"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.135" endtime="20201030 11:51:51.163"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:51.169" endtime="20201030 11:51:51.455"></status>
</kw>
<msg timestamp="20201030 11:51:51.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022844722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022873125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:51.168" endtime="20201030 11:51:51.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:51.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022844722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022873125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:51.459" endtime="20201030 11:51:51.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:51.468" endtime="20201030 11:51:51.469"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.165" endtime="20201030 11:51:51.470"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.164" endtime="20201030 11:51:51.470"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:51.474" level="INFO">${RESULT} = [{'diff': 2.8402999999999762e-05}, {'diff': 2.743100000000137e-05}, {'diff': 2.7902999999999262e-05}, {'diff': 2.743100000000137e-05}, {'diff': 2.7416000000002327e-05}, {'diff': 2.744499999999747e-05}...</msg>
<status status="PASS" starttime="20201030 11:51:51.471" endtime="20201030 11:51:51.475"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:51.479" level="INFO">${ACCURACY} = {'diff': [2.8402999999999762e-05, 2.743100000000137e-05, 2.7902999999999262e-05, 2.743100000000137e-05, 2.7416000000002327e-05, 2.744499999999747e-05, 2.743100000000137e-05, 2.7429999999998428e-05, 2....</msg>
<status status="PASS" starttime="20201030 11:51:51.475" endtime="20201030 11:51:51.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:51.484" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201030 11:51:51.483" endtime="20201030 11:51:51.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:51.486" level="INFO">VALUE: [2.8402999999999762e-05, 2.743100000000137e-05, 2.7902999999999262e-05, 2.743100000000137e-05, 2.7416000000002327e-05, 2.744499999999747e-05, 2.743100000000137e-05, 2.7429999999998428e-05, 2.743100000000137e-05, 2.74170000000018e-05, 2.74309999999979e-05, 2.740299999999876e-05, 2.7374999999999622e-05, 2.7902999999999262e-05, 2.74170000000018e-05, 2.766700000000205e-05, 2.74309999999979e-05, 2.7652999999999012e-05, 2.7902999999999262e-05, 2.7638999999999442e-05, 2.7651999999999538e-05, 2.7430000000001897e-05, 2.7624999999999872e-05, 2.7638999999999442e-05, 2.7916000000002827e-05, 2.7665999999999108e-05, 2.79170000000023e-05, 2.7679999999998678e-05, 2.7665999999999108e-05, 2.7665999999999108e-05, 2.74309999999979e-05, 2.7651999999999538e-05, 2.768100000000162e-05, 2.74309999999979e-05, 2.7651999999999538e-05, 2.719500000000069e-05, 2.7638999999999442e-05, 2.741699999999833e-05, 2.6972000000000107e-05, 2.7652999999999012e-05, 2.7902999999999262e-05, 2.7652999999999012e-05, 2.7902999999999262e-05, 2.7597000000000732e-05, 2.7901999999999788e-05, 2.7651999999999538e-05, 2.744500000000094e-05, 2.7861000000000552e-05, 2.7652999999999012e-05, 2.7429999999998428e-05]</msg>
<status status="PASS" starttime="20201030 11:51:51.485" endtime="20201030 11:51:51.487"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.480" endtime="20201030 11:51:51.488"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:51.491" endtime="20201030 11:51:51.511"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.490" endtime="20201030 11:51:51.511"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.489" endtime="20201030 11:51:51.512"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.133" endtime="20201030 11:51:51.512"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.133" endtime="20201030 11:51:51.512"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:51.521" endtime="20201030 11:51:51.537"></status>
</kw>
<msg timestamp="20201030 11:51:51.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:51.519" endtime="20201030 11:51:51.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:51.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:51.539" endtime="20201030 11:51:51.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:51.541" endtime="20201030 11:51:51.543"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.517" endtime="20201030 11:51:51.543"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.515" endtime="20201030 11:51:51.544"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:51.550" endtime="20201030 11:51:51.838"></status>
</kw>
<msg timestamp="20201030 11:51:51.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022187181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022216958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:51.549" endtime="20201030 11:51:51.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:51.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022187181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022216958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:51.843" endtime="20201030 11:51:51.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:51.851" endtime="20201030 11:51:51.853"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.546" endtime="20201030 11:51:51.853"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.544" endtime="20201030 11:51:51.854"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:51.858" level="INFO">${RESULT} = [{'diff': 2.9776999999998194e-05}, {'diff': 2.8138999999999942e-05}, {'diff': 2.8819999999998847e-05}, {'diff': 2.8818999999999373e-05}, {'diff': 2.8584000000001636e-05}, {'diff': 2.8582999999998693e-...</msg>
<status status="PASS" starttime="20201030 11:51:51.855" endtime="20201030 11:51:51.858"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:51.862" level="INFO">${ACCURACY} = {'diff': [2.9776999999998194e-05, 2.8138999999999942e-05, 2.8819999999998847e-05, 2.8818999999999373e-05, 2.8584000000001636e-05, 2.8582999999998693e-05, 2.8583000000002162e-05, 2.8596999999998263e-05...</msg>
<status status="PASS" starttime="20201030 11:51:51.859" endtime="20201030 11:51:51.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:51.867" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201030 11:51:51.866" endtime="20201030 11:51:51.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:51.869" level="INFO">VALUE: [2.9776999999998194e-05, 2.8138999999999942e-05, 2.8819999999998847e-05, 2.8818999999999373e-05, 2.8584000000001636e-05, 2.8582999999998693e-05, 2.8583000000002162e-05, 2.8596999999998263e-05, 2.8375000000000622e-05, 2.8804999999999803e-05, 2.8833999999998416e-05, 2.8819999999998847e-05, 2.8820000000002316e-05, 2.8833000000002412e-05, 2.8791999999999707e-05, 2.8596999999998263e-05, 2.8584000000001636e-05, 2.7888999999999692e-05, 2.8346999999998013e-05, 2.7902999999999262e-05, 2.8361000000001052e-05, 2.8818999999999373e-05, 2.841699999999933e-05, 2.8735999999997958e-05, 2.8583999999998166e-05, 2.8818999999999373e-05, 2.8568999999999123e-05, 2.8818999999999373e-05, 2.8804999999999803e-05, 2.8818999999999373e-05, 2.8556000000002496e-05, 2.8611000000001302e-05, 2.8805999999999277e-05, 2.8598000000001206e-05, 2.8611000000001302e-05, 2.8639000000000442e-05, 2.7888999999999692e-05, 2.7888999999999692e-05, 2.8806000000002746e-05, 2.8402999999999762e-05, 2.8598000000001206e-05, 2.8596999999998263e-05, 2.8569000000002592e-05, 2.8832999999998943e-05, 2.8764000000000567e-05, 2.8569999999998597e-05, 2.8514000000000317e-05, 2.8638999999996972e-05, 2.8568999999999123e-05, 2.8583000000002162e-05]</msg>
<status status="PASS" starttime="20201030 11:51:51.868" endtime="20201030 11:51:51.870"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.863" endtime="20201030 11:51:51.870"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:51.874" endtime="20201030 11:51:51.894"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.873" endtime="20201030 11:51:51.894"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.871" endtime="20201030 11:51:51.894"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.513" endtime="20201030 11:51:51.895"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.512" endtime="20201030 11:51:51.895"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:51.904" endtime="20201030 11:51:51.922"></status>
</kw>
<msg timestamp="20201030 11:51:51.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:51.902" endtime="20201030 11:51:51.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:51.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:51.924" endtime="20201030 11:51:51.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:51.927" endtime="20201030 11:51:51.928"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.899" endtime="20201030 11:51:51.929"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.897" endtime="20201030 11:51:51.929"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:51.936" endtime="20201030 11:51:52.223"></status>
</kw>
<msg timestamp="20201030 11:51:52.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024967042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024997458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:51.935" endtime="20201030 11:51:52.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:52.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024967042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024997458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:52.227" endtime="20201030 11:51:52.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:52.236" endtime="20201030 11:51:52.237"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.932" endtime="20201030 11:51:52.238"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.930" endtime="20201030 11:51:52.238"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:52.242" level="INFO">${RESULT} = [{'diff': 3.0416000000001858e-05}, {'diff': 2.9014000000000817e-05}, {'diff': 2.9764000000001567e-05}, {'diff': 2.9749999999998528e-05}, {'diff': 2.973699999999843e-05}, {'diff': 2.9735999999998958e-0...</msg>
<status status="PASS" starttime="20201030 11:51:52.239" endtime="20201030 11:51:52.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:52.246" level="INFO">${ACCURACY} = {'diff': [3.0416000000001858e-05, 2.9014000000000817e-05, 2.9764000000001567e-05, 2.9749999999998528e-05, 2.973699999999843e-05, 2.9735999999998958e-05, 2.9500000000001747e-05, 2.9055999999999527e-05,...</msg>
<status status="PASS" starttime="20201030 11:51:52.243" endtime="20201030 11:51:52.247"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:52.251" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201030 11:51:52.250" endtime="20201030 11:51:52.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:52.253" level="INFO">VALUE: [3.0416000000001858e-05, 2.9014000000000817e-05, 2.9764000000001567e-05, 2.9749999999998528e-05, 2.973699999999843e-05, 2.9735999999998958e-05, 2.9500000000001747e-05, 2.9055999999999527e-05, 2.9513000000001843e-05, 2.9485999999998708e-05, 2.9514000000001317e-05, 2.9500000000001747e-05, 2.9749999999998528e-05, 2.9721999999999388e-05, 2.9736000000002427e-05, 2.9750000000001997e-05, 2.9500000000001747e-05, 2.994499999999997e-05, 2.9500000000001747e-05, 2.9486000000002177e-05, 2.9500000000001747e-05, 2.948700000000165e-05, 2.9028000000000387e-05, 2.9750000000001997e-05, 2.8804999999999803e-05, 2.9514000000001317e-05, 2.9526999999997944e-05, 2.9528000000000887e-05, 2.9749999999998528e-05, 2.9555000000000553e-05, 2.9541000000000983e-05, 2.9985999999999208e-05, 2.9749999999998528e-05, 2.9750000000001997e-05, 2.9749999999998528e-05, 2.9235999999998458e-05, 2.9971999999999638e-05, 2.9499999999998278e-05, 2.9512999999998374e-05, 2.947299999999861e-05, 2.9514000000001317e-05, 2.9528000000000887e-05, 2.9514000000001317e-05, 2.9528000000000887e-05, 2.9778000000001137e-05, 2.9514000000001317e-05, 2.9264000000001067e-05, 2.9958000000000068e-05, 2.9749999999998528e-05, 2.9528000000000887e-05]</msg>
<status status="PASS" starttime="20201030 11:51:52.252" endtime="20201030 11:51:52.262"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.247" endtime="20201030 11:51:52.262"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:52.266" endtime="20201030 11:51:52.285"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.264" endtime="20201030 11:51:52.286"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.263" endtime="20201030 11:51:52.286"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.896" endtime="20201030 11:51:52.286"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.895" endtime="20201030 11:51:52.287"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:52.295" endtime="20201030 11:51:52.311"></status>
</kw>
<msg timestamp="20201030 11:51:52.311" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:52.294" endtime="20201030 11:51:52.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:52.314" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:52.312" endtime="20201030 11:51:52.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:52.315" endtime="20201030 11:51:52.317"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.291" endtime="20201030 11:51:52.317"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.289" endtime="20201030 11:51:52.318"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:52.324" endtime="20201030 11:51:52.611"></status>
</kw>
<msg timestamp="20201030 11:51:52.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022144306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022175403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:52.322" endtime="20201030 11:51:52.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:52.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022144306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022175403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:52.616" endtime="20201030 11:51:52.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:52.624" endtime="20201030 11:51:52.626"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.320" endtime="20201030 11:51:52.626"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.318" endtime="20201030 11:51:52.627"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:52.631" level="INFO">${RESULT} = [{'diff': 3.109700000000076e-05}, {'diff': 2.997299999999911e-05}, {'diff': 3.091700000000183e-05}, {'diff': 3.0431000000000902e-05}, {'diff': 3.090299999999879e-05}, {'diff': 3.069399999999778e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:51:52.627" endtime="20201030 11:51:52.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:52.636" level="INFO">${ACCURACY} = {'diff': [3.109700000000076e-05, 2.997299999999911e-05, 3.091700000000183e-05, 3.0431000000000902e-05, 3.090299999999879e-05, 3.069399999999778e-05, 3.066599999999864e-05, 3.0499999999999278e-05, 3.04...</msg>
<status status="PASS" starttime="20201030 11:51:52.632" endtime="20201030 11:51:52.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:52.640" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201030 11:51:52.639" endtime="20201030 11:51:52.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:52.642" level="INFO">VALUE: [3.109700000000076e-05, 2.997299999999911e-05, 3.091700000000183e-05, 3.0431000000000902e-05, 3.090299999999879e-05, 3.069399999999778e-05, 3.066599999999864e-05, 3.0499999999999278e-05, 3.0403000000001762e-05, 3.088899999999922e-05, 3.044500000000047e-05, 3.065299999999854e-05, 3.065299999999854e-05, 3.0485999999999708e-05, 3.066700000000158e-05, 3.066599999999864e-05, 3.0444000000000998e-05, 3.068099999999768e-05, 3.088899999999922e-05, 3.0431000000000902e-05, 3.090300000000226e-05, 3.0208000000000318e-05, 3.0403000000001762e-05, 2.998700000000215e-05, 3.066600000000211e-05, 3.0485999999999708e-05, 3.068099999999768e-05, 3.0416999999997862e-05, 3.0444000000000998e-05, 3.090300000000226e-05, 3.0221999999999888e-05, 3.095900000000054e-05, 3.06249999999994e-05, 3.086100000000008e-05, 3.045900000000004e-05, 3.065300000000201e-05, 3.044500000000047e-05, 2.995899999999954e-05, 3.088899999999922e-05, 3.0431000000000902e-05, 3.068100000000115e-05, 3.019399999999728e-05, 3.068000000000168e-05, 3.066699999999811e-05, 2.9985999999999208e-05, 3.068000000000168e-05, 3.0430999999997432e-05, 3.066699999999811e-05, 3.068100000000115e-05, 3.04579999999971e-05]</msg>
<status status="PASS" starttime="20201030 11:51:52.641" endtime="20201030 11:51:52.643"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.636" endtime="20201030 11:51:52.644"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:52.648" endtime="20201030 11:51:52.667"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.646" endtime="20201030 11:51:52.667"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.645" endtime="20201030 11:51:52.668"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.288" endtime="20201030 11:51:52.668"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.287" endtime="20201030 11:51:52.668"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:52.677" endtime="20201030 11:51:52.692"></status>
</kw>
<msg timestamp="20201030 11:51:52.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:52.675" endtime="20201030 11:51:52.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:52.695" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:52.693" endtime="20201030 11:51:52.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:52.696" endtime="20201030 11:51:52.698"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.673" endtime="20201030 11:51:52.698"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.671" endtime="20201030 11:51:52.699"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:52.705" endtime="20201030 11:51:52.993"></status>
</kw>
<msg timestamp="20201030 11:51:52.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022109833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022142111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:52.704" endtime="20201030 11:51:52.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:53.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022109833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022142111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:52.997" endtime="20201030 11:51:53.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:53.006" endtime="20201030 11:51:53.007"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.701" endtime="20201030 11:51:53.008"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.699" endtime="20201030 11:51:53.008"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:53.012" level="INFO">${RESULT} = [{'diff': 3.227800000000017e-05}, {'diff': 3.113899999999947e-05}, {'diff': 3.142999999999896e-05}, {'diff': 3.090299999999879e-05}, {'diff': 3.180599999999881e-05}, {'diff': 3.143099999999843e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:53.009" endtime="20201030 11:51:53.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:53.016" level="INFO">${ACCURACY} = {'diff': [3.227800000000017e-05, 3.113899999999947e-05, 3.142999999999896e-05, 3.090299999999879e-05, 3.180599999999881e-05, 3.143099999999843e-05, 3.158400000000117e-05, 3.161100000000083e-05, 3.1638...</msg>
<status status="PASS" starttime="20201030 11:51:53.013" endtime="20201030 11:51:53.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:53.021" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201030 11:51:53.020" endtime="20201030 11:51:53.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:53.023" level="INFO">VALUE: [3.227800000000017e-05, 3.113899999999947e-05, 3.142999999999896e-05, 3.090299999999879e-05, 3.180599999999881e-05, 3.143099999999843e-05, 3.158400000000117e-05, 3.161100000000083e-05, 3.163899999999997e-05, 3.161100000000083e-05, 3.187500000000065e-05, 3.181900000000237e-05, 3.1818999999998904e-05, 3.1596999999997794e-05, 3.159700000000126e-05, 3.1596999999997794e-05, 3.161100000000083e-05, 3.159799999999727e-05, 3.1596999999997794e-05, 3.138899999999972e-05, 3.136100000000058e-05, 3.159700000000126e-05, 3.158300000000169e-05, 3.15839999999977e-05, 3.137500000000015e-05, 3.158300000000169e-05, 3.183400000000142e-05, 3.183300000000194e-05, 3.136100000000058e-05, 3.159700000000126e-05, 3.166599999999964e-05, 3.137500000000015e-05, 3.182000000000185e-05, 3.134700000000101e-05, 3.15700000000016e-05, 3.156900000000212e-05, 3.1582999999998224e-05, 3.161100000000083e-05, 3.181900000000237e-05, 3.136100000000058e-05, 3.1610999999997363e-05, 3.1596999999997794e-05, 3.15700000000016e-05, 3.163899999999997e-05, 3.087499999999965e-05, 3.091699999999836e-05, 3.158300000000169e-05, 3.141700000000233e-05, 3.179200000000271e-05, 3.161100000000083e-05]</msg>
<status status="PASS" starttime="20201030 11:51:53.022" endtime="20201030 11:51:53.024"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.017" endtime="20201030 11:51:53.024"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:53.028" endtime="20201030 11:51:53.048"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.027" endtime="20201030 11:51:53.048"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.026" endtime="20201030 11:51:53.048"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.669" endtime="20201030 11:51:53.049"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.669" endtime="20201030 11:51:53.049"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:53.058" endtime="20201030 11:51:53.074"></status>
</kw>
<msg timestamp="20201030 11:51:53.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:53.056" endtime="20201030 11:51:53.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:53.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:53.076" endtime="20201030 11:51:53.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:53.078" endtime="20201030 11:51:53.080"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.054" endtime="20201030 11:51:53.080"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.052" endtime="20201030 11:51:53.081"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:53.087" endtime="20201030 11:51:53.374"></status>
</kw>
<msg timestamp="20201030 11:51:53.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023142125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023183375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:53.086" endtime="20201030 11:51:53.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:53.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023142125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023183375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:53.378" endtime="20201030 11:51:53.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:53.386" endtime="20201030 11:51:53.388"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.083" endtime="20201030 11:51:53.389"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.081" endtime="20201030 11:51:53.389"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:53.393" level="INFO">${RESULT} = [{'diff': 4.124999999999962e-05}, {'diff': 4.123600000000005e-05}, {'diff': 4.0945000000000564e-05}, {'diff': 4.0875000000002715e-05}, {'diff': 4.172199999999751e-05}, {'diff': 4.176399999999969e-05},...</msg>
<status status="PASS" starttime="20201030 11:51:53.390" endtime="20201030 11:51:53.393"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:53.397" level="INFO">${ACCURACY} = {'diff': [4.124999999999962e-05, 4.123600000000005e-05, 4.0945000000000564e-05, 4.0875000000002715e-05, 4.172199999999751e-05, 4.176399999999969e-05, 4.097200000000023e-05, 4.1110999999999925e-05, 4.1...</msg>
<status status="PASS" starttime="20201030 11:51:53.394" endtime="20201030 11:51:53.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:53.402" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201030 11:51:53.401" endtime="20201030 11:51:53.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:53.404" level="INFO">VALUE: [4.124999999999962e-05, 4.123600000000005e-05, 4.0945000000000564e-05, 4.0875000000002715e-05, 4.172199999999751e-05, 4.176399999999969e-05, 4.097200000000023e-05, 4.1110999999999925e-05, 4.1083000000000786e-05, 4.100000000000284e-05, 4.1110999999999925e-05, 4.1026999999999036e-05, 4.0874999999999245e-05, 4.0874999999999245e-05, 4.102800000000198e-05, 4.090199999999891e-05, 4.0972999999999704e-05, 4.102799999999851e-05, 4.0959000000000134e-05, 4.099999999999937e-05, 4.1110999999999925e-05, 4.0959000000000134e-05, 4.0804999999997926e-05, 4.181999999999797e-05, 4.173600000000055e-05, 4.173600000000055e-05, 4.0847000000000105e-05, 4.1139000000002535e-05, 4.0902999999998385e-05, 4.092999999999805e-05, 4.090200000000238e-05, 4.1124999999999495e-05, 4.0902999999998385e-05, 4.1069000000001216e-05, 4.152799999999901e-05, 4.152799999999901e-05, 4.176399999999969e-05, 4.122200000000048e-05, 4.079199999999783e-05, 4.104199999999808e-05, 4.1680999999998275e-05, 4.0931000000000994e-05, 4.1139000000002535e-05, 4.0902999999998385e-05, 4.1167000000001674e-05, 4.177799999999926e-05, 4.09859999999998e-05, 4.175000000000012e-05, 4.122200000000048e-05, 4.083400000000001e-05]</msg>
<status status="PASS" starttime="20201030 11:51:53.403" endtime="20201030 11:51:53.406"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.398" endtime="20201030 11:51:53.406"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:53.410" endtime="20201030 11:51:53.429"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.409" endtime="20201030 11:51:53.430"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.407" endtime="20201030 11:51:53.430"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.050" endtime="20201030 11:51:53.431"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.049" endtime="20201030 11:51:53.431"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:53.439" endtime="20201030 11:51:53.456"></status>
</kw>
<msg timestamp="20201030 11:51:53.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:53.438" endtime="20201030 11:51:53.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:53.459" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:53.457" endtime="20201030 11:51:53.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:53.460" endtime="20201030 11:51:53.462"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.435" endtime="20201030 11:51:53.462"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.433" endtime="20201030 11:51:53.463"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:53.469" endtime="20201030 11:51:53.753"></status>
</kw>
<msg timestamp="20201030 11:51:53.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021775417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021818167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:53.468" endtime="20201030 11:51:53.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:53.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021775417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021818167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:53.758" endtime="20201030 11:51:53.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:53.766" endtime="20201030 11:51:53.768"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.465" endtime="20201030 11:51:53.768"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.463" endtime="20201030 11:51:53.769"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:53.773" level="INFO">${RESULT} = [{'diff': 4.275000000000112e-05}, {'diff': 4.2152999999999635e-05}, {'diff': 4.219399999999887e-05}, {'diff': 4.2054999999999176e-05}, {'diff': 4.180600000000187e-05}, {'diff': 4.2097000000001356e-05}...</msg>
<status status="PASS" starttime="20201030 11:51:53.770" endtime="20201030 11:51:53.773"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:53.778" level="INFO">${ACCURACY} = {'diff': [4.275000000000112e-05, 4.2152999999999635e-05, 4.219399999999887e-05, 4.2054999999999176e-05, 4.180600000000187e-05, 4.2097000000001356e-05, 4.223599999999758e-05, 4.2596999999998386e-05, 4....</msg>
<status status="PASS" starttime="20201030 11:51:53.774" endtime="20201030 11:51:53.778"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:53.782" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201030 11:51:53.781" endtime="20201030 11:51:53.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:53.785" level="INFO">VALUE: [4.275000000000112e-05, 4.2152999999999635e-05, 4.219399999999887e-05, 4.2054999999999176e-05, 4.180600000000187e-05, 4.2097000000001356e-05, 4.223599999999758e-05, 4.2596999999998386e-05, 4.215200000000016e-05, 4.1790999999999356e-05, 4.1833000000001536e-05, 4.216599999999973e-05, 4.21799999999993e-05, 4.1805000000002396e-05, 4.2054999999999176e-05, 4.1818999999998496e-05, 4.1888999999999815e-05, 4.197200000000123e-05, 4.195799999999819e-05, 4.276400000000069e-05, 4.2195000000001814e-05, 4.201399999999994e-05, 4.22920000000028e-05, 4.223600000000105e-05, 4.1847000000001106e-05, 4.1847000000001106e-05, 4.204200000000255e-05, 4.2125000000000495e-05, 4.2152999999999635e-05, 4.277700000000079e-05, 4.270800000000241e-05, 4.2709000000001884e-05, 4.205599999999865e-05, 4.1902999999999385e-05, 4.19860000000008e-05, 4.183400000000101e-05, 4.1888999999999815e-05, 4.17920000000023e-05, 4.2709000000001884e-05, 4.209800000000083e-05, 4.202799999999951e-05, 4.205600000000212e-05, 4.275000000000112e-05, 4.2096999999997886e-05, 4.188799999999687e-05, 4.1861000000000675e-05, 4.173600000000055e-05, 4.254199999999958e-05, 4.215200000000016e-05, 4.21799999999993e-05]</msg>
<status status="PASS" starttime="20201030 11:51:53.783" endtime="20201030 11:51:53.786"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.779" endtime="20201030 11:51:53.786"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:53.790" endtime="20201030 11:51:53.809"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.788" endtime="20201030 11:51:53.810"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.787" endtime="20201030 11:51:53.810"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.432" endtime="20201030 11:51:53.810"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.431" endtime="20201030 11:51:53.810"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:53.819" endtime="20201030 11:51:53.835"></status>
</kw>
<msg timestamp="20201030 11:51:53.836" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:53.818" endtime="20201030 11:51:53.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:53.838" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:53.837" endtime="20201030 11:51:53.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:53.839" endtime="20201030 11:51:53.841"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.815" endtime="20201030 11:51:53.841"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.813" endtime="20201030 11:51:53.842"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:53.848" endtime="20201030 11:51:54.136"></status>
</kw>
<msg timestamp="20201030 11:51:54.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022224792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022268486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:53.847" endtime="20201030 11:51:54.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:54.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022224792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022268486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:54.140" endtime="20201030 11:51:54.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:54.149" endtime="20201030 11:51:54.150"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.844" endtime="20201030 11:51:54.151"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.842" endtime="20201030 11:51:54.151"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:54.155" level="INFO">${RESULT} = [{'diff': 4.369400000000037e-05}, {'diff': 4.3125000000001495e-05}, {'diff': 4.2916999999999955e-05}, {'diff': 4.369400000000037e-05}, {'diff': 4.2889000000000815e-05}, {'diff': 4.319399999999987e-05}...</msg>
<status status="PASS" starttime="20201030 11:51:54.152" endtime="20201030 11:51:54.156"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:54.160" level="INFO">${ACCURACY} = {'diff': [4.369400000000037e-05, 4.3125000000001495e-05, 4.2916999999999955e-05, 4.369400000000037e-05, 4.2889000000000815e-05, 4.319399999999987e-05, 4.2818999999999496e-05, 4.279199999999983e-05, 4....</msg>
<status status="PASS" starttime="20201030 11:51:54.156" endtime="20201030 11:51:54.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:54.164" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201030 11:51:54.163" endtime="20201030 11:51:54.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:54.167" level="INFO">VALUE: [4.369400000000037e-05, 4.3125000000001495e-05, 4.2916999999999955e-05, 4.369400000000037e-05, 4.2889000000000815e-05, 4.319399999999987e-05, 4.2818999999999496e-05, 4.279199999999983e-05, 4.2832999999999066e-05, 4.305599999999965e-05, 4.377699999999832e-05, 4.325000000000162e-05, 4.2930999999999525e-05, 4.2861000000001676e-05, 4.3153000000000635e-05, 4.3318999999999996e-05, 4.2972999999998235e-05, 4.3694999999999845e-05, 4.300000000000137e-05, 4.277800000000026e-05, 4.2944999999999095e-05, 4.306999999999922e-05, 4.3068999999999746e-05, 4.2804999999999926e-05, 4.374999999999865e-05, 4.302700000000104e-05, 4.3180999999999775e-05, 4.377700000000179e-05, 4.326300000000172e-05, 4.277700000000079e-05, 4.290200000000091e-05, 4.3068999999999746e-05, 4.3541000000001107e-05, 4.277700000000079e-05, 4.272199999999851e-05, 4.2860999999998206e-05, 4.374999999999865e-05, 4.322199999999901e-05, 4.273600000000155e-05, 4.319399999999987e-05, 4.28059999999994e-05, 4.320799999999944e-05, 4.319399999999987e-05, 4.3152999999997166e-05, 4.29860000000018e-05, 4.326399999999772e-05, 4.3041000000000607e-05, 4.316600000000073e-05, 4.2916999999999955e-05, 4.3694999999999845e-05]</msg>
<status status="PASS" starttime="20201030 11:51:54.165" endtime="20201030 11:51:54.167"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.160" endtime="20201030 11:51:54.168"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:54.172" endtime="20201030 11:51:54.191"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.170" endtime="20201030 11:51:54.192"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.169" endtime="20201030 11:51:54.192"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.811" endtime="20201030 11:51:54.193"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.811" endtime="20201030 11:51:54.193"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:54.203" endtime="20201030 11:51:54.221"></status>
</kw>
<msg timestamp="20201030 11:51:54.221" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:54.201" endtime="20201030 11:51:54.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:54.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:54.222" endtime="20201030 11:51:54.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:54.225" endtime="20201030 11:51:54.227"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.198" endtime="20201030 11:51:54.228"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.196" endtime="20201030 11:51:54.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:54.235" endtime="20201030 11:51:54.521"></status>
</kw>
<msg timestamp="20201030 11:51:54.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025195403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02524, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 11:51:54.233" endtime="20201030 11:51:54.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:54.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025195403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02524, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 11:51:54.525" endtime="20201030 11:51:54.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:54.534" endtime="20201030 11:51:54.535"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.231" endtime="20201030 11:51:54.536"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.229" endtime="20201030 11:51:54.536"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:54.540" level="INFO">${RESULT} = [{'diff': 4.459699999999692e-05}, {'diff': 4.4638999999999096e-05}, {'diff': 4.379200000000083e-05}, {'diff': 4.407000000000022e-05}, {'diff': 4.379199999999736e-05}, {'diff': 4.398599999999933e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:51:54.537" endtime="20201030 11:51:54.540"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:54.544" level="INFO">${ACCURACY} = {'diff': [4.459699999999692e-05, 4.4638999999999096e-05, 4.379200000000083e-05, 4.407000000000022e-05, 4.379199999999736e-05, 4.398599999999933e-05, 4.3833000000000066e-05, 4.397200000000323e-05, 4.39...</msg>
<status status="PASS" starttime="20201030 11:51:54.541" endtime="20201030 11:51:54.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:54.549" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201030 11:51:54.548" endtime="20201030 11:51:54.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:54.551" level="INFO">VALUE: [4.459699999999692e-05, 4.4638999999999096e-05, 4.379200000000083e-05, 4.407000000000022e-05, 4.379199999999736e-05, 4.398599999999933e-05, 4.3833000000000066e-05, 4.397200000000323e-05, 4.3916999999997486e-05, 4.3903000000001385e-05, 4.401400000000194e-05, 4.3861000000002676e-05, 4.426399999999872e-05, 4.473600000000008e-05, 4.4181000000000775e-05, 4.386199999999868e-05, 4.426400000000219e-05, 4.4681000000001275e-05, 4.386199999999868e-05, 4.39999999999989e-05, 4.391600000000148e-05, 4.4124999999999026e-05, 4.380499999999746e-05, 4.390199999999844e-05, 4.393000000000105e-05, 4.377700000000179e-05, 4.466599999999876e-05, 4.469400000000137e-05, 4.377800000000126e-05, 4.473600000000008e-05, 4.425000000000262e-05, 4.405499999999771e-05, 4.472200000000051e-05, 4.3819000000000496e-05, 4.405499999999771e-05, 4.395800000000019e-05, 4.405599999999718e-05, 4.377800000000126e-05, 4.3917000000000955e-05, 4.38060000000004e-05, 4.407000000000022e-05, 4.4124999999999026e-05, 4.376400000000169e-05, 4.427700000000229e-05, 4.3902999999997916e-05, 4.422200000000001e-05, 4.422200000000001e-05, 4.39999999999989e-05, 4.4722999999999985e-05, 4.426400000000219e-05]</msg>
<status status="PASS" starttime="20201030 11:51:54.550" endtime="20201030 11:51:54.553"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.545" endtime="20201030 11:51:54.554"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:54.557" endtime="20201030 11:51:54.577"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.556" endtime="20201030 11:51:54.577"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.555" endtime="20201030 11:51:54.578"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.194" endtime="20201030 11:51:54.578"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.193" endtime="20201030 11:51:54.578"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:54.587" endtime="20201030 11:51:54.604"></status>
</kw>
<msg timestamp="20201030 11:51:54.604" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:54.586" endtime="20201030 11:51:54.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:54.607" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:54.605" endtime="20201030 11:51:54.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:54.608" endtime="20201030 11:51:54.610"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.583" endtime="20201030 11:51:54.610"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.581" endtime="20201030 11:51:54.611"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:54.617" endtime="20201030 11:51:54.903"></status>
</kw>
<msg timestamp="20201030 11:51:54.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022860875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022906514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:54.615" endtime="20201030 11:51:54.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:54.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022860875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022906514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:54.907" endtime="20201030 11:51:54.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:54.916" endtime="20201030 11:51:54.917"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.613" endtime="20201030 11:51:54.918"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.611" endtime="20201030 11:51:54.918"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:54.922" level="INFO">${RESULT} = [{'diff': 4.5639000000000096e-05}, {'diff': 4.4888999999999346e-05}, {'diff': 4.4847000000000636e-05}, {'diff': 4.479200000000183e-05}, {'diff': 4.501399999999947e-05}, {'diff': 4.4945000000001095e-05...</msg>
<status status="PASS" starttime="20201030 11:51:54.919" endtime="20201030 11:51:54.922"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:54.927" level="INFO">${ACCURACY} = {'diff': [4.5639000000000096e-05, 4.4888999999999346e-05, 4.4847000000000636e-05, 4.479200000000183e-05, 4.501399999999947e-05, 4.4945000000001095e-05, 4.5180999999998306e-05, 4.5167000000002205e-05, ...</msg>
<status status="PASS" starttime="20201030 11:51:54.923" endtime="20201030 11:51:54.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:54.932" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201030 11:51:54.931" endtime="20201030 11:51:54.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:54.934" level="INFO">VALUE: [4.5639000000000096e-05, 4.4888999999999346e-05, 4.4847000000000636e-05, 4.479200000000183e-05, 4.501399999999947e-05, 4.4945000000001095e-05, 4.5180999999998306e-05, 4.5167000000002205e-05, 4.4861000000000206e-05, 4.4889000000002816e-05, 4.5695000000001845e-05, 4.4973000000000235e-05, 4.5722999999997516e-05, 4.479200000000183e-05, 4.483400000000054e-05, 4.4986999999999805e-05, 4.506899999999828e-05, 4.570799999999847e-05, 4.522200000000101e-05, 4.477699999999932e-05, 4.49999999999999e-05, 4.526399999999972e-05, 4.570799999999847e-05, 4.519400000000187e-05, 4.498599999999686e-05, 4.479099999999889e-05, 4.517999999999883e-05, 4.480500000000193e-05, 4.49999999999999e-05, 4.525000000000015e-05, 4.479199999999836e-05, 4.5208999999997446e-05, 4.5138999999999596e-05, 4.501399999999947e-05, 4.5597000000001386e-05, 4.575000000000065e-05, 4.477799999999879e-05, 4.5139000000003066e-05, 4.49999999999999e-05, 4.509699999999742e-05, 4.4917000000001955e-05, 4.504199999999861e-05, 4.505599999999818e-05, 4.504100000000261e-05, 4.5709000000001415e-05, 4.501399999999947e-05, 4.5013e-05, 4.504199999999861e-05, 4.4958999999997196e-05, 4.515199999999969e-05]</msg>
<status status="PASS" starttime="20201030 11:51:54.933" endtime="20201030 11:51:54.935"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.928" endtime="20201030 11:51:54.936"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:54.939" endtime="20201030 11:51:54.959"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.938" endtime="20201030 11:51:54.959"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.937" endtime="20201030 11:51:54.960"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.579" endtime="20201030 11:51:54.960"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.578" endtime="20201030 11:51:54.960"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:54.970" endtime="20201030 11:51:54.986"></status>
</kw>
<msg timestamp="20201030 11:51:54.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:54.968" endtime="20201030 11:51:54.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:54.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:54.988" endtime="20201030 11:51:54.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:54.990" endtime="20201030 11:51:54.992"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.965" endtime="20201030 11:51:54.992"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.963" endtime="20201030 11:51:54.993"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:54.999" endtime="20201030 11:51:55.286"></status>
</kw>
<msg timestamp="20201030 11:51:55.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023327167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023372958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:54.998" endtime="20201030 11:51:55.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:55.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023327167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023372958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:55.291" endtime="20201030 11:51:55.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:55.299" endtime="20201030 11:51:55.301"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.995" endtime="20201030 11:51:55.301"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.994" endtime="20201030 11:51:55.302"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:55.306" level="INFO">${RESULT} = [{'diff': 4.579099999999989e-05}, {'diff': 4.6139000000000596e-05}, {'diff': 4.5875000000000776e-05}, {'diff': 4.598600000000133e-05}, {'diff': 4.604199999999961e-05}, {'diff': 4.577799999999979e-05},...</msg>
<status status="PASS" starttime="20201030 11:51:55.302" endtime="20201030 11:51:55.306"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:55.310" level="INFO">${ACCURACY} = {'diff': [4.579099999999989e-05, 4.6139000000000596e-05, 4.5875000000000776e-05, 4.598600000000133e-05, 4.604199999999961e-05, 4.577799999999979e-05, 4.622199999999854e-05, 4.597200000000176e-05, 4.60...</msg>
<status status="PASS" starttime="20201030 11:51:55.307" endtime="20201030 11:51:55.310"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:55.314" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201030 11:51:55.313" endtime="20201030 11:51:55.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:55.317" level="INFO">VALUE: [4.579099999999989e-05, 4.6139000000000596e-05, 4.5875000000000776e-05, 4.598600000000133e-05, 4.604199999999961e-05, 4.577799999999979e-05, 4.622199999999854e-05, 4.597200000000176e-05, 4.604199999999961e-05, 4.601400000000047e-05, 4.598599999999786e-05, 4.6097000000001886e-05, 4.620800000000244e-05, 4.595800000000219e-05, 4.598600000000133e-05, 4.606900000000275e-05, 4.605599999999918e-05, 4.604199999999961e-05, 4.6153000000000166e-05, 4.5847000000001636e-05, 4.6153000000000166e-05, 4.624999999999768e-05, 4.6194999999998876e-05, 4.577799999999979e-05, 4.60000000000009e-05, 4.6139000000000596e-05, 4.6153000000000166e-05, 4.583400000000154e-05, 4.595800000000219e-05, 4.6695000000002845e-05, 4.607000000000222e-05, 4.592999999999958e-05, 4.624999999999768e-05, 4.611099999999799e-05, 4.630599999999943e-05, 4.5861000000001206e-05, 4.620799999999897e-05, 4.670799999999947e-05, 4.591600000000001e-05, 4.612499999999756e-05, 4.580499999999946e-05, 4.6153000000000166e-05, 4.620800000000244e-05, 4.597200000000176e-05, 4.622199999999854e-05, 4.609699999999842e-05, 4.5917000000002955e-05, 4.5902999999999916e-05, 4.580599999999893e-05, 4.598600000000133e-05]</msg>
<status status="PASS" starttime="20201030 11:51:55.316" endtime="20201030 11:51:55.318"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.311" endtime="20201030 11:51:55.318"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:55.322" endtime="20201030 11:51:55.341"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.320" endtime="20201030 11:51:55.342"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.319" endtime="20201030 11:51:55.342"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.961" endtime="20201030 11:51:55.342"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.961" endtime="20201030 11:51:55.343"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:55.351" endtime="20201030 11:51:55.371"></status>
</kw>
<msg timestamp="20201030 11:51:55.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:55.350" endtime="20201030 11:51:55.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:55.374" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:55.372" endtime="20201030 11:51:55.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:55.375" endtime="20201030 11:51:55.376"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.347" endtime="20201030 11:51:55.377"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.345" endtime="20201030 11:51:55.377"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:55.384" endtime="20201030 11:51:55.669"></status>
</kw>
<msg timestamp="20201030 11:51:55.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025223319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025270569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:55.382" endtime="20201030 11:51:55.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:55.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025223319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025270569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:55.673" endtime="20201030 11:51:55.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:55.681" endtime="20201030 11:51:55.683"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.380" endtime="20201030 11:51:55.684"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.378" endtime="20201030 11:51:55.684"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:55.688" level="INFO">${RESULT} = [{'diff': 4.724999999999868e-05}, {'diff': 4.716600000000126e-05}, {'diff': 4.675000000000165e-05}, {'diff': 4.697199999999929e-05}, {'diff': 4.70000000000019e-05}, {'diff': 4.7153000000001166e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:55.685" endtime="20201030 11:51:55.688"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:55.692" level="INFO">${ACCURACY} = {'diff': [4.724999999999868e-05, 4.716600000000126e-05, 4.675000000000165e-05, 4.697199999999929e-05, 4.70000000000019e-05, 4.7153000000001166e-05, 4.6847000000002637e-05, 4.711099999999899e-05, 4.692...</msg>
<status status="PASS" starttime="20201030 11:51:55.689" endtime="20201030 11:51:55.692"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:55.697" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201030 11:51:55.696" endtime="20201030 11:51:55.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:55.699" level="INFO">VALUE: [4.724999999999868e-05, 4.716600000000126e-05, 4.675000000000165e-05, 4.697199999999929e-05, 4.70000000000019e-05, 4.7153000000001166e-05, 4.6847000000002637e-05, 4.711099999999899e-05, 4.692999999999711e-05, 4.709699999999942e-05, 4.773599999999961e-05, 4.773600000000308e-05, 4.6903000000000916e-05, 4.722199999999954e-05, 4.722199999999954e-05, 4.712499999999856e-05, 4.6917000000000486e-05, 4.686099999999874e-05, 4.6931000000000056e-05, 4.7181000000000306e-05, 4.702800000000104e-05, 4.670800000000294e-05, 4.7695000000000376e-05, 4.7722999999999516e-05, 4.726400000000172e-05, 4.7153000000001166e-05, 4.680599999999993e-05, 4.680599999999993e-05, 4.709799999999889e-05, 4.6917000000000486e-05, 4.772200000000004e-05, 4.7237000000002055e-05, 4.718000000000083e-05, 4.701400000000147e-05, 4.720800000000344e-05, 4.711099999999899e-05, 4.679100000000089e-05, 4.773599999999961e-05, 4.718000000000083e-05, 4.705500000000071e-05, 4.727800000000129e-05, 4.674999999999818e-05, 4.722199999999954e-05, 4.711099999999899e-05, 4.695799999999972e-05, 4.679200000000036e-05, 4.776400000000222e-05, 4.708299999999985e-05, 4.7111000000002456e-05, 4.6861000000002206e-05]</msg>
<status status="PASS" starttime="20201030 11:51:55.698" endtime="20201030 11:51:55.701"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.693" endtime="20201030 11:51:55.701"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:55.705" endtime="20201030 11:51:55.725"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.704" endtime="20201030 11:51:55.725"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.702" endtime="20201030 11:51:55.725"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.344" endtime="20201030 11:51:55.726"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.343" endtime="20201030 11:51:55.726"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:55.735" endtime="20201030 11:51:55.751"></status>
</kw>
<msg timestamp="20201030 11:51:55.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:55.733" endtime="20201030 11:51:55.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:55.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:55.752" endtime="20201030 11:51:55.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:55.755" endtime="20201030 11:51:55.757"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.730" endtime="20201030 11:51:55.757"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.728" endtime="20201030 11:51:55.758"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:55.764" endtime="20201030 11:51:56.050"></status>
</kw>
<msg timestamp="20201030 11:51:56.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022483069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022531208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:55.763" endtime="20201030 11:51:56.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:56.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022483069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022531208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:56.054" endtime="20201030 11:51:56.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:56.063" endtime="20201030 11:51:56.064"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.760" endtime="20201030 11:51:56.065"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.758" endtime="20201030 11:51:56.065"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:56.069" level="INFO">${RESULT} = [{'diff': 4.813899999999913e-05}, {'diff': 4.784700000000017e-05}, {'diff': 4.877800000000279e-05}, {'diff': 4.788899999999888e-05}, {'diff': 4.784799999999964e-05}, {'diff': 4.784799999999964e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:56.066" endtime="20201030 11:51:56.070"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:56.074" level="INFO">${ACCURACY} = {'diff': [4.813899999999913e-05, 4.784700000000017e-05, 4.877800000000279e-05, 4.788899999999888e-05, 4.784799999999964e-05, 4.784799999999964e-05, 4.8209000000000446e-05, 4.808399999999685e-05, 4.822...</msg>
<status status="PASS" starttime="20201030 11:51:56.070" endtime="20201030 11:51:56.075"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:56.079" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201030 11:51:56.078" endtime="20201030 11:51:56.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:56.081" level="INFO">VALUE: [4.813899999999913e-05, 4.784700000000017e-05, 4.877800000000279e-05, 4.788899999999888e-05, 4.784799999999964e-05, 4.784799999999964e-05, 4.8209000000000446e-05, 4.808399999999685e-05, 4.822200000000054e-05, 4.7945000000000626e-05, 4.826299999999978e-05, 4.784799999999964e-05, 4.826399999999925e-05, 4.809700000000042e-05, 4.813799999999965e-05, 4.822200000000054e-05, 4.793000000000158e-05, 4.822200000000054e-05, 4.873600000000061e-05, 4.784700000000017e-05, 4.794400000000115e-05, 4.813899999999913e-05, 4.812499999999956e-05, 4.802799999999857e-05, 4.801400000000247e-05, 4.799999999999943e-05, 4.787499999999931e-05, 4.794400000000115e-05, 4.877799999999932e-05, 4.784700000000017e-05, 4.875000000000018e-05, 4.823600000000011e-05, 4.774999999999918e-05, 4.875000000000018e-05, 4.790299999999845e-05, 4.872199999999757e-05, 4.7931000000001056e-05, 4.8194999999997407e-05, 4.7959000000000196e-05, 4.7972999999999766e-05, 4.7972999999999766e-05, 4.823600000000011e-05, 4.876300000000028e-05, 4.7931000000001056e-05, 4.8708999999997477e-05, 4.7917000000001486e-05, 4.876300000000028e-05, 4.818000000000183e-05, 4.851300000000003e-05, 4.877699999999985e-05]</msg>
<status status="PASS" starttime="20201030 11:51:56.080" endtime="20201030 11:51:56.082"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.075" endtime="20201030 11:51:56.083"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:56.086" endtime="20201030 11:51:56.106"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.085" endtime="20201030 11:51:56.106"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.084" endtime="20201030 11:51:56.107"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.727" endtime="20201030 11:51:56.107"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.726" endtime="20201030 11:51:56.107"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:56.116" endtime="20201030 11:51:56.133"></status>
</kw>
<msg timestamp="20201030 11:51:56.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:56.114" endtime="20201030 11:51:56.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:56.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:56.134" endtime="20201030 11:51:56.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:56.137" endtime="20201030 11:51:56.138"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.112" endtime="20201030 11:51:56.139"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.110" endtime="20201030 11:51:56.139"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:56.146" endtime="20201030 11:51:56.433"></status>
</kw>
<msg timestamp="20201030 11:51:56.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022038486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022088222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:56.144" endtime="20201030 11:51:56.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:56.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022038486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022088222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:56.437" endtime="20201030 11:51:56.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:56.446" endtime="20201030 11:51:56.447"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.141" endtime="20201030 11:51:56.448"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.140" endtime="20201030 11:51:56.448"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:56.452" level="INFO">${RESULT} = [{'diff': 4.973600000000161e-05}, {'diff': 4.922199999999807e-05}, {'diff': 4.906899999999881e-05}, {'diff': 4.925000000000068e-05}, {'diff': 4.908300000000185e-05}, {'diff': 4.912500000000056e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:56.449" endtime="20201030 11:51:56.452"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:56.456" level="INFO">${ACCURACY} = {'diff': [4.973600000000161e-05, 4.922199999999807e-05, 4.906899999999881e-05, 4.925000000000068e-05, 4.908300000000185e-05, 4.912500000000056e-05, 4.922199999999807e-05, 4.887500000000031e-05, 4.9707...</msg>
<status status="PASS" starttime="20201030 11:51:56.453" endtime="20201030 11:51:56.457"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:56.461" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201030 11:51:56.460" endtime="20201030 11:51:56.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:56.463" level="INFO">VALUE: [4.973600000000161e-05, 4.922199999999807e-05, 4.906899999999881e-05, 4.925000000000068e-05, 4.908300000000185e-05, 4.912500000000056e-05, 4.922199999999807e-05, 4.887500000000031e-05, 4.9707999999999e-05, 4.881899999999856e-05, 4.884700000000117e-05, 4.911100000000099e-05, 4.92079999999985e-05, 4.904199999999914e-05, 4.902799999999957e-05, 4.919499999999841e-05, 4.8917000000002486e-05, 4.883400000000107e-05, 4.925000000000068e-05, 4.907000000000175e-05, 4.9723000000001516e-05, 4.893099999999859e-05, 4.969499999999891e-05, 4.9208999999997977e-05, 4.930499999999949e-05, 4.8959000000001196e-05, 4.894499999999816e-05, 4.916599999999979e-05, 4.919399999999893e-05, 4.884800000000064e-05, 4.976299999999781e-05, 4.980599999999946e-05, 4.912500000000056e-05, 4.923600000000111e-05, 4.952800000000007e-05, 4.90270000000001e-05, 4.879099999999942e-05, 4.905499999999924e-05, 4.895800000000172e-05, 4.895800000000172e-05, 4.925000000000068e-05, 4.973599999999814e-05, 4.897200000000129e-05, 4.902799999999957e-05, 4.902799999999957e-05, 4.925000000000068e-05, 4.888899999999988e-05, 4.877799999999932e-05, 4.886100000000074e-05, 4.8945000000001626e-05]</msg>
<status status="PASS" starttime="20201030 11:51:56.462" endtime="20201030 11:51:56.464"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.457" endtime="20201030 11:51:56.465"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:56.468" endtime="20201030 11:51:56.488"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.467" endtime="20201030 11:51:56.488"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.466" endtime="20201030 11:51:56.489"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.108" endtime="20201030 11:51:56.489"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.107" endtime="20201030 11:51:56.489"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:56.498" endtime="20201030 11:51:56.515"></status>
</kw>
<msg timestamp="20201030 11:51:56.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:56.496" endtime="20201030 11:51:56.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:56.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:56.517" endtime="20201030 11:51:56.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:56.519" endtime="20201030 11:51:56.521"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.494" endtime="20201030 11:51:56.521"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.491" endtime="20201030 11:51:56.522"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:56.528" endtime="20201030 11:51:56.814"></status>
</kw>
<msg timestamp="20201030 11:51:56.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022755181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022805694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:56.527" endtime="20201030 11:51:56.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:56.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022755181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022805694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:56.818" endtime="20201030 11:51:56.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:56.826" endtime="20201030 11:51:56.828"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.524" endtime="20201030 11:51:56.829"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.522" endtime="20201030 11:51:56.829"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:56.833" level="INFO">${RESULT} = [{'diff': 5.051300000000203e-05}, {'diff': 5.076399999999828e-05}, {'diff': 5.00409999999972e-05}, {'diff': 5.006899999999981e-05}, {'diff': 5.011100000000199e-05}, {'diff': 5.020800000000297e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:56.830" endtime="20201030 11:51:56.833"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:56.837" level="INFO">${ACCURACY} = {'diff': [5.051300000000203e-05, 5.076399999999828e-05, 5.00409999999972e-05, 5.006899999999981e-05, 5.011100000000199e-05, 5.020800000000297e-05, 5.074999999999871e-05, 5.077800000000132e-05, 5.02219...</msg>
<status status="PASS" starttime="20201030 11:51:56.834" endtime="20201030 11:51:56.837"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:56.842" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201030 11:51:56.841" endtime="20201030 11:51:56.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:56.844" level="INFO">VALUE: [5.051300000000203e-05, 5.076399999999828e-05, 5.00409999999972e-05, 5.006899999999981e-05, 5.011100000000199e-05, 5.020800000000297e-05, 5.074999999999871e-05, 5.077800000000132e-05, 5.022199999999907e-05, 5.024999999999821e-05, 5.072199999999957e-05, 5.0014000000001e-05, 5.006899999999981e-05, 5.013899999999766e-05, 4.999999999999796e-05, 4.995899999999873e-05, 5.026399999999778e-05, 5.076399999999828e-05, 5.005599999999971e-05, 4.98339999999986e-05, 5.004200000000014e-05, 4.986099999999827e-05, 5.031900000000006e-05, 4.977800000000032e-05, 4.984799999999817e-05, 5.069499999999991e-05, 5.01530000000007e-05, 5.075000000000218e-05, 5.015200000000122e-05, 4.997199999999882e-05, 5.069400000000043e-05, 5.005599999999971e-05, 5.005500000000024e-05, 5.011100000000199e-05, 5.005500000000024e-05, 5.004100000000067e-05, 5.004100000000067e-05, 5.006999999999928e-05, 4.983299999999913e-05, 4.991700000000002e-05, 5.072199999999957e-05, 5.075000000000218e-05, 5.073599999999914e-05, 5.022199999999907e-05, 4.990300000000045e-05, 5.008300000000285e-05, 5.073599999999914e-05, 5.026399999999778e-05, 5.026400000000125e-05, 4.981999999999903e-05]</msg>
<status status="PASS" starttime="20201030 11:51:56.843" endtime="20201030 11:51:56.846"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.838" endtime="20201030 11:51:56.846"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:56.850" endtime="20201030 11:51:56.869"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.848" endtime="20201030 11:51:56.870"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.847" endtime="20201030 11:51:56.870"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.490" endtime="20201030 11:51:56.871"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.489" endtime="20201030 11:51:56.871"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:56.879" endtime="20201030 11:51:56.896"></status>
</kw>
<msg timestamp="20201030 11:51:56.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:56.878" endtime="20201030 11:51:56.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:56.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:56.897" endtime="20201030 11:51:56.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:56.900" endtime="20201030 11:51:56.901"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.875" endtime="20201030 11:51:56.902"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.873" endtime="20201030 11:51:56.902"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:56.909" endtime="20201030 11:51:57.196"></status>
</kw>
<msg timestamp="20201030 11:51:57.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022157361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022208292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:56.907" endtime="20201030 11:51:57.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:57.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022157361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022208292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:57.200" endtime="20201030 11:51:57.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:57.208" endtime="20201030 11:51:57.210"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.905" endtime="20201030 11:51:57.211"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.903" endtime="20201030 11:51:57.211"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:57.215" level="INFO">${RESULT} = [{'diff': 5.093100000000059e-05}, {'diff': 5.084700000000317e-05}, {'diff': 5.173699999999962e-05}, {'diff': 5.130500000000149e-05}, {'diff': 5.104199999999767e-05}, {'diff': 5.102699999999863e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:57.212" endtime="20201030 11:51:57.215"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:57.220" level="INFO">${ACCURACY} = {'diff': [5.093100000000059e-05, 5.084700000000317e-05, 5.173699999999962e-05, 5.130500000000149e-05, 5.104199999999767e-05, 5.102699999999863e-05, 5.1165999999998324e-05, 5.126399999999878e-05, 5.093...</msg>
<status status="PASS" starttime="20201030 11:51:57.216" endtime="20201030 11:51:57.220"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:57.225" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201030 11:51:57.224" endtime="20201030 11:51:57.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:57.227" level="INFO">VALUE: [5.093100000000059e-05, 5.084700000000317e-05, 5.173699999999962e-05, 5.130500000000149e-05, 5.104199999999767e-05, 5.102699999999863e-05, 5.1165999999998324e-05, 5.126399999999878e-05, 5.093100000000059e-05, 5.12080000000005e-05, 5.080500000000099e-05, 5.112500000000256e-05, 5.122200000000007e-05, 5.086099999999927e-05, 5.177799999999885e-05, 5.111099999999952e-05, 5.106900000000081e-05, 5.093000000000111e-05, 5.106900000000081e-05, 5.119500000000041e-05, 5.176399999999928e-05, 5.095800000000025e-05, 5.118099999999737e-05, 5.098599999999939e-05, 5.091700000000102e-05, 5.080600000000046e-05, 5.079199999999742e-05, 5.088899999999841e-05, 5.127799999999835e-05, 5.090299999999798e-05, 5.100000000000243e-05, 5.124999999999921e-05, 5.179100000000242e-05, 5.099999999999896e-05, 5.112499999999909e-05, 5.0986999999998867e-05, 5.093000000000111e-05, 5.081899999999709e-05, 5.086099999999927e-05, 5.08469999999997e-05, 5.08469999999997e-05, 5.081899999999709e-05, 5.095800000000025e-05, 5.12080000000005e-05, 5.077800000000132e-05, 5.086099999999927e-05, 5.105499999999777e-05, 5.15279999999986e-05, 5.176399999999928e-05, 5.077800000000132e-05]</msg>
<status status="PASS" starttime="20201030 11:51:57.226" endtime="20201030 11:51:57.228"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.221" endtime="20201030 11:51:57.228"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:57.232" endtime="20201030 11:51:57.251"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.231" endtime="20201030 11:51:57.252"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.229" endtime="20201030 11:51:57.252"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.872" endtime="20201030 11:51:57.253"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.871" endtime="20201030 11:51:57.253"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:57.262" endtime="20201030 11:51:57.278"></status>
</kw>
<msg timestamp="20201030 11:51:57.279" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:57.260" endtime="20201030 11:51:57.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:57.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:57.280" endtime="20201030 11:51:57.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:57.282" endtime="20201030 11:51:57.284"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.257" endtime="20201030 11:51:57.285"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.255" endtime="20201030 11:51:57.285"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:57.291" endtime="20201030 11:51:57.578"></status>
</kw>
<msg timestamp="20201030 11:51:57.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022046181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022098056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:57.290" endtime="20201030 11:51:57.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:57.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022046181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022098056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:57.582" endtime="20201030 11:51:57.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:57.590" endtime="20201030 11:51:57.592"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.287" endtime="20201030 11:51:57.593"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.286" endtime="20201030 11:51:57.593"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:57.597" level="INFO">${RESULT} = [{'diff': 5.187499999999984e-05}, {'diff': 5.20279999999991e-05}, {'diff': 5.197200000000082e-05}, {'diff': 5.270899999999801e-05}, {'diff': 5.227799999999935e-05}, {'diff': 5.197200000000082e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:57.594" endtime="20201030 11:51:57.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:57.601" level="INFO">${ACCURACY} = {'diff': [5.187499999999984e-05, 5.20279999999991e-05, 5.197200000000082e-05, 5.270899999999801e-05, 5.227799999999935e-05, 5.197200000000082e-05, 5.279200000000289e-05, 5.198600000000039e-05, 5.19730...</msg>
<status status="PASS" starttime="20201030 11:51:57.598" endtime="20201030 11:51:57.601"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:57.606" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201030 11:51:57.605" endtime="20201030 11:51:57.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:57.608" level="INFO">VALUE: [5.187499999999984e-05, 5.20279999999991e-05, 5.197200000000082e-05, 5.270899999999801e-05, 5.227799999999935e-05, 5.197200000000082e-05, 5.279200000000289e-05, 5.198600000000039e-05, 5.19730000000003e-05, 5.187499999999984e-05, 5.188899999999941e-05, 5.227699999999988e-05, 5.269499999999844e-05, 5.212500000000009e-05, 5.198600000000039e-05, 5.2707999999998534e-05, 5.1957999999997784e-05, 5.1915999999999074e-05, 5.2179999999998894e-05, 5.272200000000157e-05, 5.186100000000027e-05, 5.194500000000116e-05, 5.2165999999999324e-05, 5.198600000000039e-05, 5.211100000000052e-05, 5.181899999999809e-05, 5.172200000000057e-05, 5.179199999999842e-05, 5.219400000000193e-05, 5.218099999999837e-05, 5.208300000000138e-05, 5.209699999999748e-05, 5.186100000000027e-05, 5.193099999999812e-05, 5.25279999999996e-05, 5.225000000000021e-05, 5.226400000000325e-05, 5.218100000000184e-05, 5.211100000000052e-05, 5.2708000000002e-05, 5.208400000000085e-05, 5.180600000000146e-05, 5.179199999999842e-05, 5.2721999999998104e-05, 5.180500000000199e-05, 5.209700000000095e-05, 5.176300000000328e-05, 5.205499999999877e-05, 5.277799999999985e-05, 5.193100000000159e-05]</msg>
<status status="PASS" starttime="20201030 11:51:57.607" endtime="20201030 11:51:57.614"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.602" endtime="20201030 11:51:57.615"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:57.618" endtime="20201030 11:51:57.638"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.617" endtime="20201030 11:51:57.638"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.616" endtime="20201030 11:51:57.639"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.254" endtime="20201030 11:51:57.639"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.253" endtime="20201030 11:51:57.639"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:57.648" endtime="20201030 11:51:57.666"></status>
</kw>
<msg timestamp="20201030 11:51:57.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:57.646" endtime="20201030 11:51:57.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:57.668" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:57.667" endtime="20201030 11:51:57.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:57.670" endtime="20201030 11:51:57.671"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.644" endtime="20201030 11:51:57.672"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.641" endtime="20201030 11:51:57.672"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:57.679" endtime="20201030 11:51:57.964"></status>
</kw>
<msg timestamp="20201030 11:51:57.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022906111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022959347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:57.677" endtime="20201030 11:51:57.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:57.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022906111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022959347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:57.969" endtime="20201030 11:51:57.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:57.977" endtime="20201030 11:51:57.979"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.674" endtime="20201030 11:51:57.979"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.673" endtime="20201030 11:51:57.980"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:57.983" level="INFO">${RESULT} = [{'diff': 5.323600000000164e-05}, {'diff': 5.32080000000025e-05}, {'diff': 5.287500000000084e-05}, {'diff': 5.300000000000096e-05}, {'diff': 5.3221999999998604e-05}, {'diff': 5.32080000000025e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:57.980" endtime="20201030 11:51:57.984"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:57.988" level="INFO">${ACCURACY} = {'diff': [5.323600000000164e-05, 5.32080000000025e-05, 5.287500000000084e-05, 5.300000000000096e-05, 5.3221999999998604e-05, 5.32080000000025e-05, 5.319400000000293e-05, 5.308300000000238e-05, 5.31939...</msg>
<status status="PASS" starttime="20201030 11:51:57.984" endtime="20201030 11:51:57.988"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:57.992" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201030 11:51:57.991" endtime="20201030 11:51:57.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:57.995" level="INFO">VALUE: [5.323600000000164e-05, 5.32080000000025e-05, 5.287500000000084e-05, 5.300000000000096e-05, 5.3221999999998604e-05, 5.32080000000025e-05, 5.319400000000293e-05, 5.308300000000238e-05, 5.3193999999999464e-05, 5.2971999999998354e-05, 5.30280000000001e-05, 5.309699999999848e-05, 5.301400000000053e-05, 5.31669999999998e-05, 5.30410000000002e-05, 5.370899999999901e-05, 5.31669999999998e-05, 5.308399999999838e-05, 5.311099999999805e-05, 5.354200000000017e-05, 5.28340000000016e-05, 5.326400000000078e-05, 5.3235999999998174e-05, 5.305499999999977e-05, 5.326400000000078e-05, 5.369499999999944e-05, 5.323600000000164e-05, 5.277700000000038e-05, 5.375000000000171e-05, 5.3166000000000324e-05, 5.281899999999909e-05, 5.288900000000041e-05, 5.3193999999999464e-05, 5.2957999999998784e-05, 5.323600000000164e-05, 5.3179999999999894e-05, 5.291699999999955e-05, 5.312499999999762e-05, 5.3235999999998174e-05, 5.311200000000099e-05, 5.3735999999998674e-05, 5.3249999999997744e-05, 5.287500000000084e-05, 5.309799999999795e-05, 5.295899999999826e-05, 5.287499999999737e-05, 5.2985999999997924e-05, 5.309700000000195e-05, 5.291699999999955e-05, 5.2971999999998354e-05]</msg>
<status status="PASS" starttime="20201030 11:51:57.993" endtime="20201030 11:51:57.996"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.989" endtime="20201030 11:51:57.997"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:58.001" endtime="20201030 11:51:58.020"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.999" endtime="20201030 11:51:58.021"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.998" endtime="20201030 11:51:58.021"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.640" endtime="20201030 11:51:58.021"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.639" endtime="20201030 11:51:58.021"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:58.030" endtime="20201030 11:51:58.047"></status>
</kw>
<msg timestamp="20201030 11:51:58.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:58.029" endtime="20201030 11:51:58.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:58.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:58.048" endtime="20201030 11:51:58.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:58.051" endtime="20201030 11:51:58.052"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.026" endtime="20201030 11:51:58.053"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.024" endtime="20201030 11:51:58.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:58.060" endtime="20201030 11:51:58.346"></status>
</kw>
<msg timestamp="20201030 11:51:58.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022381653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022435542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:58.058" endtime="20201030 11:51:58.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:58.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022381653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022435542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:58.350" endtime="20201030 11:51:58.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:58.358" endtime="20201030 11:51:58.360"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.056" endtime="20201030 11:51:58.361"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.054" endtime="20201030 11:51:58.361"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:58.365" level="INFO">${RESULT} = [{'diff': 5.388899999999794e-05}, {'diff': 5.381900000000009e-05}, {'diff': 5.38609999999988e-05}, {'diff': 5.4193999999996995e-05}, {'diff': 5.391700000000055e-05}, {'diff': 5.380500000000052e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:58.362" endtime="20201030 11:51:58.365"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:58.370" level="INFO">${ACCURACY} = {'diff': [5.388899999999794e-05, 5.381900000000009e-05, 5.38609999999988e-05, 5.4193999999996995e-05, 5.391700000000055e-05, 5.380500000000052e-05, 5.419499999999994e-05, 5.411099999999905e-05, 5.3986...</msg>
<status status="PASS" starttime="20201030 11:51:58.366" endtime="20201030 11:51:58.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:58.375" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201030 11:51:58.374" endtime="20201030 11:51:58.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:58.377" level="INFO">VALUE: [5.388899999999794e-05, 5.381900000000009e-05, 5.38609999999988e-05, 5.4193999999996995e-05, 5.391700000000055e-05, 5.380500000000052e-05, 5.419499999999994e-05, 5.411099999999905e-05, 5.398600000000239e-05, 5.38470000000027e-05, 5.4763999999998814e-05, 5.468100000000087e-05, 5.376400000000128e-05, 5.412500000000209e-05, 5.400000000000196e-05, 5.383399999999913e-05, 5.3777999999997383e-05, 5.395899999999926e-05, 5.4249999999998744e-05, 5.391700000000055e-05, 5.476400000000228e-05, 5.41809999999969e-05, 5.454099999999823e-05, 5.3985999999998924e-05, 5.377700000000138e-05, 5.479200000000142e-05, 5.406900000000034e-05, 5.4249999999998744e-05, 5.395800000000325e-05, 5.384699999999923e-05, 5.4722000000000104e-05, 5.4208000000000034e-05, 5.390300000000098e-05, 5.413900000000166e-05, 5.3985999999998924e-05, 5.391700000000055e-05, 5.380599999999999e-05, 5.476400000000228e-05, 5.38470000000027e-05, 5.425000000000221e-05, 5.4013999999998064e-05, 5.420899999999951e-05, 5.480599999999752e-05, 5.404200000000067e-05, 5.418100000000037e-05, 5.400000000000196e-05, 5.405500000000077e-05, 5.3749999999998244e-05, 5.3985999999998924e-05, 5.419499999999994e-05]</msg>
<status status="PASS" starttime="20201030 11:51:58.376" endtime="20201030 11:51:58.378"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.371" endtime="20201030 11:51:58.379"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:58.382" endtime="20201030 11:51:58.402"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.381" endtime="20201030 11:51:58.402"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.380" endtime="20201030 11:51:58.402"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.022" endtime="20201030 11:51:58.403"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.022" endtime="20201030 11:51:58.403"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:58.412" endtime="20201030 11:51:58.429"></status>
</kw>
<msg timestamp="20201030 11:51:58.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:58.410" endtime="20201030 11:51:58.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:58.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:58.430" endtime="20201030 11:51:58.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:58.433" endtime="20201030 11:51:58.435"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.407" endtime="20201030 11:51:58.435"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.405" endtime="20201030 11:51:58.436"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:58.442" endtime="20201030 11:51:58.729"></status>
</kw>
<msg timestamp="20201030 11:51:58.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021944083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021999556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:58.441" endtime="20201030 11:51:58.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:58.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021944083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021999556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:58.733" endtime="20201030 11:51:58.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:58.741" endtime="20201030 11:51:58.743"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.438" endtime="20201030 11:51:58.744"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.436" endtime="20201030 11:51:58.744"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:58.748" level="INFO">${RESULT} = [{'diff': 5.547300000000033e-05}, {'diff': 5.497299999999983e-05}, {'diff': 5.505599999999777e-05}, {'diff': 5.479100000000195e-05}, {'diff': 5.576300000000034e-05}, {'diff': 5.5222000000000604e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:51:58.745" endtime="20201030 11:51:58.748"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:58.752" level="INFO">${ACCURACY} = {'diff': [5.547300000000033e-05, 5.497299999999983e-05, 5.505599999999777e-05, 5.479100000000195e-05, 5.576300000000034e-05, 5.5222000000000604e-05, 5.511100000000005e-05, 5.48609999999998e-05, 5.4860...</msg>
<status status="PASS" starttime="20201030 11:51:58.749" endtime="20201030 11:51:58.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:58.757" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201030 11:51:58.756" endtime="20201030 11:51:58.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:58.759" level="INFO">VALUE: [5.547300000000033e-05, 5.497299999999983e-05, 5.505599999999777e-05, 5.479100000000195e-05, 5.576300000000034e-05, 5.5222000000000604e-05, 5.511100000000005e-05, 5.48609999999998e-05, 5.48609999999998e-05, 5.5722000000001104e-05, 5.488899999999894e-05, 5.48609999999998e-05, 5.509700000000048e-05, 5.483300000000066e-05, 5.5721999999997635e-05, 5.512499999999962e-05, 5.504200000000167e-05, 5.513899999999919e-05, 5.490300000000198e-05, 5.509700000000048e-05, 5.512499999999962e-05, 5.491700000000155e-05, 5.490299999999851e-05, 5.504200000000167e-05, 5.491700000000155e-05, 5.494500000000069e-05, 5.518100000000137e-05, 5.5041999999998203e-05, 5.48479999999997e-05, 5.523699999999965e-05, 5.516699999999833e-05, 5.4999999999999494e-05, 5.4791999999997953e-05, 5.5222000000000604e-05, 5.481900000000109e-05, 5.5249999999999744e-05, 5.5707999999998065e-05, 5.518100000000137e-05, 5.5679999999998925e-05, 5.479099999999848e-05, 5.501400000000253e-05, 5.511100000000005e-05, 5.5679999999998925e-05, 5.488899999999894e-05, 5.5707999999998065e-05, 5.5513999999999564e-05, 5.5777999999999384e-05, 5.479200000000142e-05, 5.4985999999999924e-05, 5.5236000000000174e-05]</msg>
<status status="PASS" starttime="20201030 11:51:58.758" endtime="20201030 11:51:58.760"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.753" endtime="20201030 11:51:58.760"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:58.764" endtime="20201030 11:51:58.784"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.763" endtime="20201030 11:51:58.784"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.761" endtime="20201030 11:51:58.784"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.404" endtime="20201030 11:51:58.785"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.403" endtime="20201030 11:51:58.785"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:58.794" endtime="20201030 11:51:58.813"></status>
</kw>
<msg timestamp="20201030 11:51:58.814" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:58.792" endtime="20201030 11:51:58.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:58.817" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:58.815" endtime="20201030 11:51:58.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:58.818" endtime="20201030 11:51:58.819"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.789" endtime="20201030 11:51:58.820"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.787" endtime="20201030 11:51:58.820"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:58.827" endtime="20201030 11:51:59.113"></status>
</kw>
<msg timestamp="20201030 11:51:59.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024923222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024979083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:58.825" endtime="20201030 11:51:59.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:59.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024923222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024979083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:59.117" endtime="20201030 11:51:59.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:59.126" endtime="20201030 11:51:59.127"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.822" endtime="20201030 11:51:59.128"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.821" endtime="20201030 11:51:59.128"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:59.132" level="INFO">${RESULT} = [{'diff': 5.58610000000008e-05}, {'diff': 5.5887999999996996e-05}, {'diff': 5.5986000000000924e-05}, {'diff': 5.5777999999999384e-05}, {'diff': 5.604099999999973e-05}, {'diff': 5.6500000000000994e-05}...</msg>
<status status="PASS" starttime="20201030 11:51:59.129" endtime="20201030 11:51:59.132"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:59.136" level="INFO">${ACCURACY} = {'diff': [5.58610000000008e-05, 5.5887999999996996e-05, 5.5986000000000924e-05, 5.5777999999999384e-05, 5.604099999999973e-05, 5.6500000000000994e-05, 5.6221999999998135e-05, 5.58610000000008e-05, 5.5...</msg>
<status status="PASS" starttime="20201030 11:51:59.133" endtime="20201030 11:51:59.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:59.141" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201030 11:51:59.140" endtime="20201030 11:51:59.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:59.143" level="INFO">VALUE: [5.58610000000008e-05, 5.5887999999996996e-05, 5.5986000000000924e-05, 5.5777999999999384e-05, 5.604099999999973e-05, 5.6500000000000994e-05, 5.6221999999998135e-05, 5.58610000000008e-05, 5.588899999999994e-05, 5.581899999999862e-05, 5.581899999999862e-05, 5.605500000000277e-05, 5.6264000000000314e-05, 5.6528000000000134e-05, 5.5986000000000924e-05, 5.584700000000123e-05, 5.631900000000259e-05, 5.5972000000001354e-05, 5.6000000000000494e-05, 5.608399999999791e-05, 5.581999999999809e-05, 5.615299999999976e-05, 5.594499999999822e-05, 5.583399999999766e-05, 5.622300000000108e-05, 5.609700000000148e-05, 5.612499999999715e-05, 5.612500000000062e-05, 5.581899999999862e-05, 5.6666000000000355e-05, 5.5929999999999175e-05, 5.6180000000002894e-05, 5.5958000000001784e-05, 5.584700000000123e-05, 5.608300000000191e-05, 5.5986000000000924e-05, 5.615299999999976e-05, 5.590299999999951e-05, 5.6222000000001604e-05, 5.588899999999994e-05, 5.581900000000209e-05, 5.663899999999722e-05, 5.6207999999998565e-05, 5.584700000000123e-05, 5.5971999999997885e-05, 5.608300000000191e-05, 5.594499999999822e-05, 5.6777999999996914e-05, 5.616699999999933e-05, 5.583400000000113e-05]</msg>
<status status="PASS" starttime="20201030 11:51:59.142" endtime="20201030 11:51:59.145"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.137" endtime="20201030 11:51:59.146"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:59.149" endtime="20201030 11:51:59.169"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.148" endtime="20201030 11:51:59.169"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.147" endtime="20201030 11:51:59.169"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.786" endtime="20201030 11:51:59.170"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.785" endtime="20201030 11:51:59.170"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:59.178" endtime="20201030 11:51:59.196"></status>
</kw>
<msg timestamp="20201030 11:51:59.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:59.177" endtime="20201030 11:51:59.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:59.199" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:59.198" endtime="20201030 11:51:59.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:59.200" endtime="20201030 11:51:59.202"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.174" endtime="20201030 11:51:59.202"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.172" endtime="20201030 11:51:59.203"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:59.209" endtime="20201030 11:51:59.494"></status>
</kw>
<msg timestamp="20201030 11:51:59.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02206425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022122, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 11:51:59.208" endtime="20201030 11:51:59.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:59.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02206425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022122, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 11:51:59.499" endtime="20201030 11:51:59.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:59.507" endtime="20201030 11:51:59.509"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.205" endtime="20201030 11:51:59.509"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.203" endtime="20201030 11:51:59.510"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:59.514" level="INFO">${RESULT} = [{'diff': 5.7749999999998775e-05}, {'diff': 5.693099999999965e-05}, {'diff': 5.713900000000119e-05}, {'diff': 5.691700000000008e-05}, {'diff': 5.715299999999729e-05}, {'diff': 5.6805999999999524e-05},...</msg>
<status status="PASS" starttime="20201030 11:51:59.510" endtime="20201030 11:51:59.514"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:59.519" level="INFO">${ACCURACY} = {'diff': [5.7749999999998775e-05, 5.693099999999965e-05, 5.713900000000119e-05, 5.691700000000008e-05, 5.715299999999729e-05, 5.6805999999999524e-05, 5.71809999999999e-05, 5.68749999999979e-05, 5.6973...</msg>
<status status="PASS" starttime="20201030 11:51:59.515" endtime="20201030 11:51:59.519"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:59.523" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201030 11:51:59.522" endtime="20201030 11:51:59.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:59.526" level="INFO">VALUE: [5.7749999999998775e-05, 5.693099999999965e-05, 5.713900000000119e-05, 5.691700000000008e-05, 5.715299999999729e-05, 5.6805999999999524e-05, 5.71809999999999e-05, 5.68749999999979e-05, 5.697300000000183e-05, 5.693100000000312e-05, 5.7763999999998344e-05, 5.7028000000000634e-05, 5.6749999999997774e-05, 5.7028000000000634e-05, 5.7680000000000925e-05, 5.702700000000116e-05, 5.6971999999998885e-05, 5.704100000000073e-05, 5.7680000000000925e-05, 5.7249999999998274e-05, 5.70550000000003e-05, 5.7764000000001814e-05, 5.6986000000001924e-05, 5.697299999999836e-05, 5.7000000000001494e-05, 5.684700000000223e-05, 5.6791999999999954e-05, 5.7055999999999774e-05, 5.71809999999999e-05, 5.713900000000119e-05, 5.711100000000205e-05, 5.6791999999999954e-05, 5.6986000000001924e-05, 5.7736000000002674e-05, 5.715300000000076e-05, 5.712500000000162e-05, 5.691700000000008e-05, 5.68480000000017e-05, 5.722300000000208e-05, 5.693099999999965e-05, 5.694499999999922e-05, 5.7235999999998705e-05, 5.769499999999997e-05, 5.6957999999999315e-05, 5.7013999999997594e-05, 5.6943999999999745e-05, 5.679100000000048e-05, 5.68610000000018e-05, 5.7028000000000634e-05, 5.6971999999998885e-05]</msg>
<status status="PASS" starttime="20201030 11:51:59.524" endtime="20201030 11:51:59.527"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.520" endtime="20201030 11:51:59.527"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:59.531" endtime="20201030 11:51:59.550"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.529" endtime="20201030 11:51:59.551"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.528" endtime="20201030 11:51:59.551"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.171" endtime="20201030 11:51:59.551"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.170" endtime="20201030 11:51:59.551"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:59.560" endtime="20201030 11:51:59.577"></status>
</kw>
<msg timestamp="20201030 11:51:59.577" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:59.559" endtime="20201030 11:51:59.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:59.580" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:59.578" endtime="20201030 11:51:59.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:59.581" endtime="20201030 11:51:59.582"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.556" endtime="20201030 11:51:59.583"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.554" endtime="20201030 11:51:59.583"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:59.590" endtime="20201030 11:51:59.876"></status>
</kw>
<msg timestamp="20201030 11:51:59.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021868917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021927056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:59.589" endtime="20201030 11:51:59.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:59.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021868917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021927056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:59.880" endtime="20201030 11:51:59.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:59.889" endtime="20201030 11:51:59.891"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.586" endtime="20201030 11:51:59.891"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.584" endtime="20201030 11:51:59.892"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:59.896" level="INFO">${RESULT} = [{'diff': 5.813899999999872e-05}, {'diff': 5.852700000000266e-05}, {'diff': 5.7735999999999205e-05}, {'diff': 5.8165999999998386e-05}, {'diff': 5.8152000000002285e-05}, {'diff': 5.7944000000000745e-05...</msg>
<status status="PASS" starttime="20201030 11:51:59.892" endtime="20201030 11:51:59.896"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:59.900" level="INFO">${ACCURACY} = {'diff': [5.813899999999872e-05, 5.852700000000266e-05, 5.7735999999999205e-05, 5.8165999999998386e-05, 5.8152000000002285e-05, 5.7944000000000745e-05, 5.783300000000019e-05, 5.8027999999998164e-05, 5...</msg>
<status status="PASS" starttime="20201030 11:51:59.897" endtime="20201030 11:51:59.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:59.904" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201030 11:51:59.903" endtime="20201030 11:51:59.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:59.907" level="INFO">VALUE: [5.813899999999872e-05, 5.852700000000266e-05, 5.7735999999999205e-05, 5.8165999999998386e-05, 5.8152000000002285e-05, 5.7944000000000745e-05, 5.783300000000019e-05, 5.8027999999998164e-05, 5.8278000000001884e-05, 5.8070000000000344e-05, 5.8208000000000565e-05, 5.812499999999915e-05, 5.8180000000001425e-05, 5.78749999999989e-05, 5.790299999999804e-05, 5.8222000000000135e-05, 5.8056000000000774e-05, 5.8249999999999275e-05, 5.801300000000259e-05, 5.791700000000108e-05, 5.795899999999979e-05, 5.794500000000022e-05, 5.870900000000054e-05, 5.8749999999999775e-05, 5.797299999999936e-05, 5.793100000000065e-05, 5.7777999999997914e-05, 5.802699999999869e-05, 5.812499999999915e-05, 5.812499999999915e-05, 5.781899999999715e-05, 5.8708000000001065e-05, 5.811100000000305e-05, 5.7943999999997275e-05, 5.777699999999844e-05, 5.8749999999999775e-05, 5.8193999999997525e-05, 5.80550000000013e-05, 5.8208000000000565e-05, 5.815300000000176e-05, 5.7971999999999885e-05, 5.808300000000044e-05, 5.7833999999999663e-05, 5.8235999999999705e-05, 5.8028000000001634e-05, 5.8027999999998164e-05, 5.81810000000009e-05, 5.784700000000323e-05, 5.794500000000022e-05, 5.819500000000047e-05]</msg>
<status status="PASS" starttime="20201030 11:51:59.905" endtime="20201030 11:51:59.907"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.901" endtime="20201030 11:51:59.908"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:59.912" endtime="20201030 11:51:59.931"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.910" endtime="20201030 11:51:59.932"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.909" endtime="20201030 11:51:59.932"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.552" endtime="20201030 11:51:59.932"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.552" endtime="20201030 11:51:59.932"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:59.941" endtime="20201030 11:51:59.958"></status>
</kw>
<msg timestamp="20201030 11:51:59.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:59.939" endtime="20201030 11:51:59.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:59.961" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:59.960" endtime="20201030 11:51:59.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:59.962" endtime="20201030 11:51:59.964"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.937" endtime="20201030 11:51:59.964"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.935" endtime="20201030 11:51:59.965"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:59.971" endtime="20201030 11:52:00.257"></status>
</kw>
<msg timestamp="20201030 11:52:00.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022999806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023059069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:59.970" endtime="20201030 11:52:00.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:00.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022999806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023059069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:00.261" endtime="20201030 11:52:00.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:00.270" endtime="20201030 11:52:00.271"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.967" endtime="20201030 11:52:00.272"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.966" endtime="20201030 11:52:00.272"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:00.276" level="INFO">${RESULT} = [{'diff': 5.926300000000037e-05}, {'diff': 5.877699999999944e-05}, {'diff': 5.9000000000000025e-05}, {'diff': 5.879099999999901e-05}, {'diff': 5.9165999999999386e-05}, {'diff': 5.890299999999904e-05},...</msg>
<status status="PASS" starttime="20201030 11:52:00.273" endtime="20201030 11:52:00.277"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:00.280" level="INFO">${ACCURACY} = {'diff': [5.926300000000037e-05, 5.877699999999944e-05, 5.9000000000000025e-05, 5.879099999999901e-05, 5.9165999999999386e-05, 5.890299999999904e-05, 5.9221999999997665e-05, 5.8986000000000455e-05, 5....</msg>
<status status="PASS" starttime="20201030 11:52:00.277" endtime="20201030 11:52:00.281"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:00.285" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201030 11:52:00.284" endtime="20201030 11:52:00.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:00.287" level="INFO">VALUE: [5.926300000000037e-05, 5.877699999999944e-05, 5.9000000000000025e-05, 5.879099999999901e-05, 5.9165999999999386e-05, 5.890299999999904e-05, 5.9221999999997665e-05, 5.8986000000000455e-05, 5.9693999999999026e-05, 5.9735999999997735e-05, 5.9042000000002204e-05, 5.8708000000001065e-05, 5.9027999999999164e-05, 5.906900000000187e-05, 5.8791999999998484e-05, 5.9722000000001635e-05, 5.913899999999972e-05, 5.911099999999711e-05, 5.915299999999929e-05, 5.9041999999998734e-05, 5.9042000000002204e-05, 5.9500000000000525e-05, 5.8943999999998276e-05, 5.9750000000000775e-05, 5.909700000000101e-05, 5.912500000000015e-05, 5.88749999999999e-05, 5.951300000000062e-05, 5.9138000000000246e-05, 5.909700000000101e-05, 5.877699999999944e-05, 5.9250000000000275e-05, 5.90550000000023e-05, 5.908299999999797e-05, 5.9041999999998734e-05, 5.8943999999998276e-05, 5.8972000000000885e-05, 5.881899999999815e-05, 5.9180000000002425e-05, 5.891699999999861e-05, 5.9264000000003314e-05, 5.8972000000000885e-05, 5.886100000000033e-05, 5.8834000000000664e-05, 5.9180000000002425e-05, 5.9514000000000095e-05, 5.973700000000068e-05, 5.8986000000000455e-05, 5.969500000000197e-05, 5.9070000000001344e-05]</msg>
<status status="PASS" starttime="20201030 11:52:00.286" endtime="20201030 11:52:00.289"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.281" endtime="20201030 11:52:00.290"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:00.293" endtime="20201030 11:52:00.313"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.292" endtime="20201030 11:52:00.313"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.291" endtime="20201030 11:52:00.314"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.933" endtime="20201030 11:52:00.314"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.933" endtime="20201030 11:52:00.314"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:00.323" endtime="20201030 11:52:00.340"></status>
</kw>
<msg timestamp="20201030 11:52:00.340" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:00.321" endtime="20201030 11:52:00.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:00.343" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:00.341" endtime="20201030 11:52:00.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:00.344" endtime="20201030 11:52:00.345"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.319" endtime="20201030 11:52:00.346"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.317" endtime="20201030 11:52:00.346"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:00.353" endtime="20201030 11:52:00.639"></status>
</kw>
<msg timestamp="20201030 11:52:00.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022097931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022158417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:00.351" endtime="20201030 11:52:00.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:00.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022097931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022158417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:00.643" endtime="20201030 11:52:00.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:00.651" endtime="20201030 11:52:00.653"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.349" endtime="20201030 11:52:00.654"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.347" endtime="20201030 11:52:00.654"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:00.658" level="INFO">${RESULT} = [{'diff': 6.0485999999998485e-05}, {'diff': 6.070899999999907e-05}, {'diff': 5.9985999999997985e-05}, {'diff': 6.013899999999725e-05}, {'diff': 6.0222000000002135e-05}, {'diff': 5.9986000000001455e-05...</msg>
<status status="PASS" starttime="20201030 11:52:00.655" endtime="20201030 11:52:00.658"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:00.663" level="INFO">${ACCURACY} = {'diff': [6.0485999999998485e-05, 6.070899999999907e-05, 5.9985999999997985e-05, 6.013899999999725e-05, 6.0222000000002135e-05, 5.9986000000001455e-05, 5.9972000000001885e-05, 5.9957999999998846e-05, ...</msg>
<status status="PASS" starttime="20201030 11:52:00.659" endtime="20201030 11:52:00.663"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:00.668" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201030 11:52:00.667" endtime="20201030 11:52:00.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:00.670" level="INFO">VALUE: [6.0485999999998485e-05, 6.070899999999907e-05, 5.9985999999997985e-05, 6.013899999999725e-05, 6.0222000000002135e-05, 5.9986000000001455e-05, 5.9972000000001885e-05, 5.9957999999998846e-05, 5.981899999999915e-05, 5.9985999999997985e-05, 6.0277999999996945e-05, 6.008300000000244e-05, 6.012500000000115e-05, 5.9750000000000775e-05, 5.9777999999999915e-05, 6.0291999999999984e-05, 5.98750000000009e-05, 5.9820000000002094e-05, 6.0721999999999166e-05, 6.0236000000001705e-05, 5.990300000000004e-05, 6.0069999999998874e-05, 6.068099999999993e-05, 6.0055999999999304e-05, 5.986099999999786e-05, 5.990300000000004e-05, 6.0070000000002344e-05, 5.9806000000002524e-05, 6.009699999999854e-05, 5.9862000000000803e-05, 5.994499999999875e-05, 6.00689999999994e-05, 6.013900000000072e-05, 5.991699999999961e-05, 6.0166000000000386e-05, 6.0207999999999096e-05, 6.013900000000072e-05, 6.0179999999999956e-05, 6.012499999999768e-05, 5.9764000000000345e-05, 5.991699999999961e-05, 6.016699999999986e-05, 6.0193999999999526e-05, 6.012499999999768e-05, 5.98750000000009e-05, 6.018099999999943e-05, 6.0736000000002205e-05, 5.995900000000179e-05, 6.016699999999986e-05, 5.9820000000002094e-05]</msg>
<status status="PASS" starttime="20201030 11:52:00.669" endtime="20201030 11:52:00.671"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.664" endtime="20201030 11:52:00.672"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:00.675" endtime="20201030 11:52:00.695"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.674" endtime="20201030 11:52:00.695"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.672" endtime="20201030 11:52:00.696"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.315" endtime="20201030 11:52:00.696"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.314" endtime="20201030 11:52:00.696"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:00.705" endtime="20201030 11:52:00.721"></status>
</kw>
<msg timestamp="20201030 11:52:00.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:00.703" endtime="20201030 11:52:00.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:00.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:00.723" endtime="20201030 11:52:00.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:00.725" endtime="20201030 11:52:00.727"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.700" endtime="20201030 11:52:00.727"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.698" endtime="20201030 11:52:00.728"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:00.734" endtime="20201030 11:52:01.021"></status>
</kw>
<msg timestamp="20201030 11:52:01.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021848542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02191025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:52:00.733" endtime="20201030 11:52:01.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:01.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021848542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02191025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:52:01.025" endtime="20201030 11:52:01.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:01.034" endtime="20201030 11:52:01.035"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.730" endtime="20201030 11:52:01.036"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.728" endtime="20201030 11:52:01.036"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:01.040" level="INFO">${RESULT} = [{'diff': 6.17080000000006e-05}, {'diff': 6.0888999999998e-05}, {'diff': 6.115300000000129e-05}, {'diff': 6.116700000000086e-05}, {'diff': 6.109699999999954e-05}, {'diff': 6.094499999999975e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 11:52:01.037" endtime="20201030 11:52:01.041"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:01.045" level="INFO">${ACCURACY} = {'diff': [6.17080000000006e-05, 6.0888999999998e-05, 6.115300000000129e-05, 6.116700000000086e-05, 6.109699999999954e-05, 6.094499999999975e-05, 6.0764000000001345e-05, 6.0805999999996585e-05, 6.10279...</msg>
<status status="PASS" starttime="20201030 11:52:01.041" endtime="20201030 11:52:01.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:01.049" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201030 11:52:01.048" endtime="20201030 11:52:01.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:01.052" level="INFO">VALUE: [6.17080000000006e-05, 6.0888999999998e-05, 6.115300000000129e-05, 6.116700000000086e-05, 6.109699999999954e-05, 6.094499999999975e-05, 6.0764000000001345e-05, 6.0805999999996585e-05, 6.1027999999997695e-05, 6.112500000000215e-05, 6.0944000000000276e-05, 6.0930000000000706e-05, 6.091700000000061e-05, 6.127800000000141e-05, 6.0957999999999846e-05, 6.123599999999924e-05, 6.0999999999998555e-05, 6.176399999999888e-05, 6.1000000000002025e-05, 6.086100000000233e-05, 6.167999999999799e-05, 6.0999999999998555e-05, 6.115300000000129e-05, 6.176400000000234e-05, 6.126399999999838e-05, 6.12080000000001e-05, 6.126399999999838e-05, 6.102699999999822e-05, 6.1028000000001165e-05, 6.084699999999929e-05, 6.17499999999993e-05, 6.0847999999998764e-05, 6.122299999999914e-05, 6.0819999999999624e-05, 6.0778000000000915e-05, 6.172300000000311e-05, 6.097299999999889e-05, 6.12080000000001e-05, 6.17080000000006e-05, 6.0834000000002664e-05, 6.0972000000002885e-05, 6.104099999999779e-05, 6.111099999999911e-05, 6.0999999999998555e-05, 6.123599999999924e-05, 6.0944000000000276e-05, 6.125000000000227e-05, 6.112500000000215e-05, 6.081900000000015e-05, 6.0971999999999416e-05]</msg>
<status status="PASS" starttime="20201030 11:52:01.050" endtime="20201030 11:52:01.053"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.045" endtime="20201030 11:52:01.053"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:01.057" endtime="20201030 11:52:01.077"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.056" endtime="20201030 11:52:01.078"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.054" endtime="20201030 11:52:01.078"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.697" endtime="20201030 11:52:01.078"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.696" endtime="20201030 11:52:01.078"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:01.087" endtime="20201030 11:52:01.104"></status>
</kw>
<msg timestamp="20201030 11:52:01.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:01.085" endtime="20201030 11:52:01.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:01.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:01.106" endtime="20201030 11:52:01.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:01.108" endtime="20201030 11:52:01.110"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.083" endtime="20201030 11:52:01.111"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.081" endtime="20201030 11:52:01.111"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:01.118" endtime="20201030 11:52:01.403"></status>
</kw>
<msg timestamp="20201030 11:52:01.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023144764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023206597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:01.116" endtime="20201030 11:52:01.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:01.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023144764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023206597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:01.408" endtime="20201030 11:52:01.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:01.416" endtime="20201030 11:52:01.418"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.113" endtime="20201030 11:52:01.419"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.112" endtime="20201030 11:52:01.419"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:01.423" level="INFO">${RESULT} = [{'diff': 6.183299999999725e-05}, {'diff': 6.184700000000029e-05}, {'diff': 6.184700000000029e-05}, {'diff': 6.188900000000247e-05}, {'diff': 6.173599999999974e-05}, {'diff': 6.199999999999956e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:01.420" endtime="20201030 11:52:01.423"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:01.427" level="INFO">${ACCURACY} = {'diff': [6.183299999999725e-05, 6.184700000000029e-05, 6.184700000000029e-05, 6.188900000000247e-05, 6.173599999999974e-05, 6.199999999999956e-05, 6.176399999999888e-05, 6.212499999999968e-05, 6.2723...</msg>
<status status="PASS" starttime="20201030 11:52:01.424" endtime="20201030 11:52:01.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:01.432" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201030 11:52:01.431" endtime="20201030 11:52:01.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:01.434" level="INFO">VALUE: [6.183299999999725e-05, 6.184700000000029e-05, 6.184700000000029e-05, 6.188900000000247e-05, 6.173599999999974e-05, 6.199999999999956e-05, 6.176399999999888e-05, 6.212499999999968e-05, 6.272300000000064e-05, 6.270900000000107e-05, 6.216700000000186e-05, 6.177799999999845e-05, 6.220900000000057e-05, 6.222300000000014e-05, 6.27500000000003e-05, 6.216699999999839e-05, 6.208300000000097e-05, 6.207000000000087e-05, 6.216699999999839e-05, 6.216600000000239e-05, 6.183299999999725e-05, 6.219400000000153e-05, 6.211100000000011e-05, 6.273600000000074e-05, 6.209700000000054e-05, 6.179100000000201e-05, 6.217999999999849e-05, 6.216699999999839e-05, 6.22499999999998e-05, 6.211100000000011e-05, 6.177800000000191e-05, 6.22080000000011e-05, 6.186099999999986e-05, 6.270799999999813e-05, 6.216700000000186e-05, 6.209700000000054e-05, 6.213899999999925e-05, 6.182000000000062e-05, 6.211100000000011e-05, 6.273600000000074e-05, 6.22499999999998e-05, 6.218100000000143e-05, 6.193099999999771e-05, 6.218100000000143e-05, 6.180600000000105e-05, 6.212499999999968e-05, 6.208300000000097e-05, 6.277799999999945e-05, 6.270799999999813e-05, 6.201399999999913e-05]</msg>
<status status="PASS" starttime="20201030 11:52:01.433" endtime="20201030 11:52:01.436"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.428" endtime="20201030 11:52:01.436"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:01.440" endtime="20201030 11:52:01.459"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.438" endtime="20201030 11:52:01.460"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.437" endtime="20201030 11:52:01.460"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.079" endtime="20201030 11:52:01.460"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.079" endtime="20201030 11:52:01.461"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:01.469" endtime="20201030 11:52:01.487"></status>
</kw>
<msg timestamp="20201030 11:52:01.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:01.468" endtime="20201030 11:52:01.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:01.490" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:01.489" endtime="20201030 11:52:01.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:01.491" endtime="20201030 11:52:01.493"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.465" endtime="20201030 11:52:01.493"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.463" endtime="20201030 11:52:01.494"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:01.500" endtime="20201030 11:52:01.787"></status>
</kw>
<msg timestamp="20201030 11:52:01.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022347056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022410181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:01.499" endtime="20201030 11:52:01.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:01.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022347056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022410181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:01.791" endtime="20201030 11:52:01.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:01.800" endtime="20201030 11:52:01.801"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.496" endtime="20201030 11:52:01.802"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.494" endtime="20201030 11:52:01.802"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:01.806" level="INFO">${RESULT} = [{'diff': 6.312500000000068e-05}, {'diff': 6.311100000000111e-05}, {'diff': 6.294500000000175e-05}, {'diff': 6.37219999999987e-05}, {'diff': 6.276399999999988e-05}, {'diff': 6.32500000000008e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:52:01.803" endtime="20201030 11:52:01.806"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:01.811" level="INFO">${ACCURACY} = {'diff': [6.312500000000068e-05, 6.311100000000111e-05, 6.294500000000175e-05, 6.37219999999987e-05, 6.276399999999988e-05, 6.32500000000008e-05, 6.293099999999871e-05, 6.318099999999896e-05, 6.301400...</msg>
<status status="PASS" starttime="20201030 11:52:01.807" endtime="20201030 11:52:01.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:01.816" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201030 11:52:01.815" endtime="20201030 11:52:01.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:01.818" level="INFO">VALUE: [6.312500000000068e-05, 6.311100000000111e-05, 6.294500000000175e-05, 6.37219999999987e-05, 6.276399999999988e-05, 6.32500000000008e-05, 6.293099999999871e-05, 6.318099999999896e-05, 6.301400000000013e-05, 6.323700000000071e-05, 6.291599999999967e-05, 6.309699999999807e-05, 6.29439999999988e-05, 6.327799999999995e-05, 6.313900000000025e-05, 6.324999999999734e-05, 6.301400000000013e-05, 6.327799999999995e-05, 6.367999999999999e-05, 6.30279999999997e-05, 6.37500000000013e-05, 6.322200000000167e-05, 6.300000000000056e-05, 6.316699999999939e-05, 6.37219999999987e-05, 6.351400000000063e-05, 6.2889e-05, 6.326400000000038e-05, 6.315299999999982e-05, 6.291699999999914e-05, 6.318099999999896e-05, 6.311099999999764e-05, 6.326400000000038e-05, 6.308400000000144e-05, 6.281900000000215e-05, 6.294500000000175e-05, 6.280599999999859e-05, 6.281899999999868e-05, 6.37219999999987e-05, 6.369399999999956e-05, 6.316600000000339e-05, 6.284700000000129e-05, 6.316699999999939e-05, 6.30279999999997e-05, 6.30690000000024e-05, 6.298600000000099e-05, 6.324999999999734e-05, 6.311099999999764e-05, 6.32500000000008e-05, 6.312500000000068e-05]</msg>
<status status="PASS" starttime="20201030 11:52:01.817" endtime="20201030 11:52:01.819"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.812" endtime="20201030 11:52:01.820"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:01.823" endtime="20201030 11:52:01.843"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.822" endtime="20201030 11:52:01.843"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.821" endtime="20201030 11:52:01.844"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.461" endtime="20201030 11:52:01.844"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.461" endtime="20201030 11:52:01.844"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:01.855" endtime="20201030 11:52:01.873"></status>
</kw>
<msg timestamp="20201030 11:52:01.873" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:01.852" endtime="20201030 11:52:01.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:01.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:01.875" endtime="20201030 11:52:01.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:01.880" endtime="20201030 11:52:01.883"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.849" endtime="20201030 11:52:01.885"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.846" endtime="20201030 11:52:01.886"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:01.895" endtime="20201030 11:52:02.183"></status>
</kw>
<msg timestamp="20201030 11:52:02.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024827569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024891319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:01.892" endtime="20201030 11:52:02.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:02.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024827569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024891319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:02.187" endtime="20201030 11:52:02.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:02.195" endtime="20201030 11:52:02.197"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.889" endtime="20201030 11:52:02.198"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.886" endtime="20201030 11:52:02.198"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:02.202" level="INFO">${RESULT} = [{'diff': 6.374999999999784e-05}, {'diff': 6.399999999999809e-05}, {'diff': 6.379099999999707e-05}, {'diff': 6.420799999999963e-05}, {'diff': 6.42080000000031e-05}, {'diff': 6.413899999999778e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:02.199" endtime="20201030 11:52:02.202"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:02.206" level="INFO">${ACCURACY} = {'diff': [6.374999999999784e-05, 6.399999999999809e-05, 6.379099999999707e-05, 6.420799999999963e-05, 6.42080000000031e-05, 6.413899999999778e-05, 6.397199999999895e-05, 6.47219999999997e-05, 6.412499...</msg>
<status status="PASS" starttime="20201030 11:52:02.203" endtime="20201030 11:52:02.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:02.211" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201030 11:52:02.209" endtime="20201030 11:52:02.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:02.213" level="INFO">VALUE: [6.374999999999784e-05, 6.399999999999809e-05, 6.379099999999707e-05, 6.420799999999963e-05, 6.42080000000031e-05, 6.413899999999778e-05, 6.397199999999895e-05, 6.47219999999997e-05, 6.412499999999821e-05, 6.405500000000036e-05, 6.474999999999884e-05, 6.381899999999968e-05, 6.400000000000156e-05, 6.420799999999963e-05, 6.405599999999984e-05, 6.387500000000143e-05, 6.387499999999796e-05, 6.42219999999992e-05, 6.379200000000002e-05, 6.423599999999877e-05, 6.395899999999885e-05, 6.427800000000095e-05, 6.409799999999855e-05, 6.42089999999991e-05, 6.405500000000036e-05, 6.386199999999786e-05, 6.387500000000143e-05, 6.476299999999893e-05, 6.39020000000011e-05, 6.473600000000274e-05, 6.418000000000049e-05, 6.419400000000006e-05, 6.3889000000001e-05, 6.408399999999898e-05, 6.404200000000027e-05, 6.480600000000059e-05, 6.409699999999907e-05, 6.47639999999984e-05, 6.405599999999984e-05, 6.406899999999993e-05, 6.386099999999839e-05, 6.391700000000014e-05, 6.47219999999997e-05, 6.42219999999992e-05, 6.419499999999953e-05, 6.416700000000039e-05, 6.379200000000002e-05, 6.399999999999809e-05, 6.469500000000003e-05, 6.391600000000067e-05]</msg>
<status status="PASS" starttime="20201030 11:52:02.212" endtime="20201030 11:52:02.214"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.207" endtime="20201030 11:52:02.214"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:02.218" endtime="20201030 11:52:02.238"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.216" endtime="20201030 11:52:02.238"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.215" endtime="20201030 11:52:02.238"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.845" endtime="20201030 11:52:02.239"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.844" endtime="20201030 11:52:02.239"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:02.247" endtime="20201030 11:52:02.268"></status>
</kw>
<msg timestamp="20201030 11:52:02.269" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:02.246" endtime="20201030 11:52:02.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:02.271" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:02.270" endtime="20201030 11:52:02.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:02.272" endtime="20201030 11:52:02.274"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.243" endtime="20201030 11:52:02.274"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.241" endtime="20201030 11:52:02.275"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:02.281" endtime="20201030 11:52:02.579"></status>
</kw>
<msg timestamp="20201030 11:52:02.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025423958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025489139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:02.280" endtime="20201030 11:52:02.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:02.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025423958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025489139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:02.583" endtime="20201030 11:52:02.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:02.592" endtime="20201030 11:52:02.593"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.277" endtime="20201030 11:52:02.594"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.275" endtime="20201030 11:52:02.594"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:02.598" level="INFO">${RESULT} = [{'diff': 6.518100000000096e-05}, {'diff': 6.493100000000071e-05}, {'diff': 6.573600000000027e-05}, {'diff': 6.513900000000225e-05}, {'diff': 6.516699999999792e-05}, {'diff': 6.483399999999973e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:02.595" endtime="20201030 11:52:02.598"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:02.602" level="INFO">${ACCURACY} = {'diff': [6.518100000000096e-05, 6.493100000000071e-05, 6.573600000000027e-05, 6.513900000000225e-05, 6.516699999999792e-05, 6.483399999999973e-05, 6.576400000000288e-05, 6.519500000000053e-05, 6.5209...</msg>
<status status="PASS" starttime="20201030 11:52:02.599" endtime="20201030 11:52:02.602"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:02.607" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201030 11:52:02.606" endtime="20201030 11:52:02.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:02.609" level="INFO">VALUE: [6.518100000000096e-05, 6.493100000000071e-05, 6.573600000000027e-05, 6.513900000000225e-05, 6.516699999999792e-05, 6.483399999999973e-05, 6.576400000000288e-05, 6.519500000000053e-05, 6.52090000000001e-05, 6.498700000000246e-05, 6.494399999999734e-05, 6.524999999999934e-05, 6.573600000000027e-05, 6.519399999999759e-05, 6.479100000000154e-05, 6.506900000000093e-05, 6.524999999999934e-05, 6.486100000000286e-05, 6.512499999999921e-05, 6.505500000000136e-05, 6.487499999999896e-05, 6.486099999999939e-05, 6.481900000000068e-05, 6.494500000000028e-05, 6.480600000000059e-05, 6.523599999999977e-05, 6.52090000000001e-05, 6.511099999999964e-05, 6.497199999999995e-05, 6.57090000000006e-05, 6.482000000000016e-05, 6.548600000000002e-05, 6.526400000000238e-05, 6.52500000000028e-05, 6.523599999999977e-05, 6.524999999999934e-05, 6.583300000000125e-05, 6.511099999999964e-05, 6.480500000000111e-05, 6.487500000000243e-05, 6.49159999999982e-05, 6.493000000000124e-05, 6.519400000000106e-05, 6.509700000000007e-05, 6.518000000000149e-05, 6.493100000000071e-05, 6.519400000000106e-05, 6.502799999999823e-05, 6.491699999999767e-05, 6.57359999999968e-05]</msg>
<status status="PASS" starttime="20201030 11:52:02.608" endtime="20201030 11:52:02.617"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.603" endtime="20201030 11:52:02.618"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:02.622" endtime="20201030 11:52:02.641"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.620" endtime="20201030 11:52:02.641"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.619" endtime="20201030 11:52:02.642"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.240" endtime="20201030 11:52:02.642"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.239" endtime="20201030 11:52:02.642"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:02.651" endtime="20201030 11:52:02.668"></status>
</kw>
<msg timestamp="20201030 11:52:02.668" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:02.649" endtime="20201030 11:52:02.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:02.671" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:02.669" endtime="20201030 11:52:02.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:02.672" endtime="20201030 11:52:02.673"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.647" endtime="20201030 11:52:02.674"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.645" endtime="20201030 11:52:02.674"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:02.681" endtime="20201030 11:52:02.966"></status>
</kw>
<msg timestamp="20201030 11:52:02.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021690069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02175625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:52:02.679" endtime="20201030 11:52:02.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:02.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021690069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02175625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:52:02.970" endtime="20201030 11:52:02.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:02.978" endtime="20201030 11:52:02.980"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.677" endtime="20201030 11:52:02.980"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.675" endtime="20201030 11:52:02.981"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:02.985" level="INFO">${RESULT} = [{'diff': 6.618100000000196e-05}, {'diff': 6.666699999999942e-05}, {'diff': 6.62220000000012e-05}, {'diff': 6.598600000000052e-05}, {'diff': 6.580599999999812e-05}, {'diff': 6.579199999999855e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:02.981" endtime="20201030 11:52:02.985"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:02.990" level="INFO">${ACCURACY} = {'diff': [6.618100000000196e-05, 6.666699999999942e-05, 6.62220000000012e-05, 6.598600000000052e-05, 6.580599999999812e-05, 6.579199999999855e-05, 6.605599999999837e-05, 6.597199999999748e-05, 6.59720...</msg>
<status status="PASS" starttime="20201030 11:52:02.986" endtime="20201030 11:52:02.990"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:02.994" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201030 11:52:02.993" endtime="20201030 11:52:02.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:02.996" level="INFO">VALUE: [6.618100000000196e-05, 6.666699999999942e-05, 6.62220000000012e-05, 6.598600000000052e-05, 6.580599999999812e-05, 6.579199999999855e-05, 6.605599999999837e-05, 6.597199999999748e-05, 6.597200000000095e-05, 6.581999999999769e-05, 6.669499999999856e-05, 6.605600000000184e-05, 6.579199999999855e-05, 6.62220000000012e-05, 6.586100000000039e-05, 6.59440000000018e-05, 6.67220000000017e-05, 6.602699999999975e-05, 6.604100000000279e-05, 6.592999999999877e-05, 6.58480000000003e-05, 6.579199999999855e-05, 6.670799999999866e-05, 6.62639999999999e-05, 6.675000000000084e-05, 6.652799999999973e-05, 6.59440000000018e-05, 6.654099999999982e-05, 6.67640000000004e-05, 6.594500000000128e-05, 6.62220000000012e-05, 6.600000000000009e-05, 6.60700000000014e-05, 6.612500000000021e-05, 6.57639999999994e-05, 6.59029999999991e-05, 6.609800000000055e-05, 6.615299999999935e-05, 6.580600000000159e-05, 6.590199999999963e-05, 6.675000000000084e-05, 6.615200000000335e-05, 6.611100000000064e-05, 6.590199999999963e-05, 6.620800000000163e-05, 6.625000000000034e-05, 6.677799999999998e-05, 6.62639999999999e-05, 6.612500000000021e-05, 6.612500000000021e-05]</msg>
<status status="PASS" starttime="20201030 11:52:02.995" endtime="20201030 11:52:02.997"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.990" endtime="20201030 11:52:02.998"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:03.001" endtime="20201030 11:52:03.021"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.000" endtime="20201030 11:52:03.021"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.999" endtime="20201030 11:52:03.022"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.643" endtime="20201030 11:52:03.022"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.642" endtime="20201030 11:52:03.022"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:03.031" endtime="20201030 11:52:03.047"></status>
</kw>
<msg timestamp="20201030 11:52:03.048" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:03.029" endtime="20201030 11:52:03.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:03.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:03.049" endtime="20201030 11:52:03.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:03.051" endtime="20201030 11:52:03.053"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.027" endtime="20201030 11:52:03.053"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.025" endtime="20201030 11:52:03.054"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:03.060" endtime="20201030 11:52:03.362"></status>
</kw>
<msg timestamp="20201030 11:52:03.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021682833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021749667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:03.059" endtime="20201030 11:52:03.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:03.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021682833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021749667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:03.367" endtime="20201030 11:52:03.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:03.375" endtime="20201030 11:52:03.377"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.056" endtime="20201030 11:52:03.378"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.055" endtime="20201030 11:52:03.378"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:03.382" level="INFO">${RESULT} = [{'diff': 6.683400000000173e-05}, {'diff': 6.720799999999916e-05}, {'diff': 6.70969999999986e-05}, {'diff': 6.768099999999999e-05}, {'diff': 6.724999999999787e-05}, {'diff': 6.701299999999771e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:03.379" endtime="20201030 11:52:03.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:03.386" level="INFO">${ACCURACY} = {'diff': [6.683400000000173e-05, 6.720799999999916e-05, 6.70969999999986e-05, 6.768099999999999e-05, 6.724999999999787e-05, 6.701299999999771e-05, 6.716600000000045e-05, 6.724999999999787e-05, 6.67910...</msg>
<status status="PASS" starttime="20201030 11:52:03.383" endtime="20201030 11:52:03.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:03.391" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201030 11:52:03.390" endtime="20201030 11:52:03.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:03.393" level="INFO">VALUE: [6.683400000000173e-05, 6.720799999999916e-05, 6.70969999999986e-05, 6.768099999999999e-05, 6.724999999999787e-05, 6.701299999999771e-05, 6.716600000000045e-05, 6.724999999999787e-05, 6.679100000000007e-05, 6.702700000000075e-05, 6.716600000000045e-05, 6.695799999999891e-05, 6.683299999999878e-05, 6.680600000000259e-05, 6.701400000000066e-05, 6.697200000000195e-05, 6.722199999999873e-05, 6.768099999999999e-05, 6.713900000000078e-05, 6.776399999999794e-05, 6.691699999999967e-05, 6.69030000000001e-05, 6.705599999999937e-05, 6.680600000000259e-05, 6.677799999999998e-05, 6.766699999999695e-05, 6.705499999999989e-05, 6.715300000000035e-05, 6.716699999999992e-05, 6.72640000000009e-05, 6.684699999999835e-05, 6.701399999999719e-05, 6.695800000000238e-05, 6.723600000000177e-05, 6.702800000000023e-05, 6.687500000000096e-05, 6.687500000000096e-05, 6.686099999999792e-05, 6.774999999999837e-05, 6.695799999999891e-05, 6.718100000000296e-05, 6.70830000000025e-05, 6.69030000000001e-05, 6.681999999999869e-05, 6.694499999999881e-05, 6.716699999999992e-05, 6.698599999999805e-05, 6.722300000000167e-05, 6.708400000000198e-05, 6.686099999999792e-05]</msg>
<status status="PASS" starttime="20201030 11:52:03.392" endtime="20201030 11:52:03.394"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.387" endtime="20201030 11:52:03.394"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:03.398" endtime="20201030 11:52:03.417"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.397" endtime="20201030 11:52:03.418"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.395" endtime="20201030 11:52:03.418"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.023" endtime="20201030 11:52:03.419"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.022" endtime="20201030 11:52:03.419"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:03.428" endtime="20201030 11:52:03.445"></status>
</kw>
<msg timestamp="20201030 11:52:03.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:03.426" endtime="20201030 11:52:03.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:03.448" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:03.447" endtime="20201030 11:52:03.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:03.449" endtime="20201030 11:52:03.451"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.423" endtime="20201030 11:52:03.451"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.421" endtime="20201030 11:52:03.452"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:03.458" endtime="20201030 11:52:03.745"></status>
</kw>
<msg timestamp="20201030 11:52:03.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022974708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023043056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:03.457" endtime="20201030 11:52:03.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:03.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022974708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023043056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:03.749" endtime="20201030 11:52:03.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:03.757" endtime="20201030 11:52:03.759"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.454" endtime="20201030 11:52:03.759"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.452" endtime="20201030 11:52:03.760"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:03.764" level="INFO">${RESULT} = [{'diff': 6.834799999999933e-05}, {'diff': 6.78619999999984e-05}, {'diff': 6.812500000000221e-05}, {'diff': 6.818100000000049e-05}, {'diff': 6.877699999999903e-05}, {'diff': 6.819500000000006e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:03.761" endtime="20201030 11:52:03.764"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:03.768" level="INFO">${ACCURACY} = {'diff': [6.834799999999933e-05, 6.78619999999984e-05, 6.812500000000221e-05, 6.818100000000049e-05, 6.877699999999903e-05, 6.819500000000006e-05, 6.830499999999767e-05, 6.830500000000114e-05, 6.79300...</msg>
<status status="PASS" starttime="20201030 11:52:03.765" endtime="20201030 11:52:03.768"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:03.772" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201030 11:52:03.771" endtime="20201030 11:52:03.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:03.775" level="INFO">VALUE: [6.834799999999933e-05, 6.78619999999984e-05, 6.812500000000221e-05, 6.818100000000049e-05, 6.877699999999903e-05, 6.819500000000006e-05, 6.830499999999767e-05, 6.830500000000114e-05, 6.793000000000077e-05, 6.820800000000016e-05, 6.781900000000021e-05, 6.808300000000003e-05, 6.783299999999978e-05, 6.805500000000089e-05, 6.825000000000234e-05, 6.779200000000055e-05, 6.816700000000092e-05, 6.779199999999708e-05, 6.793100000000024e-05, 6.805600000000037e-05, 6.80969999999996e-05, 6.80420000000008e-05, 6.791700000000067e-05, 6.795899999999938e-05, 6.79169999999972e-05, 6.87229999999997e-05, 6.874999999999937e-05, 6.874999999999937e-05, 6.797299999999895e-05, 6.802800000000123e-05, 6.811099999999917e-05, 6.788799999999859e-05, 6.877799999999851e-05, 6.826399999999844e-05, 6.787500000000196e-05, 6.794499999999981e-05, 6.819400000000059e-05, 6.80969999999996e-05, 6.799999999999862e-05, 6.795900000000285e-05, 6.795799999999991e-05, 6.801400000000166e-05, 6.87909999999986e-05, 6.879199999999808e-05, 6.79030000000011e-05, 6.780600000000012e-05, 6.79030000000011e-05, 6.811100000000264e-05, 6.799999999999862e-05, 6.87229999999997e-05]</msg>
<status status="PASS" starttime="20201030 11:52:03.774" endtime="20201030 11:52:03.777"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.769" endtime="20201030 11:52:03.777"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:03.781" endtime="20201030 11:52:03.800"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.779" endtime="20201030 11:52:03.801"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.778" endtime="20201030 11:52:03.801"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.420" endtime="20201030 11:52:03.801"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.419" endtime="20201030 11:52:03.802"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:03.810" endtime="20201030 11:52:03.828"></status>
</kw>
<msg timestamp="20201030 11:52:03.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:03.809" endtime="20201030 11:52:03.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:03.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:03.830" endtime="20201030 11:52:03.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:03.832" endtime="20201030 11:52:03.834"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.806" endtime="20201030 11:52:03.834"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.804" endtime="20201030 11:52:03.835"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:03.841" endtime="20201030 11:52:04.128"></status>
</kw>
<msg timestamp="20201030 11:52:04.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022412028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022481736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:03.840" endtime="20201030 11:52:04.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:04.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022412028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022481736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:04.132" endtime="20201030 11:52:04.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:04.141" endtime="20201030 11:52:04.142"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.837" endtime="20201030 11:52:04.143"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.835" endtime="20201030 11:52:04.143"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:04.147" level="INFO">${RESULT} = [{'diff': 6.970799999999819e-05}, {'diff': 6.916700000000192e-05}, {'diff': 6.904199999999833e-05}, {'diff': 6.897200000000048e-05}, {'diff': 6.90970000000006e-05}, {'diff': 6.902799999999876e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:04.144" endtime="20201030 11:52:04.147"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:04.152" level="INFO">${ACCURACY} = {'diff': [6.970799999999819e-05, 6.916700000000192e-05, 6.904199999999833e-05, 6.897200000000048e-05, 6.90970000000006e-05, 6.902799999999876e-05, 6.969500000000156e-05, 6.902799999999876e-05, 6.88340...</msg>
<status status="PASS" starttime="20201030 11:52:04.148" endtime="20201030 11:52:04.152"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:04.157" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201030 11:52:04.156" endtime="20201030 11:52:04.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:04.159" level="INFO">VALUE: [6.970799999999819e-05, 6.916700000000192e-05, 6.904199999999833e-05, 6.897200000000048e-05, 6.90970000000006e-05, 6.902799999999876e-05, 6.969500000000156e-05, 6.902799999999876e-05, 6.883400000000026e-05, 6.884700000000035e-05, 6.902800000000223e-05, 6.926399999999944e-05, 6.884799999999983e-05, 6.90970000000006e-05, 6.926299999999996e-05, 6.891700000000167e-05, 6.901299999999971e-05, 6.912499999999974e-05, 6.87909999999986e-05, 6.912499999999974e-05, 6.890199999999916e-05, 6.87359999999998e-05, 6.902800000000223e-05, 6.897200000000048e-05, 6.881900000000121e-05, 6.89299999999983e-05, 6.911100000000017e-05, 6.920800000000116e-05, 6.912499999999974e-05, 6.975000000000037e-05, 6.972200000000123e-05, 6.925000000000334e-05, 6.90970000000006e-05, 6.915300000000235e-05, 6.888899999999906e-05, 6.893100000000124e-05, 6.904099999999885e-05, 6.891700000000167e-05, 6.909699999999713e-05, 6.902799999999876e-05, 6.922199999999726e-05, 6.897200000000048e-05, 6.911100000000017e-05, 6.976399999999994e-05, 6.915199999999941e-05, 6.906900000000146e-05, 6.969399999999862e-05, 6.886099999999992e-05, 6.922200000000073e-05, 6.912499999999974e-05]</msg>
<status status="PASS" starttime="20201030 11:52:04.158" endtime="20201030 11:52:04.160"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.153" endtime="20201030 11:52:04.161"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:04.164" endtime="20201030 11:52:04.184"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.163" endtime="20201030 11:52:04.184"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.162" endtime="20201030 11:52:04.185"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.803" endtime="20201030 11:52:04.185"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.802" endtime="20201030 11:52:04.185"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:04.194" endtime="20201030 11:52:04.212"></status>
</kw>
<msg timestamp="20201030 11:52:04.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:04.192" endtime="20201030 11:52:04.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:04.215" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:04.213" endtime="20201030 11:52:04.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:04.216" endtime="20201030 11:52:04.217"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.190" endtime="20201030 11:52:04.218"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.188" endtime="20201030 11:52:04.218"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:04.225" endtime="20201030 11:52:04.511"></status>
</kw>
<msg timestamp="20201030 11:52:04.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021954292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022024722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:04.223" endtime="20201030 11:52:04.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:04.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021954292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022024722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:04.516" endtime="20201030 11:52:04.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:04.524" endtime="20201030 11:52:04.526"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.221" endtime="20201030 11:52:04.526"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.219" endtime="20201030 11:52:04.527"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:04.531" level="INFO">${RESULT} = [{'diff': 7.04299999999998e-05}, {'diff': 7.025000000000087e-05}, {'diff': 7.023599999999783e-05}, {'diff': 7.005499999999942e-05}, {'diff': 7.072199999999876e-05}, {'diff': 7.075000000000137e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:04.528" endtime="20201030 11:52:04.531"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:04.535" level="INFO">${ACCURACY} = {'diff': [7.04299999999998e-05, 7.025000000000087e-05, 7.023599999999783e-05, 7.005499999999942e-05, 7.072199999999876e-05, 7.075000000000137e-05, 7.026400000000044e-05, 6.995799999999844e-05, 7.00000...</msg>
<status status="PASS" starttime="20201030 11:52:04.532" endtime="20201030 11:52:04.535"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:04.539" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201030 11:52:04.538" endtime="20201030 11:52:04.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:04.542" level="INFO">VALUE: [7.04299999999998e-05, 7.025000000000087e-05, 7.023599999999783e-05, 7.005499999999942e-05, 7.072199999999876e-05, 7.075000000000137e-05, 7.026400000000044e-05, 6.995799999999844e-05, 7.000000000000062e-05, 7.00970000000016e-05, 7.002799999999976e-05, 7.026399999999697e-05, 7.016699999999945e-05, 6.981999999999822e-05, 6.990299999999963e-05, 7.027800000000001e-05, 6.983400000000126e-05, 7.016599999999998e-05, 7.002700000000028e-05, 7.00559999999989e-05, 7.072200000000223e-05, 7.015200000000041e-05, 7.006899999999899e-05, 7.016599999999998e-05, 7.068000000000005e-05, 7.076400000000094e-05, 7.045799999999894e-05, 6.977799999999951e-05, 7.002800000000323e-05, 7.016699999999945e-05, 7.022200000000173e-05, 7.001400000000019e-05, 6.979200000000255e-05, 7.075000000000137e-05, 6.987500000000049e-05, 6.994499999999834e-05, 7.011200000000065e-05, 6.990299999999963e-05, 7.027800000000001e-05, 6.995900000000138e-05, 7.072299999999823e-05, 7.072299999999823e-05, 6.983400000000126e-05, 7.013900000000031e-05, 6.998600000000105e-05, 6.986100000000092e-05, 7.073599999999833e-05, 6.998600000000105e-05, 6.99299999999993e-05, 7.022199999999826e-05]</msg>
<status status="PASS" starttime="20201030 11:52:04.541" endtime="20201030 11:52:04.543"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.536" endtime="20201030 11:52:04.543"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:04.547" endtime="20201030 11:52:04.566"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.546" endtime="20201030 11:52:04.567"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.544" endtime="20201030 11:52:04.567"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.186" endtime="20201030 11:52:04.568"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.185" endtime="20201030 11:52:04.568"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:04.577" endtime="20201030 11:52:04.595"></status>
</kw>
<msg timestamp="20201030 11:52:04.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:04.575" endtime="20201030 11:52:04.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:04.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:04.597" endtime="20201030 11:52:04.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:04.599" endtime="20201030 11:52:04.601"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.572" endtime="20201030 11:52:04.602"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.570" endtime="20201030 11:52:04.602"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:04.609" endtime="20201030 11:52:04.895"></status>
</kw>
<msg timestamp="20201030 11:52:04.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023347417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023418222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:04.607" endtime="20201030 11:52:04.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:04.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023347417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023418222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:04.899" endtime="20201030 11:52:04.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:04.907" endtime="20201030 11:52:04.909"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.604" endtime="20201030 11:52:04.909"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.603" endtime="20201030 11:52:04.910"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:04.914" level="INFO">${RESULT} = [{'diff': 7.080500000000017e-05}, {'diff': 7.099999999999815e-05}, {'diff': 7.097199999999901e-05}, {'diff': 7.118100000000002e-05}, {'diff': 7.083299999999931e-05}, {'diff': 7.088899999999759e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:04.911" endtime="20201030 11:52:04.914"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:04.918" level="INFO">${ACCURACY} = {'diff': [7.080500000000017e-05, 7.099999999999815e-05, 7.097199999999901e-05, 7.118100000000002e-05, 7.083299999999931e-05, 7.088899999999759e-05, 7.094499999999934e-05, 7.118100000000002e-05, 7.0778...</msg>
<status status="PASS" starttime="20201030 11:52:04.915" endtime="20201030 11:52:04.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:04.922" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201030 11:52:04.921" endtime="20201030 11:52:04.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:04.925" level="INFO">VALUE: [7.080500000000017e-05, 7.099999999999815e-05, 7.097199999999901e-05, 7.118100000000002e-05, 7.083299999999931e-05, 7.088899999999759e-05, 7.094499999999934e-05, 7.118100000000002e-05, 7.077800000000051e-05, 7.09170000000002e-05, 7.080599999999965e-05, 7.10559999999999e-05, 7.167999999999758e-05, 7.17499999999989e-05, 7.170900000000313e-05, 7.172299999999923e-05, 7.116600000000098e-05, 7.086099999999845e-05, 7.1069e-05, 7.12499999999984e-05, 7.07910000000006e-05, 7.101400000000119e-05, 7.105500000000042e-05, 7.119400000000012e-05, 7.105500000000042e-05, 7.079200000000008e-05, 7.102800000000076e-05, 7.098599999999858e-05, 7.097199999999901e-05, 7.126399999999797e-05, 7.152799999999779e-05, 7.123599999999883e-05, 7.120899999999916e-05, 7.080599999999965e-05, 7.101400000000119e-05, 7.17499999999989e-05, 7.083399999999879e-05, 7.090300000000063e-05, 7.177700000000203e-05, 7.094399999999987e-05, 7.115200000000141e-05, 7.091600000000073e-05, 7.115200000000141e-05, 7.115300000000088e-05, 7.098599999999858e-05, 7.097200000000248e-05, 7.108300000000303e-05, 7.083299999999931e-05, 7.126400000000144e-05, 7.104200000000033e-05]</msg>
<status status="PASS" starttime="20201030 11:52:04.924" endtime="20201030 11:52:04.927"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.919" endtime="20201030 11:52:04.927"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:04.931" endtime="20201030 11:52:04.950"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.929" endtime="20201030 11:52:04.951"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.928" endtime="20201030 11:52:04.951"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.569" endtime="20201030 11:52:04.951"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.568" endtime="20201030 11:52:04.952"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:04.960" endtime="20201030 11:52:04.979"></status>
</kw>
<msg timestamp="20201030 11:52:04.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:04.959" endtime="20201030 11:52:04.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:04.982" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:04.980" endtime="20201030 11:52:04.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:04.983" endtime="20201030 11:52:04.985"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.956" endtime="20201030 11:52:04.985"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.954" endtime="20201030 11:52:04.986"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:04.992" endtime="20201030 11:52:05.278"></status>
</kw>
<msg timestamp="20201030 11:52:05.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022332514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022404833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:04.990" endtime="20201030 11:52:05.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:05.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022332514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022404833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:05.282" endtime="20201030 11:52:05.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:05.291" endtime="20201030 11:52:05.292"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.988" endtime="20201030 11:52:05.293"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.986" endtime="20201030 11:52:05.293"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:05.297" level="INFO">${RESULT} = [{'diff': 7.231899999999777e-05}, {'diff': 7.269400000000162e-05}, {'diff': 7.27499999999999e-05}, {'diff': 7.209700000000013e-05}, {'diff': 7.181900000000074e-05}, {'diff': 7.205499999999795e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:05.294" endtime="20201030 11:52:05.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:05.302" level="INFO">${ACCURACY} = {'diff': [7.231899999999777e-05, 7.269400000000162e-05, 7.27499999999999e-05, 7.209700000000013e-05, 7.181900000000074e-05, 7.205499999999795e-05, 7.218100000000102e-05, 7.215300000000188e-05, 7.19999...</msg>
<status status="PASS" starttime="20201030 11:52:05.298" endtime="20201030 11:52:05.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:05.307" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201030 11:52:05.306" endtime="20201030 11:52:05.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:05.309" level="INFO">VALUE: [7.231899999999777e-05, 7.269400000000162e-05, 7.27499999999999e-05, 7.209700000000013e-05, 7.181900000000074e-05, 7.205499999999795e-05, 7.218100000000102e-05, 7.215300000000188e-05, 7.199999999999915e-05, 7.272200000000076e-05, 7.186099999999945e-05, 7.190299999999816e-05, 7.19170000000012e-05, 7.220800000000069e-05, 7.177799999999804e-05, 7.199999999999915e-05, 7.211199999999918e-05, 7.198600000000305e-05, 7.218099999999755e-05, 7.180600000000065e-05, 7.188900000000206e-05, 7.204199999999786e-05, 7.20560000000009e-05, 7.213800000000284e-05, 7.213799999999937e-05, 7.206899999999752e-05, 7.186099999999945e-05, 7.216700000000145e-05, 7.21109999999997e-05, 7.19300000000013e-05, 7.179200000000108e-05, 7.188900000000206e-05, 7.272200000000076e-05, 7.273600000000033e-05, 7.216700000000145e-05, 7.215199999999894e-05, 7.276399999999947e-05, 7.272199999999729e-05, 7.22499999999994e-05, 7.227799999999854e-05, 7.193100000000077e-05, 7.27499999999999e-05, 7.218100000000102e-05, 7.204200000000133e-05, 7.226400000000244e-05, 7.187499999999902e-05, 7.2763e-05, 7.190199999999869e-05, 7.186099999999945e-05, 7.17910000000016e-05]</msg>
<status status="PASS" starttime="20201030 11:52:05.308" endtime="20201030 11:52:05.310"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.303" endtime="20201030 11:52:05.311"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:05.314" endtime="20201030 11:52:05.334"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.313" endtime="20201030 11:52:05.334"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.311" endtime="20201030 11:52:05.335"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.953" endtime="20201030 11:52:05.335"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.952" endtime="20201030 11:52:05.335"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:05.344" endtime="20201030 11:52:05.362"></status>
</kw>
<msg timestamp="20201030 11:52:05.362" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:05.342" endtime="20201030 11:52:05.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:05.365" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:05.363" endtime="20201030 11:52:05.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:05.366" endtime="20201030 11:52:05.367"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.340" endtime="20201030 11:52:05.368"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.338" endtime="20201030 11:52:05.368"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:05.375" endtime="20201030 11:52:05.662"></status>
</kw>
<msg timestamp="20201030 11:52:05.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022286833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022360431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:05.373" endtime="20201030 11:52:05.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:05.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022286833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022360431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:05.667" endtime="20201030 11:52:05.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:05.675" endtime="20201030 11:52:05.677"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.371" endtime="20201030 11:52:05.677"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.369" endtime="20201030 11:52:05.678"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:05.682" level="INFO">${RESULT} = [{'diff': 7.359800000000111e-05}, {'diff': 7.37500000000009e-05}, {'diff': 7.286099999999698e-05}, {'diff': 7.317999999999908e-05}, {'diff': 7.286100000000045e-05}, {'diff': 7.284700000000088e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:05.679" endtime="20201030 11:52:05.682"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:05.686" level="INFO">${ACCURACY} = {'diff': [7.359800000000111e-05, 7.37500000000009e-05, 7.286099999999698e-05, 7.317999999999908e-05, 7.286100000000045e-05, 7.284700000000088e-05, 7.279099999999913e-05, 7.373599999999786e-05, 7.29860...</msg>
<status status="PASS" starttime="20201030 11:52:05.683" endtime="20201030 11:52:05.686"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:05.690" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201030 11:52:05.689" endtime="20201030 11:52:05.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:05.693" level="INFO">VALUE: [7.359800000000111e-05, 7.37500000000009e-05, 7.286099999999698e-05, 7.317999999999908e-05, 7.286100000000045e-05, 7.284700000000088e-05, 7.279099999999913e-05, 7.373599999999786e-05, 7.298600000000058e-05, 7.312500000000027e-05, 7.373599999999786e-05, 7.320800000000169e-05, 7.316699999999898e-05, 7.304200000000233e-05, 7.32500000000004e-05, 7.305599999999843e-05, 7.291699999999873e-05, 7.366699999999948e-05, 7.309699999999766e-05, 7.309800000000061e-05, 7.280599999999818e-05, 7.373599999999786e-05, 7.308400000000104e-05, 7.283400000000079e-05, 7.295900000000091e-05, 7.305599999999843e-05, 7.295799999999797e-05, 7.3069000000002e-05, 7.369399999999915e-05, 7.277699999999956e-05, 7.376400000000047e-05, 7.31110000000007e-05, 7.304199999999886e-05, 7.352799999999979e-05, 7.292999999999883e-05, 7.30560000000019e-05, 7.369399999999915e-05, 7.369499999999862e-05, 7.284699999999741e-05, 7.304200000000233e-05, 7.295899999999744e-05, 7.373599999999786e-05, 7.304199999999886e-05, 7.3069999999998e-05, 7.287500000000002e-05, 7.311200000000018e-05, 7.290200000000316e-05, 7.32500000000004e-05, 7.351300000000074e-05, 7.315299999999941e-05]</msg>
<status status="PASS" starttime="20201030 11:52:05.691" endtime="20201030 11:52:05.694"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.687" endtime="20201030 11:52:05.694"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:05.698" endtime="20201030 11:52:05.717"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.696" endtime="20201030 11:52:05.718"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.695" endtime="20201030 11:52:05.718"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.336" endtime="20201030 11:52:05.718"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.335" endtime="20201030 11:52:05.719"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:05.727" endtime="20201030 11:52:05.748"></status>
</kw>
<msg timestamp="20201030 11:52:05.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:05.726" endtime="20201030 11:52:05.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:05.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:05.749" endtime="20201030 11:52:05.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:05.752" endtime="20201030 11:52:05.753"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.723" endtime="20201030 11:52:05.754"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.721" endtime="20201030 11:52:05.754"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:05.761" endtime="20201030 11:52:06.047"></status>
</kw>
<msg timestamp="20201030 11:52:06.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025329597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025403403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:05.759" endtime="20201030 11:52:06.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:06.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025329597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025403403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:06.051" endtime="20201030 11:52:06.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:06.060" endtime="20201030 11:52:06.061"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.757" endtime="20201030 11:52:06.062"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.755" endtime="20201030 11:52:06.062"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:06.066" level="INFO">${RESULT} = [{'diff': 7.380600000000265e-05}, {'diff': 7.411200000000118e-05}, {'diff': 7.377800000000004e-05}, {'diff': 7.404199999999986e-05}, {'diff': 7.418099999999955e-05}, {'diff': 7.384799999999789e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:06.063" endtime="20201030 11:52:06.067"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:06.070" level="INFO">${ACCURACY} = {'diff': [7.380600000000265e-05, 7.411200000000118e-05, 7.377800000000004e-05, 7.404199999999986e-05, 7.418099999999955e-05, 7.384799999999789e-05, 7.399999999999768e-05, 7.386100000000145e-05, 7.4041...</msg>
<status status="PASS" starttime="20201030 11:52:06.067" endtime="20201030 11:52:06.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:06.075" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201030 11:52:06.074" endtime="20201030 11:52:06.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:06.077" level="INFO">VALUE: [7.380600000000265e-05, 7.411200000000118e-05, 7.377800000000004e-05, 7.404199999999986e-05, 7.418099999999955e-05, 7.384799999999789e-05, 7.399999999999768e-05, 7.386100000000145e-05, 7.404100000000038e-05, 7.404100000000038e-05, 7.386100000000145e-05, 7.390300000000016e-05, 7.409699999999866e-05, 7.38049999999997e-05, 7.41249999999978e-05, 7.404199999999986e-05, 7.380599999999918e-05, 7.445799999999947e-05, 7.401400000000072e-05, 7.418099999999955e-05, 7.4763999999998e-05, 7.426400000000097e-05, 7.424999999999793e-05, 7.427800000000054e-05, 7.384800000000136e-05, 7.42630000000015e-05, 7.387500000000102e-05, 7.383399999999832e-05, 7.390200000000069e-05, 7.390200000000069e-05, 7.386099999999798e-05, 7.429100000000063e-05, 7.404100000000038e-05, 7.390300000000016e-05, 7.420799999999922e-05, 7.383299999999884e-05, 7.420799999999922e-05, 7.401399999999725e-05, 7.402799999999682e-05, 7.402800000000029e-05, 7.408300000000256e-05, 7.427800000000054e-05, 7.394499999999887e-05, 7.400000000000115e-05, 7.398600000000158e-05, 7.391699999999973e-05, 7.398600000000158e-05, 7.474999999999843e-05, 7.470899999999919e-05, 7.395800000000244e-05]</msg>
<status status="PASS" starttime="20201030 11:52:06.076" endtime="20201030 11:52:06.079"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.071" endtime="20201030 11:52:06.080"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:06.083" endtime="20201030 11:52:06.103"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.082" endtime="20201030 11:52:06.103"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.081" endtime="20201030 11:52:06.104"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.719" endtime="20201030 11:52:06.104"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.719" endtime="20201030 11:52:06.104"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:06.113" endtime="20201030 11:52:06.131"></status>
</kw>
<msg timestamp="20201030 11:52:06.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:06.111" endtime="20201030 11:52:06.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:06.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:06.133" endtime="20201030 11:52:06.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:06.136" endtime="20201030 11:52:06.137"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.109" endtime="20201030 11:52:06.138"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.107" endtime="20201030 11:52:06.139"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:06.145" endtime="20201030 11:52:06.431"></status>
</kw>
<msg timestamp="20201030 11:52:06.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021883083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021958528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:06.144" endtime="20201030 11:52:06.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:06.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021883083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021958528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:06.435" endtime="20201030 11:52:06.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:06.444" endtime="20201030 11:52:06.445"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.141" endtime="20201030 11:52:06.446"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.139" endtime="20201030 11:52:06.446"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:06.450" level="INFO">${RESULT} = [{'diff': 7.544500000000037e-05}, {'diff': 7.476400000000147e-05}, {'diff': 7.50830000000001e-05}, {'diff': 7.505600000000043e-05}, {'diff': 7.574999999999943e-05}, {'diff': 7.522199999999979e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:06.447" endtime="20201030 11:52:06.450"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:06.455" level="INFO">${ACCURACY} = {'diff': [7.544500000000037e-05, 7.476400000000147e-05, 7.50830000000001e-05, 7.505600000000043e-05, 7.574999999999943e-05, 7.522199999999979e-05, 7.504099999999791e-05, 7.520899999999969e-05, 7.48890...</msg>
<status status="PASS" starttime="20201030 11:52:06.451" endtime="20201030 11:52:06.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:06.460" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201030 11:52:06.459" endtime="20201030 11:52:06.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:06.462" level="INFO">VALUE: [7.544500000000037e-05, 7.476400000000147e-05, 7.50830000000001e-05, 7.505600000000043e-05, 7.574999999999943e-05, 7.522199999999979e-05, 7.504099999999791e-05, 7.520899999999969e-05, 7.488900000000159e-05, 7.568099999999758e-05, 7.497299999999901e-05, 7.497299999999901e-05, 7.495799999999997e-05, 7.504100000000138e-05, 7.479099999999766e-05, 7.505499999999748e-05, 7.573599999999986e-05, 7.50830000000001e-05, 7.501400000000172e-05, 7.48189999999968e-05, 7.516599999999804e-05, 7.480600000000018e-05, 7.474999999999843e-05, 7.499999999999868e-05, 7.500000000000215e-05, 7.523600000000283e-05, 7.515300000000141e-05, 7.574999999999943e-05, 7.50830000000001e-05, 7.511099999999923e-05, 7.47500000000019e-05, 7.573599999999986e-05, 7.484799999999889e-05, 7.519500000000012e-05, 7.511099999999923e-05, 7.508399999999957e-05, 7.552699999999885e-05, 7.484699999999941e-05, 7.491600000000126e-05, 7.506900000000052e-05, 7.569399999999768e-05, 7.495799999999997e-05, 7.498599999999911e-05, 7.477800000000104e-05, 7.49310000000003e-05, 7.497199999999954e-05, 7.484699999999941e-05, 7.499999999999868e-05, 7.527799999999807e-05, 7.483299999999984e-05]</msg>
<status status="PASS" starttime="20201030 11:52:06.461" endtime="20201030 11:52:06.463"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.456" endtime="20201030 11:52:06.464"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:06.467" endtime="20201030 11:52:06.487"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.466" endtime="20201030 11:52:06.487"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.465" endtime="20201030 11:52:06.488"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.105" endtime="20201030 11:52:06.488"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.104" endtime="20201030 11:52:06.488"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:06.497" endtime="20201030 11:52:06.514"></status>
</kw>
<msg timestamp="20201030 11:52:06.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:06.495" endtime="20201030 11:52:06.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:06.517" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:06.516" endtime="20201030 11:52:06.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:06.518" endtime="20201030 11:52:06.520"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.493" endtime="20201030 11:52:06.520"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.490" endtime="20201030 11:52:06.521"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:06.527" endtime="20201030 11:52:06.814"></status>
</kw>
<msg timestamp="20201030 11:52:06.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021880875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021957181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:06.526" endtime="20201030 11:52:06.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:06.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021880875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021957181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:06.818" endtime="20201030 11:52:06.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:06.826" endtime="20201030 11:52:06.828"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.523" endtime="20201030 11:52:06.829"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.521" endtime="20201030 11:52:06.829"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:06.833" level="INFO">${RESULT} = [{'diff': 7.630599999999821e-05}, {'diff': 7.59029999999987e-05}, {'diff': 7.588899999999912e-05}, {'diff': 7.606900000000152e-05}, {'diff': 7.619500000000112e-05}, {'diff': 7.600000000000315e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:06.830" endtime="20201030 11:52:06.833"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:06.837" level="INFO">${ACCURACY} = {'diff': [7.630599999999821e-05, 7.59029999999987e-05, 7.588899999999912e-05, 7.606900000000152e-05, 7.619500000000112e-05, 7.600000000000315e-05, 7.595900000000044e-05, 7.674999999999696e-05, 7.66950...</msg>
<status status="PASS" starttime="20201030 11:52:06.834" endtime="20201030 11:52:06.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:06.842" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201030 11:52:06.841" endtime="20201030 11:52:06.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:06.844" level="INFO">VALUE: [7.630599999999821e-05, 7.59029999999987e-05, 7.588899999999912e-05, 7.606900000000152e-05, 7.619500000000112e-05, 7.600000000000315e-05, 7.595900000000044e-05, 7.674999999999696e-05, 7.669500000000162e-05, 7.623699999999983e-05, 7.669500000000162e-05, 7.592999999999836e-05, 7.616600000000251e-05, 7.59440000000014e-05, 7.623600000000036e-05, 7.677799999999957e-05, 7.601399999999925e-05, 7.611100000000023e-05, 7.590300000000216e-05, 7.620900000000069e-05, 7.595800000000097e-05, 7.599999999999968e-05, 7.579200000000161e-05, 7.583299999999737e-05, 7.588899999999912e-05, 7.587500000000302e-05, 7.584700000000041e-05, 7.615300000000241e-05, 7.595899999999697e-05, 7.597300000000001e-05, 7.611200000000318e-05, 7.675000000000043e-05, 7.579199999999814e-05, 7.623699999999983e-05, 7.586099999999998e-05, 7.579100000000213e-05, 7.613900000000284e-05, 7.58050000000017e-05, 7.58050000000017e-05, 7.620799999999775e-05, 7.599999999999968e-05, 7.591699999999826e-05, 7.58050000000017e-05, 7.604200000000186e-05, 7.584700000000041e-05, 7.609700000000066e-05, 7.611100000000023e-05, 7.672300000000076e-05, 7.599999999999968e-05, 7.587500000000302e-05]</msg>
<status status="PASS" starttime="20201030 11:52:06.843" endtime="20201030 11:52:06.845"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.838" endtime="20201030 11:52:06.846"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:06.849" endtime="20201030 11:52:06.869"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.848" endtime="20201030 11:52:06.869"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.847" endtime="20201030 11:52:06.869"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.489" endtime="20201030 11:52:06.870"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.488" endtime="20201030 11:52:06.870"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:06.879" endtime="20201030 11:52:06.898"></status>
</kw>
<msg timestamp="20201030 11:52:06.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:06.877" endtime="20201030 11:52:06.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:06.901" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:06.899" endtime="20201030 11:52:06.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:06.902" endtime="20201030 11:52:06.903"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.874" endtime="20201030 11:52:06.904"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.872" endtime="20201030 11:52:06.904"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:06.911" endtime="20201030 11:52:07.197"></status>
</kw>
<msg timestamp="20201030 11:52:07.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023253194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023330208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:06.909" endtime="20201030 11:52:07.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:07.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023253194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023330208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:07.201" endtime="20201030 11:52:07.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:07.210" endtime="20201030 11:52:07.212"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.907" endtime="20201030 11:52:07.212"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.905" endtime="20201030 11:52:07.213"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:07.217" level="INFO">${RESULT} = [{'diff': 7.701400000000025e-05}, {'diff': 7.70969999999982e-05}, {'diff': 7.694500000000187e-05}, {'diff': 7.758299999999912e-05}, {'diff': 7.773599999999839e-05}, {'diff': 7.770899999999872e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:07.213" endtime="20201030 11:52:07.217"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:07.221" level="INFO">${ACCURACY} = {'diff': [7.701400000000025e-05, 7.70969999999982e-05, 7.694500000000187e-05, 7.758299999999912e-05, 7.773599999999839e-05, 7.770899999999872e-05, 7.72229999999978e-05, 7.686099999999751e-05, 7.711099...</msg>
<status status="PASS" starttime="20201030 11:52:07.218" endtime="20201030 11:52:07.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:07.225" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201030 11:52:07.224" endtime="20201030 11:52:07.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:07.228" level="INFO">VALUE: [7.701400000000025e-05, 7.70969999999982e-05, 7.694500000000187e-05, 7.758299999999912e-05, 7.773599999999839e-05, 7.770899999999872e-05, 7.72229999999978e-05, 7.686099999999751e-05, 7.711099999999776e-05, 7.770799999999925e-05, 7.700000000000068e-05, 7.72640000000005e-05, 7.774999999999796e-05, 7.711100000000123e-05, 7.720800000000222e-05, 7.71250000000008e-05, 7.693099999999883e-05, 7.72640000000005e-05, 7.694399999999893e-05, 7.719499999999865e-05, 7.71389999999969e-05, 7.691699999999926e-05, 7.768099999999958e-05, 7.751400000000075e-05, 7.711099999999776e-05, 7.673600000000086e-05, 7.727800000000007e-05, 7.773700000000133e-05, 7.687500000000055e-05, 7.694399999999893e-05, 7.694399999999893e-05, 7.706899999999905e-05, 7.70969999999982e-05, 7.70969999999982e-05, 7.719400000000265e-05, 7.773600000000186e-05, 7.69029999999997e-05, 7.713900000000037e-05, 7.77779999999971e-05, 7.698599999999764e-05, 7.725000000000093e-05, 7.727800000000007e-05, 7.774999999999796e-05, 7.719499999999865e-05, 7.718100000000255e-05, 7.686100000000098e-05, 7.720899999999822e-05, 7.698699999999711e-05, 7.688900000000012e-05, 7.680499999999923e-05]</msg>
<status status="PASS" starttime="20201030 11:52:07.226" endtime="20201030 11:52:07.229"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.222" endtime="20201030 11:52:07.230"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:07.234" endtime="20201030 11:52:07.253"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.232" endtime="20201030 11:52:07.254"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.231" endtime="20201030 11:52:07.254"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.871" endtime="20201030 11:52:07.254"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.870" endtime="20201030 11:52:07.255"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:07.263" endtime="20201030 11:52:07.281"></status>
</kw>
<msg timestamp="20201030 11:52:07.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:07.262" endtime="20201030 11:52:07.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:07.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:07.283" endtime="20201030 11:52:07.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:07.285" endtime="20201030 11:52:07.287"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.259" endtime="20201030 11:52:07.287"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.257" endtime="20201030 11:52:07.288"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:07.294" endtime="20201030 11:52:07.581"></status>
</kw>
<msg timestamp="20201030 11:52:07.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022069083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022147389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:07.293" endtime="20201030 11:52:07.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:07.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022069083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022147389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:07.585" endtime="20201030 11:52:07.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:07.593" endtime="20201030 11:52:07.595"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.290" endtime="20201030 11:52:07.596"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.288" endtime="20201030 11:52:07.596"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:07.600" level="INFO">${RESULT} = [{'diff': 7.830600000000021e-05}, {'diff': 7.799999999999821e-05}, {'diff': 7.816700000000051e-05}, {'diff': 7.813900000000137e-05}, {'diff': 7.80839999999991e-05}, {'diff': 7.818100000000008e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:07.597" endtime="20201030 11:52:07.600"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:07.605" level="INFO">${ACCURACY} = {'diff': [7.830600000000021e-05, 7.799999999999821e-05, 7.816700000000051e-05, 7.813900000000137e-05, 7.80839999999991e-05, 7.818100000000008e-05, 7.787500000000155e-05, 7.816700000000051e-05, 7.79860...</msg>
<status status="PASS" starttime="20201030 11:52:07.601" endtime="20201030 11:52:07.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:07.610" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201030 11:52:07.609" endtime="20201030 11:52:07.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:07.612" level="INFO">VALUE: [7.830600000000021e-05, 7.799999999999821e-05, 7.816700000000051e-05, 7.813900000000137e-05, 7.80839999999991e-05, 7.818100000000008e-05, 7.787500000000155e-05, 7.816700000000051e-05, 7.798600000000211e-05, 7.873600000000286e-05, 7.876399999999853e-05, 7.793000000000036e-05, 7.8764000000002e-05, 7.786099999999851e-05, 7.783299999999937e-05, 7.869400000000068e-05, 7.822200000000279e-05, 7.791599999999732e-05, 7.794399999999993e-05, 7.826399999999803e-05, 7.798599999999864e-05, 7.81389999999979e-05, 7.826399999999803e-05, 7.775000000000143e-05, 7.870899999999972e-05, 7.812499999999833e-05, 7.786099999999851e-05, 7.823699999999836e-05, 7.824999999999846e-05, 7.808299999999962e-05, 7.791600000000079e-05, 7.784799999999842e-05, 7.79579999999995e-05, 7.81380000000019e-05, 7.816700000000051e-05, 7.793000000000036e-05, 7.80969999999992e-05, 7.870800000000025e-05, 7.819499999999965e-05, 7.811100000000223e-05, 7.806900000000006e-05, 7.80830000000031e-05, 7.784700000000241e-05, 7.795800000000297e-05, 7.872199999999982e-05, 7.801399999999778e-05, 7.826399999999803e-05, 7.774999999999796e-05, 7.779200000000014e-05, 7.869500000000015e-05]</msg>
<status status="PASS" starttime="20201030 11:52:07.611" endtime="20201030 11:52:07.617"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.606" endtime="20201030 11:52:07.617"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:07.621" endtime="20201030 11:52:07.641"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.620" endtime="20201030 11:52:07.641"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.619" endtime="20201030 11:52:07.641"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.256" endtime="20201030 11:52:07.642"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.255" endtime="20201030 11:52:07.642"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:07.651" endtime="20201030 11:52:07.668"></status>
</kw>
<msg timestamp="20201030 11:52:07.669" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:07.649" endtime="20201030 11:52:07.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:07.671" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:07.670" endtime="20201030 11:52:07.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:07.672" endtime="20201030 11:52:07.674"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.646" endtime="20201030 11:52:07.674"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.644" endtime="20201030 11:52:07.675"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:07.682" endtime="20201030 11:52:07.969"></status>
</kw>
<msg timestamp="20201030 11:52:07.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021899556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021978944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:07.680" endtime="20201030 11:52:07.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:07.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021899556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021978944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:07.973" endtime="20201030 11:52:07.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:07.981" endtime="20201030 11:52:07.983"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.677" endtime="20201030 11:52:07.984"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.676" endtime="20201030 11:52:07.984"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:07.988" level="INFO">${RESULT} = [{'diff': 7.938799999999968e-05}, {'diff': 7.90970000000002e-05}, {'diff': 7.886099999999951e-05}, {'diff': 7.902799999999835e-05}, {'diff': 7.879200000000114e-05}, {'diff': 7.982000000000128e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:07.985" endtime="20201030 11:52:07.988"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:07.992" level="INFO">${ACCURACY} = {'diff': [7.938799999999968e-05, 7.90970000000002e-05, 7.886099999999951e-05, 7.902799999999835e-05, 7.879200000000114e-05, 7.982000000000128e-05, 7.920800000000075e-05, 7.902800000000182e-05, 7.91809...</msg>
<status status="PASS" starttime="20201030 11:52:07.989" endtime="20201030 11:52:07.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:07.997" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201030 11:52:07.996" endtime="20201030 11:52:07.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:07.999" level="INFO">VALUE: [7.938799999999968e-05, 7.90970000000002e-05, 7.886099999999951e-05, 7.902799999999835e-05, 7.879200000000114e-05, 7.982000000000128e-05, 7.920800000000075e-05, 7.902800000000182e-05, 7.918099999999761e-05, 7.902799999999835e-05, 7.891700000000126e-05, 7.911100000000323e-05, 7.92779999999986e-05, 7.912499999999933e-05, 7.919500000000065e-05, 7.926399999999903e-05, 7.90840000000001e-05, 7.948699999999961e-05, 7.883300000000037e-05, 7.888799999999918e-05, 7.906900000000106e-05, 7.890199999999875e-05, 7.912499999999933e-05, 7.893100000000083e-05, 7.916599999999857e-05, 7.879199999999767e-05, 7.922199999999685e-05, 7.970799999999778e-05, 7.880600000000071e-05, 7.972200000000082e-05, 7.898599999999964e-05, 7.886099999999951e-05, 7.879199999999767e-05, 7.919499999999718e-05, 7.912499999999933e-05, 7.918100000000108e-05, 7.97230000000003e-05, 7.92229999999998e-05, 7.915299999999847e-05, 7.952699999999938e-05, 7.893000000000136e-05, 7.877699999999863e-05, 7.891599999999832e-05, 7.9151999999999e-05, 7.901400000000225e-05, 7.881899999999734e-05, 7.884699999999994e-05, 7.902800000000182e-05, 7.904199999999792e-05, 7.893099999999736e-05]</msg>
<status status="PASS" starttime="20201030 11:52:07.998" endtime="20201030 11:52:08.000"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.993" endtime="20201030 11:52:08.000"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:08.004" endtime="20201030 11:52:08.024"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.003" endtime="20201030 11:52:08.024"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.001" endtime="20201030 11:52:08.024"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.643" endtime="20201030 11:52:08.025"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.642" endtime="20201030 11:52:08.025"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:08.034" endtime="20201030 11:52:08.054"></status>
</kw>
<msg timestamp="20201030 11:52:08.054" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:08.032" endtime="20201030 11:52:08.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:08.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:08.055" endtime="20201030 11:52:08.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:08.058" endtime="20201030 11:52:08.059"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.030" endtime="20201030 11:52:08.060"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.027" endtime="20201030 11:52:08.060"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:08.067" endtime="20201030 11:52:08.352"></status>
</kw>
<msg timestamp="20201030 11:52:08.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023048361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023128319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:08.065" endtime="20201030 11:52:08.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:08.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023048361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023128319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:08.357" endtime="20201030 11:52:08.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:08.365" endtime="20201030 11:52:08.367"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.063" endtime="20201030 11:52:08.367"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.061" endtime="20201030 11:52:08.368"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:08.372" level="INFO">${RESULT} = [{'diff': 7.99580000000015e-05}, {'diff': 8.00840000000011e-05}, {'diff': 8.004100000000292e-05}, {'diff': 8.00970000000012e-05}, {'diff': 8.011100000000076e-05}, {'diff': 7.986100000000051e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 11:52:08.369" endtime="20201030 11:52:08.372"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:08.376" level="INFO">${ACCURACY} = {'diff': [7.99580000000015e-05, 8.00840000000011e-05, 8.004100000000292e-05, 8.00970000000012e-05, 8.011100000000076e-05, 7.986100000000051e-05, 7.995799999999803e-05, 8.073599999999792e-05, 7.9804999...</msg>
<status status="PASS" starttime="20201030 11:52:08.373" endtime="20201030 11:52:08.376"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:08.380" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201030 11:52:08.379" endtime="20201030 11:52:08.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:08.383" level="INFO">VALUE: [7.99580000000015e-05, 8.00840000000011e-05, 8.004100000000292e-05, 8.00970000000012e-05, 8.011100000000076e-05, 7.986100000000051e-05, 7.995799999999803e-05, 8.073599999999792e-05, 7.980499999999877e-05, 8.020800000000175e-05, 8.023599999999742e-05, 7.988899999999965e-05, 7.979199999999867e-05, 8.007000000000153e-05, 8.00970000000012e-05, 7.979199999999867e-05, 8.070900000000172e-05, 7.995900000000097e-05, 8.015300000000294e-05, 8.019500000000165e-05, 8.01389999999999e-05, 7.987500000000008e-05, 8.075000000000096e-05, 8.076300000000106e-05, 8.070800000000225e-05, 8.019499999999818e-05, 7.988899999999965e-05, 8.020799999999828e-05, 8.073599999999792e-05, 7.983300000000138e-05, 8.002799999999935e-05, 7.981899999999834e-05, 7.998600000000064e-05, 8.02230000000008e-05, 8.005600000000196e-05, 8.076400000000053e-05, 8.006999999999806e-05, 8.005600000000196e-05, 8.000000000000021e-05, 8.016700000000251e-05, 7.983400000000085e-05, 8.017999999999914e-05, 7.994400000000193e-05, 7.980499999999877e-05, 7.984700000000094e-05, 8.073600000000139e-05, 7.994399999999846e-05, 8.001399999999978e-05, 8.005499999999902e-05, 7.995799999999803e-05]</msg>
<status status="PASS" starttime="20201030 11:52:08.382" endtime="20201030 11:52:08.385"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.377" endtime="20201030 11:52:08.385"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:08.389" endtime="20201030 11:52:08.408"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.387" endtime="20201030 11:52:08.409"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.386" endtime="20201030 11:52:08.409"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.026" endtime="20201030 11:52:08.409"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.025" endtime="20201030 11:52:08.409"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:08.418" endtime="20201030 11:52:08.436"></status>
</kw>
<msg timestamp="20201030 11:52:08.437" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:08.417" endtime="20201030 11:52:08.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:08.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:08.438" endtime="20201030 11:52:08.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:08.440" endtime="20201030 11:52:08.442"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.414" endtime="20201030 11:52:08.442"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.412" endtime="20201030 11:52:08.443"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:08.449" endtime="20201030 11:52:08.735"></status>
</kw>
<msg timestamp="20201030 11:52:08.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021902847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021983917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:08.448" endtime="20201030 11:52:08.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:08.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021902847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021983917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:08.740" endtime="20201030 11:52:08.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:08.748" endtime="20201030 11:52:08.750"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.445" endtime="20201030 11:52:08.750"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.443" endtime="20201030 11:52:08.751"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:08.755" level="INFO">${RESULT} = [{'diff': 8.106999999999906e-05}, {'diff': 8.079200000000314e-05}, {'diff': 8.172299999999882e-05}, {'diff': 8.119399999999971e-05}, {'diff': 8.173599999999892e-05}, {'diff': 8.102800000000035e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:08.751" endtime="20201030 11:52:08.755"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:08.760" level="INFO">${ACCURACY} = {'diff': [8.106999999999906e-05, 8.079200000000314e-05, 8.172299999999882e-05, 8.119399999999971e-05, 8.173599999999892e-05, 8.102800000000035e-05, 8.081899999999934e-05, 8.095799999999903e-05, 8.1139...</msg>
<status status="PASS" starttime="20201030 11:52:08.756" endtime="20201030 11:52:08.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:08.764" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201030 11:52:08.763" endtime="20201030 11:52:08.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:08.767" level="INFO">VALUE: [8.106999999999906e-05, 8.079200000000314e-05, 8.172299999999882e-05, 8.119399999999971e-05, 8.173599999999892e-05, 8.102800000000035e-05, 8.081899999999934e-05, 8.095799999999903e-05, 8.11390000000009e-05, 8.112500000000133e-05, 8.106899999999959e-05, 8.177799999999763e-05, 8.098600000000164e-05, 8.119399999999971e-05, 8.105599999999949e-05, 8.104199999999992e-05, 8.106999999999906e-05, 8.083300000000238e-05, 8.126400000000103e-05, 8.175000000000196e-05, 8.082000000000228e-05, 8.112499999999787e-05, 8.100000000000121e-05, 8.091600000000032e-05, 8.086200000000099e-05, 8.122199999999885e-05, 8.084699999999848e-05, 8.118000000000014e-05, 8.106899999999959e-05, 8.080499999999977e-05, 8.120799999999928e-05, 8.084699999999848e-05, 8.101400000000078e-05, 8.106999999999906e-05, 8.122199999999885e-05, 8.169400000000021e-05, 8.170799999999978e-05, 8.122200000000232e-05, 8.097299999999807e-05, 8.169499999999968e-05, 8.122299999999832e-05, 8.10979999999982e-05, 8.090200000000075e-05, 8.07780000000001e-05, 8.077700000000063e-05, 8.170799999999978e-05, 8.116600000000057e-05, 8.108300000000263e-05, 8.11390000000009e-05, 8.092999999999989e-05]</msg>
<status status="PASS" starttime="20201030 11:52:08.765" endtime="20201030 11:52:08.767"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.761" endtime="20201030 11:52:08.768"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:08.772" endtime="20201030 11:52:08.791"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.770" endtime="20201030 11:52:08.792"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.769" endtime="20201030 11:52:08.792"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.410" endtime="20201030 11:52:08.792"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.410" endtime="20201030 11:52:08.792"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:08.801" endtime="20201030 11:52:08.818"></status>
</kw>
<msg timestamp="20201030 11:52:08.819" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:08.799" endtime="20201030 11:52:08.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:08.821" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:08.820" endtime="20201030 11:52:08.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:08.822" endtime="20201030 11:52:08.824"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.797" endtime="20201030 11:52:08.824"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.795" endtime="20201030 11:52:08.825"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:08.831" endtime="20201030 11:52:09.118"></status>
</kw>
<msg timestamp="20201030 11:52:09.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021964986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022046764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:08.830" endtime="20201030 11:52:09.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:09.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021964986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022046764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:09.122" endtime="20201030 11:52:09.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:09.131" endtime="20201030 11:52:09.132"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.827" endtime="20201030 11:52:09.133"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.825" endtime="20201030 11:52:09.133"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:09.137" level="INFO">${RESULT} = [{'diff': 8.17780000000011e-05}, {'diff': 8.275000000000296e-05}, {'diff': 8.211100000000277e-05}, {'diff': 8.272299999999982e-05}, {'diff': 8.273599999999992e-05}, {'diff': 8.20979999999992e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:52:09.134" endtime="20201030 11:52:09.138"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:09.141" level="INFO">${ACCURACY} = {'diff': [8.17780000000011e-05, 8.275000000000296e-05, 8.211100000000277e-05, 8.272299999999982e-05, 8.273599999999992e-05, 8.20979999999992e-05, 8.212499999999887e-05, 8.177700000000163e-05, 8.209699...</msg>
<status status="PASS" starttime="20201030 11:52:09.138" endtime="20201030 11:52:09.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:09.146" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201030 11:52:09.145" endtime="20201030 11:52:09.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:09.148" level="INFO">VALUE: [8.17780000000011e-05, 8.275000000000296e-05, 8.211100000000277e-05, 8.272299999999982e-05, 8.273599999999992e-05, 8.20979999999992e-05, 8.212499999999887e-05, 8.177700000000163e-05, 8.209699999999973e-05, 8.274999999999949e-05, 8.220800000000028e-05, 8.272200000000035e-05, 8.208300000000016e-05, 8.192999999999742e-05, 8.18329999999999e-05, 8.205600000000049e-05, 8.18329999999999e-05, 8.220899999999975e-05, 8.270799999999731e-05, 8.180600000000024e-05, 8.187499999999862e-05, 8.215300000000147e-05, 8.272200000000035e-05, 8.177799999999763e-05, 8.213899999999844e-05, 8.193100000000036e-05, 8.212500000000234e-05, 8.215300000000147e-05, 8.191600000000132e-05, 8.274999999999949e-05, 8.207000000000006e-05, 8.22780000000016e-05, 8.195800000000003e-05, 8.208300000000016e-05, 8.252799999999838e-05, 8.17780000000011e-05, 8.201400000000178e-05, 8.211100000000277e-05, 8.212499999999887e-05, 8.226399999999856e-05, 8.181999999999981e-05, 8.213799999999896e-05, 8.201400000000178e-05, 8.180500000000077e-05, 8.2152999999998e-05, 8.274999999999949e-05, 8.276400000000253e-05, 8.216699999999758e-05, 8.206900000000059e-05, 8.202700000000188e-05]</msg>
<status status="PASS" starttime="20201030 11:52:09.147" endtime="20201030 11:52:09.149"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.142" endtime="20201030 11:52:09.150"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:09.153" endtime="20201030 11:52:09.173"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.152" endtime="20201030 11:52:09.174"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.151" endtime="20201030 11:52:09.174"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.793" endtime="20201030 11:52:09.174"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.793" endtime="20201030 11:52:09.174"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:09.184" endtime="20201030 11:52:09.206"></status>
</kw>
<msg timestamp="20201030 11:52:09.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:09.182" endtime="20201030 11:52:09.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:09.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:09.207" endtime="20201030 11:52:09.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:09.210" endtime="20201030 11:52:09.211"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.179" endtime="20201030 11:52:09.212"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.177" endtime="20201030 11:52:09.212"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:09.219" endtime="20201030 11:52:09.505"></status>
</kw>
<msg timestamp="20201030 11:52:09.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026678597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026761542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:09.217" endtime="20201030 11:52:09.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:09.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026678597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026761542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:09.509" endtime="20201030 11:52:09.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:09.518" endtime="20201030 11:52:09.519"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.215" endtime="20201030 11:52:09.520"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.213" endtime="20201030 11:52:09.520"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:09.524" level="INFO">${RESULT} = [{'diff': 8.294500000000093e-05}, {'diff': 8.301400000000278e-05}, {'diff': 8.302699999999941e-05}, {'diff': 8.282000000000081e-05}, {'diff': 8.29309999999979e-05}, {'diff': 8.316700000000204e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:09.521" endtime="20201030 11:52:09.524"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:09.528" level="INFO">${ACCURACY} = {'diff': [8.294500000000093e-05, 8.301400000000278e-05, 8.302699999999941e-05, 8.282000000000081e-05, 8.29309999999979e-05, 8.316700000000204e-05, 8.305599999999802e-05, 8.294400000000146e-05, 8.29439...</msg>
<status status="PASS" starttime="20201030 11:52:09.525" endtime="20201030 11:52:09.528"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:09.533" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201030 11:52:09.532" endtime="20201030 11:52:09.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:09.535" level="INFO">VALUE: [8.294500000000093e-05, 8.301400000000278e-05, 8.302699999999941e-05, 8.282000000000081e-05, 8.29309999999979e-05, 8.316700000000204e-05, 8.305599999999802e-05, 8.294400000000146e-05, 8.294399999999799e-05, 8.308300000000116e-05, 8.299999999999974e-05, 8.373600000000092e-05, 8.347199999999763e-05, 8.324999999999999e-05, 8.317999999999867e-05, 8.376400000000006e-05, 8.298600000000017e-05, 8.301399999999931e-05, 8.27919999999982e-05, 8.326399999999956e-05, 8.313899999999944e-05, 8.326399999999956e-05, 8.280500000000177e-05, 8.281899999999787e-05, 8.287500000000309e-05, 8.319500000000118e-05, 8.376299999999712e-05, 8.351399999999981e-05, 8.323600000000042e-05, 8.313899999999944e-05, 8.309700000000073e-05, 8.281900000000134e-05, 8.29720000000006e-05, 8.295800000000103e-05, 8.376400000000006e-05, 8.313899999999944e-05, 8.320799999999781e-05, 8.27919999999982e-05, 8.308300000000116e-05, 8.282000000000081e-05, 8.284700000000048e-05, 8.283400000000038e-05, 8.293100000000136e-05, 8.284799999999995e-05, 8.375000000000049e-05, 8.301399999999931e-05, 8.288799999999971e-05, 8.288799999999971e-05, 8.327799999999913e-05, 8.287499999999962e-05]</msg>
<status status="PASS" starttime="20201030 11:52:09.534" endtime="20201030 11:52:09.537"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.529" endtime="20201030 11:52:09.537"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:09.541" endtime="20201030 11:52:09.560"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.540" endtime="20201030 11:52:09.561"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.538" endtime="20201030 11:52:09.561"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.175" endtime="20201030 11:52:09.562"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.175" endtime="20201030 11:52:09.562"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:09.570" endtime="20201030 11:52:09.588"></status>
</kw>
<msg timestamp="20201030 11:52:09.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:09.569" endtime="20201030 11:52:09.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:09.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:09.590" endtime="20201030 11:52:09.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:09.592" endtime="20201030 11:52:09.594"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.566" endtime="20201030 11:52:09.595"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.564" endtime="20201030 11:52:09.595"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:09.601" endtime="20201030 11:52:09.887"></status>
</kw>
<msg timestamp="20201030 11:52:09.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021947764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022031556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:09.600" endtime="20201030 11:52:09.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:09.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021947764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022031556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:09.892" endtime="20201030 11:52:09.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:09.900" endtime="20201030 11:52:09.902"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.597" endtime="20201030 11:52:09.903"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.596" endtime="20201030 11:52:09.903"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:09.907" level="INFO">${RESULT} = [{'diff': 8.37919999999992e-05}, {'diff': 8.39590000000015e-05}, {'diff': 8.383400000000138e-05}, {'diff': 8.391699999999933e-05}, {'diff': 8.474999999999802e-05}, {'diff': 8.390300000000323e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:52:09.904" endtime="20201030 11:52:09.907"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:09.912" level="INFO">${ACCURACY} = {'diff': [8.37919999999992e-05, 8.39590000000015e-05, 8.383400000000138e-05, 8.391699999999933e-05, 8.474999999999802e-05, 8.390300000000323e-05, 8.391599999999985e-05, 8.387500000000062e-05, 8.452699...</msg>
<status status="PASS" starttime="20201030 11:52:09.908" endtime="20201030 11:52:09.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:09.917" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201030 11:52:09.916" endtime="20201030 11:52:09.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:09.920" level="INFO">VALUE: [8.37919999999992e-05, 8.39590000000015e-05, 8.383400000000138e-05, 8.391699999999933e-05, 8.474999999999802e-05, 8.390300000000323e-05, 8.391599999999985e-05, 8.387500000000062e-05, 8.452699999999744e-05, 8.41110000000013e-05, 8.419399999999924e-05, 8.425000000000099e-05, 8.401400000000031e-05, 8.384700000000148e-05, 8.386100000000105e-05, 8.39309999999989e-05, 8.391699999999933e-05, 8.398600000000117e-05, 8.425000000000099e-05, 8.413900000000044e-05, 8.376400000000006e-05, 8.472299999999836e-05, 8.426400000000056e-05, 8.416699999999958e-05, 8.401300000000084e-05, 8.394499999999847e-05, 8.392999999999942e-05, 8.405499999999955e-05, 8.387500000000062e-05, 8.391599999999985e-05, 8.39309999999989e-05, 8.472200000000235e-05, 8.37919999999992e-05, 8.473600000000192e-05, 8.391699999999933e-05, 8.416699999999958e-05, 8.391699999999933e-05, 8.423599999999795e-05, 8.399999999999727e-05, 8.372200000000135e-05, 8.408400000000163e-05, 8.394499999999847e-05, 8.473599999999845e-05, 8.399999999999727e-05, 8.398700000000064e-05, 8.388900000000019e-05, 8.422200000000185e-05, 8.388900000000019e-05, 8.41249999999974e-05, 8.39720000000016e-05]</msg>
<status status="PASS" starttime="20201030 11:52:09.918" endtime="20201030 11:52:09.920"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.913" endtime="20201030 11:52:09.921"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:09.925" endtime="20201030 11:52:09.944"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.923" endtime="20201030 11:52:09.945"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.922" endtime="20201030 11:52:09.945"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.563" endtime="20201030 11:52:09.945"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.562" endtime="20201030 11:52:09.946"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:09.955" endtime="20201030 11:52:09.972"></status>
</kw>
<msg timestamp="20201030 11:52:09.973" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:09.953" endtime="20201030 11:52:09.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:09.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:09.974" endtime="20201030 11:52:09.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:09.977" endtime="20201030 11:52:09.978"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.950" endtime="20201030 11:52:09.979"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.948" endtime="20201030 11:52:09.979"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:09.986" endtime="20201030 11:52:10.274"></status>
</kw>
<msg timestamp="20201030 11:52:10.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022433847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0225195, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:52:09.985" endtime="20201030 11:52:10.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:10.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022433847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0225195, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:52:10.279" endtime="20201030 11:52:10.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:10.287" endtime="20201030 11:52:10.289"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.982" endtime="20201030 11:52:10.290"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.980" endtime="20201030 11:52:10.290"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:10.294" level="INFO">${RESULT} = [{'diff': 8.56530000000015e-05}, {'diff': 8.488900000000119e-05}, {'diff': 8.481899999999987e-05}, {'diff': 8.486099999999858e-05}, {'diff': 8.526400000000156e-05}, {'diff': 8.518100000000015e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:10.291" endtime="20201030 11:52:10.294"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:10.298" level="INFO">${ACCURACY} = {'diff': [8.56530000000015e-05, 8.488900000000119e-05, 8.481899999999987e-05, 8.486099999999858e-05, 8.526400000000156e-05, 8.518100000000015e-05, 8.501400000000131e-05, 8.47920000000002e-05, 8.523599...</msg>
<status status="PASS" starttime="20201030 11:52:10.295" endtime="20201030 11:52:10.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:10.303" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201030 11:52:10.302" endtime="20201030 11:52:10.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:10.306" level="INFO">VALUE: [8.56530000000015e-05, 8.488900000000119e-05, 8.481899999999987e-05, 8.486099999999858e-05, 8.526400000000156e-05, 8.518100000000015e-05, 8.501400000000131e-05, 8.47920000000002e-05, 8.523599999999895e-05, 8.516700000000058e-05, 8.490299999999729e-05, 8.484799999999848e-05, 8.505500000000055e-05, 8.494399999999999e-05, 8.48050000000003e-05, 8.494399999999999e-05, 8.495799999999956e-05, 8.505600000000002e-05, 8.523599999999895e-05, 8.570800000000031e-05, 8.484700000000248e-05, 8.477800000000063e-05, 8.525000000000199e-05, 8.477799999999716e-05, 8.522200000000285e-05, 8.569500000000022e-05, 8.51119999999983e-05, 8.495899999999904e-05, 8.491700000000033e-05, 8.501400000000131e-05, 8.48050000000003e-05, 8.494399999999999e-05, 8.487500000000162e-05, 8.520799999999981e-05, 8.56660000000016e-05, 8.49720000000026e-05, 8.484700000000248e-05, 8.522200000000285e-05, 8.576400000000206e-05, 8.505500000000055e-05, 8.486099999999858e-05, 8.577800000000163e-05, 8.570800000000031e-05, 8.490300000000076e-05, 8.504199999999698e-05, 8.519499999999972e-05, 8.476399999999759e-05, 8.523599999999895e-05, 8.474999999999802e-05, 8.565299999999804e-05]</msg>
<status status="PASS" starttime="20201030 11:52:10.304" endtime="20201030 11:52:10.306"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.299" endtime="20201030 11:52:10.307"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:10.311" endtime="20201030 11:52:10.331"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.309" endtime="20201030 11:52:10.332"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.308" endtime="20201030 11:52:10.332"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.947" endtime="20201030 11:52:10.333"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.946" endtime="20201030 11:52:10.333"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:10.342" endtime="20201030 11:52:10.365"></status>
</kw>
<msg timestamp="20201030 11:52:10.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:10.340" endtime="20201030 11:52:10.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:10.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:10.368" endtime="20201030 11:52:10.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:10.374" endtime="20201030 11:52:10.377"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.337" endtime="20201030 11:52:10.379"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.335" endtime="20201030 11:52:10.380"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:10.394" endtime="20201030 11:52:10.690"></status>
</kw>
<msg timestamp="20201030 11:52:10.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024634097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024720597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:10.391" endtime="20201030 11:52:10.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:10.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024634097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024720597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:10.694" endtime="20201030 11:52:10.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:10.703" endtime="20201030 11:52:10.705"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.385" endtime="20201030 11:52:10.705"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.381" endtime="20201030 11:52:10.706"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:10.710" level="INFO">${RESULT} = [{'diff': 8.649999999999977e-05}, {'diff': 8.604200000000145e-05}, {'diff': 8.606899999999765e-05}, {'diff': 8.629199999999823e-05}, {'diff': 8.6153000000002e-05}, {'diff': 8.611099999999983e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:52:10.706" endtime="20201030 11:52:10.710"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:10.714" level="INFO">${ACCURACY} = {'diff': [8.649999999999977e-05, 8.604200000000145e-05, 8.606899999999765e-05, 8.629199999999823e-05, 8.6153000000002e-05, 8.611099999999983e-05, 8.577799999999816e-05, 8.604200000000145e-05, 8.669499...</msg>
<status status="PASS" starttime="20201030 11:52:10.711" endtime="20201030 11:52:10.714"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:10.719" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201030 11:52:10.718" endtime="20201030 11:52:10.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:10.721" level="INFO">VALUE: [8.649999999999977e-05, 8.604200000000145e-05, 8.606899999999765e-05, 8.629199999999823e-05, 8.6153000000002e-05, 8.611099999999983e-05, 8.577799999999816e-05, 8.604200000000145e-05, 8.669499999999775e-05, 8.59859999999997e-05, 8.595900000000004e-05, 8.595800000000056e-05, 8.579099999999826e-05, 8.58050000000013e-05, 8.624999999999952e-05, 8.595800000000056e-05, 8.59859999999997e-05, 8.601400000000231e-05, 8.623599999999995e-05, 8.58050000000013e-05, 8.591699999999786e-05, 8.57920000000012e-05, 8.602800000000188e-05, 8.577799999999816e-05, 8.677799999999916e-05, 8.586099999999958e-05, 8.668100000000165e-05, 8.588900000000219e-05, 8.606999999999712e-05, 8.605600000000102e-05, 8.57920000000012e-05, 8.605499999999808e-05, 8.590299999999829e-05, 8.620800000000081e-05, 8.597200000000013e-05, 8.588899999999872e-05, 8.601400000000231e-05, 8.675000000000002e-05, 8.679199999999873e-05, 8.626399999999909e-05, 8.655599999999805e-05, 8.613900000000244e-05, 8.611099999999983e-05, 8.587499999999915e-05, 8.588900000000219e-05, 8.59859999999997e-05, 8.587499999999915e-05, 8.616700000000158e-05, 8.613900000000244e-05, 8.669500000000122e-05]</msg>
<status status="PASS" starttime="20201030 11:52:10.720" endtime="20201030 11:52:10.723"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.715" endtime="20201030 11:52:10.723"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:10.727" endtime="20201030 11:52:10.747"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.726" endtime="20201030 11:52:10.747"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.724" endtime="20201030 11:52:10.748"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.334" endtime="20201030 11:52:10.748"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.333" endtime="20201030 11:52:10.748"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:10.757" endtime="20201030 11:52:10.776"></status>
</kw>
<msg timestamp="20201030 11:52:10.776" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:10.755" endtime="20201030 11:52:10.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:10.779" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:10.777" endtime="20201030 11:52:10.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:10.780" endtime="20201030 11:52:10.781"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.753" endtime="20201030 11:52:10.782"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.751" endtime="20201030 11:52:10.782"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:10.789" endtime="20201030 11:52:11.075"></status>
</kw>
<msg timestamp="20201030 11:52:11.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022590486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022677319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:10.788" endtime="20201030 11:52:11.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:11.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022590486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022677319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:11.079" endtime="20201030 11:52:11.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:11.088" endtime="20201030 11:52:11.089"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.785" endtime="20201030 11:52:11.090"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.783" endtime="20201030 11:52:11.090"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:11.095" level="INFO">${RESULT} = [{'diff': 8.683300000000144e-05}, {'diff': 8.708400000000116e-05}, {'diff': 8.718100000000215e-05}, {'diff': 8.708300000000169e-05}, {'diff': 8.695799999999809e-05}, {'diff': 8.706899999999865e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:11.091" endtime="20201030 11:52:11.095"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:11.100" level="INFO">${ACCURACY} = {'diff': [8.683300000000144e-05, 8.708400000000116e-05, 8.718100000000215e-05, 8.708300000000169e-05, 8.695799999999809e-05, 8.706899999999865e-05, 8.71799999999992e-05, 8.71799999999992e-05, 8.726400...</msg>
<status status="PASS" starttime="20201030 11:52:11.096" endtime="20201030 11:52:11.100"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:11.104" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201030 11:52:11.103" endtime="20201030 11:52:11.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:11.107" level="INFO">VALUE: [8.683300000000144e-05, 8.708400000000116e-05, 8.718100000000215e-05, 8.708300000000169e-05, 8.695799999999809e-05, 8.706899999999865e-05, 8.71799999999992e-05, 8.71799999999992e-05, 8.726400000000009e-05, 8.71250000000004e-05, 8.69860000000007e-05, 8.68059999999983e-05, 8.713899999999997e-05, 8.777700000000069e-05, 8.704199999999898e-05, 8.700000000000027e-05, 8.713800000000049e-05, 8.704199999999898e-05, 8.772199999999841e-05, 8.774999999999755e-05, 8.687500000000015e-05, 8.68189999999984e-05, 8.680499999999883e-05, 8.709700000000126e-05, 8.687500000000015e-05, 8.711100000000083e-05, 8.725000000000052e-05, 8.772199999999841e-05, 8.720799999999834e-05, 8.709699999999779e-05, 8.679199999999873e-05, 8.772200000000188e-05, 8.695900000000104e-05, 8.722200000000138e-05, 8.708400000000116e-05, 8.705599999999855e-05, 8.691700000000233e-05, 8.700000000000027e-05, 8.705599999999855e-05, 8.702800000000288e-05, 8.769400000000274e-05, 8.680499999999883e-05, 8.704099999999951e-05, 8.71250000000004e-05, 8.68189999999984e-05, 8.704100000000298e-05, 8.720799999999834e-05, 8.772199999999841e-05, 8.677799999999916e-05, 8.775000000000102e-05]</msg>
<status status="PASS" starttime="20201030 11:52:11.106" endtime="20201030 11:52:11.108"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.101" endtime="20201030 11:52:11.108"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:11.112" endtime="20201030 11:52:11.132"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.111" endtime="20201030 11:52:11.132"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.109" endtime="20201030 11:52:11.133"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.749" endtime="20201030 11:52:11.133"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.748" endtime="20201030 11:52:11.133"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:11.142" endtime="20201030 11:52:11.161"></status>
</kw>
<msg timestamp="20201030 11:52:11.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:11.141" endtime="20201030 11:52:11.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:11.164" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:11.163" endtime="20201030 11:52:11.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:11.165" endtime="20201030 11:52:11.167"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.138" endtime="20201030 11:52:11.168"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.136" endtime="20201030 11:52:11.168"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:11.175" endtime="20201030 11:52:11.462"></status>
</kw>
<msg timestamp="20201030 11:52:11.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023163972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023252389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:11.173" endtime="20201030 11:52:11.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:11.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023163972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023252389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:11.467" endtime="20201030 11:52:11.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:11.475" endtime="20201030 11:52:11.477"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.171" endtime="20201030 11:52:11.478"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.169" endtime="20201030 11:52:11.478"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:11.482" level="INFO">${RESULT} = [{'diff': 8.841699999999689e-05}, {'diff': 8.78189999999994e-05}, {'diff': 8.79860000000017e-05}, {'diff': 8.780600000000277e-05}, {'diff': 8.870899999999932e-05}, {'diff': 8.872199999999941e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:52:11.479" endtime="20201030 11:52:11.482"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:11.486" level="INFO">${ACCURACY} = {'diff': [8.841699999999689e-05, 8.78189999999994e-05, 8.79860000000017e-05, 8.780600000000277e-05, 8.870899999999932e-05, 8.872199999999941e-05, 8.805600000000302e-05, 8.802700000000094e-05, 8.808400...</msg>
<status status="PASS" starttime="20201030 11:52:11.483" endtime="20201030 11:52:11.487"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:11.491" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201030 11:52:11.490" endtime="20201030 11:52:11.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:11.494" level="INFO">VALUE: [8.841699999999689e-05, 8.78189999999994e-05, 8.79860000000017e-05, 8.780600000000277e-05, 8.870899999999932e-05, 8.872199999999941e-05, 8.805600000000302e-05, 8.802700000000094e-05, 8.808400000000216e-05, 8.813900000000097e-05, 8.786100000000158e-05, 8.780499999999983e-05, 8.801400000000084e-05, 8.872199999999941e-05, 8.779100000000026e-05, 8.816600000000063e-05, 8.815300000000054e-05, 8.78059999999993e-05, 8.797199999999866e-05, 8.802800000000041e-05, 8.800000000000127e-05, 8.815300000000054e-05, 8.806999999999912e-05, 8.825000000000152e-05, 8.806999999999912e-05, 8.815299999999707e-05, 8.806999999999912e-05, 8.870799999999984e-05, 8.872199999999941e-05, 8.780499999999983e-05, 8.79999999999978e-05, 8.822199999999891e-05, 8.870799999999984e-05, 8.875000000000202e-05, 8.777800000000016e-05, 8.798599999999823e-05, 8.813900000000097e-05, 8.786099999999811e-05, 8.793099999999943e-05, 8.823600000000195e-05, 8.791600000000038e-05, 8.783400000000191e-05, 8.869499999999975e-05, 8.81250000000014e-05, 8.876300000000212e-05, 8.804199999999998e-05, 8.780499999999983e-05, 8.808400000000216e-05, 8.819399999999977e-05, 8.809699999999879e-05]</msg>
<status status="PASS" starttime="20201030 11:52:11.492" endtime="20201030 11:52:11.495"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.487" endtime="20201030 11:52:11.495"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:11.499" endtime="20201030 11:52:11.518"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.497" endtime="20201030 11:52:11.519"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.496" endtime="20201030 11:52:11.519"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.134" endtime="20201030 11:52:11.520"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.134" endtime="20201030 11:52:11.520"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:11.529" endtime="20201030 11:52:11.549"></status>
</kw>
<msg timestamp="20201030 11:52:11.550" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:11.527" endtime="20201030 11:52:11.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:11.552" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:11.551" endtime="20201030 11:52:11.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:11.553" endtime="20201030 11:52:11.555"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.524" endtime="20201030 11:52:11.556"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.522" endtime="20201030 11:52:11.556"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:11.563" endtime="20201030 11:52:11.849"></status>
</kw>
<msg timestamp="20201030 11:52:11.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024381042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024470111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:11.561" endtime="20201030 11:52:11.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:11.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024381042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024470111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:11.853" endtime="20201030 11:52:11.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:11.862" endtime="20201030 11:52:11.864"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.559" endtime="20201030 11:52:11.864"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.557" endtime="20201030 11:52:11.865"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:11.869" level="INFO">${RESULT} = [{'diff': 8.906900000000065e-05}, {'diff': 8.922199999999991e-05}, {'diff': 8.920800000000034e-05}, {'diff': 8.976399999999912e-05}, {'diff': 8.911099999999936e-05}, {'diff': 8.893100000000043e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:11.866" endtime="20201030 11:52:11.869"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:11.873" level="INFO">${ACCURACY} = {'diff': [8.906900000000065e-05, 8.922199999999991e-05, 8.920800000000034e-05, 8.976399999999912e-05, 8.911099999999936e-05, 8.893100000000043e-05, 8.897199999999966e-05, 8.969499999999728e-05, 8.8819...</msg>
<status status="PASS" starttime="20201030 11:52:11.870" endtime="20201030 11:52:11.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:11.878" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201030 11:52:11.877" endtime="20201030 11:52:11.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:11.881" level="INFO">VALUE: [8.906900000000065e-05, 8.922199999999991e-05, 8.920800000000034e-05, 8.976399999999912e-05, 8.911099999999936e-05, 8.893100000000043e-05, 8.897199999999966e-05, 8.969499999999728e-05, 8.881999999999987e-05, 8.924999999999905e-05, 8.922299999999939e-05, 8.922299999999939e-05, 8.924999999999905e-05, 8.883399999999944e-05, 8.977700000000269e-05, 8.88190000000004e-05, 8.908300000000022e-05, 8.91519999999986e-05, 8.911099999999936e-05, 8.884699999999954e-05, 8.904200000000098e-05, 8.908299999999675e-05, 8.93060000000008e-05, 8.879200000000073e-05, 8.912499999999893e-05, 8.968100000000118e-05, 8.905599999999708e-05, 8.977799999999869e-05, 8.972200000000041e-05, 8.909699999999979e-05, 8.891599999999791e-05, 8.881999999999987e-05, 8.886100000000258e-05, 8.912499999999893e-05, 8.974999999999955e-05, 8.923599999999948e-05, 8.89860000000027e-05, 8.924999999999905e-05, 8.917999999999773e-05, 8.972200000000041e-05, 8.972199999999694e-05, 8.91389999999985e-05, 8.893100000000043e-05, 8.908300000000022e-05, 8.925000000000252e-05, 8.909700000000326e-05, 8.909799999999926e-05, 8.89999999999988e-05, 8.897299999999914e-05, 8.88190000000004e-05]</msg>
<status status="PASS" starttime="20201030 11:52:11.879" endtime="20201030 11:52:11.882"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.874" endtime="20201030 11:52:11.883"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:11.887" endtime="20201030 11:52:11.906"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.885" endtime="20201030 11:52:11.907"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.884" endtime="20201030 11:52:11.907"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.521" endtime="20201030 11:52:11.907"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.520" endtime="20201030 11:52:11.908"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:11.917" endtime="20201030 11:52:11.935"></status>
</kw>
<msg timestamp="20201030 11:52:11.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:11.915" endtime="20201030 11:52:11.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:11.938" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:11.937" endtime="20201030 11:52:11.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:11.939" endtime="20201030 11:52:11.941"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.912" endtime="20201030 11:52:11.942"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.910" endtime="20201030 11:52:11.942"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:11.949" endtime="20201030 11:52:12.236"></status>
</kw>
<msg timestamp="20201030 11:52:12.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0223055, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022395917, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:52:11.947" endtime="20201030 11:52:12.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:12.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0223055, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022395917, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:52:12.240" endtime="20201030 11:52:12.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:12.249" endtime="20201030 11:52:12.251"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.945" endtime="20201030 11:52:12.251"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.943" endtime="20201030 11:52:12.252"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:12.256" level="INFO">${RESULT} = [{'diff': 9.041700000000236e-05}, {'diff': 8.983400000000044e-05}, {'diff': 8.995800000000109e-05}, {'diff': 8.991599999999891e-05}, {'diff': 8.979100000000226e-05}, {'diff': 8.979099999999879e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:12.253" endtime="20201030 11:52:12.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:12.261" level="INFO">${ACCURACY} = {'diff': [9.041700000000236e-05, 8.983400000000044e-05, 8.995800000000109e-05, 8.991599999999891e-05, 8.979100000000226e-05, 8.979099999999879e-05, 9.073600000000098e-05, 9.020800000000134e-05, 9.0041...</msg>
<status status="PASS" starttime="20201030 11:52:12.257" endtime="20201030 11:52:12.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:12.266" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201030 11:52:12.265" endtime="20201030 11:52:12.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:12.268" level="INFO">VALUE: [9.041700000000236e-05, 8.983400000000044e-05, 8.995800000000109e-05, 8.991599999999891e-05, 8.979100000000226e-05, 8.979099999999879e-05, 9.073600000000098e-05, 9.020800000000134e-05, 9.004100000000251e-05, 9.012499999999993e-05, 9.070799999999837e-05, 9.025000000000005e-05, 8.993099999999796e-05, 9.022200000000091e-05, 9.079199999999926e-05, 8.977800000000216e-05, 8.997200000000066e-05, 9.026399999999962e-05, 9.069499999999828e-05, 9.011100000000036e-05, 9.081899999999893e-05, 9.072200000000141e-05, 8.987500000000315e-05, 9.072200000000141e-05, 9.01939999999983e-05, 9.073600000000098e-05, 9.051399999999987e-05, 9.009700000000079e-05, 9.072200000000141e-05, 9.019500000000125e-05, 8.994400000000152e-05, 9.018099999999821e-05, 9.01389999999995e-05, 9.070799999999837e-05, 9.023600000000048e-05, 9.076400000000012e-05, 9.022200000000091e-05, 8.9945000000001e-05, 9.074999999999708e-05, 8.99999999999998e-05, 9.002799999999894e-05, 9.004099999999904e-05, 8.979099999999879e-05, 9.002699999999947e-05, 8.995800000000109e-05, 9.002799999999894e-05, 9.000000000000327e-05, 9.070899999999785e-05, 9.001399999999937e-05, 9.009700000000079e-05]</msg>
<status status="PASS" starttime="20201030 11:52:12.267" endtime="20201030 11:52:12.269"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.262" endtime="20201030 11:52:12.270"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:12.274" endtime="20201030 11:52:12.293"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.272" endtime="20201030 11:52:12.294"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.271" endtime="20201030 11:52:12.294"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.909" endtime="20201030 11:52:12.294"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.908" endtime="20201030 11:52:12.294"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:12.303" endtime="20201030 11:52:12.322"></status>
</kw>
<msg timestamp="20201030 11:52:12.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:12.302" endtime="20201030 11:52:12.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:12.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:12.324" endtime="20201030 11:52:12.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:12.326" endtime="20201030 11:52:12.328"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.299" endtime="20201030 11:52:12.329"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.297" endtime="20201030 11:52:12.329"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:12.337" endtime="20201030 11:52:12.624"></status>
</kw>
<msg timestamp="20201030 11:52:12.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022768875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022860556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:12.335" endtime="20201030 11:52:12.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:12.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022768875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022860556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:12.628" endtime="20201030 11:52:12.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:12.637" endtime="20201030 11:52:12.639"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.333" endtime="20201030 11:52:12.639"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.331" endtime="20201030 11:52:12.640"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:12.644" level="INFO">${RESULT} = [{'diff': 9.168099999999971e-05}, {'diff': 9.170900000000232e-05}, {'diff': 9.11520000000006e-05}, {'diff': 9.126400000000062e-05}, {'diff': 9.126299999999768e-05}, {'diff': 9.097200000000166e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:12.641" endtime="20201030 11:52:12.644"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:12.648" level="INFO">${ACCURACY} = {'diff': [9.168099999999971e-05, 9.170900000000232e-05, 9.11520000000006e-05, 9.126400000000062e-05, 9.126299999999768e-05, 9.097200000000166e-05, 9.080499999999936e-05, 9.091599999999991e-05, 9.17219...</msg>
<status status="PASS" starttime="20201030 11:52:12.645" endtime="20201030 11:52:12.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:12.653" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201030 11:52:12.652" endtime="20201030 11:52:12.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:12.655" level="INFO">VALUE: [9.168099999999971e-05, 9.170900000000232e-05, 9.11520000000006e-05, 9.126400000000062e-05, 9.126299999999768e-05, 9.097200000000166e-05, 9.080499999999936e-05, 9.091599999999991e-05, 9.172199999999894e-05, 9.092999999999948e-05, 9.105500000000308e-05, 9.093099999999896e-05, 9.123700000000096e-05, 9.091699999999939e-05, 9.0945000000002e-05, 9.175000000000155e-05, 9.105599999999908e-05, 9.173600000000198e-05, 9.091599999999991e-05, 9.092999999999948e-05, 9.084799999999754e-05, 9.104100000000004e-05, 9.087500000000068e-05, 9.098600000000123e-05, 9.091700000000286e-05, 9.076400000000012e-05, 9.109699999999832e-05, 9.122199999999844e-05, 9.179199999999679e-05, 9.123599999999801e-05, 9.105499999999961e-05, 9.098600000000123e-05, 9.108299999999875e-05, 9.116699999999964e-05, 9.086100000000111e-05, 9.112500000000093e-05, 9.090299999999982e-05, 9.091699999999939e-05, 9.120900000000182e-05, 9.11390000000005e-05, 9.16939999999998e-05, 9.126400000000062e-05, 9.079099999999979e-05, 9.083300000000197e-05, 9.091699999999939e-05, 9.084700000000154e-05, 9.094399999999905e-05, 9.088900000000025e-05, 9.102799999999994e-05, 9.10000000000008e-05]</msg>
<status status="PASS" starttime="20201030 11:52:12.654" endtime="20201030 11:52:12.660"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.649" endtime="20201030 11:52:12.661"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:12.665" endtime="20201030 11:52:12.684"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.663" endtime="20201030 11:52:12.685"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.662" endtime="20201030 11:52:12.685"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.295" endtime="20201030 11:52:12.685"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.295" endtime="20201030 11:52:12.685"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:12.695" endtime="20201030 11:52:12.717"></status>
</kw>
<msg timestamp="20201030 11:52:12.717" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:12.693" endtime="20201030 11:52:12.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:12.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:12.718" endtime="20201030 11:52:12.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:12.721" endtime="20201030 11:52:12.723"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.690" endtime="20201030 11:52:12.723"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.688" endtime="20201030 11:52:12.724"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:12.732" endtime="20201030 11:52:13.018"></status>
</kw>
<msg timestamp="20201030 11:52:13.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026151931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026243806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:12.729" endtime="20201030 11:52:13.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:13.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026151931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026243806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:13.022" endtime="20201030 11:52:13.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:13.031" endtime="20201030 11:52:13.033"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.726" endtime="20201030 11:52:13.033"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.724" endtime="20201030 11:52:13.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:13.038" level="INFO">${RESULT} = [{'diff': 9.187500000000168e-05}, {'diff': 9.276299999999918e-05}, {'diff': 9.187499999999821e-05}, {'diff': 9.2026999999998e-05}, {'diff': 9.19719999999992e-05}, {'diff': 9.191700000000039e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 11:52:13.034" endtime="20201030 11:52:13.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:13.042" level="INFO">${ACCURACY} = {'diff': [9.187500000000168e-05, 9.276299999999918e-05, 9.187499999999821e-05, 9.2026999999998e-05, 9.19719999999992e-05, 9.191700000000039e-05, 9.21390000000015e-05, 9.198599999999876e-05, 9.22500000...</msg>
<status status="PASS" starttime="20201030 11:52:13.039" endtime="20201030 11:52:13.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:13.047" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201030 11:52:13.046" endtime="20201030 11:52:13.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:13.049" level="INFO">VALUE: [9.187500000000168e-05, 9.276299999999918e-05, 9.187499999999821e-05, 9.2026999999998e-05, 9.19719999999992e-05, 9.191700000000039e-05, 9.21390000000015e-05, 9.198599999999876e-05, 9.225000000000205e-05, 9.212500000000193e-05, 9.201400000000137e-05, 9.277800000000169e-05, 9.179199999999679e-05, 9.216699999999717e-05, 9.194499999999953e-05, 9.205600000000008e-05, 9.184799999999854e-05, 9.202799999999747e-05, 9.274999999999908e-05, 9.226300000000215e-05, 9.226400000000162e-05, 9.20000000000018e-05, 9.190200000000134e-05, 9.194400000000005e-05, 9.215300000000107e-05, 9.20000000000018e-05, 9.197200000000266e-05, 9.21940000000003e-05, 9.188899999999778e-05, 9.20139999999979e-05, 9.1945000000003e-05, 9.194499999999953e-05, 9.202799999999747e-05, 9.272299999999942e-05, 9.21940000000003e-05, 9.224999999999858e-05, 9.270800000000037e-05, 9.195800000000309e-05, 9.181899999999993e-05, 9.265199999999862e-05, 9.272199999999994e-05, 9.21940000000003e-05, 9.206900000000018e-05, 9.215300000000107e-05, 9.218000000000073e-05, 9.208299999999975e-05, 9.188900000000125e-05, 9.272199999999994e-05, 9.205500000000061e-05, 9.188899999999778e-05]</msg>
<status status="PASS" starttime="20201030 11:52:13.048" endtime="20201030 11:52:13.051"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.043" endtime="20201030 11:52:13.051"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:13.055" endtime="20201030 11:52:13.075"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.054" endtime="20201030 11:52:13.075"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.052" endtime="20201030 11:52:13.076"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.686" endtime="20201030 11:52:13.076"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.686" endtime="20201030 11:52:13.076"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:13.085" endtime="20201030 11:52:13.104"></status>
</kw>
<msg timestamp="20201030 11:52:13.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:13.084" endtime="20201030 11:52:13.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:13.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:13.105" endtime="20201030 11:52:13.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:13.108" endtime="20201030 11:52:13.110"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.081" endtime="20201030 11:52:13.110"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.079" endtime="20201030 11:52:13.111"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:13.117" endtime="20201030 11:52:13.403"></status>
</kw>
<msg timestamp="20201030 11:52:13.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022404389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022497722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:13.116" endtime="20201030 11:52:13.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:13.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022404389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022497722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:13.408" endtime="20201030 11:52:13.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:13.416" endtime="20201030 11:52:13.418"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.113" endtime="20201030 11:52:13.419"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.111" endtime="20201030 11:52:13.419"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:13.423" level="INFO">${RESULT} = [{'diff': 9.3333000000001e-05}, {'diff': 9.308300000000075e-05}, {'diff': 9.290299999999835e-05}, {'diff': 9.375000000000008e-05}, {'diff': 9.313899999999903e-05}, {'diff': 9.291700000000139e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:52:13.420" endtime="20201030 11:52:13.423"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:13.428" level="INFO">${ACCURACY} = {'diff': [9.3333000000001e-05, 9.308300000000075e-05, 9.290299999999835e-05, 9.375000000000008e-05, 9.313899999999903e-05, 9.291700000000139e-05, 9.298599999999976e-05, 9.324999999999958e-05, 9.373599...</msg>
<status status="PASS" starttime="20201030 11:52:13.424" endtime="20201030 11:52:13.429"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:13.433" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201030 11:52:13.432" endtime="20201030 11:52:13.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:13.436" level="INFO">VALUE: [9.3333000000001e-05, 9.308300000000075e-05, 9.290299999999835e-05, 9.375000000000008e-05, 9.313899999999903e-05, 9.291700000000139e-05, 9.298599999999976e-05, 9.324999999999958e-05, 9.373599999999704e-05, 9.298699999999924e-05, 9.298699999999924e-05, 9.323700000000296e-05, 9.304199999999804e-05, 9.309700000000032e-05, 9.294400000000105e-05, 9.375000000000008e-05, 9.279099999999832e-05, 9.320800000000087e-05, 9.302800000000194e-05, 9.308300000000075e-05, 9.279199999999779e-05, 9.375000000000008e-05, 9.304200000000151e-05, 9.29590000000001e-05, 9.323600000000001e-05, 9.290299999999835e-05, 9.320900000000035e-05, 9.307000000000065e-05, 9.291699999999792e-05, 9.376399999999965e-05, 9.373600000000051e-05, 9.305500000000161e-05, 9.323600000000001e-05, 9.305499999999814e-05, 9.287500000000268e-05, 9.280500000000136e-05, 9.370800000000137e-05, 9.29720000000002e-05, 9.277799999999822e-05, 9.370800000000137e-05, 9.290300000000182e-05, 9.277800000000169e-05, 9.288900000000225e-05, 9.284700000000007e-05, 9.308400000000022e-05, 9.326400000000262e-05, 9.276399999999865e-05, 9.373699999999999e-05, 9.294399999999758e-05, 9.287499999999921e-05]</msg>
<status status="PASS" starttime="20201030 11:52:13.434" endtime="20201030 11:52:13.436"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.429" endtime="20201030 11:52:13.437"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:13.441" endtime="20201030 11:52:13.460"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.439" endtime="20201030 11:52:13.461"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.438" endtime="20201030 11:52:13.461"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.077" endtime="20201030 11:52:13.462"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.076" endtime="20201030 11:52:13.462"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:13.471" endtime="20201030 11:52:13.489"></status>
</kw>
<msg timestamp="20201030 11:52:13.490" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:13.469" endtime="20201030 11:52:13.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:13.492" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:13.491" endtime="20201030 11:52:13.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:13.494" endtime="20201030 11:52:13.495"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.467" endtime="20201030 11:52:13.496"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.464" endtime="20201030 11:52:13.496"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:13.503" endtime="20201030 11:52:13.790"></status>
</kw>
<msg timestamp="20201030 11:52:13.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022306708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022400597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:13.501" endtime="20201030 11:52:13.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:13.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022306708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022400597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:13.794" endtime="20201030 11:52:13.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:13.803" endtime="20201030 11:52:13.805"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.499" endtime="20201030 11:52:13.805"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.497" endtime="20201030 11:52:13.805"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:13.809" level="INFO">${RESULT} = [{'diff': 9.388899999999978e-05}, {'diff': 9.41659999999997e-05}, {'diff': 9.392999999999901e-05}, {'diff': 9.393000000000248e-05}, {'diff': 9.38469999999976e-05}, {'diff': 9.383299999999803e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:52:13.806" endtime="20201030 11:52:13.810"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:13.814" level="INFO">${ACCURACY} = {'diff': [9.388899999999978e-05, 9.41659999999997e-05, 9.392999999999901e-05, 9.393000000000248e-05, 9.38469999999976e-05, 9.383299999999803e-05, 9.380600000000183e-05, 9.404200000000251e-05, 9.380600...</msg>
<status status="PASS" starttime="20201030 11:52:13.810" endtime="20201030 11:52:13.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:13.818" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201030 11:52:13.817" endtime="20201030 11:52:13.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:13.821" level="INFO">VALUE: [9.388899999999978e-05, 9.41659999999997e-05, 9.392999999999901e-05, 9.393000000000248e-05, 9.38469999999976e-05, 9.383299999999803e-05, 9.380600000000183e-05, 9.404200000000251e-05, 9.380600000000183e-05, 9.404199999999904e-05, 9.402799999999947e-05, 9.384800000000054e-05, 9.384800000000054e-05, 9.474999999999761e-05, 9.40139999999999e-05, 9.475000000000108e-05, 9.419399999999883e-05, 9.422199999999797e-05, 9.420800000000187e-05, 9.411099999999742e-05, 9.402800000000294e-05, 9.411100000000089e-05, 9.452799999999997e-05, 9.416699999999917e-05, 9.395799999999815e-05, 9.424999999999711e-05, 9.393099999999849e-05, 9.409699999999785e-05, 9.479199999999979e-05, 9.379200000000226e-05, 9.397199999999772e-05, 9.423700000000049e-05, 9.381900000000193e-05, 9.426400000000015e-05, 9.416600000000316e-05, 9.426400000000015e-05, 9.47079999999989e-05, 9.380499999999889e-05, 9.423600000000101e-05, 9.397199999999772e-05, 9.390300000000282e-05, 9.402799999999947e-05, 9.402800000000294e-05, 9.427799999999972e-05, 9.472299999999795e-05, 9.395899999999763e-05, 9.420900000000135e-05, 9.393099999999849e-05, 9.405599999999861e-05, 9.476400000000065e-05]</msg>
<status status="PASS" starttime="20201030 11:52:13.819" endtime="20201030 11:52:13.821"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.815" endtime="20201030 11:52:13.822"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:13.826" endtime="20201030 11:52:13.845"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.824" endtime="20201030 11:52:13.846"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.823" endtime="20201030 11:52:13.846"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.463" endtime="20201030 11:52:13.846"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.462" endtime="20201030 11:52:13.846"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:13.855" endtime="20201030 11:52:13.875"></status>
</kw>
<msg timestamp="20201030 11:52:13.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:13.854" endtime="20201030 11:52:13.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:13.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:13.876" endtime="20201030 11:52:13.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:13.879" endtime="20201030 11:52:13.880"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.851" endtime="20201030 11:52:13.881"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.849" endtime="20201030 11:52:13.881"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:13.888" endtime="20201030 11:52:14.193"></status>
</kw>
<msg timestamp="20201030 11:52:14.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023253972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023348931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:13.886" endtime="20201030 11:52:14.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:14.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023253972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023348931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:14.198" endtime="20201030 11:52:14.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:14.206" endtime="20201030 11:52:14.208"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.884" endtime="20201030 11:52:14.208"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.882" endtime="20201030 11:52:14.209"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:14.213" level="INFO">${RESULT} = [{'diff': 9.495899999999863e-05}, {'diff': 9.522299999999845e-05}, {'diff': 9.524999999999811e-05}, {'diff': 9.490200000000087e-05}, {'diff': 9.518000000000026e-05}, {'diff': 9.52079999999994e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:14.210" endtime="20201030 11:52:14.213"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:14.217" level="INFO">${ACCURACY} = {'diff': [9.495899999999863e-05, 9.522299999999845e-05, 9.524999999999811e-05, 9.490200000000087e-05, 9.518000000000026e-05, 9.52079999999994e-05, 9.488899999999731e-05, 9.498600000000176e-05, 9.49580...</msg>
<status status="PASS" starttime="20201030 11:52:14.214" endtime="20201030 11:52:14.218"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:14.222" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201030 11:52:14.221" endtime="20201030 11:52:14.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:14.225" level="INFO">VALUE: [9.495899999999863e-05, 9.522299999999845e-05, 9.524999999999811e-05, 9.490200000000087e-05, 9.518000000000026e-05, 9.52079999999994e-05, 9.488899999999731e-05, 9.498600000000176e-05, 9.495800000000262e-05, 9.508299999999928e-05, 9.502800000000047e-05, 9.495799999999915e-05, 9.527799999999725e-05, 9.50140000000009e-05, 9.576399999999818e-05, 9.511099999999842e-05, 9.48339999999985e-05, 9.516700000000017e-05, 9.523699999999802e-05, 9.529099999999735e-05, 9.49590000000021e-05, 9.573599999999904e-05, 9.486099999999817e-05, 9.509700000000232e-05, 9.516599999999723e-05, 9.495800000000262e-05, 9.51530000000006e-05, 9.50140000000009e-05, 9.573599999999904e-05, 9.481899999999946e-05, 9.581999999999993e-05, 9.487500000000121e-05, 9.573700000000199e-05, 9.51530000000006e-05, 9.574999999999861e-05, 9.524999999999811e-05, 9.508400000000222e-05, 9.576299999999871e-05, 9.488799999999784e-05, 9.51660000000007e-05, 9.511100000000189e-05, 9.484700000000207e-05, 9.481899999999946e-05, 9.502800000000047e-05, 9.502800000000047e-05, 9.554200000000054e-05, 9.518099999999974e-05, 9.52079999999994e-05, 9.490299999999688e-05, 9.48469999999986e-05]</msg>
<status status="PASS" starttime="20201030 11:52:14.223" endtime="20201030 11:52:14.226"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.218" endtime="20201030 11:52:14.227"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:14.231" endtime="20201030 11:52:14.250"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.229" endtime="20201030 11:52:14.251"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.228" endtime="20201030 11:52:14.251"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.847" endtime="20201030 11:52:14.252"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.847" endtime="20201030 11:52:14.252"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:14.263" endtime="20201030 11:52:14.282"></status>
</kw>
<msg timestamp="20201030 11:52:14.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:14.261" endtime="20201030 11:52:14.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:14.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:14.283" endtime="20201030 11:52:14.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:14.286" endtime="20201030 11:52:14.288"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.258" endtime="20201030 11:52:14.288"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.256" endtime="20201030 11:52:14.289"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:14.296" endtime="20201030 11:52:14.583"></status>
</kw>
<msg timestamp="20201030 11:52:14.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024998458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025094597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:14.294" endtime="20201030 11:52:14.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:14.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024998458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025094597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:14.587" endtime="20201030 11:52:14.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:14.596" endtime="20201030 11:52:14.598"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.291" endtime="20201030 11:52:14.598"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.289" endtime="20201030 11:52:14.599"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:14.603" level="INFO">${RESULT} = [{'diff': 9.613899999999856e-05}, {'diff': 9.60140000000019e-05}, {'diff': 9.611099999999942e-05}, {'diff': 9.577799999999775e-05}, {'diff': 9.679199999999832e-05}, {'diff': 9.60140000000019e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:52:14.599" endtime="20201030 11:52:14.603"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:14.608" level="INFO">${ACCURACY} = {'diff': [9.613899999999856e-05, 9.60140000000019e-05, 9.611099999999942e-05, 9.577799999999775e-05, 9.679199999999832e-05, 9.60140000000019e-05, 9.598600000000276e-05, 9.613899999999856e-05, 9.611099...</msg>
<status status="PASS" starttime="20201030 11:52:14.604" endtime="20201030 11:52:14.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:14.612" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201030 11:52:14.611" endtime="20201030 11:52:14.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:14.615" level="INFO">VALUE: [9.613899999999856e-05, 9.60140000000019e-05, 9.611099999999942e-05, 9.577799999999775e-05, 9.679199999999832e-05, 9.60140000000019e-05, 9.598600000000276e-05, 9.613899999999856e-05, 9.611099999999942e-05, 9.58339999999995e-05, 9.59859999999993e-05, 9.594400000000058e-05, 9.584700000000307e-05, 9.588899999999831e-05, 9.59859999999993e-05, 9.61660000000017e-05, 9.580500000000089e-05, 9.623599999999954e-05, 9.591699999999745e-05, 9.580500000000089e-05, 9.61530000000016e-05, 9.591700000000092e-05, 9.67080000000009e-05, 9.597199999999972e-05, 9.616700000000117e-05, 9.611099999999942e-05, 9.609699999999985e-05, 9.597199999999972e-05, 9.579200000000079e-05, 9.607000000000018e-05, 9.588900000000178e-05, 9.622199999999997e-05, 9.624999999999911e-05, 9.590299999999788e-05, 9.623599999999954e-05, 9.594400000000058e-05, 9.626399999999868e-05, 9.674999999999961e-05, 9.580500000000089e-05, 9.676399999999918e-05, 9.580600000000036e-05, 9.676399999999918e-05, 9.60140000000019e-05, 9.59859999999993e-05, 9.570899999999938e-05, 9.607000000000018e-05, 9.583300000000003e-05, 9.618100000000074e-05, 9.577799999999775e-05, 9.618000000000126e-05]</msg>
<status status="PASS" starttime="20201030 11:52:14.614" endtime="20201030 11:52:14.616"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.609" endtime="20201030 11:52:14.616"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:14.620" endtime="20201030 11:52:14.640"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.619" endtime="20201030 11:52:14.640"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.617" endtime="20201030 11:52:14.641"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.253" endtime="20201030 11:52:14.641"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.252" endtime="20201030 11:52:14.641"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:14.650" endtime="20201030 11:52:14.669"></status>
</kw>
<msg timestamp="20201030 11:52:14.669" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:14.649" endtime="20201030 11:52:14.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:14.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:14.670" endtime="20201030 11:52:14.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:14.673" endtime="20201030 11:52:14.675"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.646" endtime="20201030 11:52:14.675"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.644" endtime="20201030 11:52:14.676"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:14.682" endtime="20201030 11:52:14.969"></status>
</kw>
<msg timestamp="20201030 11:52:14.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022409903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022507125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:14.681" endtime="20201030 11:52:14.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:14.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022409903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022507125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:14.974" endtime="20201030 11:52:14.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:14.983" endtime="20201030 11:52:14.984"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.678" endtime="20201030 11:52:14.985"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.676" endtime="20201030 11:52:14.985"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:14.989" level="INFO">${RESULT} = [{'diff': 9.722200000000097e-05}, {'diff': 9.715299999999913e-05}, {'diff': 9.72219999999975e-05}, {'diff': 9.715199999999966e-05}, {'diff': 9.705599999999814e-05}, {'diff': 9.687499999999974e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:14.986" endtime="20201030 11:52:14.990"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:14.994" level="INFO">${ACCURACY} = {'diff': [9.722200000000097e-05, 9.715299999999913e-05, 9.72219999999975e-05, 9.715199999999966e-05, 9.705599999999814e-05, 9.687499999999974e-05, 9.712499999999999e-05, 9.716599999999923e-05, 9.72370...</msg>
<status status="PASS" starttime="20201030 11:52:14.990" endtime="20201030 11:52:14.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:14.998" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201030 11:52:14.997" endtime="20201030 11:52:14.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:15.001" level="INFO">VALUE: [9.722200000000097e-05, 9.715299999999913e-05, 9.72219999999975e-05, 9.715199999999966e-05, 9.705599999999814e-05, 9.687499999999974e-05, 9.712499999999999e-05, 9.716599999999923e-05, 9.723700000000002e-05, 9.68470000000006e-05, 9.715199999999966e-05, 9.69019999999994e-05, 9.777799999999975e-05, 9.723600000000054e-05, 9.769399999999887e-05, 9.687499999999974e-05, 9.77080000000019e-05, 9.722200000000097e-05, 9.701299999999996e-05, 9.77080000000019e-05, 9.688900000000278e-05, 9.67920000000018e-05, 9.712499999999999e-05, 9.693100000000149e-05, 9.695900000000063e-05, 9.687499999999974e-05, 9.698599999999682e-05, 9.69860000000003e-05, 9.697200000000072e-05, 9.699999999999986e-05, 9.697200000000072e-05, 9.698599999999682e-05, 9.686100000000017e-05, 9.701399999999943e-05, 9.779099999999985e-05, 9.77080000000019e-05, 9.779199999999932e-05, 9.781900000000246e-05, 9.687499999999974e-05, 9.770900000000138e-05, 9.691700000000192e-05, 9.69019999999994e-05, 9.731900000000196e-05, 9.775000000000061e-05, 9.702699999999953e-05, 9.697200000000072e-05, 9.772200000000147e-05, 9.677799999999875e-05, 9.719399999999837e-05, 9.709699999999738e-05]</msg>
<status status="PASS" starttime="20201030 11:52:15.000" endtime="20201030 11:52:15.002"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.995" endtime="20201030 11:52:15.003"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:15.006" endtime="20201030 11:52:15.026"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.005" endtime="20201030 11:52:15.026"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.004" endtime="20201030 11:52:15.027"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.642" endtime="20201030 11:52:15.027"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.641" endtime="20201030 11:52:15.027"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:15.036" endtime="20201030 11:52:15.055"></status>
</kw>
<msg timestamp="20201030 11:52:15.056" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:15.035" endtime="20201030 11:52:15.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:15.058" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:15.057" endtime="20201030 11:52:15.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:15.059" endtime="20201030 11:52:15.061"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.032" endtime="20201030 11:52:15.062"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.030" endtime="20201030 11:52:15.062"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:15.069" endtime="20201030 11:52:15.356"></status>
</kw>
<msg timestamp="20201030 11:52:15.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023231542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023330194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:15.067" endtime="20201030 11:52:15.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:15.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023231542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023330194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:15.360" endtime="20201030 11:52:15.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:15.369" endtime="20201030 11:52:15.371"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.065" endtime="20201030 11:52:15.371"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.063" endtime="20201030 11:52:15.372"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:15.376" level="INFO">${RESULT} = [{'diff': 9.865199999999769e-05}, {'diff': 9.779099999999985e-05}, {'diff': 9.813900000000056e-05}, {'diff': 9.783299999999856e-05}, {'diff': 9.797199999999825e-05}, {'diff': 9.870799999999944e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:15.372" endtime="20201030 11:52:15.376"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:15.380" level="INFO">${ACCURACY} = {'diff': [9.865199999999769e-05, 9.779099999999985e-05, 9.813900000000056e-05, 9.783299999999856e-05, 9.797199999999825e-05, 9.870799999999944e-05, 9.794500000000206e-05, 9.809700000000185e-05, 9.8083...</msg>
<status status="PASS" starttime="20201030 11:52:15.377" endtime="20201030 11:52:15.380"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:15.385" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201030 11:52:15.384" endtime="20201030 11:52:15.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:15.387" level="INFO">VALUE: [9.865199999999769e-05, 9.779099999999985e-05, 9.813900000000056e-05, 9.783299999999856e-05, 9.797199999999825e-05, 9.870799999999944e-05, 9.794500000000206e-05, 9.809700000000185e-05, 9.808399999999828e-05, 9.794499999999859e-05, 9.813900000000056e-05, 9.8028e-05, 9.78059999999989e-05, 9.804199999999957e-05, 9.788900000000031e-05, 9.801400000000043e-05, 9.80410000000001e-05, 9.780499999999942e-05, 9.816600000000023e-05, 9.820799999999894e-05, 9.81799999999998e-05, 9.869399999999987e-05, 9.869399999999987e-05, 9.847199999999875e-05, 9.823599999999807e-05, 9.815300000000013e-05, 9.81799999999998e-05, 9.794499999999859e-05, 9.811099999999795e-05, 9.808399999999828e-05, 9.78340000000015e-05, 9.875000000000161e-05, 9.811100000000142e-05, 9.788900000000031e-05, 9.802700000000053e-05, 9.802699999999706e-05, 9.855599999999964e-05, 9.80410000000001e-05, 9.82219999999985e-05, 9.78609999999977e-05, 9.823600000000154e-05, 9.804199999999957e-05, 9.791700000000292e-05, 9.823600000000154e-05, 9.830499999999992e-05, 9.777799999999975e-05, 9.791699999999945e-05, 9.819499999999884e-05, 9.873699999999805e-05, 9.862499999999802e-05]</msg>
<status status="PASS" starttime="20201030 11:52:15.386" endtime="20201030 11:52:15.389"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.381" endtime="20201030 11:52:15.390"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:15.394" endtime="20201030 11:52:15.413"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.392" endtime="20201030 11:52:15.414"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.391" endtime="20201030 11:52:15.414"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.028" endtime="20201030 11:52:15.414"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.028" endtime="20201030 11:52:15.414"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:15.423" endtime="20201030 11:52:15.443"></status>
</kw>
<msg timestamp="20201030 11:52:15.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:15.422" endtime="20201030 11:52:15.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:15.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:15.444" endtime="20201030 11:52:15.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:15.447" endtime="20201030 11:52:15.449"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.419" endtime="20201030 11:52:15.449"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.417" endtime="20201030 11:52:15.450"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:15.456" endtime="20201030 11:52:15.743"></status>
</kw>
<msg timestamp="20201030 11:52:15.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022391389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022490347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:15.455" endtime="20201030 11:52:15.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:15.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022391389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022490347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:15.748" endtime="20201030 11:52:15.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:15.756" endtime="20201030 11:52:15.758"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.452" endtime="20201030 11:52:15.759"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.450" endtime="20201030 11:52:15.759"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:15.763" level="INFO">${RESULT} = [{'diff': 9.895799999999969e-05}, {'diff': 9.89860000000023e-05}, {'diff': 9.890300000000088e-05}, {'diff': 9.976399999999871e-05}, {'diff': 9.879200000000032e-05}, {'diff': 9.888899999999784e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:15.760" endtime="20201030 11:52:15.763"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:15.768" level="INFO">${ACCURACY} = {'diff': [9.895799999999969e-05, 9.89860000000023e-05, 9.890300000000088e-05, 9.976399999999871e-05, 9.879200000000032e-05, 9.888899999999784e-05, 9.908299999999981e-05, 9.877800000000075e-05, 9.91949...</msg>
<status status="PASS" starttime="20201030 11:52:15.764" endtime="20201030 11:52:15.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:15.773" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201030 11:52:15.772" endtime="20201030 11:52:15.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:15.776" level="INFO">VALUE: [9.895799999999969e-05, 9.89860000000023e-05, 9.890300000000088e-05, 9.976399999999871e-05, 9.879200000000032e-05, 9.888899999999784e-05, 9.908299999999981e-05, 9.877800000000075e-05, 9.919499999999984e-05, 9.89999999999984e-05, 9.909799999999885e-05, 9.912499999999852e-05, 9.884699999999913e-05, 9.96939999999974e-05, 9.898599999999882e-05, 9.908299999999981e-05, 9.90549999999972e-05, 9.976399999999871e-05, 9.883299999999956e-05, 9.973600000000304e-05, 9.909699999999938e-05, 9.887499999999827e-05, 9.891699999999698e-05, 9.976399999999871e-05, 9.919499999999984e-05, 9.927699999999831e-05, 9.888900000000131e-05, 9.905500000000067e-05, 9.893100000000002e-05, 9.901300000000196e-05, 9.977699999999881e-05, 9.90549999999972e-05, 9.880500000000042e-05, 9.908299999999981e-05, 9.970800000000044e-05, 9.909799999999885e-05, 9.888900000000131e-05, 9.911100000000242e-05, 9.887500000000174e-05, 9.88059999999999e-05, 9.887500000000174e-05, 9.970899999999991e-05, 9.922299999999898e-05, 9.901399999999796e-05, 9.920899999999941e-05, 9.95280000000015e-05, 9.900000000000186e-05, 9.887500000000174e-05, 9.929199999999735e-05, 9.900000000000186e-05]</msg>
<status status="PASS" starttime="20201030 11:52:15.774" endtime="20201030 11:52:15.777"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.769" endtime="20201030 11:52:15.777"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:15.781" endtime="20201030 11:52:15.800"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.779" endtime="20201030 11:52:15.801"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.778" endtime="20201030 11:52:15.801"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.415" endtime="20201030 11:52:15.802"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.415" endtime="20201030 11:52:15.802"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:15.811" endtime="20201030 11:52:15.830"></status>
</kw>
<msg timestamp="20201030 11:52:15.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:15.809" endtime="20201030 11:52:15.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:15.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:15.831" endtime="20201030 11:52:15.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:15.834" endtime="20201030 11:52:15.836"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.806" endtime="20201030 11:52:15.836"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.804" endtime="20201030 11:52:15.837"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:15.843" endtime="20201030 11:52:16.133"></status>
</kw>
<msg timestamp="20201030 11:52:16.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022404833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022505194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:15.842" endtime="20201030 11:52:16.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:16.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022404833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022505194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:16.137" endtime="20201030 11:52:16.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:16.146" endtime="20201030 11:52:16.148"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.839" endtime="20201030 11:52:16.148"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.837" endtime="20201030 11:52:16.149"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:16.153" level="INFO">${RESULT} = [{'diff': 0.0001003610000000002}, {'diff': 0.00010076399999999971}, {'diff': 0.00010020799999999747}, {'diff': 0.00010001399999999896}, {'diff': 0.00010001399999999896}, {'diff': 0.0001000970000000003...</msg>
<status status="PASS" starttime="20201030 11:52:16.149" endtime="20201030 11:52:16.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:16.157" level="INFO">${ACCURACY} = {'diff': [0.0001003610000000002, 0.00010076399999999971, 0.00010020799999999747, 0.00010001399999999896, 0.00010001399999999896, 0.00010009700000000038, 0.00010070800000000144, 0.00010012499999999952,...</msg>
<status status="PASS" starttime="20201030 11:52:16.154" endtime="20201030 11:52:16.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:16.162" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201030 11:52:16.161" endtime="20201030 11:52:16.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:16.164" level="INFO">VALUE: [0.0001003610000000002, 0.00010076399999999971, 0.00010020799999999747, 0.00010001399999999896, 0.00010001399999999896, 0.00010009700000000038, 0.00010070800000000144, 0.00010012499999999952, 9.990299999999841e-05, 0.00010009799999999985, 0.00010013899999999909, 9.994500000000059e-05, 0.00010022299999999998, 9.988899999999884e-05, 0.00010001399999999896, 0.00010073600000000058, 0.0001000549999999982, 0.00010048599999999686, 0.00010017999999999833, 0.00010077799999999928, 9.990299999999841e-05, 9.98609999999997e-05, 9.998599999999983e-05, 9.99999999999994e-05, 9.981900000000099e-05, 0.00010076399999999971, 9.992999999999808e-05, 0.00010009700000000038, 9.988899999999884e-05, 0.00010022299999999998, 9.995900000000016e-05, 0.0001001809999999978, 9.998599999999983e-05, 9.998599999999983e-05, 0.000100722000000001, 0.00010011099999999995, 0.00010011099999999995, 0.00010069400000000187, 0.00010005599999999767, 0.0001006670000000022, 9.988899999999884e-05, 0.00010012499999999952, 0.00010007000000000071, 0.00010020900000000041, 9.997200000000026e-05, 0.00010011099999999995, 0.00010013899999999909, 9.990199999999894e-05, 0.00010070899999999744, 0.00010027699999999931]</msg>
<status status="PASS" starttime="20201030 11:52:16.163" endtime="20201030 11:52:16.165"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.158" endtime="20201030 11:52:16.166"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:16.169" endtime="20201030 11:52:16.189"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.168" endtime="20201030 11:52:16.189"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.167" endtime="20201030 11:52:16.190"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.803" endtime="20201030 11:52:16.190"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.802" endtime="20201030 11:52:16.190"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:16.199" endtime="20201030 11:52:16.222"></status>
</kw>
<msg timestamp="20201030 11:52:16.222" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:16.198" endtime="20201030 11:52:16.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:16.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:16.223" endtime="20201030 11:52:16.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:16.226" endtime="20201030 11:52:16.228"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.195" endtime="20201030 11:52:16.228"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.193" endtime="20201030 11:52:16.229"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:16.235" endtime="20201030 11:52:16.521"></status>
</kw>
<msg timestamp="20201030 11:52:16.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026098556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026200028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:16.234" endtime="20201030 11:52:16.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:16.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026098556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026200028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:16.526" endtime="20201030 11:52:16.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:16.535" endtime="20201030 11:52:16.537"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.231" endtime="20201030 11:52:16.537"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.229" endtime="20201030 11:52:16.538"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:16.542" level="INFO">${RESULT} = [{'diff': 0.00010147200000000176}, {'diff': 0.0001011809999999988}, {'diff': 0.00010120900000000141}, {'diff': 0.00010093099999999855}, {'diff': 0.0001010419999999991}, {'diff': 0.00010106899999999877...</msg>
<status status="PASS" starttime="20201030 11:52:16.539" endtime="20201030 11:52:16.542"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:16.546" level="INFO">${ACCURACY} = {'diff': [0.00010147200000000176, 0.0001011809999999988, 0.00010120900000000141, 0.00010093099999999855, 0.0001010419999999991, 0.00010106899999999877, 0.00010120799999999847, 0.00010081900000000199, ...</msg>
<status status="PASS" starttime="20201030 11:52:16.543" endtime="20201030 11:52:16.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:16.551" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201030 11:52:16.550" endtime="20201030 11:52:16.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:16.553" level="INFO">VALUE: [0.00010147200000000176, 0.0001011809999999988, 0.00010120900000000141, 0.00010093099999999855, 0.0001010419999999991, 0.00010106899999999877, 0.00010120799999999847, 0.00010081900000000199, 0.00010127799999999978, 0.00010105600000000214, 0.0001010410000000031, 0.00010177800000000028, 0.00010091699999999898, 0.00010080599999999842, 0.00010120800000000194, 0.00010170899999999844, 0.00010094500000000159, 0.00010107000000000171, 0.00010177800000000028, 0.00010122300000000098, 0.00010113799999999715, 0.00010101399999999996, 0.00010173600000000158, 0.00010094399999999865, 0.00010106900000000224, 0.00010077699999999981, 0.0001010419999999991, 0.00010179100000000038, 0.0001010419999999991, 0.00010093099999999855, 0.00010111100000000095, 0.00010094500000000159, 0.00010094499999999812, 0.0001015419999999996, 0.0001011809999999988, 0.0001008749999999968, 0.00010101399999999996, 0.0001011809999999988, 0.00010125000000000065, 0.0001017359999999981, 0.00010116599999999976, 0.00010175000000000115, 0.00010088899999999984, 0.00010106900000000224, 0.00010081899999999852, 0.00010095800000000169, 0.0001009159999999995, 0.0001011939999999989, 0.00010111100000000095, 0.00010101399999999996]</msg>
<status status="PASS" starttime="20201030 11:52:16.552" endtime="20201030 11:52:16.555"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.547" endtime="20201030 11:52:16.556"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:16.559" endtime="20201030 11:52:16.579"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.558" endtime="20201030 11:52:16.579"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.557" endtime="20201030 11:52:16.580"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.191" endtime="20201030 11:52:16.580"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.191" endtime="20201030 11:52:16.580"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:16.589" endtime="20201030 11:52:16.609"></status>
</kw>
<msg timestamp="20201030 11:52:16.609" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:16.588" endtime="20201030 11:52:16.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:16.612" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:16.611" endtime="20201030 11:52:16.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:16.613" endtime="20201030 11:52:16.615"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.585" endtime="20201030 11:52:16.615"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.583" endtime="20201030 11:52:16.616"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:16.622" endtime="20201030 11:52:16.909"></status>
</kw>
<msg timestamp="20201030 11:52:16.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022229514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022331889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:16.621" endtime="20201030 11:52:16.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:16.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022229514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022331889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:16.913" endtime="20201030 11:52:16.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:16.922" endtime="20201030 11:52:16.924"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.618" endtime="20201030 11:52:16.924"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.616" endtime="20201030 11:52:16.925"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:16.929" level="INFO">${RESULT} = [{'diff': 0.00010237500000000177}, {'diff': 0.00010179199999999985}, {'diff': 0.00010212500000000152}, {'diff': 0.00010193099999999955}, {'diff': 0.00010190199999999747}, {'diff': 0.000102208999999998...</msg>
<status status="PASS" starttime="20201030 11:52:16.925" endtime="20201030 11:52:16.929"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:16.935" level="INFO">${ACCURACY} = {'diff': [0.00010237500000000177, 0.00010179199999999985, 0.00010212500000000152, 0.00010193099999999955, 0.00010190199999999747, 0.00010220899999999894, 0.00010209799999999838, 0.0001020550000000002,...</msg>
<status status="PASS" starttime="20201030 11:52:16.931" endtime="20201030 11:52:16.935"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:16.939" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201030 11:52:16.938" endtime="20201030 11:52:16.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:16.942" level="INFO">VALUE: [0.00010237500000000177, 0.00010179199999999985, 0.00010212500000000152, 0.00010193099999999955, 0.00010190199999999747, 0.00010220899999999894, 0.00010209799999999838, 0.0001020550000000002, 0.00010209699999999891, 0.00010201400000000097, 0.0001027359999999991, 0.00010181899999999952, 0.00010179200000000332, 0.00010184700000000213, 0.0001020420000000001, 0.00010270799999999997, 0.00010215300000000066, 0.00010274999999999868, 0.00010193099999999955, 0.00010183399999999856, 0.00010193099999999955, 0.00010272299999999901, 0.00010213899999999762, 0.00010269499999999987, 0.00010191699999999998, 0.00010208299999999934, 0.00010204099999999716, 0.00010208300000000281, 0.00010223600000000208, 0.00010252800000000103, 0.0001027359999999991, 0.00010251400000000147, 0.00010216700000000023, 0.00010219499999999937, 0.00010209699999999891, 0.00010276400000000172, 0.00010272299999999901, 0.00010190300000000041, 0.00010226400000000122, 0.00010184700000000213, 0.00010223600000000208, 0.00010220799999999947, 0.00010229199999999689, 0.00010206899999999977, 0.00010212499999999805, 0.00010198599999999836, 0.00010222199999999904, 0.00010216700000000023, 0.0001026940000000004, 0.00010208399999999881]</msg>
<status status="PASS" starttime="20201030 11:52:16.941" endtime="20201030 11:52:16.943"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.936" endtime="20201030 11:52:16.943"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:16.947" endtime="20201030 11:52:16.967"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.946" endtime="20201030 11:52:16.967"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.944" endtime="20201030 11:52:16.968"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.581" endtime="20201030 11:52:16.968"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.580" endtime="20201030 11:52:16.968"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:16.977" endtime="20201030 11:52:16.997"></status>
</kw>
<msg timestamp="20201030 11:52:16.997" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:16.976" endtime="20201030 11:52:16.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:17.000" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:16.999" endtime="20201030 11:52:17.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:17.001" endtime="20201030 11:52:17.003"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.973" endtime="20201030 11:52:17.003"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.971" endtime="20201030 11:52:17.004"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:17.011" endtime="20201030 11:52:17.298"></status>
</kw>
<msg timestamp="20201030 11:52:17.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022377403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022481139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:17.009" endtime="20201030 11:52:17.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:17.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022377403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022481139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:17.302" endtime="20201030 11:52:17.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:17.311" endtime="20201030 11:52:17.312"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.006" endtime="20201030 11:52:17.313"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.005" endtime="20201030 11:52:17.313"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:17.317" level="INFO">${RESULT} = [{'diff': 0.0001037360000000001}, {'diff': 0.00010280600000000042}, {'diff': 0.00010287500000000227}, {'diff': 0.00010377799999999882}, {'diff': 0.00010297300000000273}, {'diff': 0.0001031530000000016...</msg>
<status status="PASS" starttime="20201030 11:52:17.314" endtime="20201030 11:52:17.318"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:17.321" level="INFO">${ACCURACY} = {'diff': [0.0001037360000000001, 0.00010280600000000042, 0.00010287500000000227, 0.00010377799999999882, 0.00010297300000000273, 0.00010315300000000166, 0.00010319399999999743, 0.00010352699999999909,...</msg>
<status status="PASS" starttime="20201030 11:52:17.318" endtime="20201030 11:52:17.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:17.326" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201030 11:52:17.325" endtime="20201030 11:52:17.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:17.328" level="INFO">VALUE: [0.0001037360000000001, 0.00010280600000000042, 0.00010287500000000227, 0.00010377799999999882, 0.00010297300000000273, 0.00010315300000000166, 0.00010319399999999743, 0.00010352699999999909, 0.00010304100000000163, 0.00010322200000000004, 0.00010327799999999832, 0.00010288899999999837, 0.00010322200000000004, 0.00010279200000000085, 0.0001032359999999996, 0.00010370800000000097, 0.00010372200000000054, 0.0001035420000000016, 0.00010282, 0.00010354199999999814, 0.00010308399999999981, 0.00010354100000000213, 0.00010294500000000012, 0.00010298599999999936, 0.0001036940000000014, 0.00010295800000000022, 0.00010347200000000029, 0.0001030550000000012, 0.00010376399999999925, 0.0001036940000000014, 0.00010283399999999956, 0.00010324999999999918, 0.000103513999999999, 0.00010286099999999923, 0.00010318099999999733, 0.00010288900000000184, 0.00010290300000000141, 0.00010291599999999804, 0.00010282, 0.00010320800000000047, 0.0001030000000000024, 0.0001037360000000001, 0.0001028749999999988, 0.00010306900000000077, 0.00010318000000000133, 0.00010290299999999794, 0.00010318099999999733, 0.00010291700000000098, 0.00010276299999999877, 0.00010315199999999872]</msg>
<status status="PASS" starttime="20201030 11:52:17.327" endtime="20201030 11:52:17.329"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.322" endtime="20201030 11:52:17.330"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:17.334" endtime="20201030 11:52:17.353"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.332" endtime="20201030 11:52:17.354"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.331" endtime="20201030 11:52:17.354"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.969" endtime="20201030 11:52:17.354"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.968" endtime="20201030 11:52:17.354"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:17.363" endtime="20201030 11:52:17.383"></status>
</kw>
<msg timestamp="20201030 11:52:17.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:17.361" endtime="20201030 11:52:17.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:17.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:17.385" endtime="20201030 11:52:17.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:17.387" endtime="20201030 11:52:17.389"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.359" endtime="20201030 11:52:17.390"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.357" endtime="20201030 11:52:17.390"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:17.397" endtime="20201030 11:52:17.695"></status>
</kw>
<msg timestamp="20201030 11:52:17.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023017097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023121208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:17.395" endtime="20201030 11:52:17.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:17.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023017097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023121208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:17.705" endtime="20201030 11:52:17.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:17.723" endtime="20201030 11:52:17.726"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.392" endtime="20201030 11:52:17.728"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.391" endtime="20201030 11:52:17.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:17.734" level="INFO">${RESULT} = [{'diff': 0.00010411100000000048}, {'diff': 0.00010422200000000104}, {'diff': 0.00010411100000000048}, {'diff': 0.00010388899999999937}, {'diff': 0.00010399999999999993}, {'diff': 0.000104152999999999...</msg>
<status status="PASS" starttime="20201030 11:52:17.730" endtime="20201030 11:52:17.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:17.738" level="INFO">${ACCURACY} = {'diff': [0.00010411100000000048, 0.00010422200000000104, 0.00010411100000000048, 0.00010388899999999937, 0.00010399999999999993, 0.00010415299999999919, 0.0001041940000000019, 0.00010419500000000137,...</msg>
<status status="PASS" starttime="20201030 11:52:17.735" endtime="20201030 11:52:17.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:17.743" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201030 11:52:17.742" endtime="20201030 11:52:17.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:17.745" level="INFO">VALUE: [0.00010411100000000048, 0.00010422200000000104, 0.00010411100000000048, 0.00010388899999999937, 0.00010399999999999993, 0.00010415299999999919, 0.0001041940000000019, 0.00010419500000000137, 0.00010397300000000026, 0.00010422199999999757, 0.00010470900000000144, 0.00010470900000000144, 0.00010416699999999876, 0.00010472299999999754, 0.00010401300000000002, 0.0001040559999999982, 0.00010397200000000079, 0.00010390199999999947, 0.000104514, 0.00010390299999999894, 0.00010399999999999993, 0.000104207999999998, 0.0001037360000000001, 0.0001038749999999998, 0.00010393099999999808, 0.0001042360000000006, 0.00010452799999999957, 0.00010386100000000023, 0.00010407000000000124, 0.00010473599999999764, 0.00010475000000000068, 0.000103820000000001, 0.00010379099999999891, 0.00010404099999999916, 0.00010394400000000165, 0.00010398600000000036, 0.00010380500000000195, 0.00010411100000000048, 0.0001040689999999983, 0.00010412500000000005, 0.00010386100000000023, 0.00010416699999999876, 0.00010384700000000066, 0.00010370900000000044, 0.00010386100000000023, 0.00010377799999999882, 0.00010406900000000177, 0.00010415299999999919, 0.0001047499999999972, 0.00010425000000000018]</msg>
<status status="PASS" starttime="20201030 11:52:17.744" endtime="20201030 11:52:17.751"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.739" endtime="20201030 11:52:17.752"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:17.756" endtime="20201030 11:52:17.775"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.754" endtime="20201030 11:52:17.776"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.753" endtime="20201030 11:52:17.776"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.355" endtime="20201030 11:52:17.776"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.355" endtime="20201030 11:52:17.776"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:17.785" endtime="20201030 11:52:17.805"></status>
</kw>
<msg timestamp="20201030 11:52:17.805" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:17.784" endtime="20201030 11:52:17.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:17.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:17.806" endtime="20201030 11:52:17.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:17.809" endtime="20201030 11:52:17.810"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.781" endtime="20201030 11:52:17.811"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.779" endtime="20201030 11:52:17.811"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:17.818" endtime="20201030 11:52:18.103"></status>
</kw>
<msg timestamp="20201030 11:52:18.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0223375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022443014, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:52:17.816" endtime="20201030 11:52:18.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:18.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0223375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022443014, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:52:18.107" endtime="20201030 11:52:18.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:18.115" endtime="20201030 11:52:18.117"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.814" endtime="20201030 11:52:18.117"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.812" endtime="20201030 11:52:18.118"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:18.122" level="INFO">${RESULT} = [{'diff': 0.000105514000000001}, {'diff': 0.00010513900000000062}, {'diff': 0.00010522200000000204}, {'diff': 0.00010516699999999976}, {'diff': 0.00010505600000000268}, {'diff': 0.00010484700000000166...</msg>
<status status="PASS" starttime="20201030 11:52:18.119" endtime="20201030 11:52:18.122"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:18.127" level="INFO">${ACCURACY} = {'diff': [0.000105514000000001, 0.00010513900000000062, 0.00010522200000000204, 0.00010516699999999976, 0.00010505600000000268, 0.00010484700000000166, 0.00010492999999999961, 0.00010526400000000075, ...</msg>
<status status="PASS" starttime="20201030 11:52:18.123" endtime="20201030 11:52:18.127"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:18.131" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201030 11:52:18.130" endtime="20201030 11:52:18.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:18.134" level="INFO">VALUE: [0.000105514000000001, 0.00010513900000000062, 0.00010522200000000204, 0.00010516699999999976, 0.00010505600000000268, 0.00010484700000000166, 0.00010492999999999961, 0.00010526400000000075, 0.00010498600000000136, 0.00010498600000000136, 0.000105207999999999, 0.00010515300000000019, 0.0001057499999999982, 0.000105207999999999, 0.00010491699999999951, 0.00010576400000000125, 0.00010576400000000125, 0.0001048750000000008, 0.00010486100000000123, 0.00010484699999999819, 0.00010490299999999994, 0.00010498700000000083, 0.00010498600000000136, 0.00010515200000000072, 0.00010480499999999948, 0.00010504100000000016, 0.0001048750000000008, 0.00010479099999999991, 0.00010572199999999907, 0.00010519399999999943, 0.00010508299999999887, 0.00010493099999999908, 0.00010488900000000037, 0.00010558299999999937, 0.0001051949999999989, 0.0001048339999999981, 0.0001056949999999994, 0.00010506999999999878, 0.00010573699999999811, 0.00010484700000000166, 0.00010504100000000016, 0.00010495799999999875, 0.00010497199999999832, 0.00010531999999999903, 0.00010483300000000209, 0.00010504199999999964, 0.00010480599999999896, 0.00010526400000000075, 0.00010483400000000156, 0.000104820000000002]</msg>
<status status="PASS" starttime="20201030 11:52:18.132" endtime="20201030 11:52:18.135"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.128" endtime="20201030 11:52:18.135"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:18.139" endtime="20201030 11:52:18.158"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.137" endtime="20201030 11:52:18.159"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.136" endtime="20201030 11:52:18.159"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.777" endtime="20201030 11:52:18.159"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.777" endtime="20201030 11:52:18.159"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:18.168" endtime="20201030 11:52:18.188"></status>
</kw>
<msg timestamp="20201030 11:52:18.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:18.167" endtime="20201030 11:52:18.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:18.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:18.190" endtime="20201030 11:52:18.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:18.192" endtime="20201030 11:52:18.194"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.164" endtime="20201030 11:52:18.194"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.162" endtime="20201030 11:52:18.195"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:18.201" endtime="20201030 11:52:18.488"></status>
</kw>
<msg timestamp="20201030 11:52:18.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022117111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022223292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:18.200" endtime="20201030 11:52:18.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:18.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022117111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022223292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:18.493" endtime="20201030 11:52:18.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:18.501" endtime="20201030 11:52:18.503"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.197" endtime="20201030 11:52:18.503"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.195" endtime="20201030 11:52:18.503"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:18.507" level="INFO">${RESULT} = [{'diff': 0.00010618100000000033}, {'diff': 0.0001060279999999976}, {'diff': 0.0001066950000000004}, {'diff': 0.00010597199999999932}, {'diff': 0.00010609699999999944}, {'diff': 0.00010611100000000248...</msg>
<status status="PASS" starttime="20201030 11:52:18.504" endtime="20201030 11:52:18.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:18.512" level="INFO">${ACCURACY} = {'diff': [0.00010618100000000033, 0.0001060279999999976, 0.0001066950000000004, 0.00010597199999999932, 0.00010609699999999944, 0.00010611100000000248, 0.00010622200000000304, 0.00010575000000000168, ...</msg>
<status status="PASS" starttime="20201030 11:52:18.508" endtime="20201030 11:52:18.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:18.516" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201030 11:52:18.515" endtime="20201030 11:52:18.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:18.518" level="INFO">VALUE: [0.00010618100000000033, 0.0001060279999999976, 0.0001066950000000004, 0.00010597199999999932, 0.00010609699999999944, 0.00010611100000000248, 0.00010622200000000304, 0.00010575000000000168, 0.00010613900000000162, 0.00010591700000000051, 0.00010581900000000005, 0.00010586100000000223, 0.00010598599999999889, 0.00010622199999999957, 0.00010579200000000039, 0.00010616599999999782, 0.00010622299999999904, 0.00010681900000000105, 0.00010598700000000183, 0.00010591599999999757, 0.00010598599999999889, 0.00010587499999999833, 0.00010613899999999815, 0.0001062499999999987, 0.00010602800000000107, 0.00010581900000000005, 0.0001067080000000005, 0.0001058750000000018, 0.00010616700000000076, 0.00010579200000000039, 0.00010620899999999947, 0.00010618000000000086, 0.00010599999999999846, 0.00010668100000000083, 0.0001062499999999987, 0.00010604100000000116, 0.00010581900000000005, 0.00010593000000000061, 0.0001060140000000015, 0.00010626399999999828, 0.00010573599999999864, 0.00010593099999999661, 0.00010594400000000018, 0.00010584699999999919, 0.00010676399999999878, 0.00010581999999999953, 0.00010591700000000051, 0.00010612500000000205, 0.00010622300000000251, 0.00010615300000000119]</msg>
<status status="PASS" starttime="20201030 11:52:18.517" endtime="20201030 11:52:18.519"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.512" endtime="20201030 11:52:18.520"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:18.523" endtime="20201030 11:52:18.543"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.522" endtime="20201030 11:52:18.543"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.521" endtime="20201030 11:52:18.544"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.160" endtime="20201030 11:52:18.544"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.160" endtime="20201030 11:52:18.544"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:18.553" endtime="20201030 11:52:18.573"></status>
</kw>
<msg timestamp="20201030 11:52:18.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:18.551" endtime="20201030 11:52:18.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:18.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:18.575" endtime="20201030 11:52:18.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:18.577" endtime="20201030 11:52:18.579"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.549" endtime="20201030 11:52:18.579"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.547" endtime="20201030 11:52:18.580"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:18.586" endtime="20201030 11:52:18.872"></status>
</kw>
<msg timestamp="20201030 11:52:18.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022995806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023103542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:18.585" endtime="20201030 11:52:18.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:18.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022995806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023103542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:18.877" endtime="20201030 11:52:18.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:18.885" endtime="20201030 11:52:18.886"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.582" endtime="20201030 11:52:18.887"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.580" endtime="20201030 11:52:18.887"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:18.891" level="INFO">${RESULT} = [{'diff': 0.00010773600000000064}, {'diff': 0.00010708400000000035}, {'diff': 0.00010772300000000054}, {'diff': 0.00010705499999999826}, {'diff': 0.00010706899999999783}, {'diff': 0.000106972000000000...</msg>
<status status="PASS" starttime="20201030 11:52:18.888" endtime="20201030 11:52:18.892"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:18.895" level="INFO">${ACCURACY} = {'diff': [0.00010773600000000064, 0.00010708400000000035, 0.00010772300000000054, 0.00010705499999999826, 0.00010706899999999783, 0.00010697200000000032, 0.00010684700000000019, 0.00010699999999999946...</msg>
<status status="PASS" starttime="20201030 11:52:18.892" endtime="20201030 11:52:18.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:18.900" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201030 11:52:18.899" endtime="20201030 11:52:18.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:18.902" level="INFO">VALUE: [0.00010773600000000064, 0.00010708400000000035, 0.00010772300000000054, 0.00010705499999999826, 0.00010706899999999783, 0.00010697200000000032, 0.00010684700000000019, 0.00010699999999999946, 0.00010679200000000139, 0.00010695800000000075, 0.00010772200000000107, 0.00010751399999999953, 0.00010713899999999915, 0.00010723600000000014, 0.00010708400000000035, 0.00010723600000000014, 0.00010712499999999958, 0.00010772300000000054, 0.00010712499999999958, 0.00010681900000000105, 0.00010698599999999989, 0.00010691599999999857, 0.00010712499999999958, 0.00010701399999999903, 0.00010679199999999792, 0.00010704200000000164, 0.00010683300000000062, 0.00010697200000000032, 0.0001077500000000002, 0.00010693099999999761, 0.00010711100000000001, 0.0001077500000000002, 0.00010712499999999958, 0.00010705499999999826, 0.0001077080000000015, 0.00010709700000000044, 0.00010717999999999839, 0.00010718000000000186, 0.00010694399999999771, 0.0001068889999999989, 0.00010704200000000164, 0.00010708300000000087, 0.00010722200000000057, 0.00010680600000000096, 0.00010708400000000035, 0.00010684700000000019, 0.00010684700000000019, 0.00010773600000000064, 0.00010704199999999817, 0.00010716599999999882]</msg>
<status status="PASS" starttime="20201030 11:52:18.901" endtime="20201030 11:52:18.904"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.896" endtime="20201030 11:52:18.904"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:18.908" endtime="20201030 11:52:18.928"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.907" endtime="20201030 11:52:18.928"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.905" endtime="20201030 11:52:18.928"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.545" endtime="20201030 11:52:18.929"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.545" endtime="20201030 11:52:18.929"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:18.938" endtime="20201030 11:52:18.957"></status>
</kw>
<msg timestamp="20201030 11:52:18.958" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:18.936" endtime="20201030 11:52:18.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:18.960" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:18.959" endtime="20201030 11:52:18.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:18.961" endtime="20201030 11:52:18.963"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.933" endtime="20201030 11:52:18.963"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.931" endtime="20201030 11:52:18.964"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:18.970" endtime="20201030 11:52:19.256"></status>
</kw>
<msg timestamp="20201030 11:52:19.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022131375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022239708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:18.969" endtime="20201030 11:52:19.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:19.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022131375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022239708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:19.260" endtime="20201030 11:52:19.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:19.268" endtime="20201030 11:52:19.270"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.966" endtime="20201030 11:52:19.270"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.964" endtime="20201030 11:52:19.271"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:19.274" level="INFO">${RESULT} = [{'diff': 0.00010833300000000212}, {'diff': 0.00010815299999999972}, {'diff': 0.00010869399999999946}, {'diff': 0.00010827799999999985}, {'diff': 0.0001087219999999986}, {'diff': 0.0001078329999999981...</msg>
<status status="PASS" starttime="20201030 11:52:19.271" endtime="20201030 11:52:19.275"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:19.279" level="INFO">${ACCURACY} = {'diff': [0.00010833300000000212, 0.00010815299999999972, 0.00010869399999999946, 0.00010827799999999985, 0.0001087219999999986, 0.00010783299999999815, 0.00010823600000000114, 0.0001085280000000001, ...</msg>
<status status="PASS" starttime="20201030 11:52:19.276" endtime="20201030 11:52:19.280"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:19.284" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201030 11:52:19.283" endtime="20201030 11:52:19.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:19.286" level="INFO">VALUE: [0.00010833300000000212, 0.00010815299999999972, 0.00010869399999999946, 0.00010827799999999985, 0.0001087219999999986, 0.00010783299999999815, 0.00010823600000000114, 0.0001085280000000001, 0.0001085560000000027, 0.0001078340000000011, 0.00010807000000000178, 0.00010777799999999935, 0.00010804099999999969, 0.00010816699999999929, 0.0001087219999999986, 0.00010804099999999969, 0.00010776399999999978, 0.00010798600000000089, 0.00010819499999999843, 0.00010791699999999904, 0.00010786100000000076, 0.00010806899999999883, 0.00010872200000000207, 0.00010797200000000132, 0.00010791699999999904, 0.00010874999999999774, 0.00010855499999999976, 0.00010786100000000076, 0.00010806899999999883, 0.0001077630000000003, 0.00010801400000000003, 0.0001087219999999986, 0.00010801400000000003, 0.00010797200000000132, 0.00010873599999999817, 0.00010811100000000101, 0.0001085280000000001, 0.00010784700000000119, 0.00010883300000000262, 0.00010822300000000104, 0.0001086950000000024, 0.00010816699999999929, 0.00010876400000000078, 0.00010873700000000111, 0.00010815200000000025, 0.000108208999999998, 0.000107902, 0.00010812500000000058, 0.0001080690000000023, 0.00010790299999999947]</msg>
<status status="PASS" starttime="20201030 11:52:19.285" endtime="20201030 11:52:19.287"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.280" endtime="20201030 11:52:19.288"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:19.291" endtime="20201030 11:52:19.311"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.290" endtime="20201030 11:52:19.311"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.289" endtime="20201030 11:52:19.312"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.930" endtime="20201030 11:52:19.312"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.929" endtime="20201030 11:52:19.312"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:19.322" endtime="20201030 11:52:19.341"></status>
</kw>
<msg timestamp="20201030 11:52:19.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:19.320" endtime="20201030 11:52:19.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:19.344" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:19.343" endtime="20201030 11:52:19.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:19.345" endtime="20201030 11:52:19.347"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.317" endtime="20201030 11:52:19.347"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.315" endtime="20201030 11:52:19.348"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:19.354" endtime="20201030 11:52:19.640"></status>
</kw>
<msg timestamp="20201030 11:52:19.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022884028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022993333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:19.353" endtime="20201030 11:52:19.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:19.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022884028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022993333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:19.645" endtime="20201030 11:52:19.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:19.653" endtime="20201030 11:52:19.655"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.350" endtime="20201030 11:52:19.655"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.348" endtime="20201030 11:52:19.656"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:19.659" level="INFO">${RESULT} = [{'diff': 0.00010930500000000051}, {'diff': 0.00010894399999999971}, {'diff': 0.00010880500000000001}, {'diff': 0.00010880599999999949}, {'diff': 0.00010880599999999949}, {'diff': 0.000109320000000003...</msg>
<status status="PASS" starttime="20201030 11:52:19.656" endtime="20201030 11:52:19.660"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:19.663" level="INFO">${ACCURACY} = {'diff': [0.00010930500000000051, 0.00010894399999999971, 0.00010880500000000001, 0.00010880599999999949, 0.00010880599999999949, 0.00010932000000000303, 0.00010880599999999949, 0.00010901400000000103...</msg>
<status status="PASS" starttime="20201030 11:52:19.660" endtime="20201030 11:52:19.664"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:19.668" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201030 11:52:19.667" endtime="20201030 11:52:19.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:19.670" level="INFO">VALUE: [0.00010930500000000051, 0.00010894399999999971, 0.00010880500000000001, 0.00010880599999999949, 0.00010880599999999949, 0.00010932000000000303, 0.00010880599999999949, 0.00010901400000000103, 0.00010876399999999731, 0.00010880599999999949, 0.00010877799999999688, 0.00010897300000000179, 0.00010972299999999907, 0.00010926399999999781, 0.00010906899999999983, 0.00010879099999999697, 0.0001090280000000006, 0.00010877800000000035, 0.00010919399999999996, 0.0001092219999999991, 0.00010920799999999953, 0.00010975000000000221, 0.00010895800000000275, 0.00010890300000000047, 0.0001088890000000009, 0.00010881999999999906, 0.00010884800000000167, 0.00010919399999999996, 0.00010886100000000176, 0.00010916600000000082, 0.00010970800000000003, 0.00010883299999999915, 0.00010877800000000035, 0.00010900000000000146, 0.00010890300000000047, 0.00010891700000000004, 0.0001090280000000006, 0.00010919499999999943, 0.00010887499999999786, 0.00010895800000000275, 0.00010887500000000133, 0.00010915300000000072, 0.00010915200000000125, 0.00010913800000000168, 0.00010888800000000143, 0.00010891600000000057, 0.00010970800000000003, 0.00010970800000000003, 0.0001088890000000009, 0.00010923600000000214]</msg>
<status status="PASS" starttime="20201030 11:52:19.669" endtime="20201030 11:52:19.671"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.664" endtime="20201030 11:52:19.672"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:19.675" endtime="20201030 11:52:19.695"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.674" endtime="20201030 11:52:19.695"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.673" endtime="20201030 11:52:19.696"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.313" endtime="20201030 11:52:19.696"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.313" endtime="20201030 11:52:19.696"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:19.705" endtime="20201030 11:52:19.729"></status>
</kw>
<msg timestamp="20201030 11:52:19.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:19.703" endtime="20201030 11:52:19.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:19.733" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:19.731" endtime="20201030 11:52:19.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:19.734" endtime="20201030 11:52:19.735"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.701" endtime="20201030 11:52:19.736"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.699" endtime="20201030 11:52:19.736"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:19.743" endtime="20201030 11:52:20.027"></status>
</kw>
<msg timestamp="20201030 11:52:20.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025569236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025679278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:19.741" endtime="20201030 11:52:20.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:20.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025569236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025679278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:20.032" endtime="20201030 11:52:20.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:20.040" endtime="20201030 11:52:20.041"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.739" endtime="20201030 11:52:20.042"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.737" endtime="20201030 11:52:20.042"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:20.046" level="INFO">${RESULT} = [{'diff': 0.00011004200000000117}, {'diff': 0.00010980600000000049}, {'diff': 0.00011076400000000278}, {'diff': 0.00010997199999999985}, {'diff': 0.0001100830000000004}, {'diff': 0.0001099300000000011...</msg>
<status status="PASS" starttime="20201030 11:52:20.043" endtime="20201030 11:52:20.047"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:20.050" level="INFO">${ACCURACY} = {'diff': [0.00011004200000000117, 0.00010980600000000049, 0.00011076400000000278, 0.00010997199999999985, 0.0001100830000000004, 0.00010993000000000114, 0.00010980499999999754, 0.00011023599999999967,...</msg>
<status status="PASS" starttime="20201030 11:52:20.047" endtime="20201030 11:52:20.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:20.055" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201030 11:52:20.054" endtime="20201030 11:52:20.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:20.057" level="INFO">VALUE: [0.00011004200000000117, 0.00010980600000000049, 0.00011076400000000278, 0.00010997199999999985, 0.0001100830000000004, 0.00010993000000000114, 0.00010980499999999754, 0.00011023599999999967, 0.00011006900000000083, 0.00011074999999999974, 0.00010979200000000092, 0.00011026399999999881, 0.00011069500000000093, 0.00011029100000000194, 0.00011070800000000103, 0.00011004200000000117, 0.0001098890000000019, 0.00010979200000000092, 0.00011072300000000007, 0.00011016600000000182, 0.0001098890000000019, 0.00010999999999999899, 0.00010981900000000058, 0.00011026399999999881, 0.0001102220000000001, 0.00010987499999999886, 0.00010987499999999886, 0.00011023599999999967, 0.00011018100000000086, 0.00011023599999999967, 0.00010982000000000006, 0.00011068100000000136, 0.00011069500000000093, 0.00011009799999999945, 0.00010977800000000135, 0.00010983300000000015, 0.00011009699999999997, 0.00010995800000000028, 0.00010975000000000221, 0.00011019399999999749, 0.00010998599999999942, 0.00011024999999999924, 0.00010993100000000061, 0.00011022299999999957, 0.00010991700000000104, 0.00011023599999999967, 0.00010995899999999975, 0.00010979200000000092, 0.00010986099999999929, 0.00011072300000000007]</msg>
<status status="PASS" starttime="20201030 11:52:20.056" endtime="20201030 11:52:20.059"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.051" endtime="20201030 11:52:20.059"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:20.063" endtime="20201030 11:52:20.082"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.062" endtime="20201030 11:52:20.083"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.060" endtime="20201030 11:52:20.083"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.697" endtime="20201030 11:52:20.084"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.697" endtime="20201030 11:52:20.084"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:20.092" endtime="20201030 11:52:20.113"></status>
</kw>
<msg timestamp="20201030 11:52:20.113" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:20.091" endtime="20201030 11:52:20.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:20.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:20.114" endtime="20201030 11:52:20.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:20.117" endtime="20201030 11:52:20.118"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.088" endtime="20201030 11:52:20.119"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.086" endtime="20201030 11:52:20.119"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:20.126" endtime="20201030 11:52:20.412"></status>
</kw>
<msg timestamp="20201030 11:52:20.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022183278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022294403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:20.124" endtime="20201030 11:52:20.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:20.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022183278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022294403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:20.416" endtime="20201030 11:52:20.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:20.425" endtime="20201030 11:52:20.426"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.122" endtime="20201030 11:52:20.427"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.120" endtime="20201030 11:52:20.427"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:20.431" level="INFO">${RESULT} = [{'diff': 0.00011112500000000011}, {'diff': 0.00011126399999999981}, {'diff': 0.0001110700000000013}, {'diff': 0.00011090199999999953}, {'diff': 0.0001110700000000013}, {'diff': 0.00011109700000000097...</msg>
<status status="PASS" starttime="20201030 11:52:20.428" endtime="20201030 11:52:20.431"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:20.436" level="INFO">${ACCURACY} = {'diff': [0.00011112500000000011, 0.00011126399999999981, 0.0001110700000000013, 0.00011090199999999953, 0.0001110700000000013, 0.00011109700000000097, 0.00011113800000000021, 0.00011119399999999849, ...</msg>
<status status="PASS" starttime="20201030 11:52:20.432" endtime="20201030 11:52:20.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:20.441" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201030 11:52:20.440" endtime="20201030 11:52:20.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:20.443" level="INFO">VALUE: [0.00011112500000000011, 0.00011126399999999981, 0.0001110700000000013, 0.00011090199999999953, 0.0001110700000000013, 0.00011109700000000097, 0.00011113800000000021, 0.00011119399999999849, 0.0001112220000000011, 0.00011123600000000067, 0.00011105500000000226, 0.00011088899999999943, 0.00011095800000000128, 0.00011123600000000067, 0.00011094500000000118, 0.00011099999999999999, 0.00011090199999999953, 0.00011172300000000107, 0.00011081999999999759, 0.0001110549999999988, 0.00011104099999999922, 0.00011080500000000201, 0.00011081899999999811, 0.00011106900000000183, 0.00011169399999999899, 0.000110902999999999, 0.00011113899999999968, 0.00011119399999999849, 0.00011115299999999925, 0.00011081999999999759, 0.00011105600000000174, 0.0001117090000000015, 0.00011083400000000063, 0.00011179099999999997, 0.00011123700000000014, 0.00011090199999999953, 0.0001109159999999991, 0.0001107769999999994, 0.00011111099999999707, 0.00011081900000000158, 0.00011108299999999793, 0.00011113899999999968, 0.00011102799999999913, 0.00011082000000000106, 0.00011169500000000193, 0.00011097300000000032, 0.00011176300000000083, 0.00011113899999999968, 0.00011152799999999963, 0.00011122300000000057]</msg>
<status status="PASS" starttime="20201030 11:52:20.442" endtime="20201030 11:52:20.444"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.437" endtime="20201030 11:52:20.445"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:20.448" endtime="20201030 11:52:20.468"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.447" endtime="20201030 11:52:20.468"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.446" endtime="20201030 11:52:20.468"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.085" endtime="20201030 11:52:20.469"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.084" endtime="20201030 11:52:20.469"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.958" endtime="20201030 11:52:20.469"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201030 11:51:41.883" endtime="20201030 11:52:20.470" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 11:51:01.934" endtime="20201030 11:52:20.474"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 11:52:20.528" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 11:52:20.537" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 11:52:21.639" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 11:52:20.527" endtime="20201030 11:52:21.640"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 11:52:21.643" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 11:52:21.641" endtime="20201030 11:52:21.643"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.526" endtime="20201030 11:52:21.644"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:21.646" endtime="20201030 11:52:21.831"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.644" endtime="20201030 11:52:21.831"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:21.844" endtime="20201030 11:52:21.865"></status>
</kw>
<msg timestamp="20201030 11:52:21.866" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:21.842" endtime="20201030 11:52:21.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:21.868" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:21.867" endtime="20201030 11:52:21.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:52:21.871" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:52:21.869" endtime="20201030 11:52:21.872"></status>
</kw>
<status status="FAIL" starttime="20201030 11:52:21.840" endtime="20201030 11:52:21.872"></status>
</kw>
<status status="FAIL" starttime="20201030 11:52:21.837" endtime="20201030 11:52:21.873"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.836" endtime="20201030 11:52:21.873"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:52:21.877" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:52:21.876" endtime="20201030 11:52:21.878"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.874" endtime="20201030 11:52:21.878"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.835" endtime="20201030 11:52:21.878"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.835" endtime="20201030 11:52:21.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:21.879" endtime="20201030 11:52:21.880"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.833" endtime="20201030 11:52:21.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:21.882" endtime="20201030 11:52:21.883"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.832" endtime="20201030 11:52:21.884"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.524" endtime="20201030 11:52:21.884"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:21.890" endtime="20201030 11:52:21.910"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.889" endtime="20201030 11:52:21.910"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:21.923" endtime="20201030 11:52:21.943"></status>
</kw>
<msg timestamp="20201030 11:52:21.943" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:21.922" endtime="20201030 11:52:21.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:21.946" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:21.944" endtime="20201030 11:52:21.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:52:21.949" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:52:21.947" endtime="20201030 11:52:21.950"></status>
</kw>
<status status="FAIL" starttime="20201030 11:52:21.919" endtime="20201030 11:52:21.951"></status>
</kw>
<status status="FAIL" starttime="20201030 11:52:21.917" endtime="20201030 11:52:21.951"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.916" endtime="20201030 11:52:21.952"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:52:21.955" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:52:21.955" endtime="20201030 11:52:21.956"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.952" endtime="20201030 11:52:21.956"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.915" endtime="20201030 11:52:21.956"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.914" endtime="20201030 11:52:21.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:21.957" endtime="20201030 11:52:21.959"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.913" endtime="20201030 11:52:21.959"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.911" endtime="20201030 11:52:21.960"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.887" endtime="20201030 11:52:21.960"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:21.969" endtime="20201030 11:52:28.090"></status>
</kw>
<msg timestamp="20201030 11:52:28.091" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:21.967" endtime="20201030 11:52:28.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:28.097" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:28.094" endtime="20201030 11:52:28.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:28.099" endtime="20201030 11:52:28.102"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.964" endtime="20201030 11:52:28.104"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.962" endtime="20201030 11:52:28.105"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:28.110" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 0, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 11:52:28.106" endtime="20201030 11:52:28.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:28.119" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 11:52:28.117" endtime="20201030 11:52:28.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:28.123" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 11:52:28.121" endtime="20201030 11:52:28.124"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.112" endtime="20201030 11:52:28.125"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:28.133" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 11:52:28.131" endtime="20201030 11:52:28.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:28.138" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 11:52:28.136" endtime="20201030 11:52:28.139"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.127" endtime="20201030 11:52:28.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:28.148" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 11:52:28.146" endtime="20201030 11:52:28.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:28.152" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201030 11:52:28.150" endtime="20201030 11:52:28.153"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.141" endtime="20201030 11:52:28.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:28.167" endtime="20201030 11:52:28.477"></status>
</kw>
<msg timestamp="20201030 11:52:28.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068342528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.168361944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:28.164" endtime="20201030 11:52:28.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:28.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068342528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.168361944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:28.481" endtime="20201030 11:52:28.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:28.489" endtime="20201030 11:52:28.491"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.159" endtime="20201030 11:52:28.491"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.155" endtime="20201030 11:52:28.492"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 11:52:28.496" level="INFO">${FILTERED} = [{'diff': 0.10001941600000001}, {'diff': 0.10000590299999998}, {'diff': 0.10000681900000002}, {'diff': 0.10000680500000003}, {'diff': 0.10000691699999997}, {'diff': 0.1000068890000001}, {'diff': 0.100...</msg>
<status status="PASS" starttime="20201030 11:52:28.492" endtime="20201030 11:52:28.496"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:28.500" level="INFO">${RESULT} = {'diff': [0.10001941600000001, 0.10000590299999998, 0.10000681900000002, 0.10000680500000003, 0.10000691699999997, 0.1000068890000001, 0.10000677799999991, 0.10000679200000007, 0.10000677699999994, 0....</msg>
<status status="PASS" starttime="20201030 11:52:28.497" endtime="20201030 11:52:28.500"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:28.504" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 11:52:28.503" endtime="20201030 11:52:28.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:28.506" level="INFO">VALUE: [0.10001941600000001, 0.10000590299999998, 0.10000681900000002, 0.10000680500000003, 0.10000691699999997, 0.1000068890000001, 0.10000677799999991, 0.10000679200000007, 0.10000677699999994, 0.10000687500000005, 0.10000677800000002, 0.100006861, 0.10000687500000005, 0.10000679200000007, 0.10000679099999998, 0.10000679200000007, 0.10000679200000007, 0.10000679099999998, 0.10000687499999983, 0.10000679200000007, 0.10000680500000003, 0.10000679099999976, 0.10000680600000011, 0.10000679200000029, 0.10000679099999976, 0.10000680600000011, 0.10000679199999984, 0.1000067910000002, 0.10000679199999984, 0.10000687500000005, 0.10000679200000029, 0.10000690300000015, 0.10000676399999975, 0.10000687500000005, 0.1000067910000002, 0.10000687500000005, 0.10000681999999994, 0.10000679199999984, 0.1000068190000003, 0.1000067910000002, 0.10000677800000002, 0.10000680599999967, 0.10000679099999932, 0.10000680599999967, 0.10000681999999994, 0.10000677800000002, 0.10000687500000005, 0.10000681899999986, 0.1000067919999994, 0.10000679200000029, 0.10000680500000048]</msg>
<status status="PASS" starttime="20201030 11:52:28.505" endtime="20201030 11:52:28.507"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.500" endtime="20201030 11:52:28.507"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.961" endtime="20201030 11:52:28.508"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201030 11:52:21.885" endtime="20201030 11:52:28.509" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:28.516" endtime="20201030 11:52:28.536"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.514" endtime="20201030 11:52:28.536"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:28.550" endtime="20201030 11:52:28.570"></status>
</kw>
<msg timestamp="20201030 11:52:28.570" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:28.548" endtime="20201030 11:52:28.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:28.573" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:28.571" endtime="20201030 11:52:28.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:52:28.576" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:52:28.574" endtime="20201030 11:52:28.577"></status>
</kw>
<status status="FAIL" starttime="20201030 11:52:28.546" endtime="20201030 11:52:28.577"></status>
</kw>
<status status="FAIL" starttime="20201030 11:52:28.543" endtime="20201030 11:52:28.578"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.541" endtime="20201030 11:52:28.578"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:52:28.582" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:52:28.581" endtime="20201030 11:52:28.582"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.579" endtime="20201030 11:52:28.582"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.541" endtime="20201030 11:52:28.583"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.540" endtime="20201030 11:52:28.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:28.584" endtime="20201030 11:52:28.585"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.539" endtime="20201030 11:52:28.586"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.537" endtime="20201030 11:52:28.586"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.513" endtime="20201030 11:52:28.586"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:28.595" endtime="20201030 11:52:34.718"></status>
</kw>
<msg timestamp="20201030 11:52:34.719" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:28.594" endtime="20201030 11:52:34.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:34.725" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:34.721" endtime="20201030 11:52:34.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:34.727" endtime="20201030 11:52:34.730"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.591" endtime="20201030 11:52:34.732"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.589" endtime="20201030 11:52:34.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:34.739" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 5, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 11:52:34.734" endtime="20201030 11:52:34.739"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:34.748" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 11:52:34.745" endtime="20201030 11:52:34.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:34.752" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 11:52:34.750" endtime="20201030 11:52:34.753"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.741" endtime="20201030 11:52:34.754"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:34.765" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 11:52:34.761" endtime="20201030 11:52:34.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:34.770" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 11:52:34.768" endtime="20201030 11:52:34.771"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.756" endtime="20201030 11:52:34.772"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:34.780" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 11:52:34.778" endtime="20201030 11:52:34.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:34.784" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201030 11:52:34.782" endtime="20201030 11:52:34.785"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.773" endtime="20201030 11:52:34.786"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:34.799" endtime="20201030 11:52:35.098"></status>
</kw>
<msg timestamp="20201030 11:52:35.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069298306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.169348958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:34.796" endtime="20201030 11:52:35.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:35.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069298306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.169348958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:35.102" endtime="20201030 11:52:35.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:35.110" endtime="20201030 11:52:35.112"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.791" endtime="20201030 11:52:35.113"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.787" endtime="20201030 11:52:35.113"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 11:52:35.117" level="INFO">${FILTERED} = [{'diff': 0.10005065199999999}, {'diff': 0.09997473600000001}, {'diff': 0.10000837500000004}, {'diff': 0.10000604200000002}, {'diff': 0.10000662500000002}, {'diff': 0.10000690300000004}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201030 11:52:35.114" endtime="20201030 11:52:35.117"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:35.121" level="INFO">${RESULT} = {'diff': [0.10005065199999999, 0.09997473600000001, 0.10000837500000004, 0.10000604200000002, 0.10000662500000002, 0.10000690300000004, 0.1000066249999999, 0.10000699999999996, 0.100006708, 0.10000692...</msg>
<status status="PASS" starttime="20201030 11:52:35.118" endtime="20201030 11:52:35.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:35.126" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 11:52:35.125" endtime="20201030 11:52:35.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:35.128" level="INFO">VALUE: [0.10005065199999999, 0.09997473600000001, 0.10000837500000004, 0.10000604200000002, 0.10000662500000002, 0.10000690300000004, 0.1000066249999999, 0.10000699999999996, 0.100006708, 0.10000692999999994, 0.10000663900000006, 0.10000694399999999, 0.10000665299999989, 0.1000069589999999, 0.10000662500000002, 0.10000705599999993, 0.10000662500000002, 0.10000697299999994, 0.10000663900000006, 0.10000694399999976, 0.10000666699999972, 0.10000690300000015, 0.10000665199999981, 0.10000695800000026, 0.10000665299999989, 0.10000693000000016, 0.10000665299999989, 0.10000694500000007, 0.10000670900000008, 5.419999999922709e-07, 5.409999999095305e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.409999994654413e-07, 4.73000000056345e-07, 0.10000713899999969, 0.10000699999999973, 0.10000659700000014, 0.10000702700000019, 0.10000666699999972, 0.10000693100000024, 0.10000672199999983, 0.10000704100000046, 0.10000665300000033]</msg>
<status status="PASS" starttime="20201030 11:52:35.127" endtime="20201030 11:52:35.129"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.122" endtime="20201030 11:52:35.130"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.587" endtime="20201030 11:52:35.130"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201030 11:52:28.510" endtime="20201030 11:52:35.131" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:35.138" endtime="20201030 11:52:35.157"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.136" endtime="20201030 11:52:35.158"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:35.171" endtime="20201030 11:52:35.190"></status>
</kw>
<msg timestamp="20201030 11:52:35.190" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:35.169" endtime="20201030 11:52:35.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:35.193" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:35.191" endtime="20201030 11:52:35.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:52:35.196" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:52:35.194" endtime="20201030 11:52:35.196"></status>
</kw>
<status status="FAIL" starttime="20201030 11:52:35.167" endtime="20201030 11:52:35.197"></status>
</kw>
<status status="FAIL" starttime="20201030 11:52:35.164" endtime="20201030 11:52:35.197"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.163" endtime="20201030 11:52:35.198"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:52:35.201" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:52:35.201" endtime="20201030 11:52:35.202"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.198" endtime="20201030 11:52:35.202"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.162" endtime="20201030 11:52:35.202"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.162" endtime="20201030 11:52:35.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:35.203" endtime="20201030 11:52:35.205"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.160" endtime="20201030 11:52:35.205"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.159" endtime="20201030 11:52:35.206"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.135" endtime="20201030 11:52:35.206"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:35.216" endtime="20201030 11:52:41.338"></status>
</kw>
<msg timestamp="20201030 11:52:41.339" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:35.213" endtime="20201030 11:52:41.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:41.344" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:41.341" endtime="20201030 11:52:41.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:41.347" endtime="20201030 11:52:41.350"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.210" endtime="20201030 11:52:41.351"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.208" endtime="20201030 11:52:41.352"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:41.358" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 10, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 11:52:41.354" endtime="20201030 11:52:41.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:41.367" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 11:52:41.364" endtime="20201030 11:52:41.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:41.371" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 11:52:41.369" endtime="20201030 11:52:41.371"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.360" endtime="20201030 11:52:41.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:41.381" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 11:52:41.378" endtime="20201030 11:52:41.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:41.385" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 11:52:41.383" endtime="20201030 11:52:41.386"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.374" endtime="20201030 11:52:41.387"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:41.395" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 11:52:41.393" endtime="20201030 11:52:41.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:41.398" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201030 11:52:41.397" endtime="20201030 11:52:41.399"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.388" endtime="20201030 11:52:41.399"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:41.406" endtime="20201030 11:52:41.700"></status>
</kw>
<msg timestamp="20201030 11:52:41.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068240667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.168326125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:41.404" endtime="20201030 11:52:41.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:41.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068240667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.168326125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:41.704" endtime="20201030 11:52:41.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:41.712" endtime="20201030 11:52:41.713"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.401" endtime="20201030 11:52:41.714"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.400" endtime="20201030 11:52:41.714"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 11:52:41.718" level="INFO">${FILTERED} = [{'diff': 0.10008545799999999}, {'diff': 0.09994255499999996}, {'diff': 0.100007389}, {'diff': 0.10000697200000003}, {'diff': 0.10000699999999996}, {'diff': 5.409999999095305e-07}, {'diff': 0.10000723...</msg>
<status status="PASS" starttime="20201030 11:52:41.715" endtime="20201030 11:52:41.718"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:41.725" level="INFO">${RESULT} = {'diff': [0.10008545799999999, 0.09994255499999996, 0.100007389, 0.10000697200000003, 0.10000699999999996, 5.409999999095305e-07, 0.10000723599999994, 0.10000688899999999, 5.419999999922709e-07, 5.419...</msg>
<status status="PASS" starttime="20201030 11:52:41.719" endtime="20201030 11:52:41.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:41.729" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 11:52:41.728" endtime="20201030 11:52:41.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:41.732" level="INFO">VALUE: [0.10008545799999999, 0.09994255499999996, 0.100007389, 0.10000697200000003, 0.10000699999999996, 5.409999999095305e-07, 0.10000723599999994, 0.10000688899999999, 5.419999999922709e-07, 5.419999999922709e-07, 5.410000001315751e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.420000002143155e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.420000004363601e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.409999999095305e-07, 4.73000000056345e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 0.10000732000000001, 0.10000674999999992, 0.10000683300000013, 0.10000674999999992, 0.10000690300000015, 0.10000683400000021, 0.1000068470000004, 0.1000067360000001, 0.10000693100000024, 0.10000674999999948, 0.10000683400000021, 0.10000675000000037, 0.10000683300000013, 0.1000068470000004, 0.10000681999999994, 0.10000683300000013, 0.10000683299999924]</msg>
<status status="PASS" starttime="20201030 11:52:41.730" endtime="20201030 11:52:41.733"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.726" endtime="20201030 11:52:41.733"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.207" endtime="20201030 11:52:41.734"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201030 11:52:35.133" endtime="20201030 11:52:41.734" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:41.741" endtime="20201030 11:52:41.761"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.740" endtime="20201030 11:52:41.761"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:41.774" endtime="20201030 11:52:41.793"></status>
</kw>
<msg timestamp="20201030 11:52:41.794" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:41.773" endtime="20201030 11:52:41.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:41.796" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:41.795" endtime="20201030 11:52:41.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:52:41.799" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:52:41.797" endtime="20201030 11:52:41.800"></status>
</kw>
<status status="FAIL" starttime="20201030 11:52:41.770" endtime="20201030 11:52:41.800"></status>
</kw>
<status status="FAIL" starttime="20201030 11:52:41.768" endtime="20201030 11:52:41.801"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.767" endtime="20201030 11:52:41.801"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:52:41.806" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:52:41.805" endtime="20201030 11:52:41.806"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.802" endtime="20201030 11:52:41.807"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.766" endtime="20201030 11:52:41.807"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.765" endtime="20201030 11:52:41.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:41.808" endtime="20201030 11:52:41.809"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.764" endtime="20201030 11:52:41.810"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.762" endtime="20201030 11:52:41.810"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.738" endtime="20201030 11:52:41.810"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:41.819" endtime="20201030 11:52:47.941"></status>
</kw>
<msg timestamp="20201030 11:52:47.942" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:41.818" endtime="20201030 11:52:47.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:47.947" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:47.944" endtime="20201030 11:52:47.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:47.949" endtime="20201030 11:52:47.953"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.815" endtime="20201030 11:52:47.954"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.813" endtime="20201030 11:52:47.955"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:47.961" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 15, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 11:52:47.957" endtime="20201030 11:52:47.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:47.969" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 11:52:47.967" endtime="20201030 11:52:47.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:47.973" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 11:52:47.971" endtime="20201030 11:52:47.974"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:47.962" endtime="20201030 11:52:47.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:47.983" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 11:52:47.981" endtime="20201030 11:52:47.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:47.987" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 11:52:47.985" endtime="20201030 11:52:47.988"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:47.976" endtime="20201030 11:52:47.989"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:47.997" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 11:52:47.995" endtime="20201030 11:52:47.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:48.002" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201030 11:52:47.999" endtime="20201030 11:52:48.002"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:47.990" endtime="20201030 11:52:48.003"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:48.017" endtime="20201030 11:52:48.319"></status>
</kw>
<msg timestamp="20201030 11:52:48.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067949792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.168086875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:48.014" endtime="20201030 11:52:48.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:48.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067949792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.168086875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:48.323" endtime="20201030 11:52:48.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:48.331" endtime="20201030 11:52:48.333"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:48.008" endtime="20201030 11:52:48.333"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:48.005" endtime="20201030 11:52:48.334"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 11:52:48.338" level="INFO">${FILTERED} = [{'diff': 0.100137083}, {'diff': 5.410000000205528e-07}, {'diff': 5.419999999922709e-07}, {'diff': 5.419999999922709e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': ...</msg>
<status status="PASS" starttime="20201030 11:52:48.335" endtime="20201030 11:52:48.338"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:48.342" level="INFO">${RESULT} = {'diff': [0.100137083, 5.410000000205528e-07, 5.419999999922709e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 5.41999999992...</msg>
<status status="PASS" starttime="20201030 11:52:48.339" endtime="20201030 11:52:48.342"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:48.346" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 11:52:48.345" endtime="20201030 11:52:48.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:48.348" level="INFO">VALUE: [0.100137083, 5.410000000205528e-07, 5.419999999922709e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.410000001315751e-07, 5.420000002143155e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.100007403, 0.10000672300000013, 0.10000691699999997, 0.10000672200000005, 0.1000069170000002, 0.10000672199999983, 0.10000694399999999, 0.10000662500000024, 0.10000694399999999, 0.10000663900000006, 0.1000069309999998, 0.10000663900000006, 0.10000693100000024, 0.10000663900000006, 0.10000692999999972, 0.10000663900000006, 0.10000694399999999, 0.10000662500000024, 0.100007014, 0.10000663900000006, 0.1000069309999998, 0.10000675000000037, 0.10000690300000015, 0.10000663899999962, 0.10000694500000007, 0.10000663799999998, 0.10000694499999963, 0.1000066249999998, 0.100007014, 0.10000665299999945, 0.10000693100000024, 0.10000663900000006, 0.10000694499999963, 0.10000666699999972, 0.10000693000000016, 0.10000665299999945]</msg>
<status status="PASS" starttime="20201030 11:52:48.347" endtime="20201030 11:52:48.349"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:48.343" endtime="20201030 11:52:48.350"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.811" endtime="20201030 11:52:48.350"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201030 11:52:41.736" endtime="20201030 11:52:48.351" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:48.358" endtime="20201030 11:52:48.377"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:48.356" endtime="20201030 11:52:48.378"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:48.392" endtime="20201030 11:52:48.410"></status>
</kw>
<msg timestamp="20201030 11:52:48.410" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:48.390" endtime="20201030 11:52:48.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:48.413" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:48.411" endtime="20201030 11:52:48.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:52:48.416" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:52:48.414" endtime="20201030 11:52:48.416"></status>
</kw>
<status status="FAIL" starttime="20201030 11:52:48.388" endtime="20201030 11:52:48.417"></status>
</kw>
<status status="FAIL" starttime="20201030 11:52:48.384" endtime="20201030 11:52:48.418"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:48.383" endtime="20201030 11:52:48.418"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:52:48.422" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:52:48.421" endtime="20201030 11:52:48.422"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:48.419" endtime="20201030 11:52:48.422"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:48.382" endtime="20201030 11:52:48.422"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:48.382" endtime="20201030 11:52:48.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:48.423" endtime="20201030 11:52:48.425"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:48.380" endtime="20201030 11:52:48.425"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:48.379" endtime="20201030 11:52:48.426"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:48.355" endtime="20201030 11:52:48.426"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:48.435" endtime="20201030 11:52:54.557"></status>
</kw>
<msg timestamp="20201030 11:52:54.558" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:48.433" endtime="20201030 11:52:54.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:54.563" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:54.560" endtime="20201030 11:52:54.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:54.565" endtime="20201030 11:52:54.568"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:48.431" endtime="20201030 11:52:54.570"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:48.429" endtime="20201030 11:52:54.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:54.577" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 20, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 11:52:54.573" endtime="20201030 11:52:54.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:54.585" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 11:52:54.583" endtime="20201030 11:52:54.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:54.590" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 11:52:54.587" endtime="20201030 11:52:54.590"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:54.578" endtime="20201030 11:52:54.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:54.600" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 11:52:54.598" endtime="20201030 11:52:54.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:54.605" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 11:52:54.603" endtime="20201030 11:52:54.606"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:54.593" endtime="20201030 11:52:54.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:54.615" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 11:52:54.613" endtime="20201030 11:52:54.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:54.620" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201030 11:52:54.618" endtime="20201030 11:52:54.620"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:54.608" endtime="20201030 11:52:54.622"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:54.638" endtime="20201030 11:52:54.939"></status>
</kw>
<msg timestamp="20201030 11:52:54.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067147736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.167350014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:54.635" endtime="20201030 11:52:54.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:54.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067147736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.167350014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:54.943" endtime="20201030 11:52:54.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:54.951" endtime="20201030 11:52:54.953"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:54.629" endtime="20201030 11:52:54.954"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:54.623" endtime="20201030 11:52:54.954"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 11:52:54.958" level="INFO">${FILTERED} = [{'diff': 0.10020227799999999}, {'diff': 0.10003844399999998}, {'diff': 0.09979662500000003}, {'diff': 0.10000711100000004}, {'diff': 0.10000718000000003}, {'diff': 0.10000772299999994}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201030 11:52:54.955" endtime="20201030 11:52:54.958"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:54.962" level="INFO">${RESULT} = {'diff': [0.10020227799999999, 0.10003844399999998, 0.09979662500000003, 0.10000711100000004, 0.10000718000000003, 0.10000772299999994, 0.10000597300000003, 0.10000762499999993, 0.100006084, 0.1000076...</msg>
<status status="PASS" starttime="20201030 11:52:54.959" endtime="20201030 11:52:54.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:54.966" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 11:52:54.965" endtime="20201030 11:52:54.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:54.968" level="INFO">VALUE: [0.10020227799999999, 0.10003844399999998, 0.09979662500000003, 0.10000711100000004, 0.10000718000000003, 0.10000772299999994, 0.10000597300000003, 0.10000762499999993, 0.100006084, 0.10000762499999993, 0.10000598599999999, 0.1000077370000001, 0.10000597199999994, 0.10000763899999998, 0.10000599999999982, 0.10000762499999993, 0.10000598599999999, 0.10000762500000016, 0.10000606899999998, 0.10000770799999992, 0.10000600000000004, 0.10000765300000003, 0.10000601399999987, 0.10000758399999965, 0.10000606899999998, 0.10000776300000025, 5.409999999095305e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 5.420000004363601e-07, 4.7199999997360464e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.419999995481817e-07, 0.1000064579999993, 0.10000768100000013, 0.10000595900000064]</msg>
<status status="PASS" starttime="20201030 11:52:54.967" endtime="20201030 11:52:54.969"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:54.963" endtime="20201030 11:52:54.970"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:48.427" endtime="20201030 11:52:54.970"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201030 11:52:48.353" endtime="20201030 11:52:54.971" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:54.979" endtime="20201030 11:52:54.998"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:54.977" endtime="20201030 11:52:54.999"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:55.012" endtime="20201030 11:52:55.031"></status>
</kw>
<msg timestamp="20201030 11:52:55.032" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:55.010" endtime="20201030 11:52:55.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:55.034" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:55.033" endtime="20201030 11:52:55.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:52:55.037" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:52:55.035" endtime="20201030 11:52:55.037"></status>
</kw>
<status status="FAIL" starttime="20201030 11:52:55.008" endtime="20201030 11:52:55.038"></status>
</kw>
<status status="FAIL" starttime="20201030 11:52:55.006" endtime="20201030 11:52:55.039"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:55.004" endtime="20201030 11:52:55.039"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:52:55.043" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:52:55.042" endtime="20201030 11:52:55.043"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:55.040" endtime="20201030 11:52:55.043"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:55.003" endtime="20201030 11:52:55.043"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:55.003" endtime="20201030 11:52:55.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:55.044" endtime="20201030 11:52:55.046"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:55.001" endtime="20201030 11:52:55.046"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:55.000" endtime="20201030 11:52:55.047"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:54.975" endtime="20201030 11:52:55.047"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:55.056" endtime="20201030 11:53:01.178"></status>
</kw>
<msg timestamp="20201030 11:53:01.179" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:55.054" endtime="20201030 11:53:01.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:01.184" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:01.181" endtime="20201030 11:53:01.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:01.187" endtime="20201030 11:53:01.190"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:55.052" endtime="20201030 11:53:01.191"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:55.050" endtime="20201030 11:53:01.192"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:01.198" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 25, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 11:53:01.194" endtime="20201030 11:53:01.198"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:01.209" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 11:53:01.204" endtime="20201030 11:53:01.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:01.213" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 11:53:01.211" endtime="20201030 11:53:01.214"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:01.199" endtime="20201030 11:53:01.215"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:01.223" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 11:53:01.221" endtime="20201030 11:53:01.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:01.227" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 11:53:01.225" endtime="20201030 11:53:01.228"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:01.216" endtime="20201030 11:53:01.229"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:01.237" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 11:53:01.235" endtime="20201030 11:53:01.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:01.241" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201030 11:53:01.239" endtime="20201030 11:53:01.242"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:01.230" endtime="20201030 11:53:01.243"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:01.249" endtime="20201030 11:53:01.544"></status>
</kw>
<msg timestamp="20201030 11:53:01.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066901583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.167188486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:01.248" endtime="20201030 11:53:01.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:01.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066901583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.167188486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:01.548" endtime="20201030 11:53:01.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:01.557" endtime="20201030 11:53:01.558"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:01.245" endtime="20201030 11:53:01.559"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:01.243" endtime="20201030 11:53:01.559"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 11:53:01.563" level="INFO">${FILTERED} = [{'diff': 0.100286903}, {'diff': 0.10004179100000002}, {'diff': 0.09971068100000002}, {'diff': 0.10000715300000002}, {'diff': 0.10000704100000002}, {'diff': 0.100006653}, {'diff': 5.419999999922709e-0...</msg>
<status status="PASS" starttime="20201030 11:53:01.560" endtime="20201030 11:53:01.564"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:01.569" level="INFO">${RESULT} = {'diff': [0.100286903, 0.10004179100000002, 0.09971068100000002, 0.10000715300000002, 0.10000704100000002, 0.100006653, 5.419999999922709e-07, 4.7199999997360464e-07, 5.410000000205528e-07, 5.26999999...</msg>
<status status="PASS" starttime="20201030 11:53:01.565" endtime="20201030 11:53:01.569"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:01.573" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 11:53:01.572" endtime="20201030 11:53:01.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:01.575" level="INFO">VALUE: [0.100286903, 0.10004179100000002, 0.09971068100000002, 0.10000715300000002, 0.10000704100000002, 0.100006653, 5.419999999922709e-07, 4.7199999997360464e-07, 5.410000000205528e-07, 5.269999998613883e-07, 5.410000001315751e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.10000709700000021, 0.1000069589999999, 0.10000669400000017, 0.10000697200000008, 0.1000065969999997, 0.10000708400000002, 0.10000658399999995, 0.10000698699999999, 0.10000661099999997, 0.10000697200000008, 0.10000661099999997, 0.10000698599999991, 0.1000066249999998, 0.1000069580000007, 0.1000066799999999, 0.10000698600000035, 0.10000662500000068, 0.1000069589999999, 0.1000066799999999, 0.10000706900000012, 0.10000659700000014, 0.10000698600000035, 0.1000066120000005, 0.10000698600000035]</msg>
<status status="PASS" starttime="20201030 11:53:01.574" endtime="20201030 11:53:01.576"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:01.569" endtime="20201030 11:53:01.577"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:55.048" endtime="20201030 11:53:01.577"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201030 11:52:54.973" endtime="20201030 11:53:01.582" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 11:52:20.483" endtime="20201030 11:53:01.590"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f767zi</item>
<item name="RIOT-Version">2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased</item>
</metadata>
<status status="PASS" starttime="20201030 11:50:17.575" endtime="20201030 11:53:01.625"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_nucleo-f767zi</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
